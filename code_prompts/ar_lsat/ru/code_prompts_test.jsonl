{"id": "AR-LSAT_0_08192f129b", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle", "Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore", "Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving", "Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore", "Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13, 18], "consequent": 20}, {"antecedents": [8, 19], "consequent": 21}, {"antecedents": [9, 15, 16], "consequent": 22}, {"antecedents": [14, 17, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 & sent18 -> int1: If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D.; sent19 & sent8 -> int2: George can only give a report on Tuesday, so we rule out option E.; sent15 & sent16 & sent9 -> int3: Olivia and Robert cannot give afternoon reports, so we rule out option A and B.; int1 & int2 & int3 & sent14 & sent17 -> int4: Answer is C.; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Каким будет график выступлений учащихся?", "15": "А) В понедельник утром Хелен, в понедельник днем Роберт; во вторник утром Оливия, во вторник днем Ирвинг, в среду утром Ленор, в среду днем Кайл.", "16": "B) В понедельник утром Ирвинг, в понедельник днем Оливия; во вторник утром Хелен, во вторник днем Кайл; в среду утром Нина, в среду днем Ленор.", "17": "C) В понедельник утром Ленор, в понедельник днем Хелен, во вторник утром Джордж, во вторник днем Кайл; в среду утром Роберт, в среду днем Ирвинг.", "18": "D) В понедельник утром Нина, в понедельник днем Хелен, во вторник утром Роберт, во вторник днем Ирвинг, в среду утром Оливия, в среду днем Ленор.", "19": "E) В понедельник утром Оливия, в понедельник днем Нина, во вторник утром Ирвинг, во вторник днем Хелен, в среду утром Кайл, в среду днем Джордж.", "20": "Если Нина зачитает доклад в понедельник или вторник, Хелен и Ирвинг должны выступить на следующий день, поэтому вариант Г исключается.", "21": "Джордж может представить доклад только во вторник, поэтому мы исключаем вариант Д.", "22": "Оливия и Роберт не могут выступать днем, поэтому варианты А и Б не подходят.", "23": "Правильный ответ: В.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Каким будет график выступлений учащихся?']\nquestion = 'А) В понедельник утром Хелен, в понедельник днем Роберт; во вторник утром Оливия, во вторник днем Ирвинг, в среду утром Ленор, в среду днем Кайл.'\nchoices = { 'B': 'В понедельник утром Ирвинг, в понедельник днем Оливия; во вторник утром Хелен, во вторник днем Кайл; в среду утром Нина, в среду днем Ленор.',\n  'C': 'В понедельник утром Ленор, в понедельник днем Хелен, во вторник утром Джордж, во вторник днем Кайл; в среду утром Роберт, в среду днем Ирвинг.',\n  'D': 'В понедельник утром Нина, в понедельник днем Хелен, во вторник утром Роберт, во вторник днем Ирвинг, в среду утром Оливия, в среду днем Ленор.',\n  'E': 'В понедельник утром Оливия, в понедельник днем Нина, во вторник утром Ирвинг, во вторник днем Хелен, в среду утром Кайл, в среду днем Джордж.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если с докладом представит Нина,', 'на следующий день с докладом должны выступить Хелен', 'и Ирвинг.', 'Это требование не действует, если доклад Нины приходится на среду.', 'D) В понедельник утром Нина, в понедельник днем Хелен, во вторник утром Роберт, во вторник днем Ирвинг, в среду утром Оливия, в среду днем Ленор.']\nnew_fact = infer_new_fact(selected) # 'Если Нина зачитает доклад в понедельник или вторник, Хелен и Ирвинг должны выступить на следующий день, поэтому вариант Г исключается.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторник — это единственный день, когда с докладом может выступить Джордж.', 'E) В понедельник утром Оливия, в понедельник днем Нина, во вторник утром Ирвинг, во вторник днем Хелен, в среду утром Кайл, в среду днем Джордж.']\nnew_fact = infer_new_fact(selected) # 'Джордж может представить доклад только во вторник, поэтому мы исключаем вариант Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Оливия, ни Роберт не могут выступать днем.', 'А) В понедельник утром Хелен, в понедельник днем Роберт; во вторник утром Оливия, во вторник днем Ирвинг, в среду утром Ленор, в среду днем Кайл.', 'B) В понедельник утром Ирвинг, в понедельник днем Оливия; во вторник утром Хелен, во вторник днем Кайл; в среду утром Нина, в среду днем Ленор.']\nnew_fact = infer_new_fact(selected) # 'Оливия и Роберт не могут выступать днем, поэтому варианты А и Б не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каким будет график выступлений учащихся?', 'C) В понедельник утром Ленор, в понедельник днем Хелен, во вторник утром Джордж, во вторник днем Кайл; в среду утром Роберт, в среду днем Ирвинг.', 'Если Нина зачитает доклад в понедельник или вторник, Хелен и Ирвинг должны выступить на следующий день, поэтому вариант Г исключается.', 'Джордж может представить доклад только во вторник, поэтому мы исключаем вариант Д.', 'Оливия и Роберт не могут выступать днем, поэтому варианты А и Б не подходят.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_1_765d8869dc", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen, George, and Nina", "Irving, Robert, and Helen", "Nina, Helen, and Olivia", "Olivia, Robert, and Irving", "Robert, George, and Helen"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 14], "consequent": 21}, {"antecedents": [9, 16, 17, 18, 20, 21], "consequent": 22}, {"antecedents": [14, 15, 19, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent14 & sent2 -> int1: If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports.; int1 & sent16 & sent17 & sent18 & sent20 & sent9 -> int2: Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present.; int2 & sent14 & sent15 & sent19 -> int3: The answer is D.; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Если Кайл и Ленор не будут выступать,", "15": "доклады утром в понедельник, вторник и среду, соответственно, могут представить", "16": "А) Хелен, Джордж и Нина.", "17": "B) Ирвинг, Роберт и Хелен.", "18": "C) Нина, Хелен и Оливия.", "19": "D) Оливия, Роберт и Ирвинг.", "20": "E) Роберт, Джордж и Хелен.", "21": "Если Кайл (K) и Ленор (Л) не выступают, значит выступят Джордж (E), Хелен (Х), Ирвинг (И), Нина (Н), Оливия (O) и Роберт (Р).", "22": "Оливия и Роберт должны выступать утром, поэтому мы исключаем варианты А, Б, В и Д, где нет их обоих.", "23": "Правильный ответ: Г.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Если Кайл и Ленор не будут выступать,',\n  'доклады утром в понедельник, вторник и среду, соответственно, могут представить']\nquestion = 'А) Хелен, Джордж и Нина.'\nchoices = {'B': 'Ирвинг, Роберт и Хелен.', 'C': 'Нина, Хелен и Оливия.', 'D': 'Оливия, Роберт и Ирвинг.', 'E': 'Роберт, Джордж и Хелен.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.', 'Если Кайл и Ленор не будут выступать,']\nnew_fact = infer_new_fact(selected) # 'Если Кайл (K) и Ленор (Л) не выступают, значит выступят Джордж (E), Хелен (Х), Ирвинг (И), Нина (Н), Оливия (O) и Роберт (Р).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Оливия, ни Роберт не могут выступать днем.', 'А) Хелен, Джордж и Нина.', 'B) Ирвинг, Роберт и Хелен.', 'C) Нина, Хелен и Оливия.', 'E) Роберт, Джордж и Хелен.', 'Если Кайл (K) и Ленор (Л) не выступают, значит выступят Джордж (E), Хелен (Х), Ирвинг (И), Нина (Н), Оливия (O) и Роберт (Р).']\nnew_fact = infer_new_fact(selected) # 'Оливия и Роберт должны выступать утром, поэтому мы исключаем варианты А, Б, В и Д, где нет их обоих.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Кайл и Ленор не будут выступать,', 'доклады утром в понедельник, вторник и среду, соответственно, могут представить', 'D) Оливия, Роберт и Ирвинг.', 'Оливия и Роберт должны выступать утром, поэтому мы исключаем варианты А, Б, В и Д, где нет их обоих.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_2_291114c694", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["George and Lenore", "Helen and Nina", "Irving and Robert", "Kyle and Nina", "Olivia and Kyle"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [14, 15, 18, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 -> int1: If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day.; int1 -> int2: If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving.; int2 & sent14 & sent15 & sent18 -> int3: The answer is B.; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Укажите пару учащихся,", "15": "которые, если будут выступать с докладом в один день,", "16": "должны сделать это в среду?", "17": "А) Джордж и Ленор.", "18": "B) Хелен и Нина.", "19": "C) Ирвинг и Роберт.", "20": "D) Кайл и Нина.", "21": "E) Оливия и Кайл.", "22": "Если Нина зачитает доклад в понедельник или вторник, то Хелен и Ирвинг должны выступить на следующий день.", "23": "Только если Нина выступит в среду, в этот же день смогут выступить Хелен или Ирвинг.", "24": "Правильный ответ: Б.", "25": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Укажите пару учащихся,',\n  'которые, если будут выступать с докладом в один день,',\n  'должны сделать это в среду?']\nquestion = 'А) Джордж и Ленор.'\nchoices = {'B': 'Хелен и Нина.', 'C': 'Ирвинг и Роберт.', 'D': 'Кайл и Нина.', 'E': 'Оливия и Кайл.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если с докладом представит Нина,', 'на следующий день с докладом должны выступить Хелен', 'и Ирвинг.', 'Это требование не действует, если доклад Нины приходится на среду.']\nnew_fact = infer_new_fact(selected) # 'Если Нина зачитает доклад в понедельник или вторник, то Хелен и Ирвинг должны выступить на следующий день.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Нина зачитает доклад в понедельник или вторник, то Хелен и Ирвинг должны выступить на следующий день.']\nnew_fact = infer_new_fact(selected) # 'Только если Нина выступит в среду, в этот же день смогут выступить Хелен или Ирвинг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите пару учащихся,', 'которые, если будут выступать с докладом в один день,', 'B) Хелен и Нина.', 'Только если Нина выступит в среду, в этот же день смогут выступить Хелен или Ирвинг.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_3_3d59347ca7", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen gives a report on Wednesday.", "Nina gives a report on Monday.", "Nina gives a report on Tuesday.", "Olivia gives a report on Monday.", "Robert gives a report on Wednesday."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 14], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [14, 22, 23], "consequent": 24}, {"antecedents": [14, 15, 18, 19, 22, 24], "consequent": 25}, {"antecedents": [14, 15, 21, 22, 25], "consequent": 26}, {"antecedents": [9, 26], "consequent": 27}, {"antecedents": [20, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 17, 25, 26, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "linearized_output_en": "sent14 & sent8 -> int1: George can only give a report on Tuesday.; sent10 & sent11 & sent12 -> int2: Since Helen and Irving must give a report on the day after Nina gives a report,; int1 & int2 & sent14 -> int3: Nina cannot give a report on Monday since Tuesday will have 1 slot occupied.; int1 & int3 & sent14 & sent15 & sent18 & sent19 -> int4: Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.; int1 & int4 & sent14 & sent15 & sent21 -> int5: Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.; int5 & sent9 -> int6: Olivia and Robert can only present in the morning, so Robert presents Monday morning; int6 & sent20 -> int7: Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D.; int4 & int5 & int7 & sent14 & sent15 & sent16 & sent17 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Если Джордж, Нина и Роберт выступят с докладами", "15": "в разные дни,", "16": "какое из утверждений ниже истинно?", "17": "А) Хелен выступает с докладом в среду.", "18": "B) Нина выступает с докладом в понедельник.", "19": "C) Нина выступает с докладом во вторник.", "20": "D) Оливия выступает с докладом в понедельник.", "21": "E) Роберт выступает с докладом в среду.", "22": "Джордж может зачитать доклад только во вторник.", "23": "Поскольку Хелен и Ирвинг должны выступать на следующий день после доклада Нины,", "24": "Нина не может выступить в понедельник, так как во вторник уже занято 1 место.", "25": "Нина должна выступить в среду, так как ее выступление не может проходить в один день с Джорджем, поэтому мы исключаем варианты Б и В.", "26": "Роберт должен выступить в понедельник, потому что его доклад не может приходиться на тот же день, что у Джорджа и Нины, поэтому вариант Д не подходит.", "27": "Оливия и Роберт могут выступать только утром, поэтому Роберт зачитает доклад в понедельник утром.", "28": "Поскольку утреннее время в понедельник уже занято, Оливия вообще не сможет выступить в понедельник, поэтому мы исключаем вариант Г.", "29": "Правильный ответ: А.", "30": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Если Джордж, Нина и Роберт выступят с докладами',\n  'в разные дни,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Хелен выступает с докладом в среду.'\nchoices = { 'B': 'Нина выступает с докладом в понедельник.',\n  'C': 'Нина выступает с докладом во вторник.',\n  'D': 'Оливия выступает с докладом в понедельник.',\n  'E': 'Роберт выступает с докладом в среду.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Вторник — это единственный день, когда с докладом может выступить Джордж.', 'Если Джордж, Нина и Роберт выступят с докладами']\nnew_fact = infer_new_fact(selected) # 'Джордж может зачитать доклад только во вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если с докладом представит Нина,', 'на следующий день с докладом должны выступить Хелен', 'и Ирвинг.']\nnew_fact = infer_new_fact(selected) # 'Поскольку Хелен и Ирвинг должны выступать на следующий день после доклада Нины,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джордж, Нина и Роберт выступят с докладами', 'Джордж может зачитать доклад только во вторник.', 'Поскольку Хелен и Ирвинг должны выступать на следующий день после доклада Нины,']\nnew_fact = infer_new_fact(selected) # 'Нина не может выступить в понедельник, так как во вторник уже занято 1 место.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джордж, Нина и Роберт выступят с докладами', 'в разные дни,', 'B) Нина выступает с докладом в понедельник.', 'C) Нина выступает с докладом во вторник.', 'Джордж может зачитать доклад только во вторник.', 'Нина не может выступить в понедельник, так как во вторник уже занято 1 место.']\nnew_fact = infer_new_fact(selected) # 'Нина должна выступить в среду, так как ее выступление не может проходить в один день с Джорджем, поэтому мы исключаем варианты Б и В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джордж, Нина и Роберт выступят с докладами', 'в разные дни,', 'E) Роберт выступает с докладом в среду.', 'Джордж может зачитать доклад только во вторник.', 'Нина должна выступить в среду, так как ее выступление не может проходить в один день с Джорджем, поэтому мы исключаем варианты Б и В.']\nnew_fact = infer_new_fact(selected) # 'Роберт должен выступить в понедельник, потому что его доклад не может приходиться на тот же день, что у Джорджа и Нины, поэтому вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Оливия, ни Роберт не могут выступать днем.', 'Роберт должен выступить в понедельник, потому что его доклад не может приходиться на тот же день, что у Джорджа и Нины, поэтому вариант Д не подходит.']\nnew_fact = infer_new_fact(selected) # 'Оливия и Роберт могут выступать только утром, поэтому Роберт зачитает доклад в понедельник утром.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Оливия выступает с докладом в понедельник.', 'Оливия и Роберт могут выступать только утром, поэтому Роберт зачитает доклад в понедельник утром.']\nnew_fact = infer_new_fact(selected) # 'Поскольку утреннее время в понедельник уже занято, Оливия вообще не сможет выступить в понедельник, поэтому мы исключаем вариант Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джордж, Нина и Роберт выступят с докладами', 'в разные дни,', 'какое из утверждений ниже истинно?', 'А) Хелен выступает с докладом в среду.', 'Нина должна выступить в среду, так как ее выступление не может проходить в один день с Джорджем, поэтому мы исключаем варианты Б и В.', 'Роберт должен выступить в понедельник, потому что его доклад не может приходиться на тот же день, что у Джорджа и Нины, поэтому вариант Д не подходит.', 'Поскольку утреннее время в понедельник уже занято, Оливия вообще не сможет выступить в понедельник, поэтому мы исключаем вариант Г.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_4_5740a46512", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Irving, Lenore, and Nina", "Lenore, George, and Irving", "Nina, Irving, and Lenore", "Robert, George, and Irving", "Robert, Irving, and Lenore"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [14, 15], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [8], "consequent": 25}, {"antecedents": [9], "consequent": 26}, {"antecedents": [22, 24, 25, 26], "consequent": 27}, {"antecedents": [16, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 20, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "linearized_output_en": "sent14 & sent15 -> int1: We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.; sent10 & sent11 & sent12 -> int2: If Nina presents on Monday, then Helen and Irving must present on Tuesday.; int1 & int2 -> int3: We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday.; sent8 -> int4: George cannot present on Monday or Tuesday.; sent9 -> int5: If Olivia and Robert present, they can only present in the morning.; int1 & int3 & int4 & int5 -> int6: So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can.; int6 & sent16 -> int7: Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot.; int7 & sent14 & sent15 & sent16 & sent20 -> int8: The answer is D.; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Если Кайл представит доклад днем во вторник,", "15": "а Хелен — днем в среду,", "16": "какие учащиеся выступят утром в понедельник, вторник и среду, соответственно?", "17": "А) Ирвинг, Ленор и Нина.", "18": "B) Ленор, Джордж и Ирвинг.", "19": "C) Нина, Ирвинг и Ленор.", "20": "D) Роберт, Джордж и Ирвинг.", "21": "E) Роберт, Ирвинг и Ленор.", "22": "Мы знаем, что Кайл представляет доклад днем во вторник, а Хелен — днем в среду.", "23": "Если Нина выступит в понедельник, то Хелен и Ирвинг должны выступить во вторник.", "24": "Мы знаем, что Хелен выступает в среду, а одно место во вторник уже занято Кайлом, поэтому выступить в понедельник Нина не может.", "25": "Джордж не может представить доклад ни в понедельник, ни во вторник.", "26": "Если доклад зачитают Оливия и Роберт, они могут сделать это только утром.", "27": "Итак, мы знаем, что Кайл, Хелен, Нина, Джордж, Оливия и Роберт не смогут выступить в понедельник днем, поэтому остаются только Ленор или Ирвинг.", "28": "Таким образом, доклады по утрам могут представлять только те учащиеся, среди которых нет Ленора или Ирвинга, поскольку один из них должен выступать в понедельник днем.", "29": "Правильный ответ: Г.", "30": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Если Кайл представит доклад днем во вторник,',\n  'а Хелен —\\xa0днем в среду,',\n  'какие учащиеся выступят утром в понедельник, вторник и среду, соответственно?']\nquestion = 'А) Ирвинг, Ленор и Нина.'\nchoices = {'B': 'Ленор, Джордж и Ирвинг.', 'C': 'Нина, Ирвинг и Ленор.', 'D': 'Роберт, Джордж и Ирвинг.', 'E': 'Роберт, Ирвинг и Ленор.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если Кайл представит доклад днем во вторник,', 'а Хелен —\\xa0днем в среду,']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что Кайл представляет доклад днем во вторник, а Хелен — днем в среду.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если с докладом представит Нина,', 'на следующий день с докладом должны выступить Хелен', 'и Ирвинг.']\nnew_fact = infer_new_fact(selected) # 'Если Нина выступит в понедельник, то Хелен и Ирвинг должны выступить во вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мы знаем, что Кайл представляет доклад днем во вторник, а Хелен — днем в среду.', 'Если Нина выступит в понедельник, то Хелен и Ирвинг должны выступить во вторник.']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что Хелен выступает в среду, а одно место во вторник уже занято Кайлом, поэтому выступить в понедельник Нина не может.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторник — это единственный день, когда с докладом может выступить Джордж.']\nnew_fact = infer_new_fact(selected) # 'Джордж не может представить доклад ни в понедельник, ни во вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Оливия, ни Роберт не могут выступать днем.']\nnew_fact = infer_new_fact(selected) # 'Если доклад зачитают Оливия и Роберт, они могут сделать это только утром.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мы знаем, что Кайл представляет доклад днем во вторник, а Хелен — днем в среду.', 'Мы знаем, что Хелен выступает в среду, а одно место во вторник уже занято Кайлом, поэтому выступить в понедельник Нина не может.', 'Джордж не может представить доклад ни в понедельник, ни во вторник.', 'Если доклад зачитают Оливия и Роберт, они могут сделать это только утром.']\nnew_fact = infer_new_fact(selected) # 'Итак, мы знаем, что Кайл, Хелен, Нина, Джордж, Оливия и Роберт не смогут выступить в понедельник днем, поэтому остаются только Ленор или Ирвинг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какие учащиеся выступят утром в понедельник, вторник и среду, соответственно?', 'Итак, мы знаем, что Кайл, Хелен, Нина, Джордж, Оливия и Роберт не смогут выступить в понедельник днем, поэтому остаются только Ленор или Ирвинг.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, доклады по утрам могут представлять только те учащиеся, среди которых нет Ленора или Ирвинга, поскольку один из них должен выступать в понедельник днем.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Кайл представит доклад днем во вторник,', 'а Хелен —\\xa0днем в среду,', 'какие учащиеся выступят утром в понедельник, вторник и среду, соответственно?', 'D) Роберт, Джордж и Ирвинг.', 'Таким образом, доклады по утрам могут представлять только те учащиеся, среди которых нет Ленора или Ирвинга, поскольку один из них должен выступать в понедельник днем.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_5_bd579d212a", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen gives a report on Monday.", "Irving gives a report on Monday.", "Irving gives a report on Wednesday.", "Kyle gives a report on Tuesday.", "Kyle gives a report on Wednesday."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [14, 15, 16], "consequent": 23}, {"antecedents": [9], "consequent": 24}, {"antecedents": [23, 24], "consequent": 25}, {"antecedents": [2, 25], "consequent": 26}, {"antecedents": [8, 26], "consequent": 27}, {"antecedents": [10, 11, 12, 26], "consequent": 28}, {"antecedents": [27, 28], "consequent": 29}, {"antecedents": [27, 29], "consequent": 30}, {"antecedents": [14, 15, 16, 17, 19, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent14 & sent15 & sent16 -> int1: Helen (H), Kyle (K), and Lenore (L) present the morning reports.; sent9 -> int2: Olivia (O) and Robert (R) can only give morning reports.; int1 & int2 -> int3: Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports.; int3 & sent2 -> int4: Irving (I), George (G), and Nina (N) must give the afternoon reports; int4 & sent8 -> int5: George can only present on Tuesday, so he presents on Tuesday afternoon.; int4 & sent10 & sent11 & sent12 -> int6: If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday.; int5 & int6 -> int7: We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report.; int5 & int7 -> int8: Irving must give the Monday afternoon report since all the other days are occupied.; int8 & sent14 & sent15 & sent16 & sent17 & sent19 -> int9: The answer is B.; int9 -> int10: The answer is B);", "textual_logical_units": {"1": "В семинаре участвуют восемь учащихся:", "2": "Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.", "3": "Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:", "4": "в понедельник, вторник и среду.", "5": "Каждый день будут заслушиваться ровно два доклада:", "6": "утром и днем.", "7": "При этом будут действовать указанные ниже условия.", "8": "Вторник — это единственный день, когда с докладом может выступить Джордж.", "9": "Ни Оливия, ни Роберт не могут выступать днем.", "10": "Если с докладом представит Нина,", "11": "на следующий день с докладом должны выступить Хелен", "12": "и Ирвинг.", "13": "Это требование не действует, если доклад Нины приходится на среду.", "14": "Если Хелен, Кайл и Ленор", "15": "(в любом порядке)", "16": "представляют доклад утром,", "17": "какое из следующих утверждений истинно?", "18": "А) Хелен выступает с докладом в понедельник.", "19": "B) Ирвинг выступает с докладом в понедельник.", "20": "C) Ирвинг выступает с докладом в среду.", "21": "D) Кайл выступает с докладом во вторник.", "22": "E) Кайл выступает с докладом в среду.", "23": "Хелен (Х), Кайл (K) и Ленор (Л) представляют доклады утром.", "24": "Оливия (О) и Роберт (Р) могут выступать только утром.", "25": "Поскольку Х, К и Л уже заняли места утром, то О, Р, Х, К и Л не могут выступать с докладами днем.", "26": "Ирвинг (И), Джордж (E) и Нина (Н) должны представить доклады днем.", "27": "Джордж может выступать только во вторник, поэтому он выступает во вторник днем.", "28": "Если Нина представит доклад в понедельник, Ирвинг и Хелен должны выступить во вторник.", "29": "Мы знаем, что Джордж и кто-то из тройки Хелен, Кайл и Ленор выступают во вторник, поэтому Нина должна представить доклад в среду днем.", "30": "Ирвинг должен выступить в понедельник днем, так как все остальные дни заняты.", "31": "Правильный ответ: Б.", "32": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В семинаре участвуют восемь учащихся:',\n  'Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.',\n  'Ровно шесть человек выступят с индивидуальными устными докладами в течение трех дней подряд:',\n  'в понедельник, вторник и среду.',\n  'Каждый день будут заслушиваться ровно два доклада:',\n  'утром и днем.',\n  'При этом будут действовать указанные ниже условия.',\n  'Вторник — это единственный день, когда с докладом может выступить Джордж.',\n  'Ни Оливия, ни Роберт не могут выступать днем.',\n  'Если с докладом представит Нина,',\n  'на следующий день с докладом должны выступить Хелен',\n  'и Ирвинг.',\n  'Это требование не действует, если доклад Нины приходится на среду.',\n  'Если Хелен, Кайл и Ленор',\n  '(в любом порядке)',\n  'представляют доклад утром,',\n  'какое из следующих утверждений истинно?']\nquestion = 'А) Хелен выступает с докладом в понедельник.'\nchoices = { 'B': 'Ирвинг выступает с докладом в понедельник.',\n  'C': 'Ирвинг выступает с докладом в среду.',\n  'D': 'Кайл выступает с докладом во вторник.',\n  'E': 'Кайл выступает с докладом в среду.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если Хелен, Кайл и Ленор', '(в любом порядке)', 'представляют доклад утром,']\nnew_fact = infer_new_fact(selected) # 'Хелен (Х), Кайл (K) и Ленор (Л) представляют доклады утром.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Оливия, ни Роберт не могут выступать днем.']\nnew_fact = infer_new_fact(selected) # 'Оливия (О) и Роберт (Р) могут выступать только утром.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Хелен (Х), Кайл (K) и Ленор (Л) представляют доклады утром.', 'Оливия (О) и Роберт (Р) могут выступать только утром.']\nnew_fact = infer_new_fact(selected) # 'Поскольку Х, К и Л уже заняли места утром, то О, Р, Х, К и Л не могут выступать с докладами днем.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джордж, Хелен, Ирвинг, Кайл, Ленор, Нина, Оливия и Роберт.', 'Поскольку Х, К и Л уже заняли места утром, то О, Р, Х, К и Л не могут выступать с докладами днем.']\nnew_fact = infer_new_fact(selected) # 'Ирвинг (И), Джордж (E) и Нина (Н) должны представить доклады днем.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторник — это единственный день, когда с докладом может выступить Джордж.', 'Ирвинг (И), Джордж (E) и Нина (Н) должны представить доклады днем.']\nnew_fact = infer_new_fact(selected) # 'Джордж может выступать только во вторник, поэтому он выступает во вторник днем.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если с докладом представит Нина,', 'на следующий день с докладом должны выступить Хелен', 'и Ирвинг.', 'Ирвинг (И), Джордж (E) и Нина (Н) должны представить доклады днем.']\nnew_fact = infer_new_fact(selected) # 'Если Нина представит доклад в понедельник, Ирвинг и Хелен должны выступить во вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джордж может выступать только во вторник, поэтому он выступает во вторник днем.', 'Если Нина представит доклад в понедельник, Ирвинг и Хелен должны выступить во вторник.']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что Джордж и кто-то из тройки Хелен, Кайл и Ленор выступают во вторник, поэтому Нина должна представить доклад в среду днем.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джордж может выступать только во вторник, поэтому он выступает во вторник днем.', 'Мы знаем, что Джордж и кто-то из тройки Хелен, Кайл и Ленор выступают во вторник, поэтому Нина должна представить доклад в среду днем.']\nnew_fact = infer_new_fact(selected) # 'Ирвинг должен выступить в понедельник днем, так как все остальные дни заняты.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Хелен, Кайл и Ленор', '(в любом порядке)', 'представляют доклад утром,', 'какое из следующих утверждений истинно?', 'B) Ирвинг выступает с докладом в понедельник.', 'Ирвинг должен выступить в понедельник днем, так как все остальные дни заняты.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_6_f738be1d3d", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one French novel, two Russian novels, one French play, one Russian play", "two French novels, one Russian novel, two French plays, one Russian play", "two French novels, two Russian novels, two French plays", "three French novels, one Russian novel, two French plays", "three French novels, two Russian novels, one Russian play"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8, 9, 12], "consequent": 16}, {"antecedents": [7, 11], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [6, 15], "consequent": 19}, {"antecedents": [10, 13, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent12 & sent8 & sent9 -> int1: If both French plays are selected, then the Russian play is not selected. B is not an answer.; sent11 & sent7 -> int2: At least as many French novels as Russian novels should be selected. A is not an answer; sent15 & sent5 -> int3: No more than four French works may be selected. D is not an answer; sent15 & sent6 -> int4: No more than four novels may be selected. E is not an answer; int1 & int2 & int3 & int4 & sent10 & sent13 -> int5: The answer is C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Организатор читательского клуба выберет не менее пяти и", "2": "не более шести из группы работ, в которую входят девять произведений.", "3": "Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.", "4": "Организатор должен отбирать работы в соответствии со следующими условиями.", "5": "Выбрать можно не более четырех французских работ.", "6": "Выбрать необходимо не менее трех, но не более четырех романов.", "7": "Количество французских романов должно быть больше или равно числу русских романов.", "8": "Если будут выбраны обе французские пьесы,", "9": "то русская пьеса не выбирается.", "10": "Какой список работ может выбрать организатор?", "11": "А) Один французский роман, два русских романа, одна французская пьеса, одна русская пьеса.", "12": "B) Два французских романа, один русский роман, две французские пьесы, одна русская пьеса.", "13": "C) Два французских романа, два русских романа, две французские пьесы.", "14": "D) Три французских романа, один русский роман, две французские пьесы.", "15": "E) Три французских романа, два русских романа, одна русская пьеса.", "16": "Если выбраны обе французские пьесы, то русская пьеса не выбирается. Вариант Б не подходит.", "17": "Требуется отобрать как минимум столько же французских романов, сколько и русских. Вариант А не подходит.", "18": "Можно выбрать не более четырех французских работ. Вариант Г не подходит.", "19": "Можно выбрать не более четырех романов. Вариант Д не подходит.", "20": "Правильный ответ: В.", "21": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организатор читательского клуба выберет не менее пяти и',\n  'не более шести из группы работ, в которую входят девять произведений.',\n  'Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.',\n  'Организатор должен отбирать работы в соответствии со следующими условиями.',\n  'Выбрать можно не более четырех французских работ.',\n  'Выбрать необходимо не менее трех, но не более четырех романов.',\n  'Количество французских романов должно быть больше или равно числу русских романов.',\n  'Если будут выбраны обе французские пьесы,',\n  'то русская пьеса не выбирается.',\n  'Какой список работ может выбрать организатор?']\nquestion = 'А) Один французский роман, два русских романа, одна французская пьеса, одна русская пьеса.'\nchoices = { 'B': 'Два французских романа, один русский роман, две французские пьесы, одна русская пьеса.',\n  'C': 'Два французских романа, два русских романа, две французские пьесы.',\n  'D': 'Три французских романа, один русский роман, две французские пьесы.',\n  'E': 'Три французских романа, два русских романа, одна русская пьеса.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если будут выбраны обе французские пьесы,', 'то русская пьеса не выбирается.', 'B) Два французских романа, один русский роман, две французские пьесы, одна русская пьеса.']\nnew_fact = infer_new_fact(selected) # 'Если выбраны обе французские пьесы, то русская пьеса не выбирается. Вариант Б не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество французских романов должно быть больше или равно числу русских романов.', 'А) Один французский роман, два русских романа, одна французская пьеса, одна русская пьеса.']\nnew_fact = infer_new_fact(selected) # 'Требуется отобрать как минимум столько же французских романов, сколько и русских. Вариант А не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать можно не более четырех французских работ.', 'E) Три французских романа, два русских романа, одна русская пьеса.']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не более четырех французских работ. Вариант Г не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать необходимо не менее трех, но не более четырех романов.', 'E) Три французских романа, два русских романа, одна русская пьеса.']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не более четырех романов. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой список работ может выбрать организатор?', 'C) Два французских романа, два русских романа, две французские пьесы.', 'Если выбраны обе французские пьесы, то русская пьеса не выбирается. Вариант Б не подходит.', 'Требуется отобрать как минимум столько же французских романов, сколько и русских. Вариант А не подходит.', 'Можно выбрать не более четырех французских работ. Вариант Г не подходит.', 'Можно выбрать не более четырех романов. Вариант Д не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_7_ae526b34c8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["No Russian novels are selected.", "Exactly one French novel is selected.", "All three plays are selected.", "All three Russian novels are selected.", "All five French works are selected."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 9, 13], "consequent": 16}, {"antecedents": [6, 7, 14], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [1, 2, 7, 8, 9], "consequent": 19}, {"antecedents": [10, 11, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent13 & sent8 & sent9 -> int1: If the French plays are selected, no plays may be selected. C is not an anwer; sent14 & sent6 & sent7 -> int2: At least as many French novels as Russian ones may be selected. D is not an answer; sent15 & sent5 -> int3: At most, four French works may be selected. E is not an answer; sent1 & sent2 & sent7 & sent8 & sent9 -> int4: More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer.; int1 & int2 & int3 & int4 & sent10 & sent11 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Организатор читательского клуба выберет не менее пяти и", "2": "не более шести из группы работ, в которую входят девять произведений.", "3": "Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.", "4": "Организатор должен отбирать работы в соответствии со следующими условиями.", "5": "Выбрать можно не более четырех французских работ.", "6": "Выбрать необходимо не менее трех, но не более четырех романов.", "7": "Количество французских романов должно быть больше или равно числу русских романов.", "8": "Если будут выбраны обе французские пьесы,", "9": "то русская пьеса не выбирается.", "10": "Какое из перечисленных утверждений об отборе работ организатором истинно?", "11": "А) Русские романы не выбраны.", "12": "B) Выбран ровно один французский роман.", "13": "C) Выбраны все три пьесы.", "14": "D) Выбраны все три русских романа.", "15": "E) Выбраны все пять французских работ.", "16": "Если выбраны французские пьесы, то русскую пьесу выбрать нельзя. Вариант В не подходит.", "17": "Количество французских романов должно быть больше или равно числу русских. Вариант Г не подходит.", "18": "Можно выбрать не более четырех французских работ. Вариант Д не подходит.", "19": "Нельзя выбрать больше русских романов, чем французских, а когда выбраны французские пьесы, нельзя будет выбрать русскую. При варианте Б для читательской группы недостаточно работ.", "20": "Правильный ответ: А.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организатор читательского клуба выберет не менее пяти и',\n  'не более шести из группы работ, в которую входят девять произведений.',\n  'Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.',\n  'Организатор должен отбирать работы в соответствии со следующими условиями.',\n  'Выбрать можно не более четырех французских работ.',\n  'Выбрать необходимо не менее трех, но не более четырех романов.',\n  'Количество французских романов должно быть больше или равно числу русских романов.',\n  'Если будут выбраны обе французские пьесы,',\n  'то русская пьеса не выбирается.',\n  'Какое из перечисленных утверждений об отборе работ организатором истинно?']\nquestion = 'А) Русские романы не выбраны.'\nchoices = {'B': 'Выбран ровно один французский роман.', 'C': 'Выбраны все три пьесы.', 'D': 'Выбраны все три русских романа.', 'E': 'Выбраны все пять французских работ.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если будут выбраны обе французские пьесы,', 'то русская пьеса не выбирается.', 'C) Выбраны все три пьесы.']\nnew_fact = infer_new_fact(selected) # 'Если выбраны французские пьесы, то русскую пьесу выбрать нельзя. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать необходимо не менее трех, но не более четырех романов.', 'Количество французских романов должно быть больше или равно числу русских романов.', 'D) Выбраны все три русских романа.']\nnew_fact = infer_new_fact(selected) # 'Количество французских романов должно быть больше или равно числу русских. Вариант Г не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать можно не более четырех французских работ.', 'E) Выбраны все пять французских работ.']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не более четырех французских работ. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Организатор читательского клуба выберет не менее пяти и', 'не более шести из группы работ, в которую входят девять произведений.', 'Количество французских романов должно быть больше или равно числу русских романов.', 'Если будут выбраны обе французские пьесы,', 'то русская пьеса не выбирается.']\nnew_fact = infer_new_fact(selected) # 'Нельзя выбрать больше русских романов, чем французских, а когда выбраны французские пьесы, нельзя будет выбрать русскую. При варианте Б для читательской группы недостаточно работ.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое из перечисленных утверждений об отборе работ организатором истинно?', 'А) Русские романы не выбраны.', 'Если выбраны французские пьесы, то русскую пьесу выбрать нельзя. Вариант В не подходит.', 'Количество французских романов должно быть больше или равно числу русских. Вариант Г не подходит.', 'Можно выбрать не более четырех французских работ. Вариант Д не подходит.', 'Нельзя выбрать больше русских романов, чем французских, а когда выбраны французские пьесы, нельзя будет выбрать русскую. При варианте Б для читательской группы недостаточно работ.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_8_a884112958", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one Russian novel", "two French plays", "one Russian novel, one Russian play", "one Russian novel, two French plays", "two Russian novels, one French play"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [5, 10, 14, 16], "consequent": 18}, {"antecedents": [6, 10, 17], "consequent": 19}, {"antecedents": [3, 11, 12, 13], "consequent": 20}, {"antecedents": [10, 11, 12, 15, 18, 19, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent10 & sent14 & sent16 & sent5 -> int1: No more than four French works may be selected. B and D are not answers; sent10 & sent17 & sent6 -> int2: No more than four novels may be selected. E is not an answer; sent11 & sent12 & sent13 & sent3 -> int3: A complete list should include all types of works. A is not an answer/; int1 & int2 & int3 & sent10 & sent11 & sent12 & sent15 -> int4: The answer is C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Организатор читательского клуба выберет не менее пяти и", "2": "не более шести из группы работ, в которую входят девять произведений.", "3": "Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.", "4": "Организатор должен отбирать работы в соответствии со следующими условиями.", "5": "Выбрать можно не более четырех французских работ.", "6": "Выбрать необходимо не менее трех, но не более четырех романов.", "7": "Количество французских романов должно быть больше или равно числу русских романов.", "8": "Если будут выбраны обе французские пьесы,", "9": "то русская пьеса не выбирается.", "10": "Если среди выбранных произведений будет три французских романа,", "11": "какой из следующих вариантов представляет собой полный", "12": "и точный список оставшихся работ?", "13": "А) Один русский роман.", "14": "B) Две французские пьесы.", "15": "C) Один русский роман, одна русская пьеса.", "16": "D) Один русский роман, две французские пьесы.", "17": "E) Два русских романа, одна французская пьеса.", "18": "Можно выбрать не более четырех французских работ. Варианты Б и Г не подходят.", "19": "Можно выбрать не более четырех романов. Вариант Д не подходит.", "20": "Полный список должен включать все виды работ. Вариант А не подходит.", "21": "Правильный ответ: В.", "22": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организатор читательского клуба выберет не менее пяти и',\n  'не более шести из группы работ, в которую входят девять произведений.',\n  'Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.',\n  'Организатор должен отбирать работы в соответствии со следующими условиями.',\n  'Выбрать можно не более четырех французских работ.',\n  'Выбрать необходимо не менее трех, но не более четырех романов.',\n  'Количество французских романов должно быть больше или равно числу русских романов.',\n  'Если будут выбраны обе французские пьесы,',\n  'то русская пьеса не выбирается.',\n  'Если среди выбранных произведений будет три французских романа,',\n  'какой из следующих вариантов представляет собой полный',\n  'и точный список оставшихся работ?']\nquestion = 'А) Один русский роман.'\nchoices = { 'B': 'Две французские пьесы.',\n  'C': 'Один русский роман, одна русская пьеса.',\n  'D': 'Один русский роман, две французские пьесы.',\n  'E': 'Два русских романа, одна французская пьеса.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Выбрать можно не более четырех французских работ.', 'Если среди выбранных произведений будет три французских романа,', 'B) Две французские пьесы.', 'D) Один русский роман, две французские пьесы.']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не более четырех французских работ. Варианты Б и Г не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать необходимо не менее трех, но не более четырех романов.', 'Если среди выбранных произведений будет три французских романа,', 'E) Два русских романа, одна французская пьеса.']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не более четырех романов. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.', 'какой из следующих вариантов представляет собой полный', 'и точный список оставшихся работ?', 'А) Один русский роман.']\nnew_fact = infer_new_fact(selected) # 'Полный список должен включать все виды работ. Вариант А не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если среди выбранных произведений будет три французских романа,', 'какой из следующих вариантов представляет собой полный', 'и точный список оставшихся работ?', 'C) Один русский роман, одна русская пьеса.', 'Можно выбрать не более четырех французских работ. Варианты Б и Г не подходят.', 'Можно выбрать не более четырех романов. Вариант Д не подходит.', 'Полный список должен включать все виды работ. Вариант А не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_9_aab53466b8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one French novel and one French play", "one French novel and one Russian play", "one Russian novel and one French play", "two French novels", "two Russian novels"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [5, 6, 8, 9, 16, 17], "consequent": 18}, {"antecedents": [17], "consequent": 19}, {"antecedents": [10, 14, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent1 -> int1: The organizer must select at least five works; sent7 -> int2: At least as many French novels are Russian ones may be selected; int1 & int2 & sent5 & sent6 & sent8 & sent9 -> int3: The less restrictive option is at least two French novels, since one can choose either one or two Russian novels, and a play or two.; int2 -> int4: With two Russian novels, one must select two French ones.; int4 & sent10 & sent14 & sent14 -> int5: The answer is D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Организатор читательского клуба выберет не менее пяти и", "2": "не более шести из группы работ, в которую входят девять произведений.", "3": "Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.", "4": "Организатор должен отбирать работы в соответствии со следующими условиями.", "5": "Выбрать можно не более четырех французских работ.", "6": "Выбрать необходимо не менее трех, но не более четырех романов.", "7": "Количество французских романов должно быть больше или равно числу русских романов.", "8": "Если будут выбраны обе французские пьесы,", "9": "то русская пьеса не выбирается.", "10": "Организатор должен выбрать хотя бы:", "11": "А) Один французский роман и одну французскую пьесу.", "12": "B) Один французский роман и одну русскую пьесу.", "13": "C) Один русский роман и одну французскую пьесу.", "14": "D) Два французских романа.", "15": "E) Два русских романа.", "16": "Организатор должен выбрать не менее пяти работ.", "17": "Количество французских романов должно быть больше или равно числу русских.", "18": "Если организатор возьмет минимум два французских романа, то на оставшиеся работы будет меньше ограничений, так как можно будет выбрать один или два русских романа и одну или две пьесы.", "19": "Если взять два русских романа, придется также выбрать два французских.", "20": "Правильный ответ: Г.", "21": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организатор читательского клуба выберет не менее пяти и',\n  'не более шести из группы работ, в которую входят девять произведений.',\n  'Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.',\n  'Организатор должен отбирать работы в соответствии со следующими условиями.',\n  'Выбрать можно не более четырех французских работ.',\n  'Выбрать необходимо не менее трех, но не более четырех романов.',\n  'Количество французских романов должно быть больше или равно числу русских романов.',\n  'Если будут выбраны обе французские пьесы,',\n  'то русская пьеса не выбирается.',\n  'Организатор должен выбрать хотя бы:']\nquestion = 'А) Один французский роман и одну французскую пьесу.'\nchoices = { 'B': 'Один французский роман и одну русскую пьесу.',\n  'C': 'Один русский роман и одну французскую пьесу.',\n  'D': 'Два французских романа.',\n  'E': 'Два русских романа.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Организатор читательского клуба выберет не менее пяти и']\nnew_fact = infer_new_fact(selected) # 'Организатор должен выбрать не менее пяти работ.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество французских романов должно быть больше или равно числу русских романов.']\nnew_fact = infer_new_fact(selected) # 'Количество французских романов должно быть больше или равно числу русских.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Выбрать можно не более четырех французских работ.', 'Выбрать необходимо не менее трех, но не более четырех романов.', 'Если будут выбраны обе французские пьесы,', 'то русская пьеса не выбирается.', 'Организатор должен выбрать не менее пяти работ.', 'Количество французских романов должно быть больше или равно числу русских.']\nnew_fact = infer_new_fact(selected) # 'Если организатор возьмет минимум два французских романа, то на оставшиеся работы будет меньше ограничений, так как можно будет выбрать один или два русских романа и одну или две пьесы.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество французских романов должно быть больше или равно числу русских.']\nnew_fact = infer_new_fact(selected) # 'Если взять два русских романа, придется также выбрать два французских.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Организатор должен выбрать хотя бы:', 'D) Два французских романа.', 'D) Два французских романа.', 'Если взять два русских романа, придется также выбрать два французских.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_10_c6851062fd", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["No Russian novels and exactly one play are selected.", "Exactly one Russian novel and both French plays are selected.", "Exactly two French novels and the Russian play are selected.", "Exactly two French novels and exactly two plays are selected.", "Exactly two Russian novels and exactly one play are selected."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [10, 11, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: At least five works may be selected. Three French novels and a play are not enough; int1 & sent10 & sent11 -> int2: The answer is A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Организатор читательского клуба выберет не менее пяти и", "2": "не более шести из группы работ, в которую входят девять произведений.", "3": "Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.", "4": "Организатор должен отбирать работы в соответствии со следующими условиями.", "5": "Выбрать можно не более четырех французских работ.", "6": "Выбрать необходимо не менее трех, но не более четырех романов.", "7": "Количество французских романов должно быть больше или равно числу русских романов.", "8": "Если будут выбраны обе французские пьесы,", "9": "то русская пьеса не выбирается.", "10": "В отношении выбранных организатором работ истинным может быть любое из следующих утверждений, КРОМЕ одного. Укажите его.", "11": "А) Не выбраны русские романы и выбрана ровно одна пьеса.", "12": "B) Выбран ровно один русский роман и обе французские пьесы.", "13": "C) Выбраны ровно два французских романа и русская пьеса.", "14": "D) Выбраны ровно два французских романа и ровно две пьесы.", "15": "E) Выбраны ровно два русских романа и ровно одна пьеса.", "16": "Можно выбрать не менее пяти работ. Трех французских романов и одной пьесы недостаточно.", "17": "Правильный ответ: А.", "18": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организатор читательского клуба выберет не менее пяти и',\n  'не более шести из группы работ, в которую входят девять произведений.',\n  'Это три французских романа, три русских романа, две французские пьесы и одна русская пьеса.',\n  'Организатор должен отбирать работы в соответствии со следующими условиями.',\n  'Выбрать можно не более четырех французских работ.',\n  'Выбрать необходимо не менее трех, но не более четырех романов.',\n  'Количество французских романов должно быть больше или равно числу русских романов.',\n  'Если будут выбраны обе французские пьесы,',\n  'то русская пьеса не выбирается.',\n  'В отношении выбранных организатором работ истинным может быть любое из следующих утверждений, КРОМЕ одного. Укажите его.']\nquestion = 'А) Не выбраны русские романы и выбрана ровно одна пьеса.'\nchoices = { 'B': 'Выбран ровно один русский роман и обе французские пьесы.',\n  'C': 'Выбраны ровно два французских романа и русская пьеса.',\n  'D': 'Выбраны ровно два французских романа и ровно две пьесы.',\n  'E': 'Выбраны ровно два русских романа и ровно одна пьеса.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Организатор читательского клуба выберет не менее пяти и']\nnew_fact = infer_new_fact(selected) # 'Можно выбрать не менее пяти работ. Трех французских романов и одной пьесы недостаточно.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В отношении выбранных организатором работ истинным может быть любое из следующих утверждений, КРОМЕ одного. Укажите его.', 'А) Не выбраны русские романы и выбрана ровно одна пьеса.', 'Можно выбрать не менее пяти работ. Трех французских романов и одной пьесы недостаточно.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_11_ff498a5655", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["L, P, S, R, O, T, F, H", "O, T, P, F, S, H, R, L", "P, T, F, S, L, R, O, H", "P, T, F, S, O, R, L, H", "T, F, P, R, O, L, S, H"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 15], "consequent": 18}, {"antecedents": [7, 17], "consequent": 19}, {"antecedents": [11, 16], "consequent": 20}, {"antecedents": [6, 14], "consequent": 21}, {"antecedents": [12, 13, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "linearized_output_en": "sent15 & sent8 -> int1: O must be performed first or fifth, so we rule out option C.; sent17 & sent7 -> int2: 2 compositions must be performed between F and R, so we rule out option E.; sent11 & sent16 -> int3: At least one composition must be performed between S and O, so we rule out option D.; sent14 & sent6 -> int4: T must be performed either immediately before F or immediately after R, so we rule out option B.; int1 & int2 & int3 & int4 & sent12 & sent13 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "В каком из вариантов ниже композиции перечислены в том порядке, в котором они могут быть исполнены на концерте?", "13": "А) L, P, S, R, O, T, F, H.", "14": "B) O, T, P, F, S, H, R, L.", "15": "C) P, T, F, S, L, R, O, H.", "16": "D) P, T, F, S, O, R, L, H", "17": "E) T, F, P, R, O, L, S, H.", "18": "O должна исполняться первой или пятой, поэтому мы исключаем вариант В.", "19": "Две композиции должны быть исполнены между F и R, поэтому вариант Д не подходит.", "20": "По крайней мере одна композиция должна исполняться между S и O, поэтому вариант Г исключается.", "21": "T должна быть исполнена либо непосредственно перед F, либо сразу после R, поэтому мы исключаем вариант Б.", "22": "Правильный ответ: А.", "23": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'В каком из вариантов ниже композиции перечислены в том порядке, в котором они могут быть исполнены на концерте?']\nquestion = 'А) L, P, S, R, O, T, F, H.'\nchoices = {'B': 'O, T, P, F, S, H, R, L.', 'C': 'P, T, F, S, L, R, O, H.', 'D': 'P, T, F, S, O, R, L, H', 'E': 'T, F, P, R, O, L, S, H.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O исполняется либо первой, либо пятой.', 'C) P, T, F, S, L, R, O, H.']\nnew_fact = infer_new_fact(selected) # 'O должна исполняться первой или пятой, поэтому мы исключаем вариант В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.', 'E) T, F, P, R, O, L, S, H.']\nnew_fact = infer_new_fact(selected) # 'Две композиции должны быть исполнены между F и R, поэтому вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.', 'D) P, T, F, S, O, R, L, H']\nnew_fact = infer_new_fact(selected) # 'По крайней мере одна композиция должна исполняться между S и O, поэтому вариант Г исключается.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T исполняется либо непосредственно перед F, либо сразу после R.', 'B) O, T, P, F, S, H, R, L.']\nnew_fact = infer_new_fact(selected) # 'T должна быть исполнена либо непосредственно перед F, либо сразу после R, поэтому мы исключаем вариант Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В каком из вариантов ниже композиции перечислены в том порядке, в котором они могут быть исполнены на концерте?', 'А) L, P, S, R, O, T, F, H.', 'O должна исполняться первой или пятой, поэтому мы исключаем вариант В.', 'Две композиции должны быть исполнены между F и R, поэтому вариант Д не подходит.', 'По крайней мере одна композиция должна исполняться между S и O, поэтому вариант Г исключается.', 'T должна быть исполнена либо непосредственно перед F, либо сразу после R, поэтому мы исключаем вариант Б.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_12_04806d651e", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["second", "third", "fourth", "sixth", "seventh"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10], "consequent": 18}, {"antecedents": [9], "consequent": 19}, {"antecedents": [1, 2, 3, 4, 18, 19], "consequent": 20}, {"antecedents": [12, 17, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent10 -> int1: P must be performed before S.; sent9 -> int2: Slot 8 is already occupied, either by L or H (and only L or H).; int1 & int2 & sent1 & sent2 & sent3 & sent4 -> int3: Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7.; int3 & sent12 & sent17 -> int4: The answer is 7.; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "P НЕ МОЖЕТ прозвучать", "13": "А) второй;", "14": "B) третьей;", "15": "C) четвертой;", "16": "D) шестой;", "17": "E) седьмой.", "18": "P должна быть исполнена перед S.", "19": "Восьмое место уже занято композицией L или H (никаких других вариантов быть не может).", "20": "Поскольку имеется только 8 мест и S не может идти восьмой, P не может быть номером 7.", "21": "Правильный ответ: 7.", "22": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'P НЕ МОЖЕТ прозвучать']\nquestion = 'А) второй;'\nchoices = {'B': 'третьей;', 'C': 'четвертой;', 'D': 'шестой;', 'E': 'седьмой.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['P исполняется в какой-то момент перед S.']\nnew_fact = infer_new_fact(selected) # 'P должна быть исполнена перед S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Восьмая композиция — L или H.']\nnew_fact = infer_new_fact(selected) # 'Восьмое место уже занято композицией L или H (никаких других вариантов быть не может).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На концерте будет исполнено ровно восемь композиций:', 'F, H, L, O, P, R, S и T.', 'Повторять их запрещено. Они исполняются последовательно и', 'по одной композиции за раз.', 'P должна быть исполнена перед S.', 'Восьмое место уже занято композицией L или H (никаких других вариантов быть не может).']\nnew_fact = infer_new_fact(selected) # 'Поскольку имеется только 8 мест и S не может идти восьмой, P не может быть номером 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P НЕ МОЖЕТ прозвучать', 'E) седьмой.', 'Поскольку имеется только 8 мест и S не может идти восьмой, P не может быть номером 7.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: 7.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_13_42777d1f2b", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["fourth or seventh", "third or sixth", "third or fourth", "second or seventh", "first or fourth"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 19], "consequent": 20}, {"antecedents": [11], "consequent": 21}, {"antecedents": [7, 20], "consequent": 22}, {"antecedents": [9, 22], "consequent": 23}, {"antecedents": [10, 23], "consequent": 24}, {"antecedents": [21, 24], "consequent": 25}, {"antecedents": [12, 13, 14, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent12 -> int1: T is performed fifth and F is performed 6th: ? ? ? ? T F ? ?; int1 & sent8 -> int2: Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ?; sent11 -> int3: S cannot be adjacent to O, so it cannot be in slot 2.; int2 & sent7 -> int4: At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ?; int4 & sent9 -> int5: Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H); int5 & sent10 -> int6: Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H); int3 & int6 -> int7: Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H); int7 & sent12 & sent13 & sent14 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "Если T исполняется пятой, а F — шестой,", "13": "S должна исполняться", "14": "А) четвертой или седьмой;", "15": "B) третьей или шестой;", "16": "C) третьей или четвертой;", "17": "D) второй или седьмой;", "18": "E) первой или четвертой.", "19": "T исполняется пятой, а F — шестой: ? ? ? ? T F ? ?", "20": "Поскольку 5-е место занято, сначала должна исполняться композиция O: O ? ? ? T F ? ?", "21": "S не может находиться рядом с O, поэтому не может быть номером 2.", "22": "Между F и R должно быть исполнено не менее двух композиций, поэтому R может иметь 2-й или 3-й номер: O (R) (R) ? T F ? ?", "23": "На 8-м месте должна быть композиция L или H: O (R) (R) ? T F ? (L/H)", "24": "Поскольку S должна исполняться после P, P может занимать места со 2 по 4: O (R/P) (P/R) (P) T F ? (L/H)", "25": "Учитывая уже определенные позиции, мы понимаем, что S может идти только 4-й или 7-й (L или H могут заполнить оставшиеся место): O (R/P) (P/R) (P/S) T F (S) (L/H)", "26": "Правильный ответ: А.", "27": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'Если T исполняется пятой, а F —\\xa0шестой,',\n  'S должна исполняться']\nquestion = 'А) четвертой или седьмой;'\nchoices = {'B': 'третьей или шестой;', 'C': 'третьей или четвертой;', 'D': 'второй или седьмой;', 'E': 'первой или четвертой.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если T исполняется пятой, а F —\\xa0шестой,']\nnew_fact = infer_new_fact(selected) # 'T исполняется пятой, а F — шестой: ? ? ? ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O исполняется либо первой, либо пятой.', 'T исполняется пятой, а F — шестой: ? ? ? ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'Поскольку 5-е место занято, сначала должна исполняться композиция O: O ? ? ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.']\nnew_fact = infer_new_fact(selected) # 'S не может находиться рядом с O, поэтому не может быть номером 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.', 'Поскольку 5-е место занято, сначала должна исполняться композиция O: O ? ? ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'Между F и R должно быть исполнено не менее двух композиций, поэтому R может иметь 2-й или 3-й номер: O (R) (R) ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Восьмая композиция — L или H.', 'Между F и R должно быть исполнено не менее двух композиций, поэтому R может иметь 2-й или 3-й номер: O (R) (R) ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'На 8-м месте должна быть композиция L или H: O (R) (R) ? T F ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P исполняется в какой-то момент перед S.', 'На 8-м месте должна быть композиция L или H: O (R) (R) ? T F ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'Поскольку S должна исполняться после P, P может занимать места со 2 по 4: O (R/P) (P/R) (P) T F ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S не может находиться рядом с O, поэтому не может быть номером 2.', 'Поскольку S должна исполняться после P, P может занимать места со 2 по 4: O (R/P) (P/R) (P) T F ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'Учитывая уже определенные позиции, мы понимаем, что S может идти только 4-й или 7-й (L или H могут заполнить оставшиеся место): O (R/P) (P/R) (P/S) T F (S) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если T исполняется пятой, а F —\\xa0шестой,', 'S должна исполняться', 'А) четвертой или седьмой;', 'Учитывая уже определенные позиции, мы понимаем, что S может идти только 4-й или 7-й (L или H могут заполнить оставшиеся место): O (R/P) (P/R) (P/S) T F (S) (L/H)']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_14_10ce2e61ec", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["first or second", "second or third", "fourth or sixth", "fourth or seventh", "sixth or seventh"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [6, 20], "consequent": 21}, {"antecedents": [7, 21], "consequent": 22}, {"antecedents": [9, 21], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [12, 13, 18, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent8 -> int1: O can only be in slot 1 or 5.; int1 & sent12 -> int2: O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ?; int2 & sent6 -> int3: Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?; int3 & sent7 -> int4: There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case.; int3 & sent9 -> int5: Slot 8 must contain either L or H: ? ? R T O ? ? (L/H); int4 & int5 -> int6: Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H); int6 & sent12 & sent13 & sent18 -> int7: Answer is E.; int7 -> int8: The answer is E);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "Если O исполняется сразу после T,", "13": "F должна исполняться", "14": "А) первой или второй;", "15": "B) второй или третьей;", "16": "C) четвертой или шестой;", "17": "D) четвертой или седьмой;", "18": "E) шестой или седьмой.", "19": "O может идти только первой или пятой.", "20": "O может исполняться только 5-й сразу после T: ? ? ? T O ? ? ?", "21": "Поскольку место после T занято, R должна исполняться сразу перед T: ? ? R T O ? ? ?", "22": "Между R и F должно быть исполнено минимум 2 композиции, поэтому F не может следовать раньше R (3).", "23": "Номером 8 может идти L или H: ? ? R T O ? ? (L/H)", "24": "В зависимости от оставшихся мест F может быть 6-й или 7-й: ? ? R T O (F) (F) (L/H)", "25": "Правильный ответ: Д.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'Если O исполняется сразу после T,',\n  'F должна исполняться']\nquestion = 'А) первой или второй;'\nchoices = {'B': 'второй или третьей;', 'C': 'четвертой или шестой;', 'D': 'четвертой или седьмой;', 'E': 'шестой или седьмой.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O исполняется либо первой, либо пятой.']\nnew_fact = infer_new_fact(selected) # 'O может идти только первой или пятой.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если O исполняется сразу после T,', 'O может идти только первой или пятой.']\nnew_fact = infer_new_fact(selected) # 'O может исполняться только 5-й сразу после T: ? ? ? T O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T исполняется либо непосредственно перед F, либо сразу после R.', 'O может исполняться только 5-й сразу после T: ? ? ? T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Поскольку место после T занято, R должна исполняться сразу перед T: ? ? R T O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.', 'Поскольку место после T занято, R должна исполняться сразу перед T: ? ? R T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Между R и F должно быть исполнено минимум 2 композиции, поэтому F не может следовать раньше R (3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Восьмая композиция — L или H.', 'Поскольку место после T занято, R должна исполняться сразу перед T: ? ? R T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Номером 8 может идти L или H: ? ? R T O ? ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Между R и F должно быть исполнено минимум 2 композиции, поэтому F не может следовать раньше R (3).', 'Номером 8 может идти L или H: ? ? R T O ? ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'В зависимости от оставшихся мест F может быть 6-й или 7-й: ? ? R T O (F) (F) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если O исполняется сразу после T,', 'F должна исполняться', 'E) шестой или седьмой.', 'В зависимости от оставшихся мест F может быть 6-й или 7-й: ? ? R T O (F) (F) (L/H)']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_15_8596dcfff2", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["F, H, P", "H, P. L", "O, P, R", "O, P, T", "P, R, T"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 11], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [14, 15, 18, 21], "consequent": 22}, {"antecedents": [10, 21], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [17, 24], "consequent": 25}, {"antecedents": [12, 13, 16, 22, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent12 -> int1: S is in slot 4: ? ? ? S ? ? ? ?; sent11 & sent8 -> int2: O must be in slot 1 or 5, but cannot be adjacent to S,; int1 & int2 -> int3: so O must be in slot 1: O ? ? S; int3 & sent14 & sent15 & sent18 -> int4: We rule out options A, B, and E because they violate this ordering; int3 & sent10 -> int5: P must be performed before S: O (P) (P) S; int5 & sent6 -> int6: T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3.; int6 & sent17 -> int7: We rule out option D because T cannot be in slot 3.; int4 & int7 & sent12 & sent13 & sent16 -> int8: The answer is C.; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "Если S исполняется четвертой,", "13": "в каком из вариантов ниже представлены композиции, которые исполняются первой, второй и третьей, соответственно?", "14": "А) F, H, P.", "15": "B) H, P, L.", "16": "C) O, P, R.", "17": "D) O, P, T.", "18": "E) P, R, T.", "19": "S имеет номер 4: ? ? ? S ? ? ? ?", "20": "O должна занимать 1-е или 5-е место, но не может идти рядом с S,", "21": "поэтому O должна 1-й: O ? ? S", "22": "Мы исключаем варианты А, Б и Д, поскольку они нарушают этот порядок.", "23": "P должна исполняться перед S: O (P) (P) S", "24": "T должна исполняться непосредственно перед F или сразу после R, поэтому она не может быть ни 2-й, ни 3-й.", "25": "Мы исключаем вариант Г, так как T не может 3-й.", "26": "Правильный ответ: В.", "27": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'Если S исполняется четвертой,',\n  'в каком из вариантов ниже представлены композиции, которые исполняются первой, второй и третьей, соответственно?']\nquestion = 'А) F, H, P.'\nchoices = {'B': 'H, P, L.', 'C': 'O, P, R.', 'D': 'O, P, T.', 'E': 'P, R, T.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если S исполняется четвертой,']\nnew_fact = infer_new_fact(selected) # 'S имеет номер 4: ? ? ? S ? ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O исполняется либо первой, либо пятой.', 'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.']\nnew_fact = infer_new_fact(selected) # 'O должна занимать 1-е или 5-е место, но не может идти рядом с S,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S имеет номер 4: ? ? ? S ? ? ? ?', 'O должна занимать 1-е или 5-е место, но не может идти рядом с S,']\nnew_fact = infer_new_fact(selected) # 'поэтому O должна 1-й: O ? ? S'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['А) F, H, P.', 'B) H, P, L.', 'E) P, R, T.', 'поэтому O должна 1-й: O ? ? S']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем варианты А, Б и Д, поскольку они нарушают этот порядок.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P исполняется в какой-то момент перед S.', 'поэтому O должна 1-й: O ? ? S']\nnew_fact = infer_new_fact(selected) # 'P должна исполняться перед S: O (P) (P) S'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T исполняется либо непосредственно перед F, либо сразу после R.', 'P должна исполняться перед S: O (P) (P) S']\nnew_fact = infer_new_fact(selected) # 'T должна исполняться непосредственно перед F или сразу после R, поэтому она не может быть ни 2-й, ни 3-й.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) O, P, T.', 'T должна исполняться непосредственно перед F или сразу после R, поэтому она не может быть ни 2-й, ни 3-й.']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем вариант Г, так как T не может 3-й.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если S исполняется четвертой,', 'в каком из вариантов ниже представлены композиции, которые исполняются первой, второй и третьей, соответственно?', 'C) O, P, R.', 'Мы исключаем варианты А, Б и Д, поскольку они нарушают этот порядок.', 'Мы исключаем вариант Г, так как T не может 3-й.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_16_7e0c88a103", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["F or H", "F or O", "F or T", "H or L", "O or R"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8, 11], "consequent": 19}, {"antecedents": [12], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [7], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [22, 23, 24], "consequent": 25}, {"antecedents": [6], "consequent": 26}, {"antecedents": [24, 26], "consequent": 27}, {"antecedents": [24, 27], "consequent": 28}, {"antecedents": [25, 26], "consequent": 29}, {"antecedents": [25, 29], "consequent": 30}, {"antecedents": [12, 13, 16, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent11 & sent8 -> int1: O can be performed 1st or 5th, but cannot be adjacent to S.; sent12 -> int2: If P is performed 3rd and S is performed 6th,; int1 & int2 -> int3: then O must be performed 1st: O ? P ? ? S ? ?; int3 & sent9 -> int4: L or H must occupy slot 8: O ? P ? ? S ? (L/H); sent7 -> int5: F and R must be separated by at least 2 compositions, so we have the following possibilities:; int4 & int5 -> int6: 1) O (R/F) P ? (F/R) S ? (L/H); int4 & int5 & int6 -> int7: 2) O ? P (R/F) ? S (F/R) (L/H); sent6 -> int8: T must be immediately before F or immediately after R.; int6 & int8 -> int9: We know in possibility 1 that if F were in slot 2, there would be no space for T after F,; int6 & int9 -> int10: so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H); int7 & int8 -> int11: We know if possibility 2 that if F were in slot 4, then there would be no space for T after F,; int11 & int7 -> int12: so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H); int10 & int12 & sent12 & sent13 & sent16 -> int13: The answer is C.; int13 -> int14: The answer is C);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "Если P исполняется третьей, а S — шестой,", "13": "пятой композицией будет", "14": "А) F или H.", "15": "B) F или O.", "16": "C) F или T.", "17": "D) H или L.", "18": "E) O или R.", "19": "O может исполняться 1-й или 5-й, но не может быть рядом с S.", "20": "Если P исполняется 3-й, а S — 6-й,", "21": "O исполняется 1-й: O ? P ? ? S ? ?", "22": "L или H должны занимать 8-е место: O ? P ? ? S ? (L/H)", "23": "Между F и R должно быть минимум две композиции, поэтому образуются следующие варианты:", "24": "1) O (R/F) P ? (F/R) S ? (L/H)", "25": "2) O ? P (R/F) ? S (F/R) (L/H)", "26": "T должна идти непосредственно перед F или сразу после R.", "27": "Из варианта 1 мы знаем, что если F идет 2-й, после F не останется места для T,", "28": "поэтому R должна идти 2-й, а F — 5-й: O R P T F S ? (L/H)", "29": "Из варианта 2 мы знаем, что если F идет 4-й, после F не останется места для T,", "30": "поэтому R должна занимать 4-е место, T — 5-е, а F — 7-е: O ? P R T S F (L/H)", "31": "Правильный ответ: В.", "32": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'Если P исполняется третьей, а S — шестой,',\n  'пятой композицией будет']\nquestion = 'А) F или H.'\nchoices = {'B': 'F или O.', 'C': 'F или T.', 'D': 'H или L.', 'E': 'O или R.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O исполняется либо первой, либо пятой.', 'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.']\nnew_fact = infer_new_fact(selected) # 'O может исполняться 1-й или 5-й, но не может быть рядом с S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если P исполняется третьей, а S — шестой,']\nnew_fact = infer_new_fact(selected) # 'Если P исполняется 3-й, а S — 6-й,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O может исполняться 1-й или 5-й, но не может быть рядом с S.', 'Если P исполняется 3-й, а S — 6-й,']\nnew_fact = infer_new_fact(selected) # 'O исполняется 1-й: O ? P ? ? S ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Восьмая композиция — L или H.', 'O исполняется 1-й: O ? P ? ? S ? ?']\nnew_fact = infer_new_fact(selected) # 'L или H должны занимать 8-е место: O ? P ? ? S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.']\nnew_fact = infer_new_fact(selected) # 'Между F и R должно быть минимум две композиции, поэтому образуются следующие варианты:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L или H должны занимать 8-е место: O ? P ? ? S ? (L/H)', 'Между F и R должно быть минимум две композиции, поэтому образуются следующие варианты:']\nnew_fact = infer_new_fact(selected) # '1) O (R/F) P ? (F/R) S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L или H должны занимать 8-е место: O ? P ? ? S ? (L/H)', 'Между F и R должно быть минимум две композиции, поэтому образуются следующие варианты:', '1) O (R/F) P ? (F/R) S ? (L/H)']\nnew_fact = infer_new_fact(selected) # '2) O ? P (R/F) ? S (F/R) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T исполняется либо непосредственно перед F, либо сразу после R.']\nnew_fact = infer_new_fact(selected) # 'T должна идти непосредственно перед F или сразу после R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H)', 'T должна идти непосредственно перед F или сразу после R.']\nnew_fact = infer_new_fact(selected) # 'Из варианта 1 мы знаем, что если F идет 2-й, после F не останется места для T,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H)', 'Из варианта 1 мы знаем, что если F идет 2-й, после F не останется места для T,']\nnew_fact = infer_new_fact(selected) # 'поэтому R должна идти 2-й, а F —\\xa05-й: O R P T F S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H)', 'T должна идти непосредственно перед F или сразу после R.']\nnew_fact = infer_new_fact(selected) # 'Из варианта 2 мы знаем, что если F идет 4-й, после F не останется места для T,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H)', 'Из варианта 2 мы знаем, что если F идет 4-й, после F не останется места для T,']\nnew_fact = infer_new_fact(selected) # 'поэтому R должна занимать 4-е место, T\\xa0— 5-е, а F —\\xa07-е: O ? P R T S F (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если P исполняется третьей, а S — шестой,', 'пятой композицией будет', 'C) F или T.', 'поэтому R должна идти 2-й, а F —\\xa05-й: O R P T F S ? (L/H)', 'поэтому R должна занимать 4-е место, T\\xa0— 5-е, а F —\\xa07-е: O ? P R T S F (L/H)']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_17_c4915533c9", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["first", "third", "fourth", "sixth", "seventh"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [7, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [11, 24], "consequent": 25}, {"antecedents": [10, 25], "consequent": 26}, {"antecedents": [12, 13, 17, 26], "consequent": 27}, {"antecedents": [27], "consequent": 28}], "metadata": [], "linearized_output_en": "sent8 -> int1: O can be in slots 1 or 5.; int1 & sent12 -> int2: If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ?; int2 & sent7 -> int3: There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O; int3 & sent9 -> int4: Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H); int4 -> int5: Let's assume R is in slot 7: ? F ? ? O ? R (L/H); int5 & sent6 -> int6: Then T must be in slot 1: T F ? ? O ? R (L/H); int6 & sent11 -> int7: S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H); int7 & sent10 -> int8: But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7.; int8 & sent12 & sent13 & sent17 -> int9: The answer is D.; int9 -> int10: The answer is D);", "textual_logical_units": {"1": "На концерте будет исполнено ровно восемь композиций:", "2": "F, H, L, O, P, R, S и T.", "3": "Повторять их запрещено. Они исполняются последовательно и", "4": "по одной композиции за раз.", "5": "Порядок следования должен удовлетворять условиям, указанным ниже.", "6": "T исполняется либо непосредственно перед F, либо сразу после R.", "7": "Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.", "8": "O исполняется либо первой, либо пятой.", "9": "Восьмая композиция — L или H.", "10": "P исполняется в какой-то момент перед S.", "11": "Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.", "12": "Если после F, но перед O исполняются ровно две композиции,", "13": "то R должна исполняться", "14": "А) первой;", "15": "B) третьей;", "16": "C) четвертой;", "17": "D) шестой;", "18": "E) седьмой.", "19": "O может идти 1-й или 5-й.", "20": "Если перед O и после F исполняется ровно 2 композиции, O может идти только 5-й, а F — только 2-й: ? F ? ? O ? ? ?", "21": "Между R и F должно быть не менее 2 композиций, но ближайшее возможное место (5) занято композицией O.", "22": "Кроме того, номером 8 должна идти композиция L или H, поэтому R может занимать только 6-е или 7-е место: ? F ? ? O (R) (R) (L/H)", "23": "Предположим, что R идет 7-й: ? F ? ? O ? R (L/H)", "24": "Тогда T должна быть 1-й: T F ? ? O ? R (L/H)", "25": "S не может находиться рядом с O, поэтому она не может быть 4-й или 6-й, значит ее место — 3: T F S ? O ? R (L/H)", "26": "Однако S должна исполняться после P, а в данной конфигурации это невозможно, поэтому R не может идти 7-й.", "27": "Правильный ответ: Г.", "28": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'На концерте будет исполнено ровно восемь композиций:',\n  'F, H, L, O, P, R, S и T.',\n  'Повторять их запрещено. Они исполняются последовательно и',\n  'по одной композиции за раз.',\n  'Порядок следования должен удовлетворять условиям, указанным ниже.',\n  'T исполняется либо непосредственно перед F, либо сразу после R.',\n  'Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.',\n  'O исполняется либо первой, либо пятой.',\n  'Восьмая композиция — L или H.',\n  'P исполняется в какой-то момент перед S.',\n  'Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.',\n  'Если после F, но перед O исполняются ровно две композиции,',\n  'то R должна исполняться']\nquestion = 'А) первой;'\nchoices = {'B': 'третьей;', 'C': 'четвертой;', 'D': 'шестой;', 'E': 'седьмой.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O исполняется либо первой, либо пятой.']\nnew_fact = infer_new_fact(selected) # 'O может идти 1-й или 5-й.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если после F, но перед O исполняются ровно две композиции,', 'O может идти 1-й или 5-й.']\nnew_fact = infer_new_fact(selected) # 'Если перед O и после F исполняется ровно 2 композиции, O может идти только 5-й, а F —\\xa0только 2-й: ? F ? ? O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Минимум две композиции исполняются либо после F и перед R, либо после R и перед F.', 'Если перед O и после F исполняется ровно 2 композиции, O может идти только 5-й, а F —\\xa0только 2-й: ? F ? ? O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Между R и F должно быть не менее 2 композиций, но ближайшее возможное место (5) занято композицией O.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Восьмая композиция — L или H.', 'Между R и F должно быть не менее 2 композиций, но ближайшее возможное место (5) занято композицией O.']\nnew_fact = infer_new_fact(selected) # 'Кроме того, номером 8 должна идти композиция L или H, поэтому R может занимать только 6-е или 7-е место: ? F ? ? O (R) (R) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, номером 8 должна идти композиция L или H, поэтому R может занимать только 6-е или 7-е место: ? F ? ? O (R) (R) (L/H)']\nnew_fact = infer_new_fact(selected) # 'Предположим, что R идет 7-й: ? F ? ? O ? R (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T исполняется либо непосредственно перед F, либо сразу после R.', 'Предположим, что R идет 7-й: ? F ? ? O ? R (L/H)']\nnew_fact = infer_new_fact(selected) # 'Тогда T должна быть 1-й: T F ? ? O ? R (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как минимум одна композиция исполняется либо после O и перед S, либо после S и перед O.', 'Тогда T должна быть 1-й: T F ? ? O ? R (L/H)']\nnew_fact = infer_new_fact(selected) # 'S не может находиться рядом с O, поэтому она не может быть 4-й или 6-й, значит ее место —\\xa03: T F S ? O ? R (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P исполняется в какой-то момент перед S.', 'S не может находиться рядом с O, поэтому она не может быть 4-й или 6-й, значит ее место —\\xa03: T F S ? O ? R (L/H)']\nnew_fact = infer_new_fact(selected) # 'Однако S должна исполняться после P, а в данной конфигурации это невозможно, поэтому R не может идти 7-й.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если после F, но перед O исполняются ровно две композиции,', 'то R должна исполняться', 'D) шестой;', 'Однако S должна исполняться после P, а в данной конфигурации это невозможно, поэтому R не может идти 7-й.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_18_fde7cfbaf2", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese", "Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx", "Manx, Himalayan, Manx, Himalayan, Siamese, Manx, Siamese", "Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan", "Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10, 11, 16], "consequent": 21}, {"antecedents": [8, 19], "consequent": 22}, {"antecedents": [9, 17], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent16 -> int1: Himalayans cannot be featured on day 1 and less than three days. A and C not answers; sent19 & sent8 -> int2: The same breed may not feature on consecutive days. D is not an answer.; sent17 & sent9 -> int3: Any breed featured on day 1 may not be featured on day 7. B is not an answer.; int1 & int2 & int3 & sent14 & sent15 & sent20 -> int4: The answer is E.; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Укажите, в каком порядке в зоомагазине могут выставляться кошки", "15": "с 1-го по 7-й день?", "16": "А) Гималайские, мэнские, сиамские, гималайские, мэнские, гималайские, сиамские.", "17": "B) Мэнские, гималайские, сиамские, гималайские, мэнские, гималайские, мэнские.", "18": "C) Мэнские, гималайские, мэнские, гималайские, сиамские, мэнские, сиамские.", "19": "D) Сиамские, гималайские, мэнские, гималайские, сиамские, сиамские, гималайские.", "20": "E) Сиамские, гималайские, сиамские, гималайские, мэнские, сиамские, гималайские.", "21": "Гималайские кошки не могут выставляться в 1-й день и менее трех дней. Варианты А и В не подходят.", "22": "Одна порода не может быть представлена несколько дней подряд. Вариант Г не подходит.", "23": "Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.", "24": "Правильный ответ: Д.", "25": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Укажите, в каком порядке в зоомагазине могут выставляться кошки',\n  'с 1-го по 7-й день?']\nquestion = 'А) Гималайские, мэнские, сиамские, гималайские, мэнские, гималайские, сиамские.'\nchoices = { 'B': 'Мэнские, гималайские, сиамские, гималайские, мэнские, гималайские, мэнские.',\n  'C': 'Мэнские, гималайские, мэнские, гималайские, сиамские, мэнские, сиамские.',\n  'D': 'Сиамские, гималайские, мэнские, гималайские, сиамские, сиамские, гималайские.',\n  'E': 'Сиамские, гималайские, сиамские, гималайские, мэнские, сиамские, гималайские.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.', 'А) Гималайские, мэнские, сиамские, гималайские, мэнские, гималайские, сиамские.']\nnew_fact = infer_new_fact(selected) # 'Гималайские кошки не могут выставляться в 1-й день и менее трех дней. Варианты А и В не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни одна порода не выставляется два дня подряд.', 'D) Сиамские, гималайские, мэнские, гималайские, сиамские, сиамские, гималайские.']\nnew_fact = infer_new_fact(selected) # 'Одна порода не может быть представлена несколько дней подряд. Вариант Г не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если порода представлена в 1-й день, он не будет выставляться в 7-й день.', 'B) Мэнские, гималайские, сиамские, гималайские, мэнские, гималайские, мэнские.']\nnew_fact = infer_new_fact(selected) # 'Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите, в каком порядке в зоомагазине могут выставляться кошки', 'с 1-го по 7-й день?', 'E) Сиамские, гималайские, сиамские, гималайские, мэнские, сиамские, гималайские.', 'Гималайские кошки не могут выставляться в 1-й день и менее трех дней. Варианты А и В не подходят.', 'Одна порода не может быть представлена несколько дней подряд. Вариант Г не подходит.', 'Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_19_d10171a1c1", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Manx are featured on day 3.", "Siamese are featured on day 4.", "Rottweilers are featured on day 5.", "Himalayans are featured on day 6.", "Greyhounds are featured on day 7."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [10, 11, 14], "consequent": 21}, {"antecedents": [8, 19, 21], "consequent": 22}, {"antecedents": [12, 13, 21], "consequent": 23}, {"antecedents": [7, 9], "consequent": 24}, {"antecedents": [14, 17, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 -> int1: The Himalayan will be featured on day 3, day 5 and day 7.; int1 & sent19 & sent8 -> int2: Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers.; int1 & sent12 & sent13 -> int3: Rottweilers and Himalayans cannot be featured on the same days. C is not an option.; sent7 & sent9 -> int4: Breeds featured on day 1 may not feature on day 7. E is not an answer.; int1 & int2 & int3 & int4 & sent14 & sent17 -> int5: The answer is B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Если гималайские кошки не выставляются во 2-й день,", "15": "какое из утверждений ниже истинно?", "16": "А) Мэнские кошки будут представлены в 3-й день.", "17": "B) В 4-й день выставляются сиамские.", "18": "C) Ротвейлеры будут представлены в 5-й день.", "19": "D) Гималайские кошки выставляются в 6-й день.", "20": "E) Грейхаунды будут представлены в 7-й день.", "21": "Гималайские кошки будут показаны в 3-й, 5-й и 7-й день.", "22": "Поскольку гималайских кошек нельзя показывать в 1-й день и ни одна порода не может быть представлена два дня подряд, варианты А и Г не подходят.", "23": "Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.", "24": "Породы, показанные в 1-й день, не могут демонстрироваться в 7-й день. Вариант Д не подходит.", "25": "Правильный ответ: Б.", "26": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Если гималайские кошки не выставляются во 2-й день,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Мэнские кошки будут представлены в 3-й день.'\nchoices = { 'B': 'В 4-й день выставляются сиамские.',\n  'C': 'Ротвейлеры будут представлены в 5-й день.',\n  'D': 'Гималайские кошки выставляются в 6-й день.',\n  'E': 'Грейхаунды будут представлены в 7-й день.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.', 'Если гималайские кошки не выставляются во 2-й день,']\nnew_fact = infer_new_fact(selected) # 'Гималайские кошки будут показаны в 3-й, 5-й и 7-й день.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни одна порода не выставляется два дня подряд.', 'D) Гималайские кошки выставляются в 6-й день.', 'Гималайские кошки будут показаны в 3-й, 5-й и 7-й день.']\nnew_fact = infer_new_fact(selected) # 'Поскольку гималайских кошек нельзя показывать в 1-й день и ни одна порода не может быть представлена два дня подряд, варианты А и Г не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.', 'Гималайские кошки будут показаны в 3-й, 5-й и 7-й день.']\nnew_fact = infer_new_fact(selected) # 'Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1-й день выставляются грейхаунды.', 'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.']\nnew_fact = infer_new_fact(selected) # 'Породы, показанные в 1-й день, не могут демонстрироваться в 7-й день. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если гималайские кошки не выставляются во 2-й день,', 'B) В 4-й день выставляются сиамские.', 'Гималайские кошки будут показаны в 3-й, 5-й и 7-й день.', 'Поскольку гималайских кошек нельзя показывать в 1-й день и ни одна порода не может быть представлена два дня подряд, варианты А и Г не подходят.', 'Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.', 'Породы, показанные в 1-й день, не могут демонстрироваться в 7-й день. Вариант Д не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_20_4d385b334d", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Greyhounds and Siamese are both featured on day 2.", "Greyhounds and Himalayans are both featured on day 7.", "Rottweilers and Himalayans are both featured on day 4.", "Rottweilers and Manx are both featured on day 5.", "Newfoundlands and Manx are both featured on day 6."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 12, 15, 19], "consequent": 20}, {"antecedents": [7, 9], "consequent": 21}, {"antecedents": [12, 13], "consequent": 22}, {"antecedents": [14, 18, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent12 & sent15 & sent19 & sent7 & sent8 & sent9 -> int1: No breed may be featured on two consecutive days. A and E are not answers; sent7 & sent9 -> int2: Breeds featured on day 1 may not be featured on day 7. B is not an answer; sent12 & sent13 -> int3: Rottweilers and Himalayans may not feature on the same day. C is not an answer; int1 & int2 & int3 & sent14 & sent18 -> int4: The answer is D.; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Какое из утверждений ниже истинно?", "15": "А) Во 2-й день будут представлены грейхаунды и сиамские кошки.", "16": "B) В 7-й день показываются грейхаунды и гималайские кошки.", "17": "C) В 4-й день будут выставляться ротвейлеры и гималайские кошки.", "18": "D) Ротвейлеры и мэнские кошки будут показаны в 5-й день.", "19": "E) Ньюфаундленды и мэнские кошки будут представлены в 6-й день.", "20": "Ни одна порода не может выставляться два дня подряд. Варианты А и Д не подходят.", "21": "Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.", "22": "Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.", "23": "Правильный ответ: Г.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Какое из утверждений ниже истинно?']\nquestion = 'А) Во 2-й день будут представлены грейхаунды и сиамские кошки.'\nchoices = { 'B': 'В 7-й день показываются грейхаунды и гималайские кошки.',\n  'C': 'В 4-й день будут выставляться ротвейлеры и гималайские кошки.',\n  'D': 'Ротвейлеры и мэнские кошки будут показаны в 5-й день.',\n  'E': 'Ньюфаундленды и мэнские кошки будут представлены в 6-й день.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В 1-й день выставляются грейхаунды.', 'Ни одна порода не выставляется два дня подряд.', 'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.', 'Ротвейлеры не могут выставляться в 7-й день', 'А) Во 2-й день будут представлены грейхаунды и сиамские кошки.', 'E) Ньюфаундленды и мэнские кошки будут представлены в 6-й день.']\nnew_fact = infer_new_fact(selected) # 'Ни одна порода не может выставляться два дня подряд. Варианты А и Д не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1-й день выставляются грейхаунды.', 'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.']\nnew_fact = infer_new_fact(selected) # 'Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.']\nnew_fact = infer_new_fact(selected) # 'Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое из утверждений ниже истинно?', 'D) Ротвейлеры и мэнские кошки будут показаны в 5-й день.', 'Ни одна порода не может выставляться два дня подряд. Варианты А и Д не подходят.', 'Любая порода, представленная в 1-й день, не может показываться в 7-й день. Вариант Б не подходит.', 'Ротвейлеров и гималайских кошек нельзя выставлять в один день. Вариант В не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_21_64005f09c3", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["day 1 and day 3", "day 2 and day 6", "day 3 and day 5", "day 4 and day 6", "day 5 and day 7"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 14], "consequent": 22}, {"antecedents": [7, 8, 9, 12], "consequent": 23}, {"antecedents": [8, 12, 13], "consequent": 24}, {"antecedents": [14, 15, 16, 18, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 & sent8 -> int1: Possible days the Himalayan could be featured on are day 2, day 4 and, day 6; sent12 & sent7 & sent8 & sent9 -> int2: Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland.; sent12 & sent13 & sent8 -> int3: Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies.; int1 & int2 & int3 & sent14 & sent15 & sent16 & sent18 -> int4: The answer is B; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Если гималайские кошки не будут показываться в 7-й день,", "15": "в какую из следующих пар дней НЕЛЬЗЯ выставлять котят одной породы", "16": "и щенят одной породы?", "17": "А) 1-й и 3-й день.", "18": "B) 2-й и 6-й день.", "19": "C) 3-й и 5-й день.", "20": "D) 4-й и 6-й день.", "21": "E) 5-й и 7-й день.", "22": "Гималайские кошки могут выставляться во 2-й, 4-й и 6-й день.", "23": "Порода, представленная в 1-й день, не может показываться в 7-й день, поэтому в 7-й день будут выставляться ньюфаундленды.", "24": "Таким образом, в 6-й день можно будет увидеть только щенков грейхаунда, а во 2-й день — щенков ньюфаундленда.", "25": "Правильный ответ: Б.", "26": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Если гималайские кошки не будут показываться в 7-й день,',\n  'в какую из следующих пар дней НЕЛЬЗЯ выставлять котят одной породы',\n  'и щенят одной породы?']\nquestion = 'А) 1-й и 3-й день.'\nchoices = {'B': '2-й и 6-й день.', 'C': '3-й и 5-й день.', 'D': '4-й и 6-й день.', 'E': '5-й и 7-й день.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ни одна порода не выставляется два дня подряд.', 'Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.', 'Если гималайские кошки не будут показываться в 7-й день,']\nnew_fact = infer_new_fact(selected) # 'Гималайские кошки могут выставляться во 2-й, 4-й и 6-й день.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1-й день выставляются грейхаунды.', 'Ни одна порода не выставляется два дня подряд.', 'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.', 'Ротвейлеры не могут выставляться в 7-й день']\nnew_fact = infer_new_fact(selected) # 'Порода, представленная в 1-й день, не может показываться в 7-й день, поэтому в 7-й день будут выставляться ньюфаундленды.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни одна порода не выставляется два дня подряд.', 'Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в 6-й день можно будет увидеть только щенков грейхаунда, а во 2-й день — щенков ньюфаундленда.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если гималайские кошки не будут показываться в 7-й день,', 'в какую из следующих пар дней НЕЛЬЗЯ выставлять котят одной породы', 'и щенят одной породы?', 'B) 2-й и 6-й день.', 'Гималайские кошки могут выставляться во 2-й, 4-й и 6-й день.', 'Порода, представленная в 1-й день, не может показываться в 7-й день, поэтому в 7-й день будут выставляться ньюфаундленды.', 'Таким образом, в 6-й день можно будет увидеть только щенков грейхаунда, а во 2-й день — щенков ньюфаундленда.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_22_d5faf2083f", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["There are exactly four breeds that are each featured on three days.", "Greyhounds are featured on every day that Himalayans are.", "Himalayans are featured on every day that Greyhounds are.", "Himalayans are featured on every day that Rottweilers are not.", "Rottweilers are featured on every day that Himalayans are not."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [7, 9, 10, 18], "consequent": 20}, {"antecedents": [8, 19, 20], "consequent": 21}, {"antecedents": [7, 10, 11], "consequent": 22}, {"antecedents": [8, 10, 11, 16], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent18 & sent7 & sent9 -> int1: Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.; int1 & sent19 & sent8 -> int2: No breed may be featured on two consecutive days. E is not an anwer; sent10 & sent11 & sent7 -> int3: Himalayans may not be featured on day 1. C is not an answer; sent10 & sent11 & sent16 & sent8 -> int4: If Himalayan features on day 2, B is not an answer; int1 & int2 & int3 & int4 & sent14 & sent15 -> int5: The answer is A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Какое из утверждений ниже истинно?", "15": "А) Есть ровно четыре породы, каждая из которых выставляется три дня.", "16": "B) Грейхаунды показываются в те же дни, что и гималайские кошки.", "17": "C) Гималайские кошки выставляются в те же дни, что и грейхаунды.", "18": "D) Гималайские кошки демонстрируются в те дни, когда нет ротвейлеров.", "19": "E) Ротвейлеры показываются в те дни, когда нет гималайских кошек.", "20": "Гималайские кошки выставляются ровно три дня. Ротвейлеры показываются в 6-й день. Таким образом, гималайские кошки демонстрируются четыре дня. Вариант Г не подходит.", "21": "Ни одна порода не может выставляться два дня подряд. Вариант Д не подходит.", "22": "Гималайские кошки не могут выставляться в 1-й день. Вариант В не подходит.", "23": "Если гималайские кошки появятся во 2-й день, вариант Б не подходит.", "24": "Правильный ответ: А.", "25": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Какое из утверждений ниже истинно?']\nquestion = 'А) Есть ровно четыре породы, каждая из которых выставляется три дня.'\nchoices = { 'B': 'Грейхаунды показываются в те же дни, что и гималайские кошки.',\n  'C': 'Гималайские кошки выставляются в те же дни, что и грейхаунды.',\n  'D': 'Гималайские кошки демонстрируются в те дни, когда нет ротвейлеров.',\n  'E': 'Ротвейлеры показываются в те дни, когда нет гималайских кошек.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В 1-й день выставляются грейхаунды.', 'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.', 'Гималайские кошки выставляются ровно три дня,', 'D) Гималайские кошки демонстрируются в те дни, когда нет ротвейлеров.']\nnew_fact = infer_new_fact(selected) # 'Гималайские кошки выставляются ровно три дня. Ротвейлеры показываются в 6-й день. Таким образом, гималайские кошки демонстрируются четыре дня. Вариант Г не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни одна порода не выставляется два дня подряд.', 'E) Ротвейлеры показываются в те дни, когда нет гималайских кошек.', 'Гималайские кошки выставляются ровно три дня. Ротвейлеры показываются в 6-й день. Таким образом, гималайские кошки демонстрируются четыре дня. Вариант Г не подходит.']\nnew_fact = infer_new_fact(selected) # 'Ни одна порода не может выставляться два дня подряд. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1-й день выставляются грейхаунды.', 'Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.']\nnew_fact = infer_new_fact(selected) # 'Гималайские кошки не могут выставляться в 1-й день. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни одна порода не выставляется два дня подряд.', 'Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.', 'B) Грейхаунды показываются в те же дни, что и гималайские кошки.']\nnew_fact = infer_new_fact(selected) # 'Если гималайские кошки появятся во 2-й день, вариант Б не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое из утверждений ниже истинно?', 'А) Есть ровно четыре породы, каждая из которых выставляется три дня.', 'Гималайские кошки выставляются ровно три дня. Ротвейлеры показываются в 6-й день. Таким образом, гималайские кошки демонстрируются четыре дня. Вариант Г не подходит.', 'Ни одна порода не может выставляться два дня подряд. Вариант Д не подходит.', 'Гималайские кошки не могут выставляться в 1-й день. Вариант В не подходит.', 'Если гималайские кошки появятся во 2-й день, вариант Б не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_23_0acffb8c53", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Greyhounds are featured on days 3 and 5.", "Newfoundlands are featured on day 3.", "Rottweilers are featured on day 6.", "Rottweilers are featured only on day 3.", "Rottweilers are featured on exactly three days."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 10, 11, 12, 13, 20], "consequent": 21}, {"antecedents": [10, 12, 13, 14, 18], "consequent": 22}, {"antecedents": [7, 8, 12, 13, 14, 16, 17], "consequent": 23}, {"antecedents": [14, 15, 19, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent1 & sent10 & sent11 & sent12 & sent13 & sent2 & sent20 -> int1: Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer.; sent10 & sent12 & sent13 & sent14 & sent18 -> int2: Rottweilers and Himalayan may not feature on the same day. C is not an answer; sent12 & sent13 & sent14 & sent16 & sent17 & sent7 & sent8 -> int3: No breed may feature on two consecutive days. A and B are not answers.; int1 & int2 & int3 & sent14 & sent15 & sent19 -> int4: The answer is D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Каждый день ровно 7 дней подряд", "2": "в зоомагазине выставляются котята ровно одной из трех пород —", "3": "гималайской, мэнской, сиамской,", "4": "а также щенки ровно одной из трех пород —", "5": "грейхаунд, ньюфаундленд, ротвейлер.", "6": "При этом должны соблюдаться следующие условия.", "7": "В 1-й день выставляются грейхаунды.", "8": "Ни одна порода не выставляется два дня подряд.", "9": "Если порода представлена в 1-й день, он не будет выставляться в 7-й день.", "10": "Гималайские кошки выставляются ровно три дня,", "11": "но не в 1-й день.", "12": "Ротвейлеры не могут выставляться в 7-й день", "13": "или в один день с гималайскими кошками.", "14": "Если гималайские кошки не будут показываться в 7-й день,", "15": "какое из утверждений ниже истинно?", "16": "А) Грейхаунды выставляются в 3-й и 5-й день.", "17": "B) Ньюфаундленды будут показаны в 3-й день.", "18": "C) Ротвейлеры демонстрируются в 6-й день.", "19": "D) Ротвейлеры выставляются только в 3-й день.", "20": "E) Ротвейлеры показываются ровно три дня.", "21": "В каждый день выставляется ровно одна порода животных каждого типа. Гималайские кошки и ротвейлеры не могут быть представлены в один день. Таким образом, для показа ротвейлеров остается два дня. Вариант Д не подходит.", "22": "Ротвейлеры и гималайские кошки не могут показываться в один день. Вариант В не подходит.", "23": "Ни одна порода не может выставляться два дня подряд. Варианты А и Б не подходят.", "24": "Правильный ответ: Г.", "25": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый день ровно 7 дней подряд',\n  'в зоомагазине выставляются котята ровно одной из трех пород —',\n  'гималайской, мэнской, сиамской,',\n  'а также щенки ровно одной из трех пород —',\n  'грейхаунд, ньюфаундленд, ротвейлер.',\n  'При этом должны соблюдаться следующие условия.',\n  'В 1-й день выставляются грейхаунды.',\n  'Ни одна порода не выставляется два дня подряд.',\n  'Если порода представлена в 1-й день, он не будет выставляться в 7-й день.',\n  'Гималайские кошки выставляются ровно три дня,',\n  'но не в 1-й день.',\n  'Ротвейлеры не могут выставляться в 7-й день',\n  'или в один день с гималайскими кошками.',\n  'Если гималайские кошки не будут показываться в 7-й день,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Грейхаунды выставляются в 3-й и 5-й день.'\nchoices = { 'B': 'Ньюфаундленды будут показаны в 3-й день.',\n  'C': 'Ротвейлеры демонстрируются в 6-й день.',\n  'D': 'Ротвейлеры выставляются только в 3-й день.',\n  'E': 'Ротвейлеры показываются ровно три дня.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый день ровно 7 дней подряд', 'в зоомагазине выставляются котята ровно одной из трех пород —', 'Гималайские кошки выставляются ровно три дня,', 'но не в 1-й день.', 'Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.', 'E) Ротвейлеры показываются ровно три дня.']\nnew_fact = infer_new_fact(selected) # 'В каждый день выставляется ровно одна порода животных каждого типа. Гималайские кошки и ротвейлеры не могут быть представлены в один день. Таким образом, для показа ротвейлеров остается два дня. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Гималайские кошки выставляются ровно три дня,', 'Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.', 'Если гималайские кошки не будут показываться в 7-й день,', 'C) Ротвейлеры демонстрируются в 6-й день.']\nnew_fact = infer_new_fact(selected) # 'Ротвейлеры и гималайские кошки не могут показываться в один день. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1-й день выставляются грейхаунды.', 'Ни одна порода не выставляется два дня подряд.', 'Ротвейлеры не могут выставляться в 7-й день', 'или в один день с гималайскими кошками.', 'Если гималайские кошки не будут показываться в 7-й день,', 'А) Грейхаунды выставляются в 3-й и 5-й день.', 'B) Ньюфаундленды будут показаны в 3-й день.']\nnew_fact = infer_new_fact(selected) # 'Ни одна порода не может выставляться два дня подряд. Варианты А и Б не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если гималайские кошки не будут показываться в 7-й день,', 'какое из утверждений ниже истинно?', 'D) Ротвейлеры выставляются только в 3-й день.', 'В каждый день выставляется ровно одна порода животных каждого типа. Гималайские кошки и ротвейлеры не могут быть представлены в один день. Таким образом, для показа ротвейлеров остается два дня. Вариант Д не подходит.', 'Ротвейлеры и гималайские кошки не могут показываться в один день. Вариант В не подходит.', 'Ни одна порода не может выставляться два дня подряд. Варианты А и Б не подходят.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_24_da322cc891", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F, G, K, P, Q", "G, H, K, L, M", "G, H, K, L, R", "H, K, M, P, R", "H, L, M, P, Q"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [12, 16], "consequent": 21}, {"antecedents": [13, 17, 19], "consequent": 22}, {"antecedents": [14, 20], "consequent": 23}, {"antecedents": [15, 18, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent12 & sent16 -> int1: K and F cannot be in the team. A not an answer; sent13 & sent17 & sent19 -> int2: K and M cannot be in the team. B and D not answers; sent14 & sent20 -> int3: If M is selcted, both P and R must be selected. E not an answer.; int1 & int2 & int3 & sent15 & sent18 -> int4: The answer is C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Планируется сформировать группу из пяти ученых.", "2": "Участники будут отбираться из трех ботаников:", "3": "F, G и H,", "4": "трех химиков:", "5": "K, L и M,", "6": "и трех зоологов:", "7": "P, Q и R.", "8": "При выборе действуют указанные ниже условия.", "9": "В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.", "10": "Если выбрано несколько ботаников,", "11": "то можно выбрать максимум одного зоолога.", "12": "Нельзя выбрать одновременно F и K.", "13": "Нельзя выбрать одновременно K и M.", "14": "Если выбран M, необходимо выбрать как P, так и R.", "15": "Какой состав группы ученых из указанных ниже соответствует приведенным критериям?", "16": "А) F, G, K, P, Q.", "17": "B) G, H, K, L, M.", "18": "C) G, H, K, L, R.", "19": "D) H, K, M, P, R.", "20": "E) H, L, M, P, Q.", "21": "K и F не могут входить в команду вместе. Вариант А не подходит.", "22": "K и M не могут входить в команду вместе. Варианты Б и Г не подходят.", "23": "Если выбран M, необходимо выбрать как P, так и R. Вариант Д не подходит.", "24": "Правильный ответ: В.", "25": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планируется сформировать группу из пяти ученых.',\n  'Участники будут отбираться из трех ботаников:',\n  'F, G и H,',\n  'трех химиков:',\n  'K, L и M,',\n  'и трех зоологов:',\n  'P, Q и R.',\n  'При выборе действуют указанные ниже условия.',\n  'В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.',\n  'Если выбрано несколько ботаников,',\n  'то можно выбрать максимум одного зоолога.',\n  'Нельзя выбрать одновременно F и K.',\n  'Нельзя выбрать одновременно K и M.',\n  'Если выбран M, необходимо выбрать как P, так и R.',\n  'Какой состав группы ученых из указанных ниже соответствует приведенным критериям?']\nquestion = 'А) F, G, K, P, Q.'\nchoices = {'B': 'G, H, K, L, M.', 'C': 'G, H, K, L, R.', 'D': 'H, K, M, P, R.', 'E': 'H, L, M, P, Q.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Нельзя выбрать одновременно F и K.', 'А) F, G, K, P, Q.']\nnew_fact = infer_new_fact(selected) # 'K и F не могут входить в команду вместе. Вариант А не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Нельзя выбрать одновременно K и M.', 'B) G, H, K, L, M.', 'D) H, K, M, P, R.']\nnew_fact = infer_new_fact(selected) # 'K и M не могут входить в команду вместе. Варианты Б и Г не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если выбран M, необходимо выбрать как P, так и R.', 'E) H, L, M, P, Q.']\nnew_fact = infer_new_fact(selected) # 'Если выбран M, необходимо выбрать как P, так и R. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой состав группы ученых из указанных ниже соответствует приведенным критериям?', 'C) G, H, K, L, R.', 'K и F не могут входить в команду вместе. Вариант А не подходит.', 'K и M не могут входить в команду вместе. Варианты Б и Г не подходят.', 'Если выбран M, необходимо выбрать как P, так и R. Вариант Д не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_25_b1bececf9e", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F and G are both selected.", "G and H are both selected.", "H and P are both selected.", "F, G, and H are all selected.", "P, Q, and R are all selected."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 14, 20], "consequent": 22}, {"antecedents": [10, 11, 14, 17, 18, 19], "consequent": 23}, {"antecedents": [15, 16, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent1 & sent14 & sent20 -> int1: The desire panel size is five scientist. D not an answer.; sent10 & sent11 & sent14 & sent17 & sent18 & sent19 -> int2: If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers; int1 & int2 & sent15 & sent16 & sent21 -> int3: The answer is E; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "Планируется сформировать группу из пяти ученых.", "2": "Участники будут отбираться из трех ботаников:", "3": "F, G и H,", "4": "трех химиков:", "5": "K, L и M,", "6": "и трех зоологов:", "7": "P, Q и R.", "8": "При выборе действуют указанные ниже условия.", "9": "В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.", "10": "Если выбрано несколько ботаников,", "11": "то можно выбрать максимум одного зоолога.", "12": "Нельзя выбрать одновременно F и K.", "13": "Нельзя выбрать одновременно K и M.", "14": "Если выбран M, необходимо выбрать как P, так и R.", "15": "Если M — единственный химик, отобранный в группу,", "16": "какое из следующих утверждений истинно?", "17": "А) Выбраны F и G.", "18": "B) Выбраны G и H.", "19": "C) Выбраны H и P.", "20": "D) Выбраны F, G и H.", "21": "E) Выбраны P, Q и R.", "22": "В группу должны войти пять ученых. Вариант Г не подходит.", "23": "Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты А, Б и В не подходят.", "24": "Правильный ответ: Д.", "25": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планируется сформировать группу из пяти ученых.',\n  'Участники будут отбираться из трех ботаников:',\n  'F, G и H,',\n  'трех химиков:',\n  'K, L и M,',\n  'и трех зоологов:',\n  'P, Q и R.',\n  'При выборе действуют указанные ниже условия.',\n  'В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.',\n  'Если выбрано несколько ботаников,',\n  'то можно выбрать максимум одного зоолога.',\n  'Нельзя выбрать одновременно F и K.',\n  'Нельзя выбрать одновременно K и M.',\n  'Если выбран M, необходимо выбрать как P, так и R.',\n  'Если M — единственный химик, отобранный в группу,',\n  'какое из следующих утверждений истинно?']\nquestion = 'А) Выбраны F и G.'\nchoices = {'B': 'Выбраны G и H.', 'C': 'Выбраны H и P.', 'D': 'Выбраны F, G и H.', 'E': 'Выбраны P, Q и R.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Планируется сформировать группу из пяти ученых.', 'Если выбран M, необходимо выбрать как P, так и R.', 'D) Выбраны F, G и H.']\nnew_fact = infer_new_fact(selected) # 'В группу должны войти пять ученых. Вариант Г не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Если выбран M, необходимо выбрать как P, так и R.', 'А) Выбраны F и G.', 'B) Выбраны G и H.', 'C) Выбраны H и P.']\nnew_fact = infer_new_fact(selected) # 'Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты А, Б и В не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если M — единственный химик, отобранный в группу,', 'какое из следующих утверждений истинно?', 'E) Выбраны P, Q и R.', 'В группу должны войти пять ученых. Вариант Г не подходит.', 'Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты А, Б и В не подходят.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_26_bb85290da4", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["G", "H", "K", "M", "P"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10, 11, 15], "consequent": 22}, {"antecedents": [12], "consequent": 23}, {"antecedents": [1, 14], "consequent": 24}, {"antecedents": [15, 16, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent15 -> int1: Two botanists are already selected, so G ot H cannot be selected.; sent12 -> int2: F is already selected. K cannot be selected.; sent1 & sent14 -> int3: When M is selected, so must P and R. That would exceed the desired panel size.; int1 & int2 & int3 & sent15 & sent16 & sent21 -> int4: The answer is E; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Планируется сформировать группу из пяти ученых.", "2": "Участники будут отбираться из трех ботаников:", "3": "F, G и H,", "4": "трех химиков:", "5": "K, L и M,", "6": "и трех зоологов:", "7": "P, Q и R.", "8": "При выборе действуют указанные ниже условия.", "9": "В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.", "10": "Если выбрано несколько ботаников,", "11": "то можно выбрать максимум одного зоолога.", "12": "Нельзя выбрать одновременно F и K.", "13": "Нельзя выбрать одновременно K и M.", "14": "Если выбран M, необходимо выбрать как P, так и R.", "15": "Если выбрано четверо ученых: F, L, Q и R,", "16": "кто из указанных ниже должен быть пятым?", "17": "А) G.", "18": "B) H.", "19": "C) K.", "20": "D) M.", "21": "E) P.", "22": "Два ботаника уже выбраны, поэтому выбрать G или H нельзя.", "23": "F уже выбран. Выбрать K нельзя.", "24": "Если выбран M, то должны быть выбраны P и R, но тогда будет превышена допустимая численность группы.", "25": "Правильный ответ: Д.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планируется сформировать группу из пяти ученых.',\n  'Участники будут отбираться из трех ботаников:',\n  'F, G и H,',\n  'трех химиков:',\n  'K, L и M,',\n  'и трех зоологов:',\n  'P, Q и R.',\n  'При выборе действуют указанные ниже условия.',\n  'В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.',\n  'Если выбрано несколько ботаников,',\n  'то можно выбрать максимум одного зоолога.',\n  'Нельзя выбрать одновременно F и K.',\n  'Нельзя выбрать одновременно K и M.',\n  'Если выбран M, необходимо выбрать как P, так и R.',\n  'Если выбрано четверо ученых: F, L, Q и R,',\n  'кто из указанных ниже должен быть пятым?']\nquestion = 'А) G.'\nchoices = {'B': 'H.', 'C': 'K.', 'D': 'M.', 'E': 'P.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Если выбрано четверо ученых: F, L, Q и R,']\nnew_fact = infer_new_fact(selected) # 'Два ботаника уже выбраны, поэтому выбрать G или H нельзя.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Нельзя выбрать одновременно F и K.']\nnew_fact = infer_new_fact(selected) # 'F уже выбран. Выбрать K нельзя.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Планируется сформировать группу из пяти ученых.', 'Если выбран M, необходимо выбрать как P, так и R.']\nnew_fact = infer_new_fact(selected) # 'Если выбран M, то должны быть выбраны P и R, но тогда будет превышена допустимая численность группы.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если выбрано четверо ученых: F, L, Q и R,', 'кто из указанных ниже должен быть пятым?', 'E) P.', 'Два ботаника уже выбраны, поэтому выбрать G или H нельзя.', 'F уже выбран. Выбрать K нельзя.', 'Если выбран M, то должны быть выбраны P и R, но тогда будет превышена допустимая численность группы.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_27_79af00cbde", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["If K is selected, G cannot be selected.", "If L is selected, F cannot be selected.", "If exactly one chemist is selected, it must be K.", "If exactly two chemists are selected, F cannot be selected.", "If exactly two chemists are selected, G cannot be selected."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [9, 10, 11, 12, 13, 14, 17, 18], "consequent": 22}, {"antecedents": [1, 12, 15], "consequent": 23}, {"antecedents": [10, 11, 12, 13, 14, 21], "consequent": 24}, {"antecedents": [15, 16, 20, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 & sent14 & sent17 & sent18 & sent9 -> int1: There are no conditions that restrict selection of K and G, or L and F; sent1 & sent12 & sent15 -> int2: If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected.; sent10 & sent11 & sent12 & sent13 & sent14 & sent21 -> int3: There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted.; int1 & int2 & int3 & sent15 & sent16 & sent20 -> int4: The answer D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Планируется сформировать группу из пяти ученых.", "2": "Участники будут отбираться из трех ботаников:", "3": "F, G и H,", "4": "трех химиков:", "5": "K, L и M,", "6": "и трех зоологов:", "7": "P, Q и R.", "8": "При выборе действуют указанные ниже условия.", "9": "В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.", "10": "Если выбрано несколько ботаников,", "11": "то можно выбрать максимум одного зоолога.", "12": "Нельзя выбрать одновременно F и K.", "13": "Нельзя выбрать одновременно K и M.", "14": "Если выбран M, необходимо выбрать как P, так и R.", "15": "Если единственным выбранным зоологом является P,", "16": "какое из следующих утверждений истинно?", "17": "А) Если выбран K, выбрать G нельзя.", "18": "B) Если выбран L, выбрать F нельзя.", "19": "C) Если выбран ровно один химик, это должен быть К.", "20": "D) Если выбрано ровно два химика, выбрать F нельзя.", "21": "E) Если выбрано ровно два химика, выбрать G нельзя.", "22": "Условия, ограничивающие выбор K и G либо L и F, отсутствуют.", "23": "Если из химиков выбран только К, то должны быть выбраны все ботаники. Однако F и K нельзя выбрать одновременно.", "24": "Условия, ограничивающие выбор G, если выбраны два химика, отсутствуют. Однако на состав остальных ученых накладываются ограничения.", "25": "Правильный ответ: Г.", "26": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планируется сформировать группу из пяти ученых.',\n  'Участники будут отбираться из трех ботаников:',\n  'F, G и H,',\n  'трех химиков:',\n  'K, L и M,',\n  'и трех зоологов:',\n  'P, Q и R.',\n  'При выборе действуют указанные ниже условия.',\n  'В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.',\n  'Если выбрано несколько ботаников,',\n  'то можно выбрать максимум одного зоолога.',\n  'Нельзя выбрать одновременно F и K.',\n  'Нельзя выбрать одновременно K и M.',\n  'Если выбран M, необходимо выбрать как P, так и R.',\n  'Если единственным выбранным зоологом является P,',\n  'какое из следующих утверждений истинно?']\nquestion = 'А) Если выбран K, выбрать G нельзя.'\nchoices = { 'B': 'Если выбран L, выбрать F нельзя.',\n  'C': 'Если выбран ровно один химик, это должен быть К.',\n  'D': 'Если выбрано ровно два химика, выбрать F нельзя.',\n  'E': 'Если выбрано ровно два химика, выбрать G нельзя.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.', 'Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Нельзя выбрать одновременно F и K.', 'Нельзя выбрать одновременно K и M.', 'Если выбран M, необходимо выбрать как P, так и R.', 'А) Если выбран K, выбрать G нельзя.', 'B) Если выбран L, выбрать F нельзя.']\nnew_fact = infer_new_fact(selected) # 'Условия, ограничивающие выбор K и G либо L и F, отсутствуют.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Планируется сформировать группу из пяти ученых.', 'Нельзя выбрать одновременно F и K.', 'Если единственным выбранным зоологом является P,']\nnew_fact = infer_new_fact(selected) # 'Если из химиков выбран только К, то должны быть выбраны все ботаники. Однако F и K нельзя выбрать одновременно.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Нельзя выбрать одновременно F и K.', 'Нельзя выбрать одновременно K и M.', 'Если выбран M, необходимо выбрать как P, так и R.', 'E) Если выбрано ровно два химика, выбрать G нельзя.']\nnew_fact = infer_new_fact(selected) # 'Условия, ограничивающие выбор G, если выбраны два химика, отсутствуют. Однако на состав остальных ученых накладываются ограничения.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если единственным выбранным зоологом является P,', 'какое из следующих утверждений истинно?', 'D) Если выбрано ровно два химика, выбрать F нельзя.', 'Условия, ограничивающие выбор K и G либо L и F, отсутствуют.', 'Если из химиков выбран только К, то должны быть выбраны все ботаники. Однако F и K нельзя выбрать одновременно.', 'Условия, ограничивающие выбор G, если выбраны два химика, отсутствуют. Однако на состав остальных ученых накладываются ограничения.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_28_69c98c102d", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F or else K", "F or else M", "K or else M", "M or else Q", "P or else Q"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [10, 11, 14, 15], "consequent": 22}, {"antecedents": [9, 10, 11, 12, 12, 14], "consequent": 23}, {"antecedents": [12, 15, 16, 17, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 & sent15 -> int1: If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers.; sent10 & sent11 & sent12 & sent12 & sent14 & sent9 -> int2: There are no conditions that restrict selection of P or Q.; int1 & int2 & sent12 & sent15 & sent16 & sent17 -> int3: The answer is A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Планируется сформировать группу из пяти ученых.", "2": "Участники будут отбираться из трех ботаников:", "3": "F, G и H,", "4": "трех химиков:", "5": "K, L и M,", "6": "и трех зоологов:", "7": "P, Q и R.", "8": "При выборе действуют указанные ниже условия.", "9": "В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.", "10": "Если выбрано несколько ботаников,", "11": "то можно выбрать максимум одного зоолога.", "12": "Нельзя выбрать одновременно F и K.", "13": "Нельзя выбрать одновременно K и M.", "14": "Если выбран M, необходимо выбрать как P, так и R.", "15": "Если в группу были отобраны G и H,", "16": "то в нее также должны войти", "17": "А) F или K.", "18": "B) F или M.", "19": "C) K или M.", "20": "D) M или Q.", "21": "E) P или Q.", "22": "Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты с ученым M не подходят.", "23": "Условия, ограничивающие выбор P или Q, отсутствуют.", "24": "Правильный ответ: А.", "25": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планируется сформировать группу из пяти ученых.',\n  'Участники будут отбираться из трех ботаников:',\n  'F, G и H,',\n  'трех химиков:',\n  'K, L и M,',\n  'и трех зоологов:',\n  'P, Q и R.',\n  'При выборе действуют указанные ниже условия.',\n  'В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.',\n  'Если выбрано несколько ботаников,',\n  'то можно выбрать максимум одного зоолога.',\n  'Нельзя выбрать одновременно F и K.',\n  'Нельзя выбрать одновременно K и M.',\n  'Если выбран M, необходимо выбрать как P, так и R.',\n  'Если в группу были отобраны G и H,',\n  'то в нее также должны войти']\nquestion = 'А) F или K.'\nchoices = {'B': 'F или M.', 'C': 'K или M.', 'D': 'M или Q.', 'E': 'P или Q.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Если выбран M, необходимо выбрать как P, так и R.', 'Если в группу были отобраны G и H,']\nnew_fact = infer_new_fact(selected) # 'Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты с ученым M не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В состав группы должен войти по крайней мере один ученый, представляющий каждую дисциплину.', 'Если выбрано несколько ботаников,', 'то можно выбрать максимум одного зоолога.', 'Нельзя выбрать одновременно F и K.', 'Нельзя выбрать одновременно F и K.', 'Если выбран M, необходимо выбрать как P, так и R.']\nnew_fact = infer_new_fact(selected) # 'Условия, ограничивающие выбор P или Q, отсутствуют.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Нельзя выбрать одновременно F и K.', 'Если в группу были отобраны G и H,', 'то в нее также должны войти', 'А) F или K.', 'Если выбрано несколько ботаников, можно выбрать не более одного зоолога. Варианты с ученым M не подходят.', 'Условия, ограничивающие выбор P или Q, отсутствуют.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_29_64daa9725a", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["fuel, machinery, textiles", "grain, machinery, fuel", "machinery, livestock, fuel", "machinery, textiles, fuel", "machinery, textiles, produce"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [12, 13, 14, 20], "consequent": 21}, {"antecedents": [15, 16, 20], "consequent": 22}, {"antecedents": [9, 10, 11, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent12 & sent13 & sent14 -> int6: We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively); int1 & int5 & sent15 -> int7: We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case.; int6 & int7 & sent10 & sent11 & sent9 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Укажите вариант, в котором приведена правильная последовательность грузов, размещенных в трех первых терминалах отгрузочного дока", "10": "с 1-го по 3-й по порядку.", "11": "А) Топливо, техника, текстильные изделия.", "12": "B) Зерно, техника, топливо.", "13": "C) Техника, скот, топливо.", "14": "D) Техника, текстильные изделия, топливо.", "15": "E) Техника, текстильные изделия, продукты.", "16": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "17": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "18": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "19": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "20": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "21": "Мы исключаем варианты Б, В и Г, поскольку в них номер топливного терминала больше, чем у терминала с грузом, номер которого должен быть выше, чем у топливного (зерно, скот и текстильные изделия, соответственно).", "22": "Мы исключаем вариант Д, поскольку номер топливного терминала должен быть меньше, чем у терминала с текстильными изделиями и продуктами. В данном случае единственный доступный терминал — это номер 1, а он занят техникой.", "23": "Правильный ответ: А.", "24": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Укажите вариант, в котором приведена правильная последовательность грузов, размещенных в трех первых терминалах отгрузочного дока',\n  'с 1-го по 3-й по порядку.']\nquestion = 'А) Топливо, техника, текстильные изделия.'\nchoices = {'B': 'Зерно, техника, топливо.', 'C': 'Техника, скот, топливо.', 'D': 'Техника, текстильные изделия, топливо.', 'E': 'Техника, текстильные изделия, продукты.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B) Зерно, техника, топливо.', 'C) Техника, скот, топливо.', 'D) Техника, текстильные изделия, топливо.', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем варианты Б, В и Г, поскольку в них номер топливного терминала больше, чем у терминала с грузом, номер которого должен быть выше, чем у топливного (зерно, скот и текстильные изделия, соответственно).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) Техника, текстильные изделия, продукты.', 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем вариант Д, поскольку номер топливного терминала должен быть меньше, чем у терминала с текстильными изделиями и продуктами. В данном случае единственный доступный терминал — это номер 1, а он занят техникой.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите вариант, в котором приведена правильная последовательность грузов, размещенных в трех первых терминалах отгрузочного дока', 'с 1-го по 3-й по порядку.', 'А) Топливо, техника, текстильные изделия.', 'Мы исключаем варианты Б, В и Г, поскольку в них номер топливного терминала больше, чем у терминала с грузом, номер которого должен быть выше, чем у топливного (зерно, скот и текстильные изделия, соответственно).', 'Мы исключаем вариант Д, поскольку номер топливного терминала должен быть меньше, чем у терминала с текстильными изделиями и продуктами. В данном случае единственный доступный терминал — это номер 1, а он занят техникой.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_30_4917e7827d", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["grain", "livestock", "machinery", "produce", "textiles"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 & sent1 -> int6: Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:; int5 & int6 -> int7: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G; int5 & int6 & int7 -> int8: Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M); int8 & sent10 & sent9 -> int9: The answer is A.; int9 -> int10: The answer is A);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Какой из следующих грузов НЕ МОЖЕТ находиться в терминале 4?", "10": "А) Зерно.", "11": "B) Скот.", "12": "C) Техника.", "13": "D) Продукты.", "14": "E) Текстильные изделия.", "15": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "16": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "17": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "18": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "19": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "20": "Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.", "21": "Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G", "22": "Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)", "23": "Правильный ответ: А.", "24": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Какой из следующих грузов НЕ МОЖЕТ находиться в терминале 4?']\nquestion = 'А) Зерно.'\nchoices = {'B': 'Скот.', 'C': 'Техника.', 'D': 'Продукты.', 'E': 'Текстильные изделия.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.', 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.']\nnew_fact = infer_new_fact(selected) # 'Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.', 'Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G']\nnew_fact = infer_new_fact(selected) # 'Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой из следующих грузов НЕ МОЖЕТ находиться в терминале 4?', 'А) Зерно.', 'Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_31_1ab2740e34", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["two", "three", "four", "five", "six"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [9, 19], "consequent": 20}, {"antecedents": [1, 20], "consequent": 21}, {"antecedents": [19, 21], "consequent": 22}, {"antecedents": [20, 22], "consequent": 23}, {"antecedents": [16, 17, 22], "consequent": 24}, {"antecedents": [19, 23, 24], "consequent": 25}, {"antecedents": [9, 10, 13, 24, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent7 -> int1: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int2: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int1 & int2 & sent6 -> int3: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int3 & sent5 -> int4: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int4 & sent9 -> int5: Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.; int5 & sent1 -> int6: So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays); int4 & int6 -> int7: This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.; int5 & int7 -> int8: So G must be in bay 6 and M in bay 4: ? ? ? M ? G; int1 & int2 & int7 -> int9: Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,; int4 & int8 & int9 -> int10: and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G; int10 & int9 & sent10 & sent13 & sent9 -> int11: The answer is C since T and P can switch places and both configurations are valid.; int11 -> int12: The answer is C);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Если между терминалом с техникой и терминалом с зерном есть ровно один терминал,", "10": "для скольких из шести терминалов будет однозначно определен тип груза?", "11": "А) Два.", "12": "B) Три.", "13": "C) Четыре.", "14": "D) Пять.", "15": "E) Шесть.", "16": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "17": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "18": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "19": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "20": "Обычно G может находиться в терминале 5 или 6, но теперь между ним и терминалом с техникой должен находиться один терминал.", "21": "Поэтому, если поместить G в 5-й терминал, M будет в 3-м терминале (или 7-м, однако по условиям задачи у нас только 6 терминалов).", "22": "В результате получается невозможная конфигурация, поскольку нам нужно разместить F, T и P ПЕРЕД M, но единственные доступные терминалы — это 1 и 2.", "23": "Поэтому G находится в терминале 6, а M — в терминале 4: ? ? ? M ? G", "24": "Согласно условиям, F находится в терминале 1, чтобы осталось место для P и T, которые расположены рядом друг с другом,", "25": "а номер терминала L должен быть меньше номера терминала G, поэтому получается следующий порядок: F (P/T) (T/P) M L G", "26": "Правильный ответ: В, так как T и P могут меняться местами, и в каждом случае конфигурация будет допустимой.", "27": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Если между терминалом с техникой и терминалом с зерном есть ровно один терминал,',\n  'для скольких из шести терминалов будет однозначно определен тип груза?']\nquestion = 'А) Два.'\nchoices = {'B': 'Три.', 'C': 'Четыре.', 'D': 'Пять.', 'E': 'Шесть.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если между терминалом с техникой и терминалом с зерном есть ровно один терминал,', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Обычно G может находиться в терминале 5 или 6, но теперь между ним и терминалом с техникой должен находиться один терминал.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.', 'Обычно G может находиться в терминале 5 или 6, но теперь между ним и терминалом с техникой должен находиться один терминал.']\nnew_fact = infer_new_fact(selected) # 'Поэтому, если поместить G в 5-й терминал, M будет в 3-м терминале (или 7-м, однако по условиям задачи у нас только 6 терминалов).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Поэтому, если поместить G в 5-й терминал, M будет в 3-м терминале (или 7-м, однако по условиям задачи у нас только 6 терминалов).']\nnew_fact = infer_new_fact(selected) # 'В результате получается невозможная конфигурация, поскольку нам нужно разместить F, T и P ПЕРЕД M, но единственные доступные терминалы — это 1 и 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обычно G может находиться в терминале 5 или 6, но теперь между ним и терминалом с техникой должен находиться один терминал.', 'В результате получается невозможная конфигурация, поскольку нам нужно разместить F, T и P ПЕРЕД M, но единственные доступные терминалы — это 1 и 2.']\nnew_fact = infer_new_fact(selected) # 'Поэтому G находится в терминале 6, а M —\\xa0в терминале 4: ? ? ? M ? G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)', 'В результате получается невозможная конфигурация, поскольку нам нужно разместить F, T и P ПЕРЕД M, но единственные доступные терминалы — это 1 и 2.']\nnew_fact = infer_new_fact(selected) # 'Согласно условиям, F находится в терминале 1, чтобы осталось место для P и T, которые расположены рядом друг с другом,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Поэтому G находится в терминале 6, а M —\\xa0в терминале 4: ? ? ? M ? G', 'Согласно условиям, F находится в терминале 1, чтобы осталось место для P и T, которые расположены рядом друг с другом,']\nnew_fact = infer_new_fact(selected) # 'а номер терминала L должен быть меньше номера терминала G, поэтому получается следующий порядок: F (P/T) (T/P) M L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если между терминалом с техникой и терминалом с зерном есть ровно один терминал,', 'для скольких из шести терминалов будет однозначно определен тип груза?', 'C) Четыре.', 'Согласно условиям, F находится в терминале 1, чтобы осталось место для P и T, которые расположены рядом друг с другом,', 'а номер терминала L должен быть меньше номера терминала G, поэтому получается следующий порядок: F (P/T) (T/P) M L G']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В, так как T и P могут меняться местами, и в каждом случае конфигурация будет допустимой.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В, так как T и P могут меняться местами, и в каждом случае конфигурация будет допустимой.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_32_b09492ce8b", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["bay 1", "bay 2", "bay 3", "bay 5", "bay 6"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [21, 22], "consequent": 23}, {"antecedents": [9, 13, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery (M), so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 & sent1 -> int6: Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:; int5 & int6 -> int7: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G; int5 & int6 & int7 -> int8: Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M); int7 & int8 -> int9: Based on the above configurations, livestock can only be in bays 4 or 5; int9 & sent13 & sent9 -> int10: The answer is D.; int10 -> int11: The answer is D);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "В каком из указанных ниже терминалов может находиться скот?", "10": "А) 1.", "11": "B) 2.", "12": "C) 3.", "13": "D) 5.", "14": "E) 6.", "15": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "16": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "17": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "18": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "19": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "20": "Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.", "21": "Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G", "22": "Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)", "23": "Исходя из конфигураций выше, скот может находиться только в терминале 4 или 5.", "24": "Правильный ответ: Г.", "25": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'В каком из указанных ниже терминалов может находиться скот?']\nquestion = 'А) 1.'\nchoices = {'B': '2.', 'C': '3.', 'D': '5.', 'E': '6.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.', 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.']\nnew_fact = infer_new_fact(selected) # 'Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G', 'Итак, мы определили порядок следования 5 грузов из 6. Если добавить M в один из крайних терминалов, грузы, занимающие на данный момент крайние положения, могут «сместиться» только на одну позицию внутрь.', 'Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G']\nnew_fact = infer_new_fact(selected) # 'Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Топливо может находиться только в терминале 1 или 2: (M/F) (F/M) (T/P) (P/T) L G', 'Зерно может находиться только в терминале 5 или 6: F (T/P) (P/T) L (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'Исходя из конфигураций выше, скот может находиться только в терминале 4 или 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В каком из указанных ниже терминалов может находиться скот?', 'D) 5.', 'Исходя из конфигураций выше, скот может находиться только в терминале 4 или 5.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_33_1f094603db", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["The bay holding fuel is next to the bay holding machinery.", "The bay holding grain is next to the bay holding machinery.", "The bay holding livestock is next to the bay holding fuel.", "The bay holding produce is next to the bay holding livestock.", "The bay holding textiles is next to the bay holding fuel."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [15, 19], "consequent": 20}, {"antecedents": [9, 12, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 -> int6: Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G).; int6 & sent12 & sent9 -> int7: The answer is C.; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Какие из утверждений ниже ложно?", "10": "А) Терминал с топливом находится рядом с терминалом с техникой.", "11": "B) Терминал с зерном находится рядом с терминалом с техникой.", "12": "C) Терминал со скотом находится рядом с терминалом с топливом.", "13": "D) Терминал с продуктами находится рядом с терминалом со скотом.", "14": "E) Терминал с текстильными изделиями находится рядом с терминалом с топливом.", "15": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "16": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "17": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "18": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "19": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "20": "Учитывая заданный порядок, видно, что топливо (F) может находиться только рядом с текстильными изделиями (T) и продуктами (P) (или техникой (M)), но не рядом со скотом (L) или зерном (G).", "21": "Правильный ответ: В.", "22": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Какие из утверждений ниже ложно?']\nquestion = 'А) Терминал с топливом находится рядом с терминалом с техникой.'\nchoices = { 'B': 'Терминал с зерном находится рядом с терминалом с техникой.',\n  'C': 'Терминал со скотом находится рядом с терминалом с топливом.',\n  'D': 'Терминал с продуктами находится рядом с терминалом со скотом.',\n  'E': 'Терминал с текстильными изделиями находится рядом с терминалом с топливом.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Учитывая заданный порядок, видно, что топливо (F) может находиться только рядом с текстильными изделиями (T) и продуктами (P) (или техникой (M)), но не рядом со скотом (L) или зерном (G).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какие из утверждений ниже ложно?', 'C) Терминал со скотом находится рядом с терминалом с топливом.', 'Учитывая заданный порядок, видно, что топливо (F) может находиться только рядом с текстильными изделиями (T) и продуктами (P) (или техникой (M)), но не рядом со скотом (L) или зерном (G).']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_34_27704433fb", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["Bay 2 is holding fuel.", "Bay 4 is holding produce.", "Bay 4 is holding textiles.", "Bay 5 is holding grain.", "Bay 5 is holding machinery."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [11, 12, 22, 23], "consequent": 24}, {"antecedents": [16, 21], "consequent": 25}, {"antecedents": [15, 25], "consequent": 26}, {"antecedents": [16, 21], "consequent": 27}, {"antecedents": [14, 27], "consequent": 28}, {"antecedents": [25, 27], "consequent": 29}, {"antecedents": [29], "consequent": 30}, {"antecedents": [9, 10, 13, 24, 26, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent9 -> int6: Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G; int1 & int6 -> int7: If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G; int7 -> int8: The same configuration has bay 4 holding produce.; int7 & int8 & sent11 & sent12 -> int9: We rule out options A and B since they provide valid possibilities; int1 & int6 -> int10: Bay 5 can hold machinery: F - T - P - L - M - G; int10 & sent15 -> int11: We rule out option E since it provides valid possibilities.; int1 & int6 -> int12: Bay 5 can also hold grain: F - T - P - L - G - M; int12 & sent14 -> int13: We rule out option D since it provides valid possibilities.; int10 & int12 -> int14: When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2.; int14 -> int15: We see that textiles can never occupy bay 4.; int11 & int13 & int15 & int9 & sent10 & sent13 & sent9 -> int16: The answer is C.; int16 -> int17: The answer is C);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Если терминалы с продуктами и скотом находятся рядом,", "10": "тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.", "11": "А) В терминале 2 находится топливо.", "12": "B) В терминале 4 находятся продукты.", "13": "C) В терминале 4 находятся текстильные изделия.", "14": "D) В терминале 5 находится зерно.", "15": "E) В терминале 5 находится техника.", "16": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "17": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "18": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "19": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "20": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "21": "Поскольку терминалы с продуктами и скотом должны быть рядом, образуется следующая конфигурация: F — T — P — L — G", "22": "Если в терминале 1 находится техника, то в терминале 2 будет топливо: M — F — T — P — L — G", "23": "В этой же конфигурации терминал 4 используется для продуктов.", "24": "Мы исключаем варианты A и Б, поскольку они допустимы.", "25": "В терминале 5 может находиться техника: F — T — P — L — M — G", "26": "Мы исключаем вариант Д, поскольку он допустим.", "27": "В терминале 5 также может быть зерно: F — T — P — L — G — M", "28": "Мы исключаем вариант Г, так как он допустим.", "29": "Когда в терминале 5 находится техника или зерно, текстильные изделия можно переместить в терминал 2.", "30": "Мы видим, что текстильные изделия никогда могут занимать терминал 4.", "31": "Правильный ответ: В.", "32": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Если терминалы с продуктами и скотом находятся рядом,',\n  'тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.']\nquestion = 'А) В терминале 2 находится топливо.'\nchoices = { 'B': 'В терминале 4 находятся продукты.',\n  'C': 'В терминале 4 находятся текстильные изделия.',\n  'D': 'В терминале 5 находится зерно.',\n  'E': 'В терминале 5 находится техника.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если терминалы с продуктами и скотом находятся рядом,', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Поскольку терминалы с продуктами и скотом должны быть рядом, образуется следующая конфигурация: F — T — P — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Поскольку терминалы с продуктами и скотом должны быть рядом, образуется следующая конфигурация: F — T — P — L — G']\nnew_fact = infer_new_fact(selected) # 'Если в терминале 1 находится техника, то в терминале 2 будет топливо: M — F — T — P — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в терминале 1 находится техника, то в терминале 2 будет топливо: M — F — T — P — L — G']\nnew_fact = infer_new_fact(selected) # 'В этой же конфигурации терминал 4 используется для продуктов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['А) В терминале 2 находится топливо.', 'B) В терминале 4 находятся продукты.', 'Если в терминале 1 находится техника, то в терминале 2 будет топливо: M — F — T — P — L — G', 'В этой же конфигурации терминал 4 используется для продуктов.']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем варианты A и Б, поскольку они допустимы.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Поскольку терминалы с продуктами и скотом должны быть рядом, образуется следующая конфигурация: F — T — P — L — G']\nnew_fact = infer_new_fact(selected) # 'В терминале 5 может находиться техника: F — T — P — L — M — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) В терминале 5 находится техника.', 'В терминале 5 может находиться техника: F — T — P — L — M — G']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем вариант Д, поскольку он допустим.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Поскольку терминалы с продуктами и скотом должны быть рядом, образуется следующая конфигурация: F — T — P — L — G']\nnew_fact = infer_new_fact(selected) # 'В терминале 5 также может быть зерно: F — T — P — L — G — M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) В терминале 5 находится зерно.', 'В терминале 5 также может быть зерно: F — T — P — L — G — M']\nnew_fact = infer_new_fact(selected) # 'Мы исключаем вариант Г, так как он допустим.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В терминале 5 может находиться техника: F — T — P — L — M — G', 'В терминале 5 также может быть зерно: F — T — P — L — G — M']\nnew_fact = infer_new_fact(selected) # 'Когда в терминале 5 находится техника или зерно, текстильные изделия можно переместить в терминал 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда в терминале 5 находится техника или зерно, текстильные изделия можно переместить в терминал 2.']\nnew_fact = infer_new_fact(selected) # 'Мы видим, что текстильные изделия никогда могут занимать терминал 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если терминалы с продуктами и скотом находятся рядом,', 'тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.', 'C) В терминале 4 находятся текстильные изделия.', 'Мы исключаем варианты A и Б, поскольку они допустимы.', 'Мы исключаем вариант Д, поскольку он допустим.', 'Мы исключаем вариант Г, так как он допустим.', 'Мы видим, что текстильные изделия никогда могут занимать терминал 4.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_35_392ea1395f", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["two", "three", "four", "five", "six"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent9 -> int6: If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G; int1 & int6 -> int7: We know 4 types of cargo are completely determined.; int7 & sent10 & sent13 & sent9 -> int8: Answer is C.; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.", "2": "Каждый терминал предназначен только для одного из ровно шести типов грузов:", "3": "топливо, зерно, скот, техника, продукты, текстильные изделия.", "4": "При этом действуют указанные ниже правила.", "5": "Номер терминала с зерном больше номера терминала со скотом.", "6": "Номер терминала со скотом больше номера терминала с текстильными изделиями.", "7": "Номер терминала с продуктами больше номера терминала с топливом.", "8": "Терминал с текстильными изделиями находится рядом с терминалом с продуктами.", "9": "Если в терминале 4 находятся продукты,", "10": "для скольких из шести терминалов будет однозначно определен тип груза?", "11": "А) Два.", "12": "B) Три.", "13": "C) Четыре.", "14": "D) Пять.", "15": "E) Шесть.", "16": "К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.", "17": "Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P", "18": "Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)", "19": "Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L", "20": "Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G", "21": "Если в терминале 4 находятся продукты, то грузы необходимо распределить в соответствии с установленным порядком: (M/F) (F/M) T P L G", "22": "Мы знаем, что места 4 грузов однозначно определены.", "23": "Правильный ответ: В.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'В отгрузочном доке ровно шесть терминалов, последовательно пронумерованных от 1 до 6 с одной стороны дока до другой.',\n  'Каждый терминал предназначен только для одного из ровно шести типов грузов:',\n  'топливо, зерно, скот, техника, продукты, текстильные изделия.',\n  'При этом действуют указанные ниже правила.',\n  'Номер терминала с зерном больше номера терминала со скотом.',\n  'Номер терминала со скотом больше номера терминала с текстильными изделиями.',\n  'Номер терминала с продуктами больше номера терминала с топливом.',\n  'Терминал с текстильными изделиями находится рядом с терминалом с продуктами.',\n  'Если в терминале 4 находятся продукты,',\n  'для скольких из шести терминалов будет однозначно определен тип груза?']\nquestion = 'А) Два.'\nchoices = {'B': 'Три.', 'C': 'Четыре.', 'D': 'Пять.', 'E': 'Шесть.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с продуктами больше номера терминала с топливом.']\nnew_fact = infer_new_fact(selected) # 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Терминал с текстильными изделиями находится рядом с терминалом с продуктами.']\nnew_fact = infer_new_fact(selected) # 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала со скотом больше номера терминала с текстильными изделиями.', 'Номер топливного терминала (F) должен быть меньше, чем у продуктового (P): F — P', 'Продукты (P) должны находиться рядом с текстильными изделиями (T), то есть номер терминала T может быть на единицу больше или меньше, чем у терминала с продуктами: (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер терминала с зерном больше номера терминала со скотом.', 'Номер терминала текстильных изделий (T) должен быть меньше, чем у терминала со скотом (L): F — (T)P(T) — L']\nnew_fact = infer_new_fact(selected) # 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в терминале 4 находятся продукты,', 'Номер терминала со скотом (L) должен быть меньше, чем у терминала с зерном (G): F — (T)P(T) — L — G']\nnew_fact = infer_new_fact(selected) # 'Если в терминале 4 находятся продукты, то грузы необходимо распределить в соответствии с установленным порядком: (M/F) (F/M) T P L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К технике никаких ограничений не применяется, поэтому она может находиться в любом терминале.', 'Если в терминале 4 находятся продукты, то грузы необходимо распределить в соответствии с установленным порядком: (M/F) (F/M) T P L G']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что места 4 грузов однозначно определены.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в терминале 4 находятся продукты,', 'для скольких из шести терминалов будет однозначно определен тип груза?', 'C) Четыре.', 'Мы знаем, что места 4 грузов однозначно определены.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_36_a884934ae1", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday", "oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [7, 14, 15], "consequent": 16}, {"antecedents": [6, 13], "consequent": 17}, {"antecedents": [8, 12], "consequent": 18}, {"antecedents": [9, 10, 11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent14 & sent15 & sent7 -> int1: The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E.; sent13 & sent6 -> int2: At least 1 batch has to be made on Monday, so we rule out option C.; sent12 & sent8 -> int3: The second batch of sugar cookies is made on Thursday, so we rule out option B.; int1 & int2 & int3 & sent10 & sent11 & sent9 -> int4: Answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Укажите полный и", "10": "точный список дней, в которые производятся партии каждого вида печенья.", "11": "А) Овсяное: понедельник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: понедельник, четверг, пятница.", "12": "B) Овсяное: понедельник, вторник, четверг; арахисовое: вторник, среда, четверг; сахарное: понедельник, среда, четверг.", "13": "C) Овсяное: вторник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: вторник, четверг, пятница.", "14": "D) Овсяное: понедельник, вторник, четверг; арахисовое: понедельник, среда, четверг; сахарное: понедельник, четверг, пятница.", "15": "E) Овсяное: понедельник, четверг, пятница; арахисовое: вторник, среда, четверг; сахарное: понедельник, четверг, пятница.", "16": "2-я партия овсяного печенья готовится в тот же день, что и 1-я партия арахисового печенья, поэтому мы исключаем варианты Г и Д.", "17": "По крайней мере 1 партия должна быть изготовлена в понедельник, поэтому мы исключаем вариант В.", "18": "2-я партия сахарного печенья готовится в четверг, поэтому мы исключаем вариант Б.", "19": "Правильный ответ: А.", "20": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Укажите полный и',\n  'точный список дней, в которые производятся партии каждого вида печенья.']\nquestion = 'А) Овсяное: понедельник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: понедельник, четверг, пятница.'\nchoices = { 'B': 'Овсяное: понедельник, вторник, четверг; арахисовое: вторник, среда, четверг; сахарное: понедельник, среда, четверг.',\n  'C': 'Овсяное: вторник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: вторник, четверг, пятница.',\n  'D': 'Овсяное: понедельник, вторник, четверг; арахисовое: понедельник, среда, четверг; сахарное: понедельник, четверг, пятница.',\n  'E': 'Овсяное: понедельник, четверг, пятница; арахисовое: вторник, среда, четверг; сахарное: понедельник, четверг, пятница.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.', 'D) Овсяное: понедельник, вторник, четверг; арахисовое: понедельник, среда, четверг; сахарное: понедельник, четверг, пятница.', 'E) Овсяное: понедельник, четверг, пятница; арахисовое: вторник, среда, четверг; сахарное: понедельник, четверг, пятница.']\nnew_fact = infer_new_fact(selected) # '2-я партия овсяного печенья готовится в тот же день, что и 1-я партия арахисового печенья, поэтому мы исключаем варианты Г и Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По крайней мере одна партия печенья готовится в понедельник.', 'C) Овсяное: вторник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: вторник, четверг, пятница.']\nnew_fact = infer_new_fact(selected) # 'По крайней мере 1 партия должна быть изготовлена в понедельник, поэтому мы исключаем вариант В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторая партия сахарного печенья готовится в четверг.', 'B) Овсяное: понедельник, вторник, четверг; арахисовое: вторник, среда, четверг; сахарное: понедельник, среда, четверг.']\nnew_fact = infer_new_fact(selected) # '2-я партия сахарного печенья готовится в четверг, поэтому мы исключаем вариант Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите полный и', 'точный список дней, в которые производятся партии каждого вида печенья.', 'А) Овсяное: понедельник, среда, четверг; арахисовое: среда, четверг, пятница; сахарное: понедельник, четверг, пятница.', '2-я партия овсяного печенья готовится в тот же день, что и 1-я партия арахисового печенья, поэтому мы исключаем варианты Г и Д.', 'По крайней мере 1 партия должна быть изготовлена в понедельник, поэтому мы исключаем вариант В.', '2-я партия сахарного печенья готовится в четверг, поэтому мы исключаем вариант Б.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_37_ed09ff63ff", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["one", "two", "three", "four", "five"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 16}, {"antecedents": [2, 3, 16], "consequent": 17}, {"antecedents": [7], "consequent": 18}, {"antecedents": [5, 17, 18], "consequent": 19}, {"antecedents": [9, 11, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent6 -> int1: Monday must have at least one batch of cookies made,; int1 & sent2 & sent3 -> int2: so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday.; sent7 -> int3: Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1); int2 & int3 & sent5 -> int4: and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday.; int4 & sent11 & sent9 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Сколько дней с понедельника по пятницу", "10": "может изготавливаться не более двух партий печенья?", "11": "А) Один.", "12": "B) Два.", "13": "C) Три.", "14": "D) Четыре.", "15": "E) Пять.", "16": "В понедельник должна готовиться хотя бы одна партия печенья,", "17": "поэтому в этот день будет изготавливаться по крайней мере 1-я партия овсяного (O1), 1-я партия арахисового (P1) или 1-я партия сахарного (S1) печенья.", "18": "2-я партия овсяного печенья (O2) должна готовиться в тот же день, что и 1-я партия арахисового печенья (P1),", "19": "и в один день нельзя готовить две партии одного печенья, поэтому партия P1 не может изготавливаться в понедельник.", "20": "Правильный ответ: А.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Сколько дней с понедельника по пятницу',\n  'может изготавливаться не более двух партий печенья?']\nquestion = 'А) Один.'\nchoices = {'B': 'Два.', 'C': 'Три.', 'D': 'Четыре.', 'E': 'Пять.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['По крайней мере одна партия печенья готовится в понедельник.']\nnew_fact = infer_new_fact(selected) # 'В понедельник должна готовиться хотя бы одна партия печенья,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['овсяные, арахисовые и сахарные.', 'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', 'В понедельник должна готовиться хотя бы одна партия печенья,']\nnew_fact = infer_new_fact(selected) # 'поэтому в этот день будет изготавливаться по крайней мере 1-я партия овсяного (O1), 1-я партия арахисового (P1) или 1-я партия сахарного (S1) печенья.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.']\nnew_fact = infer_new_fact(selected) # '2-я партия овсяного печенья (O2) должна готовиться в тот же день, что и 1-я партия арахисового печенья (P1),'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В один день две партии одного вида печенья не готовят.', 'поэтому в этот день будет изготавливаться по крайней мере 1-я партия овсяного (O1), 1-я партия арахисового (P1) или 1-я партия сахарного (S1) печенья.', '2-я партия овсяного печенья (O2) должна готовиться в тот же день, что и 1-я партия арахисового печенья (P1),']\nnew_fact = infer_new_fact(selected) # 'и в один день нельзя готовить две партии одного печенья, поэтому партия P1 не может изготавливаться в понедельник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дней с понедельника по пятницу', 'А) Один.', 'и в один день нельзя готовить две партии одного печенья, поэтому партия P1 не может изготавливаться в понедельник.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_38_ce1a5f7128", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["Two different kinds of cookie have their first batch made on Monday.", "Two different kinds of cookie have their first batch made on Tuesday.", "Two different kinds of cookie have their second batch made on Wednesday.", "Two different kinds of cookie have their second batch made on Thursday.", "Two different kinds of cookie have their third batch made on Friday."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 16}, {"antecedents": [5], "consequent": 17}, {"antecedents": [8, 17], "consequent": 18}, {"antecedents": [9, 10, 13, 16, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday.; sent5 -> int2: 2 batches of the same type cannot be made on the same day.; int2 & sent8 -> int3: Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday.; int1 & int3 & sent10 & sent13 & sent9 -> int4: We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C.; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Если 1-я партия арахисового печенья будет приготовлена во вторник,", "10": "тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.", "11": "А) В понедельник готовится 1-я партия двух разных видов печенья.", "12": "B) Во вторник готовится 1-я партия двух разных видов печенья.", "13": "C) В среду готовится 2-я партия двух разных видов печенья.", "14": "D) В четверг готовится 2-я партия двух разных видов печенья.", "15": "E) В пятницу готовится 3-я партия двух разных видов печенья.", "16": "Если 1-я партия арахисового печенья (P1) изготавливается во вторник, то 2-я партия овсяного печенья (O2) также должна быть приготовлена во вторник.", "17": "Две партии одного печенья нельзя готовить в один день.", "18": "2-я партия сахарного печенья (S2) производится в четверг, таким образом 3-я партия сахарного печенья (S3) должна быть изготовлена в пятницу.", "19": "Мы знаем, что день приготовления вторых партий овсяного и сахарного печенья уже определен (вторник и четверг, соответственно), поэтому правильный ответ — В.", "20": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Если 1-я партия арахисового печенья будет приготовлена во вторник,',\n  'тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.']\nquestion = 'А) В понедельник готовится 1-я партия двух разных видов печенья.'\nchoices = { 'B': 'Во вторник готовится 1-я партия двух разных видов печенья.',\n  'C': 'В среду готовится 2-я партия двух разных видов печенья.',\n  'D': 'В четверг готовится 2-я партия двух разных видов печенья.',\n  'E': 'В пятницу готовится 3-я партия двух разных видов печенья.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.', 'Если 1-я партия арахисового печенья будет приготовлена во вторник,']\nnew_fact = infer_new_fact(selected) # 'Если 1-я партия арахисового печенья (P1) изготавливается во вторник, то 2-я партия овсяного печенья (O2) также должна быть приготовлена во вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В один день две партии одного вида печенья не готовят.']\nnew_fact = infer_new_fact(selected) # 'Две партии одного печенья нельзя готовить в один день.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вторая партия сахарного печенья готовится в четверг.', 'Две партии одного печенья нельзя готовить в один день.']\nnew_fact = infer_new_fact(selected) # '2-я партия сахарного печенья (S2) производится в четверг, таким образом 3-я партия сахарного печенья (S3) должна быть изготовлена в пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 1-я партия арахисового печенья будет приготовлена во вторник,', 'тогда истинным может быть каждое из утверждений ниже, КРОМЕ одного. Укажите его.', 'C) В среду готовится 2-я партия двух разных видов печенья.', 'Если 1-я партия арахисового печенья (P1) изготавливается во вторник, то 2-я партия овсяного печенья (O2) также должна быть приготовлена во вторник.', '2-я партия сахарного печенья (S2) производится в четверг, таким образом 3-я партия сахарного печенья (S3) должна быть изготовлена в пятницу.']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что день приготовления вторых партий овсяного и сахарного печенья уже определен (вторник и четверг, соответственно), поэтому правильный ответ — В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мы знаем, что день приготовления вторых партий овсяного и сахарного печенья уже определен (вторник и четверг, соответственно), поэтому правильный ответ — В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_39_ca1c392dd8", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["Exactly three batches of cookies are made on Tuesday.", "Exactly three batches of cookies are made on Friday.", "At least two batches of cookies are made on Monday.", "At least two batches of cookies are made on Thursday.", "Fewer batches of cookies are made on Monday than on Tuesday."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [5, 16], "consequent": 17}, {"antecedents": [3, 16], "consequent": 18}, {"antecedents": [9, 16, 17, 18], "consequent": 19}, {"antecedents": [3, 5, 19], "consequent": 20}, {"antecedents": [3, 5, 8, 9], "consequent": 21}, {"antecedents": [16, 19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent7 -> int1: Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,; int1 & sent5 -> int2: P1 cannot be made on Monday.; int1 & sent3 -> int3: If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3).; int1 & int2 & int3 & sent9 -> int4: P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.; int4 & sent3 & sent5 -> int5: Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday.; sent3 & sent5 & sent8 & sent9 -> int6: Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday.; int1 & int4 & int5 & int6 -> int7: We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3).; int7 & sent10 & sent13 & sent9 -> int8: the answer is C.; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Если в среду не готовится ни одна партия печенья,", "10": "какое из утверждений ниже будет истинным?", "11": "А) Во вторник производится ровно три партии печенья.", "12": "B) В пятницу готовятся ровно три партии печенья.", "13": "C) В понедельник изготавливается по крайней мере две партии печенья.", "14": "D) В четверг готовится по крайней мере две партии печенья.", "15": "E) В понедельник производится меньше партий печенья, чем во вторник.", "16": "Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,", "17": "партия P1 не может производиться в понедельник.", "18": "Если партия P1 готовится в четверг или пятницу, на приготовление 3-й партии арахисового печенья (P3) дней не останется.", "19": "Партия P1 может быть сделана только во вторник, поэтому партия P2 должна быть произведена в четверг, а P3 — в пятницу.", "20": "Партия O2 может быть изготовлена только во вторник, поэтому O1 может быть произведена только в понедельник, а O3 — в четверг или пятницу.", "21": "Поскольку 2-я партия сахарного печенья (S2) должна быть приготовлена в четверг, 3-я партия сахарного печенья (S3) может быть произведена только в пятницу, а 1-я партия сахарного печенья (S1) может быть изготовлена в понедельник или вторник.", "22": "Таким образом, по крайней мере две партии должны быть изготовлены во вторник (O2, P1), четверг (P2, S2) и пятницу (P3, S3).", "23": "Правильный ответ: В.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Если в среду не готовится ни одна партия печенья,',\n  'какое из утверждений ниже будет истинным?']\nquestion = 'А) Во вторник производится ровно три партии печенья.'\nchoices = { 'B': 'В пятницу готовятся ровно три партии печенья.',\n  'C': 'В понедельник изготавливается по крайней мере две партии печенья.',\n  'D': 'В четверг готовится по крайней мере две партии печенья.',\n  'E': 'В понедельник производится меньше партий печенья, чем во вторник.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.']\nnew_fact = infer_new_fact(selected) # 'Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В один день две партии одного вида печенья не готовят.', 'Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,']\nnew_fact = infer_new_fact(selected) # 'партия P1 не может производиться в понедельник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', 'Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,']\nnew_fact = infer_new_fact(selected) # 'Если партия P1 готовится в четверг или пятницу, на приготовление 3-й партии арахисового печенья (P3) дней не останется.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в среду не готовится ни одна партия печенья,', 'Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,', 'партия P1 не может производиться в понедельник.', 'Если партия P1 готовится в четверг или пятницу, на приготовление 3-й партии арахисового печенья (P3) дней не останется.']\nnew_fact = infer_new_fact(selected) # 'Партия P1 может быть сделана только во вторник, поэтому партия P2 должна быть произведена в четверг, а P3 — в пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', 'В один день две партии одного вида печенья не готовят.', 'Партия P1 может быть сделана только во вторник, поэтому партия P2 должна быть произведена в четверг, а P3 — в пятницу.']\nnew_fact = infer_new_fact(selected) # 'Партия O2 может быть изготовлена только во вторник, поэтому O1 может быть произведена только в понедельник, а O3 — в четверг или пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', 'В один день две партии одного вида печенья не готовят.', 'Вторая партия сахарного печенья готовится в четверг.', 'Если в среду не готовится ни одна партия печенья,']\nnew_fact = infer_new_fact(selected) # 'Поскольку 2-я партия сахарного печенья (S2) должна быть приготовлена в четверг, 3-я партия сахарного печенья (S3) может быть произведена только в пятницу, а 1-я партия сахарного печенья (S1) может быть изготовлена в понедельник или вторник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поскольку 1-я партия арахисового печенья (P1) и 2-я партия овсяного печенья (O2) должна быть приготовлена в один день,', 'Партия P1 может быть сделана только во вторник, поэтому партия P2 должна быть произведена в четверг, а P3 — в пятницу.', 'Партия O2 может быть изготовлена только во вторник, поэтому O1 может быть произведена только в понедельник, а O3 — в четверг или пятницу.', 'Поскольку 2-я партия сахарного печенья (S2) должна быть приготовлена в четверг, 3-я партия сахарного печенья (S3) может быть произведена только в пятницу, а 1-я партия сахарного печенья (S1) может быть изготовлена в понедельник или вторник.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, по крайней мере две партии должны быть изготовлены во вторник (O2, P1), четверг (P2, S2) и пятницу (P3, S3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в среду не готовится ни одна партия печенья,', 'какое из утверждений ниже будет истинным?', 'C) В понедельник изготавливается по крайней мере две партии печенья.', 'Таким образом, по крайней мере две партии должны быть изготовлены во вторник (O2, P1), четверг (P2, S2) и пятницу (P3, S3).']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_40_22f97be364", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["The first batch of sugar cookies is made on Monday.", "The first batch of oatmeal cookies is made on Tuesday.", "The third batch of oatmeal cookies is made on Friday.", "The first batch of peanut butter cookies is made on Wednesday.", "The second batch of peanut butter cookies is made on Tuesday."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 10, 11, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday.; int1 & sent3 -> int2: There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday.; int2 & sent10 & sent11 & sent9 -> int3: The answer is A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Если в пятницу изготавливается ровно одна партия печенья,", "10": "какое из утверждений ниже истинно?", "11": "А) Первая партия сахарного печенья готовится в понедельник.", "12": "B) Первая партия овсяного печенья изготавливается во вторник.", "13": "C) Третья партия овсяного печенья готовится в пятницу.", "14": "D) Первая партия арахисового печенья готовится в среду.", "15": "E) Вторая партия арахисового печенья готовится во вторник.", "16": "2-я партия сахарного печенья должна быть изготовлена в четверг, поэтому 3-я партия этого печенья готовится в пятницу.", "17": "Остается три дня, когда можно приготовить 1-ю партию сахарного печенья: понедельник, вторник, среда.", "18": "Правильный ответ: А.", "19": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Если в пятницу изготавливается ровно одна партия печенья,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Первая партия сахарного печенья готовится в понедельник.'\nchoices = { 'B': 'Первая партия овсяного печенья изготавливается во вторник.',\n  'C': 'Третья партия овсяного печенья готовится в пятницу.',\n  'D': 'Первая партия арахисового печенья готовится в среду.',\n  'E': 'Вторая партия арахисового печенья готовится во вторник.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В один день две партии одного вида печенья не готовят.', 'Вторая партия сахарного печенья готовится в четверг.']\nnew_fact = infer_new_fact(selected) # '2-я партия сахарного печенья должна быть изготовлена в четверг, поэтому 3-я партия этого печенья готовится в пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', '2-я партия сахарного печенья должна быть изготовлена в четверг, поэтому 3-я партия этого печенья готовится в пятницу.']\nnew_fact = infer_new_fact(selected) # 'Остается три дня, когда можно приготовить 1-ю партию сахарного печенья: понедельник, вторник, среда.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в пятницу изготавливается ровно одна партия печенья,', 'какое из утверждений ниже истинно?', 'А) Первая партия сахарного печенья готовится в понедельник.', 'Остается три дня, когда можно приготовить 1-ю партию сахарного печенья: понедельник, вторник, среда.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_41_4afc83f245", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["At least one batch of cookies is made on each of the five days.", "At least two batches of cookies are made on Wednesday.", "Exactly one batch of cookies is made on Monday.", "Exactly two batches of cookies are made on Tuesday.", "Exactly one batch of cookies is made on Friday."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 17], "consequent": 18}, {"antecedents": [5, 7], "consequent": 19}, {"antecedents": [19], "consequent": 20}, {"antecedents": [2, 6, 18, 20], "consequent": 21}, {"antecedents": [9, 18, 21], "consequent": 22}, {"antecedents": [3, 5, 7, 22], "consequent": 23}, {"antecedents": [16, 23], "consequent": 24}, {"antecedents": [9, 10, 15, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.; int1 & sent3 -> int2: Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday.; int2 & sent9 -> int3: If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.; sent5 & sent7 -> int4: Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1),; int4 -> int5: P1 cannot be made on Monday.; int3 & int5 & sent2 & sent6 -> int6: Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday.; int3 & int6 & sent9 -> int7: Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require).; int7 & sent3 & sent5 & sent7 -> int8: P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday.; int1 & int8 -> int9: We know that 2 cookie batches can be made on Friday (S3, P3).; int9 & sent10 & sent15 & sent9 -> int10: The answer is E.; int10 -> int11: The answer is E);", "textual_logical_units": {"1": "Пекарня готовит ровно три вида печенья:", "2": "овсяные, арахисовые и сахарные.", "3": "Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.", "4": "При этом действуют указанные ниже условия.", "5": "В один день две партии одного вида печенья не готовят.", "6": "По крайней мере одна партия печенья готовится в понедельник.", "7": "Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.", "8": "Вторая партия сахарного печенья готовится в четверг.", "9": "Если 1-я партия одного печенья изготовлена в тот же день, что и 3-я партия другого,", "10": "какое из утверждений ниже ложно?", "11": "А) В каждый из пяти дней производится по крайней мере одна партия печенья.", "12": "B) В среду готовится по крайней мере две партии печенья.", "13": "C) В понедельник производится ровно одна партия печенья.", "14": "D) Во вторник производится ровно две партии печенья.", "15": "E) В пятницу готовится ровно одна партия печенья.", "16": "2-я партия сахарного печенья (S2) должна быть изготовлена в четверг, поэтому 3-я партия сахарного печенья (S3) должна быть приготовлена в пятницу.", "17": "1-я партия сахарного печенья (S1) может быть изготовлена в понедельник, вторник или среду.", "18": "Нам нужно, чтобы 1-я партия одного печенья была приготовлена в тот же день, что и 3-я партия другого печенья. Предположим, что партия S1 была изготовлена в среду.", "19": "Поскольку в один день нельзя приготовить две партии одного печенья, а 2-я партия овсяного печенья (O2) должна быть приготовлена в тот же день, что и 1-я партия арахисового печенья (P1),", "20": "партия P1 не может производиться в понедельник.", "21": "Таким образом, чтобы выполнить требование о том, что в понедельник должна быть изготовлена одна партия печенья, в понедельник можно приготовить только 1-ю партию овсяного печенья (O1).", "22": "Поэтому партия O2 должна производиться во вторник, а O3 — в среду (вместе с партией S1, как требуется по условию).", "23": "Тогда партия P1 изготавливается во вторник, а P2 — в среду или четверг. От этого будет зависеть то, в какой день готовится партия P3: в четверг или пятницу.", "24": "Мы знаем, что в пятницу может быть приготовлено 2 партии печенья (S3, P3).", "25": "Правильный ответ: Д.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пекарня готовит ровно три вида печенья:',\n  'овсяные, арахисовые и сахарные.',\n  'Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.',\n  'При этом действуют указанные ниже условия.',\n  'В один день две партии одного вида печенья не готовят.',\n  'По крайней мере одна партия печенья готовится в понедельник.',\n  'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.',\n  'Вторая партия сахарного печенья готовится в четверг.',\n  'Если 1-я партия одного печенья изготовлена в тот же день, что и 3-я партия другого,',\n  'какое из утверждений ниже ложно?']\nquestion = 'А) В каждый из пяти дней производится по крайней мере одна партия печенья.'\nchoices = { 'B': 'В среду готовится по крайней мере две партии печенья.',\n  'C': 'В понедельник производится ровно одна партия печенья.',\n  'D': 'Во вторник производится ровно две партии печенья.',\n  'E': 'В пятницу готовится ровно одна партия печенья.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В один день две партии одного вида печенья не готовят.', 'Вторая партия сахарного печенья готовится в четверг.']\nnew_fact = infer_new_fact(selected) # '2-я партия сахарного печенья (S2) должна быть изготовлена в четверг, поэтому 3-я партия сахарного печенья (S3) должна быть приготовлена в пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', '2-я партия сахарного печенья (S2) должна быть изготовлена в четверг, поэтому 3-я партия сахарного печенья (S3) должна быть приготовлена в пятницу.']\nnew_fact = infer_new_fact(selected) # '1-я партия сахарного печенья (S1) может быть изготовлена в понедельник, вторник или среду.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 1-я партия одного печенья изготовлена в тот же день, что и 3-я партия другого,', '1-я партия сахарного печенья (S1) может быть изготовлена в понедельник, вторник или среду.']\nnew_fact = infer_new_fact(selected) # 'Нам нужно, чтобы 1-я партия одного печенья была приготовлена в тот же день, что и 3-я партия другого печенья. Предположим, что партия S1 была изготовлена в среду.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В один день две партии одного вида печенья не готовят.', 'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.']\nnew_fact = infer_new_fact(selected) # 'Поскольку в один день нельзя приготовить две партии одного печенья, а 2-я партия овсяного печенья (O2) должна быть приготовлена в тот же день, что и 1-я партия арахисового печенья (P1),'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поскольку в один день нельзя приготовить две партии одного печенья, а 2-я партия овсяного печенья (O2) должна быть приготовлена в тот же день, что и 1-я партия арахисового печенья (P1),']\nnew_fact = infer_new_fact(selected) # 'партия P1 не может производиться в понедельник.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['овсяные, арахисовые и сахарные.', 'По крайней мере одна партия печенья готовится в понедельник.', 'Нам нужно, чтобы 1-я партия одного печенья была приготовлена в тот же день, что и 3-я партия другого печенья. Предположим, что партия S1 была изготовлена в среду.', 'партия P1 не может производиться в понедельник.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, чтобы выполнить требование о том, что в понедельник должна быть изготовлена одна партия печенья, в понедельник можно приготовить только 1-ю партию овсяного печенья (O1).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 1-я партия одного печенья изготовлена в тот же день, что и 3-я партия другого,', 'Нам нужно, чтобы 1-я партия одного печенья была приготовлена в тот же день, что и 3-я партия другого печенья. Предположим, что партия S1 была изготовлена в среду.', 'Таким образом, чтобы выполнить требование о том, что в понедельник должна быть изготовлена одна партия печенья, в понедельник можно приготовить только 1-ю партию овсяного печенья (O1).']\nnew_fact = infer_new_fact(selected) # 'Поэтому партия O2 должна производиться во вторник, а O3 — в среду (вместе с партией S1, как требуется по условию).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждую неделю (с понедельника по пятницу) производится ровно три партии каждого вида печенья, и каждая партия полностью готовится за один день.', 'В один день две партии одного вида печенья не готовят.', 'Вторая партия овсяного печенья готовится в тот же день, что и первая партия арахисового печенья.', 'Поэтому партия O2 должна производиться во вторник, а O3 — в среду (вместе с партией S1, как требуется по условию).']\nnew_fact = infer_new_fact(selected) # 'Тогда партия P1 изготавливается во вторник, а P2 — в среду или четверг. От этого будет зависеть то, в какой день готовится партия P3: в четверг или пятницу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2-я партия сахарного печенья (S2) должна быть изготовлена в четверг, поэтому 3-я партия сахарного печенья (S3) должна быть приготовлена в пятницу.', 'Тогда партия P1 изготавливается во вторник, а P2 — в среду или четверг. От этого будет зависеть то, в какой день готовится партия P3: в четверг или пятницу.']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что в пятницу может быть приготовлено 2 партии печенья (S3, P3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 1-я партия одного печенья изготовлена в тот же день, что и 3-я партия другого,', 'какое из утверждений ниже ложно?', 'E) В пятницу готовится ровно одна партия печенья.', 'Мы знаем, что в пятницу может быть приготовлено 2 партии печенья (S3, P3).']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_42_f87ac6d25a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Lopez", "O'Neill", "Jiang, Lopez", "Kramer, O'Neill", "Lopez, Megregian"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 13, 15], "consequent": 17}, {"antecedents": [6, 10, 11, 16], "consequent": 18}, {"antecedents": [7, 14], "consequent": 19}, {"antecedents": [10, 11, 12, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent13 & sent15 & sent8 -> int1: Kramer and O'Neill review Tamerlane. B and D not options.; sent10 & sent11 & sent16 & sent6 -> int2: Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer.; sent14 & sent7 -> int3: Lopez may not review plays reviewed by Jiang. C not an answer.; int1 & int2 & int3 & sent10 & sent11 & sent12 -> int4: The answer is A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Пять учеников:", "2": "Цзян, Крамер, Лопез, Мегрегян и О’Нил,", "3": "пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:", "4": "«Закат», «Тамерлан» и «Волны».", "5": "При этом должны соблюдаться следующие условия.", "6": "И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.", "7": "Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.", "8": "Крамер и О’Нил рецензируют «Тамерлана».", "9": "Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).", "10": "Укажите ниже точный и", "11": "полный список студентов, которые рецензируют только «Закат».", "12": "А) Лопес.", "13": "B) О’Нил.", "14": "C) Цзян, Лопес.", "15": "D) Крамер, О’Нил.", "16": "E) Лопес, Мегрегян.", "17": "Крамер и О’Нил рецензируют «Тамерлана». Варианты Б и Г не подходят.", "18": "И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому Мегрегян рецензирует более одной. Вариант Д не подходит.", "19": "Лопес не может рецензировать пьесы, рецензируемые Цзяном. Вариант В не подходит.", "20": "Правильный ответ: А.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пять учеников:',\n  'Цзян, Крамер, Лопез, Мегрегян и О’Нил,',\n  'пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:',\n  '«Закат», «Тамерлан» и «Волны».',\n  'При этом должны соблюдаться следующие условия.',\n  'И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.',\n  'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.',\n  'Крамер и О’Нил рецензируют «Тамерлана».',\n  'Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).',\n  'Укажите ниже точный и',\n  'полный список студентов, которые рецензируют только «Закат».']\nquestion = 'А) Лопес.'\nchoices = {'B': 'О’Нил.', 'C': 'Цзян, Лопес.', 'D': 'Крамер, О’Нил.', 'E': 'Лопес, Мегрегян.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Крамер и О’Нил рецензируют «Тамерлана».', 'Укажите ниже точный и', 'полный список студентов, которые рецензируют только «Закат».', 'B) О’Нил.', 'D) Крамер, О’Нил.']\nnew_fact = infer_new_fact(selected) # 'Крамер и О’Нил рецензируют «Тамерлана». Варианты Б и Г не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Укажите ниже точный и', 'полный список студентов, которые рецензируют только «Закат».', 'E) Лопес, Мегрегян.']\nnew_fact = infer_new_fact(selected) # 'И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому Мегрегян рецензирует более одной. Вариант Д не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'C) Цзян, Лопес.']\nnew_fact = infer_new_fact(selected) # 'Лопес не может рецензировать пьесы, рецензируемые Цзяном. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите ниже точный и', 'полный список студентов, которые рецензируют только «Закат».', 'А) Лопес.', 'Крамер и О’Нил рецензируют «Тамерлана». Варианты Б и Г не подходят.', 'И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому Мегрегян рецензирует более одной. Вариант Д не подходит.', 'Лопес не может рецензировать пьесы, рецензируемые Цзяном. Вариант В не подходит.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_43_5e82c8fb9f", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang reviews more of the plays than Lopez does.", "Megregian reviews more of the plays than Jiang does.", "Megregian reviews more of the plays than O'Neill does.", "O'Neill reviews more of the plays than Jiang does.", "O'Neill reviews more of the plays than Kramer does."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 16}, {"antecedents": [7, 16], "consequent": 17}, {"antecedents": [6, 17], "consequent": 18}, {"antecedents": [10, 12, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent3 -> int1: The students must each review one or more of three exact plays.; int1 & sent7 -> int2: Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian.; int2 & sent6 -> int3: Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play.; int3 & sent10 & sent12 -> int4: The answer is B.; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Пять учеников:", "2": "Цзян, Крамер, Лопез, Мегрегян и О’Нил,", "3": "пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:", "4": "«Закат», «Тамерлан» и «Волны».", "5": "При этом должны соблюдаться следующие условия.", "6": "И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.", "7": "Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.", "8": "Крамер и О’Нил рецензируют «Тамерлана».", "9": "Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).", "10": "Какое из следующих утверждений истинно?", "11": "А) Цзян рецензирует больше пьес, чем Лопес.", "12": "B) Мегрегян рецензирует больше пьес, чем Цзян.", "13": "C) Мегрегян рецензирует больше пьес, чем О’Нил.", "14": "D) О’Нил рецензирует больше пьес, чем Цзян.", "15": "E) О’Нил рецензирует больше пьес, чем Крамер.", "16": "Каждый ученик должен написать рецензию на одну или несколько из трех пьес.", "17": "Мегрегян и Лопес не могут рецензировать пьесы, которые рецензирует Цзян. Таким образом, для Мегрегяна остается не более двух пьес.", "18": "И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Таким образом, каждый рецензирует одну пьесу.", "19": "Правильный ответ: Б.", "20": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пять учеников:',\n  'Цзян, Крамер, Лопез, Мегрегян и О’Нил,',\n  'пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:',\n  '«Закат», «Тамерлан» и «Волны».',\n  'При этом должны соблюдаться следующие условия.',\n  'И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.',\n  'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.',\n  'Крамер и О’Нил рецензируют «Тамерлана».',\n  'Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).',\n  'Какое из следующих утверждений истинно?']\nquestion = 'А) Цзян рецензирует больше пьес, чем Лопес.'\nchoices = { 'B': 'Мегрегян рецензирует больше пьес, чем Цзян.',\n  'C': 'Мегрегян рецензирует больше пьес, чем О’Нил.',\n  'D': 'О’Нил рецензирует больше пьес, чем Цзян.',\n  'E': 'О’Нил рецензирует больше пьес, чем Крамер.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:']\nnew_fact = infer_new_fact(selected) # 'Каждый ученик должен написать рецензию на одну или несколько из трех пьес.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Каждый ученик должен написать рецензию на одну или несколько из трех пьес.']\nnew_fact = infer_new_fact(selected) # 'Мегрегян и Лопес не могут рецензировать пьесы, которые рецензирует Цзян. Таким образом, для Мегрегяна остается не более двух пьес.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Мегрегян и Лопес не могут рецензировать пьесы, которые рецензирует Цзян. Таким образом, для Мегрегяна остается не более двух пьес.']\nnew_fact = infer_new_fact(selected) # 'И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Таким образом, каждый рецензирует одну пьесу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое из следующих утверждений истинно?', 'B) Мегрегян рецензирует больше пьес, чем Цзян.', 'И Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Таким образом, каждый рецензирует одну пьесу.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_44_1ff4e8fcaf", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Megregian does not review Undulation.", "O'Neill does not review Undulation.", "Jiang reviews Undulation.", "Lopez reviews Tamerlane.", "O'Neill reviews Sunset."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [6, 7, 10, 14], "consequent": 17}, {"antecedents": [7, 10, 12], "consequent": 18}, {"antecedents": [6, 12, 18], "consequent": 19}, {"antecedents": [6, 7, 10, 13, 16], "consequent": 20}, {"antecedents": [6, 15], "consequent": 21}, {"antecedents": [10, 16, 17, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "linearized_output_en": "sent10 & sent14 & sent6 & sent7 -> int1: Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer; sent10 & sent12 & sent7 -> int2: If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.; int2 & sent12 & sent6 -> int3: If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer.; sent10 & sent13 & sent16 & sent6 & sent7 -> int4: If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer.; sent15 & sent6 -> int5: If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian.; int1 & int2 & int3 & int4 & int5 & sent10 & sent16 -> int6: The answer is E; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "Пять учеников:", "2": "Цзян, Крамер, Лопез, Мегрегян и О’Нил,", "3": "пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:", "4": "«Закат», «Тамерлан» и «Волны».", "5": "При этом должны соблюдаться следующие условия.", "6": "И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.", "7": "Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.", "8": "Крамер и О’Нил рецензируют «Тамерлана».", "9": "Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).", "10": "Если ровно трое учеников рецензируют «Волны»,", "11": "какое из утверждений ниже истинно?", "12": "А) Мегрегян не рецензирует «Волны».", "13": "B) О’Нил не рецензирует «Волны».", "14": "C) Цзян рецензирует «Волны».", "15": "D) Лопес рецензирует «Тамерлана».", "16": "E) О’Нил рецензирует «Закат».", "17": "Мегрегян и Лопес не могут рецензировать пьесы, рецензируемые Цзяном. Это означает, что Крамер, Цзян и О’Нил рецензируют «Волны». Это означает, что Крамер и Мегрегян рецензируют две пьесы. Вариант В не подходит.", "18": "Если Мегрегян не рецензирует «Волны», значит эту пьесу могут рецензировать Цзян, Лопес и Крамер. Однако Лопес не может рецензировать пьесу, которую рецензирует Цзян.", "19": "Если отбросить Лопеса, то можно взять Крамера, который отрецензирует две пьесы. Столько же, сколько Мегрегян. Вариант А не подходит.", "20": "Допустим, О’Нил не рецензирует «Волны». Тогда, если в состав рецензентов входит Цзян, какие-то два ученика исключаются, а Крамер и Мегрегян будут рецензировать одинаковое число пьес. Вариант Б не подходит.", "21": "Если Лопес рецензирует «Тамерлана», то он не может рецензировать «Волны», так как он должен отрецензировать меньше пьес, чем Мегрегян. Аналогично, невозможна комбинация с Мегрегяном, Крамером и О’Нилом, так как Крамеру нужно отрецензировать меньше пьес, чем Мегрегяну.", "22": "Правильный ответ: Д.", "23": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пять учеников:',\n  'Цзян, Крамер, Лопез, Мегрегян и О’Нил,',\n  'пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:',\n  '«Закат», «Тамерлан» и «Волны».',\n  'При этом должны соблюдаться следующие условия.',\n  'И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.',\n  'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.',\n  'Крамер и О’Нил рецензируют «Тамерлана».',\n  'Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).',\n  'Если ровно трое учеников рецензируют «Волны»,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Мегрегян не рецензирует «Волны».'\nchoices = {'B': 'О’Нил не рецензирует «Волны».', 'C': 'Цзян рецензирует «Волны».', 'D': 'Лопес рецензирует «Тамерлана».', 'E': 'О’Нил рецензирует «Закат».'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Если ровно трое учеников рецензируют «Волны»,', 'C) Цзян рецензирует «Волны».']\nnew_fact = infer_new_fact(selected) # 'Мегрегян и Лопес не могут рецензировать пьесы, рецензируемые Цзяном. Это означает, что Крамер, Цзян и О’Нил рецензируют «Волны». Это означает, что Крамер и Мегрегян рецензируют две пьесы. Вариант В не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Если ровно трое учеников рецензируют «Волны»,', 'А) Мегрегян не рецензирует «Волны».']\nnew_fact = infer_new_fact(selected) # 'Если Мегрегян не рецензирует «Волны», значит эту пьесу могут рецензировать Цзян, Лопес и Крамер. Однако Лопес не может рецензировать пьесу, которую рецензирует Цзян.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'А) Мегрегян не рецензирует «Волны».', 'Если Мегрегян не рецензирует «Волны», значит эту пьесу могут рецензировать Цзян, Лопес и Крамер. Однако Лопес не может рецензировать пьесу, которую рецензирует Цзян.']\nnew_fact = infer_new_fact(selected) # 'Если отбросить Лопеса, то можно взять Крамера, который отрецензирует две пьесы. Столько же, сколько Мегрегян. Вариант А не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Если ровно трое учеников рецензируют «Волны»,', 'B) О’Нил не рецензирует «Волны».', 'E) О’Нил рецензирует «Закат».']\nnew_fact = infer_new_fact(selected) # 'Допустим, О’Нил не рецензирует «Волны». Тогда, если в состав рецензентов входит Цзян, какие-то два ученика исключаются, а Крамер и Мегрегян будут рецензировать одинаковое число пьес. Вариант Б не подходит.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'D) Лопес рецензирует «Тамерлана».']\nnew_fact = infer_new_fact(selected) # 'Если Лопес рецензирует «Тамерлана», то он не может рецензировать «Волны», так как он должен отрецензировать меньше пьес, чем Мегрегян. Аналогично, невозможна комбинация с Мегрегяном, Крамером и О’Нилом, так как Крамеру нужно отрецензировать меньше пьес, чем Мегрегяну.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если ровно трое учеников рецензируют «Волны»,', 'E) О’Нил рецензирует «Закат».', 'Мегрегян и Лопес не могут рецензировать пьесы, рецензируемые Цзяном. Это означает, что Крамер, Цзян и О’Нил рецензируют «Волны». Это означает, что Крамер и Мегрегян рецензируют две пьесы. Вариант В не подходит.', 'Если Мегрегян не рецензирует «Волны», значит эту пьесу могут рецензировать Цзян, Лопес и Крамер. Однако Лопес не может рецензировать пьесу, которую рецензирует Цзян.', 'Если отбросить Лопеса, то можно взять Крамера, который отрецензирует две пьесы. Столько же, сколько Мегрегян. Вариант А не подходит.', 'Допустим, О’Нил не рецензирует «Волны». Тогда, если в состав рецензентов входит Цзян, какие-то два ученика исключаются, а Крамер и Мегрегян будут рецензировать одинаковое число пьес. Вариант Б не подходит.', 'Если Лопес рецензирует «Тамерлана», то он не может рецензировать «Волны», так как он должен отрецензировать меньше пьес, чем Мегрегян. Аналогично, невозможна комбинация с Мегрегяном, Крамером и О’Нилом, так как Крамеру нужно отрецензировать меньше пьес, чем Мегрегяну.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_45_1b1005bd06", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang, Kramer", "Kramer, O'Neill", "Kramer, Lopez, O'Neill", "Kramer, Megregian, O'Neill", "Lopez, Megregian, O'Neill"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 12, 16], "consequent": 17}, {"antecedents": [6, 7, 10, 11, 13, 14], "consequent": 18}, {"antecedents": [10, 11, 15, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent16 & sent8 -> int1: Kramer and O'Neill must be included in the complete list. A and E not answers.; sent10 & sent11 & sent13 & sent14 & sent6 & sent7 -> int2: Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers.; int1 & int2 & sent10 & sent11 & sent15 -> int3: The answer is D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Пять учеников:", "2": "Цзян, Крамер, Лопез, Мегрегян и О’Нил,", "3": "пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:", "4": "«Закат», «Тамерлан» и «Волны».", "5": "При этом должны соблюдаться следующие условия.", "6": "И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.", "7": "Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.", "8": "Крамер и О’Нил рецензируют «Тамерлана».", "9": "Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).", "10": "Укажите ниже точный и", "11": "полный список учеников, которые рецензируют «Тамерлана».", "12": "А) Цзян, Крамер.", "13": "B) Крамер, О’Нил.", "14": "C) Крамер, Лопес, О’Нил.", "15": "D) Крамер, Мегрегян, О’Нил.", "16": "E) Лопес, Мегрегян, О’Нил.", "17": "В полный список должны войти Крамер и О’Нил. Варианты А и Д не подходят.", "18": "Лопес и Мегрегян не могут рецензировать пьесы, рецензируемые Цзяном. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому варианты Б и В не подходят.", "19": "Правильный ответ: Г.", "20": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пять учеников:',\n  'Цзян, Крамер, Лопез, Мегрегян и О’Нил,',\n  'пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:',\n  '«Закат», «Тамерлан» и «Волны».',\n  'При этом должны соблюдаться следующие условия.',\n  'И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.',\n  'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.',\n  'Крамер и О’Нил рецензируют «Тамерлана».',\n  'Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).',\n  'Укажите ниже точный и',\n  'полный список учеников, которые рецензируют «Тамерлана».']\nquestion = 'А) Цзян, Крамер.'\nchoices = {'B': 'Крамер, О’Нил.', 'C': 'Крамер, Лопес, О’Нил.', 'D': 'Крамер, Мегрегян, О’Нил.', 'E': 'Лопес, Мегрегян, О’Нил.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Крамер и О’Нил рецензируют «Тамерлана».', 'Укажите ниже точный и', 'полный список учеников, которые рецензируют «Тамерлана».', 'А) Цзян, Крамер.', 'E) Лопес, Мегрегян, О’Нил.']\nnew_fact = infer_new_fact(selected) # 'В полный список должны войти Крамер и О’Нил. Варианты А и Д не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Укажите ниже точный и', 'полный список учеников, которые рецензируют «Тамерлана».', 'B) Крамер, О’Нил.', 'C) Крамер, Лопес, О’Нил.']\nnew_fact = infer_new_fact(selected) # 'Лопес и Мегрегян не могут рецензировать пьесы, рецензируемые Цзяном. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому варианты Б и В не подходят.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Укажите ниже точный и', 'полный список учеников, которые рецензируют «Тамерлана».', 'D) Крамер, Мегрегян, О’Нил.', 'В полный список должны войти Крамер и О’Нил. Варианты А и Д не подходят.', 'Лопес и Мегрегян не могут рецензировать пьесы, рецензируемые Цзяном. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян. Поэтому варианты Б и В не подходят.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_46_eaf3c67b1a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang reviews Sunset.", "Lopez reviews Undulation.", "Megregian reviews Sunset.", "Megregian reviews Tamerlane.", "O'Neill reviews Undulation."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [6, 7, 10], "consequent": 17}, {"antecedents": [15, 17], "consequent": 18}, {"antecedents": [10, 11, 15, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent10 & sent6 & sent7 -> int1: Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian.; int1 & sent15 -> int2: Therefore, Megregian should review two plays, Tamerlane being one of them.; int2 & sent10 & sent11 & sent15 -> int3: The answer is D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Пять учеников:", "2": "Цзян, Крамер, Лопез, Мегрегян и О’Нил,", "3": "пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:", "4": "«Закат», «Тамерлан» и «Волны».", "5": "При этом должны соблюдаться следующие условия.", "6": "И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.", "7": "Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.", "8": "Крамер и О’Нил рецензируют «Тамерлана».", "9": "Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).", "10": "Если Цзян не рецензирует «Тамерлана»,", "11": "какое из утверждений ниже будет истинным?", "12": "А) Цзян рецензирует «Закат».", "13": "B) Лопес рецензирует «Волны».", "14": "C) Мегрегян рецензирует «Закат».", "15": "D) Мегрегян рецензирует «Тамерлана».", "16": "E) О’Нил рецензирует «Волны».", "17": "Цзян и Мегрегян не могут рецензировать одинаковые пьесы. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян.", "18": "Поэтому Мегрегян должен отрецензировать две пьесы, в том числе «Тамерлана».", "19": "Правильный ответ: Г.", "20": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пять учеников:',\n  'Цзян, Крамер, Лопез, Мегрегян и О’Нил,',\n  'пишут для школьной газеты одну или несколько рецензий на одну из ровно трех пьес:',\n  '«Закат», «Тамерлан» и «Волны».',\n  'При этом должны соблюдаться следующие условия.',\n  'И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.',\n  'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.',\n  'Крамер и О’Нил рецензируют «Тамерлана».',\n  'Ровно двое учеников рецензируют одинаковые пьесы (одну или несколько).',\n  'Если Цзян не рецензирует «Тамерлана»,',\n  'какое из утверждений ниже будет истинным?']\nquestion = 'А) Цзян рецензирует «Закат».'\nchoices = {'B': 'Лопес рецензирует «Волны».', 'C': 'Мегрегян рецензирует «Закат».', 'D': 'Мегрегян рецензирует «Тамерлана».', 'E': 'О’Нил рецензирует «Волны».'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['И Крамер, и Лопес рецензируют меньше пьес, чем Мегрегян.', 'Ни Лопес, ни Мегрегян не рецензируют пьесы, которые рецензирует Цзян.', 'Если Цзян не рецензирует «Тамерлана»,']\nnew_fact = infer_new_fact(selected) # 'Цзян и Мегрегян не могут рецензировать одинаковые пьесы. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Мегрегян рецензирует «Тамерлана».', 'Цзян и Мегрегян не могут рецензировать одинаковые пьесы. Кроме того, и Крамер, и Лопес должны отрецензировать меньше пьес, чем Мегрегян.']\nnew_fact = infer_new_fact(selected) # 'Поэтому Мегрегян должен отрецензировать две пьесы, в том числе «Тамерлана».'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Цзян не рецензирует «Тамерлана»,', 'какое из утверждений ниже будет истинным?', 'D) Мегрегян рецензирует «Тамерлана».', 'Поэтому Мегрегян должен отрецензировать две пьесы, в том числе «Тамерлана».']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_47_b4bbc39217", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["#1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu", "#1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu", "#1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn", "#1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu", "#1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson; sent8 -> int2: Souza must come before Xu; int1 & int2 & sent11 & sent16 -> int3: Answer is E; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "Администратор должен выделить парковочные места шести новым сотрудникам:", "2": "Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.", "3": "Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:", "4": "1, 2, 3, 4, 5 или 6.", "5": "Двум сотрудникам не может быть выделено одно и то же парковочное место.", "6": "Распределение парковочных мест регулируется указанными ниже правилами.", "7": "Номер парковочного места Янга должен быть больше, чем у Тоговы.", "8": "Номер парковочного места Сюя должен быть больше, чем у Соузы.", "9": "Номер парковочного места Робертсона должен быть больше, чем у Янга.", "10": "Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.", "11": "Каким может быть распределение парковочных мест среди новых сотрудников?", "12": "А) 1: Янг; 2: Соуза; 3: Вон; 4: Робертсон; 5: Тогова; 6: Сюй.", "13": "B) 1: Вон; 2: Тогова; 3: Янг; 4: Соуза; 5: Робертсон; 6: Сюй.", "14": "C) 1: Тогова; 2: Янг; 3: Сюй; 4: Робертсон; 5: Соуза; 6: Вон.", "15": "D) 1: Тогова; 2: Робертсон; 3: Янг; 4: Соуза; 5: Вон; 6: Сюй.", "16": "E) 1: Соуза; 2: Тогова; 3: Янг; 4: Робертсон; 5: Сюй; 6: Вон.", "17": "Номер парковочного места Тоговы должен быть меньше, чем у Янга. Номер парковочного места Янга должен быть меньше, чем у Робертсона. Из этой информации мы понимаем, что порядок будет таким: Тогова > Янг > Робертсон", "18": "Номер парковочного места Соузы должен быть меньше, чем у Сюя.", "19": "Правильный ответ: Д.", "20": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Администратор должен выделить парковочные места шести новым сотрудникам:',\n  'Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.',\n  'Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:',\n  '1, 2, 3, 4, 5 или 6.',\n  'Двум сотрудникам не может быть выделено одно и то же парковочное место.',\n  'Распределение парковочных мест регулируется указанными ниже правилами.',\n  'Номер парковочного места Янга должен быть больше, чем у Тоговы.',\n  'Номер парковочного места Сюя должен быть больше, чем у Соузы.',\n  'Номер парковочного места Робертсона должен быть больше, чем у Янга.',\n  'Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.',\n  'Каким может быть распределение парковочных мест среди новых сотрудников?']\nquestion = 'А) 1: Янг; 2: Соуза; 3: Вон; 4: Робертсон; 5: Тогова; 6: Сюй.'\nchoices = { 'B': '1: Вон; 2: Тогова; 3: Янг; 4: Соуза; 5: Робертсон; 6: Сюй.',\n  'C': '1: Тогова; 2: Янг; 3: Сюй; 4: Робертсон; 5: Соуза; 6: Вон.',\n  'D': '1: Тогова; 2: Робертсон; 3: Янг; 4: Соуза; 5: Вон; 6: Сюй.',\n  'E': '1: Соуза; 2: Тогова; 3: Янг; 4: Робертсон; 5: Сюй; 6: Вон.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Номер парковочного места Янга должен быть больше, чем у Тоговы.', 'Номер парковочного места Робертсона должен быть больше, чем у Янга.']\nnew_fact = infer_new_fact(selected) # 'Номер парковочного места Тоговы должен быть меньше, чем у Янга. Номер парковочного места Янга должен быть меньше, чем у Робертсона. Из этой информации мы понимаем, что порядок будет таким: Тогова > Янг > Робертсон'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер парковочного места Сюя должен быть больше, чем у Соузы.']\nnew_fact = infer_new_fact(selected) # 'Номер парковочного места Соузы должен быть меньше, чем у Сюя.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каким может быть распределение парковочных мест среди новых сотрудников?', 'E) 1: Соуза; 2: Тогова; 3: Янг; 4: Робертсон; 5: Сюй; 6: Вон.', 'Номер парковочного места Тоговы должен быть меньше, чем у Янга. Номер парковочного места Янга должен быть меньше, чем у Робертсона. Из этой информации мы понимаем, что порядок будет таким: Тогова > Янг > Робертсон', 'Номер парковочного места Соузы должен быть меньше, чем у Сюя.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_48_280b5732d4", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["Young is assigned parking space #2.", "Vaughn is assigned parking space #5.", "Togowa is assigned parking space #3.", "Souza is assigned parking space #2.", "Robertson is assigned parking space #3."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 10, 11], "consequent": 18}, {"antecedents": [2, 7, 8, 9, 10, 11, 18], "consequent": 19}, {"antecedents": [11, 12, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent7 & sent8 & sent9 -> int1: We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa; int1 & sent10 & sent11 & sent2 & sent7 & sent8 & sent9 -> int2: We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula.; int2 & sent11 & sent12 & sent14 -> int3: Answer is B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Администратор должен выделить парковочные места шести новым сотрудникам:", "2": "Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.", "3": "Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:", "4": "1, 2, 3, 4, 5 или 6.", "5": "Двум сотрудникам не может быть выделено одно и то же парковочное место.", "6": "Распределение парковочных мест регулируется указанными ниже правилами.", "7": "Номер парковочного места Янга должен быть больше, чем у Тоговы.", "8": "Номер парковочного места Сюя должен быть больше, чем у Соузы.", "9": "Номер парковочного места Робертсона должен быть больше, чем у Янга.", "10": "Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.", "11": "Если Тогова получит парковочное место с номером больше, чем у Соузы,", "12": "какое из утверждений ниже истинно?", "13": "А) Янгу отведено 2-е парковочное место.", "14": "B) Вону отведено 5-е парковочное место.", "15": "C) Тогове отведено 3-е парковочное место.", "16": "D) Соузе отведено 2-е парковочное место.", "17": "E) Робертсону отведено 3-е парковочное место.", "18": "Мы знаем порядок парковочных мест 5 человек из 6 новых сотрудников. Тогова идет перед Янгом, который идет перед Робертсоном. Соуза должен идти перед Сюем и Тоговой.", "19": "Место Вона неизвестно. Учитывая имеющуюся на данный момент информацию, мы можем составить следующую последовательность: Соуза > Сюй или Тогова > Янг > Робертсон. Вон может занять любое место, если это не нарушит приведенный здесь порядок.", "20": "Правильный ответ: Б.", "21": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Администратор должен выделить парковочные места шести новым сотрудникам:',\n  'Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.',\n  'Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:',\n  '1, 2, 3, 4, 5 или 6.',\n  'Двум сотрудникам не может быть выделено одно и то же парковочное место.',\n  'Распределение парковочных мест регулируется указанными ниже правилами.',\n  'Номер парковочного места Янга должен быть больше, чем у Тоговы.',\n  'Номер парковочного места Сюя должен быть больше, чем у Соузы.',\n  'Номер парковочного места Робертсона должен быть больше, чем у Янга.',\n  'Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.',\n  'Если Тогова получит парковочное место с номером больше, чем у Соузы,',\n  'какое из утверждений ниже истинно?']\nquestion = 'А) Янгу отведено 2-е парковочное место.'\nchoices = { 'B': 'Вону отведено 5-е парковочное место.',\n  'C': 'Тогове отведено 3-е парковочное место.',\n  'D': 'Соузе отведено 2-е парковочное место.',\n  'E': 'Робертсону отведено 3-е парковочное место.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Номер парковочного места Янга должен быть больше, чем у Тоговы.', 'Номер парковочного места Сюя должен быть больше, чем у Соузы.', 'Номер парковочного места Робертсона должен быть больше, чем у Янга.', 'Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.', 'Если Тогова получит парковочное место с номером больше, чем у Соузы,']\nnew_fact = infer_new_fact(selected) # 'Мы знаем порядок парковочных мест 5 человек из 6 новых сотрудников. Тогова идет перед Янгом, который идет перед Робертсоном. Соуза должен идти перед Сюем и Тоговой.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.', 'Номер парковочного места Янга должен быть больше, чем у Тоговы.', 'Номер парковочного места Сюя должен быть больше, чем у Соузы.', 'Номер парковочного места Робертсона должен быть больше, чем у Янга.', 'Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.', 'Если Тогова получит парковочное место с номером больше, чем у Соузы,', 'Мы знаем порядок парковочных мест 5 человек из 6 новых сотрудников. Тогова идет перед Янгом, который идет перед Робертсоном. Соуза должен идти перед Сюем и Тоговой.']\nnew_fact = infer_new_fact(selected) # 'Место Вона неизвестно. Учитывая имеющуюся на данный момент информацию, мы можем составить следующую последовательность: Соуза > Сюй или Тогова > Янг > Робертсон. Вон может занять любое место, если это не нарушит приведенный здесь порядок.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Тогова получит парковочное место с номером больше, чем у Соузы,', 'какое из утверждений ниже истинно?', 'B) Вону отведено 5-е парковочное место.', 'Место Вона неизвестно. Учитывая имеющуюся на данный момент информацию, мы можем составить следующую последовательность: Соуза > Сюй или Тогова > Янг > Робертсон. Вон может занять любое место, если это не нарушит приведенный здесь порядок.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_49_f8d1d00c99", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["Souza is assigned parking space #1.", "Young is assigned parking space #2.", "Vaughn is assigned parking space #3.", "Robertson is assigned parking space #4.", "Xu is assigned parking space #5."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 18}, {"antecedents": [7, 9], "consequent": 19}, {"antecedents": [10, 19], "consequent": 20}, {"antecedents": [0], "consequent": 21}, {"antecedents": [18, 19, 20, 21], "consequent": 22}, {"antecedents": [11, 12, 15, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent8 -> int1: Souza must be assigned to a lower numbered space than Xu.; sent7 & sent9 -> int2: Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R; int2 & sent10 -> int3: Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4.; sent0 -> int4: Vaughn has no restrictions on parking assignment.; int1 & int2 & int3 & int4 -> int5: So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X; int5 & sent11 & sent12 & sent15 -> int6: The answer has to be C.; int6 -> int7: The answer is C);", "textual_logical_units": {"1": "Администратор должен выделить парковочные места шести новым сотрудникам:", "2": "Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.", "3": "Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:", "4": "1, 2, 3, 4, 5 или 6.", "5": "Двум сотрудникам не может быть выделено одно и то же парковочное место.", "6": "Распределение парковочных мест регулируется указанными ниже правилами.", "7": "Номер парковочного места Янга должен быть больше, чем у Тоговы.", "8": "Номер парковочного места Сюя должен быть больше, чем у Соузы.", "9": "Номер парковочного места Робертсона должен быть больше, чем у Янга.", "10": "Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.", "11": "Какое из следующих утверждений должно быть истинным, чтобы распределение парковочных мест между новыми сотрудниками было полностью и", "12": "однозначно определено?", "13": "А) Соузе отведено 1-е парковочное место.", "14": "B) Янгу отведено 2-е парковочное место.", "15": "C) Вону отведено 3-е парковочное место.", "16": "D) Робертсону отведено 4-е парковочное место.", "17": "E) Сюю отведено 5-е парковочное место.", "18": "У Соузы парковочное место должно иметь меньший номер, чем у Сюя.", "19": "Номер парковочного места Тоговы (T) должен быть меньше, чем у Янга (Y), которому следует выделить парковочное место с номером меньше, чем у Робертсона (R): T < Y< R", "20": "Робертсону можно выделить только места 1–4, но, поскольку в местах с меньшими номерами должны парковаться не менее двух человек, ему можно выделить только место 3 или 4.", "21": "Для Вона никаких условий на номер парковочного места нет.", "22": "Поэтому, если Вону выделено место 3, то Тогове нужно выделить место 1, Янгу — место 2, Робертсону — место 4, а Соузе и Сюю — места 5 и 6, соответственно: T Y V R S X", "23": "Правильный ответ: В.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Администратор должен выделить парковочные места шести новым сотрудникам:',\n  'Робертсону, Соузе, Тогове, Вону, Сюю и Янгу.',\n  'Каждому из шести сотрудников должно быть предоставлено одно из следующих парковочных мест:',\n  '1, 2, 3, 4, 5 или 6.',\n  'Двум сотрудникам не может быть выделено одно и то же парковочное место.',\n  'Распределение парковочных мест регулируется указанными ниже правилами.',\n  'Номер парковочного места Янга должен быть больше, чем у Тоговы.',\n  'Номер парковочного места Сюя должен быть больше, чем у Соузы.',\n  'Номер парковочного места Робертсона должен быть больше, чем у Янга.',\n  'Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.',\n  'Какое из следующих утверждений должно быть истинным, чтобы распределение парковочных мест между новыми сотрудниками было полностью и',\n  'однозначно определено?']\nquestion = 'А) Соузе отведено 1-е парковочное место.'\nchoices = { 'B': 'Янгу отведено 2-е парковочное место.',\n  'C': 'Вону отведено 3-е парковочное место.',\n  'D': 'Робертсону отведено 4-е парковочное место.',\n  'E': 'Сюю отведено 5-е парковочное место.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Номер парковочного места Сюя должен быть больше, чем у Соузы.']\nnew_fact = infer_new_fact(selected) # 'У Соузы парковочное место должно иметь меньший номер, чем у Сюя.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Номер парковочного места Янга должен быть больше, чем у Тоговы.', 'Номер парковочного места Робертсона должен быть больше, чем у Янга.']\nnew_fact = infer_new_fact(selected) # 'Номер парковочного места Тоговы (T) должен быть меньше, чем у Янга (Y), которому следует выделить парковочное место с номером меньше, чем у Робертсона (R): T < Y< R'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Робертсону необходимо выделить парковочное место 1, 2, 3 или 4.', 'Номер парковочного места Тоговы (T) должен быть меньше, чем у Янга (Y), которому следует выделить парковочное место с номером меньше, чем у Робертсона (R): T < Y< R']\nnew_fact = infer_new_fact(selected) # 'Робертсону можно выделить только места 1–4, но, поскольку в местах с меньшими номерами должны парковаться не менее двух человек, ему можно выделить только место 3 или 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Для Вона никаких условий на номер парковочного места нет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Соузы парковочное место должно иметь меньший номер, чем у Сюя.', 'Номер парковочного места Тоговы (T) должен быть меньше, чем у Янга (Y), которому следует выделить парковочное место с номером меньше, чем у Робертсона (R): T < Y< R', 'Робертсону можно выделить только места 1–4, но, поскольку в местах с меньшими номерами должны парковаться не менее двух человек, ему можно выделить только место 3 или 4.', 'Для Вона никаких условий на номер парковочного места нет.']\nnew_fact = infer_new_fact(selected) # 'Поэтому, если Вону выделено место 3, то Тогове нужно выделить место 1, Янгу — место 2, Робертсону — место 4, а Соузе и Сюю — места 5 и 6, соответственно: T Y V R S X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое из следующих утверждений должно быть истинным, чтобы распределение парковочных мест между новыми сотрудниками было полностью и', 'однозначно определено?', 'C) Вону отведено 3-е парковочное место.', 'Поэтому, если Вону выделено место 3, то Тогове нужно выделить место 1, Янгу — место 2, Робертсону — место 4, а Соузе и Сюю — места 5 и 6, соответственно: T Y V R S X']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
