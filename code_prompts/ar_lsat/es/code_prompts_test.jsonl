{"id": "AR-LSAT_0_08192f129b", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle", "Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore", "Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving", "Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore", "Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13, 18], "consequent": 20}, {"antecedents": [8, 19], "consequent": 21}, {"antecedents": [9, 15, 16], "consequent": 22}, {"antecedents": [14, 17, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 & sent18 -> int1: If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D.; sent19 & sent8 -> int2: George can only give a report on Tuesday, so we rule out option E.; sent15 & sent16 & sent9 -> int3: Olivia and Robert cannot give afternoon reports, so we rule out option A and B.; int1 & int2 & int3 & sent14 & sent17 -> int4: Answer is C.; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "¿Cuál de los siguientes podría ser el horario de las presentaciones de los estudiantes?", "15": "A) Lunes por la mañana: Helen; lunes por la tarde: Robert ; martes por la mañana: Olivia; martes por la tarde: Irving; miércoles por la mañana: Lenore; miércoles por la tarde: Kyle.", "16": "B) Lunes por la mañana: Irving; lunes por la tarde: Olivia; martes por la mañana: Helen; martes por la tarde: Kyle; miércoles por la mañana: Nina; miércoles por la tarde: Lenore.", "17": "C) Lunes por la mañana: Lenore; lunes por la tarde: Helen; martes por la mañana: George; martes por la tarde: Kyle; miércoles por la mañana: Robert; miércoles por la tarde: Irving.", "18": "D) Lunes por la mañana: Nina; lunes por la tarde: Helen; martes por la mañana: Robert; martes por la tarde: Irving; miércoles por la mañana: Olivia; miércoles por la tarde: Lenore.", "19": "E) Lunes por la mañana: Olivia; lunes por la tarde: Nina; martes por la mañana: Irving; martes por la tarde: Helen; miércoles por la mañana: Kyle; miércoles por la tarde: George.", "20": "Si Nina hace la presentación el lunes o el martes, Helen e Irving tienen que hacerla al día siguiente, por lo que descartamos la opción D.", "21": "George sólo puede hacer la presentación el martes, por lo que descartamos la opción E.", "22": "Olivia y Robert no pueden hacer la presentación por la tarde, por lo que descartamos las opciones A y B.", "23": "La respuesta correcta es C.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.']\nquestion = '¿Cuál de los siguientes podría ser el horario de las presentaciones de los estudiantes?'\nchoices = { 'A': 'Lunes por la mañana: Helen; lunes por la tarde: Robert ; martes por la mañana: Olivia; martes por la tarde: Irving; miércoles por la mañana: Lenore; '\n       'miércoles por la tarde: Kyle.',\n  'B': 'Lunes por la mañana: Irving; lunes por la tarde: Olivia; martes por la mañana: Helen; martes por la tarde: Kyle; miércoles por la mañana: Nina; '\n       'miércoles por la tarde: Lenore.',\n  'C': 'Lunes por la mañana: Lenore; lunes por la tarde: Helen; martes por la mañana: George; martes por la tarde: Kyle; miércoles por la mañana: Robert; '\n       'miércoles por la tarde: Irving.',\n  'D': 'Lunes por la mañana: Nina; lunes por la tarde: Helen; martes por la mañana: Robert; martes por la tarde: Irving; miércoles por la mañana: Olivia; '\n       'miércoles por la tarde: Lenore.',\n  'E': 'Lunes por la mañana: Olivia; lunes por la tarde: Nina; martes por la mañana: Irving; martes por la tarde: Helen; miércoles por la mañana: Kyle; '\n       'miércoles por la tarde: George.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si Nina hace la presentación,', 'Helen e Irving tendrán que hacer las suyas', 'al día siguiente,', 'salvo que Nina la haga el miércoles.', 'D) Lunes por la mañana: Nina; lunes por la tarde: Helen; martes por la mañana: Robert; martes por la tarde: Irving; miércoles por la mañana: Olivia; miércoles por la tarde: Lenore.']\nnew_fact = infer_new_fact(selected) # 'Si Nina hace la presentación el lunes o el martes, Helen e Irving tienen que hacerla al día siguiente, por lo que descartamos la opción D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El martes es el único día que George puede hacer la presentación.', 'E) Lunes por la mañana: Olivia; lunes por la tarde: Nina; martes por la mañana: Irving; martes por la tarde: Helen; miércoles por la mañana: Kyle; miércoles por la tarde: George.']\nnew_fact = infer_new_fact(selected) # 'George sólo puede hacer la presentación el martes, por lo que descartamos la opción E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni Olivia ni Robert pueden hacer la presentación por la tarde.', 'A) Lunes por la mañana: Helen; lunes por la tarde: Robert ; martes por la mañana: Olivia; martes por la tarde: Irving; miércoles por la mañana: Lenore; miércoles por la tarde: Kyle.', 'B) Lunes por la mañana: Irving; lunes por la tarde: Olivia; martes por la mañana: Helen; martes por la tarde: Kyle; miércoles por la mañana: Nina; miércoles por la tarde: Lenore.']\nnew_fact = infer_new_fact(selected) # 'Olivia y Robert no pueden hacer la presentación por la tarde, por lo que descartamos las opciones A y B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de los siguientes podría ser el horario de las presentaciones de los estudiantes?', 'C) Lunes por la mañana: Lenore; lunes por la tarde: Helen; martes por la mañana: George; martes por la tarde: Kyle; miércoles por la mañana: Robert; miércoles por la tarde: Irving.', 'Si Nina hace la presentación el lunes o el martes, Helen e Irving tienen que hacerla al día siguiente, por lo que descartamos la opción D.', 'George sólo puede hacer la presentación el martes, por lo que descartamos la opción E.', 'Olivia y Robert no pueden hacer la presentación por la tarde, por lo que descartamos las opciones A y B.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_1_765d8869dc", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen, George, and Nina", "Irving, Robert, and Helen", "Nina, Helen, and Olivia", "Olivia, Robert, and Irving", "Robert, George, and Helen"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 14], "consequent": 21}, {"antecedents": [9, 16, 17, 18, 20, 21], "consequent": 22}, {"antecedents": [14, 15, 19, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent14 & sent2 -> int1: If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports.; int1 & sent16 & sent17 & sent18 & sent20 & sent9 -> int2: Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present.; int2 & sent14 & sent15 & sent19 -> int3: The answer is D.; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "Si Kyle y Lenore no hacen sus presentaciones,", "15": "los siguientes estudiantes podrían hacer las presentaciones matutinas del lunes, martes y miércoles, respectivamente:", "16": "A) Helen, George y Nina", "17": "B) Irving, Robert y Helen", "18": "C) Nina, Helen y Olivia", "19": "D) Olivia, Robert e Irving", "20": "E) Robert, George y Helen", "21": "Si Kyle (K) y Lenore (L) no hacen sus presentaciones, las harán George (G), Helen (H), Irving (I), Nina (N), Olivia (O) y Robert (R).", "22": "Olivia y Robert tienen que hacer sus presentaciones por la mañana, por lo que descartamos las opciones A, B, C y E, en las que ambos no aparecen.", "23": "La respuesta correcta es D.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.',\n  'Si Kyle y Lenore no hacen sus presentaciones,']\nquestion = 'los siguientes estudiantes podrían hacer las presentaciones matutinas del lunes, martes y miércoles, respectivamente:'\nchoices = {'A': 'Helen, George y Nina', 'B': 'Irving, Robert y Helen', 'C': 'Nina, Helen y Olivia', 'D': 'Olivia, Robert e Irving', 'E': 'Robert, George y Helen'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),', 'Si Kyle y Lenore no hacen sus presentaciones,']\nnew_fact = infer_new_fact(selected) # 'Si Kyle (K) y Lenore (L) no hacen sus presentaciones, las harán George (G), Helen (H), Irving (I), Nina (N), Olivia (O) y Robert (R).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni Olivia ni Robert pueden hacer la presentación por la tarde.', 'A) Helen, George y Nina', 'B) Irving, Robert y Helen', 'C) Nina, Helen y Olivia', 'E) Robert, George y Helen', 'Si Kyle (K) y Lenore (L) no hacen sus presentaciones, las harán George (G), Helen (H), Irving (I), Nina (N), Olivia (O) y Robert (R).']\nnew_fact = infer_new_fact(selected) # 'Olivia y Robert tienen que hacer sus presentaciones por la mañana, por lo que descartamos las opciones A, B, C y E, en las que ambos no aparecen.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Kyle y Lenore no hacen sus presentaciones,', 'los siguientes estudiantes podrían hacer las presentaciones matutinas del lunes, martes y miércoles, respectivamente:', 'D) Olivia, Robert e Irving', 'Olivia y Robert tienen que hacer sus presentaciones por la mañana, por lo que descartamos las opciones A, B, C y E, en las que ambos no aparecen.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_2_291114c694", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["George and Lenore", "Helen and Nina", "Irving and Robert", "Kyle and Nina", "Olivia and Kyle"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [14, 15, 18, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 -> int1: If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day.; int1 -> int2: If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving.; int2 & sent14 & sent15 & sent18 -> int3: The answer is B.; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "¿Cuál de las siguientes parejas de estudiantes,", "15": "si hacen sus presentaciones el mismo día,", "16": "tendrían que hacerla el miércoles?", "17": "A) George y Lenore", "18": "B) Helen y Nina", "19": "C) Irving y Robert", "20": "D) Kyle y Nina", "21": "E) Olivia y Kyle", "22": "Si Nina hace la presentación el lunes y el martes, Helen e Irving tendrán que hacerla al día siguiente.", "23": "Si, y sólo si, la presentación de Nina es el miércoles, puede hacerla el mismo día que Helen o Irving.", "24": "La respuesta correcta es B.", "25": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.',\n  '¿Cuál de las siguientes parejas de estudiantes,',\n  'si hacen sus presentaciones el mismo día,']\nquestion = 'tendrían que hacerla el miércoles?'\nchoices = {'A': 'George y Lenore', 'B': 'Helen y Nina', 'C': 'Irving y Robert', 'D': 'Kyle y Nina', 'E': 'Olivia y Kyle'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si Nina hace la presentación,', 'Helen e Irving tendrán que hacer las suyas', 'al día siguiente,', 'salvo que Nina la haga el miércoles.']\nnew_fact = infer_new_fact(selected) # 'Si Nina hace la presentación el lunes y el martes, Helen e Irving tendrán que hacerla al día siguiente.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Nina hace la presentación el lunes y el martes, Helen e Irving tendrán que hacerla al día siguiente.']\nnew_fact = infer_new_fact(selected) # 'Si, y sólo si, la presentación de Nina es el miércoles, puede hacerla el mismo día que Helen o Irving.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes parejas de estudiantes,', 'si hacen sus presentaciones el mismo día,', 'B) Helen y Nina', 'Si, y sólo si, la presentación de Nina es el miércoles, puede hacerla el mismo día que Helen o Irving.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_3_3d59347ca7", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen gives a report on Wednesday.", "Nina gives a report on Monday.", "Nina gives a report on Tuesday.", "Olivia gives a report on Monday.", "Robert gives a report on Wednesday."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 14], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [14, 22, 23], "consequent": 24}, {"antecedents": [14, 15, 18, 19, 22, 24], "consequent": 25}, {"antecedents": [14, 15, 21, 22, 25], "consequent": 26}, {"antecedents": [9, 26], "consequent": 27}, {"antecedents": [20, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 17, 25, 26, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "linearized_output_en": "sent14 & sent8 -> int1: George can only give a report on Tuesday.; sent10 & sent11 & sent12 -> int2: Since Helen and Irving must give a report on the day after Nina gives a report,; int1 & int2 & sent14 -> int3: Nina cannot give a report on Monday since Tuesday will have 1 slot occupied.; int1 & int3 & sent14 & sent15 & sent18 & sent19 -> int4: Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.; int1 & int4 & sent14 & sent15 & sent21 -> int5: Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.; int5 & sent9 -> int6: Olivia and Robert can only present in the morning, so Robert presents Monday morning; int6 & sent20 -> int7: Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D.; int4 & int5 & int7 & sent14 & sent15 & sent16 & sent17 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "Si George, Nina y Robert hacen sus presentaciones", "15": "en días diferentes el uno del otro,", "16": "¿cuál de las siguientes afirmaciones podría ser cierta?", "17": "A) Helen hace la presentación el miércoles.", "18": "B) Nina hace la presentación el lunes.", "19": "C) Nina hace la presentación el martes.", "20": "D) Olivia hace la presentación el lunes.", "21": "E) Robert hace la presentación el miércoles.", "22": "George sólo puede hacer la presentación el martes.", "23": "Como Helen e Irving tienen que hacer la presentación el día después de que Nina la haga,", "24": "Nina no puede hacer la presentación el lunes, ya que el martes habrá una franja horaria ocupada.", "25": "Nina tiene que hacer la presentación el miércoles, ya que tiene que hacerla un día diferente a George, por lo que descartamos las opciones B y C.", "26": "Robert tiene que hacer la presentación el lunes, ya que tiene que hacerla un día diferente a George y Nina, por lo que descartamos la opción E.", "27": "Olivia y Robert sólo pueden hacer la presentación por la mañana, por lo que Robert presenta el lunes por la mañana.", "28": "Como la franja horaria del lunes por la mañana ya está ocupada, Olivia no puede hacer la presentación el lunes en ningún momento, por lo que descartamos la opción D.", "29": "La respuesta correcta es A.", "30": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.',\n  'Si George, Nina y Robert hacen sus presentaciones',\n  'en días diferentes el uno del otro,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Helen hace la presentación el miércoles.',\n  'B': 'Nina hace la presentación el lunes.',\n  'C': 'Nina hace la presentación el martes.',\n  'D': 'Olivia hace la presentación el lunes.',\n  'E': 'Robert hace la presentación el miércoles.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El martes es el único día que George puede hacer la presentación.', 'Si George, Nina y Robert hacen sus presentaciones']\nnew_fact = infer_new_fact(selected) # 'George sólo puede hacer la presentación el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Nina hace la presentación,', 'Helen e Irving tendrán que hacer las suyas', 'al día siguiente,']\nnew_fact = infer_new_fact(selected) # 'Como Helen e Irving tienen que hacer la presentación el día después de que Nina la haga,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si George, Nina y Robert hacen sus presentaciones', 'George sólo puede hacer la presentación el martes.', 'Como Helen e Irving tienen que hacer la presentación el día después de que Nina la haga,']\nnew_fact = infer_new_fact(selected) # 'Nina no puede hacer la presentación el lunes, ya que el martes habrá una franja horaria ocupada.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si George, Nina y Robert hacen sus presentaciones', 'en días diferentes el uno del otro,', 'B) Nina hace la presentación el lunes.', 'C) Nina hace la presentación el martes.', 'George sólo puede hacer la presentación el martes.', 'Nina no puede hacer la presentación el lunes, ya que el martes habrá una franja horaria ocupada.']\nnew_fact = infer_new_fact(selected) # 'Nina tiene que hacer la presentación el miércoles, ya que tiene que hacerla un día diferente a George, por lo que descartamos las opciones B y C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si George, Nina y Robert hacen sus presentaciones', 'en días diferentes el uno del otro,', 'E) Robert hace la presentación el miércoles.', 'George sólo puede hacer la presentación el martes.', 'Nina tiene que hacer la presentación el miércoles, ya que tiene que hacerla un día diferente a George, por lo que descartamos las opciones B y C.']\nnew_fact = infer_new_fact(selected) # 'Robert tiene que hacer la presentación el lunes, ya que tiene que hacerla un día diferente a George y Nina, por lo que descartamos la opción E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni Olivia ni Robert pueden hacer la presentación por la tarde.', 'Robert tiene que hacer la presentación el lunes, ya que tiene que hacerla un día diferente a George y Nina, por lo que descartamos la opción E.']\nnew_fact = infer_new_fact(selected) # 'Olivia y Robert sólo pueden hacer la presentación por la mañana, por lo que Robert presenta el lunes por la mañana.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Olivia hace la presentación el lunes.', 'Olivia y Robert sólo pueden hacer la presentación por la mañana, por lo que Robert presenta el lunes por la mañana.']\nnew_fact = infer_new_fact(selected) # 'Como la franja horaria del lunes por la mañana ya está ocupada, Olivia no puede hacer la presentación el lunes en ningún momento, por lo que descartamos la opción D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si George, Nina y Robert hacen sus presentaciones', 'en días diferentes el uno del otro,', '¿cuál de las siguientes afirmaciones podría ser cierta?', 'A) Helen hace la presentación el miércoles.', 'Nina tiene que hacer la presentación el miércoles, ya que tiene que hacerla un día diferente a George, por lo que descartamos las opciones B y C.', 'Robert tiene que hacer la presentación el lunes, ya que tiene que hacerla un día diferente a George y Nina, por lo que descartamos la opción E.', 'Como la franja horaria del lunes por la mañana ya está ocupada, Olivia no puede hacer la presentación el lunes en ningún momento, por lo que descartamos la opción D.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_4_5740a46512", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Irving, Lenore, and Nina", "Lenore, George, and Irving", "Nina, Irving, and Lenore", "Robert, George, and Irving", "Robert, Irving, and Lenore"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [14, 15], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [8], "consequent": 25}, {"antecedents": [9], "consequent": 26}, {"antecedents": [22, 24, 25, 26], "consequent": 27}, {"antecedents": [16, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 20, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "linearized_output_en": "sent14 & sent15 -> int1: We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.; sent10 & sent11 & sent12 -> int2: If Nina presents on Monday, then Helen and Irving must present on Tuesday.; int1 & int2 -> int3: We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday.; sent8 -> int4: George cannot present on Monday or Tuesday.; sent9 -> int5: If Olivia and Robert present, they can only present in the morning.; int1 & int3 & int4 & int5 -> int6: So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can.; int6 & sent16 -> int7: Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot.; int7 & sent14 & sent15 & sent16 & sent20 -> int8: The answer is D.; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "Si Kyle hace la presentación el martes por la tarde", "15": "y Helen el miércoles por la tarde,", "16": "¿cuál de las siguientes podría ser la lista de los estudiantes que hacen la presentación por la mañana el lunes, martes y miércoles, respectivamente?", "17": "A) Irving, Lenore y Nina", "18": "B) Lenore, George e Irving", "19": "C) Nina, Irving y Lenore", "20": "D) Robert, George e Irving", "21": "E) Robert, Irving y Lenore", "22": "Sabemos que Kyle hace la presentación el martes por la tarde y Helen el miércoles por la tarde.", "23": "Si Nina presenta el lunes, Helen e Irving tienen que hacerlo el martes.", "24": "Sabemos que Helen presenta el miércoles y Kyle ya ocupa una de las franjas horarias del martes, por lo que Nina no puede hacer la presentación el lunes.", "25": "George no puede presentar el lunes ni el martes.", "26": "Si Olivia y Robert hacen sus presentaciones, sólo puede ser por la mañana.", "27": "Así, sabemos que Kyle, Helen, Nina, George, Olivia y Robert no pueden presentar el lunes por la tarde, por lo que sólo Lenore o Irving pueden hacerlo.", "28": "Por lo tanto, sólo una combinación de estudiantes que no incluya a Lenore ni a Irving podrá hacer sus presentaciones por la mañana, ya que uno de ellos tiene que ocupar la franja horaria del lunes por la tarde.", "29": "La respuesta correcta es D.", "30": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.',\n  'Si Kyle hace la presentación el martes por la tarde',\n  'y Helen el miércoles por la tarde,']\nquestion = '¿cuál de las siguientes podría ser la lista de los estudiantes que hacen la presentación por la mañana el lunes, martes y miércoles, respectivamente?'\nchoices = {'A': 'Irving, Lenore y Nina', 'B': 'Lenore, George e Irving', 'C': 'Nina, Irving y Lenore', 'D': 'Robert, George e Irving', 'E': 'Robert, Irving y Lenore'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si Kyle hace la presentación el martes por la tarde', 'y Helen el miércoles por la tarde,']\nnew_fact = infer_new_fact(selected) # 'Sabemos que Kyle hace la presentación el martes por la tarde y Helen el miércoles por la tarde.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Nina hace la presentación,', 'Helen e Irving tendrán que hacer las suyas', 'al día siguiente,']\nnew_fact = infer_new_fact(selected) # 'Si Nina presenta el lunes, Helen e Irving tienen que hacerlo el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sabemos que Kyle hace la presentación el martes por la tarde y Helen el miércoles por la tarde.', 'Si Nina presenta el lunes, Helen e Irving tienen que hacerlo el martes.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que Helen presenta el miércoles y Kyle ya ocupa una de las franjas horarias del martes, por lo que Nina no puede hacer la presentación el lunes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El martes es el único día que George puede hacer la presentación.']\nnew_fact = infer_new_fact(selected) # 'George no puede presentar el lunes ni el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni Olivia ni Robert pueden hacer la presentación por la tarde.']\nnew_fact = infer_new_fact(selected) # 'Si Olivia y Robert hacen sus presentaciones, sólo puede ser por la mañana.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sabemos que Kyle hace la presentación el martes por la tarde y Helen el miércoles por la tarde.', 'Sabemos que Helen presenta el miércoles y Kyle ya ocupa una de las franjas horarias del martes, por lo que Nina no puede hacer la presentación el lunes.', 'George no puede presentar el lunes ni el martes.', 'Si Olivia y Robert hacen sus presentaciones, sólo puede ser por la mañana.']\nnew_fact = infer_new_fact(selected) # 'Así, sabemos que Kyle, Helen, Nina, George, Olivia y Robert no pueden presentar el lunes por la tarde, por lo que sólo Lenore o Irving pueden hacerlo.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿cuál de las siguientes podría ser la lista de los estudiantes que hacen la presentación por la mañana el lunes, martes y miércoles, respectivamente?', 'Así, sabemos que Kyle, Helen, Nina, George, Olivia y Robert no pueden presentar el lunes por la tarde, por lo que sólo Lenore o Irving pueden hacerlo.']\nnew_fact = infer_new_fact(selected) # 'Por lo tanto, sólo una combinación de estudiantes que no incluya a Lenore ni a Irving podrá hacer sus presentaciones por la mañana, ya que uno de ellos tiene que ocupar la franja horaria del lunes por la tarde.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Kyle hace la presentación el martes por la tarde', 'y Helen el miércoles por la tarde,', '¿cuál de las siguientes podría ser la lista de los estudiantes que hacen la presentación por la mañana el lunes, martes y miércoles, respectivamente?', 'D) Robert, George e Irving', 'Por lo tanto, sólo una combinación de estudiantes que no incluya a Lenore ni a Irving podrá hacer sus presentaciones por la mañana, ya que uno de ellos tiene que ocupar la franja horaria del lunes por la tarde.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_5_bd579d212a", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "options": ["Helen gives a report on Monday.", "Irving gives a report on Monday.", "Irving gives a report on Wednesday.", "Kyle gives a report on Tuesday.", "Kyle gives a report on Wednesday."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [14, 15, 16], "consequent": 23}, {"antecedents": [9], "consequent": 24}, {"antecedents": [23, 24], "consequent": 25}, {"antecedents": [2, 25], "consequent": 26}, {"antecedents": [8, 26], "consequent": 27}, {"antecedents": [10, 11, 12, 26], "consequent": 28}, {"antecedents": [27, 28], "consequent": 29}, {"antecedents": [27, 29], "consequent": 30}, {"antecedents": [14, 15, 16, 17, 19, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent14 & sent15 & sent16 -> int1: Helen (H), Kyle (K), and Lenore (L) present the morning reports.; sent9 -> int2: Olivia (O) and Robert (R) can only give morning reports.; int1 & int2 -> int3: Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports.; int3 & sent2 -> int4: Irving (I), George (G), and Nina (N) must give the afternoon reports; int4 & sent8 -> int5: George can only present on Tuesday, so he presents on Tuesday afternoon.; int4 & sent10 & sent11 & sent12 -> int6: If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday.; int5 & int6 -> int7: We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report.; int5 & int7 -> int8: Irving must give the Monday afternoon report since all the other days are occupied.; int8 & sent14 & sent15 & sent16 & sent17 & sent19 -> int9: The answer is B.; int9 -> int10: The answer is B);", "textual_logical_units": {"1": "De los ocho estudiantes que participan en un seminario", "2": "(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),", "3": "seis harán presentaciones orales individuales durante tres días consecutivos:", "4": "lunes, martes y miércoles.", "5": "Se harán dos presentaciones cada día,", "6": "una por la mañana y otra por la tarde,", "7": "de acuerdo con las siguientes condiciones:", "8": "El martes es el único día que George puede hacer la presentación.", "9": "Ni Olivia ni Robert pueden hacer la presentación por la tarde.", "10": "Si Nina hace la presentación,", "11": "Helen e Irving tendrán que hacer las suyas", "12": "al día siguiente,", "13": "salvo que Nina la haga el miércoles.", "14": "Si Helen, Kyle y Lenore,", "15": "no necesariamente en ese orden,", "16": "hacen las tres presentaciones matutinas,", "17": "¿cuál de las siguientes afirmaciones tiene que ser cierta?", "18": "A) Helen hace la presentación el lunes.", "19": "B) Irving hace la presentación el lunes.", "20": "C) Irving hace la presentación el miércoles.", "21": "D) Kyle hace la presentación el martes.", "22": "E) Kyle hace la presentación el miércoles.", "23": "Helen (H), Kyle (K) y Lenore (L) hacen sus presentaciones por la mañana.", "24": "Olivia (O) y Robert (R) sólo pueden hacer la presentación por la mañana.", "25": "Como H, K y L ya ocupan las franjas horarias matutinas, O, R, H, K y L no pueden hacer las presentaciones por la tarde en ningún caso.", "26": "Irving (I), George (G) y Nina (N) tienen que hacer sus presentaciones por la tarde.", "27": "George sólo puede presentar el martes, así que lo hace el martes por la tarde.", "28": "Si Nina hace la presentación el lunes, Irving y Helen tienen que hacer las suyas el martes.", "29": "Sabemos que George y Helen, Kyle o Lenore presentan el martes, así que Nina tiene que hacer la presentación el miércoles por la tarde.", "30": "Irving tiene que hacer la presentación el lunes por la tarde, ya que todos los demás días están ocupados.", "31": "La respuesta correcta es B.", "32": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'De los ocho estudiantes que participan en un seminario',\n  '(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),',\n  'seis harán presentaciones orales individuales durante tres días consecutivos:',\n  'lunes, martes y miércoles.',\n  'Se harán dos presentaciones cada día,',\n  'una por la mañana y otra por la tarde,',\n  'de acuerdo con las siguientes condiciones:',\n  'El martes es el único día que George puede hacer la presentación.',\n  'Ni Olivia ni Robert pueden hacer la presentación por la tarde.',\n  'Si Nina hace la presentación,',\n  'Helen e Irving tendrán que hacer las suyas',\n  'al día siguiente,',\n  'salvo que Nina la haga el miércoles.',\n  'Si Helen, Kyle y Lenore,',\n  'no necesariamente en ese orden,',\n  'hacen las tres presentaciones matutinas,']\nquestion = '¿cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'Helen hace la presentación el lunes.',\n  'B': 'Irving hace la presentación el lunes.',\n  'C': 'Irving hace la presentación el miércoles.',\n  'D': 'Kyle hace la presentación el martes.',\n  'E': 'Kyle hace la presentación el miércoles.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si Helen, Kyle y Lenore,', 'no necesariamente en ese orden,', 'hacen las tres presentaciones matutinas,']\nnew_fact = infer_new_fact(selected) # 'Helen (H), Kyle (K) y Lenore (L) hacen sus presentaciones por la mañana.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni Olivia ni Robert pueden hacer la presentación por la tarde.']\nnew_fact = infer_new_fact(selected) # 'Olivia (O) y Robert (R) sólo pueden hacer la presentación por la mañana.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Helen (H), Kyle (K) y Lenore (L) hacen sus presentaciones por la mañana.', 'Olivia (O) y Robert (R) sólo pueden hacer la presentación por la mañana.']\nnew_fact = infer_new_fact(selected) # 'Como H, K y L ya ocupan las franjas horarias matutinas, O, R, H, K y L no pueden hacer las presentaciones por la tarde en ningún caso.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(George, Helen, Irving, Kyle, Lenore, Nina, Olivia y Robert),', 'Como H, K y L ya ocupan las franjas horarias matutinas, O, R, H, K y L no pueden hacer las presentaciones por la tarde en ningún caso.']\nnew_fact = infer_new_fact(selected) # 'Irving (I), George (G) y Nina (N) tienen que hacer sus presentaciones por la tarde.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El martes es el único día que George puede hacer la presentación.', 'Irving (I), George (G) y Nina (N) tienen que hacer sus presentaciones por la tarde.']\nnew_fact = infer_new_fact(selected) # 'George sólo puede presentar el martes, así que lo hace el martes por la tarde.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Nina hace la presentación,', 'Helen e Irving tendrán que hacer las suyas', 'al día siguiente,', 'Irving (I), George (G) y Nina (N) tienen que hacer sus presentaciones por la tarde.']\nnew_fact = infer_new_fact(selected) # 'Si Nina hace la presentación el lunes, Irving y Helen tienen que hacer las suyas el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['George sólo puede presentar el martes, así que lo hace el martes por la tarde.', 'Si Nina hace la presentación el lunes, Irving y Helen tienen que hacer las suyas el martes.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que George y Helen, Kyle o Lenore presentan el martes, así que Nina tiene que hacer la presentación el miércoles por la tarde.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['George sólo puede presentar el martes, así que lo hace el martes por la tarde.', 'Sabemos que George y Helen, Kyle o Lenore presentan el martes, así que Nina tiene que hacer la presentación el miércoles por la tarde.']\nnew_fact = infer_new_fact(selected) # 'Irving tiene que hacer la presentación el lunes por la tarde, ya que todos los demás días están ocupados.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Helen, Kyle y Lenore,', 'no necesariamente en ese orden,', 'hacen las tres presentaciones matutinas,', '¿cuál de las siguientes afirmaciones tiene que ser cierta?', 'B) Irving hace la presentación el lunes.', 'Irving tiene que hacer la presentación el lunes por la tarde, ya que todos los demás días están ocupados.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_6_f738be1d3d", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one French novel, two Russian novels, one French play, one Russian play", "two French novels, one Russian novel, two French plays, one Russian play", "two French novels, two Russian novels, two French plays", "three French novels, one Russian novel, two French plays", "three French novels, two Russian novels, one Russian play"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8, 9, 12], "consequent": 16}, {"antecedents": [7, 11], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [6, 15], "consequent": 19}, {"antecedents": [10, 13, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent12 & sent8 & sent9 -> int1: If both French plays are selected, then the Russian play is not selected. B is not an answer.; sent11 & sent7 -> int2: At least as many French novels as Russian novels should be selected. A is not an answer; sent15 & sent5 -> int3: No more than four French works may be selected. D is not an answer; sent15 & sent6 -> int4: No more than four novels may be selected. E is not an answer; int1 & int2 & int3 & int4 & sent10 & sent13 -> int5: The answer is C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "El organizador de un club de lectura seleccionará al menos cinco y", "2": "como máximo seis libros de un grupo de nueve.", "3": "El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.", "4": "La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:", "5": "No se seleccionarán más de cuatro libros franceses.", "6": "Se seleccionarán al menos tres novelas, pero no más de cuatro.", "7": "Se seleccionarán al menos tantas novelas francesas como rusas.", "8": "Si se seleccionan las dos obras de teatro francesas,", "9": "no se seleccionará la obra de teatro rusa.", "10": "¿Cuál de las siguientes podría ser la selección de libros del organizador?", "11": "A) una novela francesa, dos novelas rusas, una obra de teatro francesa, una obra de teatro rusa", "12": "B) dos novelas francesas, una novela rusa, dos obras de teatro francesas, una obra de teatro rusa", "13": "C) dos novelas francesas, dos novelas rusas, dos obras de teatro francesas", "14": "D) tres novelas francesas, una novela rusa, dos obras de teatro francesas", "15": "E) tres novelas francesas, dos novelas rusas, una obra de teatro rusa", "16": "Si se seleccionan las dos obras de teatro francesas, no se seleccionará la obra de teatro rusa. B no es la respuesta correcta.", "17": "Tienen que seleccionarse al menos tantas novelas francesas como rusas. A no es la respuesta correcta.", "18": "No se pueden seleccionar más de cuatro libros franceses. D no es la respuesta correcta.", "19": "No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.", "20": "La respuesta correcta es C.", "21": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'El organizador de un club de lectura seleccionará al menos cinco y',\n  'como máximo seis libros de un grupo de nueve.',\n  'El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.',\n  'La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:',\n  'No se seleccionarán más de cuatro libros franceses.',\n  'Se seleccionarán al menos tres novelas, pero no más de cuatro.',\n  'Se seleccionarán al menos tantas novelas francesas como rusas.',\n  'Si se seleccionan las dos obras de teatro francesas,',\n  'no se seleccionará la obra de teatro rusa.']\nquestion = '¿Cuál de las siguientes podría ser la selección de libros del organizador?'\nchoices = { 'A': 'una novela francesa, dos novelas rusas, una obra de teatro francesa, una obra de teatro rusa',\n  'B': 'dos novelas francesas, una novela rusa, dos obras de teatro francesas, una obra de teatro rusa',\n  'C': 'dos novelas francesas, dos novelas rusas, dos obras de teatro francesas',\n  'D': 'tres novelas francesas, una novela rusa, dos obras de teatro francesas',\n  'E': 'tres novelas francesas, dos novelas rusas, una obra de teatro rusa'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si se seleccionan las dos obras de teatro francesas,', 'no se seleccionará la obra de teatro rusa.', 'B) dos novelas francesas, una novela rusa, dos obras de teatro francesas, una obra de teatro rusa']\nnew_fact = infer_new_fact(selected) # 'Si se seleccionan las dos obras de teatro francesas, no se seleccionará la obra de teatro rusa. B no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se seleccionarán al menos tantas novelas francesas como rusas.', 'A) una novela francesa, dos novelas rusas, una obra de teatro francesa, una obra de teatro rusa']\nnew_fact = infer_new_fact(selected) # 'Tienen que seleccionarse al menos tantas novelas francesas como rusas. A no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se seleccionarán más de cuatro libros franceses.', 'E) tres novelas francesas, dos novelas rusas, una obra de teatro rusa']\nnew_fact = infer_new_fact(selected) # 'No se pueden seleccionar más de cuatro libros franceses. D no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se seleccionarán al menos tres novelas, pero no más de cuatro.', 'E) tres novelas francesas, dos novelas rusas, una obra de teatro rusa']\nnew_fact = infer_new_fact(selected) # 'No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes podría ser la selección de libros del organizador?', 'C) dos novelas francesas, dos novelas rusas, dos obras de teatro francesas', 'Si se seleccionan las dos obras de teatro francesas, no se seleccionará la obra de teatro rusa. B no es la respuesta correcta.', 'Tienen que seleccionarse al menos tantas novelas francesas como rusas. A no es la respuesta correcta.', 'No se pueden seleccionar más de cuatro libros franceses. D no es la respuesta correcta.', 'No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_7_ae526b34c8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["No Russian novels are selected.", "Exactly one French novel is selected.", "All three plays are selected.", "All three Russian novels are selected.", "All five French works are selected."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 9, 13], "consequent": 16}, {"antecedents": [6, 7, 14], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [1, 2, 7, 8, 9], "consequent": 19}, {"antecedents": [10, 11, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent13 & sent8 & sent9 -> int1: If the French plays are selected, no plays may be selected. C is not an anwer; sent14 & sent6 & sent7 -> int2: At least as many French novels as Russian ones may be selected. D is not an answer; sent15 & sent5 -> int3: At most, four French works may be selected. E is not an answer; sent1 & sent2 & sent7 & sent8 & sent9 -> int4: More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer.; int1 & int2 & int3 & int4 & sent10 & sent11 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "El organizador de un club de lectura seleccionará al menos cinco y", "2": "como máximo seis libros de un grupo de nueve.", "3": "El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.", "4": "La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:", "5": "No se seleccionarán más de cuatro libros franceses.", "6": "Se seleccionarán al menos tres novelas, pero no más de cuatro.", "7": "Se seleccionarán al menos tantas novelas francesas como rusas.", "8": "Si se seleccionan las dos obras de teatro francesas,", "9": "no se seleccionará la obra de teatro rusa.", "10": "¿Cuál de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta?", "11": "A) No se selecciona ninguna novela rusa.", "12": "B) Se selecciona una novela francesa.", "13": "C) Se seleccionan las tres obras de teatro.", "14": "D) Se seleccionan las tres novelas rusas.", "15": "E) Se seleccionan los cinco libros franceses.", "16": "Si se seleccionan las obras de teatro francesas, no se podrá seleccionar ninguna obra de teatro rusa. C no es la respuesta correcta.", "17": "Se pueden seleccionar al menos tantas novelas francesas como rusas. D no es la respuesta correcta.", "18": "Se pueden seleccionar como máximo cuatro libros franceses. E no es la respuesta correcta.", "19": "No se pueden seleccionar más novelas rusas que francesas y, si se seleccionan las obras de teatro francesas, no se podrá seleccionar la rusa. No hay suficientes libros disponibles para el grupo de lectura si se elige B como respuesta.", "20": "La respuesta correcta es A.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'El organizador de un club de lectura seleccionará al menos cinco y',\n  'como máximo seis libros de un grupo de nueve.',\n  'El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.',\n  'La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:',\n  'No se seleccionarán más de cuatro libros franceses.',\n  'Se seleccionarán al menos tres novelas, pero no más de cuatro.',\n  'Se seleccionarán al menos tantas novelas francesas como rusas.',\n  'Si se seleccionan las dos obras de teatro francesas,',\n  'no se seleccionará la obra de teatro rusa.']\nquestion = '¿Cuál de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta?'\nchoices = { 'A': 'No se selecciona ninguna novela rusa.',\n  'B': 'Se selecciona una novela francesa.',\n  'C': 'Se seleccionan las tres obras de teatro.',\n  'D': 'Se seleccionan las tres novelas rusas.',\n  'E': 'Se seleccionan los cinco libros franceses.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si se seleccionan las dos obras de teatro francesas,', 'no se seleccionará la obra de teatro rusa.', 'C) Se seleccionan las tres obras de teatro.']\nnew_fact = infer_new_fact(selected) # 'Si se seleccionan las obras de teatro francesas, no se podrá seleccionar ninguna obra de teatro rusa. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se seleccionarán al menos tres novelas, pero no más de cuatro.', 'Se seleccionarán al menos tantas novelas francesas como rusas.', 'D) Se seleccionan las tres novelas rusas.']\nnew_fact = infer_new_fact(selected) # 'Se pueden seleccionar al menos tantas novelas francesas como rusas. D no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se seleccionarán más de cuatro libros franceses.', 'E) Se seleccionan los cinco libros franceses.']\nnew_fact = infer_new_fact(selected) # 'Se pueden seleccionar como máximo cuatro libros franceses. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El organizador de un club de lectura seleccionará al menos cinco y', 'como máximo seis libros de un grupo de nueve.', 'Se seleccionarán al menos tantas novelas francesas como rusas.', 'Si se seleccionan las dos obras de teatro francesas,', 'no se seleccionará la obra de teatro rusa.']\nnew_fact = infer_new_fact(selected) # 'No se pueden seleccionar más novelas rusas que francesas y, si se seleccionan las obras de teatro francesas, no se podrá seleccionar la rusa. No hay suficientes libros disponibles para el grupo de lectura si se elige B como respuesta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta?', 'A) No se selecciona ninguna novela rusa.', 'Si se seleccionan las obras de teatro francesas, no se podrá seleccionar ninguna obra de teatro rusa. C no es la respuesta correcta.', 'Se pueden seleccionar al menos tantas novelas francesas como rusas. D no es la respuesta correcta.', 'Se pueden seleccionar como máximo cuatro libros franceses. E no es la respuesta correcta.', 'No se pueden seleccionar más novelas rusas que francesas y, si se seleccionan las obras de teatro francesas, no se podrá seleccionar la rusa. No hay suficientes libros disponibles para el grupo de lectura si se elige B como respuesta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_8_a884112958", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one Russian novel", "two French plays", "one Russian novel, one Russian play", "one Russian novel, two French plays", "two Russian novels, one French play"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [5, 10, 14, 16], "consequent": 18}, {"antecedents": [6, 10, 17], "consequent": 19}, {"antecedents": [3, 11, 12, 13], "consequent": 20}, {"antecedents": [10, 11, 12, 15, 18, 19, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent10 & sent14 & sent16 & sent5 -> int1: No more than four French works may be selected. B and D are not answers; sent10 & sent17 & sent6 -> int2: No more than four novels may be selected. E is not an answer; sent11 & sent12 & sent13 & sent3 -> int3: A complete list should include all types of works. A is not an answer/; int1 & int2 & int3 & sent10 & sent11 & sent12 & sent15 -> int4: The answer is C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "El organizador de un club de lectura seleccionará al menos cinco y", "2": "como máximo seis libros de un grupo de nueve.", "3": "El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.", "4": "La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:", "5": "No se seleccionarán más de cuatro libros franceses.", "6": "Se seleccionarán al menos tres novelas, pero no más de cuatro.", "7": "Se seleccionarán al menos tantas novelas francesas como rusas.", "8": "Si se seleccionan las dos obras de teatro francesas,", "9": "no se seleccionará la obra de teatro rusa.", "10": "Si los libros seleccionados incluyen tres novelas francesas,", "11": "¿cuál de las siguientes opciones sería una lista", "12": "completa y correcta de los restantes libros seleccionados?", "13": "A) una novela rusa", "14": "B) dos obras de teatro francesas", "15": "C) una novela rusa, una obra de teatro rusa", "16": "D) una novela rusa, dos obras de teatro francesas", "17": "E) dos novelas rusas, una obra de teatro francesa", "18": "No se pueden seleccionar más de cuatro libros franceses. Ni B ni D son respuestas correctas.", "19": "No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.", "20": "Una lista completa tiene que incluir todos los tipos de libros. A no es la respuesta correcta.", "21": "La respuesta correcta es C.", "22": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'El organizador de un club de lectura seleccionará al menos cinco y',\n  'como máximo seis libros de un grupo de nueve.',\n  'El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.',\n  'La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:',\n  'No se seleccionarán más de cuatro libros franceses.',\n  'Se seleccionarán al menos tres novelas, pero no más de cuatro.',\n  'Se seleccionarán al menos tantas novelas francesas como rusas.',\n  'Si se seleccionan las dos obras de teatro francesas,',\n  'no se seleccionará la obra de teatro rusa.',\n  'Si los libros seleccionados incluyen tres novelas francesas,',\n  '¿cuál de las siguientes opciones sería una lista']\nquestion = 'completa y correcta de los restantes libros seleccionados?'\nchoices = { 'A': 'una novela rusa',\n  'B': 'dos obras de teatro francesas',\n  'C': 'una novela rusa, una obra de teatro rusa',\n  'D': 'una novela rusa, dos obras de teatro francesas',\n  'E': 'dos novelas rusas, una obra de teatro francesa'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No se seleccionarán más de cuatro libros franceses.', 'Si los libros seleccionados incluyen tres novelas francesas,', 'B) dos obras de teatro francesas', 'D) una novela rusa, dos obras de teatro francesas']\nnew_fact = infer_new_fact(selected) # 'No se pueden seleccionar más de cuatro libros franceses. Ni B ni D son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se seleccionarán al menos tres novelas, pero no más de cuatro.', 'Si los libros seleccionados incluyen tres novelas francesas,', 'E) dos novelas rusas, una obra de teatro francesa']\nnew_fact = infer_new_fact(selected) # 'No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.', '¿cuál de las siguientes opciones sería una lista', 'completa y correcta de los restantes libros seleccionados?', 'A) una novela rusa']\nnew_fact = infer_new_fact(selected) # 'Una lista completa tiene que incluir todos los tipos de libros. A no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si los libros seleccionados incluyen tres novelas francesas,', '¿cuál de las siguientes opciones sería una lista', 'completa y correcta de los restantes libros seleccionados?', 'C) una novela rusa, una obra de teatro rusa', 'No se pueden seleccionar más de cuatro libros franceses. Ni B ni D son respuestas correctas.', 'No se pueden seleccionar más de cuatro novelas. E no es la respuesta correcta.', 'Una lista completa tiene que incluir todos los tipos de libros. A no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_9_aab53466b8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["one French novel and one French play", "one French novel and one Russian play", "one Russian novel and one French play", "two French novels", "two Russian novels"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [5, 6, 8, 9, 16, 17], "consequent": 18}, {"antecedents": [17], "consequent": 19}, {"antecedents": [10, 14, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent1 -> int1: The organizer must select at least five works; sent7 -> int2: At least as many French novels are Russian ones may be selected; int1 & int2 & sent5 & sent6 & sent8 & sent9 -> int3: The less restrictive option is at least two French novels, since one can choose either one or two Russian novels, and a play or two.; int2 -> int4: With two Russian novels, one must select two French ones.; int4 & sent10 & sent14 & sent14 -> int5: The answer is D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "El organizador de un club de lectura seleccionará al menos cinco y", "2": "como máximo seis libros de un grupo de nueve.", "3": "El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.", "4": "La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:", "5": "No se seleccionarán más de cuatro libros franceses.", "6": "Se seleccionarán al menos tres novelas, pero no más de cuatro.", "7": "Se seleccionarán al menos tantas novelas francesas como rusas.", "8": "Si se seleccionan las dos obras de teatro francesas,", "9": "no se seleccionará la obra de teatro rusa.", "10": "El organizador tiene que seleccionar al menos:", "11": "A) una novela francesa y una obra de teatro francesa;", "12": "B) una novela francesa y una obra de teatro rusa;", "13": "C) una novela rusa y una obra de teatro francesa;", "14": "D) dos novelas francesas;", "15": "E) dos novelas rusas.", "16": "El organizador tiene que seleccionar al menos cinco libros.", "17": "Se pueden seleccionar al menos tantas novelas francesas como rusas.", "18": "La opción menos restrictiva sería elegir al menos dos novelas francesas, ya que se podría elegir entre una o dos novelas rusas y una obra de teatro o dos.", "19": "Si se eligen dos novelas rusas, hay que seleccionar dos novelas francesas.", "20": "La respuesta correcta es D.", "21": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'El organizador de un club de lectura seleccionará al menos cinco y',\n  'como máximo seis libros de un grupo de nueve.',\n  'El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.',\n  'La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:',\n  'No se seleccionarán más de cuatro libros franceses.',\n  'Se seleccionarán al menos tres novelas, pero no más de cuatro.',\n  'Se seleccionarán al menos tantas novelas francesas como rusas.',\n  'Si se seleccionan las dos obras de teatro francesas,',\n  'no se seleccionará la obra de teatro rusa.']\nquestion = 'El organizador tiene que seleccionar al menos:'\nchoices = { 'A': 'una novela francesa y una obra de teatro francesa;',\n  'B': 'una novela francesa y una obra de teatro rusa;',\n  'C': 'una novela rusa y una obra de teatro francesa;',\n  'D': 'dos novelas francesas;',\n  'E': 'dos novelas rusas.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El organizador de un club de lectura seleccionará al menos cinco y']\nnew_fact = infer_new_fact(selected) # 'El organizador tiene que seleccionar al menos cinco libros.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se seleccionarán al menos tantas novelas francesas como rusas.']\nnew_fact = infer_new_fact(selected) # 'Se pueden seleccionar al menos tantas novelas francesas como rusas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se seleccionarán más de cuatro libros franceses.', 'Se seleccionarán al menos tres novelas, pero no más de cuatro.', 'Si se seleccionan las dos obras de teatro francesas,', 'no se seleccionará la obra de teatro rusa.', 'El organizador tiene que seleccionar al menos cinco libros.', 'Se pueden seleccionar al menos tantas novelas francesas como rusas.']\nnew_fact = infer_new_fact(selected) # 'La opción menos restrictiva sería elegir al menos dos novelas francesas, ya que se podría elegir entre una o dos novelas rusas y una obra de teatro o dos.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se pueden seleccionar al menos tantas novelas francesas como rusas.']\nnew_fact = infer_new_fact(selected) # 'Si se eligen dos novelas rusas, hay que seleccionar dos novelas francesas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El organizador tiene que seleccionar al menos:', 'D) dos novelas francesas;', 'D) dos novelas francesas;', 'Si se eligen dos novelas rusas, hay que seleccionar dos novelas francesas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_10_c6851062fd", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "options": ["No Russian novels and exactly one play are selected.", "Exactly one Russian novel and both French plays are selected.", "Exactly two French novels and the Russian play are selected.", "Exactly two French novels and exactly two plays are selected.", "Exactly two Russian novels and exactly one play are selected."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [10, 11, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: At least five works may be selected. Three French novels and a play are not enough; int1 & sent10 & sent11 -> int2: The answer is A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "El organizador de un club de lectura seleccionará al menos cinco y", "2": "como máximo seis libros de un grupo de nueve.", "3": "El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.", "4": "La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:", "5": "No se seleccionarán más de cuatro libros franceses.", "6": "Se seleccionarán al menos tres novelas, pero no más de cuatro.", "7": "Se seleccionarán al menos tantas novelas francesas como rusas.", "8": "Si se seleccionan las dos obras de teatro francesas,", "9": "no se seleccionará la obra de teatro rusa.", "10": "Cualquiera de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta, EXCEPTO:", "11": "A) No se selecciona ninguna novela rusa y se selecciona una obra de teatro.", "12": "B) Se selecciona una novela rusa y las dos obras de teatro francesas.", "13": "C) Se seleccionan dos novelas francesas y la obra de teatro rusa.", "14": "D) Se seleccionan dos novelas francesas y dos obras de teatro.", "15": "E) Se seleccionan dos novelas rusas y una obra de teatro.", "16": "Tienen que seleccionarse al menos cinco libros. Tres novelas francesas y una obra de teatro no son suficientes.", "17": "La respuesta correcta es A.", "18": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'El organizador de un club de lectura seleccionará al menos cinco y',\n  'como máximo seis libros de un grupo de nueve.',\n  'El grupo está formado por tres novelas francesas, tres novelas rusas, dos obras de teatro francesas y una obra de teatro rusa.',\n  'La selección de libros por parte del organizador tiene que cumplir los siguientes requisitos:',\n  'No se seleccionarán más de cuatro libros franceses.',\n  'Se seleccionarán al menos tres novelas, pero no más de cuatro.',\n  'Se seleccionarán al menos tantas novelas francesas como rusas.',\n  'Si se seleccionan las dos obras de teatro francesas,',\n  'no se seleccionará la obra de teatro rusa.']\nquestion = 'Cualquiera de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta, EXCEPTO:'\nchoices = { 'A': 'No se selecciona ninguna novela rusa y se selecciona una obra de teatro.',\n  'B': 'Se selecciona una novela rusa y las dos obras de teatro francesas.',\n  'C': 'Se seleccionan dos novelas francesas y la obra de teatro rusa.',\n  'D': 'Se seleccionan dos novelas francesas y dos obras de teatro.',\n  'E': 'Se seleccionan dos novelas rusas y una obra de teatro.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El organizador de un club de lectura seleccionará al menos cinco y']\nnew_fact = infer_new_fact(selected) # 'Tienen que seleccionarse al menos cinco libros. Tres novelas francesas y una obra de teatro no son suficientes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Cualquiera de las siguientes afirmaciones sobre la selección de libros del organizador podría ser cierta, EXCEPTO:', 'A) No se selecciona ninguna novela rusa y se selecciona una obra de teatro.', 'Tienen que seleccionarse al menos cinco libros. Tres novelas francesas y una obra de teatro no son suficientes.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_11_ff498a5655", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["L, P, S, R, O, T, F, H", "O, T, P, F, S, H, R, L", "P, T, F, S, L, R, O, H", "P, T, F, S, O, R, L, H", "T, F, P, R, O, L, S, H"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 15], "consequent": 18}, {"antecedents": [7, 17], "consequent": 19}, {"antecedents": [11, 16], "consequent": 20}, {"antecedents": [6, 14], "consequent": 21}, {"antecedents": [12, 13, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "linearized_output_en": "sent15 & sent8 -> int1: O must be performed first or fifth, so we rule out option C.; sent17 & sent7 -> int2: 2 compositions must be performed between F and R, so we rule out option E.; sent11 & sent16 -> int3: At least one composition must be performed between S and O, so we rule out option D.; sent14 & sent6 -> int4: T must be performed either immediately before F or immediately after R, so we rule out option B.; int1 & int2 & int3 & int4 & sent12 & sent13 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "¿Cuál de las siguientes opciones enumera las composiciones en el orden en que podrían interpretarse durante el concierto, desde la primera hasta la octava?", "13": "A) L, P, S, R, O, T, F, H", "14": "B) O, T, P, F, S, H, R, L", "15": "C) P, T, F, S, L, R, O, H", "16": "D) P, T, F, S, O, R, L, H", "17": "E) T, F, P, R, O, L, S, H", "18": "O tiene que interpretarse en el primer o quinto lugar, por lo que descartamos la opción C.", "19": "Se tienen que interpretar dos composiciones entre F y R, por lo que descartamos la opción E.", "20": "Se tiene que interpretar al menos una composición entre S y O, por lo que descartamos la opción D.", "21": "T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que descartamos la opción B.", "22": "La respuesta correcta es A.", "23": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.']\nquestion = '¿Cuál de las siguientes opciones enumera las composiciones en el orden en que podrían interpretarse durante el concierto, desde la primera hasta la octava?'\nchoices = {'A': 'L, P, S, R, O, T, F, H', 'B': 'O, T, P, F, S, H, R, L', 'C': 'P, T, F, S, L, R, O, H', 'D': 'P, T, F, S, O, R, L, H', 'E': 'T, F, P, R, O, L, S, H'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O se interpreta en el primer o quinto lugar.', 'C) P, T, F, S, L, R, O, H']\nnew_fact = infer_new_fact(selected) # 'O tiene que interpretarse en el primer o quinto lugar, por lo que descartamos la opción C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.', 'E) T, F, P, R, O, L, S, H']\nnew_fact = infer_new_fact(selected) # 'Se tienen que interpretar dos composiciones entre F y R, por lo que descartamos la opción E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.', 'D) P, T, F, S, O, R, L, H']\nnew_fact = infer_new_fact(selected) # 'Se tiene que interpretar al menos una composición entre S y O, por lo que descartamos la opción D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T se interpreta inmediatamente antes de F o inmediatamente después de R.', 'B) O, T, P, F, S, H, R, L']\nnew_fact = infer_new_fact(selected) # 'T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que descartamos la opción B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones enumera las composiciones en el orden en que podrían interpretarse durante el concierto, desde la primera hasta la octava?', 'A) L, P, S, R, O, T, F, H', 'O tiene que interpretarse en el primer o quinto lugar, por lo que descartamos la opción C.', 'Se tienen que interpretar dos composiciones entre F y R, por lo que descartamos la opción E.', 'Se tiene que interpretar al menos una composición entre S y O, por lo que descartamos la opción D.', 'T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que descartamos la opción B.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_12_04806d651e", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["second", "third", "fourth", "sixth", "seventh"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10], "consequent": 18}, {"antecedents": [9], "consequent": 19}, {"antecedents": [1, 2, 3, 4, 18, 19], "consequent": 20}, {"antecedents": [12, 17, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent10 -> int1: P must be performed before S.; sent9 -> int2: Slot 8 is already occupied, either by L or H (and only L or H).; int1 & int2 & sent1 & sent2 & sent3 & sent4 -> int3: Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7.; int3 & sent12 & sent17 -> int4: The answer is 7.; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "P NO SE PUEDE interpretar:", "13": "A) en segundo lugar;", "14": "B) en tercer lugar;", "15": "C) en cuarto lugar;", "16": "D) en sexto lugar;", "17": "E) en séptimo lugar.", "18": "P tiene que interpretarse antes que S.", "19": "El puesto 8 ya está ocupado, ya sea por L o H (y sólo por L o H).", "20": "Como sólo hay 8 puestos y el puesto 8 no puede ocuparlo S, P no puede ocupar el puesto 7.", "21": "La respuesta correcta es 7.", "22": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.']\nquestion = 'P NO SE PUEDE interpretar:'\nchoices = {'A': 'en segundo lugar;', 'B': 'en tercer lugar;', 'C': 'en cuarto lugar;', 'D': 'en sexto lugar;', 'E': 'en séptimo lugar.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['P se interpreta en algún momento antes que S.']\nnew_fact = infer_new_fact(selected) # 'P tiene que interpretarse antes que S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La octava composición interpretada es L o H.']\nnew_fact = infer_new_fact(selected) # 'El puesto\\xa08 ya está ocupado, ya sea por L o H (y sólo por L o H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['En un concierto, se interpretarán ocho composiciones', '(F, H, L, O, P, R, S y T).', 'Se interpretarán de una en una, consecutivamente y', 'sólo una composición a la vez.', 'P tiene que interpretarse antes que S.', 'El puesto\\xa08 ya está ocupado, ya sea por L o H (y sólo por L o H).']\nnew_fact = infer_new_fact(selected) # 'Como sólo hay 8 puestos y el puesto\\xa08 no puede ocuparlo S, P no puede ocupar el puesto\\xa07.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P NO SE PUEDE interpretar:', 'E) en séptimo lugar.', 'Como sólo hay 8 puestos y el puesto\\xa08 no puede ocuparlo S, P no puede ocupar el puesto\\xa07.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es 7.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_13_42777d1f2b", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["fourth or seventh", "third or sixth", "third or fourth", "second or seventh", "first or fourth"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 19], "consequent": 20}, {"antecedents": [11], "consequent": 21}, {"antecedents": [7, 20], "consequent": 22}, {"antecedents": [9, 22], "consequent": 23}, {"antecedents": [10, 23], "consequent": 24}, {"antecedents": [21, 24], "consequent": 25}, {"antecedents": [12, 13, 14, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent12 -> int1: T is performed fifth and F is performed 6th: ? ? ? ? T F ? ?; int1 & sent8 -> int2: Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ?; sent11 -> int3: S cannot be adjacent to O, so it cannot be in slot 2.; int2 & sent7 -> int4: At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ?; int4 & sent9 -> int5: Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H); int5 & sent10 -> int6: Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H); int3 & int6 -> int7: Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H); int7 & sent12 & sent13 & sent14 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "Si T se interpreta en quinto lugar y F en sexto lugar,", "13": "S tiene que interpretarse:", "14": "A) en cuarto o séptimo lugar;", "15": "B) en tercer o sexto lugar;", "16": "C) en tercer o cuarto lugar;", "17": "D) en segundo o séptimo lugar;", "18": "E) en primer o cuarto lugar.", "19": "T se interpreta en quinto lugar y F en sexto lugar: ? ? ? ? T F ? ?.", "20": "Como el puesto 5 está ocupado, O se tiene que interpretar primero: O ? ? ? T F ? ?.", "21": "S no puede interpretarse antes o después de O, por lo que no puede estar en el puesto 2.", "22": "Se tienen que interpretar al menos 2 composiciones entre F y R, por lo que R puede estar en el puesto 2 o 3: O (R) (R) ? T F ? ?.", "23": "L o H tienen que estar en el puesto 8: O (R) (R) ? T F ? (L/H).", "24": "Basándonos en el hecho de que S tiene que interpretarse después de P, sabemos que P puede ocupar los puestos del 2 al 4: O (R/P) (P/R) (P) T F ? (L/H).", "25": "Según esta distribución, sabemos que S sólo puede interpretarse en los puestos 4 o 7 (y L o H pueden interpretarse en el puesto que no se ocupe): O (R/P) (P/R) (P/S) T F (S) (L/H).", "26": "La respuesta correcta es A.", "27": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.',\n  'Si T se interpreta en quinto lugar y F en sexto lugar,']\nquestion = 'S tiene que interpretarse:'\nchoices = { 'A': 'en cuarto o séptimo lugar;',\n  'B': 'en tercer o sexto lugar;',\n  'C': 'en tercer o cuarto lugar;',\n  'D': 'en segundo o séptimo lugar;',\n  'E': 'en primer o cuarto lugar.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si T se interpreta en quinto lugar y F en sexto lugar,']\nnew_fact = infer_new_fact(selected) # 'T se interpreta en quinto lugar y F en sexto lugar: ? ? ? ? T F ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O se interpreta en el primer o quinto lugar.', 'T se interpreta en quinto lugar y F en sexto lugar: ? ? ? ? T F ? ?.']\nnew_fact = infer_new_fact(selected) # 'Como el puesto\\xa05 está ocupado, O se tiene que interpretar primero: O ? ? ? T F ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.']\nnew_fact = infer_new_fact(selected) # 'S no puede interpretarse antes o después de O, por lo que no puede estar en el puesto\\xa02.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.', 'Como el puesto\\xa05 está ocupado, O se tiene que interpretar primero: O ? ? ? T F ? ?.']\nnew_fact = infer_new_fact(selected) # 'Se tienen que interpretar al menos 2 composiciones entre F y R, por lo que R puede estar en el puesto\\xa02 o 3: O (R) (R) ? T F ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La octava composición interpretada es L o H.', 'Se tienen que interpretar al menos 2 composiciones entre F y R, por lo que R puede estar en el puesto\\xa02 o 3: O (R) (R) ? T F ? ?.']\nnew_fact = infer_new_fact(selected) # 'L o H tienen que estar en el puesto\\xa08: O (R) (R) ? T F ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P se interpreta en algún momento antes que S.', 'L o H tienen que estar en el puesto\\xa08: O (R) (R) ? T F ? (L/H).']\nnew_fact = infer_new_fact(selected) # 'Basándonos en el hecho de que S tiene que interpretarse después de P, sabemos que P puede ocupar los puestos del 2 al 4: O (R/P) (P/R) (P) T F ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S no puede interpretarse antes o después de O, por lo que no puede estar en el puesto\\xa02.', 'Basándonos en el hecho de que S tiene que interpretarse después de P, sabemos que P puede ocupar los puestos del 2 al 4: O (R/P) (P/R) (P) T F ? (L/H).']\nnew_fact = infer_new_fact(selected) # 'Según esta distribución, sabemos que S sólo puede interpretarse en los puestos\\xa04 o 7 (y L o H pueden interpretarse en el puesto que no se ocupe): O (R/P) (P/R) (P/S) T F (S) (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si T se interpreta en quinto lugar y F en sexto lugar,', 'S tiene que interpretarse:', 'A) en cuarto o séptimo lugar;', 'Según esta distribución, sabemos que S sólo puede interpretarse en los puestos\\xa04 o 7 (y L o H pueden interpretarse en el puesto que no se ocupe): O (R/P) (P/R) (P/S) T F (S) (L/H).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_14_10ce2e61ec", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["first or second", "second or third", "fourth or sixth", "fourth or seventh", "sixth or seventh"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [6, 20], "consequent": 21}, {"antecedents": [7, 21], "consequent": 22}, {"antecedents": [9, 21], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [12, 13, 18, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent8 -> int1: O can only be in slot 1 or 5.; int1 & sent12 -> int2: O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ?; int2 & sent6 -> int3: Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?; int3 & sent7 -> int4: There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case.; int3 & sent9 -> int5: Slot 8 must contain either L or H: ? ? R T O ? ? (L/H); int4 & int5 -> int6: Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H); int6 & sent12 & sent13 & sent18 -> int7: Answer is E.; int7 -> int8: The answer is E);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "Si O se interpreta inmediatamente después de T,", "13": "F tiene que interpretarse:", "14": "A) en primer o segundo lugar;", "15": "B) en segundo o tercer lugar;", "16": "C) en cuarto o sexto lugar;", "17": "D) en cuarto o séptimo lugar;", "18": "E) en sexto o séptimo lugar.", "19": "O sólo puede estar en el puesto 1 o 5.", "20": "O sólo puede interpretarse inmediatamente después de T en el puesto 5: ? ? ? T O ? ? ?.", "21": "Dado que el puesto después de T está ocupado, R tiene que interpretarse inmediatamente antes de T: ? ? R T O ? ? ?.", "22": "Tienen que interpretarse al menos 2 composiciones entre R y F, por lo que F no puede estar en un puesto anterior a R, (3) en este caso.", "23": "L o H tienen que estar en el puesto 8: ? ? R T O ? ? (L/H).", "24": "Teniendo en cuenta los puestos disponibles, F puede estar en los puestos 6 o 7: ? ? R T O (F) (F) (L/H).", "25": "La respuesta correcta es E.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.',\n  'Si O se interpreta inmediatamente después de T,']\nquestion = 'F tiene que interpretarse:'\nchoices = { 'A': 'en primer o segundo lugar;',\n  'B': 'en segundo o tercer lugar;',\n  'C': 'en cuarto o sexto lugar;',\n  'D': 'en cuarto o séptimo lugar;',\n  'E': 'en sexto o séptimo lugar.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O se interpreta en el primer o quinto lugar.']\nnew_fact = infer_new_fact(selected) # 'O sólo puede estar en el puesto\\xa01 o 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si O se interpreta inmediatamente después de T,', 'O sólo puede estar en el puesto\\xa01 o 5.']\nnew_fact = infer_new_fact(selected) # 'O sólo puede interpretarse inmediatamente después de T en el puesto\\xa05: ? ? ? T O ? ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T se interpreta inmediatamente antes de F o inmediatamente después de R.', 'O sólo puede interpretarse inmediatamente después de T en el puesto\\xa05: ? ? ? T O ? ? ?.']\nnew_fact = infer_new_fact(selected) # 'Dado que el puesto después de T está ocupado, R tiene que interpretarse inmediatamente antes de T: ? ? R T O ? ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.', 'Dado que el puesto después de T está ocupado, R tiene que interpretarse inmediatamente antes de T: ? ? R T O ? ? ?.']\nnew_fact = infer_new_fact(selected) # 'Tienen que interpretarse al menos 2 composiciones entre R y F, por lo que F no puede estar en un puesto anterior a R, (3) en este caso.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La octava composición interpretada es L o H.', 'Dado que el puesto después de T está ocupado, R tiene que interpretarse inmediatamente antes de T: ? ? R T O ? ? ?.']\nnew_fact = infer_new_fact(selected) # 'L o H tienen que estar en el puesto\\xa08: ? ? R T O ? ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Tienen que interpretarse al menos 2 composiciones entre R y F, por lo que F no puede estar en un puesto anterior a R, (3) en este caso.', 'L o H tienen que estar en el puesto\\xa08: ? ? R T O ? ? (L/H).']\nnew_fact = infer_new_fact(selected) # 'Teniendo en cuenta los puestos disponibles, F puede estar en los puestos\\xa06 o 7: ? ? R T O (F) (F) (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si O se interpreta inmediatamente después de T,', 'F tiene que interpretarse:', 'E) en sexto o séptimo lugar.', 'Teniendo en cuenta los puestos disponibles, F puede estar en los puestos\\xa06 o 7: ? ? R T O (F) (F) (L/H).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_15_8596dcfff2", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["F, H, P", "H, P. L", "O, P, R", "O, P, T", "P, R, T"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 11], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [14, 15, 18, 21], "consequent": 22}, {"antecedents": [10, 21], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [17, 24], "consequent": 25}, {"antecedents": [12, 13, 16, 22, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent12 -> int1: S is in slot 4: ? ? ? S ? ? ? ?; sent11 & sent8 -> int2: O must be in slot 1 or 5, but cannot be adjacent to S,; int1 & int2 -> int3: so O must be in slot 1: O ? ? S; int3 & sent14 & sent15 & sent18 -> int4: We rule out options A, B, and E because they violate this ordering; int3 & sent10 -> int5: P must be performed before S: O (P) (P) S; int5 & sent6 -> int6: T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3.; int6 & sent17 -> int7: We rule out option D because T cannot be in slot 3.; int4 & int7 & sent12 & sent13 & sent16 -> int8: The answer is C.; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "Si S se interpreta en cuarto lugar,", "13": "¿cuál de las siguientes opciones sería una lista correcta de las composiciones interpretadas en primer, segundo y tercer lugar, respectivamente?", "14": "A) F, H, P", "15": "B) H, P. L", "16": "C) O, P, R", "17": "D) O, P, T", "18": "E) P, R, T", "19": "S está en el puesto 4: ? ? ? S ? ? ? ?.", "20": "O tiene que estar en los puestos 1 o 5, pero no puede estar antes o después de S,", "21": "así que O tiene que estar en el puesto 1: O ? ? S.", "22": "Descartamos las opciones A, B y E porque infringen ese orden.", "23": "P tiene que interpretarse antes que S: O (P) (P) S.", "24": "T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que no puede estar en el puesto 2 ni en el 3.", "25": "Descartamos la opción D porque T no puede estar en el puesto 3.", "26": "La respuesta correcta es C.", "27": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.',\n  'Si S se interpreta en cuarto lugar,']\nquestion = '¿cuál de las siguientes opciones sería una lista correcta de las composiciones interpretadas en primer, segundo y tercer lugar, respectivamente?'\nchoices = {'A': 'F, H, P', 'B': 'H, P. L', 'C': 'O, P, R', 'D': 'O, P, T', 'E': 'P, R, T'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si S se interpreta en cuarto lugar,']\nnew_fact = infer_new_fact(selected) # 'S está en el puesto\\xa04: ? ? ? S ? ? ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O se interpreta en el primer o quinto lugar.', 'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.']\nnew_fact = infer_new_fact(selected) # 'O tiene que estar en los puestos\\xa01 o 5, pero no puede estar antes o después de S,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S está en el puesto\\xa04: ? ? ? S ? ? ? ?.', 'O tiene que estar en los puestos\\xa01 o 5, pero no puede estar antes o después de S,']\nnew_fact = infer_new_fact(selected) # 'así que O tiene que estar en el puesto\\xa01: O ? ? S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) F, H, P', 'B) H, P. L', 'E) P, R, T', 'así que O tiene que estar en el puesto\\xa01: O ? ? S.']\nnew_fact = infer_new_fact(selected) # 'Descartamos las opciones A, B y E porque infringen ese orden.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P se interpreta en algún momento antes que S.', 'así que O tiene que estar en el puesto\\xa01: O ? ? S.']\nnew_fact = infer_new_fact(selected) # 'P tiene que interpretarse antes que S: O (P) (P) S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T se interpreta inmediatamente antes de F o inmediatamente después de R.', 'P tiene que interpretarse antes que S: O (P) (P) S.']\nnew_fact = infer_new_fact(selected) # 'T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que no puede estar en el puesto\\xa02 ni en el 3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) O, P, T', 'T tiene que interpretarse inmediatamente antes de F o inmediatamente después de R, por lo que no puede estar en el puesto\\xa02 ni en el 3.']\nnew_fact = infer_new_fact(selected) # 'Descartamos la opción D porque T no puede estar en el puesto\\xa03.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si S se interpreta en cuarto lugar,', '¿cuál de las siguientes opciones sería una lista correcta de las composiciones interpretadas en primer, segundo y tercer lugar, respectivamente?', 'C) O, P, R', 'Descartamos las opciones A, B y E porque infringen ese orden.', 'Descartamos la opción D porque T no puede estar en el puesto\\xa03.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_16_7e0c88a103", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["F or H", "F or O", "F or T", "H or L", "O or R"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8, 11], "consequent": 19}, {"antecedents": [12], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [7], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [22, 23, 24], "consequent": 25}, {"antecedents": [6], "consequent": 26}, {"antecedents": [24, 26], "consequent": 27}, {"antecedents": [24, 27], "consequent": 28}, {"antecedents": [25, 26], "consequent": 29}, {"antecedents": [25, 29], "consequent": 30}, {"antecedents": [12, 13, 16, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent11 & sent8 -> int1: O can be performed 1st or 5th, but cannot be adjacent to S.; sent12 -> int2: If P is performed 3rd and S is performed 6th,; int1 & int2 -> int3: then O must be performed 1st: O ? P ? ? S ? ?; int3 & sent9 -> int4: L or H must occupy slot 8: O ? P ? ? S ? (L/H); sent7 -> int5: F and R must be separated by at least 2 compositions, so we have the following possibilities:; int4 & int5 -> int6: 1) O (R/F) P ? (F/R) S ? (L/H); int4 & int5 & int6 -> int7: 2) O ? P (R/F) ? S (F/R) (L/H); sent6 -> int8: T must be immediately before F or immediately after R.; int6 & int8 -> int9: We know in possibility 1 that if F were in slot 2, there would be no space for T after F,; int6 & int9 -> int10: so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H); int7 & int8 -> int11: We know if possibility 2 that if F were in slot 4, then there would be no space for T after F,; int11 & int7 -> int12: so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H); int10 & int12 & sent12 & sent13 & sent16 -> int13: The answer is C.; int13 -> int14: The answer is C);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "Si P se interpreta en tercer lugar y S en sexto lugar,", "13": "la composición interpretada en quinto lugar tiene que ser:", "14": "A) F o H;", "15": "B) F u O;", "16": "C) F o T;", "17": "D) H o L;", "18": "E) O o R.", "19": "O se puede interpretar en primer o quinto lugar, pero no puede ir antes o después de S.", "20": "Si P se interpreta en tercer lugar y S en sexto lugar,", "21": "O tendría que interpretarse en primer lugar: O ? P ? ? S ? ?.", "22": "L o H tienen que ocupar el puesto 8: O ? P ? ? S ? (L/H).", "23": "F y R tienen que estar separadas por al menos dos composiciones, por lo que tenemos las siguientes posibilidades:", "24": "1) O (R/F) P ? (F/R) S ? (L/H).", "25": "2) O ? P (R/F) ? S (F/R) (L/H).", "26": "T tiene que ir inmediatamente antes de F o inmediatamente después de R.", "27": "Sabemos que, en la opción 1, si F estuviera en el puesto 2, no habría espacio para T después de F,", "28": "por lo que R tiene que estar en el puesto 2 y F en el 5: O R P T F S ? (L/H).", "29": "Sabemos que, en la opción 2, si F estuviera en el puesto 4, no habría espacio para T después de F,", "30": "por lo que R tiene que estar en el puesto 4, T en el 5 y F en el 7: O ? P R T S F (L/H).", "31": "La respuesta correcta es C.", "32": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.',\n  'Si P se interpreta en tercer lugar y S en sexto lugar,']\nquestion = 'la composición interpretada en quinto lugar tiene que ser:'\nchoices = {'A': 'F o H;', 'B': 'F u O;', 'C': 'F o T;', 'D': 'H o L;', 'E': 'O o R.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O se interpreta en el primer o quinto lugar.', 'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.']\nnew_fact = infer_new_fact(selected) # 'O se puede interpretar en primer o quinto lugar, pero no puede ir antes o después de S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si P se interpreta en tercer lugar y S en sexto lugar,']\nnew_fact = infer_new_fact(selected) # 'Si P se interpreta en tercer lugar y S en sexto lugar,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O se puede interpretar en primer o quinto lugar, pero no puede ir antes o después de S.', 'Si P se interpreta en tercer lugar y S en sexto lugar,']\nnew_fact = infer_new_fact(selected) # 'O tendría que interpretarse en primer lugar: O ? P ? ? S ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La octava composición interpretada es L o H.', 'O tendría que interpretarse en primer lugar: O ? P ? ? S ? ?.']\nnew_fact = infer_new_fact(selected) # 'L o H tienen que ocupar el puesto\\xa08: O ? P ? ? S ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.']\nnew_fact = infer_new_fact(selected) # 'F y R tienen que estar separadas por al menos dos composiciones, por lo que tenemos las siguientes posibilidades:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L o H tienen que ocupar el puesto\\xa08: O ? P ? ? S ? (L/H).', 'F y R tienen que estar separadas por al menos dos composiciones, por lo que tenemos las siguientes posibilidades:']\nnew_fact = infer_new_fact(selected) # '1) O (R/F) P ? (F/R) S ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L o H tienen que ocupar el puesto\\xa08: O ? P ? ? S ? (L/H).', 'F y R tienen que estar separadas por al menos dos composiciones, por lo que tenemos las siguientes posibilidades:', '1) O (R/F) P ? (F/R) S ? (L/H).']\nnew_fact = infer_new_fact(selected) # '2) O ? P (R/F) ? S (F/R) (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T se interpreta inmediatamente antes de F o inmediatamente después de R.']\nnew_fact = infer_new_fact(selected) # 'T tiene que ir inmediatamente antes de F o inmediatamente después de R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H).', 'T tiene que ir inmediatamente antes de F o inmediatamente después de R.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que, en la opción\\xa01, si F estuviera en el puesto\\xa02, no habría espacio para T después de F,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H).', 'Sabemos que, en la opción\\xa01, si F estuviera en el puesto\\xa02, no habría espacio para T después de F,']\nnew_fact = infer_new_fact(selected) # 'por lo que R tiene que estar en el puesto\\xa02 y F en el 5: O R P T F S ? (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H).', 'T tiene que ir inmediatamente antes de F o inmediatamente después de R.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que, en la opción\\xa02, si F estuviera en el puesto\\xa04, no habría espacio para T después de F,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H).', 'Sabemos que, en la opción\\xa02, si F estuviera en el puesto\\xa04, no habría espacio para T después de F,']\nnew_fact = infer_new_fact(selected) # 'por lo que R tiene que estar en el puesto\\xa04, T en el 5 y F en el 7: O ? P R T S F (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si P se interpreta en tercer lugar y S en sexto lugar,', 'la composición interpretada en quinto lugar tiene que ser:', 'C) F o T;', 'por lo que R tiene que estar en el puesto\\xa02 y F en el 5: O R P T F S ? (L/H).', 'por lo que R tiene que estar en el puesto\\xa04, T en el 5 y F en el 7: O ? P R T S F (L/H).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_17_c4915533c9", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "options": ["first", "third", "fourth", "sixth", "seventh"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [7, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [11, 24], "consequent": 25}, {"antecedents": [10, 25], "consequent": 26}, {"antecedents": [12, 13, 17, 26], "consequent": 27}, {"antecedents": [27], "consequent": 28}], "metadata": [], "linearized_output_en": "sent8 -> int1: O can be in slots 1 or 5.; int1 & sent12 -> int2: If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ?; int2 & sent7 -> int3: There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O; int3 & sent9 -> int4: Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H); int4 -> int5: Let's assume R is in slot 7: ? F ? ? O ? R (L/H); int5 & sent6 -> int6: Then T must be in slot 1: T F ? ? O ? R (L/H); int6 & sent11 -> int7: S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H); int7 & sent10 -> int8: But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7.; int8 & sent12 & sent13 & sent17 -> int9: The answer is D.; int9 -> int10: The answer is D);", "textual_logical_units": {"1": "En un concierto, se interpretarán ocho composiciones", "2": "(F, H, L, O, P, R, S y T).", "3": "Se interpretarán de una en una, consecutivamente y", "4": "sólo una composición a la vez.", "5": "El orden de interpretación tiene que cumplir las siguientes condiciones:", "6": "T se interpreta inmediatamente antes de F o inmediatamente después de R.", "7": "Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.", "8": "O se interpreta en el primer o quinto lugar.", "9": "La octava composición interpretada es L o H.", "10": "P se interpreta en algún momento antes que S.", "11": "Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.", "12": "Si se interpretan dos composiciones después de F pero antes de O,", "13": "R tiene que interpretarse:", "14": "A) en primer lugar;", "15": "B) en tercer lugar;", "16": "C) en cuarto lugar;", "17": "D) en sexto lugar;", "18": "E) en séptimo lugar.", "19": "O puede estar en el puesto 1 o 5.", "20": "Si se interpretan exactamente 2 composiciones antes de O (y después de F), O sólo puede estar en el puesto 5 (y F sólo puede estar en el puesto 2): ? F ? ? O ? ? ?.", "21": "Tiene que haber al menos dos composiciones entre R y F, pero el puesto más cercano posible (5) está ocupado por O.", "22": "Además, L o H tienen que ocupar el puesto 8, por lo que R sólo puede estar en los puestos 6 o 7: ? F ? ? O (R) (R) (L/H).", "23": "Supongamos que R está en el puesto 7: ? F ? ? O ? R (L/H).", "24": "Entonces, T tiene que estar en el puesto 1: T F ? ? O ? R (L/H).", "25": "S no puede ir antes o después de O, por lo que no puede estar en los puestos 4 o 6 y, por lo tanto, tiene que estar en el puesto 3: T F S ? O ? R (L/H).", "26": "Pero S tiene que interpretarse después de P, lo que no es posible en esta opción, por lo que R no puede estar en el puesto 7.", "27": "La respuesta correcta es D.", "28": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'En un concierto, se interpretarán ocho composiciones',\n  '(F, H, L, O, P, R, S y T).',\n  'Se interpretarán de una en una, consecutivamente y',\n  'sólo una composición a la vez.',\n  'El orden de interpretación tiene que cumplir las siguientes condiciones:',\n  'T se interpreta inmediatamente antes de F o inmediatamente después de R.',\n  'Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.',\n  'O se interpreta en el primer o quinto lugar.',\n  'La octava composición interpretada es L o H.',\n  'P se interpreta en algún momento antes que S.',\n  'Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.',\n  'Si se interpretan dos composiciones después de F pero antes de O,']\nquestion = 'R tiene que interpretarse:'\nchoices = {'A': 'en primer lugar;', 'B': 'en tercer lugar;', 'C': 'en cuarto lugar;', 'D': 'en sexto lugar;', 'E': 'en séptimo lugar.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O se interpreta en el primer o quinto lugar.']\nnew_fact = infer_new_fact(selected) # 'O puede estar en el puesto\\xa01 o 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se interpretan dos composiciones después de F pero antes de O,', 'O puede estar en el puesto\\xa01 o 5.']\nnew_fact = infer_new_fact(selected) # 'Si se interpretan exactamente 2 composiciones antes de O (y después de F), O sólo puede estar en el puesto 5 (y F sólo puede estar en el puesto 2): ? F ? ? O ? ? ?.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpretan al menos dos composiciones después de F y antes de R, o después de R y antes de F.', 'Si se interpretan exactamente 2 composiciones antes de O (y después de F), O sólo puede estar en el puesto 5 (y F sólo puede estar en el puesto 2): ? F ? ? O ? ? ?.']\nnew_fact = infer_new_fact(selected) # 'Tiene que haber al menos dos composiciones entre R y F, pero el puesto más cercano posible (5) está ocupado por O.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La octava composición interpretada es L o H.', 'Tiene que haber al menos dos composiciones entre R y F, pero el puesto más cercano posible (5) está ocupado por O.']\nnew_fact = infer_new_fact(selected) # 'Además, L o H tienen que ocupar el puesto\\xa08, por lo que R sólo puede estar en los puestos\\xa06 o 7: ? F ? ? O (R) (R) (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Además, L o H tienen que ocupar el puesto\\xa08, por lo que R sólo puede estar en los puestos\\xa06 o 7: ? F ? ? O (R) (R) (L/H).']\nnew_fact = infer_new_fact(selected) # 'Supongamos que R está en el puesto\\xa07: ? F ? ? O ? R (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T se interpreta inmediatamente antes de F o inmediatamente después de R.', 'Supongamos que R está en el puesto\\xa07: ? F ? ? O ? R (L/H).']\nnew_fact = infer_new_fact(selected) # 'Entonces, T tiene que estar en el puesto\\xa01: T F ? ? O ? R (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se interpreta al menos una composición después de O y antes de S, o después de S y antes de O.', 'Entonces, T tiene que estar en el puesto\\xa01: T F ? ? O ? R (L/H).']\nnew_fact = infer_new_fact(selected) # 'S no puede ir antes o después de O, por lo que no puede estar en los puestos\\xa04 o 6 y, por lo tanto, tiene que estar en el puesto\\xa03: T F S ? O ? R (L/H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P se interpreta en algún momento antes que S.', 'S no puede ir antes o después de O, por lo que no puede estar en los puestos\\xa04 o 6 y, por lo tanto, tiene que estar en el puesto\\xa03: T F S ? O ? R (L/H).']\nnew_fact = infer_new_fact(selected) # 'Pero S tiene que interpretarse después de P, lo que no es posible en esta opción, por lo que R no puede estar en el puesto\\xa07.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se interpretan dos composiciones después de F pero antes de O,', 'R tiene que interpretarse:', 'D) en sexto lugar;', 'Pero S tiene que interpretarse después de P, lo que no es posible en esta opción, por lo que R no puede estar en el puesto\\xa07.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_18_fde7cfbaf2", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese", "Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx", "Manx, Himalayan, Manx, Himalayan, Siamese, Manx, Siamese", "Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan", "Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10, 11, 16], "consequent": 21}, {"antecedents": [8, 19], "consequent": 22}, {"antecedents": [9, 17], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent16 -> int1: Himalayans cannot be featured on day 1 and less than three days. A and C not answers; sent19 & sent8 -> int2: The same breed may not feature on consecutive days. D is not an answer.; sent17 & sent9 -> int3: Any breed featured on day 1 may not be featured on day 7. B is not an answer.; int1 & int2 & int3 & sent14 & sent15 & sent20 -> int4: The answer is E.; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "¿Cuál de los siguientes podría ser el orden en que se ofrecen las razas de gato en la tienda de mascotas,", "15": "desde el día 1 hasta el día 7?", "16": "A) Himalayo, manx, siamés, himalayo, manx, himalayo, siamés", "17": "B) Manx, himalayo, siamés, himalayo, manx, himalayo, manx", "18": "C) Manx, himalayo, manx, himalayo, siamés, manx, siamés", "19": "D) Siamés, himalayo, manx, himalayo, siamés, siamés, himalayo", "20": "E) Siamés, himalayo, siamés, himalayo, manx, siamés, himalayo", "21": "Los himalayos no pueden aparecer el día 1 ni menos de tres días. Ni A ni C son respuestas correctas.", "22": "No se puede ofrecer la misma raza en días consecutivos. D no es la respuesta correcta.", "23": "No se puede ofrecer la misma raza el día 1 y el día 7. B no es la respuesta correcta.", "24": "La respuesta correcta es E.", "25": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.',\n  '¿Cuál de los siguientes podría ser el orden en que se ofrecen las razas de gato en la tienda de mascotas,']\nquestion = 'desde el día\\xa01 hasta el día\\xa07?'\nchoices = { 'A': 'Himalayo, manx, siamés, himalayo, manx, himalayo, siamés',\n  'B': 'Manx, himalayo, siamés, himalayo, manx, himalayo, manx',\n  'C': 'Manx, himalayo, manx, himalayo, siamés, manx, siamés',\n  'D': 'Siamés, himalayo, manx, himalayo, siamés, siamés, himalayo',\n  'E': 'Siamés, himalayo, siamés, himalayo, manx, siamés, himalayo'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.', 'A) Himalayo, manx, siamés, himalayo, manx, himalayo, siamés']\nnew_fact = infer_new_fact(selected) # 'Los himalayos no pueden aparecer el día\\xa01 ni menos de tres días. Ni A ni C son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ninguna raza se ofrece durante dos días consecutivos.', 'D) Siamés, himalayo, manx, himalayo, siamés, siamés, himalayo']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer la misma raza en días consecutivos. D no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.', 'B) Manx, himalayo, siamés, himalayo, manx, himalayo, manx']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer la misma raza el día\\xa01 y el día\\xa07. B no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de los siguientes podría ser el orden en que se ofrecen las razas de gato en la tienda de mascotas,', 'desde el día\\xa01 hasta el día\\xa07?', 'E) Siamés, himalayo, siamés, himalayo, manx, siamés, himalayo', 'Los himalayos no pueden aparecer el día\\xa01 ni menos de tres días. Ni A ni C son respuestas correctas.', 'No se puede ofrecer la misma raza en días consecutivos. D no es la respuesta correcta.', 'No se puede ofrecer la misma raza el día\\xa01 y el día\\xa07. B no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_19_d10171a1c1", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Manx are featured on day 3.", "Siamese are featured on day 4.", "Rottweilers are featured on day 5.", "Himalayans are featured on day 6.", "Greyhounds are featured on day 7."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [10, 11, 14], "consequent": 21}, {"antecedents": [8, 19, 21], "consequent": 22}, {"antecedents": [12, 13, 21], "consequent": 23}, {"antecedents": [7, 9], "consequent": 24}, {"antecedents": [14, 17, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 -> int1: The Himalayan will be featured on day 3, day 5 and day 7.; int1 & sent19 & sent8 -> int2: Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers.; int1 & sent12 & sent13 -> int3: Rottweilers and Himalayans cannot be featured on the same days. C is not an option.; sent7 & sent9 -> int4: Breeds featured on day 1 may not feature on day 7. E is not an answer.; int1 & int2 & int3 & int4 & sent14 & sent17 -> int5: The answer is B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "Si no se ofrecen himalayos el día 2,", "15": "¿cuál de las siguientes afirmaciones podría ser cierta?", "16": "A) Se ofrecen manx el día 3.", "17": "B) Se ofrecen siameses el día 4.", "18": "C) Se ofrecen rottweilers el día 5.", "19": "D) Se ofrecen himalayos el día 6.", "20": "E) Se ofrecen galgos ingleses el día 7.", "21": "Se ofrecen himalayos los días 3, 5 y 7.", "22": "Como no se pueden ofrecer himalayos el día 1 y ninguna raza puede aparecer dos días consecutivos, ni A ni D son respuestas correctas.", "23": "No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.", "24": "Las razas que se ofrecen el día 1 no pueden ofrecerse el día 7. E no es la respuesta correcta.", "25": "La respuesta correcta es B.", "26": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.',\n  'Si no se ofrecen himalayos el día\\xa02,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Se ofrecen manx el día\\xa03.',\n  'B': 'Se ofrecen siameses el día\\xa04.',\n  'C': 'Se ofrecen rottweilers el día\\xa05.',\n  'D': 'Se ofrecen himalayos el día\\xa06.',\n  'E': 'Se ofrecen galgos ingleses el día\\xa07.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.', 'Si no se ofrecen himalayos el día\\xa02,']\nnew_fact = infer_new_fact(selected) # 'Se ofrecen himalayos los días\\xa03, 5 y 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ninguna raza se ofrece durante dos días consecutivos.', 'D) Se ofrecen himalayos el día\\xa06.', 'Se ofrecen himalayos los días\\xa03, 5 y 7.']\nnew_fact = infer_new_fact(selected) # 'Como no se pueden ofrecer himalayos el día\\xa01 y ninguna raza puede aparecer dos días consecutivos, ni A ni D son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.', 'Se ofrecen himalayos los días\\xa03, 5 y 7.']\nnew_fact = infer_new_fact(selected) # 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen galgos ingleses el día\\xa01.', 'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.']\nnew_fact = infer_new_fact(selected) # 'Las razas que se ofrecen el día\\xa01 no pueden ofrecerse el día\\xa07. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si no se ofrecen himalayos el día\\xa02,', 'B) Se ofrecen siameses el día\\xa04.', 'Se ofrecen himalayos los días\\xa03, 5 y 7.', 'Como no se pueden ofrecer himalayos el día\\xa01 y ninguna raza puede aparecer dos días consecutivos, ni A ni D son respuestas correctas.', 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.', 'Las razas que se ofrecen el día\\xa01 no pueden ofrecerse el día\\xa07. E no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_20_4d385b334d", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Greyhounds and Siamese are both featured on day 2.", "Greyhounds and Himalayans are both featured on day 7.", "Rottweilers and Himalayans are both featured on day 4.", "Rottweilers and Manx are both featured on day 5.", "Newfoundlands and Manx are both featured on day 6."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 12, 15, 19], "consequent": 20}, {"antecedents": [7, 9], "consequent": 21}, {"antecedents": [12, 13], "consequent": 22}, {"antecedents": [14, 18, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent12 & sent15 & sent19 & sent7 & sent8 & sent9 -> int1: No breed may be featured on two consecutive days. A and E are not answers; sent7 & sent9 -> int2: Breeds featured on day 1 may not be featured on day 7. B is not an answer; sent12 & sent13 -> int3: Rottweilers and Himalayans may not feature on the same day. C is not an answer; int1 & int2 & int3 & sent14 & sent18 -> int4: The answer is D.; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "¿Cuál de las siguientes afirmaciones podría ser cierta?", "15": "A) Se ofrecen galgos ingleses y siameses el día 2.", "16": "B) Se ofrecen galgos ingleses e himalayos el día 7.", "17": "C) Se ofrecen rottweilers e himalayos el día 4.", "18": "D) Se ofrecen rottweilers y manx el día 5.", "19": "E) Se ofrecen terranova y manx el día 6.", "20": "No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni E son respuestas correctas.", "21": "Es posible que las razas que se ofrecen el día 1 no se ofrezcan el día 7. B no es la respuesta correcta.", "22": "No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.", "23": "La respuesta correcta es D.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.']\nquestion = '¿Cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Se ofrecen galgos ingleses y siameses el día\\xa02.',\n  'B': 'Se ofrecen galgos ingleses e himalayos el día\\xa07.',\n  'C': 'Se ofrecen rottweilers e himalayos el día\\xa04.',\n  'D': 'Se ofrecen rottweilers y manx el día\\xa05.',\n  'E': 'Se ofrecen terranova y manx el día\\xa06.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Se ofrecen galgos ingleses el día\\xa01.', 'Ninguna raza se ofrece durante dos días consecutivos.', 'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.', 'No se ofrecen rottweilers el día\\xa07', 'A) Se ofrecen galgos ingleses y siameses el día\\xa02.', 'E) Se ofrecen terranova y manx el día\\xa06.']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni E son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen galgos ingleses el día\\xa01.', 'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.']\nnew_fact = infer_new_fact(selected) # 'Es posible que las razas que se ofrecen el día\\xa01 no se ofrezcan el día\\xa07. B no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.']\nnew_fact = infer_new_fact(selected) # 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes afirmaciones podría ser cierta?', 'D) Se ofrecen rottweilers y manx el día\\xa05.', 'No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni E son respuestas correctas.', 'Es posible que las razas que se ofrecen el día\\xa01 no se ofrezcan el día\\xa07. B no es la respuesta correcta.', 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_21_64005f09c3", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["day 1 and day 3", "day 2 and day 6", "day 3 and day 5", "day 4 and day 6", "day 5 and day 7"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 14], "consequent": 22}, {"antecedents": [7, 8, 9, 12], "consequent": 23}, {"antecedents": [8, 12, 13], "consequent": 24}, {"antecedents": [14, 15, 16, 18, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 & sent8 -> int1: Possible days the Himalayan could be featured on are day 2, day 4 and, day 6; sent12 & sent7 & sent8 & sent9 -> int2: Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland.; sent12 & sent13 & sent8 -> int3: Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies.; int1 & int2 & int3 & sent14 & sent15 & sent16 & sent18 -> int4: The answer is B; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "Si no se ofrecen himalayos el día 7,", "15": "¿en cuál de los siguientes pares de días NO SE PUEDE ofrecer la misma raza", "16": "de gatos y de perros?", "17": "A) día 1 y día 3", "18": "B) día 2 y día 6", "19": "C) día 3 y día 5", "20": "D) día 4 y día 6", "21": "E) día 5 y día 7", "22": "Los posibles días en los que se podrían ofrecer himalayos son el día 2, el día 4 y el día 6.", "23": "La raza que se ofrece el día 1 no puede ofrecerse el día 7; por lo tanto, la raza de perro que se ofrece el día 7 es terranova.", "24": "Por lo tanto, el día 6 sólo podrían ofrecerse galgos ingleses y el día 2 podrían ofrecerse terranovas.", "25": "La respuesta correcta es B.", "26": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.',\n  'Si no se ofrecen himalayos el día\\xa07,',\n  '¿en cuál de los siguientes pares de días NO SE PUEDE ofrecer la misma raza']\nquestion = 'de gatos y de perros?'\nchoices = {'A': 'día\\xa01 y día\\xa03', 'B': 'día\\xa02 y día\\xa06', 'C': 'día\\xa03 y día\\xa05', 'D': 'día\\xa04 y día\\xa06', 'E': 'día\\xa05 y día\\xa07'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ninguna raza se ofrece durante dos días consecutivos.', 'Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.', 'Si no se ofrecen himalayos el día\\xa07,']\nnew_fact = infer_new_fact(selected) # 'Los posibles días en los que se podrían ofrecer himalayos son el día\\xa02, el día\\xa04 y el día\\xa06.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen galgos ingleses el día\\xa01.', 'Ninguna raza se ofrece durante dos días consecutivos.', 'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.', 'No se ofrecen rottweilers el día\\xa07']\nnew_fact = infer_new_fact(selected) # 'La raza que se ofrece el día\\xa01 no puede ofrecerse el día\\xa07; por lo tanto, la raza de perro que se ofrece el día\\xa07 es terranova.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ninguna raza se ofrece durante dos días consecutivos.', 'No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.']\nnew_fact = infer_new_fact(selected) # 'Por lo tanto, el día\\xa06 sólo podrían ofrecerse galgos ingleses y el día\\xa02 podrían ofrecerse terranovas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si no se ofrecen himalayos el día\\xa07,', '¿en cuál de los siguientes pares de días NO SE PUEDE ofrecer la misma raza', 'de gatos y de perros?', 'B) día\\xa02 y día\\xa06', 'Los posibles días en los que se podrían ofrecer himalayos son el día\\xa02, el día\\xa04 y el día\\xa06.', 'La raza que se ofrece el día\\xa01 no puede ofrecerse el día\\xa07; por lo tanto, la raza de perro que se ofrece el día\\xa07 es terranova.', 'Por lo tanto, el día\\xa06 sólo podrían ofrecerse galgos ingleses y el día\\xa02 podrían ofrecerse terranovas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_22_d5faf2083f", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["There are exactly four breeds that are each featured on three days.", "Greyhounds are featured on every day that Himalayans are.", "Himalayans are featured on every day that Greyhounds are.", "Himalayans are featured on every day that Rottweilers are not.", "Rottweilers are featured on every day that Himalayans are not."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [7, 9, 10, 18], "consequent": 20}, {"antecedents": [8, 19, 20], "consequent": 21}, {"antecedents": [7, 10, 11], "consequent": 22}, {"antecedents": [8, 10, 11, 16], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent18 & sent7 & sent9 -> int1: Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.; int1 & sent19 & sent8 -> int2: No breed may be featured on two consecutive days. E is not an anwer; sent10 & sent11 & sent7 -> int3: Himalayans may not be featured on day 1. C is not an answer; sent10 & sent11 & sent16 & sent8 -> int4: If Himalayan features on day 2, B is not an answer; int1 & int2 & int3 & int4 & sent14 & sent15 -> int5: The answer is A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "¿Cuál de las siguientes afirmaciones podría ser cierta?", "15": "A) Hay cuatro razas que se ofrecen durante tres días.", "16": "B) Los galgos ingleses se ofrecen los mismos días que los himalayos.", "17": "C) Los himalayos se ofrecen los mismos días que los galgos ingleses.", "18": "D) Los himalayos se ofrecen todos los días que no se ofrecen rottweilers.", "19": "E) Los rottweilers se ofrecen todos los días que no se ofrecen himalayos.", "20": "Se ofrecen himalayos durante tres días. Se ofrecen rottweilers el día 6. Quedan cuatro días en los que se pueden ofrecer himalayos. D no es la respuesta correcta.", "21": "No se puede ofrecer ninguna raza durante dos días consecutivos. E no es la respuesta correcta.", "22": "No se puede ofrecer himalayos el día 1. C no es la respuesta correcta.", "23": "Si se ofrecen himalayos el día 2, B no es la respuesta correcta.", "24": "La respuesta correcta es A.", "25": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.']\nquestion = '¿Cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Hay cuatro razas que se ofrecen durante tres días.',\n  'B': 'Los galgos ingleses se ofrecen los mismos días que los himalayos.',\n  'C': 'Los himalayos se ofrecen los mismos días que los galgos ingleses.',\n  'D': 'Los himalayos se ofrecen todos los días que no se ofrecen rottweilers.',\n  'E': 'Los rottweilers se ofrecen todos los días que no se ofrecen himalayos.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Se ofrecen galgos ingleses el día\\xa01.', 'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.', 'Se ofrecen himalayos durante tres días,', 'D) Los himalayos se ofrecen todos los días que no se ofrecen rottweilers.']\nnew_fact = infer_new_fact(selected) # 'Se ofrecen himalayos durante tres días. Se ofrecen rottweilers el día\\xa06. Quedan cuatro días en los que se pueden ofrecer himalayos. D no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ninguna raza se ofrece durante dos días consecutivos.', 'E) Los rottweilers se ofrecen todos los días que no se ofrecen himalayos.', 'Se ofrecen himalayos durante tres días. Se ofrecen rottweilers el día\\xa06. Quedan cuatro días en los que se pueden ofrecer himalayos. D no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer ninguna raza durante dos días consecutivos. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen galgos ingleses el día\\xa01.', 'Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer himalayos el día\\xa01. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ninguna raza se ofrece durante dos días consecutivos.', 'Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.', 'B) Los galgos ingleses se ofrecen los mismos días que los himalayos.']\nnew_fact = infer_new_fact(selected) # 'Si se ofrecen himalayos el día\\xa02, B no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes afirmaciones podría ser cierta?', 'A) Hay cuatro razas que se ofrecen durante tres días.', 'Se ofrecen himalayos durante tres días. Se ofrecen rottweilers el día\\xa06. Quedan cuatro días en los que se pueden ofrecer himalayos. D no es la respuesta correcta.', 'No se puede ofrecer ninguna raza durante dos días consecutivos. E no es la respuesta correcta.', 'No se puede ofrecer himalayos el día\\xa01. C no es la respuesta correcta.', 'Si se ofrecen himalayos el día\\xa02, B no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_23_0acffb8c53", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "options": ["Greyhounds are featured on days 3 and 5.", "Newfoundlands are featured on day 3.", "Rottweilers are featured on day 6.", "Rottweilers are featured only on day 3.", "Rottweilers are featured on exactly three days."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 10, 11, 12, 13, 20], "consequent": 21}, {"antecedents": [10, 12, 13, 14, 18], "consequent": 22}, {"antecedents": [7, 8, 12, 13, 14, 16, 17], "consequent": 23}, {"antecedents": [14, 15, 19, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent1 & sent10 & sent11 & sent12 & sent13 & sent2 & sent20 -> int1: Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer.; sent10 & sent12 & sent13 & sent14 & sent18 -> int2: Rottweilers and Himalayan may not feature on the same day. C is not an answer; sent12 & sent13 & sent14 & sent16 & sent17 & sent7 & sent8 -> int3: No breed may feature on two consecutive days. A and B are not answers.; int1 & int2 & int3 & sent14 & sent15 & sent19 -> int4: The answer is D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Durante siete días consecutivos (del día 1 al día 7),", "2": "una tienda de mascotas ofrece una de tres razas de gato", "3": "(himalayo, manx y siamés)", "4": "y una de tres razas de perro", "5": "(galgo inglés, terranova y rottweiler).", "6": "Tienen que cumplirse las siguientes condiciones:", "7": "Se ofrecen galgos ingleses el día 1.", "8": "Ninguna raza se ofrece durante dos días consecutivos.", "9": "Si se ofrece una raza el día 1, no puede ofrecerse el día 7.", "10": "Se ofrecen himalayos durante tres días,", "11": "pero no el día 1.", "12": "No se ofrecen rottweilers el día 7", "13": "ni ningún día en el que se ofrezcan himalayos.", "14": "Si no se ofrecen himalayos el día 7,", "15": "¿cuál de las siguientes afirmaciones podría ser cierta?", "16": "A) Se ofrecen galgos ingleses los días 3 y 5.", "17": "B) Se ofrecen terranovas el día 3.", "18": "C) Se ofrecen rottweilers el día 6.", "19": "D) Se ofrecen rottweilers sólo el día 3.", "20": "E) Se ofrecen rottweilers durante tres días.", "21": "Cada día se ofrece una raza de cada tipo de animal. No se puede ofrecer himalayos y rottweilers el mismo día. Quedan dos días en los que se puede ofrecer rottweilers. E no es la respuesta correcta.", "22": "No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.", "23": "No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni B son respuestas correctas.", "24": "La respuesta correcta es D.", "25": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Durante siete días consecutivos (del día\\xa01 al día\\xa07),',\n  'una tienda de mascotas ofrece una de tres razas de gato',\n  '(himalayo, manx y siamés)',\n  'y una de tres razas de perro',\n  '(galgo inglés, terranova y rottweiler).',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Se ofrecen galgos ingleses el día\\xa01.',\n  'Ninguna raza se ofrece durante dos días consecutivos.',\n  'Si se ofrece una raza el día\\xa01, no puede ofrecerse el día\\xa07.',\n  'Se ofrecen himalayos durante tres días,',\n  'pero no el día\\xa01.',\n  'No se ofrecen rottweilers el día\\xa07',\n  'ni ningún día en el que se ofrezcan himalayos.',\n  'Si no se ofrecen himalayos el día\\xa07,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Se ofrecen galgos ingleses los días\\xa03 y 5.',\n  'B': 'Se ofrecen terranovas el día\\xa03.',\n  'C': 'Se ofrecen rottweilers el día\\xa06.',\n  'D': 'Se ofrecen rottweilers sólo el día\\xa03.',\n  'E': 'Se ofrecen rottweilers durante tres días.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Durante siete días consecutivos (del día\\xa01 al día\\xa07),', 'una tienda de mascotas ofrece una de tres razas de gato', 'Se ofrecen himalayos durante tres días,', 'pero no el día\\xa01.', 'No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.', 'E) Se ofrecen rottweilers durante tres días.']\nnew_fact = infer_new_fact(selected) # 'Cada día se ofrece una raza de cada tipo de animal. No se puede ofrecer himalayos y rottweilers el mismo día. Quedan dos días en los que se puede ofrecer rottweilers. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen himalayos durante tres días,', 'No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.', 'Si no se ofrecen himalayos el día\\xa07,', 'C) Se ofrecen rottweilers el día\\xa06.']\nnew_fact = infer_new_fact(selected) # 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se ofrecen galgos ingleses el día\\xa01.', 'Ninguna raza se ofrece durante dos días consecutivos.', 'No se ofrecen rottweilers el día\\xa07', 'ni ningún día en el que se ofrezcan himalayos.', 'Si no se ofrecen himalayos el día\\xa07,', 'A) Se ofrecen galgos ingleses los días\\xa03 y 5.', 'B) Se ofrecen terranovas el día\\xa03.']\nnew_fact = infer_new_fact(selected) # 'No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni B son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si no se ofrecen himalayos el día\\xa07,', '¿cuál de las siguientes afirmaciones podría ser cierta?', 'D) Se ofrecen rottweilers sólo el día\\xa03.', 'Cada día se ofrece una raza de cada tipo de animal. No se puede ofrecer himalayos y rottweilers el mismo día. Quedan dos días en los que se puede ofrecer rottweilers. E no es la respuesta correcta.', 'No se pueden ofrecer rottweilers e himalayos el mismo día. C no es la respuesta correcta.', 'No se puede ofrecer ninguna raza durante dos días consecutivos. Ni A ni B son respuestas correctas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_24_da322cc891", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F, G, K, P, Q", "G, H, K, L, M", "G, H, K, L, R", "H, K, M, P, R", "H, L, M, P, Q"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [12, 16], "consequent": 21}, {"antecedents": [13, 17, 19], "consequent": 22}, {"antecedents": [14, 20], "consequent": 23}, {"antecedents": [15, 18, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent12 & sent16 -> int1: K and F cannot be in the team. A not an answer; sent13 & sent17 & sent19 -> int2: K and M cannot be in the team. B and D not answers; sent14 & sent20 -> int3: If M is selcted, both P and R must be selected. E not an answer.; int1 & int2 & int3 & sent15 & sent18 -> int4: The answer is C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Se formará un comité de cinco científicos.", "2": "Los miembros se seleccionarán entre tres botánicos", "3": "(F, G y H),", "4": "tres químicos", "5": "(K, L y M)", "6": "y tres zoólogos", "7": "(P, Q y R).", "8": "La selección se rige por las siguientes condiciones:", "9": "El comité tiene que incluir al menos un científico de cada uno de los tres tipos.", "10": "Si se selecciona más de un botánico,", "11": "se seleccionará como máximo un zoólogo.", "12": "No se puede seleccionar a F y K a la vez.", "13": "No se puede seleccionar a K y M a la vez.", "14": "Si se selecciona a M, hay que seleccionar tanto a P como a R.", "15": "¿Cuál de las siguientes opciones es una selección posible de científicos para el comité?", "16": "A) F, G, K, P, Q", "17": "B) G, H, K, L, M", "18": "C) G, H, K, L, R", "19": "D) H, K, M, P, R", "20": "E) H, L, M, P, Q", "21": "K y F no pueden estar en el equipo. A no es la respuesta correcta.", "22": "K y M no pueden estar en el equipo. Ni B ni D son respuestas correctas.", "23": "Si se selecciona a M, hay que seleccionar tanto a P como a R. E no es la respuesta correcta.", "24": "La respuesta correcta es C.", "25": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Se formará un comité de cinco científicos.',\n  'Los miembros se seleccionarán entre tres botánicos',\n  '(F, G y H),',\n  'tres químicos',\n  '(K, L y M)',\n  'y tres zoólogos',\n  '(P, Q y R).',\n  'La selección se rige por las siguientes condiciones:',\n  'El comité tiene que incluir al menos un científico de cada uno de los tres tipos.',\n  'Si se selecciona más de un botánico,',\n  'se seleccionará como máximo un zoólogo.',\n  'No se puede seleccionar a F y K a la vez.',\n  'No se puede seleccionar a K y M a la vez.',\n  'Si se selecciona a M, hay que seleccionar tanto a P como a R.']\nquestion = '¿Cuál de las siguientes opciones es una selección posible de científicos para el comité?'\nchoices = {'A': 'F, G, K, P, Q', 'B': 'G, H, K, L, M', 'C': 'G, H, K, L, R', 'D': 'H, K, M, P, R', 'E': 'H, L, M, P, Q'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No se puede seleccionar a F y K a la vez.', 'A) F, G, K, P, Q']\nnew_fact = infer_new_fact(selected) # 'K y F no pueden estar en el equipo. A no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se puede seleccionar a K y M a la vez.', 'B) G, H, K, L, M', 'D) H, K, M, P, R']\nnew_fact = infer_new_fact(selected) # 'K y M no pueden estar en el equipo. Ni B ni D son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'E) H, L, M, P, Q']\nnew_fact = infer_new_fact(selected) # 'Si se selecciona a M, hay que seleccionar tanto a P como a R. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones es una selección posible de científicos para el comité?', 'C) G, H, K, L, R', 'K y F no pueden estar en el equipo. A no es la respuesta correcta.', 'K y M no pueden estar en el equipo. Ni B ni D son respuestas correctas.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R. E no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_25_b1bececf9e", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F and G are both selected.", "G and H are both selected.", "H and P are both selected.", "F, G, and H are all selected.", "P, Q, and R are all selected."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 14, 20], "consequent": 22}, {"antecedents": [10, 11, 14, 17, 18, 19], "consequent": 23}, {"antecedents": [15, 16, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent1 & sent14 & sent20 -> int1: The desire panel size is five scientist. D not an answer.; sent10 & sent11 & sent14 & sent17 & sent18 & sent19 -> int2: If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers; int1 & int2 & sent15 & sent16 & sent21 -> int3: The answer is E; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "Se formará un comité de cinco científicos.", "2": "Los miembros se seleccionarán entre tres botánicos", "3": "(F, G y H),", "4": "tres químicos", "5": "(K, L y M)", "6": "y tres zoólogos", "7": "(P, Q y R).", "8": "La selección se rige por las siguientes condiciones:", "9": "El comité tiene que incluir al menos un científico de cada uno de los tres tipos.", "10": "Si se selecciona más de un botánico,", "11": "se seleccionará como máximo un zoólogo.", "12": "No se puede seleccionar a F y K a la vez.", "13": "No se puede seleccionar a K y M a la vez.", "14": "Si se selecciona a M, hay que seleccionar tanto a P como a R.", "15": "Si M es el único químico seleccionado para el comité,", "16": "¿cuál de las siguientes afirmaciones tiene que ser cierta?", "17": "A) Se selecciona tanto a F como a G.", "18": "B) Se selecciona tanto a G como a H.", "19": "C) Se seleccionan tanto a H como a P.", "20": "D) Se selecciona a F, G y H.", "21": "E) Se selecciona a P, Q y R.", "22": "El tamaño deseado del comité es de cinco científicos. D no es la respuesta correcta.", "23": "Si se selecciona más de un botánico, se puede seleccionar como máximo un zoólogo. Ni A ni B ni C son respuestas correctas.", "24": "La respuesta correcta es E.", "25": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Se formará un comité de cinco científicos.',\n  'Los miembros se seleccionarán entre tres botánicos',\n  '(F, G y H),',\n  'tres químicos',\n  '(K, L y M)',\n  'y tres zoólogos',\n  '(P, Q y R).',\n  'La selección se rige por las siguientes condiciones:',\n  'El comité tiene que incluir al menos un científico de cada uno de los tres tipos.',\n  'Si se selecciona más de un botánico,',\n  'se seleccionará como máximo un zoólogo.',\n  'No se puede seleccionar a F y K a la vez.',\n  'No se puede seleccionar a K y M a la vez.',\n  'Si se selecciona a M, hay que seleccionar tanto a P como a R.',\n  'Si M es el único químico seleccionado para el comité,']\nquestion = '¿cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'Se selecciona tanto a F como a G.',\n  'B': 'Se selecciona tanto a G como a H.',\n  'C': 'Se seleccionan tanto a H como a P.',\n  'D': 'Se selecciona a F, G y H.',\n  'E': 'Se selecciona a P, Q y R.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Se formará un comité de cinco científicos.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'D) Se selecciona a F, G y H.']\nnew_fact = infer_new_fact(selected) # 'El tamaño deseado del comité es de cinco científicos. D no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'A) Se selecciona tanto a F como a G.', 'B) Se selecciona tanto a G como a H.', 'C) Se seleccionan tanto a H como a P.']\nnew_fact = infer_new_fact(selected) # 'Si se selecciona más de un botánico, se puede seleccionar como máximo un zoólogo. Ni A ni B ni C son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si M es el único químico seleccionado para el comité,', '¿cuál de las siguientes afirmaciones tiene que ser cierta?', 'E) Se selecciona a P, Q y R.', 'El tamaño deseado del comité es de cinco científicos. D no es la respuesta correcta.', 'Si se selecciona más de un botánico, se puede seleccionar como máximo un zoólogo. Ni A ni B ni C son respuestas correctas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_26_bb85290da4", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["G", "H", "K", "M", "P"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [10, 11, 15], "consequent": 22}, {"antecedents": [12], "consequent": 23}, {"antecedents": [1, 14], "consequent": 24}, {"antecedents": [15, 16, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent15 -> int1: Two botanists are already selected, so G ot H cannot be selected.; sent12 -> int2: F is already selected. K cannot be selected.; sent1 & sent14 -> int3: When M is selected, so must P and R. That would exceed the desired panel size.; int1 & int2 & int3 & sent15 & sent16 & sent21 -> int4: The answer is E; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Se formará un comité de cinco científicos.", "2": "Los miembros se seleccionarán entre tres botánicos", "3": "(F, G y H),", "4": "tres químicos", "5": "(K, L y M)", "6": "y tres zoólogos", "7": "(P, Q y R).", "8": "La selección se rige por las siguientes condiciones:", "9": "El comité tiene que incluir al menos un científico de cada uno de los tres tipos.", "10": "Si se selecciona más de un botánico,", "11": "se seleccionará como máximo un zoólogo.", "12": "No se puede seleccionar a F y K a la vez.", "13": "No se puede seleccionar a K y M a la vez.", "14": "Si se selecciona a M, hay que seleccionar tanto a P como a R.", "15": "Si cuatro de los científicos seleccionados son F, L, Q y R,", "16": "¿cuál de los siguientes tiene que ser el quinto científico seleccionado?", "17": "A) G", "18": "B) H", "19": "C) K", "20": "D) M", "21": "E) P", "22": "Ya hay dos botánicos seleccionados, por lo que no se puede seleccionar a G ni a H.", "23": "Ya se ha seleccionado a F. No se puede seleccionar a K.", "24": "Si se selecciona a M, hay que seleccionar a P y a R. Eso superaría el tamaño deseado del comité.", "25": "La respuesta correcta es E.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Se formará un comité de cinco científicos.',\n  'Los miembros se seleccionarán entre tres botánicos',\n  '(F, G y H),',\n  'tres químicos',\n  '(K, L y M)',\n  'y tres zoólogos',\n  '(P, Q y R).',\n  'La selección se rige por las siguientes condiciones:',\n  'El comité tiene que incluir al menos un científico de cada uno de los tres tipos.',\n  'Si se selecciona más de un botánico,',\n  'se seleccionará como máximo un zoólogo.',\n  'No se puede seleccionar a F y K a la vez.',\n  'No se puede seleccionar a K y M a la vez.',\n  'Si se selecciona a M, hay que seleccionar tanto a P como a R.',\n  'Si cuatro de los científicos seleccionados son F, L, Q y R,']\nquestion = '¿cuál de los siguientes tiene que ser el quinto científico seleccionado?'\nchoices = {'A': 'G', 'B': 'H', 'C': 'K', 'D': 'M', 'E': 'P'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'Si cuatro de los científicos seleccionados son F, L, Q y R,']\nnew_fact = infer_new_fact(selected) # 'Ya hay dos botánicos seleccionados, por lo que no se puede seleccionar a G ni a H.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se puede seleccionar a F y K a la vez.']\nnew_fact = infer_new_fact(selected) # 'Ya se ha seleccionado a F. No se puede seleccionar a K.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se formará un comité de cinco científicos.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.']\nnew_fact = infer_new_fact(selected) # 'Si se selecciona a M, hay que seleccionar a P y a R. Eso superaría el tamaño deseado del comité.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si cuatro de los científicos seleccionados son F, L, Q y R,', '¿cuál de los siguientes tiene que ser el quinto científico seleccionado?', 'E) P', 'Ya hay dos botánicos seleccionados, por lo que no se puede seleccionar a G ni a H.', 'Ya se ha seleccionado a F. No se puede seleccionar a K.', 'Si se selecciona a M, hay que seleccionar a P y a R. Eso superaría el tamaño deseado del comité.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_27_79af00cbde", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["If K is selected, G cannot be selected.", "If L is selected, F cannot be selected.", "If exactly one chemist is selected, it must be K.", "If exactly two chemists are selected, F cannot be selected.", "If exactly two chemists are selected, G cannot be selected."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [9, 10, 11, 12, 13, 14, 17, 18], "consequent": 22}, {"antecedents": [1, 12, 15], "consequent": 23}, {"antecedents": [10, 11, 12, 13, 14, 21], "consequent": 24}, {"antecedents": [15, 16, 20, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent13 & sent14 & sent17 & sent18 & sent9 -> int1: There are no conditions that restrict selection of K and G, or L and F; sent1 & sent12 & sent15 -> int2: If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected.; sent10 & sent11 & sent12 & sent13 & sent14 & sent21 -> int3: There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted.; int1 & int2 & int3 & sent15 & sent16 & sent20 -> int4: The answer D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Se formará un comité de cinco científicos.", "2": "Los miembros se seleccionarán entre tres botánicos", "3": "(F, G y H),", "4": "tres químicos", "5": "(K, L y M)", "6": "y tres zoólogos", "7": "(P, Q y R).", "8": "La selección se rige por las siguientes condiciones:", "9": "El comité tiene que incluir al menos un científico de cada uno de los tres tipos.", "10": "Si se selecciona más de un botánico,", "11": "se seleccionará como máximo un zoólogo.", "12": "No se puede seleccionar a F y K a la vez.", "13": "No se puede seleccionar a K y M a la vez.", "14": "Si se selecciona a M, hay que seleccionar tanto a P como a R.", "15": "Si P es el único zoólogo seleccionado,", "16": "¿cuál de las siguientes afirmaciones tiene que ser cierta?", "17": "A) Si se selecciona a K, no se puede seleccionar a G.", "18": "B) Si se selecciona a L, no se puede seleccionar a F.", "19": "C) Si se selecciona sólo un químico, tiene que ser K.", "20": "D) Si se seleccionan dos químicos, no se puede seleccionar a F.", "21": "E) Si se seleccionan dos químicos, no se puede seleccionar a G.", "22": "No hay condiciones que impidan la selección de K y G o L y F.", "23": "Si K es el único químico seleccionado, se tiene que elegir a todos los botánicos. Sin embargo, no se puede seleccionar a F y a K.", "24": "No hay condiciones que impidan la selección de G si se eligen dos químicos. Sin embargo, no se puede seleccionar al resto de científicos.", "25": "La respuesta es D.", "26": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Se formará un comité de cinco científicos.',\n  'Los miembros se seleccionarán entre tres botánicos',\n  '(F, G y H),',\n  'tres químicos',\n  '(K, L y M)',\n  'y tres zoólogos',\n  '(P, Q y R).',\n  'La selección se rige por las siguientes condiciones:',\n  'El comité tiene que incluir al menos un científico de cada uno de los tres tipos.',\n  'Si se selecciona más de un botánico,',\n  'se seleccionará como máximo un zoólogo.',\n  'No se puede seleccionar a F y K a la vez.',\n  'No se puede seleccionar a K y M a la vez.',\n  'Si se selecciona a M, hay que seleccionar tanto a P como a R.',\n  'Si P es el único zoólogo seleccionado,']\nquestion = '¿cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'Si se selecciona a K, no se puede seleccionar a G.',\n  'B': 'Si se selecciona a L, no se puede seleccionar a F.',\n  'C': 'Si se selecciona sólo un químico, tiene que ser K.',\n  'D': 'Si se seleccionan dos químicos, no se puede seleccionar a F.',\n  'E': 'Si se seleccionan dos químicos, no se puede seleccionar a G.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El comité tiene que incluir al menos un científico de cada uno de los tres tipos.', 'Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'No se puede seleccionar a F y K a la vez.', 'No se puede seleccionar a K y M a la vez.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'A) Si se selecciona a K, no se puede seleccionar a G.', 'B) Si se selecciona a L, no se puede seleccionar a F.']\nnew_fact = infer_new_fact(selected) # 'No hay condiciones que impidan la selección de K y G o L y F.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se formará un comité de cinco científicos.', 'No se puede seleccionar a F y K a la vez.', 'Si P es el único zoólogo seleccionado,']\nnew_fact = infer_new_fact(selected) # 'Si K es el único químico seleccionado, se tiene que elegir a todos los botánicos. Sin embargo, no se puede seleccionar a F y a K.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'No se puede seleccionar a F y K a la vez.', 'No se puede seleccionar a K y M a la vez.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'E) Si se seleccionan dos químicos, no se puede seleccionar a G.']\nnew_fact = infer_new_fact(selected) # 'No hay condiciones que impidan la selección de G si se eligen dos químicos. Sin embargo, no se puede seleccionar al resto de científicos.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si P es el único zoólogo seleccionado,', '¿cuál de las siguientes afirmaciones tiene que ser cierta?', 'D) Si se seleccionan dos químicos, no se puede seleccionar a F.', 'No hay condiciones que impidan la selección de K y G o L y F.', 'Si K es el único químico seleccionado, se tiene que elegir a todos los botánicos. Sin embargo, no se puede seleccionar a F y a K.', 'No hay condiciones que impidan la selección de G si se eligen dos químicos. Sin embargo, no se puede seleccionar al resto de científicos.']\nnew_fact = infer_new_fact(selected) # 'La respuesta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_28_69c98c102d", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "options": ["F or else K", "F or else M", "K or else M", "M or else Q", "P or else Q"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [10, 11, 14, 15], "consequent": 22}, {"antecedents": [9, 10, 11, 12, 12, 14], "consequent": 23}, {"antecedents": [12, 15, 16, 17, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent14 & sent15 -> int1: If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers.; sent10 & sent11 & sent12 & sent12 & sent14 & sent9 -> int2: There are no conditions that restrict selection of P or Q.; int1 & int2 & sent12 & sent15 & sent16 & sent17 -> int3: The answer is A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Se formará un comité de cinco científicos.", "2": "Los miembros se seleccionarán entre tres botánicos", "3": "(F, G y H),", "4": "tres químicos", "5": "(K, L y M)", "6": "y tres zoólogos", "7": "(P, Q y R).", "8": "La selección se rige por las siguientes condiciones:", "9": "El comité tiene que incluir al menos un científico de cada uno de los tres tipos.", "10": "Si se selecciona más de un botánico,", "11": "se seleccionará como máximo un zoólogo.", "12": "No se puede seleccionar a F y K a la vez.", "13": "No se puede seleccionar a K y M a la vez.", "14": "Si se selecciona a M, hay que seleccionar tanto a P como a R.", "15": "Si tanto G como H están entre los científicos seleccionados,", "16": "el comité tiene que incluir:", "17": "A) a F o a K;", "18": "B) a F o a M;", "19": "C) a K o a M;", "20": "D) a M o a Q;", "21": "E) a P o a Q.", "22": "Si se selecciona más de un botánico, no se podrá seleccionar más de un zoólogo. Las opciones que incluyen a M no pueden ser correctas.", "23": "No hay condiciones que impidan la selección de P o Q.", "24": "La respuesta correcta es A.", "25": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Se formará un comité de cinco científicos.',\n  'Los miembros se seleccionarán entre tres botánicos',\n  '(F, G y H),',\n  'tres químicos',\n  '(K, L y M)',\n  'y tres zoólogos',\n  '(P, Q y R).',\n  'La selección se rige por las siguientes condiciones:',\n  'El comité tiene que incluir al menos un científico de cada uno de los tres tipos.',\n  'Si se selecciona más de un botánico,',\n  'se seleccionará como máximo un zoólogo.',\n  'No se puede seleccionar a F y K a la vez.',\n  'No se puede seleccionar a K y M a la vez.',\n  'Si se selecciona a M, hay que seleccionar tanto a P como a R.',\n  'Si tanto G como H están entre los científicos seleccionados,']\nquestion = 'el comité tiene que incluir:'\nchoices = {'A': 'a F o a K;', 'B': 'a F o a M;', 'C': 'a K o a M;', 'D': 'a M o a Q;', 'E': 'a P o a Q.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.', 'Si tanto G como H están entre los científicos seleccionados,']\nnew_fact = infer_new_fact(selected) # 'Si se selecciona más de un botánico, no se podrá seleccionar más de un zoólogo. Las opciones que incluyen a M no pueden ser correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El comité tiene que incluir al menos un científico de cada uno de los tres tipos.', 'Si se selecciona más de un botánico,', 'se seleccionará como máximo un zoólogo.', 'No se puede seleccionar a F y K a la vez.', 'No se puede seleccionar a F y K a la vez.', 'Si se selecciona a M, hay que seleccionar tanto a P como a R.']\nnew_fact = infer_new_fact(selected) # 'No hay condiciones que impidan la selección de P o Q.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se puede seleccionar a F y K a la vez.', 'Si tanto G como H están entre los científicos seleccionados,', 'el comité tiene que incluir:', 'A) a F o a K;', 'Si se selecciona más de un botánico, no se podrá seleccionar más de un zoólogo. Las opciones que incluyen a M no pueden ser correctas.', 'No hay condiciones que impidan la selección de P o Q.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_29_64daa9725a", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["fuel, machinery, textiles", "grain, machinery, fuel", "machinery, livestock, fuel", "machinery, textiles, fuel", "machinery, textiles, produce"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [12, 13, 14, 20], "consequent": 21}, {"antecedents": [15, 16, 20], "consequent": 22}, {"antecedents": [9, 10, 11, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent12 & sent13 & sent14 -> int6: We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively); int1 & int5 & sent15 -> int7: We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case.; int6 & int7 & sent10 & sent11 & sent9 -> int8: The answer is A.; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "¿Cuál de las siguientes listas podría identificar con precisión la carga en cada uno de los tres primeros muelles de la zona de carga,", "10": "enumerados en orden desde el muelle 1 hasta el muelle 3?", "11": "A) combustible, maquinaria, textiles", "12": "B) grano, maquinaria, combustible", "13": "C) maquinaria, ganado, combustible", "14": "D) maquinaria, textiles, combustible", "15": "E) maquinaria, textiles, productos agrícolas", "16": "No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.", "17": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "18": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "19": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "20": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "21": "Descartamos las opciones B, C y D porque, en todas ellas, el número del muelle que contiene combustible es mayor que el de un tipo de carga que tiene que tener un número más alto que el de combustible (grano, ganado y textiles, respectivamente).", "22": "Descartamos la opción E porque el muelle de combustible tiene que tener una numeración inferior al de textiles y productos agrícolas, que en este caso sólo podría ser el muelle 1 (que contiene maquinaria).", "23": "La respuesta correcta es A.", "24": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.',\n  '¿Cuál de las siguientes listas podría identificar con precisión la carga en cada uno de los tres primeros muelles de la zona de carga,']\nquestion = 'enumerados en orden desde el muelle\\xa01 hasta el muelle\\xa03?'\nchoices = { 'A': 'combustible, maquinaria, textiles',\n  'B': 'grano, maquinaria, combustible',\n  'C': 'maquinaria, ganado, combustible',\n  'D': 'maquinaria, textiles, combustible',\n  'E': 'maquinaria, textiles, productos agrícolas'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B) grano, maquinaria, combustible', 'C) maquinaria, ganado, combustible', 'D) maquinaria, textiles, combustible', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Descartamos las opciones B, C y D porque, en todas ellas, el número del muelle que contiene combustible es mayor que el de un tipo de carga que tiene que tener un número más alto que el de combustible (grano, ganado y textiles, respectivamente).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) maquinaria, textiles, productos agrícolas', 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Descartamos la opción E porque el muelle de combustible tiene que tener una numeración inferior al de textiles y productos agrícolas, que en este caso sólo podría ser el muelle\\xa01 (que contiene maquinaria).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes listas podría identificar con precisión la carga en cada uno de los tres primeros muelles de la zona de carga,', 'enumerados en orden desde el muelle\\xa01 hasta el muelle\\xa03?', 'A) combustible, maquinaria, textiles', 'Descartamos las opciones B, C y D porque, en todas ellas, el número del muelle que contiene combustible es mayor que el de un tipo de carga que tiene que tener un número más alto que el de combustible (grano, ganado y textiles, respectivamente).', 'Descartamos la opción E porque el muelle de combustible tiene que tener una numeración inferior al de textiles y productos agrícolas, que en este caso sólo podría ser el muelle\\xa01 (que contiene maquinaria).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_30_4917e7827d", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["grain", "livestock", "machinery", "produce", "textiles"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 & sent1 -> int6: Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:; int5 & int6 -> int7: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G; int5 & int6 & int7 -> int8: Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M); int8 & sent10 & sent9 -> int9: The answer is A.; int9 -> int10: The answer is A);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "¿Cuál de las siguientes opciones NO PUEDE ser el tipo de carga que se encuentra en el muelle 4?", "10": "A) grano", "11": "B) ganado", "12": "C) maquinaria", "13": "D) productos agrícolas", "14": "E) textiles", "15": "No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.", "16": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "17": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "18": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "19": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "20": "Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:", "21": "El combustible sólo puede estar en los muelles 1 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.", "22": "El grano sólo puede estar en los muelles 5 o 6: C (T/P) (P/T) Ga (M/G) (G/M)", "23": "La respuesta correcta es A.", "24": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nquestion = '¿Cuál de las siguientes opciones NO PUEDE ser el tipo de carga que se encuentra en el muelle\\xa04?'\nchoices = {'A': 'grano', 'B': 'ganado', 'C': 'maquinaria', 'D': 'productos agrícolas', 'E': 'textiles'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.', 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:']\nnew_fact = infer_new_fact(selected) # 'El combustible sólo puede estar en los muelles\\xa01 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:', 'El combustible sólo puede estar en los muelles\\xa01 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.']\nnew_fact = infer_new_fact(selected) # 'El grano sólo puede estar en los muelles\\xa05 o 6: C (T/P) (P/T) Ga (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones NO PUEDE ser el tipo de carga que se encuentra en el muelle\\xa04?', 'A) grano', 'El grano sólo puede estar en los muelles\\xa05 o 6: C (T/P) (P/T) Ga (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_31_1ab2740e34", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["two", "three", "four", "five", "six"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [9, 19], "consequent": 20}, {"antecedents": [1, 20], "consequent": 21}, {"antecedents": [19, 21], "consequent": 22}, {"antecedents": [20, 22], "consequent": 23}, {"antecedents": [16, 17, 22], "consequent": 24}, {"antecedents": [19, 23, 24], "consequent": 25}, {"antecedents": [9, 10, 13, 24, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent7 -> int1: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int2: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int1 & int2 & sent6 -> int3: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int3 & sent5 -> int4: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int4 & sent9 -> int5: Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.; int5 & sent1 -> int6: So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays); int4 & int6 -> int7: This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.; int5 & int7 -> int8: So G must be in bay 6 and M in bay 4: ? ? ? M ? G; int1 & int2 & int7 -> int9: Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,; int4 & int8 & int9 -> int10: and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G; int10 & int9 & sent10 & sent13 & sent9 -> int11: The answer is C since T and P can switch places and both configurations are valid.; int11 -> int12: The answer is C);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "Si hay exactamente un muelle entre el muelle que contiene maquinaria y el muelle que contiene grano,", "10": "¿de cuántos de los seis muelles está definido el tipo de carga que contienen?", "11": "A) dos", "12": "B) tres", "13": "C) cuatro", "14": "D) cinco", "15": "E) seis", "16": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "17": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "18": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "19": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "20": "Normalmente, G podría estar en el muelle 5 o 6, pero ahora es necesario que exista un muelle de separación con respecto al de maquinaria.", "21": "Si intentamos poner G en el muelle 5, M tiene que estar en el muelle 3 (o 7, pero 7 no existe, ya que sólo hay seis muelles).", "22": "Esto crea una configuración imposible, ya que tenemos que colocar C, T y P ANTES QUE M, pero los únicos muelles libres son el 1 y el 2.", "23": "Entonces, G tiene que estar en el muelle 6 y M en el muelle 4: ? ? ? M ? G.", "24": "Siguiendo las reglas, sabemos que F tiene que estar en el muelle 1 para dejar espacio a P y T, que tienen que estar el uno junto al otro,", "25": "y Ga tiene que tener un número inferior a G, así que ahora tenemos: C (P/T) (T/P) M Ga G.", "26": "La respuesta correcta es C, ya que T y P pueden intercambiar sus posiciones y ambas configuraciones serían válidas.", "27": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.',\n  'Si hay exactamente un muelle entre el muelle que contiene maquinaria y el muelle que contiene grano,']\nquestion = '¿de cuántos de los seis muelles está definido el tipo de carga que contienen?'\nchoices = {'A': 'dos', 'B': 'tres', 'C': 'cuatro', 'D': 'cinco', 'E': 'seis'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si hay exactamente un muelle entre el muelle que contiene maquinaria y el muelle que contiene grano,', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Normalmente, G podría estar en el muelle\\xa05 o 6, pero ahora es necesario que exista un muelle de separación con respecto al de maquinaria.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.', 'Normalmente, G podría estar en el muelle\\xa05 o 6, pero ahora es necesario que exista un muelle de separación con respecto al de maquinaria.']\nnew_fact = infer_new_fact(selected) # 'Si intentamos poner G en el muelle\\xa05, M tiene que estar en el muelle\\xa03 (o 7, pero 7 no existe, ya que sólo hay seis muelles).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Si intentamos poner G en el muelle\\xa05, M tiene que estar en el muelle\\xa03 (o 7, pero 7 no existe, ya que sólo hay seis muelles).']\nnew_fact = infer_new_fact(selected) # 'Esto crea una configuración imposible, ya que tenemos que colocar C, T y P ANTES QUE M, pero los únicos muelles libres son el 1 y el 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Normalmente, G podría estar en el muelle\\xa05 o 6, pero ahora es necesario que exista un muelle de separación con respecto al de maquinaria.', 'Esto crea una configuración imposible, ya que tenemos que colocar C, T y P ANTES QUE M, pero los únicos muelles libres son el 1 y el 2.']\nnew_fact = infer_new_fact(selected) # 'Entonces, G tiene que estar en el muelle\\xa06 y M en el muelle\\xa04: ? ? ? M ? G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).', 'Esto crea una configuración imposible, ya que tenemos que colocar C, T y P ANTES QUE M, pero los únicos muelles libres son el 1 y el 2.']\nnew_fact = infer_new_fact(selected) # 'Siguiendo las reglas, sabemos que F tiene que estar en el muelle\\xa01 para dejar espacio a P y T, que tienen que estar el uno junto al otro,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Entonces, G tiene que estar en el muelle\\xa06 y M en el muelle\\xa04: ? ? ? M ? G.', 'Siguiendo las reglas, sabemos que F tiene que estar en el muelle\\xa01 para dejar espacio a P y T, que tienen que estar el uno junto al otro,']\nnew_fact = infer_new_fact(selected) # 'y Ga tiene que tener un número inferior a G, así que ahora tenemos: C (P/T) (T/P) M Ga G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si hay exactamente un muelle entre el muelle que contiene maquinaria y el muelle que contiene grano,', '¿de cuántos de los seis muelles está definido el tipo de carga que contienen?', 'C) cuatro', 'Siguiendo las reglas, sabemos que F tiene que estar en el muelle\\xa01 para dejar espacio a P y T, que tienen que estar el uno junto al otro,', 'y Ga tiene que tener un número inferior a G, así que ahora tenemos: C (P/T) (T/P) M Ga G.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C, ya que T y P pueden intercambiar sus posiciones y ambas configuraciones serían válidas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C, ya que T y P pueden intercambiar sus posiciones y ambas configuraciones serían válidas.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_32_b09492ce8b", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["bay 1", "bay 2", "bay 3", "bay 5", "bay 6"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [21, 22], "consequent": 23}, {"antecedents": [9, 13, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery (M), so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 & sent1 -> int6: Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:; int5 & int6 -> int7: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G; int5 & int6 & int7 -> int8: Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M); int7 & int8 -> int9: Based on the above configurations, livestock can only be in bays 4 or 5; int9 & sent13 & sent9 -> int10: The answer is D.; int10 -> int11: The answer is D);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "¿Cuál de los siguientes podría ser el muelle que contiene ganado?", "10": "A) muelle 1", "11": "B) muelle 2", "12": "C) muelle 3", "13": "D) muelle 5", "14": "E) muelle 6", "15": "No hay restricciones en cuanto a la maquinaria (M), por lo que puede estar en cualquier muelle.", "16": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "17": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "18": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "19": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "20": "Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:", "21": "El combustible sólo puede estar en los muelles 1 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.", "22": "El grano sólo puede estar en los muelles 5 o 6: C (T/P) (P/T) Ga (M/G) (G/M)", "23": "Según las configuraciones anteriores, el ganado sólo puede estar en los muelles 4 o 5.", "24": "La respuesta correcta es D.", "25": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nquestion = '¿Cuál de los siguientes podría ser el muelle que contiene ganado?'\nchoices = {'A': 'muelle\\xa01', 'B': 'muelle\\xa02', 'C': 'muelle\\xa03', 'D': 'muelle\\xa05', 'E': 'muelle\\xa06'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria (M), por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.', 'No hay restricciones en cuanto a la maquinaria (M), por lo que puede estar en cualquier muelle.', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:']\nnew_fact = infer_new_fact(selected) # 'El combustible sólo puede estar en los muelles\\xa01 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.', 'Como el orden indica 5 de los 6 espacios, los tipos de carga de cada extremo sólo pueden moverse un espacio para incluir M:', 'El combustible sólo puede estar en los muelles\\xa01 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.']\nnew_fact = infer_new_fact(selected) # 'El grano sólo puede estar en los muelles\\xa05 o 6: C (T/P) (P/T) Ga (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El combustible sólo puede estar en los muelles\\xa01 o 2: (M/C) (C/M) (T/P) (P/T) Ga G.', 'El grano sólo puede estar en los muelles\\xa05 o 6: C (T/P) (P/T) Ga (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'Según las configuraciones anteriores, el ganado sólo puede estar en los muelles\\xa04 o 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de los siguientes podría ser el muelle que contiene ganado?', 'D) muelle\\xa05', 'Según las configuraciones anteriores, el ganado sólo puede estar en los muelles\\xa04 o 5.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_33_1f094603db", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["The bay holding fuel is next to the bay holding machinery.", "The bay holding grain is next to the bay holding machinery.", "The bay holding livestock is next to the bay holding fuel.", "The bay holding produce is next to the bay holding livestock.", "The bay holding textiles is next to the bay holding fuel."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [15, 19], "consequent": 20}, {"antecedents": [9, 12, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int1 & int5 -> int6: Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G).; int6 & sent12 & sent9 -> int7: The answer is C.; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "¿Cuál de las siguientes afirmaciones es falsa?", "10": "A) El muelle que contiene combustible está al lado del muelle que contiene maquinaria.", "11": "B) El muelle que contiene grano está al lado del muelle que contiene maquinaria.", "12": "C) El muelle que contiene ganado está al lado del muelle que contiene combustible.", "13": "D) El muelle que contiene productos agrícolas está al lado del muelle que contiene ganado.", "14": "E) El muelle que contiene textiles está al lado del muelle que contiene combustible.", "15": "No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.", "16": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "17": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "18": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "19": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "20": "Según el orden requerido, vemos que el combustible (C) sólo puede estar al lado de los textiles (T) y los productos agrícolas (P) (o maquinaria (M)), pero nunca al lado del ganado (Ga) o el grano (G).", "21": "La respuesta correcta es C.", "22": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nquestion = '¿Cuál de las siguientes afirmaciones es falsa?'\nchoices = { 'A': 'El muelle que contiene combustible está al lado del muelle que contiene maquinaria.',\n  'B': 'El muelle que contiene grano está al lado del muelle que contiene maquinaria.',\n  'C': 'El muelle que contiene ganado está al lado del muelle que contiene combustible.',\n  'D': 'El muelle que contiene productos agrícolas está al lado del muelle que contiene ganado.',\n  'E': 'El muelle que contiene textiles está al lado del muelle que contiene combustible.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Según el orden requerido, vemos que el combustible (C) sólo puede estar al lado de los textiles (T) y los productos agrícolas (P) (o maquinaria (M)), pero nunca al lado del ganado (Ga) o el grano (G).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes afirmaciones es falsa?', 'C) El muelle que contiene ganado está al lado del muelle que contiene combustible.', 'Según el orden requerido, vemos que el combustible (C) sólo puede estar al lado de los textiles (T) y los productos agrícolas (P) (o maquinaria (M)), pero nunca al lado del ganado (Ga) o el grano (G).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_34_27704433fb", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["Bay 2 is holding fuel.", "Bay 4 is holding produce.", "Bay 4 is holding textiles.", "Bay 5 is holding grain.", "Bay 5 is holding machinery."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [11, 12, 22, 23], "consequent": 24}, {"antecedents": [16, 21], "consequent": 25}, {"antecedents": [15, 25], "consequent": 26}, {"antecedents": [16, 21], "consequent": 27}, {"antecedents": [14, 27], "consequent": 28}, {"antecedents": [25, 27], "consequent": 29}, {"antecedents": [29], "consequent": 30}, {"antecedents": [9, 10, 13, 24, 26, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent9 -> int6: Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G; int1 & int6 -> int7: If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G; int7 -> int8: The same configuration has bay 4 holding produce.; int7 & int8 & sent11 & sent12 -> int9: We rule out options A and B since they provide valid possibilities; int1 & int6 -> int10: Bay 5 can hold machinery: F - T - P - L - M - G; int10 & sent15 -> int11: We rule out option E since it provides valid possibilities.; int1 & int6 -> int12: Bay 5 can also hold grain: F - T - P - L - G - M; int12 & sent14 -> int13: We rule out option D since it provides valid possibilities.; int10 & int12 -> int14: When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2.; int14 -> int15: We see that textiles can never occupy bay 4.; int11 & int13 & int15 & int9 & sent10 & sent13 & sent9 -> int16: The answer is C.; int16 -> int17: The answer is C);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "Si el muelle que contiene productos agrícolas está al lado del muelle que contiene ganado,", "10": "todas las siguientes situaciones podrían ser ciertas EXCEPTO:", "11": "A) El muelle 2 contiene combustible.", "12": "B) El muelle 4 contiene productos agrícolas.", "13": "C) El muelle 4 contiene textiles.", "14": "D) El muelle 5 contiene granos.", "15": "E) El muelle 5 contiene maquinaria.", "16": "No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.", "17": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "18": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "19": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "20": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "21": "Dado que el muelle que contiene productos agrícolas tiene que estar al lado del muelle que contiene ganado, tenemos la siguiente configuración: C - T - P - Ga - G.", "22": "Si el muelle 1 contiene maquinaria, el muelle 2 contendrá combustible: M - C - T - P - Ga - G.", "23": "Con la misma configuración, el muelle 4 contiene productos agrícolas.", "24": "Descartamos las opciones A y B ya que ofrecen posibilidades válidas.", "25": "El muelle 5 puede contener maquinaria: C - T - P - Ga - M - G.", "26": "Descartamos la opción E porque ofrece una posibilidad válida.", "27": "El muelle 5 también puede contener grano: C - T - P - Ga - G - M.", "28": "Descartamos la opción D porque ofrece una posibilidad válida.", "29": "Si la maquinaria o el grano están en el muelle 5, los textiles se pueden mover al muelle 2.", "30": "Vemos que los textiles no pueden ocupar el muelle 4 en ningún caso.", "31": "La respuesta correcta es C.", "32": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.',\n  'Si el muelle que contiene productos agrícolas está al lado del muelle que contiene ganado,']\nquestion = 'todas las siguientes situaciones podrían ser ciertas EXCEPTO:'\nchoices = { 'A': 'El muelle\\xa02 contiene combustible.',\n  'B': 'El muelle\\xa04 contiene productos agrícolas.',\n  'C': 'El muelle\\xa04 contiene textiles.',\n  'D': 'El muelle\\xa05 contiene granos.',\n  'E': 'El muelle\\xa05 contiene maquinaria.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si el muelle que contiene productos agrícolas está al lado del muelle que contiene ganado,', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Dado que el muelle que contiene productos agrícolas tiene que estar al lado del muelle que contiene ganado, tenemos la siguiente configuración: C - T - P - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'Dado que el muelle que contiene productos agrícolas tiene que estar al lado del muelle que contiene ganado, tenemos la siguiente configuración: C - T - P - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Si el muelle\\xa01 contiene maquinaria, el muelle\\xa02 contendrá combustible: M - C - T - P - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si el muelle\\xa01 contiene maquinaria, el muelle\\xa02 contendrá combustible: M - C - T - P - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Con la misma configuración, el muelle\\xa04 contiene productos agrícolas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) El muelle\\xa02 contiene combustible.', 'B) El muelle\\xa04 contiene productos agrícolas.', 'Si el muelle\\xa01 contiene maquinaria, el muelle\\xa02 contendrá combustible: M - C - T - P - Ga - G.', 'Con la misma configuración, el muelle\\xa04 contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Descartamos las opciones A y B ya que ofrecen posibilidades válidas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'Dado que el muelle que contiene productos agrícolas tiene que estar al lado del muelle que contiene ganado, tenemos la siguiente configuración: C - T - P - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'El muelle\\xa05 puede contener maquinaria: C - T - P - Ga - M - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) El muelle\\xa05 contiene maquinaria.', 'El muelle\\xa05 puede contener maquinaria: C - T - P - Ga - M - G.']\nnew_fact = infer_new_fact(selected) # 'Descartamos la opción E porque ofrece una posibilidad válida.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'Dado que el muelle que contiene productos agrícolas tiene que estar al lado del muelle que contiene ganado, tenemos la siguiente configuración: C - T - P - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'El muelle\\xa05 también puede contener grano: C - T - P - Ga - G - M.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) El muelle\\xa05 contiene granos.', 'El muelle\\xa05 también puede contener grano: C - T - P - Ga - G - M.']\nnew_fact = infer_new_fact(selected) # 'Descartamos la opción D porque ofrece una posibilidad válida.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle\\xa05 puede contener maquinaria: C - T - P - Ga - M - G.', 'El muelle\\xa05 también puede contener grano: C - T - P - Ga - G - M.']\nnew_fact = infer_new_fact(selected) # 'Si la maquinaria o el grano están en el muelle\\xa05, los textiles se pueden mover al muelle\\xa02.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si la maquinaria o el grano están en el muelle\\xa05, los textiles se pueden mover al muelle\\xa02.']\nnew_fact = infer_new_fact(selected) # 'Vemos que los textiles no pueden ocupar el muelle\\xa04 en ningún caso.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si el muelle que contiene productos agrícolas está al lado del muelle que contiene ganado,', 'todas las siguientes situaciones podrían ser ciertas EXCEPTO:', 'C) El muelle\\xa04 contiene textiles.', 'Descartamos las opciones A y B ya que ofrecen posibilidades válidas.', 'Descartamos la opción E porque ofrece una posibilidad válida.', 'Descartamos la opción D porque ofrece una posibilidad válida.', 'Vemos que los textiles no pueden ocupar el muelle\\xa04 en ningún caso.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_35_392ea1395f", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "options": ["two", "three", "four", "five", "six"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: There are no restrictions on machinery, so it can go anywhere.; sent7 -> int2: Fuel (F) must be numbered lower than produce (P): F - P; sent8 -> int3: Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T); int2 & int3 & sent6 -> int4: Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L; int4 & sent5 -> int5: Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G; int5 & sent9 -> int6: If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G; int1 & int6 -> int7: We know 4 types of cargo are completely determined.; int7 & sent10 & sent13 & sent9 -> int8: Answer is C.; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.", "2": "Cada muelle contiene un tipo diferente de entre seis tipos de carga:", "3": "combustible, grano, ganado, maquinaria, productos agrícolas o textiles.", "4": "Se aplica lo siguiente:", "5": "El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.", "6": "El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.", "7": "El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.", "8": "El muelle que contiene textiles está al lado del que contiene productos agrícolas.", "9": "Si el muelle 4 contiene productos agrícolas,", "10": "¿de cuántos de los seis muelles está definido el tipo de carga que contienen?", "11": "A) dos", "12": "B) tres", "13": "C) cuatro", "14": "D) cinco", "15": "E) seis", "16": "No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.", "17": "El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.", "18": "Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).", "19": "El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.", "20": "El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.", "21": "Si el muelle 4 contiene productos agrícolas, la carga tiene que encontrarse en el siguiente orden: (M/F) (F/M) T P Ga G.", "22": "Sabemos que 4 tipos de carga están definidos.", "23": "La respuesta correcta es C.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una zona de carga consta exactamente de seis muelles numerados de forma consecutiva del 1 al 6 de un lado al otro de la zona de carga.',\n  'Cada muelle contiene un tipo diferente de entre seis tipos de carga:',\n  'combustible, grano, ganado, maquinaria, productos agrícolas o textiles.',\n  'Se aplica lo siguiente:',\n  'El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.',\n  'El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.',\n  'El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.',\n  'El muelle que contiene textiles está al lado del que contiene productos agrícolas.',\n  'Si el muelle\\xa04 contiene productos agrícolas,']\nquestion = '¿de cuántos de los seis muelles está definido el tipo de carga que contienen?'\nchoices = {'A': 'dos', 'B': 'tres', 'C': 'cuatro', 'D': 'cinco', 'E': 'seis'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene productos agrícolas es mayor que el del muelle que contiene combustible.']\nnew_fact = infer_new_fact(selected) # 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El muelle que contiene textiles está al lado del que contiene productos agrícolas.']\nnew_fact = infer_new_fact(selected) # 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene ganado es mayor que el del muelle que contiene textiles.', 'El número del muelle de combustible (C) tiene que ser inferior al del muelle de productos agrícolas (P): C - P.', 'Los productos agrícolas (P) tienen que ir antes o después de los textiles (T), lo que significa que T tiene que tener el número de muelle anterior o posterior al muelle que contenga productos agrícolas: (T)P(T).']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El número del muelle que contiene cereales es mayor que el del muelle que contiene ganado.', 'El número de muelle que contiene textiles (T) tiene que ser inferior al del muelle que contiene ganado (Ga): C - (T)P(T) - Ga.']\nnew_fact = infer_new_fact(selected) # 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si el muelle\\xa04 contiene productos agrícolas,', 'El número de muelle que contiene ganado (Ga) tiene que ser inferior al del muelle que contiene grano (G): C- (T)P(T) - Ga - G.']\nnew_fact = infer_new_fact(selected) # 'Si el muelle\\xa04 contiene productos agrícolas, la carga tiene que encontrarse en el siguiente orden: (M/F) (F/M) T P Ga G.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No hay restricciones en cuanto a la maquinaria, por lo que puede estar en cualquier muelle.', 'Si el muelle\\xa04 contiene productos agrícolas, la carga tiene que encontrarse en el siguiente orden: (M/F) (F/M) T P Ga G.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que 4 tipos de carga están definidos.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si el muelle\\xa04 contiene productos agrícolas,', '¿de cuántos de los seis muelles está definido el tipo de carga que contienen?', 'C) cuatro', 'Sabemos que 4 tipos de carga están definidos.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_36_a884934ae1", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday", "oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [7, 14, 15], "consequent": 16}, {"antecedents": [6, 13], "consequent": 17}, {"antecedents": [8, 12], "consequent": 18}, {"antecedents": [9, 10, 11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent14 & sent15 & sent7 -> int1: The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E.; sent13 & sent6 -> int2: At least 1 batch has to be made on Monday, so we rule out option C.; sent12 & sent8 -> int3: The second batch of sugar cookies is made on Thursday, so we rule out option B.; int1 & int2 & int3 & sent10 & sent11 & sent9 -> int4: Answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "¿Cuál de las siguientes opciones sería una lista", "10": "completa y correcta de los días en que se elabora cada tipo de galleta?", "11": "A) avena: lunes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: lunes, jueves y viernes", "12": "B) avena: lunes, martes y jueves; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, miércoles y jueves", "13": "C) avena: martes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: martes, jueves y viernes", "14": "D) avena: lunes, martes y jueves; mantequilla de cacahuete: lunes, miércoles y jueves; azúcar: lunes, jueves y viernes", "15": "E) avena: lunes, jueves y viernes; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, jueves y viernes", "16": "La segunda hornada de galletas de avena se elabora el mismo día que la primera de galletas de mantequilla de cacahuete, por lo que descartamos las opciones D y E.", "17": "Se tiene que elaborar al menos una hornada el lunes, por lo que descartamos la opción C.", "18": "La segunda hornada de galletas de azúcar se hace el jueves, por lo que descartamos la opción B.", "19": "La respuesta correcta es A.", "20": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  '¿Cuál de las siguientes opciones sería una lista']\nquestion = 'completa y correcta de los días en que se elabora cada tipo de galleta?'\nchoices = { 'A': 'avena: lunes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: lunes, jueves y viernes',\n  'B': 'avena: lunes, martes y jueves; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, miércoles y jueves',\n  'C': 'avena: martes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: martes, jueves y viernes',\n  'D': 'avena: lunes, martes y jueves; mantequilla de cacahuete: lunes, miércoles y jueves; azúcar: lunes, jueves y viernes',\n  'E': 'avena: lunes, jueves y viernes; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, jueves y viernes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.', 'D) avena: lunes, martes y jueves; mantequilla de cacahuete: lunes, miércoles y jueves; azúcar: lunes, jueves y viernes', 'E) avena: lunes, jueves y viernes; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, jueves y viernes']\nnew_fact = infer_new_fact(selected) # 'La segunda hornada de galletas de avena se elabora el mismo día que la primera de galletas de mantequilla de cacahuete, por lo que descartamos las opciones D y E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['El lunes se prepara al menos una hornada de galletas.', 'C) avena: martes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: martes, jueves y viernes']\nnew_fact = infer_new_fact(selected) # 'Se tiene que elaborar al menos una hornada el lunes, por lo que descartamos la opción C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La segunda hornada de galletas de azúcar se hace el jueves.', 'B) avena: lunes, martes y jueves; mantequilla de cacahuete: martes, miércoles y jueves; azúcar: lunes, miércoles y jueves']\nnew_fact = infer_new_fact(selected) # 'La segunda hornada de galletas de azúcar se hace el jueves, por lo que descartamos la opción B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones sería una lista', 'completa y correcta de los días en que se elabora cada tipo de galleta?', 'A) avena: lunes, miércoles y jueves; mantequilla de cacahuete: miércoles, jueves y viernes; azúcar: lunes, jueves y viernes', 'La segunda hornada de galletas de avena se elabora el mismo día que la primera de galletas de mantequilla de cacahuete, por lo que descartamos las opciones D y E.', 'Se tiene que elaborar al menos una hornada el lunes, por lo que descartamos la opción C.', 'La segunda hornada de galletas de azúcar se hace el jueves, por lo que descartamos la opción B.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_37_ed09ff63ff", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["one", "two", "three", "four", "five"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 16}, {"antecedents": [2, 3, 16], "consequent": 17}, {"antecedents": [7], "consequent": 18}, {"antecedents": [5, 17, 18], "consequent": 19}, {"antecedents": [9, 11, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent6 -> int1: Monday must have at least one batch of cookies made,; int1 & sent2 & sent3 -> int2: so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday.; sent7 -> int3: Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1); int2 & int3 & sent5 -> int4: and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday.; int4 & sent11 & sent9 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "¿Cuántos días, de lunes a viernes,", "10": "se pueden preparar como máximo dos hornadas de galletas?", "11": "A) uno", "12": "B) dos", "13": "C) tres", "14": "D) cuatro", "15": "E) cinco", "16": "El lunes se tiene que elaborar al menos una hornada de galletas,", "17": "por lo que se prepararía al menos la hornada 1 de avena (A1), la de mantequilla de cacahuete (M1) o la de azúcar (Az1).", "18": "Ya que la segunda hornada de avena (A2) tiene que hacerse el mismo día que la primera de mantequilla de cacahuete (M1),", "19": "y no se pueden hacer hornadas de la misma galleta el mismo día, M1 no se puede hacer el lunes.", "20": "La respuesta correcta es A.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  '¿Cuántos días, de lunes a viernes,']\nquestion = 'se pueden preparar como máximo dos hornadas de galletas?'\nchoices = {'A': 'uno', 'B': 'dos', 'C': 'tres', 'D': 'cuatro', 'E': 'cinco'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['El lunes se prepara al menos una hornada de galletas.']\nnew_fact = infer_new_fact(selected) # 'El lunes se tiene que elaborar al menos una hornada de galletas,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['de avena, de mantequilla de cacahuete y de azúcar.', 'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'El lunes se tiene que elaborar al menos una hornada de galletas,']\nnew_fact = infer_new_fact(selected) # 'por lo que se prepararía al menos la hornada\\xa01 de avena (A1), la de mantequilla de cacahuete (M1) o la de azúcar (Az1).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.']\nnew_fact = infer_new_fact(selected) # 'Ya que la segunda hornada de avena (A2) tiene que hacerse el mismo día que la primera de mantequilla de cacahuete (M1),'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'por lo que se prepararía al menos la hornada\\xa01 de avena (A1), la de mantequilla de cacahuete (M1) o la de azúcar (Az1).', 'Ya que la segunda hornada de avena (A2) tiene que hacerse el mismo día que la primera de mantequilla de cacahuete (M1),']\nnew_fact = infer_new_fact(selected) # 'y no se pueden hacer hornadas de la misma galleta el mismo día, M1 no se puede hacer el lunes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuántos días, de lunes a viernes,', 'A) uno', 'y no se pueden hacer hornadas de la misma galleta el mismo día, M1 no se puede hacer el lunes.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_38_ce1a5f7128", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["Two different kinds of cookie have their first batch made on Monday.", "Two different kinds of cookie have their first batch made on Tuesday.", "Two different kinds of cookie have their second batch made on Wednesday.", "Two different kinds of cookie have their second batch made on Thursday.", "Two different kinds of cookie have their third batch made on Friday."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 16}, {"antecedents": [5], "consequent": 17}, {"antecedents": [8, 17], "consequent": 18}, {"antecedents": [9, 10, 13, 16, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday.; sent5 -> int2: 2 batches of the same type cannot be made on the same day.; int2 & sent8 -> int3: Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday.; int1 & int3 & sent10 & sent13 & sent9 -> int4: We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C.; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "Si la primera hornada de galletas de mantequilla de cacahuete se hace el martes,", "10": "todas las siguientes situaciones podrían ser ciertas EXCEPTO:", "11": "A) El lunes se hace la primera hornada de dos tipos diferentes de galletas.", "12": "B) El martes se hace la primera hornada de dos tipos diferentes de galletas.", "13": "C) El miércoles se hace la segunda hornada de dos tipos diferentes de galletas.", "14": "D) El jueves se hace la segunda hornada de dos tipos diferentes de galletas.", "15": "E) El viernes se hace la segunda hornada de dos tipos diferentes de galletas.", "16": "Si la primera hornada de galletas de mantequilla de cacahuete (M1) se prepara el martes, la hornada 2 de galletas de avena (A2) también se tiene que preparar el martes.", "17": "No se pueden hacer dos hornadas del mismo tipo el mismo día.", "18": "La hornada 2 de galletas de azúcar (Az2) se elabora el jueves, lo que indica que la hornada 3 de galletas de azúcar (Az3) tiene que prepararse el viernes.", "19": "Sabemos que las segundas hornadas de galletas de avena y azúcar ya están definidas (para el martes y el jueves, respectivamente), por lo que la respuesta correcta es C.", "20": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  'Si la primera hornada de galletas de mantequilla de cacahuete se hace el martes,']\nquestion = 'todas las siguientes situaciones podrían ser ciertas EXCEPTO:'\nchoices = { 'A': 'El lunes se hace la primera hornada de dos tipos diferentes de galletas.',\n  'B': 'El martes se hace la primera hornada de dos tipos diferentes de galletas.',\n  'C': 'El miércoles se hace la segunda hornada de dos tipos diferentes de galletas.',\n  'D': 'El jueves se hace la segunda hornada de dos tipos diferentes de galletas.',\n  'E': 'El viernes se hace la segunda hornada de dos tipos diferentes de galletas.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.', 'Si la primera hornada de galletas de mantequilla de cacahuete se hace el martes,']\nnew_fact = infer_new_fact(selected) # 'Si la primera hornada de galletas de mantequilla de cacahuete (M1) se prepara el martes, la hornada\\xa02 de galletas de avena (A2) también se tiene que preparar el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se hacen dos hornadas del mismo tipo de galleta el mismo día.']\nnew_fact = infer_new_fact(selected) # 'No se pueden hacer dos hornadas del mismo tipo el mismo día.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La segunda hornada de galletas de azúcar se hace el jueves.', 'No se pueden hacer dos hornadas del mismo tipo el mismo día.']\nnew_fact = infer_new_fact(selected) # 'La hornada\\xa02 de galletas de azúcar (Az2) se elabora el jueves, lo que indica que la hornada\\xa03 de galletas de azúcar (Az3) tiene que prepararse el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si la primera hornada de galletas de mantequilla de cacahuete se hace el martes,', 'todas las siguientes situaciones podrían ser ciertas EXCEPTO:', 'C) El miércoles se hace la segunda hornada de dos tipos diferentes de galletas.', 'Si la primera hornada de galletas de mantequilla de cacahuete (M1) se prepara el martes, la hornada\\xa02 de galletas de avena (A2) también se tiene que preparar el martes.', 'La hornada\\xa02 de galletas de azúcar (Az2) se elabora el jueves, lo que indica que la hornada\\xa03 de galletas de azúcar (Az3) tiene que prepararse el viernes.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que las segundas hornadas de galletas de avena y azúcar ya están definidas (para el martes y el jueves, respectivamente), por lo que la respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sabemos que las segundas hornadas de galletas de avena y azúcar ya están definidas (para el martes y el jueves, respectivamente), por lo que la respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_39_ca1c392dd8", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["Exactly three batches of cookies are made on Tuesday.", "Exactly three batches of cookies are made on Friday.", "At least two batches of cookies are made on Monday.", "At least two batches of cookies are made on Thursday.", "Fewer batches of cookies are made on Monday than on Tuesday."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [5, 16], "consequent": 17}, {"antecedents": [3, 16], "consequent": 18}, {"antecedents": [9, 16, 17, 18], "consequent": 19}, {"antecedents": [3, 5, 19], "consequent": 20}, {"antecedents": [3, 5, 8, 9], "consequent": 21}, {"antecedents": [16, 19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent7 -> int1: Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,; int1 & sent5 -> int2: P1 cannot be made on Monday.; int1 & sent3 -> int3: If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3).; int1 & int2 & int3 & sent9 -> int4: P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.; int4 & sent3 & sent5 -> int5: Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday.; sent3 & sent5 & sent8 & sent9 -> int6: Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday.; int1 & int4 & int5 & int6 -> int7: We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3).; int7 & sent10 & sent13 & sent9 -> int8: the answer is C.; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "Si no se elabora ninguna hornada de galletas el miércoles,", "10": "¿cuál de las siguientes afirmaciones tiene que ser cierta?", "11": "A) El martes se hacen tres hornadas de galletas.", "12": "B) El viernes se hacen tres hornadas de galletas.", "13": "C) El lunes se hacen al menos dos hornadas de galletas.", "14": "D) El jueves se hacen al menos dos hornadas de galletas.", "15": "E) Se elaboran menos hornadas de galletas el lunes que el martes.", "16": "Como la hornada 1 de mantequilla de cacahuete (M1) y la hornada 2 de avena (A2) tienen que elaborarse el mismo día,", "17": "M1 no puede elaborarse el lunes.", "18": "Si M1 se elabora el jueves o el viernes, no quedarían días para preparar la hornada 3 de mantequilla de cacahuete (M3).", "19": "M1 sólo puede elaborarse el martes, por lo que M2 tiene que hacerse el jueves y M3 el viernes.", "20": "Como A2 sólo puede elaborarse el martes, A1 sólo puede hacerse el lunes y A3 puede hacerse el jueves o el viernes.", "21": "Como la hornada 2 de galletas de azúcar (Az2) tiene que prepararse el jueves, la hornada 3 de galletas de azúcar (Az3) sólo puede elaborarse el viernes. La hornada 1 de galletas de azúcar (Az1) se puede preparar el lunes o el martes.", "22": "Por ello, sabemos que se tienen que elaborar al menos 2 hornadas el martes (A2, M1), el jueves (M2, Az2) y el viernes (M3, Az3).", "23": "La respuesta correcta es C.", "24": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  'Si no se elabora ninguna hornada de galletas el miércoles,']\nquestion = '¿cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'El martes se hacen tres hornadas de galletas.',\n  'B': 'El viernes se hacen tres hornadas de galletas.',\n  'C': 'El lunes se hacen al menos dos hornadas de galletas.',\n  'D': 'El jueves se hacen al menos dos hornadas de galletas.',\n  'E': 'Se elaboran menos hornadas de galletas el lunes que el martes.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.']\nnew_fact = infer_new_fact(selected) # 'Como la hornada\\xa01 de mantequilla de cacahuete (M1) y la hornada\\xa02 de avena (A2) tienen que elaborarse el mismo día,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'Como la hornada\\xa01 de mantequilla de cacahuete (M1) y la hornada\\xa02 de avena (A2) tienen que elaborarse el mismo día,']\nnew_fact = infer_new_fact(selected) # 'M1 no puede elaborarse el lunes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'Como la hornada\\xa01 de mantequilla de cacahuete (M1) y la hornada\\xa02 de avena (A2) tienen que elaborarse el mismo día,']\nnew_fact = infer_new_fact(selected) # 'Si M1 se elabora el jueves o el viernes, no quedarían días para preparar la hornada\\xa03 de mantequilla de cacahuete (M3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si no se elabora ninguna hornada de galletas el miércoles,', 'Como la hornada\\xa01 de mantequilla de cacahuete (M1) y la hornada\\xa02 de avena (A2) tienen que elaborarse el mismo día,', 'M1 no puede elaborarse el lunes.', 'Si M1 se elabora el jueves o el viernes, no quedarían días para preparar la hornada\\xa03 de mantequilla de cacahuete (M3).']\nnew_fact = infer_new_fact(selected) # 'M1 sólo puede elaborarse el martes, por lo que M2 tiene que hacerse el jueves y M3 el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'M1 sólo puede elaborarse el martes, por lo que M2 tiene que hacerse el jueves y M3 el viernes.']\nnew_fact = infer_new_fact(selected) # 'Como A2 sólo puede elaborarse el martes, A1 sólo puede hacerse el lunes y A3 puede hacerse el jueves o el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'La segunda hornada de galletas de azúcar se hace el jueves.', 'Si no se elabora ninguna hornada de galletas el miércoles,']\nnew_fact = infer_new_fact(selected) # 'Como la hornada\\xa02 de galletas de azúcar (Az2) tiene que prepararse el jueves, la hornada\\xa03 de galletas de azúcar (Az3) sólo puede elaborarse el viernes. La hornada\\xa01 de galletas de azúcar (Az1) se puede preparar el lunes o el martes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Como la hornada\\xa01 de mantequilla de cacahuete (M1) y la hornada\\xa02 de avena (A2) tienen que elaborarse el mismo día,', 'M1 sólo puede elaborarse el martes, por lo que M2 tiene que hacerse el jueves y M3 el viernes.', 'Como A2 sólo puede elaborarse el martes, A1 sólo puede hacerse el lunes y A3 puede hacerse el jueves o el viernes.', 'Como la hornada\\xa02 de galletas de azúcar (Az2) tiene que prepararse el jueves, la hornada\\xa03 de galletas de azúcar (Az3) sólo puede elaborarse el viernes. La hornada\\xa01 de galletas de azúcar (Az1) se puede preparar el lunes o el martes.']\nnew_fact = infer_new_fact(selected) # 'Por ello, sabemos que se tienen que elaborar al menos 2 hornadas el martes (A2, M1), el jueves (M2, Az2) y el viernes (M3, Az3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si no se elabora ninguna hornada de galletas el miércoles,', '¿cuál de las siguientes afirmaciones tiene que ser cierta?', 'C) El lunes se hacen al menos dos hornadas de galletas.', 'Por ello, sabemos que se tienen que elaborar al menos 2 hornadas el martes (A2, M1), el jueves (M2, Az2) y el viernes (M3, Az3).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es C.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_40_22f97be364", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["The first batch of sugar cookies is made on Monday.", "The first batch of oatmeal cookies is made on Tuesday.", "The third batch of oatmeal cookies is made on Friday.", "The first batch of peanut butter cookies is made on Wednesday.", "The second batch of peanut butter cookies is made on Tuesday."], "answer": "A", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 10, 11, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday.; int1 & sent3 -> int2: There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday.; int2 & sent10 & sent11 & sent9 -> int3: The answer is A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "Si se elabora sólo una hornada de galletas el viernes,", "10": "¿cuál de las siguientes afirmaciones podría ser cierta?", "11": "A) La primera hornada de galletas de azúcar se elabora el lunes.", "12": "B) La primera hornada de galletas de avena se elabora el martes.", "13": "C) La tercera hornada de galletas de avena se elabora el viernes.", "14": "D) La primera hornada de galletas de mantequilla de cacahuete se elabora el miércoles.", "15": "E) La segunda hornada de galletas de mantequilla de cacahuete se elabora el martes.", "16": "La hornada 2 de galletas de azúcar tiene que prepararse el jueves, por lo que la hornada 3 de galletas de azúcar tiene que prepararse el viernes.", "17": "Hay tres días en los que se puede elaborar la hornada 1 de galletas de azúcar: lunes, martes y miércoles.", "18": "La respuesta correcta es A.", "19": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  'Si se elabora sólo una hornada de galletas el viernes,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'La primera hornada de galletas de azúcar se elabora el lunes.',\n  'B': 'La primera hornada de galletas de avena se elabora el martes.',\n  'C': 'La tercera hornada de galletas de avena se elabora el viernes.',\n  'D': 'La primera hornada de galletas de mantequilla de cacahuete se elabora el miércoles.',\n  'E': 'La segunda hornada de galletas de mantequilla de cacahuete se elabora el martes.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'La segunda hornada de galletas de azúcar se hace el jueves.']\nnew_fact = infer_new_fact(selected) # 'La hornada\\xa02 de galletas de azúcar tiene que prepararse el jueves, por lo que la hornada\\xa03 de galletas de azúcar tiene que prepararse el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'La hornada\\xa02 de galletas de azúcar tiene que prepararse el jueves, por lo que la hornada\\xa03 de galletas de azúcar tiene que prepararse el viernes.']\nnew_fact = infer_new_fact(selected) # 'Hay tres días en los que se puede elaborar la hornada\\xa01 de galletas de azúcar: lunes, martes y miércoles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si se elabora sólo una hornada de galletas el viernes,', '¿cuál de las siguientes afirmaciones podría ser cierta?', 'A) La primera hornada de galletas de azúcar se elabora el lunes.', 'Hay tres días en los que se puede elaborar la hornada\\xa01 de galletas de azúcar: lunes, martes y miércoles.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_41_4afc83f245", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "options": ["At least one batch of cookies is made on each of the five days.", "At least two batches of cookies are made on Wednesday.", "Exactly one batch of cookies is made on Monday.", "Exactly two batches of cookies are made on Tuesday.", "Exactly one batch of cookies is made on Friday."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 17], "consequent": 18}, {"antecedents": [5, 7], "consequent": 19}, {"antecedents": [19], "consequent": 20}, {"antecedents": [2, 6, 18, 20], "consequent": 21}, {"antecedents": [9, 18, 21], "consequent": 22}, {"antecedents": [3, 5, 7, 22], "consequent": 23}, {"antecedents": [16, 23], "consequent": 24}, {"antecedents": [9, 10, 15, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.; int1 & sent3 -> int2: Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday.; int2 & sent9 -> int3: If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.; sent5 & sent7 -> int4: Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1),; int4 -> int5: P1 cannot be made on Monday.; int3 & int5 & sent2 & sent6 -> int6: Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday.; int3 & int6 & sent9 -> int7: Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require).; int7 & sent3 & sent5 & sent7 -> int8: P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday.; int1 & int8 -> int9: We know that 2 cookie batches can be made on Friday (S3, P3).; int9 & sent10 & sent15 & sent9 -> int10: The answer is E.; int10 -> int11: The answer is E);", "textual_logical_units": {"1": "Una panadería hace tres tipos de galletas:", "2": "de avena, de mantequilla de cacahuete y de azúcar.", "3": "Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.", "4": "Tienen que cumplirse las siguientes condiciones:", "5": "No se hacen dos hornadas del mismo tipo de galleta el mismo día.", "6": "El lunes se prepara al menos una hornada de galletas.", "7": "La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.", "8": "La segunda hornada de galletas de azúcar se hace el jueves.", "9": "Si la primera hornada de un tipo de galletas se prepara el mismo día que la tercera de otro tipo de galletas,", "10": "¿cuál de las siguientes opciones sería falsa?", "11": "A) Se elabora al menos una hornada de galletas cada uno de los cinco días.", "12": "B) Los miércoles se elaboran al menos dos hornadas de galletas.", "13": "C) El lunes se hace sólo una hornada de galletas.", "14": "D) El martes se hacen sólo dos hornadas de galletas.", "15": "E) El viernes se hace sólo una hornada de galletas.", "16": "La hornada 2 de galletas de azúcar (Az2) tiene que prepararse el jueves, por lo que la hornada 3 de galletas de azúcar (Az3) tiene que prepararse el viernes.", "17": "La hornada 1 de galletas de azúcar (Az1) se puede preparar el lunes, martes o miércoles.", "18": "Si queremos que la primera hornada de un tipo de galletas se prepare el mismo día que la tercera hornada de otro tipo de galletas, supongamos que Az1 se hace el miércoles.", "19": "Ya que no se pueden preparar dos hornadas del mismo tipo de galletas el mismo día y la segunda hornada de galletas de avena (A2) tiene que prepararse el mismo día que la primera hornada de galletas de mantequilla de cacahuete (M1),", "20": "M1 no puede elaborarse el lunes.", "21": "Por lo tanto, sólo puede prepararse la hornada 1 de galletas de avena (A1) el lunes para cumplir el requisito de preparar una hornada de galletas el lunes.", "22": "Por ello, A2 tiene que elaborarse el martes y A3 el miércoles (superponiéndose con Az1 según los requisitos).", "23": "Entonces, M1 se elabora el martes y M2 se puede elaborar el miércoles o el jueves, lo que determinaría si M3 se elabora el jueves o el viernes.", "24": "Sabemos que se pueden preparar dos hornadas de galletas el viernes (Az3, M3).", "25": "La respuesta correcta es E.", "26": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Una panadería hace tres tipos de galletas:',\n  'de avena, de mantequilla de cacahuete y de azúcar.',\n  'Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'No se hacen dos hornadas del mismo tipo de galleta el mismo día.',\n  'El lunes se prepara al menos una hornada de galletas.',\n  'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.',\n  'La segunda hornada de galletas de azúcar se hace el jueves.',\n  'Si la primera hornada de un tipo de galletas se prepara el mismo día que la tercera de otro tipo de galletas,']\nquestion = '¿cuál de las siguientes opciones sería falsa?'\nchoices = { 'A': 'Se elabora al menos una hornada de galletas cada uno de los cinco días.',\n  'B': 'Los miércoles se elaboran al menos dos hornadas de galletas.',\n  'C': 'El lunes se hace sólo una hornada de galletas.',\n  'D': 'El martes se hacen sólo dos hornadas de galletas.',\n  'E': 'El viernes se hace sólo una hornada de galletas.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'La segunda hornada de galletas de azúcar se hace el jueves.']\nnew_fact = infer_new_fact(selected) # 'La hornada\\xa02 de galletas de azúcar (Az2) tiene que prepararse el jueves, por lo que la hornada\\xa03 de galletas de azúcar (Az3) tiene que prepararse el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'La hornada\\xa02 de galletas de azúcar (Az2) tiene que prepararse el jueves, por lo que la hornada\\xa03 de galletas de azúcar (Az3) tiene que prepararse el viernes.']\nnew_fact = infer_new_fact(selected) # 'La hornada\\xa01 de galletas de azúcar (Az1) se puede preparar el lunes, martes o miércoles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si la primera hornada de un tipo de galletas se prepara el mismo día que la tercera de otro tipo de galletas,', 'La hornada\\xa01 de galletas de azúcar (Az1) se puede preparar el lunes, martes o miércoles.']\nnew_fact = infer_new_fact(selected) # 'Si queremos que la primera hornada de un tipo de galletas se prepare el mismo día que la tercera hornada de otro tipo de galletas, supongamos que Az1 se hace el miércoles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.']\nnew_fact = infer_new_fact(selected) # 'Ya que no se pueden preparar dos hornadas del mismo tipo de galletas el mismo día y la segunda hornada de galletas de avena (A2) tiene que prepararse el mismo día que la primera hornada de galletas de mantequilla de cacahuete (M1),'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ya que no se pueden preparar dos hornadas del mismo tipo de galletas el mismo día y la segunda hornada de galletas de avena (A2) tiene que prepararse el mismo día que la primera hornada de galletas de mantequilla de cacahuete (M1),']\nnew_fact = infer_new_fact(selected) # 'M1 no puede elaborarse el lunes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['de avena, de mantequilla de cacahuete y de azúcar.', 'El lunes se prepara al menos una hornada de galletas.', 'Si queremos que la primera hornada de un tipo de galletas se prepare el mismo día que la tercera hornada de otro tipo de galletas, supongamos que Az1 se hace el miércoles.', 'M1 no puede elaborarse el lunes.']\nnew_fact = infer_new_fact(selected) # 'Por lo tanto, sólo puede prepararse la hornada\\xa01 de galletas de avena (A1) el lunes para cumplir el requisito de preparar una hornada de galletas el lunes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si la primera hornada de un tipo de galletas se prepara el mismo día que la tercera de otro tipo de galletas,', 'Si queremos que la primera hornada de un tipo de galletas se prepare el mismo día que la tercera hornada de otro tipo de galletas, supongamos que Az1 se hace el miércoles.', 'Por lo tanto, sólo puede prepararse la hornada\\xa01 de galletas de avena (A1) el lunes para cumplir el requisito de preparar una hornada de galletas el lunes.']\nnew_fact = infer_new_fact(selected) # 'Por ello, A2 tiene que elaborarse el martes y A3 el miércoles (superponiéndose con Az1 según los requisitos).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Se hacen tres hornadas de cada tipo de galleta a la semana (de lunes a viernes) y cada hornada se hace, de principio a fin, en un solo día.', 'No se hacen dos hornadas del mismo tipo de galleta el mismo día.', 'La segunda hornada de galletas de avena se hace el mismo día que la primera de galletas de mantequilla de cacahuete.', 'Por ello, A2 tiene que elaborarse el martes y A3 el miércoles (superponiéndose con Az1 según los requisitos).']\nnew_fact = infer_new_fact(selected) # 'Entonces, M1 se elabora el martes y M2 se puede elaborar el miércoles o el jueves, lo que determinaría si M3 se elabora el jueves o el viernes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La hornada\\xa02 de galletas de azúcar (Az2) tiene que prepararse el jueves, por lo que la hornada\\xa03 de galletas de azúcar (Az3) tiene que prepararse el viernes.', 'Entonces, M1 se elabora el martes y M2 se puede elaborar el miércoles o el jueves, lo que determinaría si M3 se elabora el jueves o el viernes.']\nnew_fact = infer_new_fact(selected) # 'Sabemos que se pueden preparar dos hornadas de galletas el viernes (Az3, M3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si la primera hornada de un tipo de galletas se prepara el mismo día que la tercera de otro tipo de galletas,', '¿cuál de las siguientes opciones sería falsa?', 'E) El viernes se hace sólo una hornada de galletas.', 'Sabemos que se pueden preparar dos hornadas de galletas el viernes (Az3, M3).']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_42_f87ac6d25a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Lopez", "O'Neill", "Jiang, Lopez", "Kramer, O'Neill", "Lopez, Megregian"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 13, 15], "consequent": 17}, {"antecedents": [6, 10, 11, 16], "consequent": 18}, {"antecedents": [7, 14], "consequent": 19}, {"antecedents": [10, 11, 12, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent13 & sent15 & sent8 -> int1: Kramer and O'Neill review Tamerlane. B and D not options.; sent10 & sent11 & sent16 & sent6 -> int2: Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer.; sent14 & sent7 -> int3: Lopez may not review plays reviewed by Jiang. C not an answer.; int1 & int2 & int3 & sent10 & sent11 & sent12 -> int4: The answer is A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Para el periódico escolar, cinco estudiantes", "2": "(Jiang, Kramer, López, Megregian y O'Neill)", "3": "hacen una reseña de al menos una de entre tres obras de teatro", "4": "(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.", "5": "Tienen que cumplirse las siguientes condiciones:", "6": "Kramer y López reseñan cada uno menos obras de teatro que Megregian.", "7": "Ni López ni Megregian reseñan la misma obra de teatro que Jiang.", "8": "Tanto Kramer como O'Neill reseñan Tamerlán.", "9": "Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.", "10": "¿Cuál de las siguientes opciones sería una lista", "11": "correcta y completa de los estudiantes que hacen una reseña de Atardecer?", "12": "A) López", "13": "B) O'Neill", "14": "C) Jiang, López", "15": "D) Kramer, O'Neill", "16": "E) López, Megregian", "17": "Kramer y O'Neill reseñan Tamerlán. Ni B ni D son respuestas correctas.", "18": "Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, Megregian hace más de una reseña. E no es la respuesta correcta.", "19": "López no puede hacer reseñas de obras reseñadas por Jiang. C no es la respuesta correcta.", "20": "La respuesta correcta es A.", "21": "The answer is A)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Para el periódico escolar, cinco estudiantes',\n  \"(Jiang, Kramer, López, Megregian y O'Neill)\",\n  'hacen una reseña de al menos una de entre tres obras de teatro',\n  '(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Kramer y López reseñan cada uno menos obras de teatro que Megregian.',\n  'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.',\n  \"Tanto Kramer como O'Neill reseñan Tamerlán.\",\n  'Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.',\n  '¿Cuál de las siguientes opciones sería una lista']\nquestion = 'correcta y completa de los estudiantes que hacen una reseña de Atardecer?'\nchoices = {'A': 'López', 'B': \"O'Neill\", 'C': 'Jiang, López', 'D': \"Kramer, O'Neill\", 'E': 'López, Megregian'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Tanto Kramer como O'Neill reseñan Tamerlán.\", '¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que hacen una reseña de Atardecer?', \"B) O'Neill\", \"D) Kramer, O'Neill\"]\nnew_fact = infer_new_fact(selected) # \"Kramer y O'Neill reseñan Tamerlán. Ni B ni D son respuestas correctas.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', '¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que hacen una reseña de Atardecer?', 'E) López, Megregian']\nnew_fact = infer_new_fact(selected) # 'Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, Megregian hace más de una reseña. E no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'C) Jiang, López']\nnew_fact = infer_new_fact(selected) # 'López no puede hacer reseñas de obras reseñadas por Jiang. C no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que hacen una reseña de Atardecer?', 'A) López', \"Kramer y O'Neill reseñan Tamerlán. Ni B ni D son respuestas correctas.\", 'Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, Megregian hace más de una reseña. E no es la respuesta correcta.', 'López no puede hacer reseñas de obras reseñadas por Jiang. C no es la respuesta correcta.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_43_5e82c8fb9f", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang reviews more of the plays than Lopez does.", "Megregian reviews more of the plays than Jiang does.", "Megregian reviews more of the plays than O'Neill does.", "O'Neill reviews more of the plays than Jiang does.", "O'Neill reviews more of the plays than Kramer does."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 16}, {"antecedents": [7, 16], "consequent": 17}, {"antecedents": [6, 17], "consequent": 18}, {"antecedents": [10, 12, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent3 -> int1: The students must each review one or more of three exact plays.; int1 & sent7 -> int2: Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian.; int2 & sent6 -> int3: Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play.; int3 & sent10 & sent12 -> int4: The answer is B.; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Para el periódico escolar, cinco estudiantes", "2": "(Jiang, Kramer, López, Megregian y O'Neill)", "3": "hacen una reseña de al menos una de entre tres obras de teatro", "4": "(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.", "5": "Tienen que cumplirse las siguientes condiciones:", "6": "Kramer y López reseñan cada uno menos obras de teatro que Megregian.", "7": "Ni López ni Megregian reseñan la misma obra de teatro que Jiang.", "8": "Tanto Kramer como O'Neill reseñan Tamerlán.", "9": "Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.", "10": "¿Cuál de las siguientes afirmaciones tiene que ser cierta?", "11": "A) Jiang reseña más obras que López.", "12": "B) Megregian reseña más obras que Jiang.", "13": "C) Megregian reseña más obras que O'Neill.", "14": "D) O'Neill reseña más obras que Jiang.", "15": "E) O'Neill reseña más obras que Kramer.", "16": "Cada estudiante tiene que reseñar una o más de entre tres obras de teatro.", "17": "Megregian y López no pueden hacer reseñas de obras reseñadas por Jiang. Eso deja como máximo dos obras de teatro para Megregian.", "18": "Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, cada uno reseñaría una obra.", "19": "La respuesta correcta es B.", "20": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Para el periódico escolar, cinco estudiantes',\n  \"(Jiang, Kramer, López, Megregian y O'Neill)\",\n  'hacen una reseña de al menos una de entre tres obras de teatro',\n  '(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Kramer y López reseñan cada uno menos obras de teatro que Megregian.',\n  'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.',\n  \"Tanto Kramer como O'Neill reseñan Tamerlán.\",\n  'Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.']\nquestion = '¿Cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'Jiang reseña más obras que López.',\n  'B': 'Megregian reseña más obras que Jiang.',\n  'C': \"Megregian reseña más obras que O'Neill.\",\n  'D': \"O'Neill reseña más obras que Jiang.\",\n  'E': \"O'Neill reseña más obras que Kramer.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['hacen una reseña de al menos una de entre tres obras de teatro']\nnew_fact = infer_new_fact(selected) # 'Cada estudiante tiene que reseñar una o más de entre tres obras de teatro.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'Cada estudiante tiene que reseñar una o más de entre tres obras de teatro.']\nnew_fact = infer_new_fact(selected) # 'Megregian y López no pueden hacer reseñas de obras reseñadas por Jiang. Eso deja como máximo dos obras de teatro para Megregian.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'Megregian y López no pueden hacer reseñas de obras reseñadas por Jiang. Eso deja como máximo dos obras de teatro para Megregian.']\nnew_fact = infer_new_fact(selected) # 'Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, cada uno reseñaría una obra.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes afirmaciones tiene que ser cierta?', 'B) Megregian reseña más obras que Jiang.', 'Kramer y López tienen que reseñar cada uno menos obras que Megregian. Por lo tanto, cada uno reseñaría una obra.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_44_1ff4e8fcaf", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Megregian does not review Undulation.", "O'Neill does not review Undulation.", "Jiang reviews Undulation.", "Lopez reviews Tamerlane.", "O'Neill reviews Sunset."], "answer": "E", "reasoning_graph_edges": [{"antecedents": [6, 7, 10, 14], "consequent": 17}, {"antecedents": [7, 10, 12], "consequent": 18}, {"antecedents": [6, 12, 18], "consequent": 19}, {"antecedents": [6, 7, 10, 13, 16], "consequent": 20}, {"antecedents": [6, 15], "consequent": 21}, {"antecedents": [10, 16, 17, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "linearized_output_en": "sent10 & sent14 & sent6 & sent7 -> int1: Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer; sent10 & sent12 & sent7 -> int2: If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.; int2 & sent12 & sent6 -> int3: If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer.; sent10 & sent13 & sent16 & sent6 & sent7 -> int4: If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer.; sent15 & sent6 -> int5: If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian.; int1 & int2 & int3 & int4 & int5 & sent10 & sent16 -> int6: The answer is E; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "Para el periódico escolar, cinco estudiantes", "2": "(Jiang, Kramer, López, Megregian y O'Neill)", "3": "hacen una reseña de al menos una de entre tres obras de teatro", "4": "(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.", "5": "Tienen que cumplirse las siguientes condiciones:", "6": "Kramer y López reseñan cada uno menos obras de teatro que Megregian.", "7": "Ni López ni Megregian reseñan la misma obra de teatro que Jiang.", "8": "Tanto Kramer como O'Neill reseñan Tamerlán.", "9": "Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.", "10": "Si sólo tres de los estudiantes reseñan Ondulación,", "11": "¿cuál de las siguientes afirmaciones podría ser cierta?", "12": "A) Megregian no reseña Ondulación.", "13": "B) O'Neill no reseña Ondulación.", "14": "C) Jiang no reseña Ondulación.", "15": "D) López reseña Tamerlán.", "16": "E) O'Neill reseña Atardecer.", "17": "Megragian y López no pueden reseñar obras reseñadas por Jiang. Eso significa que Kramer, Jiang y O'Neill reseñarían Ondulación. Eso significaría que tanto Kramer como Megregian reseñarían dos obras de teatro. C no es la respuesta correcta.", "18": "Si Megregian no reseña Ondulación, Jiang, López y Kramer podrían reseñar esa obra. Sin embargo, López no puede reseñar una obra reseñada por Jiang.", "19": "Si no se tiene en cuenta a López, Kramer sería una opción y reseñaría dos obras de teatro, las mismas que Megregian. A no es la respuesta correcta.", "20": "Si O'Neill no reseña Ondulación, una combinación con Jiang descartaría a dos estudiantes y Kramer y Megregian reseñarían el mismo número de obras. B no es la respuesta correcta.", "21": "Si López reseña Tamerlán, no puede reseñar Ondulación, ya que tiene que reseñar menos obras que Megregian. Del mismo modo, la combinación de Megregian, Kramer y O'Neill no sería posible porque Kramer tiene que reseñar menos obras que Megregian.", "22": "La respuesta correcta es E.", "23": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Para el periódico escolar, cinco estudiantes',\n  \"(Jiang, Kramer, López, Megregian y O'Neill)\",\n  'hacen una reseña de al menos una de entre tres obras de teatro',\n  '(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Kramer y López reseñan cada uno menos obras de teatro que Megregian.',\n  'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.',\n  \"Tanto Kramer como O'Neill reseñan Tamerlán.\",\n  'Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.',\n  'Si sólo tres de los estudiantes reseñan Ondulación,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'Megregian no reseña Ondulación.',\n  'B': \"O'Neill no reseña Ondulación.\",\n  'C': 'Jiang no reseña Ondulación.',\n  'D': 'López reseña Tamerlán.',\n  'E': \"O'Neill reseña Atardecer.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'Si sólo tres de los estudiantes reseñan Ondulación,', 'C) Jiang no reseña Ondulación.']\nnew_fact = infer_new_fact(selected) # \"Megragian y López no pueden reseñar obras reseñadas por Jiang. Eso significa que Kramer, Jiang y O'Neill reseñarían Ondulación. Eso significaría que tanto Kramer como Megregian reseñarían dos obras de teatro. C no es la respuesta correcta.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'Si sólo tres de los estudiantes reseñan Ondulación,', 'A) Megregian no reseña Ondulación.']\nnew_fact = infer_new_fact(selected) # 'Si Megregian no reseña Ondulación, Jiang, López y Kramer podrían reseñar esa obra. Sin embargo, López no puede reseñar una obra reseñada por Jiang.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'A) Megregian no reseña Ondulación.', 'Si Megregian no reseña Ondulación, Jiang, López y Kramer podrían reseñar esa obra. Sin embargo, López no puede reseñar una obra reseñada por Jiang.']\nnew_fact = infer_new_fact(selected) # 'Si no se tiene en cuenta a López, Kramer sería una opción y reseñaría dos obras de teatro, las mismas que Megregian. A no es la respuesta correcta.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'Si sólo tres de los estudiantes reseñan Ondulación,', \"B) O'Neill no reseña Ondulación.\", \"E) O'Neill reseña Atardecer.\"]\nnew_fact = infer_new_fact(selected) # \"Si O'Neill no reseña Ondulación, una combinación con Jiang descartaría a dos estudiantes y Kramer y Megregian reseñarían el mismo número de obras. B no es la respuesta correcta.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'D) López reseña Tamerlán.']\nnew_fact = infer_new_fact(selected) # \"Si López reseña Tamerlán, no puede reseñar Ondulación, ya que tiene que reseñar menos obras que Megregian. Del mismo modo, la combinación de Megregian, Kramer y O'Neill no sería posible porque Kramer tiene que reseñar menos obras que Megregian.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si sólo tres de los estudiantes reseñan Ondulación,', \"E) O'Neill reseña Atardecer.\", \"Megragian y López no pueden reseñar obras reseñadas por Jiang. Eso significa que Kramer, Jiang y O'Neill reseñarían Ondulación. Eso significaría que tanto Kramer como Megregian reseñarían dos obras de teatro. C no es la respuesta correcta.\", 'Si Megregian no reseña Ondulación, Jiang, López y Kramer podrían reseñar esa obra. Sin embargo, López no puede reseñar una obra reseñada por Jiang.', 'Si no se tiene en cuenta a López, Kramer sería una opción y reseñaría dos obras de teatro, las mismas que Megregian. A no es la respuesta correcta.', \"Si O'Neill no reseña Ondulación, una combinación con Jiang descartaría a dos estudiantes y Kramer y Megregian reseñarían el mismo número de obras. B no es la respuesta correcta.\", \"Si López reseña Tamerlán, no puede reseñar Ondulación, ya que tiene que reseñar menos obras que Megregian. Del mismo modo, la combinación de Megregian, Kramer y O'Neill no sería posible porque Kramer tiene que reseñar menos obras que Megregian.\"]\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_45_1b1005bd06", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang, Kramer", "Kramer, O'Neill", "Kramer, Lopez, O'Neill", "Kramer, Megregian, O'Neill", "Lopez, Megregian, O'Neill"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 12, 16], "consequent": 17}, {"antecedents": [6, 7, 10, 11, 13, 14], "consequent": 18}, {"antecedents": [10, 11, 15, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent12 & sent16 & sent8 -> int1: Kramer and O'Neill must be included in the complete list. A and E not answers.; sent10 & sent11 & sent13 & sent14 & sent6 & sent7 -> int2: Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers.; int1 & int2 & sent10 & sent11 & sent15 -> int3: The answer is D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Para el periódico escolar, cinco estudiantes", "2": "(Jiang, Kramer, López, Megregian y O'Neill)", "3": "hacen una reseña de al menos una de entre tres obras de teatro", "4": "(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.", "5": "Tienen que cumplirse las siguientes condiciones:", "6": "Kramer y López reseñan cada uno menos obras de teatro que Megregian.", "7": "Ni López ni Megregian reseñan la misma obra de teatro que Jiang.", "8": "Tanto Kramer como O'Neill reseñan Tamerlán.", "9": "Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.", "10": "¿Cuál de las siguientes opciones sería una lista", "11": "correcta y completa de los estudiantes que reseñan Tamerlán?", "12": "A) Jiang, Kramer", "13": "B) Kramer, O'Neill", "14": "C) Kramer, López, O'Neill", "15": "D) Kramer, Megregian, O'Neill", "16": "E) López, Megregian, O'Neill", "17": "Kramer y O'Neill tienen que estar en la lista completa. A y E no son respuestas correctas.", "18": "Como López y Megregian no pueden reseñar las obras reseñadas por Jiang, y Kramer y López tienen que reseñar cada uno menos obras que Megregian, B y C no son respuestas correctas.", "19": "La respuesta correcta es D.", "20": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Para el periódico escolar, cinco estudiantes',\n  \"(Jiang, Kramer, López, Megregian y O'Neill)\",\n  'hacen una reseña de al menos una de entre tres obras de teatro',\n  '(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Kramer y López reseñan cada uno menos obras de teatro que Megregian.',\n  'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.',\n  \"Tanto Kramer como O'Neill reseñan Tamerlán.\",\n  'Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.',\n  '¿Cuál de las siguientes opciones sería una lista']\nquestion = 'correcta y completa de los estudiantes que reseñan Tamerlán?'\nchoices = {'A': 'Jiang, Kramer', 'B': \"Kramer, O'Neill\", 'C': \"Kramer, López, O'Neill\", 'D': \"Kramer, Megregian, O'Neill\", 'E': \"López, Megregian, O'Neill\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Tanto Kramer como O'Neill reseñan Tamerlán.\", '¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que reseñan Tamerlán?', 'A) Jiang, Kramer', \"E) López, Megregian, O'Neill\"]\nnew_fact = infer_new_fact(selected) # \"Kramer y O'Neill tienen que estar en la lista completa. A y E no son respuestas correctas.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', '¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que reseñan Tamerlán?', \"B) Kramer, O'Neill\", \"C) Kramer, López, O'Neill\"]\nnew_fact = infer_new_fact(selected) # 'Como López y Megregian no pueden reseñar las obras reseñadas por Jiang, y Kramer y López tienen que reseñar cada uno menos obras que Megregian, B y C no son respuestas correctas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones sería una lista', 'correcta y completa de los estudiantes que reseñan Tamerlán?', \"D) Kramer, Megregian, O'Neill\", \"Kramer y O'Neill tienen que estar en la lista completa. A y E no son respuestas correctas.\", 'Como López y Megregian no pueden reseñar las obras reseñadas por Jiang, y Kramer y López tienen que reseñar cada uno menos obras que Megregian, B y C no son respuestas correctas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_46_eaf3c67b1a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "options": ["Jiang reviews Sunset.", "Lopez reviews Undulation.", "Megregian reviews Sunset.", "Megregian reviews Tamerlane.", "O'Neill reviews Undulation."], "answer": "D", "reasoning_graph_edges": [{"antecedents": [6, 7, 10], "consequent": 17}, {"antecedents": [15, 17], "consequent": 18}, {"antecedents": [10, 11, 15, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent10 & sent6 & sent7 -> int1: Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian.; int1 & sent15 -> int2: Therefore, Megregian should review two plays, Tamerlane being one of them.; int2 & sent10 & sent11 & sent15 -> int3: The answer is D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Para el periódico escolar, cinco estudiantes", "2": "(Jiang, Kramer, López, Megregian y O'Neill)", "3": "hacen una reseña de al menos una de entre tres obras de teatro", "4": "(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.", "5": "Tienen que cumplirse las siguientes condiciones:", "6": "Kramer y López reseñan cada uno menos obras de teatro que Megregian.", "7": "Ni López ni Megregian reseñan la misma obra de teatro que Jiang.", "8": "Tanto Kramer como O'Neill reseñan Tamerlán.", "9": "Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.", "10": "Si Jiang no reseña Tamerlán,", "11": "¿cuál de las siguientes afirmaciones tiene que ser cierta?", "12": "A) Jiang reseña Atardecer.", "13": "B) López reseña Ondulación.", "14": "C) Megregian reseña Atardecer.", "15": "D) Megregian reseña Tamerlán.", "16": "E) O'Neill reseña Ondulación.", "17": "Jiang y Megregian no pueden reseñar las mismas obras y Kramer y López tienen que reseñar menos obras cada uno que Megregian.", "18": "Por lo tanto, Megregian tendría que reseñar dos obras de teatro, siendo Tamerlán una de ellas.", "19": "La respuesta correcta es D.", "20": "The answer is D)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Para el periódico escolar, cinco estudiantes',\n  \"(Jiang, Kramer, López, Megregian y O'Neill)\",\n  'hacen una reseña de al menos una de entre tres obras de teatro',\n  '(Atardecer, Tamerlán y Ondulación), pero no reseñan ninguna otra obra.',\n  'Tienen que cumplirse las siguientes condiciones:',\n  'Kramer y López reseñan cada uno menos obras de teatro que Megregian.',\n  'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.',\n  \"Tanto Kramer como O'Neill reseñan Tamerlán.\",\n  'Dos de los estudiantes reseñan exactamente la misma obra u obras de teatro que el otro.',\n  'Si Jiang no reseña Tamerlán,']\nquestion = '¿cuál de las siguientes afirmaciones tiene que ser cierta?'\nchoices = { 'A': 'Jiang reseña Atardecer.',\n  'B': 'López reseña Ondulación.',\n  'C': 'Megregian reseña Atardecer.',\n  'D': 'Megregian reseña Tamerlán.',\n  'E': \"O'Neill reseña Ondulación.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Kramer y López reseñan cada uno menos obras de teatro que Megregian.', 'Ni López ni Megregian reseñan la misma obra de teatro que Jiang.', 'Si Jiang no reseña Tamerlán,']\nnew_fact = infer_new_fact(selected) # 'Jiang y Megregian no pueden reseñar las mismas obras y Kramer y López tienen que reseñar menos obras cada uno que Megregian.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Megregian reseña Tamerlán.', 'Jiang y Megregian no pueden reseñar las mismas obras y Kramer y López tienen que reseñar menos obras cada uno que Megregian.']\nnew_fact = infer_new_fact(selected) # 'Por lo tanto, Megregian tendría que reseñar dos obras de teatro, siendo Tamerlán una de ellas.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si Jiang no reseña Tamerlán,', '¿cuál de las siguientes afirmaciones tiene que ser cierta?', 'D) Megregian reseña Tamerlán.', 'Por lo tanto, Megregian tendría que reseñar dos obras de teatro, siendo Tamerlán una de ellas.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_47_b4bbc39217", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["#1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu", "#1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu", "#1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn", "#1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu", "#1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson; sent8 -> int2: Souza must come before Xu; int1 & int2 & sent11 & sent16 -> int3: Answer is E; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:", "2": "Robertson, Souza, Togowa, Vaughn, Xu y Young.", "3": "Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:", "4": "#1, #2, #3, #4, #5 o #6.", "5": "No se puede asignar la misma plaza de aparcamiento a dos empleados.", "6": "Las siguientes reglas rigen la asignación de plazas de aparcamiento:", "7": "A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.", "8": "A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.", "9": "A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.", "10": "A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.", "11": "¿Cuál de las siguientes opciones podría ser la lista de plazas de aparcamiento de los nuevos empleados?", "12": "A) #1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu", "13": "B) #1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu", "14": "C) #1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn", "15": "D) #1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu", "16": "E) #1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn", "17": "Se tiene que asignar una plaza de aparcamiento a Togawa antes que a Young. A Young se le tiene que asignar plaza antes que a Robertson. Con esta información, sabemos que el orden sería Togowa > Young > Robertson.", "18": "A Souza se le tiene que asignar plaza antes que a Xu.", "19": "La respuesta correcta es E.", "20": "The answer is E)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:',\n  'Robertson, Souza, Togowa, Vaughn, Xu y Young.',\n  'Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:',\n  '#1, #2, #3, #4, #5 o #6.',\n  'No se puede asignar la misma plaza de aparcamiento a dos empleados.',\n  'Las siguientes reglas rigen la asignación de plazas de aparcamiento:',\n  'A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.',\n  'A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.',\n  'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.',\n  'A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.']\nquestion = '¿Cuál de las siguientes opciones podría ser la lista de plazas de aparcamiento de los nuevos empleados?'\nchoices = { 'A': '#1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu',\n  'B': '#1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu',\n  'C': '#1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn',\n  'D': '#1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu',\n  'E': '#1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.', 'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.']\nnew_fact = infer_new_fact(selected) # 'Se tiene que asignar una plaza de aparcamiento a Togawa antes que a Young. A Young se le tiene que asignar plaza antes que a Robertson. Con esta información, sabemos que el orden sería Togowa > Young > Robertson.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.']\nnew_fact = infer_new_fact(selected) # 'A Souza se le tiene que asignar plaza antes que a Xu.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿Cuál de las siguientes opciones podría ser la lista de plazas de aparcamiento de los nuevos empleados?', 'E) #1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn', 'Se tiene que asignar una plaza de aparcamiento a Togawa antes que a Young. A Young se le tiene que asignar plaza antes que a Robertson. Con esta información, sabemos que el orden sería Togowa > Young > Robertson.', 'A Souza se le tiene que asignar plaza antes que a Xu.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_48_280b5732d4", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["Young is assigned parking space #2.", "Vaughn is assigned parking space #5.", "Togowa is assigned parking space #3.", "Souza is assigned parking space #2.", "Robertson is assigned parking space #3."], "answer": "B", "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 10, 11], "consequent": 18}, {"antecedents": [2, 7, 8, 9, 10, 11, 18], "consequent": 19}, {"antecedents": [11, 12, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent10 & sent11 & sent7 & sent8 & sent9 -> int1: We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa; int1 & sent10 & sent11 & sent2 & sent7 & sent8 & sent9 -> int2: We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula.; int2 & sent11 & sent12 & sent14 -> int3: Answer is B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:", "2": "Robertson, Souza, Togowa, Vaughn, Xu y Young.", "3": "Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:", "4": "#1, #2, #3, #4, #5 o #6.", "5": "No se puede asignar la misma plaza de aparcamiento a dos empleados.", "6": "Las siguientes reglas rigen la asignación de plazas de aparcamiento:", "7": "A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.", "8": "A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.", "9": "A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.", "10": "A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.", "11": "Si a Togowa se le asigna una plaza de aparcamiento con un número más alto que la de Souza,", "12": "¿cuál de las siguientes afirmaciones podría ser cierta?", "13": "A) A Young se le asigna la plaza de aparcamiento #2.", "14": "B) A Vaughn se le asigna la plaza de aparcamiento #5.", "15": "C) A Togowa se le asigna la plaza de aparcamiento #3.", "16": "D) A Souza se le asigna la plaza de aparcamiento #2.", "17": "E) A Robertson se le asigna la plaza de aparcamiento #3.", "18": "Conocemos el orden de 5 de los 6 empleados. Togowa va antes que Young, que va antes que Robertson. Souza va antes que Xu y Togowa.", "19": "No sabemos la posición de Vaughn. Con la información que tenemos hasta ahora, podemos establecer la siguiente fórmula: Souza > Xu o Togowa > Young > Robertson. Vaughn puede tener cualquiera de las plazas de aparcamiento siempre que no infrinja la fórmula dada.", "20": "La respuesta correcta es B.", "21": "The answer is B)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:',\n  'Robertson, Souza, Togowa, Vaughn, Xu y Young.',\n  'Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:',\n  '#1, #2, #3, #4, #5 o #6.',\n  'No se puede asignar la misma plaza de aparcamiento a dos empleados.',\n  'Las siguientes reglas rigen la asignación de plazas de aparcamiento:',\n  'A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.',\n  'A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.',\n  'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.',\n  'A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.',\n  'Si a Togowa se le asigna una plaza de aparcamiento con un número más alto que la de Souza,']\nquestion = '¿cuál de las siguientes afirmaciones podría ser cierta?'\nchoices = { 'A': 'A Young se le asigna la plaza de aparcamiento #2.',\n  'B': 'A Vaughn se le asigna la plaza de aparcamiento #5.',\n  'C': 'A Togowa se le asigna la plaza de aparcamiento #3.',\n  'D': 'A Souza se le asigna la plaza de aparcamiento #2.',\n  'E': 'A Robertson se le asigna la plaza de aparcamiento #3.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.', 'A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.', 'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.', 'A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.', 'Si a Togowa se le asigna una plaza de aparcamiento con un número más alto que la de Souza,']\nnew_fact = infer_new_fact(selected) # 'Conocemos el orden de 5 de los 6 empleados. Togowa va antes que Young, que va antes que Robertson. Souza va antes que Xu y Togowa.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Robertson, Souza, Togowa, Vaughn, Xu y Young.', 'A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.', 'A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.', 'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.', 'A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.', 'Si a Togowa se le asigna una plaza de aparcamiento con un número más alto que la de Souza,', 'Conocemos el orden de 5 de los 6 empleados. Togowa va antes que Young, que va antes que Robertson. Souza va antes que Xu y Togowa.']\nnew_fact = infer_new_fact(selected) # 'No sabemos la posición de Vaughn. Con la información que tenemos hasta ahora, podemos establecer la siguiente fórmula: Souza > Xu o Togowa > Young > Robertson. Vaughn puede tener cualquiera de las plazas de aparcamiento siempre que no infrinja la fórmula dada.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Si a Togowa se le asigna una plaza de aparcamiento con un número más alto que la de Souza,', '¿cuál de las siguientes afirmaciones podría ser cierta?', 'B) A Vaughn se le asigna la plaza de aparcamiento #5.', 'No sabemos la posición de Vaughn. Con la información que tenemos hasta ahora, podemos establecer la siguiente fórmula: Souza > Xu o Togowa > Young > Robertson. Vaughn puede tener cualquiera de las plazas de aparcamiento siempre que no infrinja la fórmula dada.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta es B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta es B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_49_f8d1d00c99", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "options": ["Souza is assigned parking space #1.", "Young is assigned parking space #2.", "Vaughn is assigned parking space #3.", "Robertson is assigned parking space #4.", "Xu is assigned parking space #5."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [8], "consequent": 18}, {"antecedents": [7, 9], "consequent": 19}, {"antecedents": [10, 19], "consequent": 20}, {"antecedents": [0], "consequent": 21}, {"antecedents": [18, 19, 20, 21], "consequent": 22}, {"antecedents": [11, 12, 15, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent8 -> int1: Souza must be assigned to a lower numbered space than Xu.; sent7 & sent9 -> int2: Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R; int2 & sent10 -> int3: Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4.; sent0 -> int4: Vaughn has no restrictions on parking assignment.; int1 & int2 & int3 & int4 -> int5: So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X; int5 & sent11 & sent12 & sent15 -> int6: The answer has to be C.; int6 -> int7: The answer is C);", "textual_logical_units": {"1": "Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:", "2": "Robertson, Souza, Togowa, Vaughn, Xu y Young.", "3": "Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:", "4": "#1, #2, #3, #4, #5 o #6.", "5": "No se puede asignar la misma plaza de aparcamiento a dos empleados.", "6": "Las siguientes reglas rigen la asignación de plazas de aparcamiento:", "7": "A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.", "8": "A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.", "9": "A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.", "10": "A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.", "11": "¿La asignación de plazas de aparcamiento a cada uno de los nuevos empleados está definida", "12": "si cuál de las siguientes afirmaciones es cierta?", "13": "A) A Souza se le asigna la plaza de aparcamiento #1.", "14": "B) A Young se le asigna la plaza de aparcamiento #2.", "15": "C) A Vaughn se le asigna la plaza de aparcamiento #3.", "16": "D) A Robertson se le asigna la plaza de aparcamiento #4.", "17": "E) A Xu se le asigna la plaza de aparcamiento #5.", "18": "A Souza se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Xu.", "19": "A Togowa (T) se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Young (Y), a quien se le tiene que asignar una plaza con numeración inferior a la de Robertson (R): T < Y< R.", "20": "A Robertson sólo se le pueden asignar las plazas 1 a 4, pero, como al menos dos personas tienen que aparcar en las plazas con numeración más baja, sólo se le pueden asignar las plazas 3 y 4.", "21": "A Vaughn se le puede asignar cualquier plaza de aparcamiento.", "22": "De esta manera, si a Vaughn se le asigna la plaza 3, a Togowa se le tiene que asignar la plaza 1, la 2 a Young y la 4 a Robertson, y Souza y Xu tienen que ocupar las plazas 5 y 6, respectivamente: T Y V R S X.", "23": "La respuesta correcta tiene que ser C.", "24": "The answer is C)"}, "human_translated": true, "code_input": "####\nfacts = [ 'Un administrador tiene que asignar plazas de aparcamiento a seis nuevos empleados:',\n  'Robertson, Souza, Togowa, Vaughn, Xu y Young.',\n  'Se tiene que asignar una de las siguientes plazas de aparcamiento a cada uno de los seis empleados:',\n  '#1, #2, #3, #4, #5 o #6.',\n  'No se puede asignar la misma plaza de aparcamiento a dos empleados.',\n  'Las siguientes reglas rigen la asignación de plazas de aparcamiento:',\n  'A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.',\n  'A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.',\n  'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.',\n  'A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.',\n  '¿La asignación de plazas de aparcamiento a cada uno de los nuevos empleados está definida']\nquestion = 'si cuál de las siguientes afirmaciones es cierta?'\nchoices = { 'A': 'A Souza se le asigna la plaza de aparcamiento #1.',\n  'B': 'A Young se le asigna la plaza de aparcamiento #2.',\n  'C': 'A Vaughn se le asigna la plaza de aparcamiento #3.',\n  'D': 'A Robertson se le asigna la plaza de aparcamiento #4.',\n  'E': 'A Xu se le asigna la plaza de aparcamiento #5.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A Xu se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Souza.']\nnew_fact = infer_new_fact(selected) # 'A Souza se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Xu.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A Young se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Togowa.', 'A Robertson se le tiene que asignar una plaza de aparcamiento con un número mayor que la de Young.']\nnew_fact = infer_new_fact(selected) # 'A Togowa (T) se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Young (Y), a quien se le tiene que asignar una plaza con numeración inferior a la de Robertson (R): T < Y< R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A Robertson se le tiene que asignar la plaza de aparcamiento #1, #2, #3 o #4.', 'A Togowa (T) se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Young (Y), a quien se le tiene que asignar una plaza con numeración inferior a la de Robertson (R): T < Y< R.']\nnew_fact = infer_new_fact(selected) # 'A Robertson sólo se le pueden asignar las plazas 1 a 4, pero, como al menos dos personas tienen que aparcar en las plazas con numeración más baja, sólo se le pueden asignar las plazas\\xa03 y 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'A Vaughn se le puede asignar cualquier plaza de aparcamiento.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A Souza se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Xu.', 'A Togowa (T) se le tiene que asignar una plaza de aparcamiento con numeración inferior a la de Young (Y), a quien se le tiene que asignar una plaza con numeración inferior a la de Robertson (R): T < Y< R.', 'A Robertson sólo se le pueden asignar las plazas 1 a 4, pero, como al menos dos personas tienen que aparcar en las plazas con numeración más baja, sólo se le pueden asignar las plazas\\xa03 y 4.', 'A Vaughn se le puede asignar cualquier plaza de aparcamiento.']\nnew_fact = infer_new_fact(selected) # 'De esta manera, si a Vaughn se le asigna la plaza\\xa03, a Togowa se le tiene que asignar la plaza\\xa01, la 2 a Young y la 4 a Robertson, y Souza y Xu tienen que ocupar las plazas\\xa05 y 6, respectivamente: T Y V R S X.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['¿La asignación de plazas de aparcamiento a cada uno de los nuevos empleados está definida', 'si cuál de las siguientes afirmaciones es cierta?', 'C) A Vaughn se le asigna la plaza de aparcamiento #3.', 'De esta manera, si a Vaughn se le asigna la plaza\\xa03, a Togowa se le tiene que asignar la plaza\\xa01, la 2 a Young y la 4 a Robertson, y Souza y Xu tienen que ocupar las plazas\\xa05 y 6, respectivamente: T Y V R S X.']\nnew_fact = infer_new_fact(selected) # 'La respuesta correcta tiene que ser C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['La respuesta correcta tiene que ser C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
