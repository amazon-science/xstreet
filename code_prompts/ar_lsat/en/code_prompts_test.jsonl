{"id": "AR-LSAT_0_08192f129b", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "Which one of the following could be the schedule of the students' reports?", "options": ["Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle", "Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore", "Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving", "Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore", "Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George"], "rationale": "If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D. George can only give a report on Tuesday, so we rule out option E. Olivia and Robert cannot give afternoon reports, so we rule out option A and B. Answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "Which one of the following could be the schedule of the students' reports?", "15": "A) Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle", "16": "B) Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore", "17": "C) Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving", "18": "D) Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore", "19": "E) Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George", "20": "If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D.", "21": "George can only give a report on Tuesday, so we rule out option E.", "22": "Olivia and Robert cannot give afternoon reports, so we rule out option A and B.", "23": "Answer is C.", "24": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13, 18], "consequent": 20}, {"antecedents": [8, 19], "consequent": 21}, {"antecedents": [9, 15, 16], "consequent": 22}, {"antecedents": [14, 17, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\"]\nquestion = \"Which one of the following could be the schedule of the students' reports?\"\nchoices = { 'A': 'Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle',\n  'B': 'Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore',\n  'C': 'Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving',\n  'D': 'Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore',\n  'E': 'Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Nina gives a report,', 'then on the next day Helen and', 'Irving must both give reports,', \"unless Nina's report is given on Wednesday.\", 'D) Mon. morning: Nina; Mon. afternoon: Helen Tues. morning: Robert; Tues. afternoon: Irving Wed. morning: Olivia; Wed. afternoon: Lenore']\nnew_fact = infer_new_fact(selected) # 'If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Tuesday is the only day on which George can give a report.', 'E) Mon. morning: Olivia; Mon. afternoon: Nina Tues. morning: Irving; Tues. afternoon: Helen Wed. morning: Kyle; Wed. afternoon: George']\nnew_fact = infer_new_fact(selected) # 'George can only give a report on Tuesday, so we rule out option E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Olivia nor Robert can give an afternoon report.', 'A) Mon. morning: Helen; Mon. afternoon: Robert Tues. morning: Olivia; Tues. afternoon: Irving Wed. morning: Lenore; Wed. afternoon: Kyle', 'B) Mon. morning: Irving; Mon. afternoon: Olivia Tues. morning: Helen; Tues. afternoon: Kyle Wed. morning: Nina; Wed. afternoon: Lenore']\nnew_fact = infer_new_fact(selected) # 'Olivia and Robert cannot give afternoon reports, so we rule out option A and B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Which one of the following could be the schedule of the students' reports?\", 'C) Mon. morning: Lenore; Mon. afternoon: Helen Tues. morning: George; Tues. afternoon: Kyle Wed. morning: Robert; Wed. afternoon: Irving', 'If Nina gives a report on Monday or Tuesday, Helen and Irving have to give a report the next day, so we rule out option D.', 'George can only give a report on Tuesday, so we rule out option E.', 'Olivia and Robert cannot give afternoon reports, so we rule out option A and B.']\nnew_fact = infer_new_fact(selected) # 'Answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_1_765d8869dc", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "If Kyle and Lenore do not give reports, then the morning reports on Monday, Tuesday, and Wednesday, respectively, could be given by", "options": ["Helen, George, and Nina", "Irving, Robert, and Helen", "Nina, Helen, and Olivia", "Olivia, Robert, and Irving", "Robert, George, and Helen"], "rationale": "If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports. Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present. The answer is D. The answer is D)", "answer": "D", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "If Kyle and Lenore do not give reports,", "15": "then the morning reports on Monday, Tuesday, and Wednesday, respectively, could be given by", "16": "A) Helen, George, and Nina", "17": "B) Irving, Robert, and Helen", "18": "C) Nina, Helen, and Olivia", "19": "D) Olivia, Robert, and Irving", "20": "E) Robert, George, and Helen", "21": "If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports.", "22": "Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present.", "23": "The answer is D.", "24": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [2, 14], "consequent": 21}, {"antecedents": [9, 16, 17, 18, 20, 21], "consequent": 22}, {"antecedents": [14, 15, 19, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\",\n  'If Kyle and Lenore do not give reports,']\nquestion = 'then the morning reports on Monday, Tuesday, and Wednesday, respectively, could be given by'\nchoices = { 'A': 'Helen, George, and Nina',\n  'B': 'Irving, Robert, and Helen',\n  'C': 'Nina, Helen, and Olivia',\n  'D': 'Olivia, Robert, and Irving',\n  'E': 'Robert, George, and Helen'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—', 'If Kyle and Lenore do not give reports,']\nnew_fact = infer_new_fact(selected) # 'If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Olivia nor Robert can give an afternoon report.', 'A) Helen, George, and Nina', 'B) Irving, Robert, and Helen', 'C) Nina, Helen, and Olivia', 'E) Robert, George, and Helen', 'If Kyle (K) and Lenore (L) do not give reports, we will have George (G), Helen (H), Irving (I), Nina (N), Olivia (O), and Robert (R) giving reports.']\nnew_fact = infer_new_fact(selected) # 'Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Kyle and Lenore do not give reports,', 'then the morning reports on Monday, Tuesday, and Wednesday, respectively, could be given by', 'D) Olivia, Robert, and Irving', 'Olivia and Robert must give morning reports, so we rule out options A, B, C, and E where both are not present.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_2_291114c694", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "Which one of the following is a pair of students who, if they give reports on the same day as each other, must give reports on Wednesday?", "options": ["George and Lenore", "Helen and Nina", "Irving and Robert", "Kyle and Nina", "Olivia and Kyle"], "rationale": "If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day. If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving. The answer is B. The answer is B)", "answer": "B", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "Which one of the following is a pair of students who,", "15": "if they give reports on the same day as each other,", "16": "must give reports on Wednesday?", "17": "A) George and Lenore", "18": "B) Helen and Nina", "19": "C) Irving and Robert", "20": "D) Kyle and Nina", "21": "E) Olivia and Kyle", "22": "If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day.", "23": "If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving.", "24": "The answer is B.", "25": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 12, 13], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [14, 15, 18, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\",\n  'Which one of the following is a pair of students who,',\n  'if they give reports on the same day as each other,']\nquestion = 'must give reports on Wednesday?'\nchoices = {'A': 'George and Lenore', 'B': 'Helen and Nina', 'C': 'Irving and Robert', 'D': 'Kyle and Nina', 'E': 'Olivia and Kyle'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Nina gives a report,', 'then on the next day Helen and', 'Irving must both give reports,', \"unless Nina's report is given on Wednesday.\"]\nnew_fact = infer_new_fact(selected) # 'If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Nina presents a report on Monday and Tuesday, then Helen and Irving must present on the next day.']\nnew_fact = infer_new_fact(selected) # \"If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following is a pair of students who,', 'if they give reports on the same day as each other,', 'B) Helen and Nina', \"If and only if Nina's report is on Wednesday, then she can present on the same day as Helen or Irving.\"]\nnew_fact = infer_new_fact(selected) # 'The answer is B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_3_3d59347ca7", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "If George, Nina, and Robert give reports and they do so on different days from one another, which one of the following could be true?", "options": ["Helen gives a report on Wednesday.", "Nina gives a report on Monday.", "Nina gives a report on Tuesday.", "Olivia gives a report on Monday.", "Robert gives a report on Wednesday."], "rationale": "George can only give a report on Tuesday. Since Helen and Irving must give a report on the day after Nina gives a report, Nina cannot give a report on Monday since Tuesday will have 1 slot occupied. Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C. Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E. Olivia and Robert can only present in the morning, so Robert presents Monday morning Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "If George, Nina, and Robert give reports and", "15": "they do so on different days from one another,", "16": "which one of the following could be true?", "17": "A) Helen gives a report on Wednesday.", "18": "B) Nina gives a report on Monday.", "19": "C) Nina gives a report on Tuesday.", "20": "D) Olivia gives a report on Monday.", "21": "E) Robert gives a report on Wednesday.", "22": "George can only give a report on Tuesday.", "23": "Since Helen and Irving must give a report on the day after Nina gives a report,", "24": "Nina cannot give a report on Monday since Tuesday will have 1 slot occupied.", "25": "Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.", "26": "Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.", "27": "Olivia and Robert can only present in the morning, so Robert presents Monday morning", "28": "Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D.", "29": "The answer is A.", "30": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [8, 14], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [14, 22, 23], "consequent": 24}, {"antecedents": [14, 15, 18, 19, 22, 24], "consequent": 25}, {"antecedents": [14, 15, 21, 22, 25], "consequent": 26}, {"antecedents": [9, 26], "consequent": 27}, {"antecedents": [20, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 17, 25, 26, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\",\n  'If George, Nina, and Robert give reports and',\n  'they do so on different days from one another,']\nquestion = 'which one of the following could be true?'\nchoices = { 'A': 'Helen gives a report on Wednesday.',\n  'B': 'Nina gives a report on Monday.',\n  'C': 'Nina gives a report on Tuesday.',\n  'D': 'Olivia gives a report on Monday.',\n  'E': 'Robert gives a report on Wednesday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Tuesday is the only day on which George can give a report.', 'If George, Nina, and Robert give reports and']\nnew_fact = infer_new_fact(selected) # 'George can only give a report on Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Nina gives a report,', 'then on the next day Helen and', 'Irving must both give reports,']\nnew_fact = infer_new_fact(selected) # 'Since Helen and Irving must give a report on the day after Nina gives a report,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If George, Nina, and Robert give reports and', 'George can only give a report on Tuesday.', 'Since Helen and Irving must give a report on the day after Nina gives a report,']\nnew_fact = infer_new_fact(selected) # 'Nina cannot give a report on Monday since Tuesday will have 1 slot occupied.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If George, Nina, and Robert give reports and', 'they do so on different days from one another,', 'B) Nina gives a report on Monday.', 'C) Nina gives a report on Tuesday.', 'George can only give a report on Tuesday.', 'Nina cannot give a report on Monday since Tuesday will have 1 slot occupied.']\nnew_fact = infer_new_fact(selected) # 'Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If George, Nina, and Robert give reports and', 'they do so on different days from one another,', 'E) Robert gives a report on Wednesday.', 'George can only give a report on Tuesday.', 'Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.']\nnew_fact = infer_new_fact(selected) # 'Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Olivia nor Robert can give an afternoon report.', 'Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.']\nnew_fact = infer_new_fact(selected) # 'Olivia and Robert can only present in the morning, so Robert presents Monday morning'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Olivia gives a report on Monday.', 'Olivia and Robert can only present in the morning, so Robert presents Monday morning']\nnew_fact = infer_new_fact(selected) # 'Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If George, Nina, and Robert give reports and', 'they do so on different days from one another,', 'which one of the following could be true?', 'A) Helen gives a report on Wednesday.', 'Nina must present on Wednesday since she must present on a different day from George, so we rule out options B and C.', 'Robert must present on Monday since he must present on a different day from George and Nina, so we rule out option E.', 'Since the Monday morning slot is already occupied, Olivia cannot present on Monday at all, so we rule out option D.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_4_5740a46512", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "If Kyle gives the afternoon report on Tuesday, and Helen gives the afternoon report on Wednesday, which one of the following could be the list of the students who give the morning reports on Monday, Tuesday, and Wednesday, respectively?", "options": ["Irving, Lenore, and Nina", "Lenore, George, and Irving", "Nina, Irving, and Lenore", "Robert, George, and Irving", "Robert, Irving, and Lenore"], "rationale": "We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report. If Nina presents on Monday, then Helen and Irving must present on Tuesday. We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday. George cannot present on Monday or Tuesday. If Olivia and Robert present, they can only present in the morning. So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can. Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot. The answer is D. The answer is D)", "answer": "D", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "If Kyle gives the afternoon report on Tuesday,", "15": "and Helen gives the afternoon report on Wednesday,", "16": "which one of the following could be the list of the students who give the morning reports on Monday, Tuesday, and Wednesday, respectively?", "17": "A) Irving, Lenore, and Nina", "18": "B) Lenore, George, and Irving", "19": "C) Nina, Irving, and Lenore", "20": "D) Robert, George, and Irving", "21": "E) Robert, Irving, and Lenore", "22": "We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.", "23": "If Nina presents on Monday, then Helen and Irving must present on Tuesday.", "24": "We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday.", "25": "George cannot present on Monday or Tuesday.", "26": "If Olivia and Robert present, they can only present in the morning.", "27": "So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can.", "28": "Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot.", "29": "The answer is D.", "30": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [14, 15], "consequent": 22}, {"antecedents": [10, 11, 12], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [8], "consequent": 25}, {"antecedents": [9], "consequent": 26}, {"antecedents": [22, 24, 25, 26], "consequent": 27}, {"antecedents": [16, 27], "consequent": 28}, {"antecedents": [14, 15, 16, 20, 28], "consequent": 29}, {"antecedents": [29], "consequent": 30}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\",\n  'If Kyle gives the afternoon report on Tuesday,',\n  'and Helen gives the afternoon report on Wednesday,']\nquestion = 'which one of the following could be the list of the students who give the morning reports on Monday, Tuesday, and Wednesday, respectively?'\nchoices = { 'A': 'Irving, Lenore, and Nina',\n  'B': 'Lenore, George, and Irving',\n  'C': 'Nina, Irving, and Lenore',\n  'D': 'Robert, George, and Irving',\n  'E': 'Robert, Irving, and Lenore'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Kyle gives the afternoon report on Tuesday,', 'and Helen gives the afternoon report on Wednesday,']\nnew_fact = infer_new_fact(selected) # 'We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Nina gives a report,', 'then on the next day Helen and', 'Irving must both give reports,']\nnew_fact = infer_new_fact(selected) # 'If Nina presents on Monday, then Helen and Irving must present on Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.', 'If Nina presents on Monday, then Helen and Irving must present on Tuesday.']\nnew_fact = infer_new_fact(selected) # 'We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Tuesday is the only day on which George can give a report.']\nnew_fact = infer_new_fact(selected) # 'George cannot present on Monday or Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Olivia nor Robert can give an afternoon report.']\nnew_fact = infer_new_fact(selected) # 'If Olivia and Robert present, they can only present in the morning.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We know Kyle gives the Tuesday afternoon report and Helen gives the Wednesday afternoon report.', 'We know that Helen presents on Wednesday and 1 Tuesday slot is already occupied by Kyle, so Nina cannot present on Monday.', 'George cannot present on Monday or Tuesday.', 'If Olivia and Robert present, they can only present in the morning.']\nnew_fact = infer_new_fact(selected) # 'So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which one of the following could be the list of the students who give the morning reports on Monday, Tuesday, and Wednesday, respectively?', 'So for the Monday afternoon slot, we know Kyle, Helen, Nina, George, Olivia, and Robert cannot present so only Lenore or Irving can.']\nnew_fact = infer_new_fact(selected) # 'Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Kyle gives the afternoon report on Tuesday,', 'and Helen gives the afternoon report on Wednesday,', 'which one of the following could be the list of the students who give the morning reports on Monday, Tuesday, and Wednesday, respectively?', 'D) Robert, George, and Irving', 'Thus, the morning reports can only be given by a combination of students that does not include both Lenore and Irving since one of them must fill the Monday afternoon slot.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_5_bd579d212a", "context": "Of the eight students—George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—in a seminar, exactly six will give individual oral reports during three consecutive days—Monday, Tuesday, and Wednesday. Exactly two reports will be given each day—one in the morning and one in the afternoon—according to the following conditions: Tuesday is the only day on which George can give a report. Neither Olivia nor Robert can give an afternoon report. If Nina gives a report, then on the next day Helen and Irving must both give reports, unless Nina's report is given on Wednesday.", "question": "If Helen, Kyle, and Lenore, not necessarily in that order, give the three morning reports, which one of the following must be true?", "options": ["Helen gives a report on Monday.", "Irving gives a report on Monday.", "Irving gives a report on Wednesday.", "Kyle gives a report on Tuesday.", "Kyle gives a report on Wednesday."], "rationale": "Helen (H), Kyle (K), and Lenore (L) present the morning reports. Olivia (O) and Robert (R) can only give morning reports. Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports. Irving (I), George (G), and Nina (N) must give the afternoon reports George can only present on Tuesday, so he presents on Tuesday afternoon. If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday. We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report. Irving must give the Monday afternoon report since all the other days are occupied. The answer is B. The answer is B)", "answer": "B", "textual_logical_units": {"1": "Of the eight students—", "2": "George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—", "3": "in a seminar, exactly six will give individual oral reports during three consecutive days—", "4": "Monday, Tuesday, and Wednesday.", "5": "Exactly two reports will be given each day—", "6": "one in the morning and one in the afternoon—", "7": "according to the following conditions:", "8": "Tuesday is the only day on which George can give a report.", "9": "Neither Olivia nor Robert can give an afternoon report.", "10": "If Nina gives a report,", "11": "then on the next day Helen and", "12": "Irving must both give reports,", "13": "unless Nina's report is given on Wednesday.", "14": "If Helen, Kyle, and Lenore,", "15": "not necessarily in that order,", "16": "give the three morning reports,", "17": "which one of the following must be true?", "18": "A) Helen gives a report on Monday.", "19": "B) Irving gives a report on Monday.", "20": "C) Irving gives a report on Wednesday.", "21": "D) Kyle gives a report on Tuesday.", "22": "E) Kyle gives a report on Wednesday.", "23": "Helen (H), Kyle (K), and Lenore (L) present the morning reports.", "24": "Olivia (O) and Robert (R) can only give morning reports.", "25": "Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports.", "26": "Irving (I), George (G), and Nina (N) must give the afternoon reports", "27": "George can only present on Tuesday, so he presents on Tuesday afternoon.", "28": "If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday.", "29": "We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report.", "30": "Irving must give the Monday afternoon report since all the other days are occupied.", "31": "The answer is B.", "32": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [14, 15, 16], "consequent": 23}, {"antecedents": [9], "consequent": 24}, {"antecedents": [23, 24], "consequent": 25}, {"antecedents": [2, 25], "consequent": 26}, {"antecedents": [8, 26], "consequent": 27}, {"antecedents": [10, 11, 12, 26], "consequent": 28}, {"antecedents": [27, 28], "consequent": 29}, {"antecedents": [27, 29], "consequent": 30}, {"antecedents": [14, 15, 16, 17, 19, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "code_input": "####\nfacts = [ 'Of the eight students—',\n  'George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—',\n  'in a seminar, exactly six will give individual oral reports during three consecutive days—',\n  'Monday, Tuesday, and Wednesday.',\n  'Exactly two reports will be given each day—',\n  'one in the morning and one in the afternoon—',\n  'according to the following conditions:',\n  'Tuesday is the only day on which George can give a report.',\n  'Neither Olivia nor Robert can give an afternoon report.',\n  'If Nina gives a report,',\n  'then on the next day Helen and',\n  'Irving must both give reports,',\n  \"unless Nina's report is given on Wednesday.\",\n  'If Helen, Kyle, and Lenore,',\n  'not necessarily in that order,',\n  'give the three morning reports,']\nquestion = 'which one of the following must be true?'\nchoices = { 'A': 'Helen gives a report on Monday.',\n  'B': 'Irving gives a report on Monday.',\n  'C': 'Irving gives a report on Wednesday.',\n  'D': 'Kyle gives a report on Tuesday.',\n  'E': 'Kyle gives a report on Wednesday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Helen, Kyle, and Lenore,', 'not necessarily in that order,', 'give the three morning reports,']\nnew_fact = infer_new_fact(selected) # 'Helen (H), Kyle (K), and Lenore (L) present the morning reports.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Olivia nor Robert can give an afternoon report.']\nnew_fact = infer_new_fact(selected) # 'Olivia (O) and Robert (R) can only give morning reports.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Helen (H), Kyle (K), and Lenore (L) present the morning reports.', 'Olivia (O) and Robert (R) can only give morning reports.']\nnew_fact = infer_new_fact(selected) # 'Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['George, Helen, Irving, Kyle, Lenore, Nina, Olivia, and Robert—', 'Because H, K, and L are already filling the morning slots, then O, R, H, K, and L can never be used for the afternoon reports.']\nnew_fact = infer_new_fact(selected) # 'Irving (I), George (G), and Nina (N) must give the afternoon reports'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Tuesday is the only day on which George can give a report.', 'Irving (I), George (G), and Nina (N) must give the afternoon reports']\nnew_fact = infer_new_fact(selected) # 'George can only present on Tuesday, so he presents on Tuesday afternoon.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Nina gives a report,', 'then on the next day Helen and', 'Irving must both give reports,', 'Irving (I), George (G), and Nina (N) must give the afternoon reports']\nnew_fact = infer_new_fact(selected) # 'If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['George can only present on Tuesday, so he presents on Tuesday afternoon.', 'If Nina gives a report on Monday, Irving and Helen must give a report on Tuesday.']\nnew_fact = infer_new_fact(selected) # 'We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['George can only present on Tuesday, so he presents on Tuesday afternoon.', 'We know George and one of Helen, Kyle, or Lenore present on Tuesday, so Nina must give the Wednesday afternoon report.']\nnew_fact = infer_new_fact(selected) # 'Irving must give the Monday afternoon report since all the other days are occupied.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Helen, Kyle, and Lenore,', 'not necessarily in that order,', 'give the three morning reports,', 'which one of the following must be true?', 'B) Irving gives a report on Monday.', 'Irving must give the Monday afternoon report since all the other days are occupied.']\nnew_fact = infer_new_fact(selected) # 'The answer is B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_6_f738be1d3d", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "question": "Which one of the following could be the organizer's selection of works?", "options": ["one French novel, two Russian novels, one French play, one Russian play", "two French novels, one Russian novel, two French plays, one Russian play", "two French novels, two Russian novels, two French plays", "three French novels, one Russian novel, two French plays", "three French novels, two Russian novels, one Russian play"], "rationale": "If both French plays are selected, then the Russian play is not selected. B is not an answer. At least as many French novels as Russian novels should be selected. A is not an answer No more than four French works may be selected. D is not an answer No more than four novels may be selected. E is not an answer The answer is C The answer is C)", "answer": "C", "textual_logical_units": {"1": "The organizer of a reading club will select at least five and", "2": "at most six works from a group of nine works.", "3": "The group consists of three French novels, three Russian novels, two French plays, and one Russian play.", "4": "The organizer's selection of works must conform to the following requirements:", "5": "No more than four French works are selected.", "6": "At least three but no more than four novels are selected.", "7": "At least as many French novels as Russian novels are selected.", "8": "If both French plays are selected,", "9": "then the Russian play is not selected.", "10": "Which one of the following could be the organizer's selection of works?", "11": "A) one French novel, two Russian novels, one French play, one Russian play", "12": "B) two French novels, one Russian novel, two French plays, one Russian play", "13": "C) two French novels, two Russian novels, two French plays", "14": "D) three French novels, one Russian novel, two French plays", "15": "E) three French novels, two Russian novels, one Russian play", "16": "If both French plays are selected, then the Russian play is not selected. B is not an answer.", "17": "At least as many French novels as Russian novels should be selected. A is not an answer", "18": "No more than four French works may be selected. D is not an answer", "19": "No more than four novels may be selected. E is not an answer", "20": "The answer is C", "21": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [8, 9, 12], "consequent": 16}, {"antecedents": [7, 11], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [6, 15], "consequent": 19}, {"antecedents": [10, 13, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'The organizer of a reading club will select at least five and',\n  'at most six works from a group of nine works.',\n  'The group consists of three French novels, three Russian novels, two French plays, and one Russian play.',\n  \"The organizer's selection of works must conform to the following requirements:\",\n  'No more than four French works are selected.',\n  'At least three but no more than four novels are selected.',\n  'At least as many French novels as Russian novels are selected.',\n  'If both French plays are selected,',\n  'then the Russian play is not selected.']\nquestion = \"Which one of the following could be the organizer's selection of works?\"\nchoices = { 'A': 'one French novel, two Russian novels, one French play, one Russian play',\n  'B': 'two French novels, one Russian novel, two French plays, one Russian play',\n  'C': 'two French novels, two Russian novels, two French plays',\n  'D': 'three French novels, one Russian novel, two French plays',\n  'E': 'three French novels, two Russian novels, one Russian play'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If both French plays are selected,', 'then the Russian play is not selected.', 'B) two French novels, one Russian novel, two French plays, one Russian play']\nnew_fact = infer_new_fact(selected) # 'If both French plays are selected, then the Russian play is not selected. B is not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least as many French novels as Russian novels are selected.', 'A) one French novel, two Russian novels, one French play, one Russian play']\nnew_fact = infer_new_fact(selected) # 'At least as many French novels as Russian novels should be selected. A is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No more than four French works are selected.', 'E) three French novels, two Russian novels, one Russian play']\nnew_fact = infer_new_fact(selected) # 'No more than four French works may be selected. D is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least three but no more than four novels are selected.', 'E) three French novels, two Russian novels, one Russian play']\nnew_fact = infer_new_fact(selected) # 'No more than four novels may be selected. E is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Which one of the following could be the organizer's selection of works?\", 'C) two French novels, two Russian novels, two French plays', 'If both French plays are selected, then the Russian play is not selected. B is not an answer.', 'At least as many French novels as Russian novels should be selected. A is not an answer', 'No more than four French works may be selected. D is not an answer', 'No more than four novels may be selected. E is not an answer']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_7_ae526b34c8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "question": "Which one of the following could be true about the organizer's selection of works?", "options": ["No Russian novels are selected.", "Exactly one French novel is selected.", "All three plays are selected.", "All three Russian novels are selected.", "All five French works are selected."], "rationale": "If the French plays are selected, no plays may be selected. C is not an anwer At least as many French novels as Russian ones may be selected. D is not an answer At most, four French works may be selected. E is not an answer More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "The organizer of a reading club will select at least five and", "2": "at most six works from a group of nine works.", "3": "The group consists of three French novels, three Russian novels, two French plays, and one Russian play.", "4": "The organizer's selection of works must conform to the following requirements:", "5": "No more than four French works are selected.", "6": "At least three but no more than four novels are selected.", "7": "At least as many French novels as Russian novels are selected.", "8": "If both French plays are selected,", "9": "then the Russian play is not selected.", "10": "Which one of the following could be true about the organizer's selection of works?", "11": "A) No Russian novels are selected.", "12": "B) Exactly one French novel is selected.", "13": "C) All three plays are selected.", "14": "D) All three Russian novels are selected.", "15": "E) All five French works are selected.", "16": "If the French plays are selected, no plays may be selected. C is not an anwer", "17": "At least as many French novels as Russian ones may be selected. D is not an answer", "18": "At most, four French works may be selected. E is not an answer", "19": "More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer.", "20": "The answer is A.", "21": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [8, 9, 13], "consequent": 16}, {"antecedents": [6, 7, 14], "consequent": 17}, {"antecedents": [5, 15], "consequent": 18}, {"antecedents": [1, 2, 7, 8, 9], "consequent": 19}, {"antecedents": [10, 11, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'The organizer of a reading club will select at least five and',\n  'at most six works from a group of nine works.',\n  'The group consists of three French novels, three Russian novels, two French plays, and one Russian play.',\n  \"The organizer's selection of works must conform to the following requirements:\",\n  'No more than four French works are selected.',\n  'At least three but no more than four novels are selected.',\n  'At least as many French novels as Russian novels are selected.',\n  'If both French plays are selected,',\n  'then the Russian play is not selected.']\nquestion = \"Which one of the following could be true about the organizer's selection of works?\"\nchoices = { 'A': 'No Russian novels are selected.',\n  'B': 'Exactly one French novel is selected.',\n  'C': 'All three plays are selected.',\n  'D': 'All three Russian novels are selected.',\n  'E': 'All five French works are selected.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If both French plays are selected,', 'then the Russian play is not selected.', 'C) All three plays are selected.']\nnew_fact = infer_new_fact(selected) # 'If the French plays are selected, no plays may be selected. C is not an anwer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least three but no more than four novels are selected.', 'At least as many French novels as Russian novels are selected.', 'D) All three Russian novels are selected.']\nnew_fact = infer_new_fact(selected) # 'At least as many French novels as Russian ones may be selected. D is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No more than four French works are selected.', 'E) All five French works are selected.']\nnew_fact = infer_new_fact(selected) # 'At most, four French works may be selected. E is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The organizer of a reading club will select at least five and', 'at most six works from a group of nine works.', 'At least as many French novels as Russian novels are selected.', 'If both French plays are selected,', 'then the Russian play is not selected.']\nnew_fact = infer_new_fact(selected) # 'More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Which one of the following could be true about the organizer's selection of works?\", 'A) No Russian novels are selected.', 'If the French plays are selected, no plays may be selected. C is not an anwer', 'At least as many French novels as Russian ones may be selected. D is not an answer', 'At most, four French works may be selected. E is not an answer', 'More Russian novels than French ones may not be selected, and once the French plays have been selected, the Russian one cannot be selected. Not enough works are available for the reading group with B as the answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_8_a884112958", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "question": "If the works selected include three French novels, which one of the following could be a complete and accurate list of the remaining works selected?", "options": ["one Russian novel", "two French plays", "one Russian novel, one Russian play", "one Russian novel, two French plays", "two Russian novels, one French play"], "rationale": "No more than four French works may be selected. B and D are not answers No more than four novels may be selected. E is not an answer A complete list should include all types of works. A is not an answer/ The answer is C The answer is C)", "answer": "C", "textual_logical_units": {"1": "The organizer of a reading club will select at least five and", "2": "at most six works from a group of nine works.", "3": "The group consists of three French novels, three Russian novels, two French plays, and one Russian play.", "4": "The organizer's selection of works must conform to the following requirements:", "5": "No more than four French works are selected.", "6": "At least three but no more than four novels are selected.", "7": "At least as many French novels as Russian novels are selected.", "8": "If both French plays are selected,", "9": "then the Russian play is not selected.", "10": "If the works selected include three French novels,", "11": "which one of the following could be a complete and", "12": "accurate list of the remaining works selected?", "13": "A) one Russian novel", "14": "B) two French plays", "15": "C) one Russian novel, one Russian play", "16": "D) one Russian novel, two French plays", "17": "E) two Russian novels, one French play", "18": "No more than four French works may be selected. B and D are not answers", "19": "No more than four novels may be selected. E is not an answer", "20": "A complete list should include all types of works. A is not an answer/", "21": "The answer is C", "22": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [5, 10, 14, 16], "consequent": 18}, {"antecedents": [6, 10, 17], "consequent": 19}, {"antecedents": [3, 11, 12, 13], "consequent": 20}, {"antecedents": [10, 11, 12, 15, 18, 19, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "code_input": "####\nfacts = [ 'The organizer of a reading club will select at least five and',\n  'at most six works from a group of nine works.',\n  'The group consists of three French novels, three Russian novels, two French plays, and one Russian play.',\n  \"The organizer's selection of works must conform to the following requirements:\",\n  'No more than four French works are selected.',\n  'At least three but no more than four novels are selected.',\n  'At least as many French novels as Russian novels are selected.',\n  'If both French plays are selected,',\n  'then the Russian play is not selected.',\n  'If the works selected include three French novels,',\n  'which one of the following could be a complete and']\nquestion = 'accurate list of the remaining works selected?'\nchoices = { 'A': 'one Russian novel',\n  'B': 'two French plays',\n  'C': 'one Russian novel, one Russian play',\n  'D': 'one Russian novel, two French plays',\n  'E': 'two Russian novels, one French play'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No more than four French works are selected.', 'If the works selected include three French novels,', 'B) two French plays', 'D) one Russian novel, two French plays']\nnew_fact = infer_new_fact(selected) # 'No more than four French works may be selected. B and D are not answers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least three but no more than four novels are selected.', 'If the works selected include three French novels,', 'E) two Russian novels, one French play']\nnew_fact = infer_new_fact(selected) # 'No more than four novels may be selected. E is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The group consists of three French novels, three Russian novels, two French plays, and one Russian play.', 'which one of the following could be a complete and', 'accurate list of the remaining works selected?', 'A) one Russian novel']\nnew_fact = infer_new_fact(selected) # 'A complete list should include all types of works. A is not an answer/'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the works selected include three French novels,', 'which one of the following could be a complete and', 'accurate list of the remaining works selected?', 'C) one Russian novel, one Russian play', 'No more than four French works may be selected. B and D are not answers', 'No more than four novels may be selected. E is not an answer', 'A complete list should include all types of works. A is not an answer/']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_9_aab53466b8", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "question": "The organizer must at least select", "options": ["one French novel and one French play", "one French novel and one Russian play", "one Russian novel and one French play", "two French novels", "two Russian novels"], "rationale": "The organizer must select at least five works At least as many French novels are Russian ones may be selected The less restrictive option is at least two French novels, since one can choose either one or two Russian novels, and a play or two. With two Russian novels, one must select two French ones. The answer is D The answer is D)", "answer": "D", "textual_logical_units": {"1": "The organizer of a reading club will select at least five and", "2": "at most six works from a group of nine works.", "3": "The group consists of three French novels, three Russian novels, two French plays, and one Russian play.", "4": "The organizer's selection of works must conform to the following requirements:", "5": "No more than four French works are selected.", "6": "At least three but no more than four novels are selected.", "7": "At least as many French novels as Russian novels are selected.", "8": "If both French plays are selected,", "9": "then the Russian play is not selected.", "10": "The organizer must at least select", "11": "A) one French novel and one French play", "12": "B) one French novel and one Russian play", "13": "C) one Russian novel and one French play", "14": "D) two French novels", "15": "E) two Russian novels", "16": "The organizer must select at least five works", "17": "At least as many French novels are Russian ones may be selected", "18": "The less restrictive option is at least two French novels, since one can choose either one or two Russian novels, and a play or two.", "19": "With two Russian novels, one must select two French ones.", "20": "The answer is D", "21": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [5, 6, 8, 9, 16, 17], "consequent": 18}, {"antecedents": [17], "consequent": 19}, {"antecedents": [10, 14, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'The organizer of a reading club will select at least five and',\n  'at most six works from a group of nine works.',\n  'The group consists of three French novels, three Russian novels, two French plays, and one Russian play.',\n  \"The organizer's selection of works must conform to the following requirements:\",\n  'No more than four French works are selected.',\n  'At least three but no more than four novels are selected.',\n  'At least as many French novels as Russian novels are selected.',\n  'If both French plays are selected,',\n  'then the Russian play is not selected.']\nquestion = 'The organizer must at least select'\nchoices = { 'A': 'one French novel and one French play',\n  'B': 'one French novel and one Russian play',\n  'C': 'one Russian novel and one French play',\n  'D': 'two French novels',\n  'E': 'two Russian novels'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The organizer of a reading club will select at least five and']\nnew_fact = infer_new_fact(selected) # 'The organizer must select at least five works'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least as many French novels as Russian novels are selected.']\nnew_fact = infer_new_fact(selected) # 'At least as many French novels are Russian ones may be selected'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No more than four French works are selected.', 'At least three but no more than four novels are selected.', 'If both French plays are selected,', 'then the Russian play is not selected.', 'The organizer must select at least five works', 'At least as many French novels are Russian ones may be selected']\nnew_fact = infer_new_fact(selected) # 'The less restrictive option is at least two French novels, since one can choose either one or two Russian novels, and a play or two.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least as many French novels are Russian ones may be selected']\nnew_fact = infer_new_fact(selected) # 'With two Russian novels, one must select two French ones.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The organizer must at least select', 'D) two French novels', 'D) two French novels', 'With two Russian novels, one must select two French ones.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_10_c6851062fd", "context": "The organizer of a reading club will select at least five and at most six works from a group of nine works. The group consists of three French novels, three Russian novels, two French plays, and one Russian play. The organizer's selection of works must conform to the following requirements: No more than four French works are selected. At least three but no more than four novels are selected. At least as many French novels as Russian novels are selected. If both French plays are selected, then the Russian play is not selected.", "question": "Any one of the following could be true about the organizer's selections of works EXCEPT:", "options": ["No Russian novels and exactly one play are selected.", "Exactly one Russian novel and both French plays are selected.", "Exactly two French novels and the Russian play are selected.", "Exactly two French novels and exactly two plays are selected.", "Exactly two Russian novels and exactly one play are selected."], "rationale": "At least five works may be selected. Three French novels and a play are not enough The answer is A The answer is A)", "answer": "A", "textual_logical_units": {"1": "The organizer of a reading club will select at least five and", "2": "at most six works from a group of nine works.", "3": "The group consists of three French novels, three Russian novels, two French plays, and one Russian play.", "4": "The organizer's selection of works must conform to the following requirements:", "5": "No more than four French works are selected.", "6": "At least three but no more than four novels are selected.", "7": "At least as many French novels as Russian novels are selected.", "8": "If both French plays are selected,", "9": "then the Russian play is not selected.", "10": "Any one of the following could be true about the organizer's selections of works EXCEPT:", "11": "A) No Russian novels and exactly one play are selected.", "12": "B) Exactly one Russian novel and both French plays are selected.", "13": "C) Exactly two French novels and the Russian play are selected.", "14": "D) Exactly two French novels and exactly two plays are selected.", "15": "E) Exactly two Russian novels and exactly one play are selected.", "16": "At least five works may be selected. Three French novels and a play are not enough", "17": "The answer is A", "18": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 16}, {"antecedents": [10, 11, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'The organizer of a reading club will select at least five and',\n  'at most six works from a group of nine works.',\n  'The group consists of three French novels, three Russian novels, two French plays, and one Russian play.',\n  \"The organizer's selection of works must conform to the following requirements:\",\n  'No more than four French works are selected.',\n  'At least three but no more than four novels are selected.',\n  'At least as many French novels as Russian novels are selected.',\n  'If both French plays are selected,',\n  'then the Russian play is not selected.']\nquestion = \"Any one of the following could be true about the organizer's selections of works EXCEPT:\"\nchoices = { 'A': 'No Russian novels and exactly one play are selected.',\n  'B': 'Exactly one Russian novel and both French plays are selected.',\n  'C': 'Exactly two French novels and the Russian play are selected.',\n  'D': 'Exactly two French novels and exactly two plays are selected.',\n  'E': 'Exactly two Russian novels and exactly one play are selected.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The organizer of a reading club will select at least five and']\nnew_fact = infer_new_fact(selected) # 'At least five works may be selected. Three French novels and a play are not enough'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Any one of the following could be true about the organizer's selections of works EXCEPT:\", 'A) No Russian novels and exactly one play are selected.', 'At least five works may be selected. Three French novels and a play are not enough']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_11_ff498a5655", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "Which one of the following lists the compositions in an order in which they could be performed during the concert, from first through eighth?", "options": ["L, P, S, R, O, T, F, H", "O, T, P, F, S, H, R, L", "P, T, F, S, L, R, O, H", "P, T, F, S, O, R, L, H", "T, F, P, R, O, L, S, H"], "rationale": "O must be performed first or fifth, so we rule out option C. 2 compositions must be performed between F and R, so we rule out option E. At least one composition must be performed between S and O, so we rule out option D. T must be performed either immediately before F or immediately after R, so we rule out option B. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "Which one of the following lists the compositions in an order in which they could be performed during the concert, from first through eighth?", "13": "A) L, P, S, R, O, T, F, H", "14": "B) O, T, P, F, S, H, R, L", "15": "C) P, T, F, S, L, R, O, H", "16": "D) P, T, F, S, O, R, L, H", "17": "E) T, F, P, R, O, L, S, H", "18": "O must be performed first or fifth, so we rule out option C.", "19": "2 compositions must be performed between F and R, so we rule out option E.", "20": "At least one composition must be performed between S and O, so we rule out option D.", "21": "T must be performed either immediately before F or immediately after R, so we rule out option B.", "22": "The answer is A.", "23": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [8, 15], "consequent": 18}, {"antecedents": [7, 17], "consequent": 19}, {"antecedents": [11, 16], "consequent": 20}, {"antecedents": [6, 14], "consequent": 21}, {"antecedents": [12, 13, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.']\nquestion = 'Which one of the following lists the compositions in an order in which they could be performed during the concert, from first through eighth?'\nchoices = {'A': 'L, P, S, R, O, T, F, H', 'B': 'O, T, P, F, S, H, R, L', 'C': 'P, T, F, S, L, R, O, H', 'D': 'P, T, F, S, O, R, L, H', 'E': 'T, F, P, R, O, L, S, H'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O is performed either first or fifth.', 'C) P, T, F, S, L, R, O, H']\nnew_fact = infer_new_fact(selected) # 'O must be performed first or fifth, so we rule out option C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least two compositions are performed either after F and before R, or after R and before F.', 'E) T, F, P, R, O, L, S, H']\nnew_fact = infer_new_fact(selected) # '2 compositions must be performed between F and R, so we rule out option E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least one composition is performed either after O and before S, or after S and before O.', 'D) P, T, F, S, O, R, L, H']\nnew_fact = infer_new_fact(selected) # 'At least one composition must be performed between S and O, so we rule out option D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T is performed either immediately before F or immediately after R.', 'B) O, T, P, F, S, H, R, L']\nnew_fact = infer_new_fact(selected) # 'T must be performed either immediately before F or immediately after R, so we rule out option B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following lists the compositions in an order in which they could be performed during the concert, from first through eighth?', 'A) L, P, S, R, O, T, F, H', 'O must be performed first or fifth, so we rule out option C.', '2 compositions must be performed between F and R, so we rule out option E.', 'At least one composition must be performed between S and O, so we rule out option D.', 'T must be performed either immediately before F or immediately after R, so we rule out option B.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_12_04806d651e", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "P CANNOT be performed", "options": ["second", "third", "fourth", "sixth", "seventh"], "rationale": "P must be performed before S. Slot 8 is already occupied, either by L or H (and only L or H). Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7. The answer is 7. The answer is E)", "answer": "E", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "P CANNOT be performed", "13": "A) second", "14": "B) third", "15": "C) fourth", "16": "D) sixth", "17": "E) seventh", "18": "P must be performed before S.", "19": "Slot 8 is already occupied, either by L or H (and only L or H).", "20": "Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7.", "21": "The answer is 7.", "22": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [10], "consequent": 18}, {"antecedents": [9], "consequent": 19}, {"antecedents": [1, 2, 3, 4, 18, 19], "consequent": 20}, {"antecedents": [12, 17, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.']\nquestion = 'P CANNOT be performed'\nchoices = {'A': 'second', 'B': 'third', 'C': 'fourth', 'D': 'sixth', 'E': 'seventh'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['P is performed at some time before S.']\nnew_fact = infer_new_fact(selected) # 'P must be performed before S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The eighth composition performed is either L or H.']\nnew_fact = infer_new_fact(selected) # 'Slot 8 is already occupied, either by L or H (and only L or H).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At a concert, exactly eight compositions—', 'F, H, L, O, P, R, S, and T—', 'are to be performed exactly once each, consecutively and', 'one composition at a time.', 'P must be performed before S.', 'Slot 8 is already occupied, either by L or H (and only L or H).']\nnew_fact = infer_new_fact(selected) # 'Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P CANNOT be performed', 'E) seventh', 'Since there are only 8 slots and slot 8 cannot be S, P cannot be in slot 7.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is 7.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_13_42777d1f2b", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "If T is performed fifth and F is performed sixth, then S must be performed either", "options": ["fourth or seventh", "third or sixth", "third or fourth", "second or seventh", "first or fourth"], "rationale": "T is performed fifth and F is performed 6th: ? ? ? ? T F ? ? Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ? S cannot be adjacent to O, so it cannot be in slot 2. At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ? Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H) Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H) Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H) The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "If T is performed fifth and F is performed sixth,", "13": "then S must be performed either", "14": "A) fourth or seventh", "15": "B) third or sixth", "16": "C) third or fourth", "17": "D) second or seventh", "18": "E) first or fourth", "19": "T is performed fifth and F is performed 6th: ? ? ? ? T F ? ?", "20": "Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ?", "21": "S cannot be adjacent to O, so it cannot be in slot 2.", "22": "At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ?", "23": "Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H)", "24": "Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H)", "25": "Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H)", "26": "The answer is A.", "27": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 19], "consequent": 20}, {"antecedents": [11], "consequent": 21}, {"antecedents": [7, 20], "consequent": 22}, {"antecedents": [9, 22], "consequent": 23}, {"antecedents": [10, 23], "consequent": 24}, {"antecedents": [21, 24], "consequent": 25}, {"antecedents": [12, 13, 14, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.',\n  'If T is performed fifth and F is performed sixth,']\nquestion = 'then S must be performed either'\nchoices = {'A': 'fourth or seventh', 'B': 'third or sixth', 'C': 'third or fourth', 'D': 'second or seventh', 'E': 'first or fourth'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If T is performed fifth and F is performed sixth,']\nnew_fact = infer_new_fact(selected) # 'T is performed fifth and F is performed 6th: ? ? ? ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O is performed either first or fifth.', 'T is performed fifth and F is performed 6th: ? ? ? ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least one composition is performed either after O and before S, or after S and before O.']\nnew_fact = infer_new_fact(selected) # 'S cannot be adjacent to O, so it cannot be in slot 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least two compositions are performed either after F and before R, or after R and before F.', 'Since slot 5 is occupied, O must be performed first: O ? ? ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The eighth composition performed is either L or H.', 'At least 2 compositions must be performed between F and R, so R can be in slots 2 or 3: O (R) (R) ? T F ? ?']\nnew_fact = infer_new_fact(selected) # 'Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P is performed at some time before S.', 'Slot 8 must contain L or H: O (R) (R) ? T F ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S cannot be adjacent to O, so it cannot be in slot 2.', 'Based on the fact that S must be performed after P, we know that P can occupy slots 2-4: O (R/P) (P/R) (P) T F ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If T is performed fifth and F is performed sixth,', 'then S must be performed either', 'A) fourth or seventh', 'Using these positions, we know that S can only be in slots 4 or 7 (and L or H can fill a remaining slot): O (R/P) (P/R) (P/S) T F (S) (L/H)']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_14_10ce2e61ec", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "If O is performed immediately after T, then F must be performed either", "options": ["first or second", "second or third", "fourth or sixth", "fourth or seventh", "sixth or seventh"], "rationale": "O can only be in slot 1 or 5. O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ? Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ? There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case. Slot 8 must contain either L or H: ? ? R T O ? ? (L/H) Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H) Answer is E. The answer is E)", "answer": "E", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "If O is performed immediately after T,", "13": "then F must be performed either", "14": "A) first or second", "15": "B) second or third", "16": "C) fourth or sixth", "17": "D) fourth or seventh", "18": "E) sixth or seventh", "19": "O can only be in slot 1 or 5.", "20": "O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ?", "21": "Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?", "22": "There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case.", "23": "Slot 8 must contain either L or H: ? ? R T O ? ? (L/H)", "24": "Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H)", "25": "Answer is E.", "26": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [6, 20], "consequent": 21}, {"antecedents": [7, 21], "consequent": 22}, {"antecedents": [9, 21], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [12, 13, 18, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.',\n  'If O is performed immediately after T,']\nquestion = 'then F must be performed either'\nchoices = {'A': 'first or second', 'B': 'second or third', 'C': 'fourth or sixth', 'D': 'fourth or seventh', 'E': 'sixth or seventh'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O is performed either first or fifth.']\nnew_fact = infer_new_fact(selected) # 'O can only be in slot 1 or 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If O is performed immediately after T,', 'O can only be in slot 1 or 5.']\nnew_fact = infer_new_fact(selected) # 'O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T is performed either immediately before F or immediately after R.', 'O can only be performed immediately after T in slot 5: ? ? ? T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least two compositions are performed either after F and before R, or after R and before F.', 'Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The eighth composition performed is either L or H.', 'Since the slot after T is occupied, R must be performed immediately before T: ? ? R T O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'Slot 8 must contain either L or H: ? ? R T O ? ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There must be at least 2 compositions played between R and F, so F cannot be in a lower number than R (3) in this case.', 'Slot 8 must contain either L or H: ? ? R T O ? ? (L/H)']\nnew_fact = infer_new_fact(selected) # 'Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If O is performed immediately after T,', 'then F must be performed either', 'E) sixth or seventh', 'Based on the leftover slots, F can be in slots 6 or 7: ? ? R T O (F) (F) (L/H)']\nnew_fact = infer_new_fact(selected) # 'Answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_15_8596dcfff2", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "If S is performed fourth, which one of the following could be an accurate list of the compositions performed first, second, and third, respectively?", "options": ["F, H, P", "H, P. L", "O, P, R", "O, P, T", "P, R, T"], "rationale": "S is in slot 4: ? ? ? S ? ? ? ? O must be in slot 1 or 5, but cannot be adjacent to S, so O must be in slot 1: O ? ? S We rule out options A, B, and E because they violate this ordering P must be performed before S: O (P) (P) S T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3. We rule out option D because T cannot be in slot 3. The answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "If S is performed fourth,", "13": "which one of the following could be an accurate list of the compositions performed first, second, and third, respectively?", "14": "A) F, H, P", "15": "B) H, P. L", "16": "C) O, P, R", "17": "D) O, P, T", "18": "E) P, R, T", "19": "S is in slot 4: ? ? ? S ? ? ? ?", "20": "O must be in slot 1 or 5, but cannot be adjacent to S,", "21": "so O must be in slot 1: O ? ? S", "22": "We rule out options A, B, and E because they violate this ordering", "23": "P must be performed before S: O (P) (P) S", "24": "T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3.", "25": "We rule out option D because T cannot be in slot 3.", "26": "The answer is C.", "27": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [12], "consequent": 19}, {"antecedents": [8, 11], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [14, 15, 18, 21], "consequent": 22}, {"antecedents": [10, 21], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [17, 24], "consequent": 25}, {"antecedents": [12, 13, 16, 22, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.',\n  'If S is performed fourth,']\nquestion = 'which one of the following could be an accurate list of the compositions performed first, second, and third, respectively?'\nchoices = {'A': 'F, H, P', 'B': 'H, P. L', 'C': 'O, P, R', 'D': 'O, P, T', 'E': 'P, R, T'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If S is performed fourth,']\nnew_fact = infer_new_fact(selected) # 'S is in slot 4: ? ? ? S ? ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O is performed either first or fifth.', 'At least one composition is performed either after O and before S, or after S and before O.']\nnew_fact = infer_new_fact(selected) # 'O must be in slot 1 or 5, but cannot be adjacent to S,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['S is in slot 4: ? ? ? S ? ? ? ?', 'O must be in slot 1 or 5, but cannot be adjacent to S,']\nnew_fact = infer_new_fact(selected) # 'so O must be in slot 1: O ? ? S'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) F, H, P', 'B) H, P. L', 'E) P, R, T', 'so O must be in slot 1: O ? ? S']\nnew_fact = infer_new_fact(selected) # 'We rule out options A, B, and E because they violate this ordering'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P is performed at some time before S.', 'so O must be in slot 1: O ? ? S']\nnew_fact = infer_new_fact(selected) # 'P must be performed before S: O (P) (P) S'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T is performed either immediately before F or immediately after R.', 'P must be performed before S: O (P) (P) S']\nnew_fact = infer_new_fact(selected) # 'T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) O, P, T', 'T must be performed immediately before F or immediately after R, so it cannot be in either slot 2 or 3.']\nnew_fact = infer_new_fact(selected) # 'We rule out option D because T cannot be in slot 3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If S is performed fourth,', 'which one of the following could be an accurate list of the compositions performed first, second, and third, respectively?', 'C) O, P, R', 'We rule out options A, B, and E because they violate this ordering', 'We rule out option D because T cannot be in slot 3.']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_16_7e0c88a103", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "If P is performed third and S is performed sixth, the composition performed fifth must be either", "options": ["F or H", "F or O", "F or T", "H or L", "O or R"], "rationale": "O can be performed 1st or 5th, but cannot be adjacent to S. If P is performed 3rd and S is performed 6th, then O must be performed 1st: O ? P ? ? S ? ? L or H must occupy slot 8: O ? P ? ? S ? (L/H) F and R must be separated by at least 2 compositions, so we have the following possibilities: 1) O (R/F) P ? (F/R) S ? (L/H) 2) O ? P (R/F) ? S (F/R) (L/H) T must be immediately before F or immediately after R. We know in possibility 1 that if F were in slot 2, there would be no space for T after F, so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H) We know if possibility 2 that if F were in slot 4, then there would be no space for T after F, so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H) The answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "If P is performed third and S is performed sixth,", "13": "the composition performed fifth must be either", "14": "A) F or H", "15": "B) F or O", "16": "C) F or T", "17": "D) H or L", "18": "E) O or R", "19": "O can be performed 1st or 5th, but cannot be adjacent to S.", "20": "If P is performed 3rd and S is performed 6th,", "21": "then O must be performed 1st: O ? P ? ? S ? ?", "22": "L or H must occupy slot 8: O ? P ? ? S ? (L/H)", "23": "F and R must be separated by at least 2 compositions, so we have the following possibilities:", "24": "1) O (R/F) P ? (F/R) S ? (L/H)", "25": "2) O ? P (R/F) ? S (F/R) (L/H)", "26": "T must be immediately before F or immediately after R.", "27": "We know in possibility 1 that if F were in slot 2, there would be no space for T after F,", "28": "so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H)", "29": "We know if possibility 2 that if F were in slot 4, then there would be no space for T after F,", "30": "so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H)", "31": "The answer is C.", "32": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [8, 11], "consequent": 19}, {"antecedents": [12], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [7], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [22, 23, 24], "consequent": 25}, {"antecedents": [6], "consequent": 26}, {"antecedents": [24, 26], "consequent": 27}, {"antecedents": [24, 27], "consequent": 28}, {"antecedents": [25, 26], "consequent": 29}, {"antecedents": [25, 29], "consequent": 30}, {"antecedents": [12, 13, 16, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.',\n  'If P is performed third and S is performed sixth,']\nquestion = 'the composition performed fifth must be either'\nchoices = {'A': 'F or H', 'B': 'F or O', 'C': 'F or T', 'D': 'H or L', 'E': 'O or R'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O is performed either first or fifth.', 'At least one composition is performed either after O and before S, or after S and before O.']\nnew_fact = infer_new_fact(selected) # 'O can be performed 1st or 5th, but cannot be adjacent to S.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If P is performed third and S is performed sixth,']\nnew_fact = infer_new_fact(selected) # 'If P is performed 3rd and S is performed 6th,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['O can be performed 1st or 5th, but cannot be adjacent to S.', 'If P is performed 3rd and S is performed 6th,']\nnew_fact = infer_new_fact(selected) # 'then O must be performed 1st: O ? P ? ? S ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The eighth composition performed is either L or H.', 'then O must be performed 1st: O ? P ? ? S ? ?']\nnew_fact = infer_new_fact(selected) # 'L or H must occupy slot 8: O ? P ? ? S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least two compositions are performed either after F and before R, or after R and before F.']\nnew_fact = infer_new_fact(selected) # 'F and R must be separated by at least 2 compositions, so we have the following possibilities:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L or H must occupy slot 8: O ? P ? ? S ? (L/H)', 'F and R must be separated by at least 2 compositions, so we have the following possibilities:']\nnew_fact = infer_new_fact(selected) # '1) O (R/F) P ? (F/R) S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L or H must occupy slot 8: O ? P ? ? S ? (L/H)', 'F and R must be separated by at least 2 compositions, so we have the following possibilities:', '1) O (R/F) P ? (F/R) S ? (L/H)']\nnew_fact = infer_new_fact(selected) # '2) O ? P (R/F) ? S (F/R) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T is performed either immediately before F or immediately after R.']\nnew_fact = infer_new_fact(selected) # 'T must be immediately before F or immediately after R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H)', 'T must be immediately before F or immediately after R.']\nnew_fact = infer_new_fact(selected) # 'We know in possibility 1 that if F were in slot 2, there would be no space for T after F,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1) O (R/F) P ? (F/R) S ? (L/H)', 'We know in possibility 1 that if F were in slot 2, there would be no space for T after F,']\nnew_fact = infer_new_fact(selected) # 'so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H)', 'T must be immediately before F or immediately after R.']\nnew_fact = infer_new_fact(selected) # 'We know if possibility 2 that if F were in slot 4, then there would be no space for T after F,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2) O ? P (R/F) ? S (F/R) (L/H)', 'We know if possibility 2 that if F were in slot 4, then there would be no space for T after F,']\nnew_fact = infer_new_fact(selected) # 'so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If P is performed third and S is performed sixth,', 'the composition performed fifth must be either', 'C) F or T', 'so R must be in slot 2 and F must be in slot 5: O R P T F S ? (L/H)', 'so R must be in slot 4, T must be in slot 5, and F must be in slot 7: O ? P R T S F (L/H)']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_17_c4915533c9", "context": "At a concert, exactly eight compositions—F, H, L, O, P, R, S, and T—are to be performed exactly once each, consecutively and one composition at a time. The order of their performance must satisfy the following conditions: T is performed either immediately before F or immediately after R. At least two compositions are performed either after F and before R, or after R and before F. O is performed either first or fifth. The eighth composition performed is either L or H. P is performed at some time before S. At least one composition is performed either after O and before S, or after S and before O.", "question": "If exactly two compositions are performed after F but before O, then R must be performed", "options": ["first", "third", "fourth", "sixth", "seventh"], "rationale": "O can be in slots 1 or 5. If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ? There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H) Let's assume R is in slot 7: ? F ? ? O ? R (L/H) Then T must be in slot 1: T F ? ? O ? R (L/H) S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H) But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7. The answer is D. The answer is D)", "answer": "D", "textual_logical_units": {"1": "At a concert, exactly eight compositions—", "2": "F, H, L, O, P, R, S, and T—", "3": "are to be performed exactly once each, consecutively and", "4": "one composition at a time.", "5": "The order of their performance must satisfy the following conditions:", "6": "T is performed either immediately before F or immediately after R.", "7": "At least two compositions are performed either after F and before R, or after R and before F.", "8": "O is performed either first or fifth.", "9": "The eighth composition performed is either L or H.", "10": "P is performed at some time before S.", "11": "At least one composition is performed either after O and before S, or after S and before O.", "12": "If exactly two compositions are performed after F but before O,", "13": "then R must be performed", "14": "A) first", "15": "B) third", "16": "C) fourth", "17": "D) sixth", "18": "E) seventh", "19": "O can be in slots 1 or 5.", "20": "If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ?", "21": "There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O", "22": "Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H)", "23": "Let's assume R is in slot 7: ? F ? ? O ? R (L/H)", "24": "Then T must be in slot 1: T F ? ? O ? R (L/H)", "25": "S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H)", "26": "But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7.", "27": "The answer is D.", "28": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [8], "consequent": 19}, {"antecedents": [12, 19], "consequent": 20}, {"antecedents": [7, 20], "consequent": 21}, {"antecedents": [9, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [6, 23], "consequent": 24}, {"antecedents": [11, 24], "consequent": 25}, {"antecedents": [10, 25], "consequent": 26}, {"antecedents": [12, 13, 17, 26], "consequent": 27}, {"antecedents": [27], "consequent": 28}], "metadata": [], "code_input": "####\nfacts = [ 'At a concert, exactly eight compositions—',\n  'F, H, L, O, P, R, S, and T—',\n  'are to be performed exactly once each, consecutively and',\n  'one composition at a time.',\n  'The order of their performance must satisfy the following conditions:',\n  'T is performed either immediately before F or immediately after R.',\n  'At least two compositions are performed either after F and before R, or after R and before F.',\n  'O is performed either first or fifth.',\n  'The eighth composition performed is either L or H.',\n  'P is performed at some time before S.',\n  'At least one composition is performed either after O and before S, or after S and before O.',\n  'If exactly two compositions are performed after F but before O,']\nquestion = 'then R must be performed'\nchoices = {'A': 'first', 'B': 'third', 'C': 'fourth', 'D': 'sixth', 'E': 'seventh'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['O is performed either first or fifth.']\nnew_fact = infer_new_fact(selected) # 'O can be in slots 1 or 5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If exactly two compositions are performed after F but before O,', 'O can be in slots 1 or 5.']\nnew_fact = infer_new_fact(selected) # 'If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least two compositions are performed either after F and before R, or after R and before F.', 'If exactly 2 compositions are performed before O (and after F), O can only be in slot 5 (and F can only be in slot 2): ? F ? ? O ? ? ?']\nnew_fact = infer_new_fact(selected) # 'There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The eighth composition performed is either L or H.', 'There must be at least 2 compositions between R and F, but the closest possible slot (5) is occupied by O']\nnew_fact = infer_new_fact(selected) # 'Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Also, Slot 8 must be occupied by L or H, so R can only be in slots 6 or 7: ? F ? ? O (R) (R) (L/H)']\nnew_fact = infer_new_fact(selected) # \"Let's assume R is in slot 7: ? F ? ? O ? R (L/H)\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T is performed either immediately before F or immediately after R.', \"Let's assume R is in slot 7: ? F ? ? O ? R (L/H)\"]\nnew_fact = infer_new_fact(selected) # 'Then T must be in slot 1: T F ? ? O ? R (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least one composition is performed either after O and before S, or after S and before O.', 'Then T must be in slot 1: T F ? ? O ? R (L/H)']\nnew_fact = infer_new_fact(selected) # 'S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P is performed at some time before S.', 'S cannot be adjacent to O, so it cannot be in slots 4 or 6, and so must be in slot 3: T F S ? O ? R (L/H)']\nnew_fact = infer_new_fact(selected) # 'But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If exactly two compositions are performed after F but before O,', 'then R must be performed', 'D) sixth', 'But S must be performed after P, and this is not possible in this configuration, so R cannot be in slot 7.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_18_fde7cfbaf2", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "Which one of the following could be the order in which the breeds of kitten are featured in the pet shop, from day 1 though day 7?", "options": ["Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese", "Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx", "Manx, Himalayan, Manx, Himalayan, Siamese, Manx, Siamese", "Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan", "Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan"], "rationale": "Himalayans cannot be featured on day 1 and less than three days. A and C not answers The same breed may not feature on consecutive days. D is not an answer. Any breed featured on day 1 may not be featured on day 7. B is not an answer. The answer is E. The answer is E)", "answer": "E", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "Which one of the following could be the order in which the breeds of kitten are featured in the pet shop,", "15": "from day 1 though day 7?", "16": "A) Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese", "17": "B) Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx", "18": "C) Manx, Himalayan, Manx, Himalayan, Siamese, Manx, Siamese", "19": "D) Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan", "20": "E) Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan", "21": "Himalayans cannot be featured on day 1 and less than three days. A and C not answers", "22": "The same breed may not feature on consecutive days. D is not an answer.", "23": "Any breed featured on day 1 may not be featured on day 7. B is not an answer.", "24": "The answer is E.", "25": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 16], "consequent": 21}, {"antecedents": [8, 19], "consequent": 22}, {"antecedents": [9, 17], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.',\n  'Which one of the following could be the order in which the breeds of kitten are featured in the pet shop,']\nquestion = 'from day 1 though day 7?'\nchoices = { 'A': 'Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese',\n  'B': 'Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx',\n  'C': 'Manx, Himalayan, Manx, Himalayan, Siamese, Manx, Siamese',\n  'D': 'Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan',\n  'E': 'Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Himalayans are featured on exactly three days,', 'but not on day 1.', 'A) Himalayan, Manx, Siamese, Himalayan, Manx, Himalayan, Siamese']\nnew_fact = infer_new_fact(selected) # 'Himalayans cannot be featured on day 1 and less than three days. A and C not answers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No breed is featured on any two consecutive days.', 'D) Siamese, Himalayan, Manx, Himalayan, Siamese, Siamese, Himalayan']\nnew_fact = infer_new_fact(selected) # 'The same breed may not feature on consecutive days. D is not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Any breed featured on day 1 is not featured on day 7.', 'B) Manx, Himalayan, Siamese, Himalayan, Manx Himalayan, Manx']\nnew_fact = infer_new_fact(selected) # 'Any breed featured on day 1 may not be featured on day 7. B is not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be the order in which the breeds of kitten are featured in the pet shop,', 'from day 1 though day 7?', 'E) Siamese, Himalayan, Siamese, Himalayan, Manx, Siamese, Himalayan', 'Himalayans cannot be featured on day 1 and less than three days. A and C not answers', 'The same breed may not feature on consecutive days. D is not an answer.', 'Any breed featured on day 1 may not be featured on day 7. B is not an answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_19_d10171a1c1", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "If Himalayans are not featured on day 2, which one of the following could be true?", "options": ["Manx are featured on day 3.", "Siamese are featured on day 4.", "Rottweilers are featured on day 5.", "Himalayans are featured on day 6.", "Greyhounds are featured on day 7."], "rationale": "The Himalayan will be featured on day 3, day 5 and day 7. Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers. Rottweilers and Himalayans cannot be featured on the same days. C is not an option. Breeds featured on day 1 may not feature on day 7. E is not an answer. The answer is B The answer is B)", "answer": "B", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "If Himalayans are not featured on day 2,", "15": "which one of the following could be true?", "16": "A) Manx are featured on day 3.", "17": "B) Siamese are featured on day 4.", "18": "C) Rottweilers are featured on day 5.", "19": "D) Himalayans are featured on day 6.", "20": "E) Greyhounds are featured on day 7.", "21": "The Himalayan will be featured on day 3, day 5 and day 7.", "22": "Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers.", "23": "Rottweilers and Himalayans cannot be featured on the same days. C is not an option.", "24": "Breeds featured on day 1 may not feature on day 7. E is not an answer.", "25": "The answer is B", "26": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 14], "consequent": 21}, {"antecedents": [8, 19, 21], "consequent": 22}, {"antecedents": [12, 13, 21], "consequent": 23}, {"antecedents": [7, 9], "consequent": 24}, {"antecedents": [14, 17, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.',\n  'If Himalayans are not featured on day 2,']\nquestion = 'which one of the following could be true?'\nchoices = { 'A': 'Manx are featured on day 3.',\n  'B': 'Siamese are featured on day 4.',\n  'C': 'Rottweilers are featured on day 5.',\n  'D': 'Himalayans are featured on day 6.',\n  'E': 'Greyhounds are featured on day 7.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Himalayans are featured on exactly three days,', 'but not on day 1.', 'If Himalayans are not featured on day 2,']\nnew_fact = infer_new_fact(selected) # 'The Himalayan will be featured on day 3, day 5 and day 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No breed is featured on any two consecutive days.', 'D) Himalayans are featured on day 6.', 'The Himalayan will be featured on day 3, day 5 and day 7.']\nnew_fact = infer_new_fact(selected) # 'Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.', 'The Himalayan will be featured on day 3, day 5 and day 7.']\nnew_fact = infer_new_fact(selected) # 'Rottweilers and Himalayans cannot be featured on the same days. C is not an option.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Greyhounds are featured on day 1.', 'Any breed featured on day 1 is not featured on day 7.']\nnew_fact = infer_new_fact(selected) # 'Breeds featured on day 1 may not feature on day 7. E is not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Himalayans are not featured on day 2,', 'B) Siamese are featured on day 4.', 'The Himalayan will be featured on day 3, day 5 and day 7.', 'Since Himalayan cannot be featured on day 1 and no breed can feature on two consecutive days, A and D not answers.', 'Rottweilers and Himalayans cannot be featured on the same days. C is not an option.', 'Breeds featured on day 1 may not feature on day 7. E is not an answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_20_4d385b334d", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "Which one of the following could be true?", "options": ["Greyhounds and Siamese are both featured on day 2.", "Greyhounds and Himalayans are both featured on day 7.", "Rottweilers and Himalayans are both featured on day 4.", "Rottweilers and Manx are both featured on day 5.", "Newfoundlands and Manx are both featured on day 6."], "rationale": "No breed may be featured on two consecutive days. A and E are not answers Breeds featured on day 1 may not be featured on day 7. B is not an answer Rottweilers and Himalayans may not feature on the same day. C is not an answer The answer is D. The answer is D)", "answer": "D", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "Which one of the following could be true?", "15": "A) Greyhounds and Siamese are both featured on day 2.", "16": "B) Greyhounds and Himalayans are both featured on day 7.", "17": "C) Rottweilers and Himalayans are both featured on day 4.", "18": "D) Rottweilers and Manx are both featured on day 5.", "19": "E) Newfoundlands and Manx are both featured on day 6.", "20": "No breed may be featured on two consecutive days. A and E are not answers", "21": "Breeds featured on day 1 may not be featured on day 7. B is not an answer", "22": "Rottweilers and Himalayans may not feature on the same day. C is not an answer", "23": "The answer is D.", "24": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 12, 15, 19], "consequent": 20}, {"antecedents": [7, 9], "consequent": 21}, {"antecedents": [12, 13], "consequent": 22}, {"antecedents": [14, 18, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.']\nquestion = 'Which one of the following could be true?'\nchoices = { 'A': 'Greyhounds and Siamese are both featured on day 2.',\n  'B': 'Greyhounds and Himalayans are both featured on day 7.',\n  'C': 'Rottweilers and Himalayans are both featured on day 4.',\n  'D': 'Rottweilers and Manx are both featured on day 5.',\n  'E': 'Newfoundlands and Manx are both featured on day 6.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Greyhounds are featured on day 1.', 'No breed is featured on any two consecutive days.', 'Any breed featured on day 1 is not featured on day 7.', 'Rottweilers are not featured on day 7,', 'A) Greyhounds and Siamese are both featured on day 2.', 'E) Newfoundlands and Manx are both featured on day 6.']\nnew_fact = infer_new_fact(selected) # 'No breed may be featured on two consecutive days. A and E are not answers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Greyhounds are featured on day 1.', 'Any breed featured on day 1 is not featured on day 7.']\nnew_fact = infer_new_fact(selected) # 'Breeds featured on day 1 may not be featured on day 7. B is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.']\nnew_fact = infer_new_fact(selected) # 'Rottweilers and Himalayans may not feature on the same day. C is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be true?', 'D) Rottweilers and Manx are both featured on day 5.', 'No breed may be featured on two consecutive days. A and E are not answers', 'Breeds featured on day 1 may not be featured on day 7. B is not an answer', 'Rottweilers and Himalayans may not feature on the same day. C is not an answer']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_21_64005f09c3", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "If Himalayans are not featured on day 7, then which one of the following pairs of days CANNOT feature both the same breed of kitten and the same breed of puppy?", "options": ["day 1 and day 3", "day 2 and day 6", "day 3 and day 5", "day 4 and day 6", "day 5 and day 7"], "rationale": "Possible days the Himalayan could be featured on are day 2, day 4 and, day 6 Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland. Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies. The answer is B The answer is B)", "answer": "B", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "If Himalayans are not featured on day 7,", "15": "then which one of the following pairs of days CANNOT feature both the same breed of kitten and", "16": "the same breed of puppy?", "17": "A) day 1 and day 3", "18": "B) day 2 and day 6", "19": "C) day 3 and day 5", "20": "D) day 4 and day 6", "21": "E) day 5 and day 7", "22": "Possible days the Himalayan could be featured on are day 2, day 4 and, day 6", "23": "Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland.", "24": "Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies.", "25": "The answer is B", "26": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 14], "consequent": 22}, {"antecedents": [7, 8, 9, 12], "consequent": 23}, {"antecedents": [8, 12, 13], "consequent": 24}, {"antecedents": [14, 15, 16, 18, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.',\n  'If Himalayans are not featured on day 7,',\n  'then which one of the following pairs of days CANNOT feature both the same breed of kitten and']\nquestion = 'the same breed of puppy?'\nchoices = {'A': 'day 1 and day 3', 'B': 'day 2 and day 6', 'C': 'day 3 and day 5', 'D': 'day 4 and day 6', 'E': 'day 5 and day 7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No breed is featured on any two consecutive days.', 'Himalayans are featured on exactly three days,', 'but not on day 1.', 'If Himalayans are not featured on day 7,']\nnew_fact = infer_new_fact(selected) # 'Possible days the Himalayan could be featured on are day 2, day 4 and, day 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Greyhounds are featured on day 1.', 'No breed is featured on any two consecutive days.', 'Any breed featured on day 1 is not featured on day 7.', 'Rottweilers are not featured on day 7,']\nnew_fact = infer_new_fact(selected) # 'Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No breed is featured on any two consecutive days.', 'Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.']\nnew_fact = infer_new_fact(selected) # 'Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Himalayans are not featured on day 7,', 'then which one of the following pairs of days CANNOT feature both the same breed of kitten and', 'the same breed of puppy?', 'B) day 2 and day 6', 'Possible days the Himalayan could be featured on are day 2, day 4 and, day 6', 'Breed featured on day 1 may not feature on day 7, therefore, puppy featured on day 7 is Newfoundland.', 'Day 6 could therefore only feature Greyhound puppies and day 2 could feature Newfoundland puppies.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_22_d5faf2083f", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "Which one of the following could be true?", "options": ["There are exactly four breeds that are each featured on three days.", "Greyhounds are featured on every day that Himalayans are.", "Himalayans are featured on every day that Greyhounds are.", "Himalayans are featured on every day that Rottweilers are not.", "Rottweilers are featured on every day that Himalayans are not."], "rationale": "Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer. No breed may be featured on two consecutive days. E is not an anwer Himalayans may not be featured on day 1. C is not an answer If Himalayan features on day 2, B is not an answer The answer is A The answer is A)", "answer": "A", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "Which one of the following could be true?", "15": "A) There are exactly four breeds that are each featured on three days.", "16": "B) Greyhounds are featured on every day that Himalayans are.", "17": "C) Himalayans are featured on every day that Greyhounds are.", "18": "D) Himalayans are featured on every day that Rottweilers are not.", "19": "E) Rottweilers are featured on every day that Himalayans are not.", "20": "Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.", "21": "No breed may be featured on two consecutive days. E is not an anwer", "22": "Himalayans may not be featured on day 1. C is not an answer", "23": "If Himalayan features on day 2, B is not an answer", "24": "The answer is A", "25": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [7, 9, 10, 18], "consequent": 20}, {"antecedents": [8, 19, 20], "consequent": 21}, {"antecedents": [7, 10, 11], "consequent": 22}, {"antecedents": [8, 10, 11, 16], "consequent": 23}, {"antecedents": [14, 15, 20, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.']\nquestion = 'Which one of the following could be true?'\nchoices = { 'A': 'There are exactly four breeds that are each featured on three days.',\n  'B': 'Greyhounds are featured on every day that Himalayans are.',\n  'C': 'Himalayans are featured on every day that Greyhounds are.',\n  'D': 'Himalayans are featured on every day that Rottweilers are not.',\n  'E': 'Rottweilers are featured on every day that Himalayans are not.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Greyhounds are featured on day 1.', 'Any breed featured on day 1 is not featured on day 7.', 'Himalayans are featured on exactly three days,', 'D) Himalayans are featured on every day that Rottweilers are not.']\nnew_fact = infer_new_fact(selected) # 'Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No breed is featured on any two consecutive days.', 'E) Rottweilers are featured on every day that Himalayans are not.', 'Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.']\nnew_fact = infer_new_fact(selected) # 'No breed may be featured on two consecutive days. E is not an anwer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Greyhounds are featured on day 1.', 'Himalayans are featured on exactly three days,', 'but not on day 1.']\nnew_fact = infer_new_fact(selected) # 'Himalayans may not be featured on day 1. C is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No breed is featured on any two consecutive days.', 'Himalayans are featured on exactly three days,', 'but not on day 1.', 'B) Greyhounds are featured on every day that Himalayans are.']\nnew_fact = infer_new_fact(selected) # 'If Himalayan features on day 2, B is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be true?', 'A) There are exactly four breeds that are each featured on three days.', 'Himalayan is featured on exactly three days. Rottweiler feature on day 6. That leaves four days for Himalayan. D not an answer.', 'No breed may be featured on two consecutive days. E is not an anwer', 'Himalayans may not be featured on day 1. C is not an answer', 'If Himalayan features on day 2, B is not an answer']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_23_0acffb8c53", "context": "On each of exactly seven consecutive days (day 1 though day 7), a pet shop features exactly one of three breeds of kitten—Himalayan, Manx, Siamese—and exactly one of three breeds of puppy—Greyhound, Newfoundland, Rottweiler. The following conditions must apply: Greyhounds are featured on day 1. No breed is featured on any two consecutive days. Any breed featured on day 1 is not featured on day 7. Himalayans are featured on exactly three days, but not on day 1. Rottweilers are not featured on day 7, nor on any day that features Himalayans.", "question": "If Himalayans are not featured on day 7, which one of the following could be true?", "options": ["Greyhounds are featured on days 3 and 5.", "Newfoundlands are featured on day 3.", "Rottweilers are featured on day 6.", "Rottweilers are featured only on day 3.", "Rottweilers are featured on exactly three days."], "rationale": "Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer. Rottweilers and Himalayan may not feature on the same day. C is not an answer No breed may feature on two consecutive days. A and B are not answers. The answer is D The answer is D)", "answer": "D", "textual_logical_units": {"1": "On each of exactly seven consecutive days (day 1 though day 7),", "2": "a pet shop features exactly one of three breeds of kitten—", "3": "Himalayan, Manx, Siamese—", "4": "and exactly one of three breeds of puppy—", "5": "Greyhound, Newfoundland, Rottweiler.", "6": "The following conditions must apply:", "7": "Greyhounds are featured on day 1.", "8": "No breed is featured on any two consecutive days.", "9": "Any breed featured on day 1 is not featured on day 7.", "10": "Himalayans are featured on exactly three days,", "11": "but not on day 1.", "12": "Rottweilers are not featured on day 7,", "13": "nor on any day that features Himalayans.", "14": "If Himalayans are not featured on day 7,", "15": "which one of the following could be true?", "16": "A) Greyhounds are featured on days 3 and 5.", "17": "B) Newfoundlands are featured on day 3.", "18": "C) Rottweilers are featured on day 6.", "19": "D) Rottweilers are featured only on day 3.", "20": "E) Rottweilers are featured on exactly three days.", "21": "Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer.", "22": "Rottweilers and Himalayan may not feature on the same day. C is not an answer", "23": "No breed may feature on two consecutive days. A and B are not answers.", "24": "The answer is D", "25": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 10, 11, 12, 13, 20], "consequent": 21}, {"antecedents": [10, 12, 13, 14, 18], "consequent": 22}, {"antecedents": [7, 8, 12, 13, 14, 16, 17], "consequent": 23}, {"antecedents": [14, 15, 19, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'On each of exactly seven consecutive days (day 1 though day 7),',\n  'a pet shop features exactly one of three breeds of kitten—',\n  'Himalayan, Manx, Siamese—',\n  'and exactly one of three breeds of puppy—',\n  'Greyhound, Newfoundland, Rottweiler.',\n  'The following conditions must apply:',\n  'Greyhounds are featured on day 1.',\n  'No breed is featured on any two consecutive days.',\n  'Any breed featured on day 1 is not featured on day 7.',\n  'Himalayans are featured on exactly three days,',\n  'but not on day 1.',\n  'Rottweilers are not featured on day 7,',\n  'nor on any day that features Himalayans.',\n  'If Himalayans are not featured on day 7,']\nquestion = 'which one of the following could be true?'\nchoices = { 'A': 'Greyhounds are featured on days 3 and 5.',\n  'B': 'Newfoundlands are featured on day 3.',\n  'C': 'Rottweilers are featured on day 6.',\n  'D': 'Rottweilers are featured only on day 3.',\n  'E': 'Rottweilers are featured on exactly three days.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['On each of exactly seven consecutive days (day 1 though day 7),', 'a pet shop features exactly one of three breeds of kitten—', 'Himalayans are featured on exactly three days,', 'but not on day 1.', 'Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.', 'E) Rottweilers are featured on exactly three days.']\nnew_fact = infer_new_fact(selected) # 'Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Himalayans are featured on exactly three days,', 'Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.', 'If Himalayans are not featured on day 7,', 'C) Rottweilers are featured on day 6.']\nnew_fact = infer_new_fact(selected) # 'Rottweilers and Himalayan may not feature on the same day. C is not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Greyhounds are featured on day 1.', 'No breed is featured on any two consecutive days.', 'Rottweilers are not featured on day 7,', 'nor on any day that features Himalayans.', 'If Himalayans are not featured on day 7,', 'A) Greyhounds are featured on days 3 and 5.', 'B) Newfoundlands are featured on day 3.']\nnew_fact = infer_new_fact(selected) # 'No breed may feature on two consecutive days. A and B are not answers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Himalayans are not featured on day 7,', 'which one of the following could be true?', 'D) Rottweilers are featured only on day 3.', 'Each day features exactly one breed of each animal type. Himalayan and Rottweiler may not be featured on the same day. That leaves two days for Rottweilers. E is not answer.', 'Rottweilers and Himalayan may not feature on the same day. C is not an answer', 'No breed may feature on two consecutive days. A and B are not answers.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_24_da322cc891", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "question": "Which one of the following is an acceptable selection of scientists for the panel?", "options": ["F, G, K, P, Q", "G, H, K, L, M", "G, H, K, L, R", "H, K, M, P, R", "H, L, M, P, Q"], "rationale": "K and F cannot be in the team. A not an answer K and M cannot be in the team. B and D not answers If M is selcted, both P and R must be selected. E not an answer. The answer is C The answer is C)", "answer": "C", "textual_logical_units": {"1": "A panel of five scientists will be formed.", "2": "The panelists will be selected from among three botanists—", "3": "F, G, and H—", "4": "three chemists—", "5": "K, L, and M—", "6": "and three zoologists—", "7": "P, Q, and R.", "8": "Selection is governed by the following conditions:", "9": "The panel must include at least one scientist of each of the three types.", "10": "If more than one botanist is selected,", "11": "then at most one zoologist is selected.", "12": "F and K cannot both be selected.", "13": "K and M cannot both be selected.", "14": "If M is selected, both P and R must be selected.", "15": "Which one of the following is an acceptable selection of scientists for the panel?", "16": "A) F, G, K, P, Q", "17": "B) G, H, K, L, M", "18": "C) G, H, K, L, R", "19": "D) H, K, M, P, R", "20": "E) H, L, M, P, Q", "21": "K and F cannot be in the team. A not an answer", "22": "K and M cannot be in the team. B and D not answers", "23": "If M is selcted, both P and R must be selected. E not an answer.", "24": "The answer is C", "25": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [12, 16], "consequent": 21}, {"antecedents": [13, 17, 19], "consequent": 22}, {"antecedents": [14, 20], "consequent": 23}, {"antecedents": [15, 18, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'A panel of five scientists will be formed.',\n  'The panelists will be selected from among three botanists—',\n  'F, G, and H—',\n  'three chemists—',\n  'K, L, and M—',\n  'and three zoologists—',\n  'P, Q, and R.',\n  'Selection is governed by the following conditions:',\n  'The panel must include at least one scientist of each of the three types.',\n  'If more than one botanist is selected,',\n  'then at most one zoologist is selected.',\n  'F and K cannot both be selected.',\n  'K and M cannot both be selected.',\n  'If M is selected, both P and R must be selected.']\nquestion = 'Which one of the following is an acceptable selection of scientists for the panel?'\nchoices = {'A': 'F, G, K, P, Q', 'B': 'G, H, K, L, M', 'C': 'G, H, K, L, R', 'D': 'H, K, M, P, R', 'E': 'H, L, M, P, Q'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['F and K cannot both be selected.', 'A) F, G, K, P, Q']\nnew_fact = infer_new_fact(selected) # 'K and F cannot be in the team. A not an answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['K and M cannot both be selected.', 'B) G, H, K, L, M', 'D) H, K, M, P, R']\nnew_fact = infer_new_fact(selected) # 'K and M cannot be in the team. B and D not answers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If M is selected, both P and R must be selected.', 'E) H, L, M, P, Q']\nnew_fact = infer_new_fact(selected) # 'If M is selcted, both P and R must be selected. E not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following is an acceptable selection of scientists for the panel?', 'C) G, H, K, L, R', 'K and F cannot be in the team. A not an answer', 'K and M cannot be in the team. B and D not answers', 'If M is selcted, both P and R must be selected. E not an answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_25_b1bececf9e", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "question": "If M is the only chemist selected for the panel, which one of the following must be true?", "options": ["F and G are both selected.", "G and H are both selected.", "H and P are both selected.", "F, G, and H are all selected.", "P, Q, and R are all selected."], "rationale": "The desire panel size is five scientist. D not an answer. If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers The answer is E The answer is E)", "answer": "E", "textual_logical_units": {"1": "A panel of five scientists will be formed.", "2": "The panelists will be selected from among three botanists—", "3": "F, G, and H—", "4": "three chemists—", "5": "K, L, and M—", "6": "and three zoologists—", "7": "P, Q, and R.", "8": "Selection is governed by the following conditions:", "9": "The panel must include at least one scientist of each of the three types.", "10": "If more than one botanist is selected,", "11": "then at most one zoologist is selected.", "12": "F and K cannot both be selected.", "13": "K and M cannot both be selected.", "14": "If M is selected, both P and R must be selected.", "15": "If M is the only chemist selected for the panel,", "16": "which one of the following must be true?", "17": "A) F and G are both selected.", "18": "B) G and H are both selected.", "19": "C) H and P are both selected.", "20": "D) F, G, and H are all selected.", "21": "E) P, Q, and R are all selected.", "22": "The desire panel size is five scientist. D not an answer.", "23": "If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers", "24": "The answer is E", "25": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [1, 14, 20], "consequent": 22}, {"antecedents": [10, 11, 14, 17, 18, 19], "consequent": 23}, {"antecedents": [15, 16, 21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'A panel of five scientists will be formed.',\n  'The panelists will be selected from among three botanists—',\n  'F, G, and H—',\n  'three chemists—',\n  'K, L, and M—',\n  'and three zoologists—',\n  'P, Q, and R.',\n  'Selection is governed by the following conditions:',\n  'The panel must include at least one scientist of each of the three types.',\n  'If more than one botanist is selected,',\n  'then at most one zoologist is selected.',\n  'F and K cannot both be selected.',\n  'K and M cannot both be selected.',\n  'If M is selected, both P and R must be selected.',\n  'If M is the only chemist selected for the panel,']\nquestion = 'which one of the following must be true?'\nchoices = { 'A': 'F and G are both selected.',\n  'B': 'G and H are both selected.',\n  'C': 'H and P are both selected.',\n  'D': 'F, G, and H are all selected.',\n  'E': 'P, Q, and R are all selected.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A panel of five scientists will be formed.', 'If M is selected, both P and R must be selected.', 'D) F, G, and H are all selected.']\nnew_fact = infer_new_fact(selected) # 'The desire panel size is five scientist. D not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If more than one botanist is selected,', 'then at most one zoologist is selected.', 'If M is selected, both P and R must be selected.', 'A) F and G are both selected.', 'B) G and H are both selected.', 'C) H and P are both selected.']\nnew_fact = infer_new_fact(selected) # 'If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If M is the only chemist selected for the panel,', 'which one of the following must be true?', 'E) P, Q, and R are all selected.', 'The desire panel size is five scientist. D not an answer.', 'If more than one botanist is selected, then at most one zoologist may be selected. A, B, and C not answers']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_26_bb85290da4", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "question": "If four of the scientists selected are F, L, Q, and R, which one of the following must be the fifth scientist selected?", "options": ["G", "H", "K", "M", "P"], "rationale": "Two botanists are already selected, so G ot H cannot be selected. F is already selected. K cannot be selected. When M is selected, so must P and R. That would exceed the desired panel size. The answer is E The answer is E)", "answer": "E", "textual_logical_units": {"1": "A panel of five scientists will be formed.", "2": "The panelists will be selected from among three botanists—", "3": "F, G, and H—", "4": "three chemists—", "5": "K, L, and M—", "6": "and three zoologists—", "7": "P, Q, and R.", "8": "Selection is governed by the following conditions:", "9": "The panel must include at least one scientist of each of the three types.", "10": "If more than one botanist is selected,", "11": "then at most one zoologist is selected.", "12": "F and K cannot both be selected.", "13": "K and M cannot both be selected.", "14": "If M is selected, both P and R must be selected.", "15": "If four of the scientists selected are F, L, Q, and R,", "16": "which one of the following must be the fifth scientist selected?", "17": "A) G", "18": "B) H", "19": "C) K", "20": "D) M", "21": "E) P", "22": "Two botanists are already selected, so G ot H cannot be selected.", "23": "F is already selected. K cannot be selected.", "24": "When M is selected, so must P and R. That would exceed the desired panel size.", "25": "The answer is E", "26": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 15], "consequent": 22}, {"antecedents": [12], "consequent": 23}, {"antecedents": [1, 14], "consequent": 24}, {"antecedents": [15, 16, 21, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'A panel of five scientists will be formed.',\n  'The panelists will be selected from among three botanists—',\n  'F, G, and H—',\n  'three chemists—',\n  'K, L, and M—',\n  'and three zoologists—',\n  'P, Q, and R.',\n  'Selection is governed by the following conditions:',\n  'The panel must include at least one scientist of each of the three types.',\n  'If more than one botanist is selected,',\n  'then at most one zoologist is selected.',\n  'F and K cannot both be selected.',\n  'K and M cannot both be selected.',\n  'If M is selected, both P and R must be selected.',\n  'If four of the scientists selected are F, L, Q, and R,']\nquestion = 'which one of the following must be the fifth scientist selected?'\nchoices = {'A': 'G', 'B': 'H', 'C': 'K', 'D': 'M', 'E': 'P'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If more than one botanist is selected,', 'then at most one zoologist is selected.', 'If four of the scientists selected are F, L, Q, and R,']\nnew_fact = infer_new_fact(selected) # 'Two botanists are already selected, so G ot H cannot be selected.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['F and K cannot both be selected.']\nnew_fact = infer_new_fact(selected) # 'F is already selected. K cannot be selected.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A panel of five scientists will be formed.', 'If M is selected, both P and R must be selected.']\nnew_fact = infer_new_fact(selected) # 'When M is selected, so must P and R. That would exceed the desired panel size.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If four of the scientists selected are F, L, Q, and R,', 'which one of the following must be the fifth scientist selected?', 'E) P', 'Two botanists are already selected, so G ot H cannot be selected.', 'F is already selected. K cannot be selected.', 'When M is selected, so must P and R. That would exceed the desired panel size.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_27_79af00cbde", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "question": "If P is the only zoologist selected, which one of the following must be true?", "options": ["If K is selected, G cannot be selected.", "If L is selected, F cannot be selected.", "If exactly one chemist is selected, it must be K.", "If exactly two chemists are selected, F cannot be selected.", "If exactly two chemists are selected, G cannot be selected."], "rationale": "There are no conditions that restrict selection of K and G, or L and F If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected. There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted. The answer D The answer is D)", "answer": "D", "textual_logical_units": {"1": "A panel of five scientists will be formed.", "2": "The panelists will be selected from among three botanists—", "3": "F, G, and H—", "4": "three chemists—", "5": "K, L, and M—", "6": "and three zoologists—", "7": "P, Q, and R.", "8": "Selection is governed by the following conditions:", "9": "The panel must include at least one scientist of each of the three types.", "10": "If more than one botanist is selected,", "11": "then at most one zoologist is selected.", "12": "F and K cannot both be selected.", "13": "K and M cannot both be selected.", "14": "If M is selected, both P and R must be selected.", "15": "If P is the only zoologist selected,", "16": "which one of the following must be true?", "17": "A) If K is selected, G cannot be selected.", "18": "B) If L is selected, F cannot be selected.", "19": "C) If exactly one chemist is selected, it must be K.", "20": "D) If exactly two chemists are selected, F cannot be selected.", "21": "E) If exactly two chemists are selected, G cannot be selected.", "22": "There are no conditions that restrict selection of K and G, or L and F", "23": "If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected.", "24": "There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted.", "25": "The answer D", "26": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [9, 10, 11, 12, 13, 14, 17, 18], "consequent": 22}, {"antecedents": [1, 12, 15], "consequent": 23}, {"antecedents": [10, 11, 12, 13, 14, 21], "consequent": 24}, {"antecedents": [15, 16, 20, 22, 23, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'A panel of five scientists will be formed.',\n  'The panelists will be selected from among three botanists—',\n  'F, G, and H—',\n  'three chemists—',\n  'K, L, and M—',\n  'and three zoologists—',\n  'P, Q, and R.',\n  'Selection is governed by the following conditions:',\n  'The panel must include at least one scientist of each of the three types.',\n  'If more than one botanist is selected,',\n  'then at most one zoologist is selected.',\n  'F and K cannot both be selected.',\n  'K and M cannot both be selected.',\n  'If M is selected, both P and R must be selected.',\n  'If P is the only zoologist selected,']\nquestion = 'which one of the following must be true?'\nchoices = { 'A': 'If K is selected, G cannot be selected.',\n  'B': 'If L is selected, F cannot be selected.',\n  'C': 'If exactly one chemist is selected, it must be K.',\n  'D': 'If exactly two chemists are selected, F cannot be selected.',\n  'E': 'If exactly two chemists are selected, G cannot be selected.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The panel must include at least one scientist of each of the three types.', 'If more than one botanist is selected,', 'then at most one zoologist is selected.', 'F and K cannot both be selected.', 'K and M cannot both be selected.', 'If M is selected, both P and R must be selected.', 'A) If K is selected, G cannot be selected.', 'B) If L is selected, F cannot be selected.']\nnew_fact = infer_new_fact(selected) # 'There are no conditions that restrict selection of K and G, or L and F'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A panel of five scientists will be formed.', 'F and K cannot both be selected.', 'If P is the only zoologist selected,']\nnew_fact = infer_new_fact(selected) # 'If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If more than one botanist is selected,', 'then at most one zoologist is selected.', 'F and K cannot both be selected.', 'K and M cannot both be selected.', 'If M is selected, both P and R must be selected.', 'E) If exactly two chemists are selected, G cannot be selected.']\nnew_fact = infer_new_fact(selected) # 'There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If P is the only zoologist selected,', 'which one of the following must be true?', 'D) If exactly two chemists are selected, F cannot be selected.', 'There are no conditions that restrict selection of K and G, or L and F', 'If K is the only chemist selected, then all botanists must be chosen. However, F and K may not be selected.', 'There are no conditons restricting selection of G when two chemists are chosen. However, the remaining scientists are resticted.']\nnew_fact = infer_new_fact(selected) # 'The answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_28_69c98c102d", "context": "A panel of five scientists will be formed. The panelists will be selected from among three botanists—F, G, and H—three chemists—K, L, and M—and three zoologists—P, Q, and R. Selection is governed by the following conditions: The panel must include at least one scientist of each of the three types. If more than one botanist is selected, then at most one zoologist is selected. F and K cannot both be selected. K and M cannot both be selected. If M is selected, both P and R must be selected.", "question": "If both G and H are among the scientists selected, then the panel must include either", "options": ["F or else K", "F or else M", "K or else M", "M or else Q", "P or else Q"], "rationale": "If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers. There are no conditions that restrict selection of P or Q. The answer is A The answer is A)", "answer": "A", "textual_logical_units": {"1": "A panel of five scientists will be formed.", "2": "The panelists will be selected from among three botanists—", "3": "F, G, and H—", "4": "three chemists—", "5": "K, L, and M—", "6": "and three zoologists—", "7": "P, Q, and R.", "8": "Selection is governed by the following conditions:", "9": "The panel must include at least one scientist of each of the three types.", "10": "If more than one botanist is selected,", "11": "then at most one zoologist is selected.", "12": "F and K cannot both be selected.", "13": "K and M cannot both be selected.", "14": "If M is selected, both P and R must be selected.", "15": "If both G and H are among the scientists selected,", "16": "then the panel must include either", "17": "A) F or else K", "18": "B) F or else M", "19": "C) K or else M", "20": "D) M or else Q", "21": "E) P or else Q", "22": "If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers.", "23": "There are no conditions that restrict selection of P or Q.", "24": "The answer is A", "25": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [10, 11, 14, 15], "consequent": 22}, {"antecedents": [9, 10, 11, 12, 12, 14], "consequent": 23}, {"antecedents": [12, 15, 16, 17, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'A panel of five scientists will be formed.',\n  'The panelists will be selected from among three botanists—',\n  'F, G, and H—',\n  'three chemists—',\n  'K, L, and M—',\n  'and three zoologists—',\n  'P, Q, and R.',\n  'Selection is governed by the following conditions:',\n  'The panel must include at least one scientist of each of the three types.',\n  'If more than one botanist is selected,',\n  'then at most one zoologist is selected.',\n  'F and K cannot both be selected.',\n  'K and M cannot both be selected.',\n  'If M is selected, both P and R must be selected.',\n  'If both G and H are among the scientists selected,']\nquestion = 'then the panel must include either'\nchoices = {'A': 'F or else K', 'B': 'F or else M', 'C': 'K or else M', 'D': 'M or else Q', 'E': 'P or else Q'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If more than one botanist is selected,', 'then at most one zoologist is selected.', 'If M is selected, both P and R must be selected.', 'If both G and H are among the scientists selected,']\nnew_fact = infer_new_fact(selected) # 'If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The panel must include at least one scientist of each of the three types.', 'If more than one botanist is selected,', 'then at most one zoologist is selected.', 'F and K cannot both be selected.', 'F and K cannot both be selected.', 'If M is selected, both P and R must be selected.']\nnew_fact = infer_new_fact(selected) # 'There are no conditions that restrict selection of P or Q.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['F and K cannot both be selected.', 'If both G and H are among the scientists selected,', 'then the panel must include either', 'A) F or else K', 'If more than one botanist are selected, no more than one zoologist may be selected. Options with M are not answers.', 'There are no conditions that restrict selection of P or Q.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_29_64daa9725a", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "Which one of the following lists could accurately identify the cargo held in each of the loading dock's first three bays, listed in order from bay 1 to bay 3?", "options": ["fuel, machinery, textiles", "grain, machinery, fuel", "machinery, livestock, fuel", "machinery, textiles, fuel", "machinery, textiles, produce"], "rationale": "There are no restrictions on machinery, so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively) We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "Which one of the following lists could accurately identify the cargo held in each of the loading dock's first three bays,", "10": "listed in order from bay 1 to bay 3?", "11": "A) fuel, machinery, textiles", "12": "B) grain, machinery, fuel", "13": "C) machinery, livestock, fuel", "14": "D) machinery, textiles, fuel", "15": "E) machinery, textiles, produce", "16": "There are no restrictions on machinery, so it can go anywhere.", "17": "Fuel (F) must be numbered lower than produce (P): F - P", "18": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "19": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "20": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "21": "We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively)", "22": "We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case.", "23": "The answer is A.", "24": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [12, 13, 14, 20], "consequent": 21}, {"antecedents": [15, 16, 20], "consequent": 22}, {"antecedents": [9, 10, 11, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.',\n  \"Which one of the following lists could accurately identify the cargo held in each of the loading dock's first three bays,\"]\nquestion = 'listed in order from bay 1 to bay 3?'\nchoices = { 'A': 'fuel, machinery, textiles',\n  'B': 'grain, machinery, fuel',\n  'C': 'machinery, livestock, fuel',\n  'D': 'machinery, textiles, fuel',\n  'E': 'machinery, textiles, produce'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery, so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B) grain, machinery, fuel', 'C) machinery, livestock, fuel', 'D) machinery, textiles, fuel', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) machinery, textiles, produce', 'There are no restrictions on machinery, so it can go anywhere.', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Which one of the following lists could accurately identify the cargo held in each of the loading dock's first three bays,\", 'listed in order from bay 1 to bay 3?', 'A) fuel, machinery, textiles', 'We rule out options B, C, and D because they all number fuel higher than a type of cargo that must be numbered higher than fuel (grain, livestock, and textiles, respectively)', 'We rule out option E because fuel must be numbered lower than textiles and produce, which would only be bay 1 (occupied by machinery) in this case.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_30_4917e7827d", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "Which one of the following CANNOT be the type of cargo held in bay 4?", "options": ["grain", "livestock", "machinery", "produce", "textiles"], "rationale": "There are no restrictions on machinery, so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M) The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "Which one of the following CANNOT be the type of cargo held in bay 4?", "10": "A) grain", "11": "B) livestock", "12": "C) machinery", "13": "D) produce", "14": "E) textiles", "15": "There are no restrictions on machinery, so it can go anywhere.", "16": "Fuel (F) must be numbered lower than produce (P): F - P", "17": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "18": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "19": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "20": "Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:", "21": "Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G", "22": "Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)", "23": "The answer is A.", "24": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.']\nquestion = 'Which one of the following CANNOT be the type of cargo held in bay 4?'\nchoices = {'A': 'grain', 'B': 'livestock', 'C': 'machinery', 'D': 'produce', 'E': 'textiles'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery, so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.', 'There are no restrictions on machinery, so it can go anywhere.', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:']\nnew_fact = infer_new_fact(selected) # 'Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:', 'Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G']\nnew_fact = infer_new_fact(selected) # 'Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following CANNOT be the type of cargo held in bay 4?', 'A) grain', 'Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_31_1ab2740e34", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "If there is exactly one bay between the bay holding machinery and the bay holding grain, then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?", "options": ["two", "three", "four", "five", "six"], "rationale": "Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them. So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays) This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2. So G must be in bay 6 and M in bay 4: ? ? ? M ? G Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other, and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G The answer is C since T and P can switch places and both configurations are valid. The answer is C)", "answer": "C", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "If there is exactly one bay between the bay holding machinery and the bay holding grain,", "10": "then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?", "11": "A) two", "12": "B) three", "13": "C) four", "14": "D) five", "15": "E) six", "16": "Fuel (F) must be numbered lower than produce (P): F - P", "17": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "18": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "19": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "20": "Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.", "21": "So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays)", "22": "This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.", "23": "So G must be in bay 6 and M in bay 4: ? ? ? M ? G", "24": "Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,", "25": "and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G", "26": "The answer is C since T and P can switch places and both configurations are valid.", "27": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [9, 19], "consequent": 20}, {"antecedents": [1, 20], "consequent": 21}, {"antecedents": [19, 21], "consequent": 22}, {"antecedents": [20, 22], "consequent": 23}, {"antecedents": [16, 17, 22], "consequent": 24}, {"antecedents": [19, 23, 24], "consequent": 25}, {"antecedents": [9, 10, 13, 24, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.',\n  'If there is exactly one bay between the bay holding machinery and the bay holding grain,']\nquestion = 'then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?'\nchoices = {'A': 'two', 'B': 'three', 'C': 'four', 'D': 'five', 'E': 'six'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there is exactly one bay between the bay holding machinery and the bay holding grain,', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.', 'Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.']\nnew_fact = infer_new_fact(selected) # \"So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays)\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', \"So if we try putting G in bay 5, M must be in bay 3 (or 7, but 7 doesn't exist since there are only 6 bays)\"]\nnew_fact = infer_new_fact(selected) # 'This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Normally, G can be in bay 5 or 6, but now it must be separated from machinery with 1 bay between them.', 'This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.']\nnew_fact = infer_new_fact(selected) # 'So G must be in bay 6 and M in bay 4: ? ? ? M ? G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)', 'This creates an impossible configuration since we need to fit F, T, and P BEFORE M, but the only open bays are 1 and 2.']\nnew_fact = infer_new_fact(selected) # 'Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', 'So G must be in bay 6 and M in bay 4: ? ? ? M ? G', 'Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,']\nnew_fact = infer_new_fact(selected) # 'and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there is exactly one bay between the bay holding machinery and the bay holding grain,', 'then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?', 'C) four', 'Following the rules, we know that F must be in bay 1 to leave room for P and T, which have to be adjacent to each other,', 'and L has to be numbered lower than G, so now we have: F (P/T) (T/P) M L G']\nnew_fact = infer_new_fact(selected) # 'The answer is C since T and P can switch places and both configurations are valid.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C since T and P can switch places and both configurations are valid.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_32_b09492ce8b", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "Which one of the following could be the bay holding livestock?", "options": ["bay 1", "bay 2", "bay 3", "bay 5", "bay 6"], "rationale": "There are no restrictions on machinery (M), so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M: Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M) Based on the above configurations, livestock can only be in bays 4 or 5 The answer is D. The answer is D)", "answer": "D", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "Which one of the following could be the bay holding livestock?", "10": "A) bay 1", "11": "B) bay 2", "12": "C) bay 3", "13": "D) bay 5", "14": "E) bay 6", "15": "There are no restrictions on machinery (M), so it can go anywhere.", "16": "Fuel (F) must be numbered lower than produce (P): F - P", "17": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "18": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "19": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "20": "Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:", "21": "Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G", "22": "Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)", "23": "Based on the above configurations, livestock can only be in bays 4 or 5", "24": "The answer is D.", "25": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [1, 15, 19], "consequent": 20}, {"antecedents": [19, 20], "consequent": 21}, {"antecedents": [19, 20, 21], "consequent": 22}, {"antecedents": [21, 22], "consequent": 23}, {"antecedents": [9, 13, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.']\nquestion = 'Which one of the following could be the bay holding livestock?'\nchoices = {'A': 'bay 1', 'B': 'bay 2', 'C': 'bay 3', 'D': 'bay 5', 'E': 'bay 6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery (M), so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.', 'There are no restrictions on machinery (M), so it can go anywhere.', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:']\nnew_fact = infer_new_fact(selected) # 'Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G', 'Since the order dictates 5 out of 6 spaces, the cargo types at each end can only move one space in to fit M:', 'Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G']\nnew_fact = infer_new_fact(selected) # 'Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Fuel can only be in bay 1 or 2: (M/F) (F/M) (T/P) (P/T) L G', 'Grain can only be in bay 5 or 6: F (T/P) (P/T) L (M/G) (G/M)']\nnew_fact = infer_new_fact(selected) # 'Based on the above configurations, livestock can only be in bays 4 or 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be the bay holding livestock?', 'D) bay 5', 'Based on the above configurations, livestock can only be in bays 4 or 5']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_33_1f094603db", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "Which one of the following must be false?", "options": ["The bay holding fuel is next to the bay holding machinery.", "The bay holding grain is next to the bay holding machinery.", "The bay holding livestock is next to the bay holding fuel.", "The bay holding produce is next to the bay holding livestock.", "The bay holding textiles is next to the bay holding fuel."], "rationale": "There are no restrictions on machinery, so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G). The answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "Which one of the following must be false?", "10": "A) The bay holding fuel is next to the bay holding machinery.", "11": "B) The bay holding grain is next to the bay holding machinery.", "12": "C) The bay holding livestock is next to the bay holding fuel.", "13": "D) The bay holding produce is next to the bay holding livestock.", "14": "E) The bay holding textiles is next to the bay holding fuel.", "15": "There are no restrictions on machinery, so it can go anywhere.", "16": "Fuel (F) must be numbered lower than produce (P): F - P", "17": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "18": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "19": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "20": "Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G).", "21": "The answer is C.", "22": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 15}, {"antecedents": [7], "consequent": 16}, {"antecedents": [8], "consequent": 17}, {"antecedents": [6, 16, 17], "consequent": 18}, {"antecedents": [5, 18], "consequent": 19}, {"antecedents": [15, 19], "consequent": 20}, {"antecedents": [9, 12, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.']\nquestion = 'Which one of the following must be false?'\nchoices = { 'A': 'The bay holding fuel is next to the bay holding machinery.',\n  'B': 'The bay holding grain is next to the bay holding machinery.',\n  'C': 'The bay holding livestock is next to the bay holding fuel.',\n  'D': 'The bay holding produce is next to the bay holding livestock.',\n  'E': 'The bay holding textiles is next to the bay holding fuel.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery, so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are no restrictions on machinery, so it can go anywhere.', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following must be false?', 'C) The bay holding livestock is next to the bay holding fuel.', 'Based on this required ordering, we see that fuel (F) can only be next to textiles (T) and produce (P) (or machinery (M)), but never next to livestock (L) or grain (G).']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_34_27704433fb", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "If the bay holding produce is next to the bay holding livestock, then each of the following could be true EXCEPT:", "options": ["Bay 2 is holding fuel.", "Bay 4 is holding produce.", "Bay 4 is holding textiles.", "Bay 5 is holding grain.", "Bay 5 is holding machinery."], "rationale": "There are no restrictions on machinery, so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G The same configuration has bay 4 holding produce. We rule out options A and B since they provide valid possibilities Bay 5 can hold machinery: F - T - P - L - M - G We rule out option E since it provides valid possibilities. Bay 5 can also hold grain: F - T - P - L - G - M We rule out option D since it provides valid possibilities. When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2. We see that textiles can never occupy bay 4. The answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "If the bay holding produce is next to the bay holding livestock,", "10": "then each of the following could be true EXCEPT:", "11": "A) Bay 2 is holding fuel.", "12": "B) Bay 4 is holding produce.", "13": "C) Bay 4 is holding textiles.", "14": "D) Bay 5 is holding grain.", "15": "E) Bay 5 is holding machinery.", "16": "There are no restrictions on machinery, so it can go anywhere.", "17": "Fuel (F) must be numbered lower than produce (P): F - P", "18": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "19": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "20": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "21": "Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G", "22": "If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G", "23": "The same configuration has bay 4 holding produce.", "24": "We rule out options A and B since they provide valid possibilities", "25": "Bay 5 can hold machinery: F - T - P - L - M - G", "26": "We rule out option E since it provides valid possibilities.", "27": "Bay 5 can also hold grain: F - T - P - L - G - M", "28": "We rule out option D since it provides valid possibilities.", "29": "When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2.", "30": "We see that textiles can never occupy bay 4.", "31": "The answer is C.", "32": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}, {"antecedents": [11, 12, 22, 23], "consequent": 24}, {"antecedents": [16, 21], "consequent": 25}, {"antecedents": [15, 25], "consequent": 26}, {"antecedents": [16, 21], "consequent": 27}, {"antecedents": [14, 27], "consequent": 28}, {"antecedents": [25, 27], "consequent": 29}, {"antecedents": [29], "consequent": 30}, {"antecedents": [9, 10, 13, 24, 26, 28, 30], "consequent": 31}, {"antecedents": [31], "consequent": 32}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.',\n  'If the bay holding produce is next to the bay holding livestock,']\nquestion = 'then each of the following could be true EXCEPT:'\nchoices = { 'A': 'Bay 2 is holding fuel.',\n  'B': 'Bay 4 is holding produce.',\n  'C': 'Bay 4 is holding textiles.',\n  'D': 'Bay 5 is holding grain.',\n  'E': 'Bay 5 is holding machinery.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery, so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the bay holding produce is next to the bay holding livestock,', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are no restrictions on machinery, so it can go anywhere.', 'Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G']\nnew_fact = infer_new_fact(selected) # 'If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G']\nnew_fact = infer_new_fact(selected) # 'The same configuration has bay 4 holding produce.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) Bay 2 is holding fuel.', 'B) Bay 4 is holding produce.', 'If bay 1 holds machinery, then bay 2 will hold fuel: M - F - T - P - L - G', 'The same configuration has bay 4 holding produce.']\nnew_fact = infer_new_fact(selected) # 'We rule out options A and B since they provide valid possibilities'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are no restrictions on machinery, so it can go anywhere.', 'Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G']\nnew_fact = infer_new_fact(selected) # 'Bay 5 can hold machinery: F - T - P - L - M - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['E) Bay 5 is holding machinery.', 'Bay 5 can hold machinery: F - T - P - L - M - G']\nnew_fact = infer_new_fact(selected) # 'We rule out option E since it provides valid possibilities.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are no restrictions on machinery, so it can go anywhere.', 'Since the bay holding produce must be next to the bay holding livestock, we have the following configuration: F - T - P - L - G']\nnew_fact = infer_new_fact(selected) # 'Bay 5 can also hold grain: F - T - P - L - G - M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Bay 5 is holding grain.', 'Bay 5 can also hold grain: F - T - P - L - G - M']\nnew_fact = infer_new_fact(selected) # 'We rule out option D since it provides valid possibilities.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Bay 5 can hold machinery: F - T - P - L - M - G', 'Bay 5 can also hold grain: F - T - P - L - G - M']\nnew_fact = infer_new_fact(selected) # 'When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['When machinery or grain is in bay 5, we see that textiles can be pushed back to bay 2.']\nnew_fact = infer_new_fact(selected) # 'We see that textiles can never occupy bay 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the bay holding produce is next to the bay holding livestock,', 'then each of the following could be true EXCEPT:', 'C) Bay 4 is holding textiles.', 'We rule out options A and B since they provide valid possibilities', 'We rule out option E since it provides valid possibilities.', 'We rule out option D since it provides valid possibilities.', 'We see that textiles can never occupy bay 4.']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_35_392ea1395f", "context": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other. Each bay is holding a different one of exactly six types of cargo—fuel, grain, livestock, machinery, produce, or textiles. The following apply: The bay holding grain has a higher number than the bay holding livestock. The bay holding livestock has a higher number than the bay holding textiles. The bay holding produce has a higher number than the bay holding fuel. The bay holding textiles is next to the bay holding produce.", "question": "If bay 4 is holding produce, then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?", "options": ["two", "three", "four", "five", "six"], "rationale": "There are no restrictions on machinery, so it can go anywhere. Fuel (F) must be numbered lower than produce (P): F - P Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T) Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G We know 4 types of cargo are completely determined. Answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.", "2": "Each bay is holding a different one of exactly six types of cargo—", "3": "fuel, grain, livestock, machinery, produce, or textiles.", "4": "The following apply:", "5": "The bay holding grain has a higher number than the bay holding livestock.", "6": "The bay holding livestock has a higher number than the bay holding textiles.", "7": "The bay holding produce has a higher number than the bay holding fuel.", "8": "The bay holding textiles is next to the bay holding produce.", "9": "If bay 4 is holding produce,", "10": "then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?", "11": "A) two", "12": "B) three", "13": "C) four", "14": "D) five", "15": "E) six", "16": "There are no restrictions on machinery, so it can go anywhere.", "17": "Fuel (F) must be numbered lower than produce (P): F - P", "18": "Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)", "19": "Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L", "20": "Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G", "21": "If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G", "22": "We know 4 types of cargo are completely determined.", "23": "Answer is C.", "24": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 16}, {"antecedents": [7], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [6, 17, 18], "consequent": 19}, {"antecedents": [5, 19], "consequent": 20}, {"antecedents": [9, 20], "consequent": 21}, {"antecedents": [16, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'A loading dock consists of exactly six bays numbered 1 through 6 consecutively from one side of the dock to the other.',\n  'Each bay is holding a different one of exactly six types of cargo—',\n  'fuel, grain, livestock, machinery, produce, or textiles.',\n  'The following apply:',\n  'The bay holding grain has a higher number than the bay holding livestock.',\n  'The bay holding livestock has a higher number than the bay holding textiles.',\n  'The bay holding produce has a higher number than the bay holding fuel.',\n  'The bay holding textiles is next to the bay holding produce.',\n  'If bay 4 is holding produce,']\nquestion = 'then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?'\nchoices = {'A': 'two', 'B': 'three', 'C': 'four', 'D': 'five', 'E': 'six'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There are no restrictions on machinery, so it can go anywhere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding produce has a higher number than the bay holding fuel.']\nnew_fact = infer_new_fact(selected) # 'Fuel (F) must be numbered lower than produce (P): F - P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding textiles is next to the bay holding produce.']\nnew_fact = infer_new_fact(selected) # 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding livestock has a higher number than the bay holding textiles.', 'Fuel (F) must be numbered lower than produce (P): F - P', 'Produce (P) must be adjacent to textiles (T), meaning T may be numbered 1 lower or 1 higher than produce): (T)P(T)']\nnew_fact = infer_new_fact(selected) # 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bay holding grain has a higher number than the bay holding livestock.', 'Textiles (T) must be numbered lower than livestock (L): F - (T)P(T) - L']\nnew_fact = infer_new_fact(selected) # 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If bay 4 is holding produce,', 'Livestock (L) must be numbered lower than grain (G): F - (T)P(T) - L - G']\nnew_fact = infer_new_fact(selected) # 'If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are no restrictions on machinery, so it can go anywhere.', 'If bay 4 holds produce, then cargo must be ordered according to the order we found: (M/F) (F/M) T P L G']\nnew_fact = infer_new_fact(selected) # 'We know 4 types of cargo are completely determined.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If bay 4 is holding produce,', 'then for exactly how many of the six bays is the type of cargo that bay is holding completely determined?', 'C) four', 'We know 4 types of cargo are completely determined.']\nnew_fact = infer_new_fact(selected) # 'Answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_36_a884934ae1", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "Which one of the following could be a complete and accurate list of the days on which the batches of each kind of cookie are made?", "options": ["oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday", "oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday", "oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday", "oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday"], "rationale": "The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E. At least 1 batch has to be made on Monday, so we rule out option C. The second batch of sugar cookies is made on Thursday, so we rule out option B. Answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "Which one of the following could be a complete and", "10": "accurate list of the days on which the batches of each kind of cookie are made?", "11": "A) oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday", "12": "B) oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday", "13": "C) oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday", "14": "D) oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday", "15": "E) oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday", "16": "The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E.", "17": "At least 1 batch has to be made on Monday, so we rule out option C.", "18": "The second batch of sugar cookies is made on Thursday, so we rule out option B.", "19": "Answer is A.", "20": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [7, 14, 15], "consequent": 16}, {"antecedents": [6, 13], "consequent": 17}, {"antecedents": [8, 12], "consequent": 18}, {"antecedents": [9, 10, 11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  'Which one of the following could be a complete and']\nquestion = 'accurate list of the days on which the batches of each kind of cookie are made?'\nchoices = { 'A': 'oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday',\n  'B': 'oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday',\n  'C': 'oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday',\n  'D': 'oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday',\n  'E': 'oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.', 'D) oatmeal: Monday, Tuesday, Thursday peanut butter: Monday, Wednesday, Thursday sugar: Monday, Thursday, Friday', 'E) oatmeal: Monday, Thursday, Friday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Thursday, Friday']\nnew_fact = infer_new_fact(selected) # 'The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At least one batch of cookies is made on Monday.', 'C) oatmeal: Tuesday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Tuesday, Thursday, Friday']\nnew_fact = infer_new_fact(selected) # 'At least 1 batch has to be made on Monday, so we rule out option C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The second batch of sugar cookies is made on Thursday.', 'B) oatmeal: Monday, Tuesday, Thursday peanut butter: Tuesday, Wednesday, Thursday sugar: Monday, Wednesday, Thursday']\nnew_fact = infer_new_fact(selected) # 'The second batch of sugar cookies is made on Thursday, so we rule out option B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be a complete and', 'accurate list of the days on which the batches of each kind of cookie are made?', 'A) oatmeal: Monday, Wednesday, Thursday peanut butter: Wednesday, Thursday, Friday sugar: Monday, Thursday, Friday', 'The 2nd batch of oatmeal cookies is made on the same day as the 1st batch of peanut butter cookies, so we rule out options D and E.', 'At least 1 batch has to be made on Monday, so we rule out option C.', 'The second batch of sugar cookies is made on Thursday, so we rule out option B.']\nnew_fact = infer_new_fact(selected) # 'Answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_37_ed09ff63ff", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "How many of the days, Monday through Friday, are such that at most two batches of cookies could be made on that day?", "options": ["one", "two", "three", "four", "five"], "rationale": "Monday must have at least one batch of cookies made, so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday. Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1) and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "How many of the days, Monday through Friday,", "10": "are such that at most two batches of cookies could be made on that day?", "11": "A) one", "12": "B) two", "13": "C) three", "14": "D) four", "15": "E) five", "16": "Monday must have at least one batch of cookies made,", "17": "so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday.", "18": "Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1)", "19": "and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday.", "20": "The answer is A.", "21": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [6], "consequent": 16}, {"antecedents": [2, 3, 16], "consequent": 17}, {"antecedents": [7], "consequent": 18}, {"antecedents": [5, 17, 18], "consequent": 19}, {"antecedents": [9, 11, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  'How many of the days, Monday through Friday,']\nquestion = 'are such that at most two batches of cookies could be made on that day?'\nchoices = {'A': 'one', 'B': 'two', 'C': 'three', 'D': 'four', 'E': 'five'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At least one batch of cookies is made on Monday.']\nnew_fact = infer_new_fact(selected) # 'Monday must have at least one batch of cookies made,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['oatmeal, peanut butter, and sugar.', 'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'Monday must have at least one batch of cookies made,']\nnew_fact = infer_new_fact(selected) # 'so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.']\nnew_fact = infer_new_fact(selected) # 'Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No two batches of the same kind of cookie are made on the same day.', 'so at least oatmeal batch 1 (O1), peanut butter batch 1 (P1), or sugar batch 1 (S1) must be made on Monday.', 'Because the second batch of oatmeal (O2) must be made on the same day as the first batch of peanut butter cookies (P1)']\nnew_fact = infer_new_fact(selected) # 'and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many of the days, Monday through Friday,', 'A) one', 'and no batches of the same cookie can be made on the same day, P1 cannot be made on Monday.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_38_ce1a5f7128", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "If the first batch of peanut butter cookies is made on Tuesday, then each of the following could be true EXCEPT:", "options": ["Two different kinds of cookie have their first batch made on Monday.", "Two different kinds of cookie have their first batch made on Tuesday.", "Two different kinds of cookie have their second batch made on Wednesday.", "Two different kinds of cookie have their second batch made on Thursday.", "Two different kinds of cookie have their third batch made on Friday."], "rationale": "If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday. 2 batches of the same type cannot be made on the same day. Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday. We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "If the first batch of peanut butter cookies is made on Tuesday,", "10": "then each of the following could be true EXCEPT:", "11": "A) Two different kinds of cookie have their first batch made on Monday.", "12": "B) Two different kinds of cookie have their first batch made on Tuesday.", "13": "C) Two different kinds of cookie have their second batch made on Wednesday.", "14": "D) Two different kinds of cookie have their second batch made on Thursday.", "15": "E) Two different kinds of cookie have their third batch made on Friday.", "16": "If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday.", "17": "2 batches of the same type cannot be made on the same day.", "18": "Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday.", "19": "We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C.", "20": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 16}, {"antecedents": [5], "consequent": 17}, {"antecedents": [8, 17], "consequent": 18}, {"antecedents": [9, 10, 13, 16, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  'If the first batch of peanut butter cookies is made on Tuesday,']\nquestion = 'then each of the following could be true EXCEPT:'\nchoices = { 'A': 'Two different kinds of cookie have their first batch made on Monday.',\n  'B': 'Two different kinds of cookie have their first batch made on Tuesday.',\n  'C': 'Two different kinds of cookie have their second batch made on Wednesday.',\n  'D': 'Two different kinds of cookie have their second batch made on Thursday.',\n  'E': 'Two different kinds of cookie have their third batch made on Friday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.', 'If the first batch of peanut butter cookies is made on Tuesday,']\nnew_fact = infer_new_fact(selected) # 'If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No two batches of the same kind of cookie are made on the same day.']\nnew_fact = infer_new_fact(selected) # '2 batches of the same type cannot be made on the same day.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The second batch of sugar cookies is made on Thursday.', '2 batches of the same type cannot be made on the same day.']\nnew_fact = infer_new_fact(selected) # 'Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the first batch of peanut butter cookies is made on Tuesday,', 'then each of the following could be true EXCEPT:', 'C) Two different kinds of cookie have their second batch made on Wednesday.', 'If the first batch of peanut butter cookies (P1) are made on Tuesday, then oatmeal cookies batch 2 (O2) must also be made on Tuesday.', 'Sugar cookie batch 2 (S2) is made on Thursday, which indicates that sugar cookie batch 3 (S3) must be on Friday.']\nnew_fact = infer_new_fact(selected) # 'We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We know the second batches of oatmeal and sugar cookies are already assigned (to Tuesday and Thursday, respectively), so the answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AR-LSAT_39_ca1c392dd8", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "If no batch of cookies is made on Wednesday, then which one of the following must be true?", "options": ["Exactly three batches of cookies are made on Tuesday.", "Exactly three batches of cookies are made on Friday.", "At least two batches of cookies are made on Monday.", "At least two batches of cookies are made on Thursday.", "Fewer batches of cookies are made on Monday than on Tuesday."], "rationale": "Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day, P1 cannot be made on Monday. If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3). P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday. Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday. Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday. We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3). the answer is C. The answer is D)", "answer": "D", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "If no batch of cookies is made on Wednesday,", "10": "then which one of the following must be true?", "11": "A) Exactly three batches of cookies are made on Tuesday.", "12": "B) Exactly three batches of cookies are made on Friday.", "13": "C) At least two batches of cookies are made on Monday.", "14": "D) At least two batches of cookies are made on Thursday.", "15": "E) Fewer batches of cookies are made on Monday than on Tuesday.", "16": "Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,", "17": "P1 cannot be made on Monday.", "18": "If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3).", "19": "P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.", "20": "Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday.", "21": "Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday.", "22": "We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3).", "23": "the answer is C.", "24": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [7], "consequent": 16}, {"antecedents": [5, 16], "consequent": 17}, {"antecedents": [3, 16], "consequent": 18}, {"antecedents": [9, 16, 17, 18], "consequent": 19}, {"antecedents": [3, 5, 19], "consequent": 20}, {"antecedents": [3, 5, 8, 9], "consequent": 21}, {"antecedents": [16, 19, 20, 21], "consequent": 22}, {"antecedents": [9, 10, 13, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  'If no batch of cookies is made on Wednesday,']\nquestion = 'then which one of the following must be true?'\nchoices = { 'A': 'Exactly three batches of cookies are made on Tuesday.',\n  'B': 'Exactly three batches of cookies are made on Friday.',\n  'C': 'At least two batches of cookies are made on Monday.',\n  'D': 'At least two batches of cookies are made on Thursday.',\n  'E': 'Fewer batches of cookies are made on Monday than on Tuesday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.']\nnew_fact = infer_new_fact(selected) # 'Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No two batches of the same kind of cookie are made on the same day.', 'Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,']\nnew_fact = infer_new_fact(selected) # 'P1 cannot be made on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,']\nnew_fact = infer_new_fact(selected) # 'If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If no batch of cookies is made on Wednesday,', 'Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,', 'P1 cannot be made on Monday.', 'If P1 is made on Thursday or Friday, there will be no days to make peanut butter batch 3 (P3).']\nnew_fact = infer_new_fact(selected) # 'P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'No two batches of the same kind of cookie are made on the same day.', 'P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.']\nnew_fact = infer_new_fact(selected) # 'Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'No two batches of the same kind of cookie are made on the same day.', 'The second batch of sugar cookies is made on Thursday.', 'If no batch of cookies is made on Wednesday,']\nnew_fact = infer_new_fact(selected) # 'Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Since peanut butter batch 1 (P1) and oatmeal batch 2 (O2) must be made on the same day,', 'P1 can only be made on Tuesday, so P2 must be made on Thursday and P3 must be made on Friday.', 'Since O2 can only be made on Tuesday, O1 can only be made on Monday and O3 can be made either on Thursday or Friday.', 'Since sugar cookie batch 2 (S2) must be made on Thursday, sugar cookie batch 3 (S3) can only be made on Friday and sugar cookie batch one (S1) can be made on either Monday or Tuesday.']\nnew_fact = infer_new_fact(selected) # 'We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If no batch of cookies is made on Wednesday,', 'then which one of the following must be true?', 'C) At least two batches of cookies are made on Monday.', 'We know from this that at least 2 batches must be made on Tuesday (O2, P1), Thursday (P2, S2), and Friday (P3, S3).']\nnew_fact = infer_new_fact(selected) # 'the answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_40_22f97be364", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "If the number of batches made on Friday is exactly one, then which one of the following could be true?", "options": ["The first batch of sugar cookies is made on Monday.", "The first batch of oatmeal cookies is made on Tuesday.", "The third batch of oatmeal cookies is made on Friday.", "The first batch of peanut butter cookies is made on Wednesday.", "The second batch of peanut butter cookies is made on Tuesday."], "rationale": "Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday. There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday. The answer is A. The answer is A)", "answer": "A", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "If the number of batches made on Friday is exactly one,", "10": "then which one of the following could be true?", "11": "A) The first batch of sugar cookies is made on Monday.", "12": "B) The first batch of oatmeal cookies is made on Tuesday.", "13": "C) The third batch of oatmeal cookies is made on Friday.", "14": "D) The first batch of peanut butter cookies is made on Wednesday.", "15": "E) The second batch of peanut butter cookies is made on Tuesday.", "16": "Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday.", "17": "There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday.", "18": "The answer is A.", "19": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 10, 11, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  'If the number of batches made on Friday is exactly one,']\nquestion = 'then which one of the following could be true?'\nchoices = { 'A': 'The first batch of sugar cookies is made on Monday.',\n  'B': 'The first batch of oatmeal cookies is made on Tuesday.',\n  'C': 'The third batch of oatmeal cookies is made on Friday.',\n  'D': 'The first batch of peanut butter cookies is made on Wednesday.',\n  'E': 'The second batch of peanut butter cookies is made on Tuesday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No two batches of the same kind of cookie are made on the same day.', 'The second batch of sugar cookies is made on Thursday.']\nnew_fact = infer_new_fact(selected) # 'Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'Sugar cookie batch 2 must be made on Thursday, so sugar cookie batch 3 must be made on Friday.']\nnew_fact = infer_new_fact(selected) # 'There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the number of batches made on Friday is exactly one,', 'then which one of the following could be true?', 'A) The first batch of sugar cookies is made on Monday.', 'There are 3 days that sugar cookie batch 1 can be made: Monday, Tuesday, Wednesday.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_41_4afc83f245", "context": "A bakery makes exactly three kinds of cookie—oatmeal, peanut butter, and sugar. Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day. The following conditions apply: No two batches of the same kind of cookie are made on the same day. At least one batch of cookies is made on Monday. The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies. The second batch of sugar cookies is made on Thursday.", "question": "If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch, then which one of the following could be false?", "options": ["At least one batch of cookies is made on each of the five days.", "At least two batches of cookies are made on Wednesday.", "Exactly one batch of cookies is made on Monday.", "Exactly two batches of cookies are made on Tuesday.", "Exactly one batch of cookies is made on Friday."], "rationale": "Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday. Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday. If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday. Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1), P1 cannot be made on Monday. Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday. Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require). P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday. We know that 2 cookie batches can be made on Friday (S3, P3). The answer is E. The answer is E)", "answer": "E", "textual_logical_units": {"1": "A bakery makes exactly three kinds of cookie—", "2": "oatmeal, peanut butter, and sugar.", "3": "Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.", "4": "The following conditions apply:", "5": "No two batches of the same kind of cookie are made on the same day.", "6": "At least one batch of cookies is made on Monday.", "7": "The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.", "8": "The second batch of sugar cookies is made on Thursday.", "9": "If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch,", "10": "then which one of the following could be false?", "11": "A) At least one batch of cookies is made on each of the five days.", "12": "B) At least two batches of cookies are made on Wednesday.", "13": "C) Exactly one batch of cookies is made on Monday.", "14": "D) Exactly two batches of cookies are made on Tuesday.", "15": "E) Exactly one batch of cookies is made on Friday.", "16": "Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.", "17": "Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday.", "18": "If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.", "19": "Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1),", "20": "P1 cannot be made on Monday.", "21": "Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday.", "22": "Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require).", "23": "P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday.", "24": "We know that 2 cookie batches can be made on Friday (S3, P3).", "25": "The answer is E.", "26": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [9, 17], "consequent": 18}, {"antecedents": [5, 7], "consequent": 19}, {"antecedents": [19], "consequent": 20}, {"antecedents": [2, 6, 18, 20], "consequent": 21}, {"antecedents": [9, 18, 21], "consequent": 22}, {"antecedents": [3, 5, 7, 22], "consequent": 23}, {"antecedents": [16, 23], "consequent": 24}, {"antecedents": [9, 10, 15, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = [ 'A bakery makes exactly three kinds of cookie—',\n  'oatmeal, peanut butter, and sugar.',\n  'Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.',\n  'The following conditions apply:',\n  'No two batches of the same kind of cookie are made on the same day.',\n  'At least one batch of cookies is made on Monday.',\n  'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.',\n  'The second batch of sugar cookies is made on Thursday.',\n  \"If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch,\"]\nquestion = 'then which one of the following could be false?'\nchoices = { 'A': 'At least one batch of cookies is made on each of the five days.',\n  'B': 'At least two batches of cookies are made on Wednesday.',\n  'C': 'Exactly one batch of cookies is made on Monday.',\n  'D': 'Exactly two batches of cookies are made on Tuesday.',\n  'E': 'Exactly one batch of cookies is made on Friday.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['No two batches of the same kind of cookie are made on the same day.', 'The second batch of sugar cookies is made on Thursday.']\nnew_fact = infer_new_fact(selected) # 'Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.']\nnew_fact = infer_new_fact(selected) # 'Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch,\", 'Sugar cookie batch 1 (S1) can be made on Monday, Tuesday, or Wednesday.']\nnew_fact = infer_new_fact(selected) # \"If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['No two batches of the same kind of cookie are made on the same day.', 'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.']\nnew_fact = infer_new_fact(selected) # 'Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1),'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Since no 2 batches of the same cookie type can be made on the same day and the 2nd batch of oatmeal cookies (O2) must be made on the same day as the 1st batch of peanut butter cookies (P1),']\nnew_fact = infer_new_fact(selected) # 'P1 cannot be made on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['oatmeal, peanut butter, and sugar.', 'At least one batch of cookies is made on Monday.', \"If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.\", 'P1 cannot be made on Monday.']\nnew_fact = infer_new_fact(selected) # 'Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch,\", \"If we want one kind of cookie's first batch to be made on the same day as another kind of cookie's third batch, let's say S1 was made on Wednesday.\", 'Thus, only oatmeal cookie batch 1 (O1) can be made on Monday to fulfill our requirement that 1 batch of cookies must be made on Monday.']\nnew_fact = infer_new_fact(selected) # 'Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly three batches of each kind of cookie are made each week (Monday through Friday) and each batch is made, from start to finish, on a single day.', 'No two batches of the same kind of cookie are made on the same day.', 'The second batch of oatmeal cookies is made on the same day as the first batch of peanut butter cookies.', 'Because of this, O2 must be made on Tuesday, and O3 must be made on Wednesday (overlapping with S1 as we require).']\nnew_fact = infer_new_fact(selected) # 'P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sugar cookie batch 2 (S2) must be made on Thursday, so sugar cookie batch 3 (S3) must be made on Friday.', 'P1 is then made on Tuesday, and P2 can either be made on Wednesday or Thursday, which would dictate if P3 is made on Thursday or Friday.']\nnew_fact = infer_new_fact(selected) # 'We know that 2 cookie batches can be made on Friday (S3, P3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"If one kind of cookie's first batch is made on the same day as another kind of cookie's third batch,\", 'then which one of the following could be false?', 'E) Exactly one batch of cookies is made on Friday.', 'We know that 2 cookie batches can be made on Friday (S3, P3).']\nnew_fact = infer_new_fact(selected) # 'The answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_42_f87ac6d25a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "question": "Which one of the following could be an accurate and complete list of the students who review only Sunset?", "options": ["Lopez", "O'Neill", "Jiang, Lopez", "Kramer, O'Neill", "Lopez, Megregian"], "rationale": "Kramer and O'Neill review Tamerlane. B and D not options. Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer. Lopez may not review plays reviewed by Jiang. C not an answer. The answer is A The answer is A)", "answer": "A", "textual_logical_units": {"1": "For the school paper, five students—", "2": "Jiang, Kramer, Lopez, Megregian, and O'Neill—", "3": "each review one or more of exactly three plays:", "4": "Sunset, Tamerlane, and Undulation, but do not review any other plays.", "5": "The following conditions must apply:", "6": "Kramer and Lopez each review fewer of the plays than Megregian.", "7": "Neither Lopez nor Megregian reviews any play Jiang reviews.", "8": "Kramer and O'Neill both review Tamerlane.", "9": "Exactly two of the students review exactly the same play or plays as each other.", "10": "Which one of the following could be an accurate and", "11": "complete list of the students who review only Sunset?", "12": "A) Lopez", "13": "B) O'Neill", "14": "C) Jiang, Lopez", "15": "D) Kramer, O'Neill", "16": "E) Lopez, Megregian", "17": "Kramer and O'Neill review Tamerlane. B and D not options.", "18": "Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer.", "19": "Lopez may not review plays reviewed by Jiang. C not an answer.", "20": "The answer is A", "21": "The answer is A)"}, "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 13, 15], "consequent": 17}, {"antecedents": [6, 10, 11, 16], "consequent": 18}, {"antecedents": [7, 14], "consequent": 19}, {"antecedents": [10, 11, 12, 17, 18, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'For the school paper, five students—',\n  \"Jiang, Kramer, Lopez, Megregian, and O'Neill—\",\n  'each review one or more of exactly three plays:',\n  'Sunset, Tamerlane, and Undulation, but do not review any other plays.',\n  'The following conditions must apply:',\n  'Kramer and Lopez each review fewer of the plays than Megregian.',\n  'Neither Lopez nor Megregian reviews any play Jiang reviews.',\n  \"Kramer and O'Neill both review Tamerlane.\",\n  'Exactly two of the students review exactly the same play or plays as each other.',\n  'Which one of the following could be an accurate and']\nquestion = 'complete list of the students who review only Sunset?'\nchoices = {'A': 'Lopez', 'B': \"O'Neill\", 'C': 'Jiang, Lopez', 'D': \"Kramer, O'Neill\", 'E': 'Lopez, Megregian'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Kramer and O'Neill both review Tamerlane.\", 'Which one of the following could be an accurate and', 'complete list of the students who review only Sunset?', \"B) O'Neill\", \"D) Kramer, O'Neill\"]\nnew_fact = infer_new_fact(selected) # \"Kramer and O'Neill review Tamerlane. B and D not options.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'Which one of the following could be an accurate and', 'complete list of the students who review only Sunset?', 'E) Lopez, Megregian']\nnew_fact = infer_new_fact(selected) # 'Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Lopez nor Megregian reviews any play Jiang reviews.', 'C) Jiang, Lopez']\nnew_fact = infer_new_fact(selected) # 'Lopez may not review plays reviewed by Jiang. C not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be an accurate and', 'complete list of the students who review only Sunset?', 'A) Lopez', \"Kramer and O'Neill review Tamerlane. B and D not options.\", 'Kramer and Lopez must each review fewer plays that Megregian. Therefore Megregian reviews more than one. E not an answer.', 'Lopez may not review plays reviewed by Jiang. C not an answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AR-LSAT_43_5e82c8fb9f", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "question": "Which one of the following must be true?", "options": ["Jiang reviews more of the plays than Lopez does.", "Megregian reviews more of the plays than Jiang does.", "Megregian reviews more of the plays than O'Neill does.", "O'Neill reviews more of the plays than Jiang does.", "O'Neill reviews more of the plays than Kramer does."], "rationale": "The students must each review one or more of three exact plays. Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian. Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play. The answer is B. The answer is B)", "answer": "B", "textual_logical_units": {"1": "For the school paper, five students—", "2": "Jiang, Kramer, Lopez, Megregian, and O'Neill—", "3": "each review one or more of exactly three plays:", "4": "Sunset, Tamerlane, and Undulation, but do not review any other plays.", "5": "The following conditions must apply:", "6": "Kramer and Lopez each review fewer of the plays than Megregian.", "7": "Neither Lopez nor Megregian reviews any play Jiang reviews.", "8": "Kramer and O'Neill both review Tamerlane.", "9": "Exactly two of the students review exactly the same play or plays as each other.", "10": "Which one of the following must be true?", "11": "A) Jiang reviews more of the plays than Lopez does.", "12": "B) Megregian reviews more of the plays than Jiang does.", "13": "C) Megregian reviews more of the plays than O'Neill does.", "14": "D) O'Neill reviews more of the plays than Jiang does.", "15": "E) O'Neill reviews more of the plays than Kramer does.", "16": "The students must each review one or more of three exact plays.", "17": "Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian.", "18": "Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play.", "19": "The answer is B.", "20": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 16}, {"antecedents": [7, 16], "consequent": 17}, {"antecedents": [6, 17], "consequent": 18}, {"antecedents": [10, 12, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'For the school paper, five students—',\n  \"Jiang, Kramer, Lopez, Megregian, and O'Neill—\",\n  'each review one or more of exactly three plays:',\n  'Sunset, Tamerlane, and Undulation, but do not review any other plays.',\n  'The following conditions must apply:',\n  'Kramer and Lopez each review fewer of the plays than Megregian.',\n  'Neither Lopez nor Megregian reviews any play Jiang reviews.',\n  \"Kramer and O'Neill both review Tamerlane.\",\n  'Exactly two of the students review exactly the same play or plays as each other.']\nquestion = 'Which one of the following must be true?'\nchoices = { 'A': 'Jiang reviews more of the plays than Lopez does.',\n  'B': 'Megregian reviews more of the plays than Jiang does.',\n  'C': \"Megregian reviews more of the plays than O'Neill does.\",\n  'D': \"O'Neill reviews more of the plays than Jiang does.\",\n  'E': \"O'Neill reviews more of the plays than Kramer does.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['each review one or more of exactly three plays:']\nnew_fact = infer_new_fact(selected) # 'The students must each review one or more of three exact plays.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Lopez nor Megregian reviews any play Jiang reviews.', 'The students must each review one or more of three exact plays.']\nnew_fact = infer_new_fact(selected) # 'Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'Megregian and Lopez may not review any play reviewed by Jiang. That leaves at most two plays for Megregian.']\nnew_fact = infer_new_fact(selected) # 'Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following must be true?', 'B) Megregian reviews more of the plays than Jiang does.', 'Kramer and Lopez must each review fewer plays than Megregian. So, each would review one play.']\nnew_fact = infer_new_fact(selected) # 'The answer is B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_44_1ff4e8fcaf", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "question": "If exactly three of the students review Undulation, which one of the following could be true?", "options": ["Megregian does not review Undulation.", "O'Neill does not review Undulation.", "Jiang reviews Undulation.", "Lopez reviews Tamerlane.", "O'Neill reviews Sunset."], "rationale": "Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang. If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer. If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer. If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian. The answer is E The answer is E)", "answer": "E", "textual_logical_units": {"1": "For the school paper, five students—", "2": "Jiang, Kramer, Lopez, Megregian, and O'Neill—", "3": "each review one or more of exactly three plays:", "4": "Sunset, Tamerlane, and Undulation, but do not review any other plays.", "5": "The following conditions must apply:", "6": "Kramer and Lopez each review fewer of the plays than Megregian.", "7": "Neither Lopez nor Megregian reviews any play Jiang reviews.", "8": "Kramer and O'Neill both review Tamerlane.", "9": "Exactly two of the students review exactly the same play or plays as each other.", "10": "If exactly three of the students review Undulation,", "11": "which one of the following could be true?", "12": "A) Megregian does not review Undulation.", "13": "B) O'Neill does not review Undulation.", "14": "C) Jiang reviews Undulation.", "15": "D) Lopez reviews Tamerlane.", "16": "E) O'Neill reviews Sunset.", "17": "Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer", "18": "If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.", "19": "If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer.", "20": "If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer.", "21": "If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian.", "22": "The answer is E", "23": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [6, 7, 10, 14], "consequent": 17}, {"antecedents": [7, 10, 12], "consequent": 18}, {"antecedents": [6, 12, 18], "consequent": 19}, {"antecedents": [6, 7, 10, 13, 16], "consequent": 20}, {"antecedents": [6, 15], "consequent": 21}, {"antecedents": [10, 16, 17, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "code_input": "####\nfacts = [ 'For the school paper, five students—',\n  \"Jiang, Kramer, Lopez, Megregian, and O'Neill—\",\n  'each review one or more of exactly three plays:',\n  'Sunset, Tamerlane, and Undulation, but do not review any other plays.',\n  'The following conditions must apply:',\n  'Kramer and Lopez each review fewer of the plays than Megregian.',\n  'Neither Lopez nor Megregian reviews any play Jiang reviews.',\n  \"Kramer and O'Neill both review Tamerlane.\",\n  'Exactly two of the students review exactly the same play or plays as each other.',\n  'If exactly three of the students review Undulation,']\nquestion = 'which one of the following could be true?'\nchoices = { 'A': 'Megregian does not review Undulation.',\n  'B': \"O'Neill does not review Undulation.\",\n  'C': 'Jiang reviews Undulation.',\n  'D': 'Lopez reviews Tamerlane.',\n  'E': \"O'Neill reviews Sunset.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Kramer and Lopez each review fewer of the plays than Megregian.', 'Neither Lopez nor Megregian reviews any play Jiang reviews.', 'If exactly three of the students review Undulation,', 'C) Jiang reviews Undulation.']\nnew_fact = infer_new_fact(selected) # \"Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Neither Lopez nor Megregian reviews any play Jiang reviews.', 'If exactly three of the students review Undulation,', 'A) Megregian does not review Undulation.']\nnew_fact = infer_new_fact(selected) # 'If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'A) Megregian does not review Undulation.', 'If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.']\nnew_fact = infer_new_fact(selected) # 'If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'Neither Lopez nor Megregian reviews any play Jiang reviews.', 'If exactly three of the students review Undulation,', \"B) O'Neill does not review Undulation.\", \"E) O'Neill reviews Sunset.\"]\nnew_fact = infer_new_fact(selected) # \"If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'D) Lopez reviews Tamerlane.']\nnew_fact = infer_new_fact(selected) # \"If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If exactly three of the students review Undulation,', \"E) O'Neill reviews Sunset.\", \"Megragian and Lopez may not review plays reviewed by Jiang. That means Kramer, Jiang and O'neill would review Undulation. That would mean that Kramer and Megregian both review two plays. C is not an answer\", 'If Megregian does not review Undulation, it means that Jiang, Lopez, and Kramer are options to review that play. However, Lopez cannot review a play reviewed by Jiang.', 'If lopez is not considered, then Kramer is an option and he would review two plays, an equal number to Megregian. A is not an answer.', \"If O'Neill does not review Undulation, a combination of involving Jiang would rule out two students and Kramer and Megregian would review the same number of plays. B is not an answer.\", \"If Lopez reviews Tamerlane, then he cannot review Undulation since he has to review less plays than Megregian. Similarly, the combination of Megregian, Kramer and O'Neill would not be possible because Kramer needs to review less plays than Megregian.\"]\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_45_1b1005bd06", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "question": "Which one of the following could be an accurate and complete list of the students who review Tamerlane?", "options": ["Jiang, Kramer", "Kramer, O'Neill", "Kramer, Lopez, O'Neill", "Kramer, Megregian, O'Neill", "Lopez, Megregian, O'Neill"], "rationale": "Kramer and O'Neill must be included in the complete list. A and E not answers. Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers. The answer is D The answer is D)", "answer": "D", "textual_logical_units": {"1": "For the school paper, five students—", "2": "Jiang, Kramer, Lopez, Megregian, and O'Neill—", "3": "each review one or more of exactly three plays:", "4": "Sunset, Tamerlane, and Undulation, but do not review any other plays.", "5": "The following conditions must apply:", "6": "Kramer and Lopez each review fewer of the plays than Megregian.", "7": "Neither Lopez nor Megregian reviews any play Jiang reviews.", "8": "Kramer and O'Neill both review Tamerlane.", "9": "Exactly two of the students review exactly the same play or plays as each other.", "10": "Which one of the following could be an accurate and", "11": "complete list of the students who review Tamerlane?", "12": "A) Jiang, Kramer", "13": "B) Kramer, O'Neill", "14": "C) Kramer, Lopez, O'Neill", "15": "D) Kramer, Megregian, O'Neill", "16": "E) Lopez, Megregian, O'Neill", "17": "Kramer and O'Neill must be included in the complete list. A and E not answers.", "18": "Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers.", "19": "The answer is D", "20": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [8, 10, 11, 12, 16], "consequent": 17}, {"antecedents": [6, 7, 10, 11, 13, 14], "consequent": 18}, {"antecedents": [10, 11, 15, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'For the school paper, five students—',\n  \"Jiang, Kramer, Lopez, Megregian, and O'Neill—\",\n  'each review one or more of exactly three plays:',\n  'Sunset, Tamerlane, and Undulation, but do not review any other plays.',\n  'The following conditions must apply:',\n  'Kramer and Lopez each review fewer of the plays than Megregian.',\n  'Neither Lopez nor Megregian reviews any play Jiang reviews.',\n  \"Kramer and O'Neill both review Tamerlane.\",\n  'Exactly two of the students review exactly the same play or plays as each other.',\n  'Which one of the following could be an accurate and']\nquestion = 'complete list of the students who review Tamerlane?'\nchoices = {'A': 'Jiang, Kramer', 'B': \"Kramer, O'Neill\", 'C': \"Kramer, Lopez, O'Neill\", 'D': \"Kramer, Megregian, O'Neill\", 'E': \"Lopez, Megregian, O'Neill\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Kramer and O'Neill both review Tamerlane.\", 'Which one of the following could be an accurate and', 'complete list of the students who review Tamerlane?', 'A) Jiang, Kramer', \"E) Lopez, Megregian, O'Neill\"]\nnew_fact = infer_new_fact(selected) # \"Kramer and O'Neill must be included in the complete list. A and E not answers.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Kramer and Lopez each review fewer of the plays than Megregian.', 'Neither Lopez nor Megregian reviews any play Jiang reviews.', 'Which one of the following could be an accurate and', 'complete list of the students who review Tamerlane?', \"B) Kramer, O'Neill\", \"C) Kramer, Lopez, O'Neill\"]\nnew_fact = infer_new_fact(selected) # 'Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be an accurate and', 'complete list of the students who review Tamerlane?', \"D) Kramer, Megregian, O'Neill\", \"Kramer and O'Neill must be included in the complete list. A and E not answers.\", 'Since Lopez and Megregian cannot review plays reviewed by Jiang and Kramer and Lopez must each review fewer plays than Megregian, B  and C are not answers.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_46_eaf3c67b1a", "context": "For the school paper, five students—Jiang, Kramer, Lopez, Megregian, and O'Neill—each review one or more of exactly three plays: Sunset, Tamerlane, and Undulation, but do not review any other plays. The following conditions must apply: Kramer and Lopez each review fewer of the plays than Megregian. Neither Lopez nor Megregian reviews any play Jiang reviews. Kramer and O'Neill both review Tamerlane. Exactly two of the students review exactly the same play or plays as each other.", "question": "If Jiang does not review Tamerlane, then which one of the following must be true?", "options": ["Jiang reviews Sunset.", "Lopez reviews Undulation.", "Megregian reviews Sunset.", "Megregian reviews Tamerlane.", "O'Neill reviews Undulation."], "rationale": "Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian. Therefore, Megregian should review two plays, Tamerlane being one of them. The answer is D The answer is D)", "answer": "D", "textual_logical_units": {"1": "For the school paper, five students—", "2": "Jiang, Kramer, Lopez, Megregian, and O'Neill—", "3": "each review one or more of exactly three plays:", "4": "Sunset, Tamerlane, and Undulation, but do not review any other plays.", "5": "The following conditions must apply:", "6": "Kramer and Lopez each review fewer of the plays than Megregian.", "7": "Neither Lopez nor Megregian reviews any play Jiang reviews.", "8": "Kramer and O'Neill both review Tamerlane.", "9": "Exactly two of the students review exactly the same play or plays as each other.", "10": "If Jiang does not review Tamerlane,", "11": "then which one of the following must be true?", "12": "A) Jiang reviews Sunset.", "13": "B) Lopez reviews Undulation.", "14": "C) Megregian reviews Sunset.", "15": "D) Megregian reviews Tamerlane.", "16": "E) O'Neill reviews Undulation.", "17": "Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian.", "18": "Therefore, Megregian should review two plays, Tamerlane being one of them.", "19": "The answer is D", "20": "The answer is D)"}, "reasoning_graph_edges": [{"antecedents": [6, 7, 10], "consequent": 17}, {"antecedents": [15, 17], "consequent": 18}, {"antecedents": [10, 11, 15, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'For the school paper, five students—',\n  \"Jiang, Kramer, Lopez, Megregian, and O'Neill—\",\n  'each review one or more of exactly three plays:',\n  'Sunset, Tamerlane, and Undulation, but do not review any other plays.',\n  'The following conditions must apply:',\n  'Kramer and Lopez each review fewer of the plays than Megregian.',\n  'Neither Lopez nor Megregian reviews any play Jiang reviews.',\n  \"Kramer and O'Neill both review Tamerlane.\",\n  'Exactly two of the students review exactly the same play or plays as each other.',\n  'If Jiang does not review Tamerlane,']\nquestion = 'then which one of the following must be true?'\nchoices = { 'A': 'Jiang reviews Sunset.',\n  'B': 'Lopez reviews Undulation.',\n  'C': 'Megregian reviews Sunset.',\n  'D': 'Megregian reviews Tamerlane.',\n  'E': \"O'Neill reviews Undulation.\"}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Kramer and Lopez each review fewer of the plays than Megregian.', 'Neither Lopez nor Megregian reviews any play Jiang reviews.', 'If Jiang does not review Tamerlane,']\nnew_fact = infer_new_fact(selected) # 'Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) Megregian reviews Tamerlane.', 'Jiang and Megregian may not review the same plays and Kramer and Lopez must each review fewer plays than Megregian.']\nnew_fact = infer_new_fact(selected) # 'Therefore, Megregian should review two plays, Tamerlane being one of them.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Jiang does not review Tamerlane,', 'then which one of the following must be true?', 'D) Megregian reviews Tamerlane.', 'Therefore, Megregian should review two plays, Tamerlane being one of them.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AR-LSAT_47_b4bbc39217", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "question": "Which one of the following could be the assignment of parking spaces to the new employees?", "options": ["#1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu", "#1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu", "#1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn", "#1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu", "#1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn"], "rationale": "Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson Souza must come before Xu Answer is E The answer is E)", "answer": "E", "textual_logical_units": {"1": "An administrator must assign parking spaces to six new employees:", "2": "Robertson, Souza, Togowa, Vaughn, Xu, and Young.", "3": "Each of the six employees must be assigned one of the following parking spaces:", "4": "#1, #2, #3, #4, #5, or #6.", "5": "No two employees can be assigned the same parking space.", "6": "The following rules govern the assignment of parking spaces:", "7": "Young must be assigned a higher-numbered parking space than Togowa.", "8": "Xu must be assigned a higher-numbered parking space than Souza.", "9": "Robertson must be assigned a higher-numbered parking space than Young.", "10": "Robertson must be assigned parking space #1, #2, #3, or #4.", "11": "Which one of the following could be the assignment of parking spaces to the new employees?", "12": "A) #1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu", "13": "B) #1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu", "14": "C) #1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn", "15": "D) #1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu", "16": "E) #1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn", "17": "Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson", "18": "Souza must come before Xu", "19": "Answer is E", "20": "The answer is E)"}, "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 17}, {"antecedents": [8], "consequent": 18}, {"antecedents": [11, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'An administrator must assign parking spaces to six new employees:',\n  'Robertson, Souza, Togowa, Vaughn, Xu, and Young.',\n  'Each of the six employees must be assigned one of the following parking spaces:',\n  '#1, #2, #3, #4, #5, or #6.',\n  'No two employees can be assigned the same parking space.',\n  'The following rules govern the assignment of parking spaces:',\n  'Young must be assigned a higher-numbered parking space than Togowa.',\n  'Xu must be assigned a higher-numbered parking space than Souza.',\n  'Robertson must be assigned a higher-numbered parking space than Young.',\n  'Robertson must be assigned parking space #1, #2, #3, or #4.']\nquestion = 'Which one of the following could be the assignment of parking spaces to the new employees?'\nchoices = { 'A': '#1: Young; #2: Souza; #3: Vaughn; #4: Robertson; #5: Togowa; #6: Xu',\n  'B': '#1: Vaughn; #2: Togowa; #3: Young; #4: Souza; #5: Robertson; #6: Xu',\n  'C': '#1: Togowa; #2: Young; #3: Xu; #4: Robertson; #5: Souza; #6: Vaughn',\n  'D': '#1: Togowa; #2: Robertson; #3: Young; #4: Souza; #5: Vaughn; #6: Xu',\n  'E': '#1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Young must be assigned a higher-numbered parking space than Togowa.', 'Robertson must be assigned a higher-numbered parking space than Young.']\nnew_fact = infer_new_fact(selected) # 'Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Xu must be assigned a higher-numbered parking space than Souza.']\nnew_fact = infer_new_fact(selected) # 'Souza must come before Xu'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which one of the following could be the assignment of parking spaces to the new employees?', 'E) #1: Souza; #2: Togowa; #3: Young; #4: Robertson; #5: Xu; #6: Vaughn', 'Togawa must be assigned before Young. Yount must come before Robertson. From this information we understand that the order would be Togowa > Young > Robertson', 'Souza must come before Xu']\nnew_fact = infer_new_fact(selected) # 'Answer is E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AR-LSAT_48_280b5732d4", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "question": "If Togowa is assigned a higher-numbered parking space than Souza, then which one of the following could be true?", "options": ["Young is assigned parking space #2.", "Vaughn is assigned parking space #5.", "Togowa is assigned parking space #3.", "Souza is assigned parking space #2.", "Robertson is assigned parking space #3."], "rationale": "We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula. Answer is B The answer is B)", "answer": "B", "textual_logical_units": {"1": "An administrator must assign parking spaces to six new employees:", "2": "Robertson, Souza, Togowa, Vaughn, Xu, and Young.", "3": "Each of the six employees must be assigned one of the following parking spaces:", "4": "#1, #2, #3, #4, #5, or #6.", "5": "No two employees can be assigned the same parking space.", "6": "The following rules govern the assignment of parking spaces:", "7": "Young must be assigned a higher-numbered parking space than Togowa.", "8": "Xu must be assigned a higher-numbered parking space than Souza.", "9": "Robertson must be assigned a higher-numbered parking space than Young.", "10": "Robertson must be assigned parking space #1, #2, #3, or #4.", "11": "If Togowa is assigned a higher-numbered parking space than Souza,", "12": "then which one of the following could be true?", "13": "A) Young is assigned parking space #2.", "14": "B) Vaughn is assigned parking space #5.", "15": "C) Togowa is assigned parking space #3.", "16": "D) Souza is assigned parking space #2.", "17": "E) Robertson is assigned parking space #3.", "18": "We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa", "19": "We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula.", "20": "Answer is B", "21": "The answer is B)"}, "reasoning_graph_edges": [{"antecedents": [7, 8, 9, 10, 11], "consequent": 18}, {"antecedents": [2, 7, 8, 9, 10, 11, 18], "consequent": 19}, {"antecedents": [11, 12, 14, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'An administrator must assign parking spaces to six new employees:',\n  'Robertson, Souza, Togowa, Vaughn, Xu, and Young.',\n  'Each of the six employees must be assigned one of the following parking spaces:',\n  '#1, #2, #3, #4, #5, or #6.',\n  'No two employees can be assigned the same parking space.',\n  'The following rules govern the assignment of parking spaces:',\n  'Young must be assigned a higher-numbered parking space than Togowa.',\n  'Xu must be assigned a higher-numbered parking space than Souza.',\n  'Robertson must be assigned a higher-numbered parking space than Young.',\n  'Robertson must be assigned parking space #1, #2, #3, or #4.',\n  'If Togowa is assigned a higher-numbered parking space than Souza,']\nquestion = 'then which one of the following could be true?'\nchoices = { 'A': 'Young is assigned parking space #2.',\n  'B': 'Vaughn is assigned parking space #5.',\n  'C': 'Togowa is assigned parking space #3.',\n  'D': 'Souza is assigned parking space #2.',\n  'E': 'Robertson is assigned parking space #3.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Young must be assigned a higher-numbered parking space than Togowa.', 'Xu must be assigned a higher-numbered parking space than Souza.', 'Robertson must be assigned a higher-numbered parking space than Young.', 'Robertson must be assigned parking space #1, #2, #3, or #4.', 'If Togowa is assigned a higher-numbered parking space than Souza,']\nnew_fact = infer_new_fact(selected) # 'We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Robertson, Souza, Togowa, Vaughn, Xu, and Young.', 'Young must be assigned a higher-numbered parking space than Togowa.', 'Xu must be assigned a higher-numbered parking space than Souza.', 'Robertson must be assigned a higher-numbered parking space than Young.', 'Robertson must be assigned parking space #1, #2, #3, or #4.', 'If Togowa is assigned a higher-numbered parking space than Souza,', 'We know the order of 5 people out of 6 employees. Togowa comes before Young who comes before Robertson. Souza must come before Xu and Togowa']\nnew_fact = infer_new_fact(selected) # 'We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Togowa is assigned a higher-numbered parking space than Souza,', 'then which one of the following could be true?', 'B) Vaughn is assigned parking space #5.', 'We do not know the position of Vaughn. Given information we have so far, we can imagine the following formula : Souza > Xu or Togowa > Young > Robertson. Vaughn can squeeze in any of the spots as long as it does not violate the given formula.']\nnew_fact = infer_new_fact(selected) # 'Answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AR-LSAT_49_f8d1d00c99", "context": "An administrator must assign parking spaces to six new employees: Robertson, Souza, Togowa, Vaughn, Xu, and Young. Each of the six employees must be assigned one of the following parking spaces: #1, #2, #3, #4, #5, or #6. No two employees can be assigned the same parking space. The following rules govern the assignment of parking spaces: Young must be assigned a higher-numbered parking space than Togowa. Xu must be assigned a higher-numbered parking space than Souza. Robertson must be assigned a higher-numbered parking space than Young. Robertson must be assigned parking space #1, #2, #3, or #4.", "question": "The assignment of parking spaces to each of the new employees is fully and uniquely determined if which one of the following is true?", "options": ["Souza is assigned parking space #1.", "Young is assigned parking space #2.", "Vaughn is assigned parking space #3.", "Robertson is assigned parking space #4.", "Xu is assigned parking space #5."], "rationale": "Souza must be assigned to a lower numbered space than Xu. Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4. Vaughn has no restrictions on parking assignment. So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X The answer has to be C. The answer is C)", "answer": "C", "textual_logical_units": {"1": "An administrator must assign parking spaces to six new employees:", "2": "Robertson, Souza, Togowa, Vaughn, Xu, and Young.", "3": "Each of the six employees must be assigned one of the following parking spaces:", "4": "#1, #2, #3, #4, #5, or #6.", "5": "No two employees can be assigned the same parking space.", "6": "The following rules govern the assignment of parking spaces:", "7": "Young must be assigned a higher-numbered parking space than Togowa.", "8": "Xu must be assigned a higher-numbered parking space than Souza.", "9": "Robertson must be assigned a higher-numbered parking space than Young.", "10": "Robertson must be assigned parking space #1, #2, #3, or #4.", "11": "The assignment of parking spaces to each of the new employees is fully and", "12": "uniquely determined if which one of the following is true?", "13": "A) Souza is assigned parking space #1.", "14": "B) Young is assigned parking space #2.", "15": "C) Vaughn is assigned parking space #3.", "16": "D) Robertson is assigned parking space #4.", "17": "E) Xu is assigned parking space #5.", "18": "Souza must be assigned to a lower numbered space than Xu.", "19": "Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R", "20": "Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4.", "21": "Vaughn has no restrictions on parking assignment.", "22": "So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X", "23": "The answer has to be C.", "24": "The answer is C)"}, "reasoning_graph_edges": [{"antecedents": [8], "consequent": 18}, {"antecedents": [7, 9], "consequent": 19}, {"antecedents": [10, 19], "consequent": 20}, {"antecedents": [0], "consequent": 21}, {"antecedents": [18, 19, 20, 21], "consequent": 22}, {"antecedents": [11, 12, 15, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'An administrator must assign parking spaces to six new employees:',\n  'Robertson, Souza, Togowa, Vaughn, Xu, and Young.',\n  'Each of the six employees must be assigned one of the following parking spaces:',\n  '#1, #2, #3, #4, #5, or #6.',\n  'No two employees can be assigned the same parking space.',\n  'The following rules govern the assignment of parking spaces:',\n  'Young must be assigned a higher-numbered parking space than Togowa.',\n  'Xu must be assigned a higher-numbered parking space than Souza.',\n  'Robertson must be assigned a higher-numbered parking space than Young.',\n  'Robertson must be assigned parking space #1, #2, #3, or #4.',\n  'The assignment of parking spaces to each of the new employees is fully and']\nquestion = 'uniquely determined if which one of the following is true?'\nchoices = { 'A': 'Souza is assigned parking space #1.',\n  'B': 'Young is assigned parking space #2.',\n  'C': 'Vaughn is assigned parking space #3.',\n  'D': 'Robertson is assigned parking space #4.',\n  'E': 'Xu is assigned parking space #5.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Xu must be assigned a higher-numbered parking space than Souza.']\nnew_fact = infer_new_fact(selected) # 'Souza must be assigned to a lower numbered space than Xu.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Young must be assigned a higher-numbered parking space than Togowa.', 'Robertson must be assigned a higher-numbered parking space than Young.']\nnew_fact = infer_new_fact(selected) # 'Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Robertson must be assigned parking space #1, #2, #3, or #4.', 'Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R']\nnew_fact = infer_new_fact(selected) # 'Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Vaughn has no restrictions on parking assignment.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Souza must be assigned to a lower numbered space than Xu.', 'Togowa (T) must be assigned to a lower numbered space than Young (Y), who must be assigned to a lower numbered space than Robertson (R): T < Y< R', 'Robertson can only be assigned to spaces 1-4, but since at least 2 people must park in lower numbered spaces, he can only be assigned to spaces 3 and 4.', 'Vaughn has no restrictions on parking assignment.']\nnew_fact = infer_new_fact(selected) # 'So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The assignment of parking spaces to each of the new employees is fully and', 'uniquely determined if which one of the following is true?', 'C) Vaughn is assigned parking space #3.', 'So if Vaughn is assigned to space 3, then Togowa must be assigned to space 1, Young must be assigned to space 2, Robertson must be assigned to space 4, and Souza and Xu must occupy spaces 5 and 6, respectively: T Y V R S X']\nnew_fact = infer_new_fact(selected) # 'The answer has to be C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer has to be C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
