{"id": "GSM8K_0_0c3da8c7d5", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.; int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.; int2 & sent5 -> int3: The answer is 18;", "textual_logical_units": {"1": "Утки Джанет откладывают 16 яиц в день.", "2": "Каждое утро она съедает три яйца на завтрак и", "3": "каждый день печет для своих друзей маффины с четырьмя яйцами.", "4": "Оставшуюся часть она ежедневно продает на фермерском рынке по 2 доллара за свежее утиное яйцо.", "5": "Сколько долларов она зарабатывает каждый день на фермерском рынке?", "6": "Джанет продает 16 – 3 – 4 = 9 утиных яиц в день.", "7": "Каждый день она зарабатывает 9 х 2 = 18 долларов на фермерском рынке.", "8": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = [ 'Утки Джанет откладывают 16\\xa0яиц в день.',\n  'Каждое утро она съедает три яйца на завтрак и',\n  'каждый день печет для своих друзей маффины с четырьмя яйцами.',\n  'Оставшуюся часть она ежедневно продает на фермерском рынке по 2\\xa0доллара за свежее утиное яйцо.']\nquestion = 'Сколько долларов она зарабатывает каждый день на фермерском рынке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Утки Джанет откладывают 16\\xa0яиц в день.', 'Каждое утро она съедает три яйца на завтрак и', 'каждый день печет для своих друзей маффины с четырьмя яйцами.', 'Оставшуюся часть она ежедневно продает на фермерском рынке по 2\\xa0доллара за свежее утиное яйцо.']\nnew_fact = infer_new_fact(selected) # 'Джанет продает 16\\xa0–\\xa03\\xa0–\\xa04\\xa0=\\xa09 утиных яиц в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оставшуюся часть она ежедневно продает на фермерском рынке по 2\\xa0доллара за свежее утиное яйцо.', 'Джанет продает 16\\xa0–\\xa03\\xa0–\\xa04\\xa0=\\xa09 утиных яиц в день.']\nnew_fact = infer_new_fact(selected) # 'Каждый день она зарабатывает 9\\xa0х\\xa02\\xa0=\\xa018\\xa0долларов на фермерском рынке.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов она зарабатывает каждый день на фермерском рынке?', 'Каждый день она зарабатывает 9\\xa0х\\xa02\\xa0=\\xa018\\xa0долларов на фермерском рынке.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_1_e1817d7abd", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber; int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric; int2 & sent3 -> int3: The answer is 3;", "textual_logical_units": {"1": "На халат уходит 2 рулона синего полотна и", "2": "вдвое меньше белого полотна.", "3": "Сколько всего рулонов уходит на халат?", "4": "На халат уходит 2 / 2 = 1 рулон белого полотна.", "5": "Таким образом, общее количество ткани составляет 2 + 1 = 3 рулона ткани.", "6": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['На халат уходит 2 рулона синего полотна и', 'вдвое меньше белого полотна.']\nquestion = 'Сколько всего рулонов уходит на халат?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На халат уходит 2 рулона синего полотна и', 'вдвое меньше белого полотна.']\nnew_fact = infer_new_fact(selected) # 'На халат уходит 2\\xa0/\\xa02\\xa0=\\xa01 рулон белого полотна.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего рулонов уходит на халат?', 'На халат уходит 2\\xa0/\\xa02\\xa0=\\xa01 рулон белого полотна.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, общее количество ткани составляет 2\\xa0+\\xa01\\xa0=\\xa03 рулона ткани.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего рулонов уходит на халат?', 'Таким образом, общее количество ткани составляет 2\\xa0+\\xa01\\xa0=\\xa03 рулона ткани.']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_2_ecffc3947e", "context": "", "options": [], "answer": "70000", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 4], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000; sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000; int2 -> int3: So the new value of the house is 120,000+80,000=$200,000; int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000; int4 & sent5 -> int5: The answer is 70000;", "textual_logical_units": {"1": "Джош решает попробовать перепродать дом.", "2": "Он покупает дом за 80 000 долларов и", "3": "затем вкладывает 50 000 долларов в ремонт.", "4": "Это повышает стоимость дома на 150 %.", "5": "Какую прибыль он получит?", "6": "Стоимость дома и ремонта составила 80 000 + 50 000 = 130 000 долларов.", "7": "Он увеличил стоимость дома на 80 000 х 1,5 = 120 000.", "8": "Таким образом, новая стоимость дома составляет 120 000 + 80 000 = 200 000 долларов.", "9": "Следовательно, он получит прибыль в размере 200 000 – 130 000 = 70 000 долларов.", "10": "The answer is 70000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джош решает попробовать перепродать дом.',\n  'Он покупает дом за 80\\xa0000 долларов и',\n  'затем вкладывает 50\\xa0000 долларов в ремонт.',\n  'Это повышает стоимость дома на 150\\xa0%.']\nquestion = 'Какую прибыль он получит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он покупает дом за 80\\xa0000 долларов и', 'затем вкладывает 50\\xa0000 долларов в ремонт.']\nnew_fact = infer_new_fact(selected) # 'Стоимость дома и ремонта составила 80\\xa0000\\xa0+\\xa050\\xa0000\\xa0=\\xa0130\\xa0000 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он покупает дом за 80\\xa0000 долларов и', 'Это повышает стоимость дома на 150\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Он увеличил стоимость дома на 80\\xa0000\\xa0х\\xa01,5\\xa0=\\xa0120\\xa0000.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он увеличил стоимость дома на 80\\xa0000\\xa0х\\xa01,5\\xa0=\\xa0120\\xa0000.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, новая стоимость дома составляет 120\\xa0000\\xa0+\\xa080\\xa0000\\xa0=\\xa0200\\xa0000 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Стоимость дома и ремонта составила 80\\xa0000\\xa0+\\xa050\\xa0000\\xa0=\\xa0130\\xa0000 долларов.', 'Он увеличил стоимость дома на 80\\xa0000\\xa0х\\xa01,5\\xa0=\\xa0120\\xa0000.', 'Таким образом, новая стоимость дома составляет 120\\xa0000\\xa0+\\xa080\\xa0000\\xa0=\\xa0200\\xa0000 долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он получит прибыль в размере 200\\xa0000\\xa0–\\xa0130\\xa0000\\xa0=\\xa070\\xa0000 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую прибыль он получит?', 'Следовательно, он получит прибыль в размере 200\\xa0000\\xa0–\\xa0130\\xa0000\\xa0=\\xa070\\xa0000 долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70000'"}
{"id": "GSM8K_3_ac5e5c9d28", "context": "", "options": [], "answer": "540", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He sprints 3*3=9 times; int1 & sent2 -> int2: So he runs 9*60=540 meters; int2 & sent3 -> int3: The answer is 540;", "textual_logical_units": {"1": "Джеймс решает совершать 3 забега 3 раза в неделю.", "2": "За каждый забег он пробегает по 60 метров.", "3": "Сколько всего метров он пробегает в неделю?", "4": "Он бегает 3 х 3 = 9 раз.", "5": "Таким образом, он пробегает 9 х 60 = 540 метров.", "6": "The answer is 540"}, "human_translated": true, "code_input": "####\nfacts = ['Джеймс решает совершать 3\\xa0забега 3\\xa0раза в неделю.', 'За каждый забег он пробегает по 60\\xa0метров.']\nquestion = 'Сколько всего метров он пробегает в неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джеймс решает совершать 3\\xa0забега 3\\xa0раза в неделю.']\nnew_fact = infer_new_fact(selected) # 'Он бегает 3\\xa0х\\xa03\\xa0=\\xa09\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждый забег он пробегает по 60\\xa0метров.', 'Он бегает 3\\xa0х\\xa03\\xa0=\\xa09\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, он пробегает 9\\xa0х\\xa060\\xa0=\\xa0540\\xa0метров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего метров он пробегает в неделю?', 'Таким образом, он пробегает 9\\xa0х\\xa060\\xa0=\\xa0540\\xa0метров.']\nnew_fact = infer_new_fact(selected) # 'The answer is 540'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '540'"}
{"id": "GSM8K_4_7bec3d29ea", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 5, 6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.; int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.; int2 & sent6 -> int3: The answer is 20;", "textual_logical_units": {"1": "Ежедневно Венди кормит каждую свою курицу тремя чашками смешанного куриного корма, содержащего семена, мучных червей и", "2": "овощи, которые помогают курицам оставаться здоровыми.", "3": "Она дает курицам корм за три отдельные приема пищи.", "4": "Утром она дает на всех куриц 15 чашек корма.", "5": "В обед дня она дает им еще 25 чашек корма.", "6": "Сколько чашек корма ей нужно дать курицам во время последнего приема пищи, если у Венди 20 куриц?", "7": "Если каждая курица съедает 3 чашки корма в день, то для 20 куриц потребуется 3 х 20 = 60 чашек корма в день.", "8": "Если Венди дает курицам 15 чашек корма утром и 25 чашек в обед, то для последнего приема пищи потребуется 60 – 15 – 25 = 20 чашек куриного корма.", "9": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'Ежедневно Венди кормит каждую свою курицу тремя чашками смешанного куриного корма, содержащего семена, мучных червей и',\n  'овощи, которые помогают курицам оставаться здоровыми.',\n  'Она дает курицам корм за три отдельные приема пищи.',\n  'Утром она дает на всех куриц 15\\xa0чашек корма.',\n  'В обед дня она дает им еще 25\\xa0чашек корма.']\nquestion = 'Сколько чашек корма ей нужно дать курицам во время последнего приема пищи, если у Венди 20\\xa0куриц?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ежедневно Венди кормит каждую свою курицу тремя чашками смешанного куриного корма, содержащего семена, мучных червей и', 'Сколько чашек корма ей нужно дать курицам во время последнего приема пищи, если у Венди 20\\xa0куриц?']\nnew_fact = infer_new_fact(selected) # 'Если каждая курица съедает 3 чашки корма в день, то для 20 куриц потребуется 3\\xa0х\\xa020\\xa0=\\xa060\\xa0чашек корма в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Утром она дает на всех куриц 15\\xa0чашек корма.', 'В обед дня она дает им еще 25\\xa0чашек корма.', 'Сколько чашек корма ей нужно дать курицам во время последнего приема пищи, если у Венди 20\\xa0куриц?', 'Если каждая курица съедает 3 чашки корма в день, то для 20 куриц потребуется 3\\xa0х\\xa020\\xa0=\\xa060\\xa0чашек корма в день.']\nnew_fact = infer_new_fact(selected) # 'Если Венди дает курицам 15\\xa0чашек корма утром и 25\\xa0чашек в обед, то для последнего приема пищи потребуется 60\\xa0–\\xa015\\xa0–\\xa025\\xa0=\\xa020\\xa0чашек куриного корма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько чашек корма ей нужно дать курицам во время последнего приема пищи, если у Венди 20\\xa0куриц?', 'Если Венди дает курицам 15\\xa0чашек корма утром и 25\\xa0чашек в обед, то для последнего приема пищи потребуется 60\\xa0–\\xa015\\xa0–\\xa025\\xa0=\\xa020\\xa0чашек куриного корма.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_5_6f13335704", "context": "", "options": [], "answer": "64", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [2, 6], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.; sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.; int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.; int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.; int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.; int5 & sent4 -> int6: The answer is 64;", "textual_logical_units": {"1": "Кайлар пошел в магазин, чтобы купить стаканы в свою новую квартиру.", "2": "Один стакан стоит 5 долларов, но каждый второй стакан стоит всего 60 % от цены.", "3": "Кайлар хочет купить 16 стаканов.", "4": "Сколько ему нужно заплатить за них?", "5": "Цена одного стакана со скидкой составляет 60 / 100 х 5 = 3 доллара.", "6": "Если каждый второй стакан дешевле, значит, Кайлар купит 16 / 2 = 8 стаканов со скидкой.", "7": "Таким образом, за стаканы со скидкой Кайлар заплатит 8 х 3 = 24 доллара.", "8": "А за стаканы по обычной цене Кайлар заплатит 8 х 5 = 40 долларов.", "9": "Следовательно, в общей сложности за стаканы Кайлару нужно заплатить 24 + 40 = 64 доллара.", "10": "The answer is 64"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кайлар пошел в магазин, чтобы купить стаканы в свою новую квартиру.',\n  'Один стакан стоит 5\\xa0долларов, но каждый второй стакан стоит всего 60\\xa0% от цены.',\n  'Кайлар хочет купить 16\\xa0стаканов.']\nquestion = 'Сколько ему нужно заплатить за них?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Кайлар пошел в магазин, чтобы купить стаканы в свою новую квартиру.', 'Один стакан стоит 5\\xa0долларов, но каждый второй стакан стоит всего 60\\xa0% от цены.']\nnew_fact = infer_new_fact(selected) # 'Цена одного стакана со скидкой составляет 60\\xa0/\\xa0100\\xa0х\\xa05\\xa0=\\xa03\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один стакан стоит 5\\xa0долларов, но каждый второй стакан стоит всего 60\\xa0% от цены.', 'Кайлар хочет купить 16\\xa0стаканов.']\nnew_fact = infer_new_fact(selected) # 'Если каждый второй стакан дешевле, значит, Кайлар купит 16\\xa0/\\xa02\\xa0=\\xa08 стаканов со скидкой.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Цена одного стакана со скидкой составляет 60\\xa0/\\xa0100\\xa0х\\xa05\\xa0=\\xa03\\xa0доллара.', 'Если каждый второй стакан дешевле, значит, Кайлар купит 16\\xa0/\\xa02\\xa0=\\xa08 стаканов со скидкой.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, за стаканы со скидкой Кайлар заплатит 8\\xa0х\\xa03\\xa0=\\xa024\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один стакан стоит 5\\xa0долларов, но каждый второй стакан стоит всего 60\\xa0% от цены.', 'Если каждый второй стакан дешевле, значит, Кайлар купит 16\\xa0/\\xa02\\xa0=\\xa08 стаканов со скидкой.']\nnew_fact = infer_new_fact(selected) # 'А за стаканы по обычной цене Кайлар заплатит 8\\xa0х\\xa05\\xa0=\\xa040\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за стаканы со скидкой Кайлар заплатит 8\\xa0х\\xa03\\xa0=\\xa024\\xa0доллара.', 'А за стаканы по обычной цене Кайлар заплатит 8\\xa0х\\xa05\\xa0=\\xa040\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в общей сложности за стаканы Кайлару нужно заплатить 24\\xa0+\\xa040\\xa0=\\xa064 доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ему нужно заплатить за них?', 'Следовательно, в общей сложности за стаканы Кайлару нужно заплатить 24\\xa0+\\xa040\\xa0=\\xa064 доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 64'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '64'"}
{"id": "GSM8K_6_8c57a63641", "context": "", "options": [], "answer": "260", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep; int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep; int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep; int3 & sent4 -> int4: The answer is 260;", "textual_logical_units": {"1": "У Тулузы в два раза больше овец, чем у Чарльстона.", "2": "У Чарльстона в 4 раза больше овец, чем у Сиэтла.", "3": "Сколько овец у Тулузы, Чарльстона", "4": "и Сиэтла всего, если у Сиэтла 20 овец?", "5": "Если у Сиэтла 20 овец, то у Чарльстона 4 х 20 = 80 овец.", "6": "У Тулузы в два раза больше овец, чем у Чарльстона: 2 х 80 = 160 овец.", "7": "Вместе у всех троих 20 + 160 + 80 = 260 овец.", "8": "The answer is 260"}, "human_translated": true, "code_input": "####\nfacts = ['У Тулузы в два раза больше овец, чем у Чарльстона.', 'У Чарльстона в 4 раза больше овец, чем у Сиэтла.', 'Сколько овец у Тулузы, Чарльстона']\nquestion = 'и Сиэтла всего, если у Сиэтла 20\\xa0овец?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Чарльстона в 4 раза больше овец, чем у Сиэтла.', 'и Сиэтла всего, если у Сиэтла 20\\xa0овец?']\nnew_fact = infer_new_fact(selected) # 'Если у Сиэтла 20\\xa0овец, то у Чарльстона 4\\xa0х\\xa020\\xa0=\\xa080\\xa0овец.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Тулузы в два раза больше овец, чем у Чарльстона.', 'Если у Сиэтла 20\\xa0овец, то у Чарльстона 4\\xa0х\\xa020\\xa0=\\xa080\\xa0овец.']\nnew_fact = infer_new_fact(selected) # 'У Тулузы в два раза больше овец, чем у Чарльстона: 2\\xa0х\\xa080\\xa0=\\xa0160\\xa0овец.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и Сиэтла всего, если у Сиэтла 20\\xa0овец?', 'Если у Сиэтла 20\\xa0овец, то у Чарльстона 4\\xa0х\\xa020\\xa0=\\xa080\\xa0овец.', 'У Тулузы в два раза больше овец, чем у Чарльстона: 2\\xa0х\\xa080\\xa0=\\xa0160\\xa0овец.']\nnew_fact = infer_new_fact(selected) # 'Вместе у всех троих 20\\xa0+\\xa0160\\xa0+\\xa080\\xa0=\\xa0260\\xa0овец.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и Сиэтла всего, если у Сиэтла 20\\xa0овец?', 'Вместе у всех троих 20\\xa0+\\xa0160\\xa0+\\xa080\\xa0=\\xa0260\\xa0овец.']\nnew_fact = infer_new_fact(selected) # 'The answer is 260'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '260'"}
{"id": "GSM8K_7_ec85fd850b", "context": "", "options": [], "answer": "160", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [1, 2, 5], "consequent": 9}, {"antecedents": [4, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB; int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes; sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes; int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes; int4 & sent6 -> int5: The answer is 160;", "textual_logical_units": {"1": "Карла загружает файл размером 200 ГБ.", "2": "Обычно она может загружать 2 ГБ в минуту,", "3": "но 40 % времени загрузки", "4": "Windows принудительно перезагружается для установки обновлений, что занимает 20 минут.", "5": "Затем Карле придется запустить загрузку с самого начала.", "6": "Сколько времени уйдет на загрузку файла?", "7": "Сначала выясним, сколько гигабайт составляет 40 % файла: 200 ГБ х 40 % = 80 ГБ.", "8": "Затем разделим это число на скорость загрузки, чтобы узнать время, прошедшее до перезагрузки Windows: 80 ГБ / 2 ГБ в минуту = 40 минут.", "9": "Затем найдем время для загрузки всего файла после перезапуска: 200 ГБ / 2 ГБ в минуту = 100 минут.", "10": "Затем добавим время загрузки 40 % файла, загрузки всего файла и ожидания обновления Windows: 40 минут + 100 минут + 20 минут = 160 минут.", "11": "The answer is 160"}, "human_translated": true, "code_input": "####\nfacts = [ 'Карла загружает файл размером 200\\xa0ГБ.',\n  'Обычно она может загружать 2\\xa0ГБ в минуту,',\n  'но 40\\xa0% времени загрузки',\n  'Windows принудительно перезагружается для установки обновлений, что занимает 20\\xa0минут.',\n  'Затем Карле придется запустить загрузку с самого начала.']\nquestion = 'Сколько времени уйдет на загрузку файла?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Карла загружает файл размером 200\\xa0ГБ.', 'но 40\\xa0% времени загрузки']\nnew_fact = infer_new_fact(selected) # 'Сначала выясним, сколько гигабайт составляет 40\\xa0% файла: 200\\xa0ГБ\\xa0х\\xa040\\xa0%\\xa0=\\xa080\\xa0ГБ.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обычно она может загружать 2\\xa0ГБ в минуту,', 'Сначала выясним, сколько гигабайт составляет 40\\xa0% файла: 200\\xa0ГБ\\xa0х\\xa040\\xa0%\\xa0=\\xa080\\xa0ГБ.']\nnew_fact = infer_new_fact(selected) # 'Затем разделим это число на скорость загрузки, чтобы узнать время, прошедшее до перезагрузки Windows: 80 ГБ\\xa0/\\xa02\\xa0ГБ в минуту\\xa0=\\xa040\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Карла загружает файл размером 200\\xa0ГБ.', 'Обычно она может загружать 2\\xa0ГБ в минуту,', 'Затем Карле придется запустить загрузку с самого начала.']\nnew_fact = infer_new_fact(selected) # 'Затем найдем время для загрузки всего файла после перезапуска: 200\\xa0ГБ\\xa0/\\xa02\\xa0ГБ\\xa0в минуту\\xa0=\\xa0100\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Windows принудительно перезагружается для установки обновлений, что занимает 20\\xa0минут.', 'Затем разделим это число на скорость загрузки, чтобы узнать время, прошедшее до перезагрузки Windows: 80 ГБ\\xa0/\\xa02\\xa0ГБ в минуту\\xa0=\\xa040\\xa0минут.', 'Затем найдем время для загрузки всего файла после перезапуска: 200\\xa0ГБ\\xa0/\\xa02\\xa0ГБ\\xa0в минуту\\xa0=\\xa0100\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Затем добавим время загрузки 40\\xa0% файла, загрузки всего файла и ожидания обновления Windows: 40\\xa0минут\\xa0+\\xa0100\\xa0минут\\xa0+\\xa020\\xa0минут\\xa0=\\xa0160\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени уйдет на загрузку файла?', 'Затем добавим время загрузки 40\\xa0% файла, загрузки всего файла и ожидания обновления Windows: 40\\xa0минут\\xa0+\\xa0100\\xa0минут\\xa0+\\xa020\\xa0минут\\xa0=\\xa0160\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 160'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '160'"}
{"id": "GSM8K_8_f8cdd58483", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [4], "consequent": 9}, {"antecedents": [5], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [6, 7, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home; sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours; sent4 -> int3: In half an hour he goes 30*.5=15 miles; sent5 -> int4: He then drives another 2-.5=1.5 hours; int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles; int3 & int5 -> int6: So he drove 120+15=135 miles; int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home; int7 & sent6 -> int8: The answer is 45;", "textual_logical_units": {"1": "Джон едет 3 часа со скоростью 60 миль в час, а", "2": "затем разворачивается, потому что понимает, что забыл дома что-то очень важное.", "3": "Он пытается добраться домой за 4 часа, но первые 2 часа стоит в пробке.", "4": "Следующие полчаса он едет со скоростью 30 миль в час,", "5": "прежде чем у него получается проехать оставшееся из 4 часов время со скоростью 80 миль в час.", "6": "Как далеко он будет от дома по истечении этих 4 часов?", "7": "Когда он повернул назад, он находился в 3 х 60 = 180 милях от дома.", "8": "В начале он смог ехать всего 4 – 2 = 2 часа.", "9": "За полчаса он преодолевает 30 х 0,5 = 15 миль.", "10": "Затем он едет еще 2 – 0,5 = 1,5 часа.", "11": "За это время он преодолевает 80 х 1,5 = 120 миль.", "12": "Следовательно, он проехал 120 + 15 = 135 миль.", "13": "Итак, он находится в 180 – 135 = 45 милях от дома.", "14": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон едет 3\\xa0часа со скоростью 60\\xa0миль в час, а',\n  'затем разворачивается, потому что понимает, что забыл дома что-то очень важное.',\n  'Он пытается добраться домой за 4\\xa0часа, но первые 2\\xa0часа стоит в пробке.',\n  'Следующие полчаса он едет со скоростью 30\\xa0миль в час,',\n  'прежде чем у него получается проехать оставшееся из 4\\xa0часов время со скоростью 80\\xa0миль в час.']\nquestion = 'Как далеко он будет от дома по истечении этих 4\\xa0часов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джон едет 3\\xa0часа со скоростью 60\\xa0миль в час, а', 'затем разворачивается, потому что понимает, что забыл дома что-то очень важное.']\nnew_fact = infer_new_fact(selected) # 'Когда он повернул назад, он находился в 3\\xa0х\\xa060\\xa0=\\xa0180\\xa0милях от дома.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он пытается добраться домой за 4\\xa0часа, но первые 2\\xa0часа стоит в пробке.']\nnew_fact = infer_new_fact(selected) # 'В начале он смог ехать всего 4\\xa0–\\xa02\\xa0=\\xa02\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следующие полчаса он едет со скоростью 30\\xa0миль в час,']\nnew_fact = infer_new_fact(selected) # 'За полчаса он преодолевает 30\\xa0х\\xa00,5\\xa0=\\xa015\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['прежде чем у него получается проехать оставшееся из 4\\xa0часов время со скоростью 80\\xa0миль в час.']\nnew_fact = infer_new_fact(selected) # 'Затем он едет еще 2\\xa0–\\xa00,5\\xa0=\\xa01,5\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['прежде чем у него получается проехать оставшееся из 4\\xa0часов время со скоростью 80\\xa0миль в час.', 'Затем он едет еще 2\\xa0–\\xa00,5\\xa0=\\xa01,5\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'За это время он преодолевает 80\\xa0х\\xa01,5\\xa0=\\xa0120\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За полчаса он преодолевает 30\\xa0х\\xa00,5\\xa0=\\xa015\\xa0миль.', 'За это время он преодолевает 80\\xa0х\\xa01,5\\xa0=\\xa0120\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он проехал 120\\xa0+\\xa015\\xa0=\\xa0135\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как далеко он будет от дома по истечении этих 4\\xa0часов?', 'Когда он повернул назад, он находился в 3\\xa0х\\xa060\\xa0=\\xa0180\\xa0милях от дома.', 'Следовательно, он проехал 120\\xa0+\\xa015\\xa0=\\xa0135\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Итак, он находится в 180\\xa0–\\xa0135\\xa0=\\xa045\\xa0милях от дома.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как далеко он будет от дома по истечении этих 4\\xa0часов?', 'Итак, он находится в 180\\xa0–\\xa0135\\xa0=\\xa045\\xa0милях от дома.']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_9_81d0fa7c02", "context": "", "options": [], "answer": "460", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [4, 7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.; sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.; int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.; sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.; int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.; int5 & sent4 -> int6: The answer is 460;", "textual_logical_units": {"1": "Оплата работы Элизы за час в первые 40 часов работы в неделю составляет 10 долларов.", "2": "За сверхурочную работу она получает в 1,2 раза больше обычной почасовой ставки.", "3": "Если бы Элиза работала 45 часов на этой неделе,", "4": "сколько она заработала?", "5": "Элиза имеет право на оплату отработанных сверхурочных 45 – 40 = 5 часов.", "6": "Ее почасовая оплата сверхурочных составляет 10 х 1,2 доллара = 12 долларов.", "7": "Таким образом, Элиза получит 12 x 5 = 60 долларов за сверхурочную работу.", "8": "Ее обычный заработок за неделю составляет 10 x 40 = 400 долларов.", "9": "Таким образом, за работу на этой неделе Элиза получит в общей сложности 400 долларов + 60 долларов = 460 долларов.", "10": "The answer is 460"}, "human_translated": true, "code_input": "####\nfacts = [ 'Оплата работы Элизы за час в первые 40\\xa0часов работы в неделю составляет 10\\xa0долларов.',\n  'За сверхурочную работу она получает в 1,2\\xa0раза больше обычной почасовой ставки.',\n  'Если бы Элиза работала 45\\xa0часов на этой неделе,']\nquestion = 'сколько она заработала?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Оплата работы Элизы за час в первые 40\\xa0часов работы в неделю составляет 10\\xa0долларов.', 'Если бы Элиза работала 45\\xa0часов на этой неделе,']\nnew_fact = infer_new_fact(selected) # 'Элиза имеет право на оплату отработанных сверхурочных 45\\xa0–\\xa040\\xa0=\\xa05\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оплата работы Элизы за час в первые 40\\xa0часов работы в неделю составляет 10\\xa0долларов.', 'За сверхурочную работу она получает в 1,2\\xa0раза больше обычной почасовой ставки.']\nnew_fact = infer_new_fact(selected) # 'Ее почасовая оплата сверхурочных составляет 10\\xa0х\\xa01,2 доллара\\xa0=\\xa012\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Элиза имеет право на оплату отработанных сверхурочных 45\\xa0–\\xa040\\xa0=\\xa05\\xa0часов.', 'Ее почасовая оплата сверхурочных составляет 10\\xa0х\\xa01,2 доллара\\xa0=\\xa012\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, Элиза получит 12\\xa0x\\xa05\\xa0=\\xa060\\xa0долларов за сверхурочную работу.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оплата работы Элизы за час в первые 40\\xa0часов работы в неделю составляет 10\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Ее обычный заработок за неделю составляет 10\\xa0x\\xa040\\xa0=\\xa0400\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько она заработала?', 'Таким образом, Элиза получит 12\\xa0x\\xa05\\xa0=\\xa060\\xa0долларов за сверхурочную работу.', 'Ее обычный заработок за неделю составляет 10\\xa0x\\xa040\\xa0=\\xa0400\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, за работу на этой неделе Элиза получит в общей сложности 400\\xa0долларов\\xa0+\\xa060\\xa0долларов\\xa0=\\xa0460\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько она заработала?', 'Таким образом, за работу на этой неделе Элиза получит в общей сложности 400\\xa0долларов\\xa0+\\xa060\\xa0долларов\\xa0=\\xa0460\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 460'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '460'"}
{"id": "GSM8K_10_35eaba6383", "context": "", "options": [], "answer": "366", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180; int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240; int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54; int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.; int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366; int5 & sent4 -> int6: The answer is 366;", "textual_logical_units": {"1": "За первый месяц новую программу скачали 60 раз.", "2": "Количество загрузок за второй месяц было в три раза больше, чем за первый месяц, но затем", "3": "снизилось на 30 % за третий месяц.", "4": "Сколько всего загрузок программы было за три месяца?", "5": "Количество загрузок программы за второй месяц выросло до 3 х 60 = 180.", "6": "За первые два месяца общее количество загрузок программы составило 180 + 60 = 240.", "7": "За третий месяц количество загрузок программы уменьшилось на 30 / 100 х 180 = 54.", "8": "В третьем месяце было 180 – 54 = 126 загрузок.", "9": "За три месяца общее количество загрузок программы составило 126 + 240 = 366.", "10": "The answer is 366"}, "human_translated": true, "code_input": "####\nfacts = [ 'За первый месяц новую программу скачали 60\\xa0раз.',\n  'Количество загрузок за второй месяц было в три раза больше, чем за первый месяц, но затем',\n  'снизилось на 30\\xa0% за третий месяц.']\nquestion = 'Сколько всего загрузок программы было за три месяца?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['За первый месяц новую программу скачали 60\\xa0раз.', 'Количество загрузок за второй месяц было в три раза больше, чем за первый месяц, но затем']\nnew_fact = infer_new_fact(selected) # 'Количество загрузок программы за второй месяц выросло до 3\\xa0х\\xa060\\xa0=\\xa0180.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За первый месяц новую программу скачали 60\\xa0раз.', 'Количество загрузок программы за второй месяц выросло до 3\\xa0х\\xa060\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'За первые два месяца общее количество загрузок программы составило 180\\xa0+\\xa060\\xa0=\\xa0240.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['снизилось на 30\\xa0% за третий месяц.', 'Количество загрузок программы за второй месяц выросло до 3\\xa0х\\xa060\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'За третий месяц количество загрузок программы уменьшилось на 30\\xa0/\\xa0100\\xa0х\\xa0180\\xa0=\\xa054.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество загрузок программы за второй месяц выросло до 3\\xa0х\\xa060\\xa0=\\xa0180.', 'За третий месяц количество загрузок программы уменьшилось на 30\\xa0/\\xa0100\\xa0х\\xa0180\\xa0=\\xa054.']\nnew_fact = infer_new_fact(selected) # 'В третьем месяце было 180\\xa0–\\xa054\\xa0=\\xa0126\\xa0загрузок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За первые два месяца общее количество загрузок программы составило 180\\xa0+\\xa060\\xa0=\\xa0240.', 'В третьем месяце было 180\\xa0–\\xa054\\xa0=\\xa0126\\xa0загрузок.']\nnew_fact = infer_new_fact(selected) # 'За три месяца общее количество загрузок программы составило 126\\xa0+\\xa0240\\xa0=\\xa0366.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего загрузок программы было за три месяца?', 'За три месяца общее количество загрузок программы составило 126\\xa0+\\xa0240\\xa0=\\xa0366.']\nnew_fact = infer_new_fact(selected) # 'The answer is 366'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '366'"}
{"id": "GSM8K_11_f765a410ff", "context": "", "options": [], "answer": "694", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [6, 7, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.; sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.; sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.; int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.; int4 & sent6 -> int5: The answer is 694;", "textual_logical_units": {"1": "Тула пошла в пекарню и", "2": "купила различную выпечку.", "3": "Она купила 3 дюжины пончиков по 68 долларов за дюжину,", "4": "2 дюжины мини-кексов по цене 80 долларов за дюжину", "5": "и 6 дюжин мини-чизкейков по 55 долларов за дюжину.", "6": "Какова была общая стоимость?", "7": "Общая стоимость пончиков составила 3 x 68 долларов = 204 доллара.", "8": "Общая стоимость мини-кексов составила 2 x 80 долларов = 160 долларов.", "9": "Общая стоимость мини-чизкейка составила 6 x 55 долларов = 330 долларов.", "10": "Таким образом, общая сумма, которую Тула заплатила за выпечку, составила 204 + 160 + 330 = 694 доллара.", "11": "The answer is 694"}, "human_translated": true, "code_input": "####\nfacts = [ 'Тула пошла в пекарню и',\n  'купила различную выпечку.',\n  'Она купила 3\\xa0дюжины пончиков по 68\\xa0долларов за дюжину,',\n  '2\\xa0дюжины мини-кексов по цене 80\\xa0долларов за дюжину',\n  'и 6\\xa0дюжин мини-чизкейков по 55\\xa0долларов за дюжину.']\nquestion = 'Какова была общая стоимость?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она купила 3\\xa0дюжины пончиков по 68\\xa0долларов за дюжину,']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость пончиков составила 3\\xa0x\\xa068\\xa0долларов\\xa0=\\xa0204\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0дюжины мини-кексов по цене 80\\xa0долларов за дюжину']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость мини-кексов составила 2\\xa0x\\xa080\\xa0долларов\\xa0=\\xa0160\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 6\\xa0дюжин мини-чизкейков по 55\\xa0долларов за дюжину.']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость мини-чизкейка составила 6\\xa0x 55\\xa0долларов\\xa0=\\xa0330\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова была общая стоимость?', 'Общая стоимость пончиков составила 3\\xa0x\\xa068\\xa0долларов\\xa0=\\xa0204\\xa0доллара.', 'Общая стоимость мини-кексов составила 2\\xa0x\\xa080\\xa0долларов\\xa0=\\xa0160\\xa0долларов.', 'Общая стоимость мини-чизкейка составила 6\\xa0x 55\\xa0долларов\\xa0=\\xa0330\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, общая сумма, которую Тула заплатила за выпечку, составила 204\\xa0+\\xa0160\\xa0+\\xa0330\\xa0=\\xa0694\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова была общая стоимость?', 'Таким образом, общая сумма, которую Тула заплатила за выпечку, составила 204\\xa0+\\xa0160\\xa0+\\xa0330\\xa0=\\xa0694\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 694'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '694'"}
{"id": "GSM8K_12_b192b3e028", "context": "", "options": [], "answer": "13", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [2, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5; int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5; int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12; int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13; int4 & sent6 -> int5: The answer is 13;", "textual_logical_units": {"1": "Карлос сажает лимонное дерево.", "2": "Посадка дерева обойдется в 90 долларов.", "3": "Каждый год на дереве будут вырастать 7 лимонов,", "4": "которые Карлос может продать по 1,5 доллара за штуку.", "5": "Полив и удобрение дерева стоят 3 доллара в год.", "6": "Сколько лет пройдет, прежде чем Карлос начнет зарабатывать на лимонном дереве?", "7": "Он зарабатывает 10,5 долларов, продавая лимоны каждый год, потому что 7 x 1,5 = 10,5.", "8": "Всего у него остается 7,5 долларов в год, потому что 10,5 – 3 = 7,5.", "9": "Чтобы заработать достаточно денег и окупить дерево, потребуется 12 лет, потому что 90 / 7,5 = 12.", "10": "Он заработает деньги в 13-м году, потому что 12 + 1 = 13.", "11": "The answer is 13"}, "human_translated": true, "code_input": "####\nfacts = [ 'Карлос сажает лимонное дерево.',\n  'Посадка дерева обойдется в 90\\xa0долларов.',\n  'Каждый год на дереве будут вырастать 7\\xa0лимонов,',\n  'которые Карлос может продать по 1,5\\xa0доллара за штуку.',\n  'Полив и удобрение дерева стоят 3\\xa0доллара в год.']\nquestion = 'Сколько лет пройдет, прежде чем Карлос начнет зарабатывать на лимонном дереве?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый год на дереве будут вырастать 7\\xa0лимонов,', 'которые Карлос может продать по 1,5\\xa0доллара за штуку.']\nnew_fact = infer_new_fact(selected) # 'Он зарабатывает 10,5\\xa0долларов, продавая лимоны каждый год, потому что 7\\xa0x\\xa01,5\\xa0=\\xa010,5.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Полив и удобрение дерева стоят 3\\xa0доллара в год.', 'Он зарабатывает 10,5\\xa0долларов, продавая лимоны каждый год, потому что 7\\xa0x\\xa01,5\\xa0=\\xa010,5.']\nnew_fact = infer_new_fact(selected) # 'Всего у него остается 7,5\\xa0долларов в год, потому что 10,5\\xa0–\\xa03\\xa0=\\xa07,5.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Посадка дерева обойдется в 90\\xa0долларов.', 'Сколько лет пройдет, прежде чем Карлос начнет зарабатывать на лимонном дереве?', 'Всего у него остается 7,5\\xa0долларов в год, потому что 10,5\\xa0–\\xa03\\xa0=\\xa07,5.']\nnew_fact = infer_new_fact(selected) # 'Чтобы заработать достаточно денег и окупить дерево, потребуется 12\\xa0лет, потому что 90\\xa0/\\xa07,5\\xa0=\\xa012.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет пройдет, прежде чем Карлос начнет зарабатывать на лимонном дереве?', 'Чтобы заработать достаточно денег и окупить дерево, потребуется 12\\xa0лет, потому что 90\\xa0/\\xa07,5\\xa0=\\xa012.']\nnew_fact = infer_new_fact(selected) # 'Он заработает деньги в 13-м году, потому что 12\\xa0+\\xa01\\xa0=\\xa013.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет пройдет, прежде чем Карлос начнет зарабатывать на лимонном дереве?', 'Он заработает деньги в 13-м году, потому что 12\\xa0+\\xa01\\xa0=\\xa013.']\nnew_fact = infer_new_fact(selected) # 'The answer is 13'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '13'"}
{"id": "GSM8K_13_bf283ac359", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10; int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12; int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18; int3 & sent6 -> int4: The answer is 18;", "textual_logical_units": {"1": "Мелани — коммивояжер.", "2": "Она продала треть пылесосов в зеленом доме,", "3": "еще 2 в красном доме", "4": "и половину оставшихся в оранжевом доме.", "5": "Если у Мелани осталось 5 пылесосов,", "6": "с каким количеством она начала?", "7": "Сначала умножим пять оставшихся пылесосов на два, чтобы узнать, сколько их было у Мелани до того, как она посетила оранжевый дом: 5 х 2 = 10.", "8": "Затем добавим два пылесоса, чтобы узнать, сколько пылесосов у нее было до посещения красного дома: 10 + 2 = 12.", "9": "Теперь мы знаем, что 2 / 3 х X = 12, где X — количество пылесосов, с которым Мелани начинала. Мы можем найти X, разделив каждую часть уравнения на 2/3, в результате чего X = 18.", "10": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мелани\\xa0— коммивояжер.',\n  'Она продала треть пылесосов в зеленом доме,',\n  'еще 2 в красном доме',\n  'и половину оставшихся в оранжевом доме.',\n  'Если у Мелани осталось 5\\xa0пылесосов,']\nquestion = 'с каким количеством она начала?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и половину оставшихся в оранжевом доме.', 'Если у Мелани осталось 5\\xa0пылесосов,']\nnew_fact = infer_new_fact(selected) # 'Сначала умножим пять оставшихся пылесосов на два, чтобы узнать, сколько их было у Мелани до того, как она посетила оранжевый дом: 5\\xa0х\\xa02\\xa0=\\xa010.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['еще 2 в красном доме', 'Сначала умножим пять оставшихся пылесосов на два, чтобы узнать, сколько их было у Мелани до того, как она посетила оранжевый дом: 5\\xa0х\\xa02\\xa0=\\xa010.']\nnew_fact = infer_new_fact(selected) # 'Затем добавим два пылесоса, чтобы узнать, сколько пылесосов у нее было до посещения красного дома: 10\\xa0+\\xa02\\xa0=\\xa012.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она продала треть пылесосов в зеленом доме,', 'Затем добавим два пылесоса, чтобы узнать, сколько пылесосов у нее было до посещения красного дома: 10\\xa0+\\xa02\\xa0=\\xa012.']\nnew_fact = infer_new_fact(selected) # 'Теперь мы знаем, что 2\\xa0/\\xa03\\xa0х X\\xa0=\\xa012, где X\\xa0— количество пылесосов, с которым Мелани начинала. Мы можем найти X, разделив каждую часть уравнения на 2/3, в результате чего X\\xa0=\\xa018.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['с каким количеством она начала?', 'Теперь мы знаем, что 2\\xa0/\\xa03\\xa0х X\\xa0=\\xa012, где X\\xa0— количество пылесосов, с которым Мелани начинала. Мы можем найти X, разделив каждую часть уравнения на 2/3, в результате чего X\\xa0=\\xa018.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_14_e601ee3b3e", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [1, 5, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.; int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.; int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.; int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.; int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.; int5 & sent5 -> int6: The answer is 60;", "textual_logical_units": {"1": "На танцевальных курсах из 20 учеников", "2": "20 % обучаются современным танцам,", "3": "25 % остальных учеников занимались джазовым танцем,", "4": "а остальные занимались танцами в стиле хип-хоп.", "5": "Какой процент от общего числа студентов занимается хип-хопом?", "6": "Современному танцу обучаются 20 x 20 / 100 = 4 ученика.", "7": "Таким образом, 20 – 4 = 16 студентов обучаются джазовому танцу или хип-хопу.", "8": "Джазовым танцем занимаются 16 x 25 / 100 = 4 ученика.", "9": "Таким образом, 16 – 4 = 12 учеников занимаются хип-хопом.", "10": "Это 12 / 20 x 100 % = 60 % от общего числа учеников.", "11": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = [ 'На танцевальных курсах из 20\\xa0учеников',\n  '20\\xa0% обучаются современным танцам,',\n  '25\\xa0% остальных учеников занимались джазовым танцем,',\n  'а остальные занимались танцами в стиле хип-хоп.']\nquestion = 'Какой процент от общего числа студентов занимается хип-хопом?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На танцевальных курсах из 20\\xa0учеников', '20\\xa0% обучаются современным танцам,']\nnew_fact = infer_new_fact(selected) # 'Современному танцу обучаются 20\\xa0x\\xa020\\xa0/\\xa0100\\xa0=\\xa04\\xa0ученика.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25\\xa0% остальных учеников занимались джазовым танцем,', 'а остальные занимались танцами в стиле хип-хоп.', 'Современному танцу обучаются 20\\xa0x\\xa020\\xa0/\\xa0100\\xa0=\\xa04\\xa0ученика.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, 20\\xa0–\\xa04\\xa0=\\xa016 студентов обучаются джазовому танцу или хип-хопу.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25\\xa0% остальных учеников занимались джазовым танцем,', 'Таким образом, 20\\xa0–\\xa04\\xa0=\\xa016 студентов обучаются джазовому танцу или хип-хопу.']\nnew_fact = infer_new_fact(selected) # 'Джазовым танцем занимаются 16\\xa0x\\xa025\\xa0/\\xa0100\\xa0=\\xa04\\xa0ученика.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25\\xa0% остальных учеников занимались джазовым танцем,', 'Джазовым танцем занимаются 16\\xa0x\\xa025\\xa0/\\xa0100\\xa0=\\xa04\\xa0ученика.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, 16\\xa0–\\xa04\\xa0=\\xa012\\xa0учеников занимаются хип-хопом.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На танцевальных курсах из 20\\xa0учеников', 'Какой процент от общего числа студентов занимается хип-хопом?', 'Таким образом, 16\\xa0–\\xa04\\xa0=\\xa012\\xa0учеников занимаются хип-хопом.']\nnew_fact = infer_new_fact(selected) # 'Это 12\\xa0/\\xa020\\xa0x\\xa0100\\xa0%\\xa0=\\xa060\\xa0% от общего числа учеников.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой процент от общего числа студентов занимается хип-хопом?', 'Это 12\\xa0/\\xa020\\xa0x\\xa0100\\xa0%\\xa0=\\xa060\\xa0% от общего числа учеников.']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_15_213dd01190", "context": "", "options": [], "answer": "125", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125; sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96; int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125; int3 & sent4 -> int4: The answer is 125;", "textual_logical_units": {"1": "Предприниматель хочет выбрать между двумя планами закупок: ювелирные изделия на сумму 5000 долларов или электронные гаджеты на сумму 8000 долларов.", "2": "Его финансовый консультант предполагает, что рынок ювелирных изделий вырастет на 2,5 %, а рынок электронных гаджетов вырастет на 1,2 % за тот же месяц.", "3": "Если предприниматель хочет получить максимальную прибыль в конце этого месяца благодаря своему выбору,", "4": "какую прибыль он получит?", "5": "Если он купит украшения, то получит прибыль в размере 2,5 %, что составляет 5000 долларов х (2,5 / 100) = 125 долларов.", "6": "Если он купит электронные гаджеты, он получит прибыль в размере 1,2 %, что составляет 8000 долларов х (1,2 / 100) = 96 долларов.", "7": "Если он хочет получить максимальную прибыль, то выберет покупку ювелирных изделий, т. к. 125 долларов > 96 долларов.", "8": "The answer is 125"}, "human_translated": true, "code_input": "####\nfacts = [ 'Предприниматель хочет выбрать между двумя планами закупок: ювелирные изделия на сумму 5000\\xa0долларов или электронные гаджеты на сумму 8000\\xa0долларов.',\n  'Его финансовый консультант предполагает, что рынок ювелирных изделий вырастет на 2,5\\xa0%, а рынок электронных гаджетов вырастет на 1,2\\xa0% за тот же '\n  'месяц.',\n  'Если предприниматель хочет получить максимальную прибыль в конце этого месяца благодаря своему выбору,']\nquestion = 'какую прибыль он получит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Предприниматель хочет выбрать между двумя планами закупок: ювелирные изделия на сумму 5000\\xa0долларов или электронные гаджеты на сумму 8000\\xa0долларов.', 'Его финансовый консультант предполагает, что рынок ювелирных изделий вырастет на 2,5\\xa0%, а рынок электронных гаджетов вырастет на 1,2\\xa0% за тот же месяц.']\nnew_fact = infer_new_fact(selected) # 'Если он купит украшения, то получит прибыль в размере 2,5\\xa0%, что составляет 5000 долларов\\xa0х\\xa0(2,5\\xa0/\\xa0100)\\xa0=\\xa0125\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предприниматель хочет выбрать между двумя планами закупок: ювелирные изделия на сумму 5000\\xa0долларов или электронные гаджеты на сумму 8000\\xa0долларов.', 'Его финансовый консультант предполагает, что рынок ювелирных изделий вырастет на 2,5\\xa0%, а рынок электронных гаджетов вырастет на 1,2\\xa0% за тот же месяц.']\nnew_fact = infer_new_fact(selected) # 'Если он купит электронные гаджеты, он получит прибыль в размере 1,2\\xa0%, что составляет 8000\\xa0долларов\\xa0х\\xa0(1,2\\xa0/\\xa0100)\\xa0=\\xa096\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если предприниматель хочет получить максимальную прибыль в конце этого месяца благодаря своему выбору,', 'Если он купит украшения, то получит прибыль в размере 2,5\\xa0%, что составляет 5000 долларов\\xa0х\\xa0(2,5\\xa0/\\xa0100)\\xa0=\\xa0125\\xa0долларов.', 'Если он купит электронные гаджеты, он получит прибыль в размере 1,2\\xa0%, что составляет 8000\\xa0долларов\\xa0х\\xa0(1,2\\xa0/\\xa0100)\\xa0=\\xa096\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Если он хочет получить максимальную прибыль, то выберет покупку ювелирных изделий, т.\\xa0к.\\xa0125\\xa0долларов\\xa0>\\xa096\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какую прибыль он получит?', 'Если он хочет получить максимальную прибыль, то выберет покупку ювелирных изделий, т.\\xa0к.\\xa0125\\xa0долларов\\xa0>\\xa096\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 125'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '125'"}
{"id": "GSM8K_16_ce6da24bec", "context": "", "options": [], "answer": "230", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.; sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.; int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles; int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train; int4 & sent4 -> int5: The answer is 230;", "textual_logical_units": {"1": "Два поезда отправляются из Сан-Рафаэля одновременно.", "2": "Они начинают двигаться на запад, оба преодолевают расстояние в 80 миль.", "3": "На следующий день они отправляются на север, преодолевая расстояние в 150 миль.", "4": "Какое расстояние преодолевает каждый поезд за два дня?", "5": "В первый день поезда вместе преодолели 2 поезда х 80 миль = 160 миль на двоих.", "6": "За второй день они преодолели 150 миль х 2 поезда= 300 миль на двоих.", "7": "Суммарное расстояние, пройденное двумя поездами за два дня, составляет 300 миль + 160 миль = 460 миль.", "8": "Среднее расстояние за два дня составляет 460 миль / 2 поезда = 230 миль на поезд.", "9": "The answer is 230"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два поезда отправляются из Сан-Рафаэля одновременно.',\n  'Они начинают двигаться на запад, оба преодолевают расстояние в 80\\xa0миль.',\n  'На следующий день они отправляются на север, преодолевая расстояние в 150\\xa0миль.']\nquestion = 'Какое расстояние преодолевает каждый поезд за два дня?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Два поезда отправляются из Сан-Рафаэля одновременно.', 'Они начинают двигаться на запад, оба преодолевают расстояние в 80\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'В первый день поезда вместе преодолели 2\\xa0поезда х\\xa080\\xa0миль\\xa0=\\xa0160\\xa0миль на двоих.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Два поезда отправляются из Сан-Рафаэля одновременно.', 'На следующий день они отправляются на север, преодолевая расстояние в 150\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'За второй день они преодолели 150 миль\\xa0х\\xa02\\xa0поезда= 300\\xa0миль на двоих.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый день поезда вместе преодолели 2\\xa0поезда х\\xa080\\xa0миль\\xa0=\\xa0160\\xa0миль на двоих.', 'За второй день они преодолели 150 миль\\xa0х\\xa02\\xa0поезда= 300\\xa0миль на двоих.']\nnew_fact = infer_new_fact(selected) # 'Суммарное расстояние, пройденное двумя поездами за два дня, составляет 300\\xa0миль\\xa0+\\xa0160\\xa0миль\\xa0=\\xa0460\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние преодолевает каждый поезд за два дня?', 'За второй день они преодолели 150 миль\\xa0х\\xa02\\xa0поезда= 300\\xa0миль на двоих.', 'Суммарное расстояние, пройденное двумя поездами за два дня, составляет 300\\xa0миль\\xa0+\\xa0160\\xa0миль\\xa0=\\xa0460\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Среднее расстояние за два дня составляет 460\\xa0миль\\xa0/\\xa02\\xa0поезда\\xa0=\\xa0230\\xa0миль на поезд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние преодолевает каждый поезд за два дня?', 'Среднее расстояние за два дня составляет 460\\xa0миль\\xa0/\\xa02\\xa0поезда\\xa0=\\xa0230\\xa0миль на поезд.']\nnew_fact = infer_new_fact(selected) # 'The answer is 230'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '230'"}
{"id": "GSM8K_17_db87bf5161", "context": "", "options": [], "answer": "57500", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 6}, {"antecedents": [2, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week; sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week; int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week; int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500; int4 & sent5 -> int5: The answer is 57500;", "textual_logical_units": {"1": "Джилл получает 20 долларов в час за преподавание и", "2": "30 долларов за работу тренером по чирлидингу.", "3": "Если она работает 50 недель в году,", "4": "35 часов в неделю в качестве учителя и", "5": "15 часов в неделю в качестве тренера, какова ее годовая зарплата?", "6": "Сначала найдите общую сумму, которую Джилл зарабатывает за неделю в качестве учителя: 20 долларов в час х 35 часов в неделю = 700 долларов в неделю.", "7": "Затем найдите общую сумму, которую Джилл зарабатывает за неделю работы тренером: 30 долларов в час х 15 часов в неделю = 450 долларов в неделю.", "8": "Затем сложите эти две суммы, чтобы найти общую сумму, которую Джилл зарабатывает за неделю: 700 долларов в неделю + 450 долларов в неделю = 1150 долларов в неделю.", "9": "Затем умножьте это число на количество недель, в течение которых Джилл работает в году, чтобы вычислить ее годовую зарплату: 1150 долларов в неделю х 50 недель в год = 57 500 долларов.", "10": "The answer is 57500"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джилл получает 20\\xa0долларов в час за преподавание и',\n  '30\\xa0долларов за работу тренером по чирлидингу.',\n  'Если она работает 50\\xa0недель в году,',\n  '35\\xa0часов в неделю в качестве учителя и']\nquestion = '15\\xa0часов в неделю в качестве тренера, какова ее годовая зарплата?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джилл получает 20\\xa0долларов в час за преподавание и', '35\\xa0часов в неделю в качестве учителя и']\nnew_fact = infer_new_fact(selected) # 'Сначала найдите общую сумму, которую Джилл зарабатывает за неделю в качестве учителя: 20\\xa0долларов в час\\xa0х\\xa035\\xa0часов в неделю\\xa0=\\xa0700\\xa0долларов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['30\\xa0долларов за работу тренером по чирлидингу.', '15\\xa0часов в неделю в качестве тренера, какова ее годовая зарплата?']\nnew_fact = infer_new_fact(selected) # 'Затем найдите общую сумму, которую Джилл зарабатывает за неделю работы тренером: 30\\xa0долларов в час\\xa0х\\xa015\\xa0часов в неделю\\xa0=\\xa0450\\xa0долларов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала найдите общую сумму, которую Джилл зарабатывает за неделю в качестве учителя: 20\\xa0долларов в час\\xa0х\\xa035\\xa0часов в неделю\\xa0=\\xa0700\\xa0долларов в неделю.', 'Затем найдите общую сумму, которую Джилл зарабатывает за неделю работы тренером: 30\\xa0долларов в час\\xa0х\\xa015\\xa0часов в неделю\\xa0=\\xa0450\\xa0долларов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Затем сложите эти две суммы, чтобы найти общую сумму, которую Джилл зарабатывает за неделю: 700\\xa0долларов в неделю\\xa0+\\xa0450\\xa0долларов в неделю\\xa0=\\xa01150\\xa0долларов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если она работает 50\\xa0недель в году,', 'Затем сложите эти две суммы, чтобы найти общую сумму, которую Джилл зарабатывает за неделю: 700\\xa0долларов в неделю\\xa0+\\xa0450\\xa0долларов в неделю\\xa0=\\xa01150\\xa0долларов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Затем умножьте это число на количество недель, в течение которых Джилл работает в году, чтобы вычислить ее годовую зарплату: 1150\\xa0долларов в неделю\\xa0х\\xa050\\xa0недель в год\\xa0=\\xa057\\xa0500 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['15\\xa0часов в неделю в качестве тренера, какова ее годовая зарплата?', 'Затем умножьте это число на количество недель, в течение которых Джилл работает в году, чтобы вычислить ее годовую зарплату: 1150\\xa0долларов в неделю\\xa0х\\xa050\\xa0недель в год\\xa0=\\xa057\\xa0500 долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 57500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '57500'"}
{"id": "GSM8K_18_18856591b9", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week; int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs; int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs; int3 & sent2 -> int4: The answer is 7;", "textual_logical_units": {"1": "Клэр каждое утро готовит на завтрак омлет из 3 яиц.", "2": "Сколько дюжин яиц она съест за 4 недели?", "3": "Она ест 3 яйца каждый день, а в неделе 7 дней, поэтому она ест 3 х 7 = 21 яйцо в неделю.", "4": "Через 4 недели она съест 4 х 21 = 84 яйца.", "5": "В дюжине 12 яиц, а Клэр она съест 84 яйца, так что 84 / 12 = 7 дюжин яиц.", "6": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = ['Клэр каждое утро готовит на завтрак омлет из 3\\xa0яиц.']\nquestion = 'Сколько дюжин яиц она съест за 4\\xa0недели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Клэр каждое утро готовит на завтрак омлет из 3\\xa0яиц.']\nnew_fact = infer_new_fact(selected) # 'Она ест 3\\xa0яйца каждый день, а в неделе 7\\xa0дней, поэтому она ест 3\\xa0х\\xa07\\xa0=\\xa021\\xa0яйцо в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дюжин яиц она съест за 4\\xa0недели?', 'Она ест 3\\xa0яйца каждый день, а в неделе 7\\xa0дней, поэтому она ест 3\\xa0х\\xa07\\xa0=\\xa021\\xa0яйцо в неделю.']\nnew_fact = infer_new_fact(selected) # 'Через 4\\xa0недели она съест 4\\xa0х\\xa021\\xa0=\\xa084\\xa0яйца.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дюжин яиц она съест за 4\\xa0недели?', 'Через 4\\xa0недели она съест 4\\xa0х\\xa021\\xa0=\\xa084\\xa0яйца.']\nnew_fact = infer_new_fact(selected) # 'В дюжине 12\\xa0яиц, а Клэр она съест 84\\xa0яйца, так что 84\\xa0/\\xa012\\xa0=\\xa07\\xa0дюжин яиц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дюжин яиц она съест за 4\\xa0недели?', 'В дюжине 12\\xa0яиц, а Клэр она съест 84\\xa0яйца, так что 84\\xa0/\\xa012\\xa0=\\xa07\\xa0дюжин яиц.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_19_c5a60611f6", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [2, 3, 6], "consequent": 7}, {"antecedents": [1, 2, 3], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours; int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour; sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles; int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph; int4 & sent5 -> int5: The answer is 6;", "textual_logical_units": {"1": "Марисса отправляется в поход по маршруту протяженностью 12 миль.", "2": "Ей потребовался 1 час, чтобы пройти первые 4 мили,", "3": "затем еще час, чтобы пройти следующие 2 мили.", "4": "Если она хочет, чтобы ее средняя скорость составляла 4 мили в час,", "5": "какая скорость (в милях в час) ей нужна, чтобы пройти оставшееся расстояние?", "6": "Сначала выясните, сколько часов нужно, чтобы пройти маршрут длиной 12 миль со скоростью 4 мили в час, разделив расстояние на скорость: 12 миль / 4 миль в час = 3 часа.", "7": "Затем вычтите время, которое Марисса уже провела в походе, чтобы узнать, сколько времени у нее осталось: 3 часа – 1 час – 1 час = 1 час.", "8": "Теперь выясните, какое расстояние ей осталось пройти, вычтя из общего расстояния то, которое она уже преодолела: 12 миль – 4 мили – 2 мили = 6 миль.", "9": "Теперь разделите оставшееся расстояние на оставшееся время, чтобы узнать, с какой скоростью в милях в час должна идти Марисса: 6 миль / 1 час = 6 миль в час.", "10": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = [ 'Марисса отправляется в поход по маршруту протяженностью 12\\xa0миль.',\n  'Ей потребовался 1\\xa0час, чтобы пройти первые 4\\xa0мили,',\n  'затем еще час, чтобы пройти следующие 2\\xa0мили.',\n  'Если она хочет, чтобы ее средняя скорость составляла 4\\xa0мили в час,']\nquestion = 'какая скорость (в милях в час) ей нужна, чтобы пройти оставшееся расстояние?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Марисса отправляется в поход по маршруту протяженностью 12\\xa0миль.', 'Ей потребовался 1\\xa0час, чтобы пройти первые 4\\xa0мили,']\nnew_fact = infer_new_fact(selected) # 'Сначала выясните, сколько часов нужно, чтобы пройти маршрут длиной 12\\xa0миль со скоростью 4\\xa0мили в час, разделив расстояние на скорость: 12 миль\\xa0/\\xa04\\xa0миль в час\\xa0=\\xa03\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ей потребовался 1\\xa0час, чтобы пройти первые 4\\xa0мили,', 'затем еще час, чтобы пройти следующие 2\\xa0мили.', 'Сначала выясните, сколько часов нужно, чтобы пройти маршрут длиной 12\\xa0миль со скоростью 4\\xa0мили в час, разделив расстояние на скорость: 12 миль\\xa0/\\xa04\\xa0миль в час\\xa0=\\xa03\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Затем вычтите время, которое Марисса уже провела в походе, чтобы узнать, сколько времени у нее осталось: 3\\xa0часа\\xa0– 1\\xa0час\\xa0–\\xa01\\xa0час\\xa0=\\xa01\\xa0час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марисса отправляется в поход по маршруту протяженностью 12\\xa0миль.', 'Ей потребовался 1\\xa0час, чтобы пройти первые 4\\xa0мили,', 'затем еще час, чтобы пройти следующие 2\\xa0мили.']\nnew_fact = infer_new_fact(selected) # 'Теперь выясните, какое расстояние ей осталось пройти, вычтя из общего расстояния то, которое она уже преодолела: 12\\xa0миль\\xa0–\\xa04\\xa0мили\\xa0–\\xa02\\xa0мили\\xa0=\\xa06\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какая скорость (в милях в час) ей нужна, чтобы пройти оставшееся расстояние?', 'Теперь выясните, какое расстояние ей осталось пройти, вычтя из общего расстояния то, которое она уже преодолела: 12\\xa0миль\\xa0–\\xa04\\xa0мили\\xa0–\\xa02\\xa0мили\\xa0=\\xa06\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Теперь разделите оставшееся расстояние на оставшееся время, чтобы узнать, с какой скоростью в милях в час должна идти Марисса: 6\\xa0миль\\xa0/\\xa01\\xa0час\\xa0=\\xa06\\xa0миль в час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какая скорость (в милях в час) ей нужна, чтобы пройти оставшееся расстояние?', 'Теперь разделите оставшееся расстояние на оставшееся время, чтобы узнать, с какой скоростью в милях в час должна идти Марисса: 6\\xa0миль\\xa0/\\xa01\\xa0час\\xa0=\\xa06\\xa0миль в час.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_20_ea9cd7843f", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [1, 4], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.; sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.; int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.; int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.; int4 & sent5 -> int5: The answer is 15;", "textual_logical_units": {"1": "У меня есть 10 литров апельсинового напитка, который на две трети состоит из воды и", "2": "я хочу добавить его в 15 литров ананасового напитка, который на три пятых состоит из воды.", "3": "Но когда я наливаю его,", "4": "я проливаю один литр апельсинового напитка.", "5": "Сколько воды в оставшихся 24 литрах?", "6": "В 15 литрах ананасового напитка 15 x 3/5 = 9 литров воды.", "7": "После того, как я пролил 1 литр апельсинового напитка осталось 10 – 1 = 9 литров апельсинового напитка.", "8": "Из 9 литров 9 x 2/3 = 6 литров — это вода.", "9": "Таким образом, всего в 24 литрах напитка 9 + 6 = 15 литров воды.", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = [ 'У меня есть 10\\xa0литров апельсинового напитка, который на две трети состоит из воды и',\n  'я хочу добавить его в 15\\xa0литров ананасового напитка, который на три пятых состоит из воды.',\n  'Но когда я наливаю его,',\n  'я проливаю один литр апельсинового напитка.']\nquestion = 'Сколько воды в оставшихся 24\\xa0литрах?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['я хочу добавить его в 15\\xa0литров ананасового напитка, который на три пятых состоит из воды.']\nnew_fact = infer_new_fact(selected) # 'В 15\\xa0литрах ананасового напитка 15\\xa0x\\xa03/5\\xa0=\\xa09\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У меня есть 10\\xa0литров апельсинового напитка, который на две трети состоит из воды и', 'я проливаю один литр апельсинового напитка.']\nnew_fact = infer_new_fact(selected) # 'После того, как я пролил 1\\xa0литр апельсинового напитка осталось 10\\xa0–\\xa01\\xa0=\\xa09\\xa0литров апельсинового напитка.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У меня есть 10\\xa0литров апельсинового напитка, который на две трети состоит из воды и', 'После того, как я пролил 1\\xa0литр апельсинового напитка осталось 10\\xa0–\\xa01\\xa0=\\xa09\\xa0литров апельсинового напитка.']\nnew_fact = infer_new_fact(selected) # 'Из 9 литров 9\\xa0x\\xa02/3\\xa0=\\xa06\\xa0литров\\xa0— это вода.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько воды в оставшихся 24\\xa0литрах?', 'В 15\\xa0литрах ананасового напитка 15\\xa0x\\xa03/5\\xa0=\\xa09\\xa0литров воды.', 'Из 9 литров 9\\xa0x\\xa02/3\\xa0=\\xa06\\xa0литров\\xa0— это вода.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, всего в 24 литрах напитка 9\\xa0+\\xa06\\xa0=\\xa015 литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько воды в оставшихся 24\\xa0литрах?', 'Таким образом, всего в 24 литрах напитка 9\\xa0+\\xa06\\xa0=\\xa015 литров воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_21_6858311ee4", "context": "", "options": [], "answer": "14", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.; int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.; int2 & sent5 -> int3: The answer is 14;", "textual_logical_units": {"1": "Раймонд и Саманта — двоюродные брат и сестра.", "2": "Раймонд родился на 6 лет раньше Саманты.", "3": "В 23 года у Раймонда родился сын.", "4": "Если Саманте сейчас 31 год,", "5": "сколько лет назад у Раймонда родился сын?", "6": "Когда у Раймонда родился сын, Саманте было 23 – 6 = 17 лет.", "7": "Таким образом, прошло 31 – 17 = 14 лет с момента рождения сына Раймонда.", "8": "The answer is 14"}, "human_translated": true, "code_input": "####\nfacts = [ 'Раймонд и Саманта\\xa0— двоюродные брат и сестра.',\n  'Раймонд родился на 6\\xa0лет раньше Саманты.',\n  'В 23\\xa0года у Раймонда родился сын.',\n  'Если Саманте сейчас 31\\xa0год,']\nquestion = 'сколько лет назад у Раймонда родился сын?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Раймонд родился на 6\\xa0лет раньше Саманты.', 'В 23\\xa0года у Раймонда родился сын.']\nnew_fact = infer_new_fact(selected) # 'Когда у Раймонда родился сын, Саманте было 23\\xa0–\\xa06\\xa0=\\xa017\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Саманте сейчас 31\\xa0год,', 'сколько лет назад у Раймонда родился сын?', 'Когда у Раймонда родился сын, Саманте было 23\\xa0–\\xa06\\xa0=\\xa017\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, прошло 31\\xa0–\\xa017\\xa0=\\xa014\\xa0лет с момента рождения сына Раймонда.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько лет назад у Раймонда родился сын?', 'Таким образом, прошло 31\\xa0–\\xa017\\xa0=\\xa014\\xa0лет с момента рождения сына Раймонда.']\nnew_fact = infer_new_fact(selected) # 'The answer is 14'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '14'"}
{"id": "GSM8K_22_b2e7b4eecc", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [5, 6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.; sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.; int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.; int3 & sent6 -> int4: The answer is 7;", "textual_logical_units": {"1": "Билли продает DVD-диски.", "2": "Во вторник у него было 8 клиентов.", "3": "Его первые три покупателя покупают по одному DVD.", "4": "Его следующие 2 клиента покупают по 2 DVD каждый.", "5": "Его последние 3 клиента не покупают DVD-диски.", "6": "Сколько DVD-дисков Билли продал во вторник?", "7": "Его первые 3 клиента покупают 3 х 1 = 3 DVD.", "8": "Следующие двое клиентов покупают 2 х 2 = 4 DVD.", "9": "Билл продал в общей сложности 3 + 4 + 0 = 7 DVD-дисков.", "10": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = [ 'Билли продает DVD-диски.',\n  'Во вторник у него было 8 клиентов.',\n  'Его первые три покупателя покупают по одному DVD.',\n  'Его следующие 2\\xa0клиента покупают по 2\\xa0DVD каждый.',\n  'Его последние 3\\xa0клиента не покупают DVD-диски.']\nquestion = 'Сколько DVD-дисков Билли продал во вторник?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Его первые три покупателя покупают по одному DVD.']\nnew_fact = infer_new_fact(selected) # 'Его первые 3\\xa0клиента покупают 3\\xa0х\\xa01\\xa0=\\xa03\\xa0DVD.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Его следующие 2\\xa0клиента покупают по 2\\xa0DVD каждый.']\nnew_fact = infer_new_fact(selected) # 'Следующие двое клиентов покупают 2\\xa0х\\xa02\\xa0=\\xa04\\xa0DVD.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Его последние 3\\xa0клиента не покупают DVD-диски.', 'Сколько DVD-дисков Билли продал во вторник?', 'Его первые 3\\xa0клиента покупают 3\\xa0х\\xa01\\xa0=\\xa03\\xa0DVD.', 'Следующие двое клиентов покупают 2\\xa0х\\xa02\\xa0=\\xa04\\xa0DVD.']\nnew_fact = infer_new_fact(selected) # 'Билл продал в общей сложности 3\\xa0+\\xa04\\xa0+\\xa00\\xa0=\\xa07\\xa0DVD-дисков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько DVD-дисков Билли продал во вторник?', 'Билл продал в общей сложности 3\\xa0+\\xa04\\xa0+\\xa00\\xa0=\\xa07\\xa0DVD-дисков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_23_ddd8cf9c35", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent2 -> int1: The candle burns for 5 - 1 = 4 hours.; int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.; int2 & sent2 -> int3: The answer is 8;", "textual_logical_units": {"1": "Свеча тает на 2 сантиметра каждый час, пока она горит.", "2": "На сколько сантиметров короче будет свеча после горения с 13:00 до 17:00?", "3": "Свеча горит 5 – 1 = 4 часа.", "4": "Таким образом, свеча станет короче на 2 х 4 = 8 сантиметров.", "5": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['Свеча тает на 2\\xa0сантиметра каждый час, пока она горит.']\nquestion = 'На сколько сантиметров короче будет свеча после горения с 13:00\\xa0до\\xa017:00?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На сколько сантиметров короче будет свеча после горения с 13:00\\xa0до\\xa017:00?']\nnew_fact = infer_new_fact(selected) # 'Свеча горит 5\\xa0–\\xa01\\xa0=\\xa04\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Свеча тает на 2\\xa0сантиметра каждый час, пока она горит.', 'Свеча горит 5\\xa0–\\xa01\\xa0=\\xa04\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, свеча станет короче на 2\\xa0х\\xa04\\xa0=\\xa08\\xa0сантиметров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько сантиметров короче будет свеча после горения с 13:00\\xa0до\\xa017:00?', 'Таким образом, свеча станет короче на 2\\xa0х\\xa04\\xa0=\\xa08\\xa0сантиметров.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_24_18a7cbe01d", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.; int1 -> int2: Combining like terms, we get .75X = $19.50; int2 -> int3: Dividing both sides by .75, we get X = $26.; int3 & sent3 -> int4: The answer is 26;", "textual_logical_units": {"1": "Кайл купил прошлогодний бестселлер за 19,50 долларов.", "2": "Это была цена со скидкой 25 % от первоначальной.", "3": "Какова была первоначальная цена книги?", "4": "Пусть X будет исходной ценой книги. Цена со скидкой составляет X – X х 25 % = 19,50 долларов.", "5": "Сгруппировав подобные члены, мы получим 0,75X = 19,50 долларов.", "6": "Разделив обе стороны на 0,75 мы получим, что X = 26 долларов.", "7": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = ['Кайл купил прошлогодний бестселлер за 19,50\\xa0долларов.', 'Это была цена со скидкой 25\\xa0% от первоначальной.']\nquestion = 'Какова была первоначальная цена книги?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Кайл купил прошлогодний бестселлер за 19,50\\xa0долларов.', 'Это была цена со скидкой 25\\xa0% от первоначальной.', 'Какова была первоначальная цена книги?']\nnew_fact = infer_new_fact(selected) # 'Пусть X будет исходной ценой книги. Цена со скидкой составляет X\\xa0–\\xa0X\\xa0х\\xa025\\xa0%\\xa0=\\xa019,50 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть X будет исходной ценой книги. Цена со скидкой составляет X\\xa0–\\xa0X\\xa0х\\xa025\\xa0%\\xa0=\\xa019,50 долларов.']\nnew_fact = infer_new_fact(selected) # 'Сгруппировав подобные члены, мы получим 0,75X\\xa0=\\xa019,50\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сгруппировав подобные члены, мы получим 0,75X\\xa0=\\xa019,50\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Разделив обе стороны на 0,75\\xa0мы получим, что X\\xa0=\\xa026\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова была первоначальная цена книги?', 'Разделив обе стороны на 0,75\\xa0мы получим, что X\\xa0=\\xa026\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_25_c2b12baadd", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [1, 7, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: Five packs of milk cost $3 x 5 = $15.; sent3 -> int2: Four apples cost $1.50 x 4 = $6.; int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.; int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.; int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.; int5 & sent6 -> int6: The answer is 2;", "textual_logical_units": {"1": "Мари заказала одно блюдо с курицей стоимостью 12 долларов,", "2": "5 упаковок молока по 3 доллара за штуку,", "3": "4 яблока стоимостью 1,50 доллара каждое", "4": "и несколько коробок пиццы.", "5": "Мари заплатила в общей сложности 50 долларов.", "6": "Сколько коробок пиццы заказала Мари, если каждая стоит 8,50 долларов?", "7": "Пять упаковок молока стоят 3 х 5 = 15 долларов.", "8": "Четыре яблока стоят 1,50 доллара x 4 = 6 долларов.", "9": "Общая стоимость блюда с курицей, молока и яблок составляет 12 долларов + 15 долларов + 6 долларов = 33 доллара.", "10": "Таким образом, пицца стоит 50 – 33 доллара = 17 долларов.", "11": "Следовательно, заказ Мари: 17 долларов / 8,50 долларов = 2 коробки пиццы.", "12": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мари заказала одно блюдо с курицей стоимостью 12\\xa0долларов,',\n  '5\\xa0упаковок молока по 3\\xa0доллара за штуку,',\n  '4\\xa0яблока стоимостью 1,50\\xa0доллара каждое',\n  'и несколько коробок пиццы.',\n  'Мари заплатила в общей сложности 50\\xa0долларов.']\nquestion = 'Сколько коробок пиццы заказала Мари, если каждая стоит 8,50\\xa0долларов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5\\xa0упаковок молока по 3\\xa0доллара за штуку,']\nnew_fact = infer_new_fact(selected) # 'Пять упаковок молока стоят 3\\xa0х\\xa05\\xa0=\\xa015\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4\\xa0яблока стоимостью 1,50\\xa0доллара каждое']\nnew_fact = infer_new_fact(selected) # 'Четыре яблока стоят 1,50\\xa0доллара\\xa0x\\xa04\\xa0=\\xa06\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мари заказала одно блюдо с курицей стоимостью 12\\xa0долларов,', 'Пять упаковок молока стоят 3\\xa0х\\xa05\\xa0=\\xa015\\xa0долларов.', 'Четыре яблока стоят 1,50\\xa0доллара\\xa0x\\xa04\\xa0=\\xa06\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость блюда с курицей, молока и яблок составляет 12\\xa0долларов\\xa0+\\xa015\\xa0долларов\\xa0+\\xa06\\xa0долларов\\xa0=\\xa033\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и несколько коробок пиццы.', 'Мари заплатила в общей сложности 50\\xa0долларов.', 'Общая стоимость блюда с курицей, молока и яблок составляет 12\\xa0долларов\\xa0+\\xa015\\xa0долларов\\xa0+\\xa06\\xa0долларов\\xa0=\\xa033\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, пицца стоит 50\\xa0–\\xa033\\xa0доллара\\xa0=\\xa017\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько коробок пиццы заказала Мари, если каждая стоит 8,50\\xa0долларов?', 'Таким образом, пицца стоит 50\\xa0–\\xa033\\xa0доллара\\xa0=\\xa017\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, заказ Мари: 17\\xa0долларов\\xa0/\\xa08,50\\xa0долларов\\xa0=\\xa02\\xa0коробки пиццы.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько коробок пиццы заказала Мари, если каждая стоит 8,50\\xa0долларов?', 'Следовательно, заказ Мари: 17\\xa0долларов\\xa0/\\xa08,50\\xa0долларов\\xa0=\\xa02\\xa0коробки пиццы.']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_26_ab1d75e849", "context": "", "options": [], "answer": "243", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243; int1 & sent6 -> int2: Mishka spent $243 on clothing.; int2 & sent6 -> int3: The answer is 243;", "textual_logical_units": {"1": "Мишка купил 3 пары шорт, 3 пары брюк", "2": "и 3 пары обуви.", "3": "Одна пара шорт стоит 16,50 долларов.", "4": "Одна пара брюк стоит 22,50 долларов и", "5": "одна пара обуви стоит 42 доллара.", "6": "Сколько долларов Мишка потратил на всю одежду?", "7": "3 х (16,50 + 22,50 + 42) = 243 доллара.", "8": "Мишка потратил 243 доллара на одежду.", "9": "The answer is 243"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мишка купил 3\\xa0пары шорт, 3\\xa0пары брюк',\n  'и 3\\xa0пары обуви.',\n  'Одна пара шорт стоит 16,50\\xa0долларов.',\n  'Одна пара брюк стоит 22,50\\xa0долларов и',\n  'одна пара обуви стоит 42\\xa0доллара.']\nquestion = 'Сколько долларов Мишка потратил на всю одежду?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Мишка купил 3\\xa0пары шорт, 3\\xa0пары брюк', 'и 3\\xa0пары обуви.', 'Одна пара шорт стоит 16,50\\xa0долларов.', 'Одна пара брюк стоит 22,50\\xa0долларов и', 'одна пара обуви стоит 42\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # '3\\xa0х\\xa0(16,50\\xa0+\\xa022,50\\xa0+\\xa042)\\xa0=\\xa0243\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов Мишка потратил на всю одежду?', '3\\xa0х\\xa0(16,50\\xa0+\\xa022,50\\xa0+\\xa042)\\xa0=\\xa0243\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Мишка потратил 243\\xa0доллара на одежду.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов Мишка потратил на всю одежду?', 'Мишка потратил 243\\xa0доллара на одежду.']\nnew_fact = infer_new_fact(selected) # 'The answer is 243'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '243'"}
{"id": "GSM8K_27_05688c8d4e", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream; int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00; int2 & sent3 -> int3: The answer is 16;", "textual_logical_units": {"1": "Синтия каждый вечер съедает одну порцию мороженого.", "2": "Она покупает упаковки мороженого по 15 порций в коробке по цене 4 доллара за упаковку.", "3": "Сколько она потратит на мороженое за 60 дней?", "4": "В каждой упаковке мороженого 15 порций, Синтия ест 1 порцию за вечер, поэтому через 60 дней она съест 60 / 15 = 4 упаковки мороженого.", "5": "Если каждая упаковка стоит 4 доллара, а ей нужно 4 упаковки, то она потратит 4 х 4 = 16 долларов.", "6": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['Синтия каждый вечер съедает одну порцию мороженого.', 'Она покупает упаковки мороженого по 15\\xa0порций в коробке по цене 4\\xa0доллара за упаковку.']\nquestion = 'Сколько она потратит на мороженое за 60\\xa0дней?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Синтия каждый вечер съедает одну порцию мороженого.', 'Она покупает упаковки мороженого по 15\\xa0порций в коробке по цене 4\\xa0доллара за упаковку.', 'Сколько она потратит на мороженое за 60\\xa0дней?']\nnew_fact = infer_new_fact(selected) # 'В каждой упаковке мороженого 15\\xa0порций, Синтия ест 1\\xa0порцию за вечер, поэтому через 60\\xa0дней она съест 60\\xa0/\\xa015\\xa0=\\xa04\\xa0упаковки мороженого.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она покупает упаковки мороженого по 15\\xa0порций в коробке по цене 4\\xa0доллара за упаковку.', 'В каждой упаковке мороженого 15\\xa0порций, Синтия ест 1\\xa0порцию за вечер, поэтому через 60\\xa0дней она съест 60\\xa0/\\xa015\\xa0=\\xa04\\xa0упаковки мороженого.']\nnew_fact = infer_new_fact(selected) # 'Если каждая упаковка стоит 4\\xa0доллара, а ей нужно 4 упаковки, то она потратит 4\\xa0х\\xa04\\xa0=\\xa016\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько она потратит на мороженое за 60\\xa0дней?', 'Если каждая упаковка стоит 4\\xa0доллара, а ей нужно 4 упаковки, то она потратит 4\\xa0х\\xa04\\xa0=\\xa016\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_28_931b3848f4", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.; int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.; int2 & sent4 -> int3: The answer is 25;", "textual_logical_units": {"1": "Генри сделал две остановки во время своей 60-мильной поездки на велосипеде.", "2": "Первый раз он остановился через 20 миль.", "3": "Его вторая остановка была за 15 миль до конца поездки.", "4": "Сколько миль он проехал между первой и второй остановками?", "5": "Он проехал 20 миль + 15 миль = 35 миль, не считая расстояния между остановками.", "6": "Генри проехал 60 миль – 35 миль = 25 миль между первой и второй остановками.", "7": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = [ 'Генри сделал две остановки во время своей 60-мильной поездки на велосипеде.',\n  'Первый раз он остановился через 20\\xa0миль.',\n  'Его вторая остановка была за 15\\xa0миль до конца поездки.']\nquestion = 'Сколько миль он проехал между первой и второй остановками?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Первый раз он остановился через 20\\xa0миль.', 'Его вторая остановка была за 15\\xa0миль до конца поездки.']\nnew_fact = infer_new_fact(selected) # 'Он проехал 20\\xa0миль\\xa0+\\xa015\\xa0миль\\xa0=\\xa035\\xa0миль, не считая расстояния между остановками.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Генри сделал две остановки во время своей 60-мильной поездки на велосипеде.', 'Он проехал 20\\xa0миль\\xa0+\\xa015\\xa0миль\\xa0=\\xa035\\xa0миль, не считая расстояния между остановками.']\nnew_fact = infer_new_fact(selected) # 'Генри проехал 60\\xa0миль\\xa0–\\xa035\\xa0миль\\xa0=\\xa025\\xa0миль между первой и второй остановками.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько миль он проехал между первой и второй остановками?', 'Генри проехал 60\\xa0миль\\xa0–\\xa035\\xa0миль\\xa0=\\xa025\\xa0миль между первой и второй остановками.']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_29_bea1855c2f", "context": "", "options": [], "answer": "104", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 -> int1: The second pair of heels costs 33 * 2 = $66.; int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.; int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.; int3 & sent6 -> int4: The answer is 104;", "textual_logical_units": {"1": "Глория выбирает обувь и находит на пару ботинок, соответствующих ее бюджету.", "2": "Однако ей приходится выбирать между ботинками и", "3": "двумя парами туфель на шпильке, которые вместе стоят на пять долларов дешевле ботинок.", "4": "Если одна пара туфель стоит 33 доллара, а", "5": "другая в два раза дороже,", "6": "сколько долларов стоят ботинки?", "7": "Вторая пара туфель стоит 33 x 2 = 66 долларов.", "8": "Две пары туфель вместе стоят 66 + 33 = 99 долларов.", "9": "Ботинки стоят на 5 долларов дороже, чем обе пары туфель вместе взятые, поэтому ботинки стоят 99 + 5 = 104 доллара.", "10": "The answer is 104"}, "human_translated": true, "code_input": "####\nfacts = [ 'Глория выбирает обувь и находит на пару ботинок, соответствующих ее бюджету.',\n  'Однако ей приходится выбирать между ботинками и',\n  'двумя парами туфель на шпильке, которые вместе стоят на пять долларов дешевле ботинок.',\n  'Если одна пара туфель стоит 33\\xa0доллара, а',\n  'другая в два раза дороже,']\nquestion = 'сколько долларов стоят ботинки?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если одна пара туфель стоит 33\\xa0доллара, а']\nnew_fact = infer_new_fact(selected) # 'Вторая пара туфель стоит 33\\xa0x\\xa02\\xa0=\\xa066\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одна пара туфель стоит 33\\xa0доллара, а', 'другая в два раза дороже,', 'Вторая пара туфель стоит 33\\xa0x\\xa02\\xa0=\\xa066\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Две пары туфель вместе стоят 66\\xa0+\\xa033\\xa0=\\xa099\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Однако ей приходится выбирать между ботинками и', 'двумя парами туфель на шпильке, которые вместе стоят на пять долларов дешевле ботинок.', 'Две пары туфель вместе стоят 66\\xa0+\\xa033\\xa0=\\xa099\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Ботинки стоят на 5\\xa0долларов дороже, чем обе пары туфель вместе взятые, поэтому ботинки стоят 99\\xa0+\\xa05\\xa0=\\xa0104\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько долларов стоят ботинки?', 'Ботинки стоят на 5\\xa0долларов дороже, чем обе пары туфель вместе взятые, поэтому ботинки стоят 99\\xa0+\\xa05\\xa0=\\xa0104\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 104'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '104'"}
{"id": "GSM8K_30_d5513cdd8c", "context": "", "options": [], "answer": "109", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: The total ratio representing their ages is 7+11= 18; int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99; int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old; int3 & sent3 -> int4: The answer is 109;", "textual_logical_units": {"1": "Соотношение возраста Даррелла и Аллена составляет 7:11.", "2": "Если их общий возраст сейчас составляет 162 года,", "3": "рассчитайте возраст Аллена через 10 лет.", "4": "Общее соотношение их возрастов составляет 7 + 11 = 18.", "5": "Поскольку доля соотношения, отражающего возраст Аллена, составляет 11/18 лет, текущий возраст Аллена составляет 11/18 x 162 = 99 лет.", "6": "Если Аллену сейчас 99 лет, то через 10 лет ему исполнится 99 + 10 = 109 лет.", "7": "The answer is 109"}, "human_translated": true, "code_input": "####\nfacts = ['Соотношение возраста Даррелла и Аллена составляет 7:11.', 'Если их общий возраст сейчас составляет 162\\xa0года,']\nquestion = 'рассчитайте возраст Аллена через 10\\xa0лет.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Соотношение возраста Даррелла и Аллена составляет 7:11.']\nnew_fact = infer_new_fact(selected) # 'Общее соотношение их возрастов составляет 7\\xa0+\\xa011\\xa0=\\xa018.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если их общий возраст сейчас составляет 162\\xa0года,', 'Общее соотношение их возрастов составляет 7\\xa0+\\xa011\\xa0=\\xa018.']\nnew_fact = infer_new_fact(selected) # 'Поскольку доля соотношения, отражающего возраст Аллена, составляет 11/18\\xa0лет, текущий возраст Аллена составляет 11/18\\xa0x\\xa0162\\xa0=\\xa099\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рассчитайте возраст Аллена через 10\\xa0лет.', 'Поскольку доля соотношения, отражающего возраст Аллена, составляет 11/18\\xa0лет, текущий возраст Аллена составляет 11/18\\xa0x\\xa0162\\xa0=\\xa099\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Если Аллену сейчас 99\\xa0лет, то через 10\\xa0лет ему исполнится 99\\xa0+\\xa010\\xa0=\\xa0109\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рассчитайте возраст Аллена через 10\\xa0лет.', 'Если Аллену сейчас 99\\xa0лет, то через 10\\xa0лет ему исполнится 99\\xa0+\\xa010\\xa0=\\xa0109\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'The answer is 109'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '109'"}
{"id": "GSM8K_31_e8508bec13", "context": "", "options": [], "answer": "80", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [3, 5], "consequent": 8}, {"antecedents": [3, 7, 8], "consequent": 9}, {"antecedents": [3, 7, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60; sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100; int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240; int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80; int4 & sent6 -> int5: The answer is 80;", "textual_logical_units": {"1": "Гюнтер пытается сосчитать количество драже в банке.", "2": "Он спрашивает своих друзей, сколько, по их мнению, в банке драже.", "3": "Один говорит, что 80.", "4": "Другой считает, что на 20 больше половины первого предположения.", "5": "Треть говорит, что на 25 % больше, чем думает первый.", "6": "Каково среднее число, которое они предполагают?", "7": "Предположение второго человека — 60, потому что 20 + (80 / 2) = 60.", "8": "Второй считает, что 100, потому что 80 x 1,25 = 100.", "9": "Общая сумма из всех предположений — 240, потому что 80 + 60 + 100 = 240.", "10": "Средняя предполагаемая сумма — 80, потому что 240 / 3 = 80.", "11": "The answer is 80"}, "human_translated": true, "code_input": "####\nfacts = [ 'Гюнтер пытается сосчитать количество драже в банке.',\n  'Он спрашивает своих друзей, сколько, по их мнению, в банке драже.',\n  'Один говорит, что\\xa080.',\n  'Другой считает, что на 20 больше половины первого предположения.',\n  'Треть говорит, что на 25\\xa0% больше, чем думает первый.']\nquestion = 'Каково среднее число, которое они предполагают?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Один говорит, что\\xa080.', 'Другой считает, что на 20 больше половины первого предположения.']\nnew_fact = infer_new_fact(selected) # 'Предположение второго человека\\xa0— 60, потому что 20\\xa0+\\xa0(80\\xa0/\\xa02)\\xa0=\\xa060.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один говорит, что\\xa080.', 'Треть говорит, что на 25\\xa0% больше, чем думает первый.']\nnew_fact = infer_new_fact(selected) # 'Второй считает, что 100, потому что 80\\xa0x\\xa01,25\\xa0=\\xa0100.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один говорит, что\\xa080.', 'Предположение второго человека\\xa0— 60, потому что 20\\xa0+\\xa0(80\\xa0/\\xa02)\\xa0=\\xa060.', 'Второй считает, что 100, потому что 80\\xa0x\\xa01,25\\xa0=\\xa0100.']\nnew_fact = infer_new_fact(selected) # 'Общая сумма из всех предположений\\xa0— 240, потому что 80\\xa0+\\xa060\\xa0+\\xa0100\\xa0=\\xa0240.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один говорит, что\\xa080.', 'Предположение второго человека\\xa0— 60, потому что 20\\xa0+\\xa0(80\\xa0/\\xa02)\\xa0=\\xa060.', 'Второй считает, что 100, потому что 80\\xa0x\\xa01,25\\xa0=\\xa0100.', 'Общая сумма из всех предположений\\xa0— 240, потому что 80\\xa0+\\xa060\\xa0+\\xa0100\\xa0=\\xa0240.']\nnew_fact = infer_new_fact(selected) # 'Средняя предполагаемая сумма\\xa0— 80, потому что 240\\xa0/\\xa03\\xa0=\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково среднее число, которое они предполагают?', 'Средняя предполагаемая сумма\\xa0— 80, потому что 240\\xa0/\\xa03\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'The answer is 80'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '80'"}
{"id": "GSM8K_32_89c164c5ae", "context": "", "options": [], "answer": "35", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He spends 10*.5=5 hours per day; int1 & sent4 -> int2: That means he spends 5*7=35 hours per week; int2 & sent4 -> int3: The answer is 35;", "textual_logical_units": {"1": "Джон заботится о 10 собаках.", "2": "Требуется 0,5 часа на каждую собаку, чтобы погулять с ней", "3": "и убраться за ней.", "4": "Сколько часов в неделю он тратит на уход за собаками?", "5": "Он тратит 10 x 0,5 = 5 часов в день.", "6": "Следовательно, он тратит 5 x 7 = 35 часов в неделю.", "7": "The answer is 35"}, "human_translated": true, "code_input": "####\nfacts = ['Джон заботится о 10\\xa0собаках.', 'Требуется 0,5 часа на каждую собаку, чтобы погулять с ней', 'и убраться за ней.']\nquestion = 'Сколько часов в неделю он тратит на уход за собаками?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джон заботится о 10\\xa0собаках.', 'Требуется 0,5 часа на каждую собаку, чтобы погулять с ней']\nnew_fact = infer_new_fact(selected) # 'Он тратит 10\\xa0x\\xa00,5\\xa0=\\xa05\\xa0часов в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов в неделю он тратит на уход за собаками?', 'Он тратит 10\\xa0x\\xa00,5\\xa0=\\xa05\\xa0часов в день.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он тратит 5\\xa0x\\xa07\\xa0=\\xa035 часов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов в неделю он тратит на уход за собаками?', 'Следовательно, он тратит 5\\xa0x\\xa07\\xa0=\\xa035 часов в неделю.']\nnew_fact = infer_new_fact(selected) # 'The answer is 35'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '35'"}
{"id": "GSM8K_33_563617ecbf", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has; int1 & sent2 -> int2: Gretchen has x+30 gold coins.; int2 & sent1 -> int3: x+x+30=110; int3 -> int4: 2*x=80; int4 -> int5: x=40; int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins; int6 & sent3 -> int7: The answer is 70;", "textual_logical_units": {"1": "У Гретхен 110 монет.", "2": "Золотых монет на 30 больше, чем серебряных.", "3": "Сколько золотых монет у Гретхен?", "4": "Пусть X — количество серебряных монет у Гретхен.", "5": "У Гретхен есть X + 30 золотых монет.", "6": "X + X + 30 = 110.", "7": "2 x X = 80.", "8": "X = 40.", "9": "У Гретхен 40 + 30 = 70 золотых монет.", "10": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['У Гретхен 110\\xa0монет.', 'Золотых монет на 30\\xa0больше, чем серебряных.']\nquestion = 'Сколько золотых монет у Гретхен?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Гретхен 110\\xa0монет.', 'Золотых монет на 30\\xa0больше, чем серебряных.']\nnew_fact = infer_new_fact(selected) # 'Пусть X\\xa0— количество серебряных монет у Гретхен.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Золотых монет на 30\\xa0больше, чем серебряных.', 'Пусть X\\xa0— количество серебряных монет у Гретхен.']\nnew_fact = infer_new_fact(selected) # 'У Гретхен есть X\\xa0+\\xa030\\xa0золотых монет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Гретхен 110\\xa0монет.', 'У Гретхен есть X\\xa0+\\xa030\\xa0золотых монет.']\nnew_fact = infer_new_fact(selected) # 'X\\xa0+\\xa0X\\xa0+\\xa030\\xa0=\\xa0110.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X\\xa0+\\xa0X\\xa0+\\xa030\\xa0=\\xa0110.']\nnew_fact = infer_new_fact(selected) # '2\\xa0x\\xa0X\\xa0=\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0x\\xa0X\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa040.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Золотых монет на 30\\xa0больше, чем серебряных.', 'Сколько золотых монет у Гретхен?', 'X\\xa0=\\xa040.']\nnew_fact = infer_new_fact(selected) # 'У Гретхен 40\\xa0+\\xa030\\xa0= 70\\xa0золотых монет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько золотых монет у Гретхен?', 'У Гретхен 40\\xa0+\\xa030\\xa0= 70\\xa0золотых монет.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_34_58622fd43b", "context": "", "options": [], "answer": "23", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20; int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.; int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.; int3 & sent4 -> int4: The answer is 23;", "textual_logical_units": {"1": "У Шивон на 2 украшения меньше, чем у Аарона.", "2": "У Аарона на 5 украшений больше, чем половина украшений Раймонда.", "3": "Если у Раймонда 40 украшений,", "4": "сколько украшений у Шивон?", "5": "Половина драгоценностей Раймонда — 40 / 2 = 20.", "6": "Поскольку у Аарона на 5 украшений больше, половина украшений Раймонда, у него 20 + 5 = 25 украшений.", "7": "Если у Шивон на 2 украшения меньше, чем у Аарона, то у нее 25 – 2 = 23 украшения.", "8": "The answer is 23"}, "human_translated": true, "code_input": "####\nfacts = ['У Шивон на 2\\xa0украшения меньше, чем у Аарона.', 'У Аарона на 5\\xa0украшений больше, чем половина украшений Раймонда.', 'Если у Раймонда 40\\xa0украшений,']\nquestion = 'сколько украшений у Шивон?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Аарона на 5\\xa0украшений больше, чем половина украшений Раймонда.', 'Если у Раймонда 40\\xa0украшений,']\nnew_fact = infer_new_fact(selected) # 'Половина драгоценностей Раймонда\\xa0— 40\\xa0/\\xa02\\xa0=\\xa020.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Аарона на 5\\xa0украшений больше, чем половина украшений Раймонда.', 'Половина драгоценностей Раймонда\\xa0— 40\\xa0/\\xa02\\xa0=\\xa020.']\nnew_fact = infer_new_fact(selected) # 'Поскольку у Аарона на 5\\xa0украшений больше, половина украшений Раймонда, у него 20\\xa0+\\xa05\\xa0=\\xa025\\xa0украшений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Шивон на 2\\xa0украшения меньше, чем у Аарона.', 'Поскольку у Аарона на 5\\xa0украшений больше, половина украшений Раймонда, у него 20\\xa0+\\xa05\\xa0=\\xa025\\xa0украшений.']\nnew_fact = infer_new_fact(selected) # 'Если у Шивон на 2\\xa0украшения меньше, чем у Аарона, то у нее 25\\xa0–\\xa02\\xa0=\\xa023 украшения.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько украшений у Шивон?', 'Если у Шивон на 2\\xa0украшения меньше, чем у Аарона, то у нее 25\\xa0–\\xa02\\xa0=\\xa023 украшения.']\nnew_fact = infer_new_fact(selected) # 'The answer is 23'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '23'"}
{"id": "GSM8K_35_9fe2535ed9", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [2, 5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes; int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes; int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes; int3 & sent5 -> int4: The answer is 9;", "textual_logical_units": {"1": "Майк играет в пинг-понг 40 минут.", "2": "За первые 20 минут он набирает 4 очка.", "3": "Во вторые 20 минут", "4": "он набирает на 25 % больше очков.", "5": "Сколько всего очков он набрал?", "6": "За вторые 20 минут он набрал 4 x 0,25 = на 1 очко больше.", "7": "Таким образом, он набрал 4 + 1 = 5 очков за вторые 20 минут.", "8": "Следовательно, в общей сложности он набрал 4 + 5 = 9 очков за 40 минут.", "9": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = ['Майк играет в пинг-понг 40\\xa0минут.', 'За первые 20 минут он набирает 4\\xa0очка.', 'Во вторые 20\\xa0минут', 'он набирает на 25\\xa0% больше очков.']\nquestion = 'Сколько всего очков он набрал?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['За первые 20 минут он набирает 4\\xa0очка.', 'Во вторые 20\\xa0минут', 'он набирает на 25\\xa0% больше очков.']\nnew_fact = infer_new_fact(selected) # 'За вторые 20\\xa0минут он набрал 4\\xa0x\\xa00,25\\xa0=\\xa0на 1\\xa0очко больше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во вторые 20\\xa0минут', 'он набирает на 25\\xa0% больше очков.', 'За вторые 20\\xa0минут он набрал 4\\xa0x\\xa00,25\\xa0=\\xa0на 1\\xa0очко больше.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, он набрал 4\\xa0+\\xa01\\xa0=\\xa05\\xa0очков за вторые 20\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За первые 20 минут он набирает 4\\xa0очка.', 'Сколько всего очков он набрал?', 'Таким образом, он набрал 4\\xa0+\\xa01\\xa0=\\xa05\\xa0очков за вторые 20\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в общей сложности он набрал 4\\xa0+\\xa05\\xa0=\\xa09\\xa0очков за 40\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего очков он набрал?', 'Следовательно, в общей сложности он набрал 4\\xa0+\\xa05\\xa0=\\xa09\\xa0очков за 40\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_36_c91a135eb6", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts; int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs; int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt; int3 & sent3 -> int4: The answer is 75;", "textual_logical_units": {"1": "Терри съедает 2 йогурта в день.", "2": "В настоящее время они продаются по цене 4 йогурта за 5 долларов.", "3": "Сколько он потратит на йогурты за 30 дней?", "4": "Он ест 2 йогурта в день, поэтому в течение 30 дней он съест 2 x 30 = 60 йогуртов.", "5": "Йогурт продается по 4 штуки за 5 долларов, и Терри нужно 60 йогуртов, следовательно, ему нужно 60 / 4 = 15 упаковок.", "6": "Каждая упаковка из 4 штук стоит 5 долларов, а ему нужно 15 упаковок по 4 йогурта, поэтому он потратит 5 x 15 = 75 долларов.", "7": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = ['Терри съедает 2\\xa0йогурта в день.', 'В настоящее время они продаются по цене 4\\xa0йогурта за 5\\xa0долларов.']\nquestion = 'Сколько он потратит на йогурты за 30\\xa0дней?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Терри съедает 2\\xa0йогурта в день.', 'Сколько он потратит на йогурты за 30\\xa0дней?']\nnew_fact = infer_new_fact(selected) # 'Он ест 2\\xa0йогурта в день, поэтому в течение 30\\xa0дней он съест 2\\xa0x\\xa030\\xa0=\\xa060\\xa0йогуртов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В настоящее время они продаются по цене 4\\xa0йогурта за 5\\xa0долларов.', 'Он ест 2\\xa0йогурта в день, поэтому в течение 30\\xa0дней он съест 2\\xa0x\\xa030\\xa0=\\xa060\\xa0йогуртов.']\nnew_fact = infer_new_fact(selected) # 'Йогурт продается по 4\\xa0штуки за 5\\xa0долларов, и Терри нужно 60\\xa0йогуртов, следовательно, ему нужно 60\\xa0/\\xa04\\xa0=\\xa015 упаковок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он потратит на йогурты за 30\\xa0дней?', 'Йогурт продается по 4\\xa0штуки за 5\\xa0долларов, и Терри нужно 60\\xa0йогуртов, следовательно, ему нужно 60\\xa0/\\xa04\\xa0=\\xa015 упаковок.']\nnew_fact = infer_new_fact(selected) # 'Каждая упаковка из 4 штук стоит 5 долларов, а ему нужно 15 упаковок по 4\\xa0йогурта, поэтому он потратит 5\\xa0x\\xa015\\xa0=\\xa075 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он потратит на йогурты за 30\\xa0дней?', 'Каждая упаковка из 4 штук стоит 5 долларов, а ему нужно 15 упаковок по 4\\xa0йогурта, поэтому он потратит 5\\xa0x\\xa015\\xa0=\\xa075 долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_37_3afae2bcd4", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}, {"antecedents": [3, 6, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent5 -> int1: He spent $160 on video games because 8 x 20 = 160; int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165; int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165; int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2; int4 & sent6 -> int5: The answer is 2;", "textual_logical_units": {"1": "Джон планирует продать все свои игрушки и", "2": "потратить деньги на видеоигры.", "3": "У него есть 13 наборов Лего и", "4": "он продает их по 15 долларов каждый.", "5": "В итоге он покупает 8 видеоигр по 20 долларов каждая, и у него остается 5 долларов.", "6": "Сколько наборов Лего у него осталось?", "7": "Он потратил 160 долларов на видеоигры, потому что 8 x 20 = 160.", "8": "Он заработал 165 долларов на продаже, потому что 160 + 5 = 165.", "9": "Он продал 11 наборов Лего, потому что 11 x 15 = 165.", "10": "У него осталось 2 набора, потому что 13 – 11 = 2.", "11": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон планирует продать все свои игрушки и',\n  'потратить деньги на видеоигры.',\n  'У него есть 13\\xa0наборов Лего и',\n  'он продает их по 15\\xa0долларов каждый.',\n  'В итоге он покупает 8\\xa0видеоигр по 20\\xa0долларов каждая, и у него остается 5\\xa0долларов.']\nquestion = 'Сколько наборов Лего у него осталось?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В итоге он покупает 8\\xa0видеоигр по 20\\xa0долларов каждая, и у него остается 5\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Он потратил 160\\xa0долларов на видеоигры, потому что 8\\xa0x\\xa020\\xa0=\\xa0160.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В итоге он покупает 8\\xa0видеоигр по 20\\xa0долларов каждая, и у него остается 5\\xa0долларов.', 'Он потратил 160\\xa0долларов на видеоигры, потому что 8\\xa0x\\xa020\\xa0=\\xa0160.']\nnew_fact = infer_new_fact(selected) # 'Он заработал 165\\xa0долларов на продаже, потому что 160\\xa0+\\xa05\\xa0=\\xa0165.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У него есть 13\\xa0наборов Лего и', 'он продает их по 15\\xa0долларов каждый.', 'Он заработал 165\\xa0долларов на продаже, потому что 160\\xa0+\\xa05\\xa0=\\xa0165.']\nnew_fact = infer_new_fact(selected) # 'Он продал 11\\xa0наборов Лего, потому что 11\\xa0x\\xa015\\xa0=\\xa0165.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У него есть 13\\xa0наборов Лего и', 'Сколько наборов Лего у него осталось?', 'Он продал 11\\xa0наборов Лего, потому что 11\\xa0x\\xa015\\xa0=\\xa0165.']\nnew_fact = infer_new_fact(selected) # 'У него осталось 2\\xa0набора, потому что 13\\xa0–\\xa011\\xa0=\\xa02.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько наборов Лего у него осталось?', 'У него осталось 2\\xa0набора, потому что 13\\xa0–\\xa011\\xa0=\\xa02.']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_38_c326316e50", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 6}, {"antecedents": [2], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent0 -> int1: He has 7-1=6 possible running days.; sent2 -> int2: He runs half of those so he runs 6/2=3 days.; sent3 & sent4 -> int3: So for two days, he runs 3/2=1.5 hours.; int3 & sent3 -> int4: So in total, he runs 3+1.5+1.5=6 hours.; int4 & sent1 -> int5: So he runs 60/6=10 mph.; int5 & sent5 -> int6: The answer is 10;", "textual_logical_units": {"1": "Джон пробегает 60 миль в неделю.", "2": "Он бегает 3 дня в неделю.", "3": "В первый день он бегает 3 часа и", "4": "это в два раза меньше, чем в остальные два дня, когда он бегает.", "5": "Как быстро он бегает?", "6": "Есть 7 – 1 = 6 дней, когда он может бегать.", "7": "Он бегает половину из них, что составляет 6 / 2 = 3 дня.", "8": "Таким образом, в течение двух дней он бегает 3 / 2 = 1,5 часа.", "9": "Следовательно, в общей сложности он бегает 3 + 1,5 + 1,5 = 6 часов.", "10": "Значит, его скорость 60 / 6 = 10 миль в час.", "11": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон пробегает 60\\xa0миль в неделю.',\n  'Он бегает 3\\xa0дня в неделю.',\n  'В первый день он бегает 3\\xa0часа и',\n  'это в два раза меньше, чем в остальные два дня, когда он бегает.']\nquestion = 'Как быстро он бегает?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Есть 7\\xa0–\\xa01\\xa0=\\xa06 дней, когда он может бегать.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он бегает 3\\xa0дня в неделю.']\nnew_fact = infer_new_fact(selected) # 'Он бегает половину из них, что составляет 6\\xa0/\\xa02\\xa0=\\xa03\\xa0дня.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый день он бегает 3\\xa0часа и', 'это в два раза меньше, чем в остальные два дня, когда он бегает.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в течение двух дней он бегает 3\\xa0/\\xa02\\xa0=\\xa01,5\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый день он бегает 3\\xa0часа и', 'Таким образом, в течение двух дней он бегает 3\\xa0/\\xa02\\xa0=\\xa01,5\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в общей сложности он бегает 3\\xa0+\\xa01,5\\xa0+\\xa01,5\\xa0=\\xa06\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джон пробегает 60\\xa0миль в неделю.', 'Следовательно, в общей сложности он бегает 3\\xa0+\\xa01,5\\xa0+\\xa01,5\\xa0=\\xa06\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Значит, его скорость 60\\xa0/\\xa06\\xa0=\\xa010\\xa0миль\\xa0в\\xa0час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как быстро он бегает?', 'Значит, его скорость 60\\xa0/\\xa06\\xa0=\\xa010\\xa0миль\\xa0в\\xa0час.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_39_99b35180d8", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [4, 6, 9], "consequent": 10}, {"antecedents": [7, 8], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 4, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.; sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.; int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.; int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.; int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.; int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.; int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.; int7 & sent3 & sent4 -> int8: The answer is 18;", "textual_logical_units": {"1": "Дана может бегать со скоростью в четыре раза быстрее, чем ходить,", "2": "а также бегать вприпрыжку со скоростью вдвое меньшей скорости бега.", "3": "Если она может бежать вприпрыжку со скоростью 3 мили в час,", "4": "сколько миль она сможет преодолеть за 6 часов, если треть времени она будет бежать,", "5": "а две трети времени идти?", "6": "Если Дана может бежать вприпрыжку с скоростью вдвое меньше бега, то она бегает со скоростью 3 x 2 = 6 миль в час.", "7": "Поскольку она может бегать со скоростью в 4 раза большей, чем ходить, это означает, что она может ходить со скоростью 6 / 4 = 1,5 мили в час.", "8": "Если две трети времени она будет идти, то это займет 6 x (2 / 3) = 4 часа.", "9": "Если треть времени займет на бег, то она будет бежать 6 – 4 = 2 часа.", "10": "Таким образом, она будет бежать 2 часа со скоростью 6 миль в час или 2 x 6 = 12 миль.", "11": "Она пройдет 4 часа со скоростью 1,5 мили в час или 4 x 1,5 = 6 миль.", "12": "Таким образом, в общей сложности она преодолеет 12 + 6 = 18 миль.", "13": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дана может бегать со скоростью в четыре раза быстрее, чем ходить,',\n  'а также бегать вприпрыжку со скоростью вдвое меньшей скорости бега.',\n  'Если она может бежать вприпрыжку со скоростью 3\\xa0мили в час,',\n  'сколько миль она сможет преодолеть за 6\\xa0часов, если треть времени она будет бежать,']\nquestion = 'а две трети времени идти?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['а также бегать вприпрыжку со скоростью вдвое меньшей скорости бега.', 'Если она может бежать вприпрыжку со скоростью 3\\xa0мили в час,']\nnew_fact = infer_new_fact(selected) # 'Если Дана может бежать вприпрыжку с скоростью вдвое меньше бега, то она бегает со скоростью 3\\xa0x\\xa02\\xa0=\\xa06\\xa0миль в час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Дана может бегать со скоростью в четыре раза быстрее, чем ходить,', 'а две трети времени идти?']\nnew_fact = infer_new_fact(selected) # 'Поскольку она может бегать со скоростью в 4\\xa0раза большей, чем ходить, это означает, что она может ходить со скоростью 6\\xa0/\\xa04\\xa0=\\xa01,5\\xa0мили в час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а две трети времени идти?', 'Поскольку она может бегать со скоростью в 4\\xa0раза большей, чем ходить, это означает, что она может ходить со скоростью 6\\xa0/\\xa04\\xa0=\\xa01,5\\xa0мили в час.']\nnew_fact = infer_new_fact(selected) # 'Если две трети времени она будет идти, то это займет 6\\xa0x\\xa0(2\\xa0/\\xa03)\\xa0=\\xa04\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько миль она сможет преодолеть за 6\\xa0часов, если треть времени она будет бежать,', 'Если две трети времени она будет идти, то это займет 6\\xa0x\\xa0(2\\xa0/\\xa03)\\xa0=\\xa04\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Если треть времени займет на бег, то она будет бежать 6\\xa0–\\xa04\\xa0=\\xa02\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько миль она сможет преодолеть за 6\\xa0часов, если треть времени она будет бежать,', 'Если Дана может бежать вприпрыжку с скоростью вдвое меньше бега, то она бегает со скоростью 3\\xa0x\\xa02\\xa0=\\xa06\\xa0миль в час.', 'Если треть времени займет на бег, то она будет бежать 6\\xa0–\\xa04\\xa0=\\xa02\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, она будет бежать 2\\xa0часа со скоростью 6\\xa0миль в час или 2\\xa0x\\xa06\\xa0=\\xa012\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поскольку она может бегать со скоростью в 4\\xa0раза большей, чем ходить, это означает, что она может ходить со скоростью 6\\xa0/\\xa04\\xa0=\\xa01,5\\xa0мили в час.', 'Если две трети времени она будет идти, то это займет 6\\xa0x\\xa0(2\\xa0/\\xa03)\\xa0=\\xa04\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Она пройдет 4\\xa0часа со скоростью 1,5\\xa0мили в час или 4\\xa0x\\xa01,5\\xa0=\\xa06\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, она будет бежать 2\\xa0часа со скоростью 6\\xa0миль в час или 2\\xa0x\\xa06\\xa0=\\xa012\\xa0миль.', 'Она пройдет 4\\xa0часа со скоростью 1,5\\xa0мили в час или 4\\xa0x\\xa01,5\\xa0=\\xa06\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в общей сложности она преодолеет 12\\xa0+\\xa06 =\\xa018\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если она может бежать вприпрыжку со скоростью 3\\xa0мили в час,', 'сколько миль она сможет преодолеть за 6\\xa0часов, если треть времени она будет бежать,', 'Таким образом, в общей сложности она преодолеет 12\\xa0+\\xa06 =\\xa018\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_40_4dfa312de8", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.; int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.; int2 & sent4 -> int3: The answer is 8;", "textual_logical_units": {"1": "iPhone Брэндона в четыре раза старше iPhone Бена.", "2": "iPhone Бена в два раза старше iPhone Сьюзи.", "3": "Если iPhone Сьюзи 1 год,", "4": "сколько лет iPhone Брэндона?", "5": "iPhone Бена 1 x 2 = 2 года.", "6": "iPhone Брэндона 4 x 2 = 8 лет.", "7": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['iPhone Брэндона в четыре раза старше iPhone Бена.', 'iPhone Бена в два раза старше iPhone Сьюзи.', 'Если iPhone Сьюзи 1\\xa0год,']\nquestion = 'сколько лет iPhone Брэндона?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['iPhone Бена в два раза старше iPhone Сьюзи.', 'Если iPhone Сьюзи 1\\xa0год,']\nnew_fact = infer_new_fact(selected) # 'iPhone Бена 1\\xa0x\\xa02\\xa0=\\xa02\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['iPhone Брэндона в четыре раза старше iPhone Бена.', 'iPhone Бена 1\\xa0x\\xa02\\xa0=\\xa02\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'iPhone Брэндона 4\\xa0x\\xa02\\xa0=\\xa08\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько лет iPhone Брэндона?', 'iPhone Брэндона 4\\xa0x\\xa02\\xa0=\\xa08\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_41_e85a06590c", "context": "", "options": [], "answer": "200", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [9, 10, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.; int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.; int2 & sent10 & sent9 -> int3: The answer is 200;", "textual_logical_units": {"1": "Великий дракон Перг сидел высоко на вершине горы Фарбо и", "2": "дышал огнем во все, что находилось в пределах 1000 футов.", "3": "Полли может бросить золотое копье,", "4": "единственное известное оружие, которое способно сразить дракона,", "5": "на расстояние 400 футов,", "6": "что в пределах досягаемости драконьего пламени.", "7": "Но когда Полли держит в руках драгоценный сапфир,", "8": "она может бросить копье в три раза дальше, чем без драгоценного камня в руках.", "9": "Если Полли держит драгоценный камень в руках, как далеко за пределами досягаемости пламени дракона она может стоять, чтобы", "10": "суметь добросить золотое копье до дракона?", "11": "Используя драгоценный камень, Полли может бросить копье в 3 раза дальше, чем на 400 футов, то есть на расстояние 3 x 400 = 1200 футов.", "12": "1200 футов превышает пределы досягаемости пламени дракона на расстояние 1200 – 1000 = 200 футов.", "13": "The answer is 200"}, "human_translated": true, "code_input": "####\nfacts = [ 'Великий дракон Перг сидел высоко на вершине горы Фарбо и',\n  'дышал огнем во все, что находилось в пределах 1000\\xa0футов.',\n  'Полли может бросить золотое копье,',\n  'единственное известное оружие, которое способно сразить дракона,',\n  'на расстояние 400\\xa0футов,',\n  'что в пределах досягаемости драконьего пламени.',\n  'Но когда Полли держит в руках драгоценный сапфир,',\n  'она может бросить копье в три раза дальше, чем без драгоценного камня в руках.',\n  'Если Полли держит драгоценный камень в руках, как далеко за пределами досягаемости пламени дракона она может стоять, чтобы']\nquestion = 'суметь добросить золотое копье до дракона?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['на расстояние 400\\xa0футов,', 'она может бросить копье в три раза дальше, чем без драгоценного камня в руках.']\nnew_fact = infer_new_fact(selected) # 'Используя драгоценный камень, Полли может бросить копье в 3\\xa0раза дальше, чем на 400\\xa0футов, то есть на расстояние 3\\xa0x\\xa0400\\xa0=\\xa01200\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['дышал огнем во все, что находилось в пределах 1000\\xa0футов.', 'Используя драгоценный камень, Полли может бросить копье в 3\\xa0раза дальше, чем на 400\\xa0футов, то есть на расстояние 3\\xa0x\\xa0400\\xa0=\\xa01200\\xa0футов.']\nnew_fact = infer_new_fact(selected) # '1200\\xa0футов превышает пределы досягаемости пламени дракона на расстояние 1200\\xa0–\\xa01000\\xa0=\\xa0200\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Полли держит драгоценный камень в руках, как далеко за пределами досягаемости пламени дракона она может стоять, чтобы', 'суметь добросить золотое копье до дракона?', '1200\\xa0футов превышает пределы досягаемости пламени дракона на расстояние 1200\\xa0–\\xa01000\\xa0=\\xa0200\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '200'"}
{"id": "GSM8K_42_0e55dd01d6", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.; int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.; int2 & sent8 -> int3: The answer is 26;", "textual_logical_units": {"1": "Бабушка Джонс испекла 5 яблочных пирогов на фуршет для пожарных.", "2": "Она разрезала каждый пирог на 8 частей и", "3": "поставила пять пирогов на фуршетный стол, чтобы гости могли сами угощаться.", "4": "В конце вечера,", "5": "после того, как гости забрали и", "6": "съели свои куски пирога,", "7": "осталось 14 кусков.", "8": "Сколько кусков забрали гости?", "9": "В начале вечера было 5 пирогов по 8 кусков в каждом, то есть 5 x 8 = 40 кусков пирога.", "10": "Если их осталось 14, значит, гости забрали 40 – 14 = 26 кусков.", "11": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = [ 'Бабушка Джонс испекла 5\\xa0яблочных пирогов на фуршет для пожарных.',\n  'Она разрезала каждый пирог на 8\\xa0частей и',\n  'поставила пять пирогов на фуршетный стол, чтобы гости могли сами угощаться.',\n  'В конце вечера,',\n  'после того, как гости забрали и',\n  'съели свои куски пирога,',\n  'осталось 14\\xa0кусков.']\nquestion = 'Сколько кусков забрали гости?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Бабушка Джонс испекла 5\\xa0яблочных пирогов на фуршет для пожарных.', 'Она разрезала каждый пирог на 8\\xa0частей и']\nnew_fact = infer_new_fact(selected) # 'В начале вечера было 5\\xa0пирогов по 8\\xa0кусков в каждом, то есть 5\\xa0x\\xa08\\xa0=\\xa040\\xa0кусков пирога.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['осталось 14\\xa0кусков.', 'Сколько кусков забрали гости?', 'В начале вечера было 5\\xa0пирогов по 8\\xa0кусков в каждом, то есть 5\\xa0x\\xa08\\xa0=\\xa040\\xa0кусков пирога.']\nnew_fact = infer_new_fact(selected) # 'Если их осталось 14, значит, гости забрали 40\\xa0–\\xa014\\xa0=\\xa026\\xa0кусков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько кусков забрали гости?', 'Если их осталось 14, значит, гости забрали 40\\xa0–\\xa014\\xa0=\\xa026\\xa0кусков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_43_0d9cbd33eb", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 6}, {"antecedents": [2, 4, 6], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat; int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving; sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams; int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams; int4 & sent4 & sent5 -> int5: The answer is 48;", "textual_logical_units": {"1": "Согласно информации о питании,", "2": "в пакетике чипсов содержится 250 калорий на порцию.", "3": "Если пакет весом 300 г содержит 5 порций,", "4": "сколько граммов вы можете съесть в случае, когда ваша дневная норма калорий составляет 2000 и", "5": "вы уже употребили 1800 калорий?", "6": "Если общая норма калорий составляет 2000 и 1800 калорий уже съедено, то можно употребить еще 2000 – 1800 = 200 калорий.", "7": "Если в каждой порции чипсов 250 калорий, а съесть еще можно всего 200, то употребить получится 200 / 250 = 4/5 порции.", "8": "Мы также знаем, что пакет чипсов весом 300 г рассчитан на 5 порций, поэтому каждая порция содержит 300 г / 5 = 60 грамм.", "9": "Если можно съесть только 4/5 порции, это составляет 60 г x 4/5 = 240 г / 5 = 48 грамм.", "10": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = [ 'Согласно информации о питании,',\n  'в пакетике чипсов содержится 250 калорий на порцию.',\n  'Если пакет весом 300\\xa0г содержит 5\\xa0порций,',\n  'сколько граммов вы можете съесть в случае, когда ваша дневная норма калорий составляет 2000 и']\nquestion = 'вы уже употребили 1800\\xa0калорий?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['сколько граммов вы можете съесть в случае, когда ваша дневная норма калорий составляет 2000 и', 'вы уже употребили 1800\\xa0калорий?']\nnew_fact = infer_new_fact(selected) # 'Если общая норма калорий составляет 2000 и 1800\\xa0калорий уже съедено, то можно употребить еще 2000\\xa0–\\xa01800\\xa0=\\xa0200\\xa0калорий.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в пакетике чипсов содержится 250 калорий на порцию.', 'сколько граммов вы можете съесть в случае, когда ваша дневная норма калорий составляет 2000 и', 'Если общая норма калорий составляет 2000 и 1800\\xa0калорий уже съедено, то можно употребить еще 2000\\xa0–\\xa01800\\xa0=\\xa0200\\xa0калорий.']\nnew_fact = infer_new_fact(selected) # 'Если в каждой порции чипсов 250\\xa0калорий, а съесть еще можно всего 200, то употребить получится 200\\xa0/\\xa0250\\xa0=\\xa04/5\\xa0порции.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если пакет весом 300\\xa0г содержит 5\\xa0порций,']\nnew_fact = infer_new_fact(selected) # 'Мы также знаем, что пакет чипсов весом 300\\xa0г рассчитан на 5 порций, поэтому каждая порция содержит 300\\xa0г\\xa0/\\xa05\\xa0=\\xa060\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в каждой порции чипсов 250\\xa0калорий, а съесть еще можно всего 200, то употребить получится 200\\xa0/\\xa0250\\xa0=\\xa04/5\\xa0порции.', 'Мы также знаем, что пакет чипсов весом 300\\xa0г рассчитан на 5 порций, поэтому каждая порция содержит 300\\xa0г\\xa0/\\xa05\\xa0=\\xa060\\xa0грамм.']\nnew_fact = infer_new_fact(selected) # 'Если можно съесть только 4/5\\xa0порции, это составляет 60\\xa0г\\xa0x\\xa04/5\\xa0=\\xa0240\\xa0г\\xa0/\\xa05\\xa0=\\xa048\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько граммов вы можете съесть в случае, когда ваша дневная норма калорий составляет 2000 и', 'вы уже употребили 1800\\xa0калорий?', 'Если можно съесть только 4/5\\xa0порции, это составляет 60\\xa0г\\xa0x\\xa04/5\\xa0=\\xa0240\\xa0г\\xa0/\\xa05\\xa0=\\xa048\\xa0грамм.']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_44_40def09442", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [2, 3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [6, 7], "consequent": 10}, {"antecedents": [7, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax; int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00; sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00; int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00; int4 & sent7 -> int5: The answer is 20;", "textual_logical_units": {"1": "Чарли хочет продавать свечи из пчелиного воска.", "2": "Из каждого фунта пчелиного воска", "3": "он может сделать 10 конических свечей.", "4": "Один фунт пчелиного воска и", "5": "стоимость фитилей составляет 10 долларов.", "6": "Если он продаст каждую свечу по 2 доллара за штуку,", "7": "какова его чистая прибыль, если он сделает и продаст 20 свечей?", "8": "Из 1 фунта пчелиного воска и фитиля можно создать 10 свечей, а Чарли хочет сделать 20, поэтому ему нужно 20 / 10 = 2 фунта пчелиного воска.", "9": "1 фунт пчелиного воска стоит 10 долларов, а Чарли нужно 2 фунта, поэтому его запасы будут стоить 10 x 2 = 20 долларов.", "10": "Он хочет продать каждую свечу по 2 доллара за штуку и всего продать 20 свечей, что дает 2 x 20 = 40 долларов.", "11": "Если он зарабатывает 40 долларов, продавая свечи, а расходные материалы стоят 20 долларов, то его чистая прибыль составит 40 – 20 = 20 долларов.", "12": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'Чарли хочет продавать свечи из пчелиного воска.',\n  'Из каждого фунта пчелиного воска',\n  'он может сделать 10\\xa0конических свечей.',\n  'Один фунт пчелиного воска и',\n  'стоимость фитилей составляет 10\\xa0долларов.',\n  'Если он продаст каждую свечу по 2\\xa0доллара за штуку,']\nquestion = 'какова его чистая прибыль, если он сделает и продаст 20\\xa0свечей?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Из каждого фунта пчелиного воска', 'он может сделать 10\\xa0конических свечей.', 'какова его чистая прибыль, если он сделает и продаст 20\\xa0свечей?']\nnew_fact = infer_new_fact(selected) # 'Из 1\\xa0фунта пчелиного воска и фитиля можно создать 10\\xa0свечей, а Чарли хочет сделать 20, поэтому ему нужно 20\\xa0/\\xa010\\xa0=\\xa02\\xa0фунта пчелиного воска.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один фунт пчелиного воска и', 'стоимость фитилей составляет 10\\xa0долларов.', 'Из 1\\xa0фунта пчелиного воска и фитиля можно создать 10\\xa0свечей, а Чарли хочет сделать 20, поэтому ему нужно 20\\xa0/\\xa010\\xa0=\\xa02\\xa0фунта пчелиного воска.']\nnew_fact = infer_new_fact(selected) # '1\\xa0фунт пчелиного воска стоит 10\\xa0долларов, а Чарли нужно 2\\xa0фунта, поэтому его запасы будут стоить 10\\xa0x\\xa02\\xa0=\\xa020\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он продаст каждую свечу по 2\\xa0доллара за штуку,', 'какова его чистая прибыль, если он сделает и продаст 20\\xa0свечей?']\nnew_fact = infer_new_fact(selected) # 'Он хочет продать каждую свечу по 2\\xa0доллара за штуку и всего продать 20\\xa0свечей, что дает 2\\xa0x\\xa020\\xa0=\\xa040\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова его чистая прибыль, если он сделает и продаст 20\\xa0свечей?', '1\\xa0фунт пчелиного воска стоит 10\\xa0долларов, а Чарли нужно 2\\xa0фунта, поэтому его запасы будут стоить 10\\xa0x\\xa02\\xa0=\\xa020\\xa0долларов.', 'Он хочет продать каждую свечу по 2\\xa0доллара за штуку и всего продать 20\\xa0свечей, что дает 2\\xa0x\\xa020\\xa0=\\xa040\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Если он зарабатывает 40\\xa0долларов, продавая свечи, а расходные материалы стоят 20\\xa0долларов, то его чистая прибыль составит 40\\xa0–\\xa020\\xa0=\\xa020\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова его чистая прибыль, если он сделает и продаст 20\\xa0свечей?', 'Если он зарабатывает 40\\xa0долларов, продавая свечи, а расходные материалы стоят 20\\xa0долларов, то его чистая прибыль составит 40\\xa0–\\xa020\\xa0=\\xa020\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_45_b52a924542", "context": "", "options": [], "answer": "104", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [4, 9, 10], "consequent": 11}, {"antecedents": [3, 7, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.; int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7; int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.; int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.; int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.; int5 & sent7 -> int6: The answer is 104;", "textual_logical_units": {"1": "Мередит — блогер-фрилансер, которая пишет статьи на темы здорового образа жизни", "2": "для своих клиентов, и это является ее основной занятостью.", "3": "На изучение темы и написание статьи в блоге уходит в среднем 4 часа.", "4": "На прошлой неделе она написала 5 статей в понедельник и", "5": "в 2/5 раза больше статей во вторник.", "6": "В среду она написала в 2 раза больше статей, чем во вторник.", "7": "Подсчитайте общее количество часов, которое она потратила на написание статей за 3 дня.", "8": "Если в понедельник она написала 5 статей, то во вторник 2/5 x 5 = еще 2 статьи.", "9": "Общее количество статей, написанных ею во вторник, составляет 5 + 2 = 7.", "10": "В среду написано статей в 2 раза больше статей, чем во вторник, а именно 2 x 7 = 14 статей.", "11": "За три дня она написала 5 + 7 + 14 = 26 статей.", "12": "Если на изучение и написание каждой статьи у нее уходило 4 часа, то на все статьи она потратила 4 x 26 = 104 часа.", "13": "The answer is 104"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мередит\\xa0— блогер-фрилансер, которая пишет статьи на темы здорового образа жизни',\n  'для своих клиентов, и это является ее основной занятостью.',\n  'На изучение темы и написание статьи в блоге уходит в среднем 4\\xa0часа.',\n  'На прошлой неделе она написала 5\\xa0статей в понедельник и',\n  'в 2/5 раза больше статей во вторник.',\n  'В среду она написала в 2 раза больше статей, чем во вторник.']\nquestion = 'Подсчитайте общее количество часов, которое она потратила на написание статей за 3 дня.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На прошлой неделе она написала 5\\xa0статей в понедельник и', 'в 2/5 раза больше статей во вторник.']\nnew_fact = infer_new_fact(selected) # 'Если в понедельник она написала 5 статей, то во вторник 2/5\\xa0x\\xa05\\xa0=\\xa0еще 2\\xa0статьи.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в понедельник она написала 5 статей, то во вторник 2/5\\xa0x\\xa05\\xa0=\\xa0еще 2\\xa0статьи.']\nnew_fact = infer_new_fact(selected) # 'Общее количество статей, написанных ею во вторник, составляет 5\\xa0+\\xa02\\xa0=\\xa07.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В среду она написала в 2 раза больше статей, чем во вторник.', 'Общее количество статей, написанных ею во вторник, составляет 5\\xa0+\\xa02\\xa0=\\xa07.']\nnew_fact = infer_new_fact(selected) # 'В среду написано статей в 2 раза больше статей, чем во вторник, а именно 2\\xa0x\\xa07\\xa0=\\xa014\\xa0статей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На прошлой неделе она написала 5\\xa0статей в понедельник и', 'Общее количество статей, написанных ею во вторник, составляет 5\\xa0+\\xa02\\xa0=\\xa07.', 'В среду написано статей в 2 раза больше статей, чем во вторник, а именно 2\\xa0x\\xa07\\xa0=\\xa014\\xa0статей.']\nnew_fact = infer_new_fact(selected) # 'За три дня она написала 5\\xa0+\\xa07\\xa0+\\xa014\\xa0=\\xa026\\xa0статей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На изучение темы и написание статьи в блоге уходит в среднем 4\\xa0часа.', 'Подсчитайте общее количество часов, которое она потратила на написание статей за 3 дня.', 'За три дня она написала 5\\xa0+\\xa07\\xa0+\\xa014\\xa0=\\xa026\\xa0статей.']\nnew_fact = infer_new_fact(selected) # 'Если на изучение и написание каждой статьи у нее уходило 4\\xa0часа, то на все статьи она потратила 4\\xa0x\\xa026\\xa0=\\xa0104\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подсчитайте общее количество часов, которое она потратила на написание статей за 3 дня.', 'Если на изучение и написание каждой статьи у нее уходило 4\\xa0часа, то на все статьи она потратила 4\\xa0x\\xa026\\xa0=\\xa0104\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'The answer is 104'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '104'"}
{"id": "GSM8K_46_c1d08edad8", "context": "", "options": [], "answer": "163", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.; int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.; int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23; int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.; int4 & sent6 -> int5: The answer is 163;", "textual_logical_units": {"1": "Кэндис положила в сумочку 80 стикеров, прежде чем отправиться на работу в кофейню.", "2": "По дороге она зашла в магазин и", "3": "приобрела упаковку стикеров, а на работе", "4": "она наклеила по одному стикеру на каждую из 220 чашек кофе.", "5": "Если всего у нее осталось 23 стикера,", "6": "сколько стикеров было в купленной ею упаковке?", "7": "Пусть X — количество стикеров в упаковке, купленной Кэндис.", "8": "Тогда общее количество стикеров, которые у нее были, когда она вышла из магазина, составило X + 80.", "9": "Если на работе она использовала 220 стикеров, а осталось у нее 23, то 80 + X = 220 + 23.", "10": "Вычитая 80 из каждой части уравнения, мы видим, что X = 220 + 23 – 80 = 163 стикера.", "11": "The answer is 163"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кэндис положила в сумочку 80\\xa0стикеров, прежде чем отправиться на работу в кофейню.',\n  'По дороге она зашла в магазин и',\n  'приобрела упаковку стикеров, а на работе',\n  'она наклеила по одному стикеру на каждую из 220\\xa0чашек кофе.',\n  'Если всего у нее осталось 23\\xa0стикера,']\nquestion = 'сколько стикеров было в купленной ею упаковке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['сколько стикеров было в купленной ею упаковке?']\nnew_fact = infer_new_fact(selected) # 'Пусть X\\xa0— количество стикеров в упаковке, купленной Кэндис.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кэндис положила в сумочку 80\\xa0стикеров, прежде чем отправиться на работу в кофейню.', 'Пусть X\\xa0— количество стикеров в упаковке, купленной Кэндис.']\nnew_fact = infer_new_fact(selected) # 'Тогда общее количество стикеров, которые у нее были, когда она вышла из магазина, составило X\\xa0+\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['она наклеила по одному стикеру на каждую из 220\\xa0чашек кофе.', 'Если всего у нее осталось 23\\xa0стикера,', 'Тогда общее количество стикеров, которые у нее были, когда она вышла из магазина, составило X\\xa0+\\xa080.']\nnew_fact = infer_new_fact(selected) # 'Если на работе она использовала 220\\xa0стикеров, а осталось у нее 23, то 80\\xa0+\\xa0X\\xa0=\\xa0220\\xa0+\\xa023.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если на работе она использовала 220\\xa0стикеров, а осталось у нее 23, то 80\\xa0+\\xa0X\\xa0=\\xa0220\\xa0+\\xa023.']\nnew_fact = infer_new_fact(selected) # 'Вычитая 80 из каждой части уравнения, мы видим, что X\\xa0=\\xa0220\\xa0+\\xa023\\xa0–\\xa080\\xa0=\\xa0163\\xa0стикера.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько стикеров было в купленной ею упаковке?', 'Вычитая 80 из каждой части уравнения, мы видим, что X\\xa0=\\xa0220\\xa0+\\xa023\\xa0–\\xa080\\xa0=\\xa0163\\xa0стикера.']\nnew_fact = infer_new_fact(selected) # 'The answer is 163'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '163'"}
{"id": "GSM8K_47_6e4d497caa", "context": "", "options": [], "answer": "800", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [3, 4, 9], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: He bought 200 / 40 = 5 blue ties; int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties; sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties; int3 & sent3 -> int4: So they each cost $40 + $20 = $60; int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties; int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties; int6 & sent4 -> int7: The answer is 800;", "textual_logical_units": {"1": "Джон покупает в два раза больше красных галстуков, чем синих.", "2": "Красные галстуки стоят на 50 % дороже синих.", "3": "Он потратил 200 долларов на синие галстуки по 40 долларов за штуку.", "4": "Сколько он потратил на галстуки?", "5": "Он купил 200 / 40 = 5 синих галстуков", "6": "Следовательно, также он купил 5 x 2 = 10 красных галстуков.", "7": "Каждый красный галстук стоил 40 долларов x 0,5 = на 20 долларов больше, чем синий галстук.", "8": "Таким образом, каждый из красных галстуков стоит 40 + 20 = 60 долларов.", "9": "Значит, он потратил 60 долларов x 10 = 600 долларов на красные галстуки.", "10": "Следовательно, Джон потратил 200 + 600 = 800 долларов на галстуки.", "11": "The answer is 800"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон покупает в два раза больше красных галстуков, чем синих.',\n  'Красные галстуки стоят на 50\\xa0% дороже синих.',\n  'Он потратил 200\\xa0долларов на синие галстуки по 40\\xa0долларов за штуку.']\nquestion = 'Сколько он потратил на галстуки?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он потратил 200\\xa0долларов на синие галстуки по 40\\xa0долларов за штуку.']\nnew_fact = infer_new_fact(selected) # 'Он купил 200\\xa0/\\xa040\\xa0=\\xa05\\xa0синих галстуков'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джон покупает в два раза больше красных галстуков, чем синих.', 'Он купил 200\\xa0/\\xa040\\xa0=\\xa05\\xa0синих галстуков']\nnew_fact = infer_new_fact(selected) # 'Следовательно, также он купил 5\\xa0x\\xa02\\xa0=\\xa010\\xa0красных галстуков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Красные галстуки стоят на 50\\xa0% дороже синих.', 'Он потратил 200\\xa0долларов на синие галстуки по 40\\xa0долларов за штуку.']\nnew_fact = infer_new_fact(selected) # 'Каждый красный галстук стоил 40 долларов\\xa0x\\xa00,5\\xa0= на 20\\xa0долларов больше, чем синий галстук.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он потратил 200\\xa0долларов на синие галстуки по 40\\xa0долларов за штуку.', 'Каждый красный галстук стоил 40 долларов\\xa0x\\xa00,5\\xa0= на 20\\xa0долларов больше, чем синий галстук.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, каждый из красных галстуков стоит 40\\xa0+\\xa020\\xa0=\\xa060\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, также он купил 5\\xa0x\\xa02\\xa0=\\xa010\\xa0красных галстуков.', 'Таким образом, каждый из красных галстуков стоит 40\\xa0+\\xa020\\xa0=\\xa060\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Значит, он потратил 60\\xa0долларов\\xa0x\\xa010\\xa0=\\xa0600\\xa0долларов на красные галстуки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он потратил 200\\xa0долларов на синие галстуки по 40\\xa0долларов за штуку.', 'Сколько он потратил на галстуки?', 'Значит, он потратил 60\\xa0долларов\\xa0x\\xa010\\xa0=\\xa0600\\xa0долларов на красные галстуки.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, Джон потратил 200\\xa0+\\xa0600\\xa0=\\xa0800\\xa0долларов на галстуки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он потратил на галстуки?', 'Следовательно, Джон потратил 200\\xa0+\\xa0600\\xa0=\\xa0800\\xa0долларов на галстуки.']\nnew_fact = infer_new_fact(selected) # 'The answer is 800'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '800'"}
{"id": "GSM8K_48_fb3fb38853", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.; int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces; int2 & sent3 -> int3: The answer is 8;", "textual_logical_units": {"1": "Трейси использовала кусок проволоки длиной 4 фута, чтобы подвязать томаты в саду.", "2": "Проволока была разрезана на куски длиной 6 дюймов.", "3": "Сколько кусков проволоки она потратила?", "4": "Если Трейси использовала кусок проволоки длиной 4 фута, поскольку 1 фут равен 12 дюймам, общая длина проволоки в дюймах составила 12 x 4 = 48 дюймов.", "5": "Поскольку проволока была разрезана на куски длиной 6 дюймов, Трейси потратила 48 / 6 = 8 кусков.", "6": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['Трейси использовала кусок проволоки длиной 4\\xa0фута, чтобы подвязать томаты в саду.', 'Проволока была разрезана на куски длиной 6\\xa0дюймов.']\nquestion = 'Сколько кусков проволоки она потратила?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Трейси использовала кусок проволоки длиной 4\\xa0фута, чтобы подвязать томаты в саду.']\nnew_fact = infer_new_fact(selected) # 'Если Трейси использовала кусок проволоки длиной 4\\xa0фута, поскольку 1\\xa0фут равен 12\\xa0дюймам, общая длина проволоки в дюймах составила 12\\xa0x\\xa04\\xa0=\\xa048\\xa0дюймов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Проволока была разрезана на куски длиной 6\\xa0дюймов.', 'Сколько кусков проволоки она потратила?', 'Если Трейси использовала кусок проволоки длиной 4\\xa0фута, поскольку 1\\xa0фут равен 12\\xa0дюймам, общая длина проволоки в дюймах составила 12\\xa0x\\xa04\\xa0=\\xa048\\xa0дюймов.']\nnew_fact = infer_new_fact(selected) # 'Поскольку проволока была разрезана на куски длиной 6\\xa0дюймов, Трейси потратила 48\\xa0/\\xa06\\xa0=\\xa08\\xa0кусков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько кусков проволоки она потратила?', 'Поскольку проволока была разрезана на куски длиной 6\\xa0дюймов, Трейси потратила 48\\xa0/\\xa06\\xa0=\\xa08\\xa0кусков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_49_856ec86627", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.; int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.; int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.; int3 & sent4 -> int4: The answer is 30;", "textual_logical_units": {"1": "Ричард живет в многоквартирном доме высоток в 15 этажей.", "2": "На каждом этаже по 8 квартир", "3": "и 3/4 квартир в доме жилые.", "4": "Каково общее количество пустующих квартир в доме?", "5": "Общее количество квартир в доме составит 8 квартир/этаж x 15 этажей = 120.", "6": "Если 3/4 квартир в доме занято, то общее количество занятых квартир составляет 3/4 x 120 = 90 квартир.", "7": "Общее количество свободных составляет 120 – 90 = 30 квартир.", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['Ричард живет в многоквартирном доме высоток в 15\\xa0этажей.', 'На каждом этаже по 8\\xa0квартир', 'и 3/4\\xa0квартир в доме жилые.']\nquestion = 'Каково общее количество пустующих квартир в доме?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ричард живет в многоквартирном доме высоток в 15\\xa0этажей.', 'На каждом этаже по 8\\xa0квартир']\nnew_fact = infer_new_fact(selected) # 'Общее количество квартир в доме составит 8\\xa0квартир/этаж\\xa0x\\xa015\\xa0этажей\\xa0=\\xa0120.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 3/4\\xa0квартир в доме жилые.', 'Общее количество квартир в доме составит 8\\xa0квартир/этаж\\xa0x\\xa015\\xa0этажей\\xa0=\\xa0120.']\nnew_fact = infer_new_fact(selected) # 'Если 3/4 квартир в доме занято, то общее количество занятых квартир составляет 3/4\\xa0x\\xa0120\\xa0=\\xa090\\xa0квартир.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково общее количество пустующих квартир в доме?', 'Общее количество квартир в доме составит 8\\xa0квартир/этаж\\xa0x\\xa015\\xa0этажей\\xa0=\\xa0120.', 'Если 3/4 квартир в доме занято, то общее количество занятых квартир составляет 3/4\\xa0x\\xa0120\\xa0=\\xa090\\xa0квартир.']\nnew_fact = infer_new_fact(selected) # 'Общее количество свободных составляет 120\\xa0–\\xa090\\xa0=\\xa030\\xa0квартир.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково общее количество пустующих квартир в доме?', 'Общее количество свободных составляет 120\\xa0–\\xa090\\xa0=\\xa030\\xa0квартир.']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_50_be1b78e251", "context": "", "options": [], "answer": "294", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.; int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.; int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.; int3 & sent4 -> int4: The answer is 294;", "textual_logical_units": {"1": "У Ллойда есть ферма по выращиванию яиц.", "2": "Его курицы сносят по 252 яйца в день и", "3": "он продает их по 2 доллара за дюжину.", "4": "Сколько Ллойд зарабатывает на яйцах за неделю?", "5": "За неделю яичная ферма Ллойда производит 252 х 7 = 1764 яйца.", "6": "За неделю производится 1764 / 12 = 147 дюжин яиц.", "7": "Следовательно, Ллойд зарабатывает 147 x 2 = 294 доллара на яйцах.", "8": "The answer is 294"}, "human_translated": true, "code_input": "####\nfacts = ['У Ллойда есть ферма по выращиванию яиц.', 'Его курицы сносят по 252\\xa0яйца в день и', 'он продает их по 2\\xa0доллара за дюжину.']\nquestion = 'Сколько Ллойд зарабатывает на яйцах за неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Его курицы сносят по 252\\xa0яйца в день и', 'Сколько Ллойд зарабатывает на яйцах за неделю?']\nnew_fact = infer_new_fact(selected) # 'За неделю яичная ферма Ллойда производит 252\\xa0х\\xa07\\xa0=\\xa01764\\xa0яйца.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['он продает их по 2\\xa0доллара за дюжину.', 'За неделю яичная ферма Ллойда производит 252\\xa0х\\xa07\\xa0=\\xa01764\\xa0яйца.']\nnew_fact = infer_new_fact(selected) # 'За неделю производится 1764\\xa0/\\xa012\\xa0=\\xa0147\\xa0дюжин яиц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['он продает их по 2\\xa0доллара за дюжину.', 'Сколько Ллойд зарабатывает на яйцах за неделю?', 'За неделю производится 1764\\xa0/\\xa012\\xa0=\\xa0147\\xa0дюжин яиц.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, Ллойд зарабатывает 147\\xa0x\\xa02\\xa0=\\xa0294\\xa0доллара на яйцах.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько Ллойд зарабатывает на яйцах за неделю?', 'Следовательно, Ллойд зарабатывает 147\\xa0x\\xa02\\xa0=\\xa0294\\xa0доллара на яйцах.']\nnew_fact = infer_new_fact(selected) # 'The answer is 294'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '294'"}
{"id": "GSM8K_51_e4757b3475", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: He was travelling at full speed for 4-1=3 hours; int1 & sent1 -> int2: So he went 3*10=30 miles; int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back; int3 & sent4 -> int4: The answer is 5;", "textual_logical_units": {"1": "Лодка Тома может передвигаться со скоростью 10 миль в час.", "2": "Он плыл с 13:00 до 16:00.", "3": "Затем он возвращается со скоростью 6 миль в час.", "4": "Сколько времени ему нужно, чтобы вернуться?", "5": "Он плыл на полной скорости 4 – 1 = 3 часа.", "6": "Значит, он преодолел 3 x 10 = 30 миль.", "7": "Это означает, что возвращение займет 30 / 6 = 5 часов.", "8": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['Лодка Тома может передвигаться со скоростью 10\\xa0миль в час.', 'Он плыл с 13:00 до 16:00.', 'Затем он возвращается со скоростью 6\\xa0миль в час.']\nquestion = 'Сколько времени ему нужно, чтобы вернуться?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он плыл с 13:00 до 16:00.']\nnew_fact = infer_new_fact(selected) # 'Он плыл на полной скорости 4\\xa0–\\xa01\\xa0=\\xa03\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Лодка Тома может передвигаться со скоростью 10\\xa0миль в час.', 'Он плыл на полной скорости 4\\xa0–\\xa01\\xa0=\\xa03\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Значит, он преодолел 3\\xa0x\\xa010\\xa0=\\xa030\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем он возвращается со скоростью 6\\xa0миль в час.', 'Сколько времени ему нужно, чтобы вернуться?', 'Значит, он преодолел 3\\xa0x\\xa010\\xa0=\\xa030\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Это означает, что возвращение займет 30\\xa0/\\xa06\\xa0=\\xa05\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени ему нужно, чтобы вернуться?', 'Это означает, что возвращение займет 30\\xa0/\\xa06\\xa0=\\xa05\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_52_51cab0f5b8", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [4, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5; int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5; int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15; int3 & sent6 -> int4: The answer is 15;", "textual_logical_units": {"1": "Рюкзак Урии становится слишком тяжелым для него.", "2": "Ему нужно облегчить его на 15 фунтов.", "3": "Его комиксы весят 1/4 фунта каждый,", "4": "а каждая из игрушек весит 1/2 фунта.", "5": "Если он выложит 30 комиксов,", "6": "сколько ему придется выложить игрушек?", "7": "30 комиксов весят 7,5 фунта, потому что 30 x 0,25 = 7,5.", "8": "Ему нужно выложить еще 7,5 фунтов, потому что 15 – 7,5 = 7,5.", "9": "Ему нужно выложить 15 игрушек, потому что 7,5 / 0,5 = 15.", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = [ 'Рюкзак Урии становится слишком тяжелым для него.',\n  'Ему нужно облегчить его на 15\\xa0фунтов.',\n  'Его комиксы весят 1/4\\xa0фунта каждый,',\n  'а каждая из игрушек весит 1/2\\xa0фунта.',\n  'Если он выложит 30\\xa0комиксов,']\nquestion = 'сколько ему придется выложить игрушек?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Его комиксы весят 1/4\\xa0фунта каждый,', 'Если он выложит 30\\xa0комиксов,']\nnew_fact = infer_new_fact(selected) # '30\\xa0комиксов весят 7,5\\xa0фунта, потому что 30\\xa0x\\xa00,25\\xa0=\\xa07,5.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ему нужно облегчить его на 15\\xa0фунтов.', '30\\xa0комиксов весят 7,5\\xa0фунта, потому что 30\\xa0x\\xa00,25\\xa0=\\xa07,5.']\nnew_fact = infer_new_fact(selected) # 'Ему нужно выложить еще 7,5\\xa0фунтов, потому что 15\\xa0–\\xa07,5\\xa0=\\xa07,5.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а каждая из игрушек весит 1/2\\xa0фунта.', 'сколько ему придется выложить игрушек?', 'Ему нужно выложить еще 7,5\\xa0фунтов, потому что 15\\xa0–\\xa07,5\\xa0=\\xa07,5.']\nnew_fact = infer_new_fact(selected) # 'Ему нужно выложить 15\\xa0игрушек, потому что 7,5\\xa0/\\xa00,5\\xa0=\\xa015.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько ему придется выложить игрушек?', 'Ему нужно выложить 15\\xa0игрушек, потому что 7,5\\xa0/\\xa00,5\\xa0=\\xa015.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_53_b9e40ecd00", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [3, 5, 6], "consequent": 10}, {"antecedents": [5, 7], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [9, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.; sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.; int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.; int3 & sent9 -> int4: The answer is 40;", "textual_logical_units": {"1": "Механик берет разные суммы за ремонт шин грузовых и легковых автомобилей.", "2": "За каждую отремонтированную шину грузовика", "3": "механик будет получать 60 долларов,", "4": "а за каждую отремонтированную шину легкового автомобиля", "5": "он будет получать 40 долларов.", "6": "В четверг механик ремонтирует 6 шин грузовиков и 4 шины от легковых автомобилей.", "7": "В пятницу механик ремонтирует 12 шин от легковых автомобилей и", "8": "не ремонтирует шины грузовиков.", "9": "Насколько больше заработал механик в день, когда его заработок был выше?", "10": "В четверг механик получил в общей сложности 6 x 60 + 4 x 40 = 520 долларов.", "11": "В пятницу механик всего получил 12 x 40 = 480 долларов.", "12": "Таким образом, в четверг, в день с более высоким доходом, механик получил на 520 – 480 = 40 долларов больше, чем в пятницу.", "13": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = [ 'Механик берет разные суммы за ремонт шин грузовых и легковых автомобилей.',\n  'За каждую отремонтированную шину грузовика',\n  'механик будет получать 60\\xa0долларов,',\n  'а за каждую отремонтированную шину легкового автомобиля',\n  'он будет получать 40\\xa0долларов.',\n  'В четверг механик ремонтирует 6\\xa0шин грузовиков и 4\\xa0шины от легковых автомобилей.',\n  'В пятницу механик ремонтирует 12\\xa0шин от легковых автомобилей и',\n  'не ремонтирует шины грузовиков.']\nquestion = 'Насколько больше заработал механик в день, когда его заработок был выше?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['механик будет получать 60\\xa0долларов,', 'он будет получать 40\\xa0долларов.', 'В четверг механик ремонтирует 6\\xa0шин грузовиков и 4\\xa0шины от легковых автомобилей.']\nnew_fact = infer_new_fact(selected) # 'В четверг механик получил в общей сложности 6\\xa0x\\xa060\\xa0+\\xa04\\xa0x\\xa040\\xa0=\\xa0520\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['он будет получать 40\\xa0долларов.', 'В пятницу механик ремонтирует 12\\xa0шин от легковых автомобилей и']\nnew_fact = infer_new_fact(selected) # 'В пятницу механик всего получил 12\\xa0x\\xa040\\xa0=\\xa0480\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Насколько больше заработал механик в день, когда его заработок был выше?', 'В четверг механик получил в общей сложности 6\\xa0x\\xa060\\xa0+\\xa04\\xa0x\\xa040\\xa0=\\xa0520\\xa0долларов.', 'В пятницу механик всего получил 12\\xa0x\\xa040\\xa0=\\xa0480\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в четверг, в день с более высоким доходом, механик получил на 520\\xa0–\\xa0480\\xa0=\\xa040\\xa0долларов больше, чем в пятницу.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Насколько больше заработал механик в день, когда его заработок был выше?', 'Таким образом, в четверг, в день с более высоким доходом, механик получил на 520\\xa0–\\xa0480\\xa0=\\xa040\\xa0долларов больше, чем в пятницу.']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_54_70199a93f0", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens; int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.; int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.; int3 & sent4 -> int4: The answer is 40;", "textual_logical_units": {"1": "Сестры Даутфайр едут домой с 7 котятами, которых они взяли в местном приюте для животных, когда их мама звонит им и сообщает, что у их двух домашних кошек только что родились котята.", "2": "Мама говорит, что Пэтчи, первая кошка,", "3": "родила в три раза больше котят, чем взято из приюта, а Трикси, другая кошка, — 12.", "4": "Сколько сейчас котят у семьи Даутфайр?", "5": "У Пэтчи только что родился 3 x 7 = 21 котенок.", "6": "Поскольку у Трикси 12 котят, у обеих кошек 21 + 12 = 33 котенка.", "7": "Вместе с котятами, взятыми из приюта, у семьи Даутфайр теперь 7 + 33 = 40 котят.", "8": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сестры Даутфайр едут домой с 7\\xa0котятами, которых они взяли в местном приюте для животных, когда их мама звонит им и сообщает, что у их двух домашних '\n  'кошек только что родились котята.',\n  'Мама говорит, что Пэтчи, первая кошка,',\n  'родила в три раза больше котят, чем взято из приюта, а Трикси, другая кошка,\\xa0— 12.']\nquestion = 'Сколько сейчас котят у семьи Даутфайр?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сестры Даутфайр едут домой с 7\\xa0котятами, которых они взяли в местном приюте для животных, когда их мама звонит им и сообщает, что у их двух домашних кошек только что родились котята.', 'Мама говорит, что Пэтчи, первая кошка,', 'родила в три раза больше котят, чем взято из приюта, а Трикси, другая кошка,\\xa0— 12.']\nnew_fact = infer_new_fact(selected) # 'У Пэтчи только что родился 3\\xa0x\\xa07\\xa0=\\xa021\\xa0котенок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['родила в три раза больше котят, чем взято из приюта, а Трикси, другая кошка,\\xa0— 12.', 'У Пэтчи только что родился 3\\xa0x\\xa07\\xa0=\\xa021\\xa0котенок.']\nnew_fact = infer_new_fact(selected) # 'Поскольку у Трикси 12 котят, у обеих кошек 21\\xa0+\\xa012\\xa0=\\xa033\\xa0котенка.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сестры Даутфайр едут домой с 7\\xa0котятами, которых они взяли в местном приюте для животных, когда их мама звонит им и сообщает, что у их двух домашних кошек только что родились котята.', 'Поскольку у Трикси 12 котят, у обеих кошек 21\\xa0+\\xa012\\xa0=\\xa033\\xa0котенка.']\nnew_fact = infer_new_fact(selected) # 'Вместе с котятами, взятыми из приюта, у семьи Даутфайр теперь 7\\xa0+\\xa033\\xa0=\\xa040\\xa0котят.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сейчас котят у семьи Даутфайр?', 'Вместе с котятами, взятыми из приюта, у семьи Даутфайр теперь 7\\xa0+\\xa033\\xa0=\\xa040\\xa0котят.']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_55_3f62913f36", "context": "", "options": [], "answer": "14", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops; int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops; int2 & sent4 -> int3: The answer is 14;", "textual_logical_units": {"1": "У Джин 30 леденцов.", "2": "Джин съедает 2 леденца.", "3": "Оставшиеся леденцы Джин хочет упаковать по 2 леденца в один пакетик.", "4": "Сколько пакетиков получится у Джин?", "5": "У Джин 30 – 2 = 28 леденцов.", "6": "Джин может упаковать 28 / 2 = 14 пакетиков с леденцами.", "7": "The answer is 14"}, "human_translated": true, "code_input": "####\nfacts = ['У Джин 30\\xa0леденцов.', 'Джин съедает 2\\xa0леденца.', 'Оставшиеся леденцы Джин хочет упаковать по 2 леденца в один пакетик.']\nquestion = 'Сколько пакетиков получится у Джин?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Джин 30\\xa0леденцов.', 'Джин съедает 2\\xa0леденца.']\nnew_fact = infer_new_fact(selected) # 'У Джин 30\\xa0–\\xa02\\xa0=\\xa028\\xa0леденцов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оставшиеся леденцы Джин хочет упаковать по 2 леденца в один пакетик.', 'Сколько пакетиков получится у Джин?', 'У Джин 30\\xa0–\\xa02\\xa0=\\xa028\\xa0леденцов.']\nnew_fact = infer_new_fact(selected) # 'Джин может упаковать 28\\xa0/\\xa02\\xa0=\\xa014 пакетиков с леденцами.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько пакетиков получится у Джин?', 'Джин может упаковать 28\\xa0/\\xa02\\xa0=\\xa014 пакетиков с леденцами.']\nnew_fact = infer_new_fact(selected) # 'The answer is 14'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '14'"}
{"id": "GSM8K_56_bac73f4830", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14; int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3; int2 & sent4 -> int3: The answer is 3;", "textual_logical_units": {"1": "Питер планирует пойти в кино на этой неделе.", "2": "Он всегда берет билет за 7 долларов и попкорн за 7 долларов.", "3": "Если у него есть 42 доллара на неделю,", "4": "сколько раз он может сходить в кино?", "5": "Поход в кино обходится ему в 14 долларов, потому что 7 + 7 = 14.", "6": "Он может пойти в кино 3 раза, потому что 42 / 14 = 3.", "7": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = [ 'Питер планирует пойти в кино на этой неделе.',\n  'Он всегда берет билет за 7\\xa0долларов и попкорн за 7\\xa0долларов.',\n  'Если у него есть 42\\xa0доллара на неделю,']\nquestion = 'сколько раз он может сходить в кино?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он всегда берет билет за 7\\xa0долларов и попкорн за 7\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Поход в кино обходится ему в 14\\xa0долларов, потому что 7\\xa0+\\xa07\\xa0=\\xa014.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у него есть 42\\xa0доллара на неделю,', 'Поход в кино обходится ему в 14\\xa0долларов, потому что 7\\xa0+\\xa07\\xa0=\\xa014.']\nnew_fact = infer_new_fact(selected) # 'Он может пойти в кино 3\\xa0раза, потому что 42\\xa0/\\xa014\\xa0=\\xa03.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько раз он может сходить в кино?', 'Он может пойти в кино 3\\xa0раза, потому что 42\\xa0/\\xa014\\xa0=\\xa03.']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_57_c28d1a27f0", "context": "", "options": [], "answer": "83", "reasoning_graph_edges": [{"antecedents": [1, 4, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.; int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.; int2 & sent6 -> int3: The answer is 83;", "textual_logical_units": {"1": "Деревянный мост может выдержать не более 5000 фунтов.", "2": "Грузовик, заполненный одинаковыми коробками весом 15 фунтов каждая,", "3": "должен переехать через мост.", "4": "Совокупный вес водителя и", "5": "пустого грузовика составляет 3755 фунтов.", "6": "Какое максимальное количество коробок можно загрузить в грузовик, не превышая грузоподъемность моста?", "7": "Коробки могут весить до 5000 фунтов за вычетом 3755 фунтов = 1245 фунтов.", "8": "В грузовик может быть загружено 1245 / 15 = 83 коробки, что не превысит грузоподъемность моста.", "9": "The answer is 83"}, "human_translated": true, "code_input": "####\nfacts = [ 'Деревянный мост может выдержать не более 5000\\xa0фунтов.',\n  'Грузовик, заполненный одинаковыми коробками весом 15\\xa0фунтов каждая,',\n  'должен переехать через мост.',\n  'Совокупный вес водителя и',\n  'пустого грузовика составляет 3755\\xa0фунтов.']\nquestion = 'Какое максимальное количество коробок можно загрузить в грузовик, не превышая грузоподъемность моста?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Деревянный мост может выдержать не более 5000\\xa0фунтов.', 'Совокупный вес водителя и', 'пустого грузовика составляет 3755\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'Коробки могут весить до 5000\\xa0фунтов за вычетом 3755\\xa0фунтов\\xa0=\\xa01245\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Грузовик, заполненный одинаковыми коробками весом 15\\xa0фунтов каждая,', 'Коробки могут весить до 5000\\xa0фунтов за вычетом 3755\\xa0фунтов\\xa0=\\xa01245\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'В грузовик может быть загружено 1245\\xa0/\\xa015\\xa0=\\xa083 коробки, что не превысит грузоподъемность моста.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое максимальное количество коробок можно загрузить в грузовик, не превышая грузоподъемность моста?', 'В грузовик может быть загружено 1245\\xa0/\\xa015\\xa0=\\xa083 коробки, что не превысит грузоподъемность моста.']\nnew_fact = infer_new_fact(selected) # 'The answer is 83'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '83'"}
{"id": "GSM8K_58_ee1c753c43", "context": "", "options": [], "answer": "57", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 6], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [7, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00; sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees; int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00; int3 & sent7 -> int4: The answer is 57;", "textual_logical_units": {"1": "Стивен оформил онлайн-заказ на продукты.", "2": "Его итоговый счет составил 40 долларов.", "3": "Поскольку заказ оформлен через подрядчика,", "4": "подрядчик добавил 25 % комиссии к окончательной сумме заказа и", "5": "взял 3 доллара в виде платы за доставку.", "6": "Стивен также добавил чаевые в размере 4 долларов.", "7": "Какова была окончательная цена продуктов Стивена после дополнительных платежей?", "8": "Он потратил 40 долларов на продукты, но с него взяли комиссию в размере 25 %, так что 40 x 0,25 = 10 долларов.", "9": "Также взимается плата за доставку в размере 3 долларов и чаевые в размере 4 долларов, 3 + 4 = 7 долларов.", "10": "Его продукты стоили 40 долларов, а также дополнительная комиссия в 10 долларов и еще 7 долларов в виде платы за доставку и чаевые, что в итоге составило 40 долларов + 10 долларов + 7 долларов = 57 долларов.", "11": "The answer is 57"}, "human_translated": true, "code_input": "####\nfacts = [ 'Стивен оформил онлайн-заказ на продукты.',\n  'Его итоговый счет составил 40\\xa0долларов.',\n  'Поскольку заказ оформлен через подрядчика,',\n  'подрядчик добавил 25\\xa0% комиссии к окончательной сумме заказа и',\n  'взял 3\\xa0доллара в виде платы за доставку.',\n  'Стивен также добавил чаевые в размере 4\\xa0долларов.']\nquestion = 'Какова была окончательная цена продуктов Стивена после дополнительных платежей?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Его итоговый счет составил 40\\xa0долларов.', 'подрядчик добавил 25\\xa0% комиссии к окончательной сумме заказа и']\nnew_fact = infer_new_fact(selected) # 'Он потратил 40\\xa0долларов на продукты, но с него взяли комиссию в размере 25\\xa0%, так что 40\\xa0x\\xa00,25\\xa0=\\xa010\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['взял 3\\xa0доллара в виде платы за доставку.', 'Стивен также добавил чаевые в размере 4\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Также взимается плата за доставку в размере 3\\xa0долларов и чаевые в размере 4\\xa0долларов, 3\\xa0+\\xa04\\xa0=\\xa07\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он потратил 40\\xa0долларов на продукты, но с него взяли комиссию в размере 25\\xa0%, так что 40\\xa0x\\xa00,25\\xa0=\\xa010\\xa0долларов.', 'Также взимается плата за доставку в размере 3\\xa0долларов и чаевые в размере 4\\xa0долларов, 3\\xa0+\\xa04\\xa0=\\xa07\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Его продукты стоили 40\\xa0долларов, а также дополнительная комиссия в 10\\xa0долларов и еще 7\\xa0долларов в виде платы за доставку и чаевые, что в итоге составило 40\\xa0долларов\\xa0+\\xa010\\xa0долларов\\xa0+\\xa07\\xa0долларов\\xa0=\\xa057\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова была окончательная цена продуктов Стивена после дополнительных платежей?', 'Его продукты стоили 40\\xa0долларов, а также дополнительная комиссия в 10\\xa0долларов и еще 7\\xa0долларов в виде платы за доставку и чаевые, что в итоге составило 40\\xa0долларов\\xa0+\\xa010\\xa0долларов\\xa0+\\xa07\\xa0долларов\\xa0=\\xa057\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 57'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '57'"}
{"id": "GSM8K_59_d2005757cb", "context": "", "options": [], "answer": "187", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit; int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit; int2 & sent3 -> int3: The answer is 187;", "textual_logical_units": {"1": "На кусте малины созрело 6 гроздей по 20 ягод в каждой и", "2": "67 отдельных ягод, разбросанных по кусту.", "3": "Сколько всего ягод малины созрело?", "4": "Сначала найдите количество ягод в гроздьях: 20 ягод/гроздь x 6 гроздей = 120 ягод.", "5": "Затем сложите количество отдельных ягод, чтобы найти общее количество ягод: 120 ягод + 67 ягод = 187 ягод.", "6": "The answer is 187"}, "human_translated": true, "code_input": "####\nfacts = ['На кусте малины созрело 6\\xa0гроздей по 20\\xa0ягод в каждой и', '67\\xa0отдельных ягод, разбросанных по кусту.']\nquestion = 'Сколько всего ягод малины созрело?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На кусте малины созрело 6\\xa0гроздей по 20\\xa0ягод в каждой и']\nnew_fact = infer_new_fact(selected) # 'Сначала найдите количество ягод в гроздьях: 20\\xa0ягод/гроздь\\xa0x\\xa06\\xa0гроздей\\xa0=\\xa0120\\xa0ягод.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['67\\xa0отдельных ягод, разбросанных по кусту.', 'Сначала найдите количество ягод в гроздьях: 20\\xa0ягод/гроздь\\xa0x\\xa06\\xa0гроздей\\xa0=\\xa0120\\xa0ягод.']\nnew_fact = infer_new_fact(selected) # 'Затем сложите количество отдельных ягод, чтобы найти общее количество ягод: 120\\xa0ягод\\xa0+\\xa067\\xa0ягод\\xa0=\\xa0187\\xa0ягод.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего ягод малины созрело?', 'Затем сложите количество отдельных ягод, чтобы найти общее количество ягод: 120\\xa0ягод\\xa0+\\xa067\\xa0ягод\\xa0=\\xa0187\\xa0ягод.']\nnew_fact = infer_new_fact(selected) # 'The answer is 187'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '187'"}
{"id": "GSM8K_60_b4dc5170cd", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 2, 3, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges; int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges; int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good; int3 & sent2 -> int4: The answer is 17;", "textual_logical_units": {"1": "В корзине 25 апельсинов, из которых 1 плохой, 20 % незрелые, 2 кислых, а остальные хорошие.", "2": "Сколько апельсинов хороши?", "3": "20 % из 25 апельсинов — это (20 / 100) x 25 = 5 апельсинов.", "4": "Таким образом, общее количество плохих, незрелых и кислых апельсинов составляет 1 + 5 + 2 = 8 апельсинов.", "5": "Остальные (25 – 8 = 17 апельсинов) — хорошие.", "6": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = ['В корзине 25\\xa0апельсинов, из которых 1\\xa0плохой, 20\\xa0% незрелые, 2\\xa0кислых, а остальные хорошие.']\nquestion = 'Сколько апельсинов хороши?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В корзине 25\\xa0апельсинов, из которых 1\\xa0плохой, 20\\xa0% незрелые, 2\\xa0кислых, а остальные хорошие.']\nnew_fact = infer_new_fact(selected) # '20\\xa0% из 25\\xa0апельсинов\\xa0— это (20\\xa0/\\xa0100)\\xa0x\\xa025\\xa0=\\xa05\\xa0апельсинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В корзине 25\\xa0апельсинов, из которых 1\\xa0плохой, 20\\xa0% незрелые, 2\\xa0кислых, а остальные хорошие.', '20\\xa0% из 25\\xa0апельсинов\\xa0— это (20\\xa0/\\xa0100)\\xa0x\\xa025\\xa0=\\xa05\\xa0апельсинов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, общее количество плохих, незрелых и кислых апельсинов составляет 1\\xa0+\\xa05\\xa0+\\xa02\\xa0=\\xa08\\xa0апельсинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В корзине 25\\xa0апельсинов, из которых 1\\xa0плохой, 20\\xa0% незрелые, 2\\xa0кислых, а остальные хорошие.', 'Сколько апельсинов хороши?', '20\\xa0% из 25\\xa0апельсинов\\xa0— это (20\\xa0/\\xa0100)\\xa0x\\xa025\\xa0=\\xa05\\xa0апельсинов.', 'Таким образом, общее количество плохих, незрелых и кислых апельсинов составляет 1\\xa0+\\xa05\\xa0+\\xa02\\xa0=\\xa08\\xa0апельсинов.']\nnew_fact = infer_new_fact(selected) # 'Остальные (25\\xa0–\\xa08\\xa0=\\xa017\\xa0апельсинов)\\xa0— хорошие.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько апельсинов хороши?', 'Остальные (25\\xa0–\\xa08\\xa0=\\xa017\\xa0апельсинов)\\xa0— хорошие.']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_61_6e93c38f35", "context": "", "options": [], "answer": "1430", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300; int1 & sent4 -> int2: The insurance was 1300*.1=$130; int1 & int2 -> int3: So she pays 1300+130=$1430; int3 & sent5 -> int4: The answer is 1430;", "textual_logical_units": {"1": "Джанет покупает своей дочери брошь.", "2": "Она платит 500 долларов за материал для нее и", "3": "затем еще 800 долларов ювелиру за изготовление.", "4": "После этого она платит 10 % от этой суммы, чтобы застраховать брошь.", "5": "Сколько она заплатила?", "6": "Общая стоимость броши составила 500 + 800 = 1300 долларов.", "7": "Страховка составила 1300 x 0,1 = 130 долларов.", "8": "Таким образом, она заплатит 1300 + 130 = 1430 долларов.", "9": "The answer is 1430"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джанет покупает своей дочери брошь.',\n  'Она платит 500\\xa0долларов за материал для нее и',\n  'затем еще 800\\xa0долларов ювелиру за изготовление.',\n  'После этого она платит 10\\xa0% от этой суммы, чтобы застраховать брошь.']\nquestion = 'Сколько она заплатила?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она платит 500\\xa0долларов за материал для нее и', 'затем еще 800\\xa0долларов ювелиру за изготовление.']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость броши составила 500\\xa0+\\xa0800\\xa0=\\xa01300\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После этого она платит 10\\xa0% от этой суммы, чтобы застраховать брошь.', 'Общая стоимость броши составила 500\\xa0+\\xa0800\\xa0=\\xa01300\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Страховка составила 1300\\xa0x\\xa00,1\\xa0=\\xa0130\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая стоимость броши составила 500\\xa0+\\xa0800\\xa0=\\xa01300\\xa0долларов.', 'Страховка составила 1300\\xa0x\\xa00,1\\xa0=\\xa0130\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, она заплатит 1300\\xa0+\\xa0130\\xa0=\\xa01430\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько она заплатила?', 'Таким образом, она заплатит 1300\\xa0+\\xa0130\\xa0=\\xa01430\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1430'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1430'"}
{"id": "GSM8K_62_aa8b921815", "context": "", "options": [], "answer": "25000", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years; int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%; int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000; int3 & sent5 -> int4: The answer is 25000;", "textual_logical_units": {"1": "Если Марси проработает в одной и той же компании 40 лет,", "2": "она получит годовую пенсию в размере 50 000 долларов в год.", "3": "По истечении 20 лет она получает право на получение 5 % от размера пенсии в год.", "4": "Если она уволится через 30 лет,", "5": "какой будет ее годовая пенсия?", "6": "Сначала узнайте, сколько лет работает Марси спустя 20 лет: 30 лет – 20 лет = 10 лет.", "7": "Затем умножьте это число на сумму пенсии, которую она получает в год: 10 лет x 5 % = 50 %.", "8": "Затем умножьте этот процент на общую сумму полной пенсии, чтобы узнать, сколько она получает: 50 000 долларов x 50 % = 25 000 долларов.", "9": "The answer is 25000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Если Марси проработает в одной и той же компании 40\\xa0лет,',\n  'она получит годовую пенсию в размере 50\\xa0000\\xa0долларов в год.',\n  'По истечении 20\\xa0лет она получает право на получение 5\\xa0% от размера пенсии в год.',\n  'Если она уволится через 30\\xa0лет,']\nquestion = 'какой будет ее годовая пенсия?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['По истечении 20\\xa0лет она получает право на получение 5\\xa0% от размера пенсии в год.', 'Если она уволится через 30\\xa0лет,']\nnew_fact = infer_new_fact(selected) # 'Сначала узнайте, сколько лет работает Марси спустя 20\\xa0лет: 30\\xa0лет\\xa0–\\xa020\\xa0лет\\xa0=\\xa010\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По истечении 20\\xa0лет она получает право на получение 5\\xa0% от размера пенсии в год.', 'Сначала узнайте, сколько лет работает Марси спустя 20\\xa0лет: 30\\xa0лет\\xa0–\\xa020\\xa0лет\\xa0=\\xa010\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Затем умножьте это число на сумму пенсии, которую она получает в год: 10\\xa0лет\\xa0x\\xa05\\xa0%\\xa0=\\xa050\\xa0%.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['она получит годовую пенсию в размере 50\\xa0000\\xa0долларов в год.', 'Затем умножьте это число на сумму пенсии, которую она получает в год: 10\\xa0лет\\xa0x\\xa05\\xa0%\\xa0=\\xa050\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Затем умножьте этот процент на общую сумму полной пенсии, чтобы узнать, сколько она получает: 50\\xa0000 долларов\\xa0x\\xa050\\xa0%\\xa0=\\xa025\\xa0000 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой будет ее годовая пенсия?', 'Затем умножьте этот процент на общую сумму полной пенсии, чтобы узнать, сколько она получает: 50\\xa0000 долларов\\xa0x\\xa050\\xa0%\\xa0=\\xa025\\xa0000 долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 25000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25000'"}
{"id": "GSM8K_63_1883b4fc6e", "context": "", "options": [], "answer": "1596", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 3], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [3, 5, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,; int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840; sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less; int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,; int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.; int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596; int6 & sent4 -> int7: The answer is 1596;", "textual_logical_units": {"1": "Алина подписалась на стриминговый сервис, который взимает с нее 140 долларов в месяц.", "2": "Если стриминговая компания взимала с нее первоначальную сумму за первое полугодие и", "3": "на 10 % меньше денег во второй половине года,", "4": "рассчитайте общую сумму, которую она заплатила за стриминговый сервис к концу года.", "5": "В году двенадцать месяцев, поэтому половина года составляет 12 / 2 = 6 месяцев.", "6": "За первые шесть месяцев стриминговый сервис взимал с нее в общей сложности 6 x 140 = 840 долларов.", "7": "За следующее полугодие компания, предоставляющая стриминговый сервис, взимала с нее 10 / 100 x 140 = на 14 долларов меньше.", "8": "В оставшейся половине года она ежемесячно платила 140 – 14 = 126 долларов.", "9": "В общей сложности за вторую половину года она заплатила 126 x 6 = 756 долларов за стриминговый сервис.", "10": "Общая сумма денег, которую она заплатила в конце года, составила 840 долларов + 756 долларов = 1596 долларов.", "11": "The answer is 1596"}, "human_translated": true, "code_input": "####\nfacts = [ 'Алина подписалась на стриминговый сервис, который взимает с нее 140\\xa0долларов в месяц.',\n  'Если стриминговая компания взимала с нее первоначальную сумму за первое полугодие и',\n  'на 10\\xa0% меньше денег во второй половине года,']\nquestion = 'рассчитайте общую сумму, которую она заплатила за стриминговый сервис к концу года.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если стриминговая компания взимала с нее первоначальную сумму за первое полугодие и']\nnew_fact = infer_new_fact(selected) # 'В году двенадцать месяцев, поэтому половина года составляет 12\\xa0/\\xa02\\xa0=\\xa06\\xa0месяцев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Алина подписалась на стриминговый сервис, который взимает с нее 140\\xa0долларов в месяц.', 'В году двенадцать месяцев, поэтому половина года составляет 12\\xa0/\\xa02\\xa0=\\xa06\\xa0месяцев.']\nnew_fact = infer_new_fact(selected) # 'За первые шесть месяцев стриминговый сервис взимал с нее в общей сложности 6\\xa0x\\xa0140\\xa0=\\xa0840\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Алина подписалась на стриминговый сервис, который взимает с нее 140\\xa0долларов в месяц.', 'на 10\\xa0% меньше денег во второй половине года,']\nnew_fact = infer_new_fact(selected) # 'За следующее полугодие компания, предоставляющая стриминговый сервис, взимала с нее 10\\xa0/\\xa0100\\xa0x\\xa0140\\xa0=\\xa0на\\xa014\\xa0долларов меньше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Алина подписалась на стриминговый сервис, который взимает с нее 140\\xa0долларов в месяц.', 'За следующее полугодие компания, предоставляющая стриминговый сервис, взимала с нее 10\\xa0/\\xa0100\\xa0x\\xa0140\\xa0=\\xa0на\\xa014\\xa0долларов меньше.']\nnew_fact = infer_new_fact(selected) # 'В оставшейся половине года она ежемесячно платила 140\\xa0–\\xa014\\xa0=\\xa0126\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на 10\\xa0% меньше денег во второй половине года,', 'В году двенадцать месяцев, поэтому половина года составляет 12\\xa0/\\xa02\\xa0=\\xa06\\xa0месяцев.', 'В оставшейся половине года она ежемесячно платила 140\\xa0–\\xa014\\xa0=\\xa0126\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности за вторую половину года она заплатила 126\\xa0x\\xa06\\xa0=\\xa0756 долларов за стриминговый сервис.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За первые шесть месяцев стриминговый сервис взимал с нее в общей сложности 6\\xa0x\\xa0140\\xa0=\\xa0840\\xa0долларов.', 'В общей сложности за вторую половину года она заплатила 126\\xa0x\\xa06\\xa0=\\xa0756 долларов за стриминговый сервис.']\nnew_fact = infer_new_fact(selected) # 'Общая сумма денег, которую она заплатила в конце года, составила 840\\xa0долларов\\xa0+\\xa0756\\xa0долларов\\xa0=\\xa01596\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рассчитайте общую сумму, которую она заплатила за стриминговый сервис к концу года.', 'Общая сумма денег, которую она заплатила в конце года, составила 840\\xa0долларов\\xa0+\\xa0756\\xa0долларов\\xa0=\\xa01596\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1596'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1596'"}
{"id": "GSM8K_64_74e8075a62", "context": "", "options": [], "answer": "300", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon; int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles; int2 & sent6 -> int3: The answer is 300;", "textual_logical_units": {"1": "София подумывает отправиться в путешествие на своей машине", "2": "и хотела бы знать, как далеко она может проехать на одном баке бензина.", "3": "Она проехала 100 миль с тех пор, как в последний раз заправляла свой бак,", "4": "и ей нужно было налить 4 галлона газа, чтобы снова его заправить.", "5": "В руководстве по эксплуатации машины указано, что ее бак вмещает 12 галлонов бензина.", "6": "Сколько миль София может проехать на одном баке?", "7": "Чтобы рассчитать количество миль на галлон, разделите 100 миль / 4 галлона = 25 миль на галлон.", "8": "Чтобы узнать, как далеко София может проехать на одном баке, умножьте 25 миль на галлон x 12 галлонов = 300 миль.", "9": "The answer is 300"}, "human_translated": true, "code_input": "####\nfacts = [ 'София подумывает отправиться в путешествие на своей машине',\n  'и хотела бы знать, как далеко она может проехать на одном баке бензина.',\n  'Она проехала 100\\xa0миль с тех пор, как в последний раз заправляла свой бак,',\n  'и ей нужно было налить 4\\xa0галлона газа, чтобы снова его заправить.',\n  'В руководстве по эксплуатации машины указано, что ее бак вмещает 12\\xa0галлонов бензина.']\nquestion = 'Сколько миль София может проехать на одном баке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она проехала 100\\xa0миль с тех пор, как в последний раз заправляла свой бак,', 'и ей нужно было налить 4\\xa0галлона газа, чтобы снова его заправить.']\nnew_fact = infer_new_fact(selected) # 'Чтобы рассчитать количество миль на галлон, разделите 100\\xa0миль\\xa0/\\xa04\\xa0галлона\\xa0=\\xa025\\xa0миль на галлон.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В руководстве по эксплуатации машины указано, что ее бак вмещает 12\\xa0галлонов бензина.', 'Чтобы рассчитать количество миль на галлон, разделите 100\\xa0миль\\xa0/\\xa04\\xa0галлона\\xa0=\\xa025\\xa0миль на галлон.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать, как далеко София может проехать на одном баке, умножьте 25\\xa0миль на галлон\\xa0x\\xa012\\xa0галлонов\\xa0=\\xa0300\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько миль София может проехать на одном баке?', 'Чтобы узнать, как далеко София может проехать на одном баке, умножьте 25\\xa0миль на галлон\\xa0x\\xa012\\xa0галлонов\\xa0=\\xa0300\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'The answer is 300'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '300'"}
{"id": "GSM8K_65_b2468a824b", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night; int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities; int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them; int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities; int4 & sent5 -> int5: The answer is 36;", "textual_logical_units": {"1": "Джим проводит 2 часа у телевизора,", "2": "затем решает отправиться в постель и", "3": "читает в два раза меньше времени.", "4": "Он делает так 3 раза в неделю.", "5": "Сколько часов он тратит на просмотр телевизора и чтение за 4 недели?", "6": "Он читает 2 / 2 = 1 час в сутки.", "7": "Таким образом, он тратит 2 + 1 = 3 часа на эти занятия.", "8": "Следовательно, он тратит 3 x 3 = 9 часов в неделю.", "9": "Таким образом, за 4 недели он тратит 9 x 4 = 36 часов на эти занятия.", "10": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['Джим проводит 2\\xa0часа у телевизора,', 'затем решает отправиться в постель и', 'читает в два раза меньше времени.', 'Он делает так 3\\xa0раза в неделю.']\nquestion = 'Сколько часов он тратит на просмотр телевизора и чтение за 4\\xa0недели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джим проводит 2\\xa0часа у телевизора,', 'затем решает отправиться в постель и', 'читает в два раза меньше времени.']\nnew_fact = infer_new_fact(selected) # 'Он читает 2\\xa0/\\xa02\\xa0=\\xa01\\xa0час в сутки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джим проводит 2\\xa0часа у телевизора,', 'читает в два раза меньше времени.', 'Он читает 2\\xa0/\\xa02\\xa0=\\xa01\\xa0час в сутки.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, он тратит 2\\xa0+\\xa01\\xa0=\\xa03\\xa0часа на эти занятия.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он делает так 3\\xa0раза в неделю.', 'Он читает 2\\xa0/\\xa02\\xa0=\\xa01\\xa0час в сутки.', 'Таким образом, он тратит 2\\xa0+\\xa01\\xa0=\\xa03\\xa0часа на эти занятия.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он тратит 3\\xa0x\\xa03\\xa0=\\xa09 часов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов он тратит на просмотр телевизора и чтение за 4\\xa0недели?', 'Следовательно, он тратит 3\\xa0x\\xa03\\xa0=\\xa09 часов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, за 4\\xa0недели он тратит 9\\xa0x\\xa04\\xa0=\\xa036\\xa0часов на эти занятия.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов он тратит на просмотр телевизора и чтение за 4\\xa0недели?', 'Таким образом, за 4\\xa0недели он тратит 9\\xa0x\\xa04\\xa0=\\xa036\\xa0часов на эти занятия.']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_66_c163f23711", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [2, 3, 5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.; int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.; sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.; int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.; int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.; int5 & sent6 -> int6: The answer is 48;", "textual_logical_units": {"1": "Четыре школы участвуют в баскетбольном турнире.", "2": "Каждая школа отправила на турнир баскетбольную команду девочек и", "3": "баскетбольную команду мальчиков, а", "4": "в каждой команде по 5 игроков.", "5": "Также каждая школа отправила на турнир тренера каждой команды.", "6": "В общей сложности, сколько человек отправили все школы?", "7": "Каждая школа отправила 1 баскетбольную команду девочек + 1 баскетбольную команду мальчиков = 2 команды.", "8": "Таким образом, каждая школа отправила 2 команды x 5 игроков на команду = 10 игроков.", "9": "Кроме того, каждая из них отправила по 1 тренеру x 2 команды = 2 тренера.", "10": "Всего каждая школа отправила 10 игроков + 2 тренера = 12 человек.", "11": "Таким образом, школы направили в общей сложности 12 человек на школу x 4 школы = 48 человек.", "12": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = [ 'Четыре школы участвуют в баскетбольном турнире.',\n  'Каждая школа отправила на турнир баскетбольную команду девочек и',\n  'баскетбольную команду мальчиков, а',\n  'в каждой команде по 5\\xa0игроков.',\n  'Также каждая школа отправила на турнир тренера каждой команды.']\nquestion = 'В общей сложности, сколько человек отправили все школы?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждая школа отправила на турнир баскетбольную команду девочек и', 'баскетбольную команду мальчиков, а']\nnew_fact = infer_new_fact(selected) # 'Каждая школа отправила 1 баскетбольную команду девочек\\xa0+\\xa01\\xa0баскетбольную команду мальчиков\\xa0=\\xa02\\xa0команды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в каждой команде по 5\\xa0игроков.', 'Каждая школа отправила 1 баскетбольную команду девочек\\xa0+\\xa01\\xa0баскетбольную команду мальчиков\\xa0=\\xa02\\xa0команды.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, каждая школа отправила 2\\xa0команды\\xa0x\\xa05\\xa0игроков на команду\\xa0=\\xa010\\xa0игроков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая школа отправила на турнир баскетбольную команду девочек и', 'баскетбольную команду мальчиков, а', 'Также каждая школа отправила на турнир тренера каждой команды.']\nnew_fact = infer_new_fact(selected) # 'Кроме того, каждая из них отправила по 1\\xa0тренеру x\\xa02\\xa0команды\\xa0=\\xa02\\xa0тренера.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, каждая школа отправила 2\\xa0команды\\xa0x\\xa05\\xa0игроков на команду\\xa0=\\xa010\\xa0игроков.', 'Кроме того, каждая из них отправила по 1\\xa0тренеру x\\xa02\\xa0команды\\xa0=\\xa02\\xa0тренера.']\nnew_fact = infer_new_fact(selected) # 'Всего каждая школа отправила 10\\xa0игроков\\xa0+\\xa02\\xa0тренера\\xa0=\\xa012\\xa0человек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Четыре школы участвуют в баскетбольном турнире.', 'Всего каждая школа отправила 10\\xa0игроков\\xa0+\\xa02\\xa0тренера\\xa0=\\xa012\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, школы направили в общей сложности 12\\xa0человек на школу\\xa0x\\xa04\\xa0школы\\xa0=\\xa048\\xa0человек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В общей сложности, сколько человек отправили все школы?', 'Таким образом, школы направили в общей сложности 12\\xa0человек на школу\\xa0x\\xa04\\xa0школы\\xa0=\\xa048\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_67_eac7b1ff98", "context": "", "options": [], "answer": "595", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.; int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.; int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.; int3 & sent4 -> int4: The answer is 595;", "textual_logical_units": {"1": "Охотник за сокровищами обнаружил спрятанный сундук с драгоценными камнями.", "2": "В сундуке 175 алмазов, на 35 рубинов меньше", "3": "и в 2 раза больше изумрудов, чем рубинов.", "4": "Сколько драгоценных камней было в сундуке?", "5": "В сундуке с сокровищами было 175 – 35 = 140 рубинов.", "6": "В сундуке с сокровищами было 140 x 2 = 280 изумрудов.", "7": "Итак, общее количество драгоценных камней в сундуке с сокровищами составляет 175 + 140 + 280 = 595.", "8": "The answer is 595"}, "human_translated": true, "code_input": "####\nfacts = [ 'Охотник за сокровищами обнаружил спрятанный сундук с драгоценными камнями.',\n  'В сундуке 175\\xa0алмазов, на 35\\xa0рубинов меньше',\n  'и в 2\\xa0раза больше изумрудов, чем рубинов.']\nquestion = 'Сколько драгоценных камней было в сундуке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В сундуке 175\\xa0алмазов, на 35\\xa0рубинов меньше']\nnew_fact = infer_new_fact(selected) # 'В сундуке с сокровищами было 175\\xa0–\\xa035\\xa0=\\xa0140\\xa0рубинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и в 2\\xa0раза больше изумрудов, чем рубинов.', 'В сундуке с сокровищами было 175\\xa0–\\xa035\\xa0=\\xa0140\\xa0рубинов.']\nnew_fact = infer_new_fact(selected) # 'В сундуке с сокровищами было 140\\xa0x\\xa02\\xa0=\\xa0280\\xa0изумрудов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В сундуке 175\\xa0алмазов, на 35\\xa0рубинов меньше', 'В сундуке с сокровищами было 175\\xa0–\\xa035\\xa0=\\xa0140\\xa0рубинов.', 'В сундуке с сокровищами было 140\\xa0x\\xa02\\xa0=\\xa0280\\xa0изумрудов.']\nnew_fact = infer_new_fact(selected) # 'Итак, общее количество драгоценных камней в сундуке с сокровищами составляет 175\\xa0+\\xa0140\\xa0+\\xa0280\\xa0=\\xa0595.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько драгоценных камней было в сундуке?', 'Итак, общее количество драгоценных камней в сундуке с сокровищами составляет 175\\xa0+\\xa0140\\xa0+\\xa0280\\xa0=\\xa0595.']\nnew_fact = infer_new_fact(selected) # 'The answer is 595'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '595'"}
{"id": "GSM8K_68_e7bde02c2e", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys; int1 & sent3 -> int2: There are 120 + 60 = 180 students in total; int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers; int3 & sent5 -> int4: The answer is 36;", "textual_logical_units": {"1": "В школе директора Верца в два раза больше мальчиков,", "2": "чем девочек.", "3": "Если в школе 60 девочек и", "4": "5 учеников на каждого учителя,", "5": "сколько в школе учителей?", "6": "Мальчиков в два раза больше, чем девочек, поэтому если девочек 60, то 2 x 60 = 120 мальчиков.", "7": "Всего учеников 120 + 60 = 180.", "8": "Если на каждого учителя приходится 5 учеников, то 180 ученикам потребуется 180 / 5 = 36 учителей.", "9": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['В школе директора Верца в два раза больше мальчиков,', 'чем девочек.', 'Если в школе 60\\xa0девочек и', '5\\xa0учеников на каждого учителя,']\nquestion = 'сколько в школе учителей?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В школе директора Верца в два раза больше мальчиков,', 'Если в школе 60\\xa0девочек и']\nnew_fact = infer_new_fact(selected) # 'Мальчиков в два раза больше, чем девочек, поэтому если девочек 60, то 2\\xa0x\\xa060\\xa0=\\xa0120\\xa0мальчиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в школе 60\\xa0девочек и', 'Мальчиков в два раза больше, чем девочек, поэтому если девочек 60, то 2\\xa0x\\xa060\\xa0=\\xa0120\\xa0мальчиков.']\nnew_fact = infer_new_fact(selected) # 'Всего учеников 120\\xa0+\\xa060\\xa0=\\xa0180.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5\\xa0учеников на каждого учителя,', 'Всего учеников 120\\xa0+\\xa060\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'Если на каждого учителя приходится 5\\xa0учеников, то 180\\xa0ученикам потребуется 180\\xa0/\\xa05\\xa0=\\xa036\\xa0учителей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько в школе учителей?', 'Если на каждого учителя приходится 5\\xa0учеников, то 180\\xa0ученикам потребуется 180\\xa0/\\xa05\\xa0=\\xa036\\xa0учителей.']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_69_3b456d32d8", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [3, 4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance; int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60; int2 & sent3 & sent4 & sent5 -> int3: The answer is 60;", "textual_logical_units": {"1": "У Бейли есть определенная сумма денег.", "2": "Она получает еженедельное пособие в размере 5 долларов в течение 8 недель.", "3": "Если по истечении 8 недель", "4": "у нее в общей сложности накопилось 100 долларов,", "5": "сколько денег было у Бейли?", "6": "За 8 недель Бейли получает пособие в размере 5 x 8 = 40 долларов.", "7": "Изначально у Бейли было 100 – 40 = 60 долларов.", "8": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Бейли есть определенная сумма денег.',\n  'Она получает еженедельное пособие в размере 5\\xa0долларов в течение 8\\xa0недель.',\n  'Если по истечении 8\\xa0недель',\n  'у нее в общей сложности накопилось 100\\xa0долларов,']\nquestion = 'сколько денег было у Бейли?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она получает еженедельное пособие в размере 5\\xa0долларов в течение 8\\xa0недель.']\nnew_fact = infer_new_fact(selected) # 'За 8\\xa0недель Бейли получает пособие в размере 5\\xa0x\\xa08\\xa0=\\xa040\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если по истечении 8\\xa0недель', 'у нее в общей сложности накопилось 100\\xa0долларов,', 'За 8\\xa0недель Бейли получает пособие в размере 5\\xa0x\\xa08\\xa0=\\xa040\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Изначально у Бейли было 100\\xa0–\\xa040\\xa0=\\xa060\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если по истечении 8\\xa0недель', 'у нее в общей сложности накопилось 100\\xa0долларов,', 'сколько денег было у Бейли?', 'Изначально у Бейли было 100\\xa0–\\xa040\\xa0=\\xa060\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_70_5540274292", "context": "", "options": [], "answer": "7425", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes; int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes; int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students; int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425; int4 & sent2 & sent3 & sent4 -> int5: The answer is 7425;", "textual_logical_units": {"1": "Джуди проводит 5 уроков танцев каждый день по будням и 8 уроков в субботу.", "2": "Если в каждом классе 15 учеников и", "3": "она получает 15 долларов за каждого ученика,", "4": "сколько она зарабатывает за 1 неделю?", "5": "Она проводит 5 уроков танцев 5 дней в неделю, всего 5 x 5 = 25 уроков.", "6": "Она проводит 25 уроков в неделю и 8 уроков в субботу, в общей сложности 25 + 8 = 33 урока.", "7": "На каждом из 33 уроков по 15 учеников, поэтому 15 x 33 = 495 учеников.", "8": "Каждый ученик платит 15 долларов за занятие, всего учеников 495, поэтому Джуди зарабатывает 15 x 495 = 7425 долларов.", "9": "The answer is 7425"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джуди проводит 5\\xa0уроков танцев каждый день по будням и 8\\xa0уроков в субботу.',\n  'Если в каждом классе 15\\xa0учеников и',\n  'она получает 15\\xa0долларов за каждого ученика,']\nquestion = 'сколько она зарабатывает за 1\\xa0неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джуди проводит 5\\xa0уроков танцев каждый день по будням и 8\\xa0уроков в субботу.']\nnew_fact = infer_new_fact(selected) # 'Она проводит 5\\xa0уроков танцев 5\\xa0дней в неделю, всего 5\\xa0x\\xa05\\xa0=\\xa025\\xa0уроков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джуди проводит 5\\xa0уроков танцев каждый день по будням и 8\\xa0уроков в субботу.', 'Она проводит 5\\xa0уроков танцев 5\\xa0дней в неделю, всего 5\\xa0x\\xa05\\xa0=\\xa025\\xa0уроков.']\nnew_fact = infer_new_fact(selected) # 'Она проводит 25\\xa0уроков в неделю и 8\\xa0уроков в субботу, в общей сложности 25\\xa0+\\xa08\\xa0=\\xa033\\xa0урока.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в каждом классе 15\\xa0учеников и', 'Она проводит 25\\xa0уроков в неделю и 8\\xa0уроков в субботу, в общей сложности 25\\xa0+\\xa08\\xa0=\\xa033\\xa0урока.']\nnew_fact = infer_new_fact(selected) # 'На каждом из 33\\xa0уроков по 15\\xa0учеников, поэтому 15\\xa0x\\xa033\\xa0=\\xa0495\\xa0учеников.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['она получает 15\\xa0долларов за каждого ученика,', 'На каждом из 33\\xa0уроков по 15\\xa0учеников, поэтому 15\\xa0x\\xa033\\xa0=\\xa0495\\xa0учеников.']\nnew_fact = infer_new_fact(selected) # 'Каждый ученик платит 15\\xa0долларов за занятие, всего учеников\\xa0495, поэтому Джуди зарабатывает 15\\xa0x\\xa0495\\xa0=\\xa07425\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в каждом классе 15\\xa0учеников и', 'она получает 15\\xa0долларов за каждого ученика,', 'сколько она зарабатывает за 1\\xa0неделю?', 'Каждый ученик платит 15\\xa0долларов за занятие, всего учеников\\xa0495, поэтому Джуди зарабатывает 15\\xa0x\\xa0495\\xa0=\\xa07425\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7425'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7425'"}
{"id": "GSM8K_71_c4f2bf54b1", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.; int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.; int2 & sent4 -> int3: The answer is 60;", "textual_logical_units": {"1": "У Келиана есть два рецепта любимых блюд,", "2": "в одном рецепте 20 пунктов,", "3": "а во втором в два раза больше пунктов, чем в первом.", "4": "Сколько пунктов нужно прочитать Келиану, чтобы приготовить эти два блюда?", "5": "Во втором рецепте 2 x 20 пунктов = 40 пунктов.", "6": "Всего в обоих рецептах 40 + 20 = 60 пунктов.", "7": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['У Келиана есть два рецепта любимых блюд,', 'в одном рецепте 20\\xa0пунктов,', 'а во втором в два раза больше пунктов, чем в первом.']\nquestion = 'Сколько пунктов нужно прочитать Келиану, чтобы приготовить эти два блюда?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['в одном рецепте 20\\xa0пунктов,', 'а во втором в два раза больше пунктов, чем в первом.']\nnew_fact = infer_new_fact(selected) # 'Во втором рецепте 2\\xa0x\\xa020\\xa0пунктов\\xa0=\\xa040\\xa0пунктов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в одном рецепте 20\\xa0пунктов,', 'Во втором рецепте 2\\xa0x\\xa020\\xa0пунктов\\xa0=\\xa040\\xa0пунктов.']\nnew_fact = infer_new_fact(selected) # 'Всего в обоих рецептах 40\\xa0+\\xa020\\xa0=\\xa060\\xa0пунктов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько пунктов нужно прочитать Келиану, чтобы приготовить эти два блюда?', 'Всего в обоих рецептах 40\\xa0+\\xa020\\xa0=\\xa060\\xa0пунктов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_72_53c969e291", "context": "", "options": [], "answer": "221", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.; sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.; int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221; int3 & sent3 & sent4 -> int4: The answer is 221;", "textual_logical_units": {"1": "Томми собирает средства на благотворительность, продавая брауни по 3 доллара за кусочек и", "2": "чизкейки по 4 доллара за кусочек.", "3": "Если Томми продаст 43 кусочка брауни и 23 кусочка чизкейка,", "4": "сколько денег он соберет?", "5": "Продавая брауни, Томми соберет 43 x 3 доллара = 129 долларов.", "6": "Продавая чизкейки, Томми соберет 23 x 4 доллара = 92 доллара.", "7": "В общей сложности Томми соберет 129 + 92 = 221 доллар.", "8": "The answer is 221"}, "human_translated": true, "code_input": "####\nfacts = [ 'Томми собирает средства на благотворительность, продавая брауни по 3\\xa0доллара за кусочек и',\n  'чизкейки по 4\\xa0доллара за кусочек.',\n  'Если Томми продаст 43\\xa0кусочка брауни и 23\\xa0кусочка чизкейка,']\nquestion = 'сколько денег он соберет?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Томми собирает средства на благотворительность, продавая брауни по 3\\xa0доллара за кусочек и', 'Если Томми продаст 43\\xa0кусочка брауни и 23\\xa0кусочка чизкейка,']\nnew_fact = infer_new_fact(selected) # 'Продавая брауни, Томми соберет 43\\xa0x\\xa03\\xa0доллара\\xa0=\\xa0129\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['чизкейки по 4\\xa0доллара за кусочек.', 'Если Томми продаст 43\\xa0кусочка брауни и 23\\xa0кусочка чизкейка,']\nnew_fact = infer_new_fact(selected) # 'Продавая чизкейки, Томми соберет 23\\xa0x\\xa04\\xa0доллара\\xa0=\\xa092\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько денег он соберет?', 'Продавая брауни, Томми соберет 43\\xa0x\\xa03\\xa0доллара\\xa0=\\xa0129\\xa0долларов.', 'Продавая чизкейки, Томми соберет 23\\xa0x\\xa04\\xa0доллара\\xa0=\\xa092\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности Томми соберет 129\\xa0+\\xa092\\xa0=\\xa0221\\xa0доллар.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Томми продаст 43\\xa0кусочка брауни и 23\\xa0кусочка чизкейка,', 'сколько денег он соберет?', 'В общей сложности Томми соберет 129\\xa0+\\xa092\\xa0=\\xa0221\\xa0доллар.']\nnew_fact = infer_new_fact(selected) # 'The answer is 221'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '221'"}
{"id": "GSM8K_73_5e0a20f343", "context": "", "options": [], "answer": "255", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.; int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.; int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.; int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.; int4 & sent3 -> int5: The answer is 255;", "textual_logical_units": {"1": "Шиела купила 5 мобильных телефонов по 150 долларов каждый с рассрочкой на 3 месяца.", "2": "За каждую единицу будет взиматься процентная ставка в размере 2 %.", "3": "Сколько Шиела будет платить каждый месяц в течение 3 месяцев?", "4": "За каждый телефон будут начисляться проценты в размере 150 долларов x 2/100 = 3 доллара.", "5": "Таким образом, каждый мобильный телефон стоит 150 долларов + 3 доллара = 153 доллара.", "6": "Общая сумма, которую необходимо заплатить за 5 мобильных телефонов, составляет 153 долларов x 5 = 765 долларов.", "7": "Таким образом, Шиела будет платить 765 / 3 = 255 долларов в месяц.", "8": "The answer is 255"}, "human_translated": true, "code_input": "####\nfacts = [ 'Шиела купила 5\\xa0мобильных телефонов по 150\\xa0долларов каждый с рассрочкой на 3\\xa0месяца.',\n  'За каждую единицу будет взиматься процентная ставка в размере 2\\xa0%.']\nquestion = 'Сколько Шиела будет платить каждый месяц в течение 3\\xa0месяцев?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Шиела купила 5\\xa0мобильных телефонов по 150\\xa0долларов каждый с рассрочкой на 3\\xa0месяца.', 'За каждую единицу будет взиматься процентная ставка в размере 2\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'За каждый телефон будут начисляться проценты в размере 150\\xa0долларов\\xa0x\\xa02/100\\xa0=\\xa03\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Шиела купила 5\\xa0мобильных телефонов по 150\\xa0долларов каждый с рассрочкой на 3\\xa0месяца.', 'За каждый телефон будут начисляться проценты в размере 150\\xa0долларов\\xa0x\\xa02/100\\xa0=\\xa03\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, каждый мобильный телефон стоит 150\\xa0долларов\\xa0+\\xa03\\xa0доллара\\xa0=\\xa0153\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Шиела купила 5\\xa0мобильных телефонов по 150\\xa0долларов каждый с рассрочкой на 3\\xa0месяца.', 'Таким образом, каждый мобильный телефон стоит 150\\xa0долларов\\xa0+\\xa03\\xa0доллара\\xa0=\\xa0153\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Общая сумма, которую необходимо заплатить за 5\\xa0мобильных телефонов, составляет 153\\xa0долларов\\xa0x\\xa05\\xa0=\\xa0765\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько Шиела будет платить каждый месяц в течение 3\\xa0месяцев?', 'Общая сумма, которую необходимо заплатить за 5\\xa0мобильных телефонов, составляет 153\\xa0долларов\\xa0x\\xa05\\xa0=\\xa0765\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, Шиела будет платить 765\\xa0/\\xa03\\xa0=\\xa0255\\xa0долларов в месяц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько Шиела будет платить каждый месяц в течение 3\\xa0месяцев?', 'Таким образом, Шиела будет платить 765\\xa0/\\xa03\\xa0=\\xa0255\\xa0долларов в месяц.']\nnew_fact = infer_new_fact(selected) # 'The answer is 255'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '255'"}
{"id": "GSM8K_74_0a4493ada4", "context": "", "options": [], "answer": "88", "reasoning_graph_edges": [{"antecedents": [3, 7], "consequent": 11}, {"antecedents": [4, 7], "consequent": 12}, {"antecedents": [5, 7], "consequent": 13}, {"antecedents": [8, 11], "consequent": 14}, {"antecedents": [9, 12], "consequent": 15}, {"antecedents": [9, 13], "consequent": 16}, {"antecedents": [10, 14, 15, 16], "consequent": 17}, {"antecedents": [8, 9, 10, 17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.; sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.; sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.; int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36; int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18; int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34; int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88; int7 & sent10 & sent8 & sent9 -> int8: The answer is 88;", "textual_logical_units": {"1": "У Арти есть цветочный киоск на фермерском рынке.", "2": "Он продает три вида цветов: бархатцы, петунии и бегонии.", "3": "Обычно он продает бархатцы по 2,74 доллара за горшок,", "4": "петунии по 1,87 доллара за горшок и", "5": "бегонии по 2,12 доллара за горшок.", "6": "Сегодня у Арти нет мелочи на сдачу,", "7": "поэтому он решил округлить все свои цены до ближайшей круглой суммы в долларах.", "8": "Если Арти продаст 12 горшков с бархатцами,", "9": "9 горшков с петуниями и 17 горшков с бегониями,", "10": "сколько он заработает?", "11": "Арти округлит цену на бархатцы с 2,74 до 3 долларов, так как цифра, стоящая за целым числом 2, равна 5 или больше.", "12": "Арти округлит цену на петунии с 1,87 до 2 долларов, так как цифра, стоящая за целым числом 1, равна 5 или больше.", "13": "Арти округлит цену на бегонии с 2,12 до 2 долларов, так как цифра, стоящая за целым числом 2, меньше 5.", "14": "Арти продаст 12 горшков бархатцев x 3 доллара = 36 долларов.", "15": "Арти продаст 9 горшков петуний x 2 доллара = 18 долларов.", "16": "Арти продаст 17 горшков бегоний x 2 доллара = 34 доллара.", "17": "В общей сложности Арти заработает 36 + 18 + 34 = 88 долларов.", "18": "The answer is 88"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Арти есть цветочный киоск на фермерском рынке.',\n  'Он продает три вида цветов: бархатцы, петунии и бегонии.',\n  'Обычно он продает бархатцы по 2,74\\xa0доллара за горшок,',\n  'петунии по 1,87\\xa0доллара за горшок и',\n  'бегонии по 2,12\\xa0доллара за горшок.',\n  'Сегодня у Арти нет мелочи на сдачу,',\n  'поэтому он решил округлить все свои цены до ближайшей круглой суммы в долларах.',\n  'Если Арти продаст 12\\xa0горшков с бархатцами,',\n  '9\\xa0горшков с петуниями и 17\\xa0горшков с бегониями,']\nquestion = 'сколько он заработает?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Обычно он продает бархатцы по 2,74\\xa0доллара за горшок,', 'поэтому он решил округлить все свои цены до ближайшей круглой суммы в долларах.']\nnew_fact = infer_new_fact(selected) # 'Арти округлит цену на бархатцы с 2,74\\xa0до 3\\xa0долларов, так как цифра, стоящая за целым числом 2, равна 5\\xa0или больше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['петунии по 1,87\\xa0доллара за горшок и', 'поэтому он решил округлить все свои цены до ближайшей круглой суммы в долларах.']\nnew_fact = infer_new_fact(selected) # 'Арти округлит цену на петунии с 1,87\\xa0до 2\\xa0долларов, так как цифра, стоящая за целым числом 1, равна 5 или больше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['бегонии по 2,12\\xa0доллара за горшок.', 'поэтому он решил округлить все свои цены до ближайшей круглой суммы в долларах.']\nnew_fact = infer_new_fact(selected) # 'Арти округлит цену на бегонии с 2,12\\xa0до 2\\xa0долларов, так как цифра, стоящая за целым числом 2, меньше 5.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Арти продаст 12\\xa0горшков с бархатцами,', 'Арти округлит цену на бархатцы с 2,74\\xa0до 3\\xa0долларов, так как цифра, стоящая за целым числом 2, равна 5\\xa0или больше.']\nnew_fact = infer_new_fact(selected) # 'Арти продаст 12\\xa0горшков бархатцев\\xa0x\\xa03\\xa0доллара\\xa0=\\xa036\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['9\\xa0горшков с петуниями и 17\\xa0горшков с бегониями,', 'Арти округлит цену на петунии с 1,87\\xa0до 2\\xa0долларов, так как цифра, стоящая за целым числом 1, равна 5 или больше.']\nnew_fact = infer_new_fact(selected) # 'Арти продаст 9\\xa0горшков петуний\\xa0x\\xa02\\xa0доллара\\xa0=\\xa018\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['9\\xa0горшков с петуниями и 17\\xa0горшков с бегониями,', 'Арти округлит цену на бегонии с 2,12\\xa0до 2\\xa0долларов, так как цифра, стоящая за целым числом 2, меньше 5.']\nnew_fact = infer_new_fact(selected) # 'Арти продаст 17\\xa0горшков бегоний\\xa0x\\xa02\\xa0доллара\\xa0=\\xa034\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько он заработает?', 'Арти продаст 12\\xa0горшков бархатцев\\xa0x\\xa03\\xa0доллара\\xa0=\\xa036\\xa0долларов.', 'Арти продаст 9\\xa0горшков петуний\\xa0x\\xa02\\xa0доллара\\xa0=\\xa018\\xa0долларов.', 'Арти продаст 17\\xa0горшков бегоний\\xa0x\\xa02\\xa0доллара\\xa0=\\xa034\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности Арти заработает 36\\xa0+\\xa018\\xa0+\\xa034\\xa0=\\xa088\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Арти продаст 12\\xa0горшков с бархатцами,', '9\\xa0горшков с петуниями и 17\\xa0горшков с бегониями,', 'сколько он заработает?', 'В общей сложности Арти заработает 36\\xa0+\\xa018\\xa0+\\xa034\\xa0=\\xa088\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 88'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '88'"}
{"id": "GSM8K_75_df37851fde", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32; int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64; int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128; int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240; int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60; int5 & sent3 & sent4 -> int6: The answer is 60;", "textual_logical_units": {"1": "Люк проводит время на пляже, строя замки из песка.", "2": "Он заметил, что площадь каждого этажа замка из песка будет вдвое меньше предыдущего этажа.", "3": "Если он построит четырехэтажный замок из песка, площадь верхнего этажа которого составляет 16 квадратных футов,", "4": "какова средняя площадь каждого этажа?", "5": "Этаж 3 составляет 32 квадратных фута, потому что 16 x 2 = 32.", "6": "Этаж 2 составляет 64 квадратных фута, потому что 32 x 2 = 64.", "7": "Этаж 1 составляет 128 квадратных футов, потому что 64 x 2 = 128.", "8": "Общая площадь четырех этажей составляет 240 квадратных футов, потому что 128 + 64 + 32 + 16 = 240.", "9": "Средняя площадь этажа составляет 60, поскольку 240 / 4 = 60.", "10": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = [ 'Люк проводит время на пляже, строя замки из песка.',\n  'Он заметил, что площадь каждого этажа замка из песка будет вдвое меньше предыдущего этажа.',\n  'Если он построит четырехэтажный замок из песка, площадь верхнего этажа которого составляет 16\\xa0квадратных футов,']\nquestion = 'какова средняя площадь каждого этажа?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он заметил, что площадь каждого этажа замка из песка будет вдвое меньше предыдущего этажа.', 'Если он построит четырехэтажный замок из песка, площадь верхнего этажа которого составляет 16\\xa0квадратных футов,']\nnew_fact = infer_new_fact(selected) # 'Этаж\\xa03\\xa0составляет 32\\xa0квадратных фута, потому что 16\\xa0x\\xa02\\xa0=\\xa032.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он заметил, что площадь каждого этажа замка из песка будет вдвое меньше предыдущего этажа.', 'Этаж\\xa03\\xa0составляет 32\\xa0квадратных фута, потому что 16\\xa0x\\xa02\\xa0=\\xa032.']\nnew_fact = infer_new_fact(selected) # 'Этаж 2\\xa0составляет 64\\xa0квадратных фута, потому что 32\\xa0x\\xa02\\xa0=\\xa064.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он заметил, что площадь каждого этажа замка из песка будет вдвое меньше предыдущего этажа.', 'Этаж 2\\xa0составляет 64\\xa0квадратных фута, потому что 32\\xa0x\\xa02\\xa0=\\xa064.']\nnew_fact = infer_new_fact(selected) # 'Этаж 1\\xa0составляет 128\\xa0квадратных футов, потому что 64\\xa0x\\xa02\\xa0=\\xa0128.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он построит четырехэтажный замок из песка, площадь верхнего этажа которого составляет 16\\xa0квадратных футов,', 'Этаж\\xa03\\xa0составляет 32\\xa0квадратных фута, потому что 16\\xa0x\\xa02\\xa0=\\xa032.', 'Этаж 2\\xa0составляет 64\\xa0квадратных фута, потому что 32\\xa0x\\xa02\\xa0=\\xa064.', 'Этаж 1\\xa0составляет 128\\xa0квадратных футов, потому что 64\\xa0x\\xa02\\xa0=\\xa0128.']\nnew_fact = infer_new_fact(selected) # 'Общая площадь четырех этажей составляет 240\\xa0квадратных футов, потому что 128\\xa0+\\xa064\\xa0+\\xa032\\xa0+\\xa016\\xa0=\\xa0240.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова средняя площадь каждого этажа?', 'Общая площадь четырех этажей составляет 240\\xa0квадратных футов, потому что 128\\xa0+\\xa064\\xa0+\\xa032\\xa0+\\xa016\\xa0=\\xa0240.']\nnew_fact = infer_new_fact(selected) # 'Средняя площадь этажа составляет 60, поскольку 240\\xa0/\\xa04\\xa0=\\xa060.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он построит четырехэтажный замок из песка, площадь верхнего этажа которого составляет 16\\xa0квадратных футов,', 'какова средняя площадь каждого этажа?', 'Средняя площадь этажа составляет 60, поскольку 240\\xa0/\\xa04\\xa0=\\xa060.']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_76_92aabda037", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}, {"antecedents": [4, 5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: The number of cups of dog food given for the first 180 days is 180 * 1 = 180 cups; int1 -> int2: The number of days left in the year is 365 - 180 = 185; int2 & sent3 -> int3: The number of cups of dog food given for the rest of the first year is 185 * 2 = 370 cups; int1 & int3 -> int4: The total number of cups given in the first year is 180 + 370 = 550 cups; int4 & sent4 & sent5 -> int5: The number of bags of dog food used in the first year is 550 / 110 = 5 bags; int5 & sent4 & sent5 -> int6: The answer is 5;", "textual_logical_units": {"1": "Сесилия только что купила нового щенка.", "2": "По словам ветеринара, первые 180 дней она должна кормить щенка 1 чашкой собачьего корма каждый день.", "3": "Затем она всю жизнь должна кормить щенка 2 чашками собачьего корма каждый день.", "4": "Если в одном пакете корма для собак содержится 110 чашек,", "5": "сколько пакетов собачьего корма потратит Сесилия в первый год?", "6": "Количество чашек собачьего корма за первые 180 дней составит 180 x 1 = 180 чашек.", "7": "Количество дней, оставшихся в году, составляет 365 – 180 = 185.", "8": "Количество чашек собачьего корма на оставшуюся часть первого года составляет 185 x 2 = 370 чашек.", "9": "Общее количество чашек, которые съест щенок в первый год, составляет 180 + 370 = 550 чашек.", "10": "Количество пакетов корма для собак, потраченных в первый год, составляет 550 / 110 = 5 пакетов.", "11": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сесилия только что купила нового щенка.',\n  'По словам ветеринара, первые 180\\xa0дней она должна кормить щенка 1\\xa0чашкой собачьего корма каждый день.',\n  'Затем она всю жизнь должна кормить щенка 2\\xa0чашками собачьего корма каждый день.',\n  'Если в одном пакете корма для собак содержится 110\\xa0чашек,']\nquestion = 'сколько пакетов собачьего корма потратит Сесилия в первый год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['По словам ветеринара, первые 180\\xa0дней она должна кормить щенка 1\\xa0чашкой собачьего корма каждый день.']\nnew_fact = infer_new_fact(selected) # 'Количество чашек собачьего корма за первые 180\\xa0дней составит 180\\xa0x\\xa01\\xa0=\\xa0180\\xa0чашек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество чашек собачьего корма за первые 180\\xa0дней составит 180\\xa0x\\xa01\\xa0=\\xa0180\\xa0чашек.']\nnew_fact = infer_new_fact(selected) # 'Количество дней, оставшихся в году, составляет 365\\xa0–\\xa0180\\xa0=\\xa0185.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем она всю жизнь должна кормить щенка 2\\xa0чашками собачьего корма каждый день.', 'Количество дней, оставшихся в году, составляет 365\\xa0–\\xa0180\\xa0=\\xa0185.']\nnew_fact = infer_new_fact(selected) # 'Количество чашек собачьего корма на оставшуюся часть первого года составляет 185\\xa0x\\xa02\\xa0=\\xa0370\\xa0чашек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество чашек собачьего корма за первые 180\\xa0дней составит 180\\xa0x\\xa01\\xa0=\\xa0180\\xa0чашек.', 'Количество чашек собачьего корма на оставшуюся часть первого года составляет 185\\xa0x\\xa02\\xa0=\\xa0370\\xa0чашек.']\nnew_fact = infer_new_fact(selected) # 'Общее количество чашек, которые съест щенок в первый год, составляет 180\\xa0+\\xa0370\\xa0=\\xa0550\\xa0чашек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в одном пакете корма для собак содержится 110\\xa0чашек,', 'сколько пакетов собачьего корма потратит Сесилия в первый год?', 'Общее количество чашек, которые съест щенок в первый год, составляет 180\\xa0+\\xa0370\\xa0=\\xa0550\\xa0чашек.']\nnew_fact = infer_new_fact(selected) # 'Количество пакетов корма для собак, потраченных в первый год, составляет 550\\xa0/\\xa0110\\xa0=\\xa05\\xa0пакетов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в одном пакете корма для собак содержится 110\\xa0чашек,', 'сколько пакетов собачьего корма потратит Сесилия в первый год?', 'Количество пакетов корма для собак, потраченных в первый год, составляет 550\\xa0/\\xa0110\\xa0=\\xa05\\xa0пакетов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_77_8aff5c238d", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [1, 2, 3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: If Sarah does 400 pounds of laundry, and Raymond does half as much laundry as Sarah, Raymond does 1/2*400 = 200 pounds of laundry.; sent2 & sent4 -> int2: Sara also does 4 times as much laundry as David, meaning David does 400/4 = 100 pounds of laundry.; int1 & int2 & sent3 -> int3: The difference in the amount of laundry Raymond and David do is 200-100 = 100 pounds; int3 & sent1 & sent2 & sent3 & sent4 -> int4: The answer is 100;", "textual_logical_units": {"1": "Если Раймонд стирает вдвое меньше, чем Сара,", "2": "а Сара стирает в 4 раза больше, чем Дэвид,", "3": "рассчитайте разницу в количестве стирок Раймонда и", "4": "Дэвида, если Сара стирает 400 фунтов белья.", "5": "Если Сара стирает 400 фунтов белья, а Раймонд стирает вдвое меньше, чем Сара, то Раймонд стирает 1/2 x 400 = 200 фунтов белья.", "6": "Кроме того, Сара стирает в 4 раза больше белья, чем Дэвид, то есть Дэвид стирает 400 / 4 = 100 фунтов белья.", "7": "Разница в количестве белья, которое стирают Раймонд и Дэвид, составляет 200 – 100 = 100 фунтов.", "8": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = ['Если Раймонд стирает вдвое меньше, чем Сара,', 'а Сара стирает в 4\\xa0раза больше, чем Дэвид,', 'рассчитайте разницу в количестве стирок Раймонда и']\nquestion = 'Дэвида, если Сара стирает 400\\xa0фунтов белья.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если Раймонд стирает вдвое меньше, чем Сара,', 'Дэвида, если Сара стирает 400\\xa0фунтов белья.']\nnew_fact = infer_new_fact(selected) # 'Если Сара стирает 400\\xa0фунтов белья, а Раймонд стирает вдвое меньше, чем Сара, то Раймонд стирает 1/2\\xa0x\\xa0400\\xa0=\\xa0200 фунтов белья.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Сара стирает в 4\\xa0раза больше, чем Дэвид,', 'Дэвида, если Сара стирает 400\\xa0фунтов белья.']\nnew_fact = infer_new_fact(selected) # 'Кроме того, Сара стирает в 4\\xa0раза больше белья, чем Дэвид, то есть Дэвид стирает 400\\xa0/\\xa04\\xa0=\\xa0100\\xa0фунтов белья.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рассчитайте разницу в количестве стирок Раймонда и', 'Если Сара стирает 400\\xa0фунтов белья, а Раймонд стирает вдвое меньше, чем Сара, то Раймонд стирает 1/2\\xa0x\\xa0400\\xa0=\\xa0200 фунтов белья.', 'Кроме того, Сара стирает в 4\\xa0раза больше белья, чем Дэвид, то есть Дэвид стирает 400\\xa0/\\xa04\\xa0=\\xa0100\\xa0фунтов белья.']\nnew_fact = infer_new_fact(selected) # 'Разница в количестве белья, которое стирают Раймонд и Дэвид, составляет 200\\xa0–\\xa0100\\xa0=\\xa0100\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Раймонд стирает вдвое меньше, чем Сара,', 'а Сара стирает в 4\\xa0раза больше, чем Дэвид,', 'рассчитайте разницу в количестве стирок Раймонда и', 'Дэвида, если Сара стирает 400\\xa0фунтов белья.', 'Разница в количестве белья, которое стирают Раймонд и Дэвид, составляет 200\\xa0–\\xa0100\\xa0=\\xa0100\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_78_6d7b636c76", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 4, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Find how many packages of 3 would be needed which is 18 ÷ 3 = 6.; int1 & sent1 -> int2: The cost of using packages of 3 is 6 × $2.50 = $15.; sent1 & sent2 -> int3: Find how many packages of 2 would be needed which is 18 ÷ 2 = 9.; int3 & sent1 -> int4: The cost of using packages of 2 is 9 × $1 = $9.; int2 & int4 & sent2 -> int5: Vincent would save $15 - $9 = $6.; int5 & sent2 -> int6: The answer is 6;", "textual_logical_units": {"1": "Винсент может купить цветы в упаковках по 3 штуки за 2,50 доллара или в упаковках по 2 штуки за 1 доллар.", "2": "Сколько денег он сэкономит, купив 18 цветов по лучшей цене?", "3": "Определим, сколько упаковок по 3 цветка потребуется, чтобы собрать букет, 18 / 3 = 6.", "4": "Стоимость покупки упаковок по 3 цветка составляет 6 × 2,50 долларов = 15 долларов.", "5": "Определим, сколько упаковок по 2 цветка потребуется, чтобы собрать букет, 18 / 2 = 9.", "6": "Стоимость покупки упаковок по 2 цветка составляет 9 × 1 доллар = 9 долларов.", "7": "Винсент может сэкономить 15 – 9 = 6 долларов.", "8": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['Винсент может купить цветы в упаковках по 3\\xa0штуки за 2,50\\xa0доллара или в упаковках по 2\\xa0штуки\\xa0за 1\\xa0доллар.']\nquestion = 'Сколько денег он сэкономит, купив 18\\xa0цветов по лучшей цене?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Винсент может купить цветы в упаковках по 3\\xa0штуки за 2,50\\xa0доллара или в упаковках по 2\\xa0штуки\\xa0за 1\\xa0доллар.', 'Сколько денег он сэкономит, купив 18\\xa0цветов по лучшей цене?']\nnew_fact = infer_new_fact(selected) # 'Определим, сколько упаковок по 3 цветка потребуется, чтобы собрать букет, 18\\xa0/\\xa03\\xa0=\\xa06.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Винсент может купить цветы в упаковках по 3\\xa0штуки за 2,50\\xa0доллара или в упаковках по 2\\xa0штуки\\xa0за 1\\xa0доллар.', 'Определим, сколько упаковок по 3 цветка потребуется, чтобы собрать букет, 18\\xa0/\\xa03\\xa0=\\xa06.']\nnew_fact = infer_new_fact(selected) # 'Стоимость покупки упаковок по 3\\xa0цветка составляет 6\\xa0×\\xa02,50\\xa0долларов\\xa0=\\xa015\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Винсент может купить цветы в упаковках по 3\\xa0штуки за 2,50\\xa0доллара или в упаковках по 2\\xa0штуки\\xa0за 1\\xa0доллар.', 'Сколько денег он сэкономит, купив 18\\xa0цветов по лучшей цене?']\nnew_fact = infer_new_fact(selected) # 'Определим, сколько упаковок по 2\\xa0цветка потребуется, чтобы собрать букет, 18\\xa0/\\xa02\\xa0=\\xa09.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Винсент может купить цветы в упаковках по 3\\xa0штуки за 2,50\\xa0доллара или в упаковках по 2\\xa0штуки\\xa0за 1\\xa0доллар.', 'Определим, сколько упаковок по 2\\xa0цветка потребуется, чтобы собрать букет, 18\\xa0/\\xa02\\xa0=\\xa09.']\nnew_fact = infer_new_fact(selected) # 'Стоимость покупки упаковок по 2\\xa0цветка составляет 9\\xa0×\\xa01\\xa0доллар\\xa0=\\xa09 долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег он сэкономит, купив 18\\xa0цветов по лучшей цене?', 'Стоимость покупки упаковок по 3\\xa0цветка составляет 6\\xa0×\\xa02,50\\xa0долларов\\xa0=\\xa015\\xa0долларов.', 'Стоимость покупки упаковок по 2\\xa0цветка составляет 9\\xa0×\\xa01\\xa0доллар\\xa0=\\xa09 долларов.']\nnew_fact = infer_new_fact(selected) # 'Винсент может сэкономить 15\\xa0–\\xa09\\xa0=\\xa06\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег он сэкономит, купив 18\\xa0цветов по лучшей цене?', 'Винсент может сэкономить 15\\xa0–\\xa09\\xa0=\\xa06\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_79_af5edf5e8b", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The groomer gave a 100*.3=$30 discount; int1 & sent2 & sent4 -> int2: So the grooming cost 100-30=$70; int2 & sent4 -> int3: The answer is 70;", "textual_logical_units": {"1": "Джон взял из приюта собаку.", "2": "Он отвез собаку к грумеру, чьи услуги стоят 100 долларов.", "3": "Грумер предлагает ему скидку для нового клиента в размере 30 %.", "4": "Сколько будут стоить услуги грумера?", "5": "Грумер дал скидку 100 x 0,3 = 30 долларов.", "6": "Таким образом, его услуги будут стоит 100 – 30 = 70 долларов.", "7": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон взял из приюта собаку.',\n  'Он отвез собаку к грумеру, чьи услуги стоят 100\\xa0долларов.',\n  'Грумер предлагает ему скидку для нового клиента в размере 30\\xa0%.']\nquestion = 'Сколько будут стоить услуги грумера?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он отвез собаку к грумеру, чьи услуги стоят 100\\xa0долларов.', 'Грумер предлагает ему скидку для нового клиента в размере 30\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Грумер дал скидку 100\\xa0x\\xa00,3\\xa0=\\xa030\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он отвез собаку к грумеру, чьи услуги стоят 100\\xa0долларов.', 'Сколько будут стоить услуги грумера?', 'Грумер дал скидку 100\\xa0x\\xa00,3\\xa0=\\xa030\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, его услуги будут стоит 100\\xa0–\\xa030\\xa0=\\xa070\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будут стоить услуги грумера?', 'Таким образом, его услуги будут стоит 100\\xa0–\\xa030\\xa0=\\xa070\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_80_d57a485b8e", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Each of the girls got 24 x 1/6 = 4 liters of water.; int1 & sent1 -> int2: So the two girls got a total of 4 x 2 = 8 liters.; int2 & sent2 -> int3: Thus, a total of 8 + 6 = 14 liters of water were gotten by the two girls and the boy.; int3 & sent1 & sent3 -> int4: Therefore, 24 - 14 = 10 liters of water were left.; int4 & sent3 -> int5: The answer is 10;", "textual_logical_units": {"1": "Каждая из двух девочек выпила по 1/6 из 24 литров воды.", "2": "Затем мальчик выпил 6 литров воды.", "3": "Сколько литров воды осталось?", "4": "Каждая из девочек выпила 24 x 1/6 = 4 литра воды.", "5": "Таким образом, две девочки выпили в общей сложности 4 х 2 = 8 литров.", "6": "Значит, в общей сложности две девочки и мальчик выпили 8 + 6 = 14 литров воды.", "7": "Следовательно, осталось 24 – 14 = 10 литров воды.", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['Каждая из двух девочек выпила по 1/6\\xa0из 24\\xa0литров воды.', 'Затем мальчик выпил 6\\xa0литров воды.']\nquestion = 'Сколько литров воды осталось?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждая из двух девочек выпила по 1/6\\xa0из 24\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'Каждая из девочек выпила 24\\xa0x\\xa01/6\\xa0=\\xa04\\xa0литра воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая из двух девочек выпила по 1/6\\xa0из 24\\xa0литров воды.', 'Каждая из девочек выпила 24\\xa0x\\xa01/6\\xa0=\\xa04\\xa0литра воды.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, две девочки выпили в общей сложности 4\\xa0х\\xa02\\xa0=\\xa08\\xa0литров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем мальчик выпил 6\\xa0литров воды.', 'Таким образом, две девочки выпили в общей сложности 4\\xa0х\\xa02\\xa0=\\xa08\\xa0литров.']\nnew_fact = infer_new_fact(selected) # 'Значит, в общей сложности две девочки и мальчик выпили 8\\xa0+\\xa06\\xa0=\\xa014\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая из двух девочек выпила по 1/6\\xa0из 24\\xa0литров воды.', 'Сколько литров воды осталось?', 'Значит, в общей сложности две девочки и мальчик выпили 8\\xa0+\\xa06\\xa0=\\xa014\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, осталось 24\\xa0–\\xa014\\xa0=\\xa010\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько литров воды осталось?', 'Следовательно, осталось 24\\xa0–\\xa014\\xa0=\\xa010\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_81_2af1562a0a", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [4, 5], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The total number of stickers is 10 + 21 + 23 = 54.; sent4 & sent5 -> int2: The number of stickers given away and used on the greeting card is 9 + 28 = 37.; int1 & int2 & sent6 -> int3: Charlie has 54 − 37 = 17 stickers left.; int3 & sent6 -> int4: The answer is 17;", "textual_logical_units": {"1": "У Чарли было 10 наклеек.", "2": "Он купил 21 наклейку в магазине в торговом центре и", "3": "получил 23 наклейки на день рождения.", "4": "Затем Чарли подарил 9 наклеек своей сестре и", "5": "использовал 28 для украшения поздравительной открытки.", "6": "Сколько наклеек осталось у Чарли?", "7": "Общее количество наклеек 10 + 21 + 23 = 54.", "8": "Количество наклеек, которые Чарли отдал и использовал для украшения открытки, составляет 9 + 28 = 37.", "9": "У Чарли осталось 54 – 37 = 17 наклеек.", "10": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Чарли было 10\\xa0наклеек.',\n  'Он купил 21\\xa0наклейку в магазине в торговом центре и',\n  'получил 23\\xa0наклейки на день рождения.',\n  'Затем Чарли подарил 9\\xa0наклеек своей сестре и',\n  'использовал 28\\xa0для украшения поздравительной открытки.']\nquestion = 'Сколько наклеек осталось у Чарли?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Чарли было 10\\xa0наклеек.', 'Он купил 21\\xa0наклейку в магазине в торговом центре и', 'получил 23\\xa0наклейки на день рождения.']\nnew_fact = infer_new_fact(selected) # 'Общее количество наклеек 10\\xa0+\\xa021\\xa0+\\xa023\\xa0=\\xa054.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем Чарли подарил 9\\xa0наклеек своей сестре и', 'использовал 28\\xa0для украшения поздравительной открытки.']\nnew_fact = infer_new_fact(selected) # 'Количество наклеек, которые Чарли отдал и использовал для украшения открытки, составляет 9\\xa0+\\xa028\\xa0=\\xa037.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько наклеек осталось у Чарли?', 'Общее количество наклеек 10\\xa0+\\xa021\\xa0+\\xa023\\xa0=\\xa054.', 'Количество наклеек, которые Чарли отдал и использовал для украшения открытки, составляет 9\\xa0+\\xa028\\xa0=\\xa037.']\nnew_fact = infer_new_fact(selected) # 'У Чарли осталось 54\\xa0–\\xa037\\xa0=\\xa017\\xa0наклеек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько наклеек осталось у Чарли?', 'У Чарли осталось 54\\xa0–\\xa037\\xa0=\\xa017\\xa0наклеек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_82_bb44667f8e", "context": "", "options": [], "answer": "623", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Alex weighs 125*4-2 = 498.; int1 & sent1 & sent3 -> int2: Their combined weights are 125+498 = 623 pounds.; int2 & sent3 -> int3: The answer is 623;", "textual_logical_units": {"1": "Грейс весит 125 фунтов.", "2": "Алекс весит на 2 фунта меньше, чем вес, в 4 раза больший веса Грейс.", "3": "Каков их суммарный вес в фунтах?", "4": "Алекс весит 125 x 4 – 2 = 498 фунтов.", "5": "Их суммарный вес составляет 125 + 498 = 623 фунта.", "6": "The answer is 623"}, "human_translated": true, "code_input": "####\nfacts = ['Грейс весит 125\\xa0фунтов.', 'Алекс весит на 2\\xa0фунта меньше, чем вес, в 4\\xa0раза больший веса Грейс.']\nquestion = 'Каков их суммарный вес в фунтах?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Грейс весит 125\\xa0фунтов.', 'Алекс весит на 2\\xa0фунта меньше, чем вес, в 4\\xa0раза больший веса Грейс.']\nnew_fact = infer_new_fact(selected) # 'Алекс весит 125\\xa0x\\xa04\\xa0–\\xa02\\xa0=\\xa0498 фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Грейс весит 125\\xa0фунтов.', 'Каков их суммарный вес в фунтах?', 'Алекс весит 125\\xa0x\\xa04\\xa0–\\xa02\\xa0=\\xa0498 фунтов.']\nnew_fact = infer_new_fact(selected) # 'Их суммарный вес составляет 125\\xa0+\\xa0498\\xa0=\\xa0623\\xa0фунта.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков их суммарный вес в фунтах?', 'Их суммарный вес составляет 125\\xa0+\\xa0498\\xa0=\\xa0623\\xa0фунта.']\nnew_fact = infer_new_fact(selected) # 'The answer is 623'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '623'"}
{"id": "GSM8K_83_b8712f4e3f", "context": "", "options": [], "answer": "600", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First find the total number of roses: 3 bushes * 25 roses/bush = 75 roses; int1 & sent3 & sent4 -> int2: Then multiply the number of roses by the number of thorns per rose: 75 roses * 8 thorns/rose = 600 thorns; int2 & sent4 -> int3: The answer is 600;", "textual_logical_units": {"1": "Дэн посадил 3 куста роз.", "2": "На каждом кусте расцвело 25 роз.", "3": "У каждой розы по 8 шипов.", "4": "Сколько всего шипов?", "5": "Сначала найдем общее количество роз: 3 куста x 25 роз/куст = 75 роз.", "6": "Затем умножим количество роз на количество шипов на розе: 75 роз x 8 шипов/розу = 600 шипов.", "7": "The answer is 600"}, "human_translated": true, "code_input": "####\nfacts = ['Дэн посадил 3\\xa0куста роз.', 'На каждом кусте расцвело 25\\xa0роз.', 'У каждой розы по 8\\xa0шипов.']\nquestion = 'Сколько всего шипов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Дэн посадил 3\\xa0куста роз.', 'На каждом кусте расцвело 25\\xa0роз.']\nnew_fact = infer_new_fact(selected) # 'Сначала найдем общее количество роз: 3 куста\\xa0x\\xa025\\xa0роз/куст\\xa0=\\xa075\\xa0роз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У каждой розы по 8\\xa0шипов.', 'Сколько всего шипов?', 'Сначала найдем общее количество роз: 3 куста\\xa0x\\xa025\\xa0роз/куст\\xa0=\\xa075\\xa0роз.']\nnew_fact = infer_new_fact(selected) # 'Затем умножим количество роз на количество шипов на розе: 75\\xa0роз\\xa0x\\xa08\\xa0шипов/розу\\xa0=\\xa0600\\xa0шипов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего шипов?', 'Затем умножим количество роз на количество шипов на розе: 75\\xa0роз\\xa0x\\xa08\\xa0шипов/розу\\xa0=\\xa0600\\xa0шипов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '600'"}
{"id": "GSM8K_84_f8021ce9a0", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 2, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [1, 3, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let L be the number of losses.; int1 & sent2 -> int2: The number of wins is L + 8.; int1 & int2 & sent1 & sent2 -> int3: The team played (L+8) + L = 2L + 8 = 22 games.; int1 & int3 -> int4: So, 2L = 22 - 8 = 14; int1 & int4 -> int5: So L = 14/2 = 7 losses.; int5 & sent1 & sent3 -> int6: Therefore, the team won 22 – 7 = 15 games.; int6 & sent3 -> int7: The answer is 15;", "textual_logical_units": {"1": "Футбольная команда сыграла 22 матча.", "2": "Они выиграли на 8 матчей больше, чем проиграли.", "3": "Сколько раз выиграли?", "4": "Пусть L — количество проигрышей.", "5": "Количество побед — L + 8.", "6": "Команда сыграла (L + 8) + L = 2L + 8 = 22 игры.", "7": "Итак, 2L = 22 – 8 = 14.", "8": "Таким образом, L = 14 / 2 = 7 проигрышей.", "9": "Следовательно, команда выиграла 22 – 7 = 15 игр.", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['Футбольная команда сыграла 22\\xa0матча.', 'Они выиграли на 8\\xa0матчей больше, чем проиграли.']\nquestion = 'Сколько раз выиграли?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Они выиграли на 8\\xa0матчей больше, чем проиграли.']\nnew_fact = infer_new_fact(selected) # 'Пусть\\xa0L\\xa0— количество проигрышей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Они выиграли на 8\\xa0матчей больше, чем проиграли.', 'Пусть\\xa0L\\xa0— количество проигрышей.']\nnew_fact = infer_new_fact(selected) # 'Количество побед\\xa0— L\\xa0+\\xa08.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Футбольная команда сыграла 22\\xa0матча.', 'Они выиграли на 8\\xa0матчей больше, чем проиграли.', 'Пусть\\xa0L\\xa0— количество проигрышей.', 'Количество побед\\xa0— L\\xa0+\\xa08.']\nnew_fact = infer_new_fact(selected) # 'Команда сыграла (L\\xa0+\\xa08)\\xa0+\\xa0L\\xa0=\\xa02L\\xa0+\\xa08\\xa0=\\xa022\\xa0игры.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть\\xa0L\\xa0— количество проигрышей.', 'Команда сыграла (L\\xa0+\\xa08)\\xa0+\\xa0L\\xa0=\\xa02L\\xa0+\\xa08\\xa0=\\xa022\\xa0игры.']\nnew_fact = infer_new_fact(selected) # 'Итак, 2L\\xa0=\\xa022\\xa0–\\xa08\\xa0=\\xa014.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть\\xa0L\\xa0— количество проигрышей.', 'Итак, 2L\\xa0=\\xa022\\xa0–\\xa08\\xa0=\\xa014.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, L\\xa0=\\xa014\\xa0/\\xa02\\xa0=\\xa07 проигрышей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Футбольная команда сыграла 22\\xa0матча.', 'Сколько раз выиграли?', 'Таким образом, L\\xa0=\\xa014\\xa0/\\xa02\\xa0=\\xa07 проигрышей.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, команда выиграла 22\\xa0–\\xa07\\xa0=\\xa015\\xa0игр.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько раз выиграли?', 'Следовательно, команда выиграла 22\\xa0–\\xa07\\xa0=\\xa015\\xa0игр.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_85_196d62fcd1", "context": "", "options": [], "answer": "44", "reasoning_graph_edges": [{"antecedents": [6, 7], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [3, 8, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent6 & sent7 -> int1: Gene has been on 34 - 23 = 11 years of vacations, so he has 11 rows of blocks.; int1 & sent5 -> int2: He goes on 4 vacations a year, so he has been on 4 * 11 = 44 vacations.; int2 & sent3 & sent8 -> int3: Gene has 1 shirt from each vacation, so he has 44 * 1 = 44 quilt blocks in all.; int3 & sent8 -> int4: The answer is 44;", "textual_logical_units": {"1": "Джин шьет лоскутное одеяло из старых футболок, привезенных из поездок.", "2": "Из каждого отпуска он привозил по одной футболке.", "3": "Каждая футболка — это отдельный лоскут.", "4": "Каждый ряд состоит из лоскутов, приобретенных в отпусках в определенном году.", "5": "Он ездит в отпуск 4 раза в год", "6": "с 23 лет.", "7": "Сейчас ему 34 года.", "8": "Сколько всего у него лоскутов?", "9": "Джин ездит в отпуск 34 – 23 = 11 лет, поэтому у него 11 рядов лоскутов.", "10": "Он ездит в отпуск 4 раза в год, поэтому он был в отпуске 4 x 11 = 44 раза.", "11": "На каждый отпуск Джина приходится по одной футболке, так что всего у него 44 x 1 = 44 лоскута.", "12": "The answer is 44"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джин шьет лоскутное одеяло из старых футболок, привезенных из поездок.',\n  'Из каждого отпуска он привозил по одной футболке.',\n  'Каждая футболка\\xa0— это отдельный лоскут.',\n  'Каждый ряд состоит из лоскутов, приобретенных в отпусках в определенном году.',\n  'Он ездит в отпуск 4\\xa0раза в год',\n  'с 23\\xa0лет.',\n  'Сейчас ему 34\\xa0года.']\nquestion = 'Сколько всего у него лоскутов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['с 23\\xa0лет.', 'Сейчас ему 34\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'Джин ездит в отпуск 34\\xa0–\\xa023\\xa0=\\xa011\\xa0лет, поэтому у него 11 рядов лоскутов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он ездит в отпуск 4\\xa0раза в год', 'Джин ездит в отпуск 34\\xa0–\\xa023\\xa0=\\xa011\\xa0лет, поэтому у него 11 рядов лоскутов.']\nnew_fact = infer_new_fact(selected) # 'Он ездит в отпуск 4\\xa0раза в год, поэтому он был в отпуске 4\\xa0x\\xa011\\xa0=\\xa044\\xa0раза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая футболка\\xa0— это отдельный лоскут.', 'Сколько всего у него лоскутов?', 'Он ездит в отпуск 4\\xa0раза в год, поэтому он был в отпуске 4\\xa0x\\xa011\\xa0=\\xa044\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'На каждый отпуск Джина приходится по одной футболке, так что всего у него 44\\xa0x\\xa01\\xa0=\\xa044\\xa0лоскута.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего у него лоскутов?', 'На каждый отпуск Джина приходится по одной футболке, так что всего у него 44\\xa0x\\xa01\\xa0=\\xa044\\xa0лоскута.']\nnew_fact = infer_new_fact(selected) # 'The answer is 44'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '44'"}
{"id": "GSM8K_86_78c9c67c0b", "context": "", "options": [], "answer": "22", "reasoning_graph_edges": [{"antecedents": [4, 5, 6], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}, {"antecedents": [4, 8, 9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 & sent6 -> int1: The second time Greg’s alarm went off, it rang three times as long as the first, so it rang 3 * 4 = 12 times the second time.; int1 & sent7 -> int2: The third time it went off, it rang half as long as the second, so it rang 12 / 2 = 6 times the third time.; int1 & int2 & sent4 & sent8 -> int3: In all, Greg’s alarm rang 4 + 12 + 6 = 22 times.; int3 & sent8 -> int4: The answer is 22;", "textual_logical_units": {"1": "В качестве напоминания у Грега установлен будильник, который звонит 3 раза в день.", "2": "Когда будильник срабатывает,", "3": "он продолжает звонить, пока Грег не выключит его.", "4": "В первый раз, когда будильник сработал сегодня, он звонил 4 раза.", "5": "Когда он сработал во второй раз,", "6": "он звонил в 3 раза дольше, чем в первый раз.", "7": "В третий раз он звонил вдвое меньше, чем во второй раз.", "8": "Сколько раз в общей сложности звонил будильник?", "9": "Во второй раз будильник Грега работал в 3 раза дольше первого, поэтому во второй раз он звонил 3 x 4 = 12 раз.", "10": "В третий раз он звонил вдвое меньше, чем во второй раз, поэтому в третий раз будильник звонил 12 / 2 = 6 раз.", "11": "Всего будильник Грега звонил 4 + 12 + 6 = 22 раза.", "12": "The answer is 22"}, "human_translated": true, "code_input": "####\nfacts = [ 'В качестве напоминания у Грега установлен будильник, который звонит 3\\xa0раза в день.',\n  'Когда будильник срабатывает,',\n  'он продолжает звонить, пока Грег не выключит его.',\n  'В первый раз, когда будильник сработал сегодня, он звонил 4\\xa0раза.',\n  'Когда он сработал во второй раз,',\n  'он звонил в 3\\xa0раза дольше, чем в первый раз.',\n  'В третий раз он звонил вдвое меньше, чем во второй раз.']\nquestion = 'Сколько раз в общей сложности звонил будильник?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В первый раз, когда будильник сработал сегодня, он звонил 4\\xa0раза.', 'Когда он сработал во второй раз,', 'он звонил в 3\\xa0раза дольше, чем в первый раз.']\nnew_fact = infer_new_fact(selected) # 'Во второй раз будильник Грега работал в 3\\xa0раза дольше первого, поэтому во второй раз он звонил 3\\xa0x\\xa04\\xa0=\\xa012\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В третий раз он звонил вдвое меньше, чем во второй раз.', 'Во второй раз будильник Грега работал в 3\\xa0раза дольше первого, поэтому во второй раз он звонил 3\\xa0x\\xa04\\xa0=\\xa012\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'В третий раз он звонил вдвое меньше, чем во второй раз, поэтому в третий раз будильник звонил 12\\xa0/\\xa02\\xa0=\\xa06\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый раз, когда будильник сработал сегодня, он звонил 4\\xa0раза.', 'Сколько раз в общей сложности звонил будильник?', 'Во второй раз будильник Грега работал в 3\\xa0раза дольше первого, поэтому во второй раз он звонил 3\\xa0x\\xa04\\xa0=\\xa012\\xa0раз.', 'В третий раз он звонил вдвое меньше, чем во второй раз, поэтому в третий раз будильник звонил 12\\xa0/\\xa02\\xa0=\\xa06\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Всего будильник Грега звонил 4\\xa0+\\xa012\\xa0+\\xa06\\xa0=\\xa022\\xa0раза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько раз в общей сложности звонил будильник?', 'Всего будильник Грега звонил 4\\xa0+\\xa012\\xa0+\\xa06\\xa0=\\xa022\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'The answer is 22'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '22'"}
{"id": "GSM8K_87_45525e6911", "context": "", "options": [], "answer": "9360", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: In a month, Sylvie earns $600. which totals $600/month * 12 months/year = $7200 in a year.; int1 & sent2 -> int2: Sylvie earnings will increase by 10/100 * $7200/year = $720/year after 5 years.; int2 & sent4 -> int3: In three years, the total increase in her salary will be 3 years * $720/year = $2160; int1 & int3 & sent4 -> int4: After three years, Sylvie will be paid $7200 + $2160 = $9360; int4 & sent3 & sent4 -> int5: The answer is 9360;", "textual_logical_units": {"1": "Компания платит каждому своему сотруднику по 600 долларов в месяц.", "2": "Компания придерживается политики ежегодного повышения заработной платы каждого сотрудника на 10 % от первоначального оклада для тех, кто проработал в компании 5 лет.", "3": "Если в декабре прошлого года стаж Сильви в компании составил 5 лет,", "4": "какова будет ее зарплата за год еще через 3 года работы?", "5": "За месяц Сильви зарабатывает 600 долларов, что в сумме составляет 600 долларов в месяц x 12 месяцев в году = 7200 долларов в год.", "6": "Через 5 лет заработок Сильви увеличится на 10 / 100 x 7200 долларов в год = 720 долларов в год.", "7": "Через 3 года общий прирост ее зарплаты составит 3 x 720 долларов в год = 2160 долларов.", "8": "Через 3 года заработок Сильви составит 7200 + 2160 = 9360 долларов.", "9": "The answer is 9360"}, "human_translated": true, "code_input": "####\nfacts = [ 'Компания платит каждому своему сотруднику по 600\\xa0долларов в месяц.',\n  'Компания придерживается политики ежегодного повышения заработной платы каждого сотрудника на 10\\xa0% от первоначального оклада для тех, кто проработал в '\n  'компании 5\\xa0лет.',\n  'Если в декабре прошлого года стаж Сильви в компании составил 5\\xa0лет,']\nquestion = 'какова будет ее зарплата за год еще через 3\\xa0года работы?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Компания платит каждому своему сотруднику по 600\\xa0долларов в месяц.', 'какова будет ее зарплата за год еще через 3\\xa0года работы?']\nnew_fact = infer_new_fact(selected) # 'За месяц Сильви зарабатывает 600\\xa0долларов, что в сумме составляет 600\\xa0долларов в месяц\\xa0x\\xa012\\xa0месяцев в году\\xa0=\\xa07200\\xa0долларов в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания придерживается политики ежегодного повышения заработной платы каждого сотрудника на 10\\xa0% от первоначального оклада для тех, кто проработал в компании 5\\xa0лет.', 'За месяц Сильви зарабатывает 600\\xa0долларов, что в сумме составляет 600\\xa0долларов в месяц\\xa0x\\xa012\\xa0месяцев в году\\xa0=\\xa07200\\xa0долларов в год.']\nnew_fact = infer_new_fact(selected) # 'Через 5\\xa0лет заработок Сильви увеличится на 10\\xa0/\\xa0100\\xa0x\\xa07200\\xa0долларов в год\\xa0=\\xa0720\\xa0долларов в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова будет ее зарплата за год еще через 3\\xa0года работы?', 'Через 5\\xa0лет заработок Сильви увеличится на 10\\xa0/\\xa0100\\xa0x\\xa07200\\xa0долларов в год\\xa0=\\xa0720\\xa0долларов в год.']\nnew_fact = infer_new_fact(selected) # 'Через 3\\xa0года общий прирост ее зарплаты составит 3\\xa0x\\xa0720\\xa0долларов в год\\xa0=\\xa02160\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова будет ее зарплата за год еще через 3\\xa0года работы?', 'За месяц Сильви зарабатывает 600\\xa0долларов, что в сумме составляет 600\\xa0долларов в месяц\\xa0x\\xa012\\xa0месяцев в году\\xa0=\\xa07200\\xa0долларов в год.', 'Через 3\\xa0года общий прирост ее зарплаты составит 3\\xa0x\\xa0720\\xa0долларов в год\\xa0=\\xa02160\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Через 3\\xa0года заработок Сильви составит 7200\\xa0+\\xa02160\\xa0=\\xa09360\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в декабре прошлого года стаж Сильви в компании составил 5\\xa0лет,', 'какова будет ее зарплата за год еще через 3\\xa0года работы?', 'Через 3\\xa0года заработок Сильви составит 7200\\xa0+\\xa02160\\xa0=\\xa09360\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 9360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9360'"}
{"id": "GSM8K_88_c105a2c0e4", "context": "", "options": [], "answer": "8000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [2, 3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let m be the number of copies Marilyn sold and h be the number Harald sold. We know that m + h = 80,000 and m = 10h.; int1 -> int2: Substituting the second equation into the first, we get 10h + h = 88,000; int1 & int2 -> int3: Combining like terms, we get 11h = 88,000; int1 & int3 -> int4: Dividing both sides by 11, we get h = 8,000; int4 & sent2 & sent3 -> int5: The answer is 8000;", "textual_logical_units": {"1": "Первая пластинка Мэрилин была продана количеством в 10 раз больше копий, чем пластинка Харальда.", "2": "Если всего продали 88 000 копий,", "3": "сколько копий своей пластинки продал Харальд?", "4": "Пусть m — количество проданных Мэрилин копий, а h — количество проданных Гаральдом. Мы знаем, что m + h = 80 000 и что m = 10h.", "5": "Подставляя второе уравнение в первое, получаем 10h + h = 88 000.", "6": "С помощью приведения подобных мы получим, что 11h = 88 000.", "7": "Разделив обе части уравнения на 11, получим h = 8000.", "8": "The answer is 8000"}, "human_translated": true, "code_input": "####\nfacts = ['Первая пластинка Мэрилин была продана количеством в 10\\xa0раз больше копий, чем пластинка Харальда.', 'Если всего продали 88\\xa0000 копий,']\nquestion = 'сколько копий своей пластинки продал Харальд?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Первая пластинка Мэрилин была продана количеством в 10\\xa0раз больше копий, чем пластинка Харальда.', 'Если всего продали 88\\xa0000 копий,']\nnew_fact = infer_new_fact(selected) # 'Пусть m\\xa0— количество проданных Мэрилин копий, а h\\xa0— количество проданных Гаральдом. Мы знаем, что m\\xa0+ h\\xa0=\\xa080\\xa0000\\xa0и что m\\xa0= 10h.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть m\\xa0— количество проданных Мэрилин копий, а h\\xa0— количество проданных Гаральдом. Мы знаем, что m\\xa0+ h\\xa0=\\xa080\\xa0000\\xa0и что m\\xa0= 10h.']\nnew_fact = infer_new_fact(selected) # 'Подставляя второе уравнение в первое, получаем 10h\\xa0+\\xa0h\\xa0=\\xa088\\xa0000.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть m\\xa0— количество проданных Мэрилин копий, а h\\xa0— количество проданных Гаральдом. Мы знаем, что m\\xa0+ h\\xa0=\\xa080\\xa0000\\xa0и что m\\xa0= 10h.', 'Подставляя второе уравнение в первое, получаем 10h\\xa0+\\xa0h\\xa0=\\xa088\\xa0000.']\nnew_fact = infer_new_fact(selected) # 'С помощью приведения подобных мы получим, что 11h\\xa0=\\xa088\\xa0000.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть m\\xa0— количество проданных Мэрилин копий, а h\\xa0— количество проданных Гаральдом. Мы знаем, что m\\xa0+ h\\xa0=\\xa080\\xa0000\\xa0и что m\\xa0= 10h.', 'С помощью приведения подобных мы получим, что 11h\\xa0=\\xa088\\xa0000.']\nnew_fact = infer_new_fact(selected) # 'Разделив обе части уравнения на 11, получим h\\xa0=\\xa08000.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если всего продали 88\\xa0000 копий,', 'сколько копий своей пластинки продал Харальд?', 'Разделив обе части уравнения на 11, получим h\\xa0=\\xa08000.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8000'"}
{"id": "GSM8K_89_04dc96d165", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: She needs 12 gift bags because 16 x .75 = 12; int1 & sent5 & sent6 -> int2: She will spend $24 because 12 x 2 = 24; int2 & sent6 -> int3: The answer is 24;", "textual_logical_units": {"1": "Кристина планирует вечеринку по случаю дня рождения и", "2": "ей нужно 0,75 подарочных пакетов на каждого приглашенного гостя,", "3": "потому что 1/4 приглашенных не придут.", "4": "Она пригласила 16 друзей.", "5": "Подарочные пакеты стоят 2 доллара за штуку.", "6": "Сколько она потратит?", "7": "Ей нужно 12 подарочных пакетов, потому что 16 x 0,75 = 12.", "8": "Она потратит 24 доллара, потому что 12 x 2 = 24.", "9": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кристина планирует вечеринку по случаю дня рождения и',\n  'ей нужно 0,75 подарочных пакетов на каждого приглашенного гостя,',\n  'потому что 1/4 приглашенных не придут.',\n  'Она пригласила 16\\xa0друзей.',\n  'Подарочные пакеты стоят 2\\xa0доллара за штуку.']\nquestion = 'Сколько она потратит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ей нужно 0,75 подарочных пакетов на каждого приглашенного гостя,', 'Она пригласила 16\\xa0друзей.']\nnew_fact = infer_new_fact(selected) # 'Ей нужно 12\\xa0подарочных пакетов, потому что 16\\xa0x\\xa00,75\\xa0=\\xa012.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подарочные пакеты стоят 2\\xa0доллара за штуку.', 'Сколько она потратит?', 'Ей нужно 12\\xa0подарочных пакетов, потому что 16\\xa0x\\xa00,75\\xa0=\\xa012.']\nnew_fact = infer_new_fact(selected) # 'Она потратит 24\\xa0доллара, потому что 12\\xa0x\\xa02\\xa0=\\xa024.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько она потратит?', 'Она потратит 24\\xa0доллара, потому что 12\\xa0x\\xa02\\xa0=\\xa024.']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_90_88bfa82e0d", "context": "", "options": [], "answer": "225", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [6, 8, 9], "consequent": 10}, {"antecedents": [4, 5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Half of 10 pounds is 10/2=5 pounds.; sent2 & sent4 -> int2: To feed 20 dinosaur adults, he will need 20*10=200 pounds of potato salad.; int1 & sent5 -> int3: To feed 5 dinosaur children, he will need 5*5=25 pounds of potato salad.; int2 & int3 & sent6 -> int4: In total, he will need to bring 200+25=225 pounds of potato salad to the picnic.; int4 & sent4 & sent5 & sent6 -> int5: The answer is 225;", "textual_logical_units": {"1": "Тираннозавр Тед планировал принести картофельный салат на пикник с другими динозаврами.", "2": "Он знает, что каждый взрослый динозавр съест 10 фунтов картофельного салата,", "3": "а маленький динозаврик съест вдвое меньше, чем взрослый.", "4": "Если на пикнике будет 20 взрослых и", "5": "5 маленьких динозавриков,", "6": "сколько фунтов картофельного салата нужно принести Теду, чтобы накормить всех?", "7": "Половина от 10 фунтов — это 10 / 2 = 5 фунтов.", "8": "Чтобы накормить 20 взрослых динозавров, понадобится 20 x 10 = 200 фунтов картофельного салата.", "9": "Чтобы накормить 5 динозавров-детишек, ему понадобится 5 x 5 = 25 фунтов картофельного салата.", "10": "В общей сложности ему нужно будет принести на пикник 200 + 25 = 225 фунтов картофельного салата.", "11": "The answer is 225"}, "human_translated": true, "code_input": "####\nfacts = [ 'Тираннозавр Тед планировал принести картофельный салат на пикник с другими динозаврами.',\n  'Он знает, что каждый взрослый динозавр съест 10\\xa0фунтов картофельного салата,',\n  'а маленький динозаврик съест вдвое меньше, чем взрослый.',\n  'Если на пикнике будет 20\\xa0взрослых и',\n  '5\\xa0маленьких динозавриков,']\nquestion = 'сколько фунтов картофельного салата нужно принести Теду, чтобы накормить всех?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он знает, что каждый взрослый динозавр съест 10\\xa0фунтов картофельного салата,', 'а маленький динозаврик съест вдвое меньше, чем взрослый.']\nnew_fact = infer_new_fact(selected) # 'Половина от 10\\xa0фунтов\\xa0— это 10\\xa0/\\xa02\\xa0=\\xa05\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он знает, что каждый взрослый динозавр съест 10\\xa0фунтов картофельного салата,', 'Если на пикнике будет 20\\xa0взрослых и']\nnew_fact = infer_new_fact(selected) # 'Чтобы накормить 20\\xa0взрослых динозавров, понадобится 20\\xa0x\\xa010\\xa0=\\xa0200\\xa0фунтов картофельного салата.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5\\xa0маленьких динозавриков,', 'Половина от 10\\xa0фунтов\\xa0— это 10\\xa0/\\xa02\\xa0=\\xa05\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы накормить 5\\xa0динозавров-детишек, ему понадобится 5\\xa0x\\xa05\\xa0=\\xa025\\xa0фунтов картофельного салата.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько фунтов картофельного салата нужно принести Теду, чтобы накормить всех?', 'Чтобы накормить 20\\xa0взрослых динозавров, понадобится 20\\xa0x\\xa010\\xa0=\\xa0200\\xa0фунтов картофельного салата.', 'Чтобы накормить 5\\xa0динозавров-детишек, ему понадобится 5\\xa0x\\xa05\\xa0=\\xa025\\xa0фунтов картофельного салата.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности ему нужно будет принести на пикник 200\\xa0+\\xa025\\xa0=\\xa0225\\xa0фунтов картофельного салата.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если на пикнике будет 20\\xa0взрослых и', '5\\xa0маленьких динозавриков,', 'сколько фунтов картофельного салата нужно принести Теду, чтобы накормить всех?', 'В общей сложности ему нужно будет принести на пикник 200\\xa0+\\xa025\\xa0=\\xa0225\\xa0фунтов картофельного салата.']\nnew_fact = infer_new_fact(selected) # 'The answer is 225'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '225'"}
{"id": "GSM8K_91_b524854316", "context": "", "options": [], "answer": "28", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Marcia has 4 + 2 = 6 pets.; int1 & sent1 -> int2: Jan has 3 * 6 = 18 pets; int1 & int2 & sent3 & sent4 -> int3: In total, the three have 4 + 6 + 18 = 28 pets.; int3 & sent3 & sent4 -> int4: The answer is 28;", "textual_logical_units": {"1": "У Яна в 3 раза больше питомцев, чем у Марсии.", "2": "У Марсии на 2 питомца больше, чем у Синди.", "3": "Если у Синди 4 питомца,", "4": "сколько всего домашних животных у всех троих?", "5": "У Марсии 4 + 2 = 6 питомцев.", "6": "У Яна 3 x 6 = 18 питомцев.", "7": "Всего у троих 4 + 6 + 18 = 28 питомцев.", "8": "The answer is 28"}, "human_translated": true, "code_input": "####\nfacts = ['У Яна в 3\\xa0раза больше питомцев, чем у Марсии.', 'У Марсии на 2\\xa0питомца больше, чем у Синди.', 'Если у Синди 4\\xa0питомца,']\nquestion = 'сколько всего домашних животных у всех троих?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Марсии на 2\\xa0питомца больше, чем у Синди.', 'Если у Синди 4\\xa0питомца,']\nnew_fact = infer_new_fact(selected) # 'У Марсии 4\\xa0+\\xa02\\xa0=\\xa06\\xa0питомцев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Яна в 3\\xa0раза больше питомцев, чем у Марсии.', 'У Марсии 4\\xa0+\\xa02\\xa0=\\xa06\\xa0питомцев.']\nnew_fact = infer_new_fact(selected) # 'У Яна 3\\xa0x\\xa06\\xa0=\\xa018\\xa0питомцев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Синди 4\\xa0питомца,', 'сколько всего домашних животных у всех троих?', 'У Марсии 4\\xa0+\\xa02\\xa0=\\xa06\\xa0питомцев.', 'У Яна 3\\xa0x\\xa06\\xa0=\\xa018\\xa0питомцев.']\nnew_fact = infer_new_fact(selected) # 'Всего у троих 4\\xa0+\\xa06\\xa0+\\xa018\\xa0=\\xa028\\xa0питомцев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Синди 4\\xa0питомца,', 'сколько всего домашних животных у всех троих?', 'Всего у троих 4\\xa0+\\xa06\\xa0+\\xa018\\xa0=\\xa028\\xa0питомцев.']\nnew_fact = infer_new_fact(selected) # 'The answer is 28'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '28'"}
{"id": "GSM8K_92_fc740e6bf5", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [2, 5, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: James is 10 and 1 year younger than Corey, so Corey is 10 + 1 = 11 years old; int1 & sent3 -> int2: Amy is 2 years younger than Corey so is 11 - 2 = 9 years old; int2 & sent2 & sent5 -> int3: Amy is also 5 years older than Jackson, so Jackson is 9 - 5 = 4 years old; int3 & sent4 & sent5 -> int4: The answer is 4;", "textual_logical_units": {"1": "У Эмили четверо детей по имени Эми, Джексон, Кори и Джеймс.", "2": "Эми на 5 лет старше Джексона и", "3": "на 2 года моложе Кори.", "4": "Если Джеймсу 10 лет и", "5": "он на 1 год моложе Кори, сколько лет Джексону?", "6": "Джеймсу 10 и он на 1 год младше Кори, значит Кори 10 + 1 = 11 лет.", "7": "Эми младше Кори на 2 года, значит ей 11 – 2 = 9 лет.", "8": "Эми также старше Джексона на 5 лет, поэтому Джексону 9 – 5 = 4 года.", "9": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['У Эмили четверо детей по имени Эми, Джексон, Кори и Джеймс.', 'Эми на 5\\xa0лет старше Джексона и', 'на 2\\xa0года моложе Кори.', 'Если Джеймсу 10\\xa0лет и']\nquestion = 'он на 1\\xa0год моложе Кори, сколько лет Джексону?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если Джеймсу 10\\xa0лет и', 'он на 1\\xa0год моложе Кори, сколько лет Джексону?']\nnew_fact = infer_new_fact(selected) # 'Джеймсу 10 и он на 1\\xa0год младше Кори, значит Кори 10\\xa0+\\xa01\\xa0=\\xa011\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на 2\\xa0года моложе Кори.', 'Джеймсу 10 и он на 1\\xa0год младше Кори, значит Кори 10\\xa0+\\xa01\\xa0=\\xa011\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Эми младше Кори на 2\\xa0года, значит ей 11\\xa0–\\xa02\\xa0=\\xa09\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Эми на 5\\xa0лет старше Джексона и', 'он на 1\\xa0год моложе Кори, сколько лет Джексону?', 'Эми младше Кори на 2\\xa0года, значит ей 11\\xa0–\\xa02\\xa0=\\xa09\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Эми также старше Джексона на 5\\xa0лет, поэтому Джексону 9\\xa0–\\xa05\\xa0=\\xa04\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джеймсу 10\\xa0лет и', 'он на 1\\xa0год моложе Кори, сколько лет Джексону?', 'Эми также старше Джексона на 5\\xa0лет, поэтому Джексону 9\\xa0–\\xa05\\xa0=\\xa04\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_93_f95fa97fba", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent4 -> int1: If Lee runs the 400-meter hurdles in 38 seconds, which was two seconds faster than Gerald used to run the 400-meter hurdles, then Gerald initially would run the 400-meter hurdles in 38+2=40 seconds.; int1 & sent3 -> int2: 10% of 40 seconds is 40*0.1=4 seconds.; int1 & int2 & sent4 -> int3: The improved diet reduced Gerald's race time to 40-4=36 seconds.; int3 & sent4 -> int4: The answer is 36;", "textual_logical_units": {"1": "Раньше Ли мог пробегать 400 метров с барьерами на 2 секунды быстрее, чем Джеральд.", "2": "Но Джеральд изменил свое питание", "3": "и стал быстрее на 10 %.", "4": "Если Ли пробегает 400 метров с барьерами за 38 секунд, как быстро Джеральд, соблюдая улучшенную диету, сможет пробежать такое же расстояние?", "5": "Если Ли пробегает 400 метров с барьерами за 38 секунд, что на две секунды быстрее, чем Джеральд, то Джеральд сначала пробегал 400 метров с барьерами за 38 + 2 = 40 секунд.", "6": "10 % от 40 секунд — это 40 x 0,1 = 4 секунды.", "7": "Благодаря изменению питания результат Джеральда улучшился до 40 – 4 = 36 секунд.", "8": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['Раньше Ли мог пробегать 400\\xa0метров с барьерами на 2\\xa0секунды быстрее, чем Джеральд.', 'Но Джеральд изменил свое питание', 'и стал быстрее на 10\\xa0%.']\nquestion = 'Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, как быстро Джеральд, соблюдая улучшенную диету, сможет пробежать такое же расстояние?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Раньше Ли мог пробегать 400\\xa0метров с барьерами на 2\\xa0секунды быстрее, чем Джеральд.', 'и стал быстрее на 10\\xa0%.', 'Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, как быстро Джеральд, соблюдая улучшенную диету, сможет пробежать такое же расстояние?']\nnew_fact = infer_new_fact(selected) # 'Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, что на две секунды быстрее, чем Джеральд, то Джеральд сначала пробегал 400\\xa0метров с барьерами за 38\\xa0+\\xa02\\xa0=\\xa040\\xa0секунд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и стал быстрее на 10\\xa0%.', 'Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, что на две секунды быстрее, чем Джеральд, то Джеральд сначала пробегал 400\\xa0метров с барьерами за 38\\xa0+\\xa02\\xa0=\\xa040\\xa0секунд.']\nnew_fact = infer_new_fact(selected) # '10\\xa0% от 40\\xa0секунд\\xa0— это 40\\xa0x\\xa00,1\\xa0=\\xa04\\xa0секунды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, как быстро Джеральд, соблюдая улучшенную диету, сможет пробежать такое же расстояние?', 'Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, что на две секунды быстрее, чем Джеральд, то Джеральд сначала пробегал 400\\xa0метров с барьерами за 38\\xa0+\\xa02\\xa0=\\xa040\\xa0секунд.', '10\\xa0% от 40\\xa0секунд\\xa0— это 40\\xa0x\\xa00,1\\xa0=\\xa04\\xa0секунды.']\nnew_fact = infer_new_fact(selected) # 'Благодаря изменению питания результат Джеральда улучшился до 40\\xa0–\\xa04\\xa0=\\xa036\\xa0секунд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Ли пробегает 400\\xa0метров с барьерами за 38\\xa0секунд, как быстро Джеральд, соблюдая улучшенную диету, сможет пробежать такое же расстояние?', 'Благодаря изменению питания результат Джеральда улучшился до 40\\xa0–\\xa04\\xa0=\\xa036\\xa0секунд.']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_94_5639d4e1e5", "context": "", "options": [], "answer": "348", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [2, 3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If there are two cats for every dog, and the number of dogs is 60, the number of cats is 2*60 = 120; int1 -> int2: The combined number of cats and dogs is 120+60 = 180; int2 & sent1 -> int3: The number of rabbits pets is twelve less than the combined number of pet dogs and cats, a total of 180-12 = 168; int2 & int3 & sent4 -> int4: The total number of pets in the compound is 168+180 = 348; int4 & sent2 & sent3 & sent4 -> int5: The answer is 348;", "textual_logical_units": {"1": "Во всем районе количество домашних кроликов на 12 меньше, чем общее количество домашних собак и кошек.", "2": "Если на каждую собаку приходится 2 кошки,", "3": "а количество собак — 60,", "4": "сколько всего домашних животных во всем районе?", "5": "Если на каждую собаку приходится 2 кошки, а количество собак составляет 60, количество кошек составляет 2 x 60 = 120.", "6": "Общее количество кошек и собак составляет 120 + 60 = 180.", "7": "Количество домашних на 12 меньше, чем общее количество домашних собак и кошек, всего 180 – 12 = 168.", "8": "Общее количество домашних животных во всем районе составляет 168 + 180 = 348.", "9": "The answer is 348"}, "human_translated": true, "code_input": "####\nfacts = [ 'Во всем районе количество домашних кроликов на 12\\xa0меньше, чем общее количество домашних собак и кошек.',\n  'Если на каждую собаку приходится 2\\xa0кошки,',\n  'а количество собак\\xa0— 60,']\nquestion = 'сколько всего домашних животных во всем районе?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если на каждую собаку приходится 2\\xa0кошки,', 'а количество собак\\xa0— 60,']\nnew_fact = infer_new_fact(selected) # 'Если на каждую собаку приходится 2\\xa0кошки, а количество собак составляет 60, количество кошек составляет 2\\xa0x\\xa060\\xa0=\\xa0120.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если на каждую собаку приходится 2\\xa0кошки, а количество собак составляет 60, количество кошек составляет 2\\xa0x\\xa060\\xa0=\\xa0120.']\nnew_fact = infer_new_fact(selected) # 'Общее количество кошек и собак составляет 120\\xa0+\\xa060\\xa0=\\xa0180.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во всем районе количество домашних кроликов на 12\\xa0меньше, чем общее количество домашних собак и кошек.', 'Общее количество кошек и собак составляет 120\\xa0+\\xa060\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'Количество домашних на 12\\xa0меньше, чем общее количество домашних собак и кошек, всего 180\\xa0–\\xa012\\xa0=\\xa0168.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько всего домашних животных во всем районе?', 'Общее количество кошек и собак составляет 120\\xa0+\\xa060\\xa0=\\xa0180.', 'Количество домашних на 12\\xa0меньше, чем общее количество домашних собак и кошек, всего 180\\xa0–\\xa012\\xa0=\\xa0168.']\nnew_fact = infer_new_fact(selected) # 'Общее количество домашних животных во всем районе составляет 168\\xa0+\\xa0180\\xa0=\\xa0348.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если на каждую собаку приходится 2\\xa0кошки,', 'а количество собак\\xa0— 60,', 'сколько всего домашних животных во всем районе?', 'Общее количество домашних животных во всем районе составляет 168\\xa0+\\xa0180\\xa0=\\xa0348.']\nnew_fact = infer_new_fact(selected) # 'The answer is 348'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '348'"}
{"id": "GSM8K_95_badce6436a", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: There are 200 x 2/5 = 80 boys in Grade 5.; int1 & sent1 -> int2: So, 200 - 80 = 120 are girls.; int2 & sent2 -> int3: Out of the 120 girls, 120 x 2/3 = 80 are in the girl scout.; int2 & int3 & sent3 -> int4: Therefore, 120 - 80 = 40 girls are not in the girl scout.; int4 & sent3 -> int5: The answer is 40;", "textual_logical_units": {"1": "Из 200 учеников пятого класса 2/5 — мальчики,", "2": "а 2/3 девочек являются скаутами.", "3": "Сколько девочек в классе не являются скаутами?", "4": "В пятом классе 200 x 2/5 = 80 мальчиков.", "5": "Значит, 200 – 80 = 120 — это девочки.", "6": "Из 120 девочек 120 x 2/3 = 80 являются скаутами.", "7": "Следовательно, 120 – 80 = 40 девочек скаутами не являются.", "8": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = ['Из 200\\xa0учеников пятого класса 2/5\\xa0— мальчики,', 'а 2/3\\xa0девочек являются скаутами.']\nquestion = 'Сколько девочек в классе не являются скаутами?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Из 200\\xa0учеников пятого класса 2/5\\xa0— мальчики,']\nnew_fact = infer_new_fact(selected) # 'В пятом классе 200\\xa0x\\xa02/5\\xa0=\\xa080\\xa0мальчиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 200\\xa0учеников пятого класса 2/5\\xa0— мальчики,', 'В пятом классе 200\\xa0x\\xa02/5\\xa0=\\xa080\\xa0мальчиков.']\nnew_fact = infer_new_fact(selected) # 'Значит, 200\\xa0–\\xa080\\xa0=\\xa0120\\xa0— это девочки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а 2/3\\xa0девочек являются скаутами.', 'Значит, 200\\xa0–\\xa080\\xa0=\\xa0120\\xa0— это девочки.']\nnew_fact = infer_new_fact(selected) # 'Из 120 девочек 120\\xa0x\\xa02/3\\xa0=\\xa080 являются скаутами.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько девочек в классе не являются скаутами?', 'Значит, 200\\xa0–\\xa080\\xa0=\\xa0120\\xa0— это девочки.', 'Из 120 девочек 120\\xa0x\\xa02/3\\xa0=\\xa080 являются скаутами.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 120\\xa0–\\xa080\\xa0=\\xa040 девочек скаутами не являются.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько девочек в классе не являются скаутами?', 'Следовательно, 120\\xa0–\\xa080\\xa0=\\xa040 девочек скаутами не являются.']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_96_c6c1f9a616", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: James slept 9 hours * 2/3 = 6 hours.; int1 & sent1 & sent3 -> int2: So, Harry slept 9 - 6 = 3 hours more than James.; int2 & sent3 -> int3: The answer is 3;", "textual_logical_units": {"1": "Прошлой ночью Гарри спал 9 часов.", "2": "Его друг Джеймс спал только 2/3 того времени, что спал Гарри.", "3": "На сколько часов Гарри спал больше, чем Джеймс?", "4": "Джеймс спал 9 часов x 2/3 = 6 часов.", "5": "Итак, Гарри спал на 9 – 6 = 3 часа больше Джеймса.", "6": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['Прошлой ночью Гарри спал 9\\xa0часов.', 'Его друг Джеймс спал только 2/3\\xa0того времени, что спал Гарри.']\nquestion = 'На сколько часов Гарри спал больше, чем Джеймс?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прошлой ночью Гарри спал 9\\xa0часов.', 'Его друг Джеймс спал только 2/3\\xa0того времени, что спал Гарри.']\nnew_fact = infer_new_fact(selected) # 'Джеймс спал 9\\xa0часов\\xa0x\\xa02/3\\xa0=\\xa06\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прошлой ночью Гарри спал 9\\xa0часов.', 'На сколько часов Гарри спал больше, чем Джеймс?', 'Джеймс спал 9\\xa0часов\\xa0x\\xa02/3\\xa0=\\xa06\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Итак, Гарри спал на 9\\xa0–\\xa06\\xa0=\\xa03\\xa0часа больше Джеймса.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько часов Гарри спал больше, чем Джеймс?', 'Итак, Гарри спал на 9\\xa0–\\xa06\\xa0=\\xa03\\xa0часа больше Джеймса.']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_97_2fa0dc89f3", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [3, 5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent4 -> int1: Tomatoes lose half their volume when made into sauce, so Freda started with 32 * 2 = 64 ounces of tomatoes.; int1 & sent3 -> int2: At 16 ounces per can, she used 64 / 16 = 4 cans of tomatoes.; int2 & sent3 & sent5 -> int3: At 3 tomatoes a can, Freda used 3 * 4 = 12 tomatoes.; int3 & sent5 -> int4: The answer is 12;", "textual_logical_units": {"1": "Когда Фреда готовит соус из консервированных помидоров,", "2": "они теряют половину своего объема.", "3": "Каждая банка помидоров объемом 16 унций, которую она использует, содержит 3 помидора.", "4": "Объем последней партии томатного соуса Фреды составил 32 унции.", "5": "Сколько помидоров использовала Фреда?", "6": "Помидоры теряют половину своего объема при приготовлении соуса, поэтому Фреда использовала 32 x 2 = 64 унции помидоров.", "7": "Если в банке 16 унций, она использовала 64 / 16 = 4 банки помидоров.", "8": "При том, что в каждой банке 3 помидора, Фреда использовала 3 x 4 = 12 помидоров.", "9": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = [ 'Когда Фреда готовит соус из консервированных помидоров,',\n  'они теряют половину своего объема.',\n  'Каждая банка помидоров объемом 16\\xa0унций, которую она использует, содержит 3\\xa0помидора.',\n  'Объем последней партии томатного соуса Фреды составил 32\\xa0унции.']\nquestion = 'Сколько помидоров использовала Фреда?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Когда Фреда готовит соус из консервированных помидоров,', 'они теряют половину своего объема.', 'Объем последней партии томатного соуса Фреды составил 32\\xa0унции.']\nnew_fact = infer_new_fact(selected) # 'Помидоры теряют половину своего объема при приготовлении соуса, поэтому Фреда использовала 32\\xa0x\\xa02\\xa0=\\xa064\\xa0унции помидоров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая банка помидоров объемом 16\\xa0унций, которую она использует, содержит 3\\xa0помидора.', 'Помидоры теряют половину своего объема при приготовлении соуса, поэтому Фреда использовала 32\\xa0x\\xa02\\xa0=\\xa064\\xa0унции помидоров.']\nnew_fact = infer_new_fact(selected) # 'Если в банке 16\\xa0унций, она использовала 64\\xa0/\\xa016\\xa0=\\xa04\\xa0банки помидоров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая банка помидоров объемом 16\\xa0унций, которую она использует, содержит 3\\xa0помидора.', 'Сколько помидоров использовала Фреда?', 'Если в банке 16\\xa0унций, она использовала 64\\xa0/\\xa016\\xa0=\\xa04\\xa0банки помидоров.']\nnew_fact = infer_new_fact(selected) # 'При том, что в каждой банке 3\\xa0помидора, Фреда использовала 3\\xa0x\\xa04\\xa0=\\xa012\\xa0помидоров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько помидоров использовала Фреда?', 'При том, что в каждой банке 3\\xa0помидора, Фреда использовала 3\\xa0x\\xa04\\xa0=\\xa012\\xa0помидоров.']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_98_8440ead6ee", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 6, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: The cars that exited do not need to be included so there were 30 original cars – 5 cars that exited = 25 cars that drove through the traffic jam.; int1 & sent3 & sent6 -> int2: Most of the cars exited in the final 15 minutes so in the first 15 minutes, there must have been 25 total cars – 20 cars that drove through in the final 15 minutes = 5 cars that drove through the traffic jam.; int2 & sent5 & sent6 -> int3: The answer is 5;", "textual_logical_units": {"1": "Автомобили выстроились в очередь на автомагистрали.", "2": "Несколько автомобилей проезжают за первые 15 минут пробки,", "3": "затем за оставшиеся 15 минут проезжают еще 20 автомобилей.", "4": "5 машин уезжают, чтобы не проезжать через пробку.", "5": "Если изначально на автомагистрали было 30 автомобилей,", "6": "сколько машин проехало пробку за первые 15 минут?", "7": "Уехавшие автомобили не нужно включать, поэтому было 30 автомобилей – 5 уехавших автомобилей = 25 автомобилей, проехавших через пробку.", "8": "Большинство автомобилей проехали в последние 15 минут, поэтому за первые 15 минут проехало: 25 автомобилей – 20 автомобилей, которые проехали за последние 15 минут = 5 автомобилей, проехавших через пробку в первые 15 минут.", "9": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'Автомобили выстроились в очередь на автомагистрали.',\n  'Несколько автомобилей проезжают за первые 15\\xa0минут пробки,',\n  'затем за оставшиеся 15\\xa0минут проезжают еще 20\\xa0автомобилей.',\n  '5\\xa0машин уезжают, чтобы не проезжать через пробку.',\n  'Если изначально на автомагистрали было 30\\xa0автомобилей,']\nquestion = 'сколько машин проехало пробку за первые 15\\xa0минут?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5\\xa0машин уезжают, чтобы не проезжать через пробку.', 'Если изначально на автомагистрали было 30\\xa0автомобилей,']\nnew_fact = infer_new_fact(selected) # 'Уехавшие автомобили не нужно включать, поэтому было 30\\xa0автомобилей\\xa0–\\xa05\\xa0уехавших автомобилей\\xa0=\\xa025\\xa0автомобилей, проехавших через пробку.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['затем за оставшиеся 15\\xa0минут проезжают еще 20\\xa0автомобилей.', 'сколько машин проехало пробку за первые 15\\xa0минут?', 'Уехавшие автомобили не нужно включать, поэтому было 30\\xa0автомобилей\\xa0–\\xa05\\xa0уехавших автомобилей\\xa0=\\xa025\\xa0автомобилей, проехавших через пробку.']\nnew_fact = infer_new_fact(selected) # 'Большинство автомобилей проехали в последние 15\\xa0минут, поэтому за первые 15\\xa0минут проехало: 25\\xa0автомобилей\\xa0–\\xa020\\xa0автомобилей, которые проехали за последние 15\\xa0минут\\xa0=\\xa05\\xa0автомобилей, проехавших через пробку в первые 15\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если изначально на автомагистрали было 30\\xa0автомобилей,', 'сколько машин проехало пробку за первые 15\\xa0минут?', 'Большинство автомобилей проехали в последние 15\\xa0минут, поэтому за первые 15\\xa0минут проехало: 25\\xa0автомобилей\\xa0–\\xa020\\xa0автомобилей, которые проехали за последние 15\\xa0минут\\xa0=\\xa05\\xa0автомобилей, проехавших через пробку в первые 15\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_99_421aced707", "context": "", "options": [], "answer": "58", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 -> int1: Yesterday, before receiving the plants, Mary had 2*40 = 80 potted plants; int1 & sent2 -> int2: After receiving an additional 18 plants, she therefore had a total of 80 + 18 = 98 potted plants; sent3 & sent4 -> int3: Tomorrow, Mary’s plant giveaway will be 40 *1 = 40 potted plants.; int2 & int3 -> int4: She will therefore remain with 98 - 40 = 58 potted plants.; int4 & sent5 -> int5: The answer is 58;", "textual_logical_units": {"1": "Мэри увлекается садоводством.", "2": "Вчера она получила 18 новых горшечных растений из своего любимого питомника.", "3": "У нее уже есть по 2 горшка с растениями на каждом из 40 подоконников ее большого загородного дома.", "4": "Будучи щедрой, она решила, что завтра подарит друзьям и членам семьи по 1 горшку с каждого подоконника.", "5": "Сколько горшков с растениями останется у Мэри?", "6": "Вчера, до получения растений, у Мэри было 2 x 40 = 80 горшков с растениями.", "7": "Таким образом, после получения еще 18 растений, у нее стало 80 + 18 = 98 растений.", "8": "Завтра Мэри раздаст 40 x 1 = 40 горшков с растениями.", "9": "Таким образом, у нее останется 98 – 40 = 58 растений в горшках.", "10": "The answer is 58"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мэри увлекается садоводством.',\n  'Вчера она получила 18\\xa0новых горшечных растений из своего любимого питомника.',\n  'У нее уже есть по 2\\xa0горшка с растениями на каждом из 40\\xa0подоконников ее большого загородного дома.',\n  'Будучи щедрой, она решила, что завтра подарит друзьям и членам семьи по 1\\xa0горшку с каждого подоконника.']\nquestion = 'Сколько горшков с растениями останется у Мэри?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У нее уже есть по 2\\xa0горшка с растениями на каждом из 40\\xa0подоконников ее большого загородного дома.']\nnew_fact = infer_new_fact(selected) # 'Вчера, до получения растений, у Мэри было 2\\xa0x\\xa040\\xa0=\\xa080 горшков с растениями.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вчера она получила 18\\xa0новых горшечных растений из своего любимого питомника.', 'Вчера, до получения растений, у Мэри было 2\\xa0x\\xa040\\xa0=\\xa080 горшков с растениями.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, после получения еще 18\\xa0растений, у нее стало 80\\xa0+\\xa018\\xa0=\\xa098\\xa0растений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У нее уже есть по 2\\xa0горшка с растениями на каждом из 40\\xa0подоконников ее большого загородного дома.', 'Будучи щедрой, она решила, что завтра подарит друзьям и членам семьи по 1\\xa0горшку с каждого подоконника.']\nnew_fact = infer_new_fact(selected) # 'Завтра Мэри раздаст 40\\xa0x\\xa01\\xa0=\\xa040\\xa0горшков с растениями.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, после получения еще 18\\xa0растений, у нее стало 80\\xa0+\\xa018\\xa0=\\xa098\\xa0растений.', 'Завтра Мэри раздаст 40\\xa0x\\xa01\\xa0=\\xa040\\xa0горшков с растениями.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, у нее останется 98\\xa0–\\xa040\\xa0=\\xa058 растений в горшках.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько горшков с растениями останется у Мэри?', 'Таким образом, у нее останется 98\\xa0–\\xa040\\xa0=\\xa058 растений в горшках.']\nnew_fact = infer_new_fact(selected) # 'The answer is 58'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '58'"}
{"id": "GSM8K_100_37d8392682", "context": "", "options": [], "answer": "175", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [4, 5], "consequent": 10}, {"antecedents": [1, 5], "consequent": 11}, {"antecedents": [6, 9, 11], "consequent": 12}, {"antecedents": [5, 6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The second friend pressed on the doorbell 1/4 times more than Jerome's first friend, a total of 1/4*20=5 times.; int1 -> int2: Jerome's second friend pressed on the doorbell 20+5=25; int2 & sent2 -> int3: The first two friends pressed on the doorbell 25+20=45 times altogether before Jerome could open the door.; sent4 & sent5 -> int4: Jerome's third friend pressed on the doorbell 60+10=70 times before Jerome could open the door.; sent1 & sent5 -> int5: Altogether, Jerome's third and fourth friends pressed on the doorbell 70+60=130 times before Jerome could open.; int3 & int5 & sent6 -> int6: The number of doorbell rings that Jerome's friend made before Jerome could open the door is 130+45=175 times.; int6 & sent5 & sent6 -> int7: The answer is 175;", "textual_logical_units": {"1": "У Джерома есть 4 друга, которые пришли к нему в гости в один день.", "2": "Первый друг нажал на дверной звонок 20 раз, прежде чем Джером открыл дверь,", "3": "второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома.", "4": "Третий друг нажал на звонок в 10 раз больше, чем четвертый друг.", "5": "Если четвертый друг нажал на дверной звонок 60 раз,", "6": "сколько всего раз звонил дверной звонок?", "7": "Второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома, то есть больше на 1/4 x 20 = 5 раз.", "8": "Второй друг Джерома нажал на дверной звонок 20 + 5 = 25 раз.", "9": "Первые два друга в общей сложности нажали на звонок 25 + 20 = 45 раз, прежде чем Джером успел открыть дверь.", "10": "Третий друг Джерома нажал на дверной звонок 60 + 10 = 70 раз, прежде чем Джером успел открыть дверь.", "11": "В общей сложности третий и четвертый друзья Джерома нажали на дверной звонок 70 + 60 = 130 раз.", "12": "Друзья Джерома позвонили в дверь 130 + 45 = 175 раз, прежде чем Джером открыл.", "13": "The answer is 175"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Джерома есть 4\\xa0друга, которые пришли к нему в гости в один день.',\n  'Первый друг нажал на дверной звонок 20\\xa0раз, прежде чем Джером открыл дверь,',\n  'второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома.',\n  'Третий друг нажал на звонок в 10\\xa0раз больше, чем четвертый друг.',\n  'Если четвертый друг нажал на дверной звонок 60\\xa0раз,']\nquestion = 'сколько всего раз звонил дверной звонок?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Первый друг нажал на дверной звонок 20\\xa0раз, прежде чем Джером открыл дверь,', 'второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома.']\nnew_fact = infer_new_fact(selected) # 'Второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома, то есть больше на 1/4\\xa0x\\xa020\\xa0=\\xa05\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Второй друг нажал на звонок в дверь в 1/4 раза больше, чем первый друг Джерома, то есть больше на 1/4\\xa0x\\xa020\\xa0=\\xa05\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Второй друг Джерома нажал на дверной звонок 20\\xa0+\\xa05\\xa0=\\xa025\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первый друг нажал на дверной звонок 20\\xa0раз, прежде чем Джером открыл дверь,', 'Второй друг Джерома нажал на дверной звонок 20\\xa0+\\xa05\\xa0=\\xa025\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Первые два друга в общей сложности нажали на звонок 25\\xa0+\\xa020\\xa0=\\xa045\\xa0раз, прежде чем Джером успел открыть дверь.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Третий друг нажал на звонок в 10\\xa0раз больше, чем четвертый друг.', 'Если четвертый друг нажал на дверной звонок 60\\xa0раз,']\nnew_fact = infer_new_fact(selected) # 'Третий друг Джерома нажал на дверной звонок 60\\xa0+\\xa010\\xa0=\\xa070\\xa0раз, прежде чем Джером успел открыть дверь.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Джерома есть 4\\xa0друга, которые пришли к нему в гости в один день.', 'Если четвертый друг нажал на дверной звонок 60\\xa0раз,']\nnew_fact = infer_new_fact(selected) # 'В общей сложности третий и четвертый друзья Джерома нажали на дверной звонок 70\\xa0+\\xa060\\xa0=\\xa0130\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько всего раз звонил дверной звонок?', 'Первые два друга в общей сложности нажали на звонок 25\\xa0+\\xa020\\xa0=\\xa045\\xa0раз, прежде чем Джером успел открыть дверь.', 'В общей сложности третий и четвертый друзья Джерома нажали на дверной звонок 70\\xa0+\\xa060\\xa0=\\xa0130\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Друзья Джерома позвонили в дверь 130\\xa0+\\xa045\\xa0=\\xa0175\\xa0раз, прежде чем Джером открыл.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если четвертый друг нажал на дверной звонок 60\\xa0раз,', 'сколько всего раз звонил дверной звонок?', 'Друзья Джерома позвонили в дверь 130\\xa0+\\xa045\\xa0=\\xa0175\\xa0раз, прежде чем Джером открыл.']\nnew_fact = infer_new_fact(selected) # 'The answer is 175'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '175'"}
{"id": "GSM8K_101_8fb97d4dac", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [6, 7, 9], "consequent": 10}, {"antecedents": [6, 7, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Solo has to read a total of 4 + 20 + 7 + 8 = 39 pages.; int1 & sent5 -> int2: After Monday, he had a remainder of 39 - 15 = 24 pages to read.; int2 & sent6 & sent7 -> int3: To complete his reading, he must read 24/4 = 6 pages a day.; int3 & sent6 & sent7 -> int4: The answer is 6;", "textual_logical_units": {"1": "Соло должен прочитать 4 страницы из своего учебника по естествознанию,", "2": "20 страниц из учебника по обществознанию,", "3": "7 страниц из учебника по истории и", "4": "8 страниц из учебника по географии.", "5": "В понедельник Соло прочитал 15 страниц.", "6": "Если у него есть еще 4 дня, чтобы прочесть все,", "7": "сколько страниц ему нужно прочитать в среднем за 1 день?", "8": "Соло должен прочитать в общей сложности 4 + 20 + 7 + 8 = 39 страниц.", "9": "После понедельника ему оставалось прочесть 39 – 15 = 24 страницы.", "10": "Чтобы прочесть все, он должен читать 24 / 4 = 6 страниц в день.", "11": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = [ 'Соло должен прочитать 4\\xa0страницы из своего учебника по естествознанию,',\n  '20 страниц из учебника по обществознанию,',\n  '7\\xa0страниц из учебника по истории и',\n  '8\\xa0страниц из учебника по географии.',\n  'В понедельник Соло прочитал 15\\xa0страниц.',\n  'Если у него есть еще 4\\xa0дня, чтобы прочесть все,']\nquestion = 'сколько страниц ему нужно прочитать в среднем за 1\\xa0день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Соло должен прочитать 4\\xa0страницы из своего учебника по естествознанию,', '20 страниц из учебника по обществознанию,', '7\\xa0страниц из учебника по истории и', '8\\xa0страниц из учебника по географии.']\nnew_fact = infer_new_fact(selected) # 'Соло должен прочитать в общей сложности 4\\xa0+\\xa020\\xa0+\\xa07\\xa0+\\xa08\\xa0=\\xa039\\xa0страниц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник Соло прочитал 15\\xa0страниц.', 'Соло должен прочитать в общей сложности 4\\xa0+\\xa020\\xa0+\\xa07\\xa0+\\xa08\\xa0=\\xa039\\xa0страниц.']\nnew_fact = infer_new_fact(selected) # 'После понедельника ему оставалось прочесть 39\\xa0–\\xa015\\xa0=\\xa024\\xa0страницы.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у него есть еще 4\\xa0дня, чтобы прочесть все,', 'сколько страниц ему нужно прочитать в среднем за 1\\xa0день?', 'После понедельника ему оставалось прочесть 39\\xa0–\\xa015\\xa0=\\xa024\\xa0страницы.']\nnew_fact = infer_new_fact(selected) # 'Чтобы прочесть все, он должен читать 24\\xa0/\\xa04\\xa0=\\xa06\\xa0страниц в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у него есть еще 4\\xa0дня, чтобы прочесть все,', 'сколько страниц ему нужно прочитать в среднем за 1\\xa0день?', 'Чтобы прочесть все, он должен читать 24\\xa0/\\xa04\\xa0=\\xa06\\xa0страниц в день.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_102_2c71e622d6", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [0], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: John has 4 glasses of water a day on each of the 5 weekdays, for 4*5= 20 glasses.; sent0 -> int2: He has 3 glasses of water on both weekend days, for 3*2= 6 glasses of water.; int1 & int2 & sent6 -> int3: He has 20+6=26 total glasses of water in a week.; int3 & sent6 -> int4: The answer is 26;", "textual_logical_units": {"1": "Джону нравится выпивать стакан воды за завтраком, обедом и ужином.", "2": "Еще он выпивает стакан перед сном.", "3": "Джон делает это каждый будний день,", "4": "но по выходным ему нравится расслабиться и", "5": "вместо воды выпить газировку за ужином.", "6": "Сколько стаканов воды Джон выпивает в неделю?", "7": "В каждый из пяти рабочих дней Джон выпивает 4 стакана воды в день, 4 x 5 = 20 стаканов.", "8": "В оба выходных дня он выпивает 3 стакана воды, 3 x 2 = 6 стаканов воды.", "9": "Всего за неделю он выпивает 20 + 6 = 26 стаканов воды.", "10": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джону нравится выпивать стакан воды за завтраком, обедом и ужином.',\n  'Еще он выпивает стакан перед сном.',\n  'Джон делает это каждый будний день,',\n  'но по выходным ему нравится расслабиться и',\n  'вместо воды выпить газировку за ужином.']\nquestion = 'Сколько стаканов воды Джон выпивает в неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джону нравится выпивать стакан воды за завтраком, обедом и ужином.', 'Еще он выпивает стакан перед сном.', 'Джон делает это каждый будний день,']\nnew_fact = infer_new_fact(selected) # 'В каждый из пяти рабочих дней Джон выпивает 4\\xa0стакана воды в день, 4\\xa0x\\xa05\\xa0=\\xa020\\xa0стаканов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'В оба выходных дня он выпивает 3\\xa0стакана воды, 3\\xa0x\\xa02\\xa0=\\xa06\\xa0стаканов воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько стаканов воды Джон выпивает в неделю?', 'В каждый из пяти рабочих дней Джон выпивает 4\\xa0стакана воды в день, 4\\xa0x\\xa05\\xa0=\\xa020\\xa0стаканов.', 'В оба выходных дня он выпивает 3\\xa0стакана воды, 3\\xa0x\\xa02\\xa0=\\xa06\\xa0стаканов воды.']\nnew_fact = infer_new_fact(selected) # 'Всего за неделю он выпивает 20\\xa0+\\xa06\\xa0=\\xa026\\xa0стаканов воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько стаканов воды Джон выпивает в неделю?', 'Всего за неделю он выпивает 20\\xa0+\\xa06\\xa0=\\xa026\\xa0стаканов воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_103_d2f87be191", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The city will be covered in 42 / 3 = 14 intervals of 10 minutes.; int1 -> int2: Thus, it will take 14 * 10 = 140 minutes for the fog to cover the whole city.; int2 & sent3 & sent4 -> int3: The answer is 140;", "textual_logical_units": {"1": "Туман надвигается с океана и накрывает город.", "2": "Чтобы преодолеть каждые 3 мили города, нужно 10 минут.", "3": "Если расстояние между берегом океана и противоположной окраиной города составляет 42 мили,", "4": "за сколько минут тумана накроет весь город?", "5": "Туман будет накрывать город за 42 / 3 = 14 интервалов по 10 минут.", "6": "Таким образом, потребуется 14 x 10 = 140 минут, чтобы туман накрыл весь город.", "7": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = [ 'Туман надвигается с океана и накрывает город.',\n  'Чтобы преодолеть каждые 3\\xa0мили города, нужно 10\\xa0минут.',\n  'Если расстояние между берегом океана и противоположной окраиной города составляет 42\\xa0мили,']\nquestion = 'за сколько минут тумана накроет весь город?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Чтобы преодолеть каждые 3\\xa0мили города, нужно 10\\xa0минут.', 'Если расстояние между берегом океана и противоположной окраиной города составляет 42\\xa0мили,']\nnew_fact = infer_new_fact(selected) # 'Туман будет накрывать город за 42\\xa0/\\xa03\\xa0=\\xa014\\xa0интервалов по 10\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Туман будет накрывать город за 42\\xa0/\\xa03\\xa0=\\xa014\\xa0интервалов по 10\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, потребуется 14\\xa0x\\xa010\\xa0=\\xa0140\\xa0минут, чтобы туман накрыл весь город.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если расстояние между берегом океана и противоположной окраиной города составляет 42\\xa0мили,', 'за сколько минут тумана накроет весь город?', 'Таким образом, потребуется 14\\xa0x\\xa010\\xa0=\\xa0140\\xa0минут, чтобы туман накрыл весь город.']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_104_ef648a427f", "context": "", "options": [], "answer": "500", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Poppy has placed 1000 pieces / 4 = 250 pieces.; int1 & sent1 -> int2: This means there are 1000 – 250 = 750 pieces remaining.; int2 & sent3 -> int3: Her mom therefore places 750 / 3 = 250 pieces.; int2 & int3 & sent4 -> int4: This leaves a total of 750 – 250 = 500 jigsaw pieces left to be placed.; int4 & sent4 -> int5: The answer is 500;", "textual_logical_units": {"1": "Поппи собирает пазл из 1000 фрагментов.", "2": "Она собирает четверть фрагментов в рисунок,", "3": "затем ее мама собирает треть оставшихся фрагментов.", "4": "Сколько фрагментов пазла осталось собрать?", "5": "Поппи собрала 1000 фрагментов / 4 = 250 фрагментов.", "6": "Это означает, что осталось 1000 – 250 = 750 фрагментов.", "7": "Поэтому ее мама собирает 750 / 3 = 250 фрагментов.", "8": "Осталось собрать в общей сложности 750 – 250 = 500 фрагментов пазла.", "9": "The answer is 500"}, "human_translated": true, "code_input": "####\nfacts = ['Поппи собирает пазл из 1000\\xa0фрагментов.', 'Она собирает четверть фрагментов в рисунок,', 'затем ее мама собирает треть оставшихся фрагментов.']\nquestion = 'Сколько фрагментов пазла осталось собрать?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Поппи собирает пазл из 1000\\xa0фрагментов.', 'Она собирает четверть фрагментов в рисунок,']\nnew_fact = infer_new_fact(selected) # 'Поппи собрала 1000 фрагментов\\xa0/\\xa04\\xa0=\\xa0250\\xa0фрагментов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поппи собирает пазл из 1000\\xa0фрагментов.', 'Поппи собрала 1000 фрагментов\\xa0/\\xa04\\xa0=\\xa0250\\xa0фрагментов.']\nnew_fact = infer_new_fact(selected) # 'Это означает, что осталось 1000\\xa0–\\xa0250\\xa0=\\xa0750\\xa0фрагментов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['затем ее мама собирает треть оставшихся фрагментов.', 'Это означает, что осталось 1000\\xa0–\\xa0250\\xa0=\\xa0750\\xa0фрагментов.']\nnew_fact = infer_new_fact(selected) # 'Поэтому ее мама собирает 750\\xa0/\\xa03\\xa0=\\xa0250\\xa0фрагментов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько фрагментов пазла осталось собрать?', 'Это означает, что осталось 1000\\xa0–\\xa0250\\xa0=\\xa0750\\xa0фрагментов.', 'Поэтому ее мама собирает 750\\xa0/\\xa03\\xa0=\\xa0250\\xa0фрагментов.']\nnew_fact = infer_new_fact(selected) # 'Осталось собрать в общей сложности 750\\xa0–\\xa0250\\xa0=\\xa0500\\xa0фрагментов пазла.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько фрагментов пазла осталось собрать?', 'Осталось собрать в общей сложности 750\\xa0–\\xa0250\\xa0=\\xa0500\\xa0фрагментов пазла.']\nnew_fact = infer_new_fact(selected) # 'The answer is 500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '500'"}
{"id": "GSM8K_105_4f596d6c52", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Cody eats 5*3 = 15 cookies.; int1 & sent2 -> int2: Cody and Amir eat 15+5 = 20 cookies together.; int2 & sent2 -> int3: The answer is 20;", "textual_logical_units": {"1": "Коди съедает в 3 раза больше печенья, чем Амир.", "2": "Если Амир съест 5 печений, сколько печенья они съедят вместе?", "3": "Коди съедает 5 x 3 = 15 печений.", "4": "Коди и Амир вместе съедают 15 + 5 = 20 печений.", "5": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['Коди съедает в 3\\xa0раза больше печенья, чем Амир.']\nquestion = 'Если Амир съест 5\\xa0печений, сколько печенья они съедят вместе?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Коди съедает в 3\\xa0раза больше печенья, чем Амир.', 'Если Амир съест 5\\xa0печений, сколько печенья они съедят вместе?']\nnew_fact = infer_new_fact(selected) # 'Коди съедает 5\\xa0x\\xa03\\xa0=\\xa015 печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Амир съест 5\\xa0печений, сколько печенья они съедят вместе?', 'Коди съедает 5\\xa0x\\xa03\\xa0=\\xa015 печений.']\nnew_fact = infer_new_fact(selected) # 'Коди и Амир вместе съедают 15\\xa0+\\xa05\\xa0=\\xa020\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Амир съест 5\\xa0печений, сколько печенья они съедят вместе?', 'Коди и Амир вместе съедают 15\\xa0+\\xa05\\xa0=\\xa020\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_106_259951d654", "context": "", "options": [], "answer": "72", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [2, 5], "consequent": 7}, {"antecedents": [2, 5], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The walls subtract 2*1=2 inches from each dimension; int1 & sent2 -> int2: So each box has 5-2=3 inch width; int1 & sent2 -> int3: It also has a 6-2=4 inch height; int1 & sent2 -> int4: Finally, it has a 4-2=2 inch depth; int2 & int3 & int4 -> int5: So the inner volume of one box is 4*3*2=24 cubic inches; int5 & sent4 -> int6: So in total the inner volume of the 3 boxes is 3*24=72 cubic inches; sent1 & sent4 -> int7: The answer is 72;", "textual_logical_units": {"1": "У Джона есть 3 коробки.", "2": "Каждая коробка размером 5 дюймов на 6 дюймов на 4 дюйма.", "3": "Толщина стенок составляет 1 дюйм.", "4": "Каков общий внутренний объем всех 3 коробок?", "5": "Стенки вычитают 2 x 1 = 2 дюйма из каждого измерения.", "6": "Таким образом, ширина каждой коробки составляет 5 – 2 = 3 дюйма.", "7": "Высота составляет 6 – 2 = 4 дюйма.", "8": "Глубина составляет 4 – 2 = 2 дюйма.", "9": "Таким образом, внутренний объем одной коробки составляет 4 x 3 x 2 = 24 кубических дюйма.", "10": "Следовательно, общий внутренний объем 3 коробок составляет 3 x 24 = 72 кубических дюйма.", "11": "The answer is 72"}, "human_translated": true, "code_input": "####\nfacts = ['У Джона есть 3\\xa0коробки.', 'Каждая коробка размером 5\\xa0дюймов на 6\\xa0дюймов на 4\\xa0дюйма.', 'Толщина стенок составляет 1\\xa0дюйм.']\nquestion = 'Каков общий внутренний объем всех 3\\xa0коробок?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждая коробка размером 5\\xa0дюймов на 6\\xa0дюймов на 4\\xa0дюйма.', 'Толщина стенок составляет 1\\xa0дюйм.']\nnew_fact = infer_new_fact(selected) # 'Стенки вычитают 2\\xa0x\\xa01\\xa0=\\xa02\\xa0дюйма из каждого измерения.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая коробка размером 5\\xa0дюймов на 6\\xa0дюймов на 4\\xa0дюйма.', 'Стенки вычитают 2\\xa0x\\xa01\\xa0=\\xa02\\xa0дюйма из каждого измерения.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, ширина каждой коробки составляет 5\\xa0–\\xa02\\xa0=\\xa03\\xa0дюйма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая коробка размером 5\\xa0дюймов на 6\\xa0дюймов на 4\\xa0дюйма.', 'Стенки вычитают 2\\xa0x\\xa01\\xa0=\\xa02\\xa0дюйма из каждого измерения.']\nnew_fact = infer_new_fact(selected) # 'Высота составляет 6\\xa0–\\xa02\\xa0=\\xa04\\xa0дюйма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждая коробка размером 5\\xa0дюймов на 6\\xa0дюймов на 4\\xa0дюйма.', 'Стенки вычитают 2\\xa0x\\xa01\\xa0=\\xa02\\xa0дюйма из каждого измерения.']\nnew_fact = infer_new_fact(selected) # 'Глубина составляет 4\\xa0–\\xa02\\xa0=\\xa02\\xa0дюйма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, ширина каждой коробки составляет 5\\xa0–\\xa02\\xa0=\\xa03\\xa0дюйма.', 'Высота составляет 6\\xa0–\\xa02\\xa0=\\xa04\\xa0дюйма.', 'Глубина составляет 4\\xa0–\\xa02\\xa0=\\xa02\\xa0дюйма.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, внутренний объем одной коробки составляет 4\\xa0x\\xa03\\xa0x\\xa02\\xa0=\\xa024\\xa0кубических дюйма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков общий внутренний объем всех 3\\xa0коробок?', 'Таким образом, внутренний объем одной коробки составляет 4\\xa0x\\xa03\\xa0x\\xa02\\xa0=\\xa024\\xa0кубических дюйма.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, общий внутренний объем 3\\xa0коробок составляет 3\\xa0x\\xa024\\xa0=\\xa072\\xa0кубических дюйма.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Джона есть 3\\xa0коробки.', 'Каков общий внутренний объем всех 3\\xa0коробок?']\nnew_fact = infer_new_fact(selected) # 'The answer is 72'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '72'"}
{"id": "GSM8K_107_a891f712e3", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 10}, {"antecedents": [2, 8], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [6, 7, 13], "consequent": 14}, {"antecedents": [9], "consequent": 15}, {"antecedents": [10, 14, 15], "consequent": 16}, {"antecedents": [8, 9, 16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent3 -> int1: Let W be the number of episodes he watched on Wednesday.; sent2 & sent8 -> int2: After Monday, he had 7 - 1 = 6 hours of TV left.; int2 & sent2 -> int3: After Tuesday, he had 6 - 1 = 5 hours of TV left.; int3 & sent4 & sent5 -> int4: After Thursday, he had 5 - 1 - 1/2 = 3 1/2 hours of TV left.; int4 & sent6 & sent7 -> int5: After Friday, he had 3 1/2 - 2 = 1 1/2 hours of TV left.; sent9 -> int6: Each 30-minute episode is 1/2 hour.; int1 & int5 & int6 -> int7: Thus, W = 1 1/2 / 1/2 = 3 episodes.; int7 & sent8 & sent9 -> int8: The answer is 3;", "textual_logical_units": {"1": "Фрэнки каждый вечер смотрит телевизор после выполнения домашнего задания.", "2": "В понедельник и вторник он смотрел по 1-часовому эпизоду своего любимого шоу каждый вечер.", "3": "В среду он посмотрел несколько эпизодов 30-минутного шоу.", "4": "В четверг он рано закончил домашнее задание и", "5": "посмотрел 1-часовой эпизод и 30-минутное шоу.", "6": "В пятницу перед выходными он может лечь спать позже,", "7": "поэтому он посмотрел два часовых эпизода.", "8": "Если он смотрел телевизор в общей сложности 7 часов,", "9": "сколько 30-минутных эпизодов он посмотрел в среду?", "10": "Мы обозначим за W количество эпизодов, которые он посмотрел в среду.", "11": "После понедельника у него осталось 7 – 1 = 6 часов просмотра телевизора.", "12": "После вторника у него осталось 6 – 1 = 5 часов просмотра телевизора.", "13": "После четверга у него осталось 5 – 1 – 1/2 = 3 и 1/2 часа просмотра телевизора.", "14": "После пятницы у него осталось 3,5 – 2 = 1,5 часа просмотра телевизора.", "15": "Каждый 30-минутный эпизод длится 1/2 часа.", "16": "Таким образом, W = 1,5 часа = 3 эпизода.", "17": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = [ 'Фрэнки каждый вечер смотрит телевизор после выполнения домашнего задания.',\n  'В понедельник и вторник он смотрел по 1-часовому эпизоду своего любимого шоу каждый вечер.',\n  'В среду он посмотрел несколько эпизодов 30-минутного шоу.',\n  'В четверг он рано закончил домашнее задание и',\n  'посмотрел 1-часовой эпизод и 30-минутное шоу.',\n  'В пятницу перед выходными он может лечь спать позже,',\n  'поэтому он посмотрел два часовых эпизода.',\n  'Если он смотрел телевизор в общей сложности 7\\xa0часов,']\nquestion = 'сколько 30-минутных эпизодов он посмотрел в среду?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В среду он посмотрел несколько эпизодов 30-минутного шоу.']\nnew_fact = infer_new_fact(selected) # 'Мы обозначим за W количество эпизодов, которые он посмотрел в среду.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник и вторник он смотрел по 1-часовому эпизоду своего любимого шоу каждый вечер.', 'Если он смотрел телевизор в общей сложности 7\\xa0часов,']\nnew_fact = infer_new_fact(selected) # 'После понедельника у него осталось 7\\xa0–\\xa01\\xa0=\\xa06\\xa0часов просмотра телевизора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник и вторник он смотрел по 1-часовому эпизоду своего любимого шоу каждый вечер.', 'После понедельника у него осталось 7\\xa0–\\xa01\\xa0=\\xa06\\xa0часов просмотра телевизора.']\nnew_fact = infer_new_fact(selected) # 'После вторника у него осталось 6\\xa0–\\xa01\\xa0=\\xa05\\xa0часов просмотра телевизора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В четверг он рано закончил домашнее задание и', 'посмотрел 1-часовой эпизод и 30-минутное шоу.', 'После вторника у него осталось 6\\xa0–\\xa01\\xa0=\\xa05\\xa0часов просмотра телевизора.']\nnew_fact = infer_new_fact(selected) # 'После четверга у него осталось 5\\xa0–\\xa01\\xa0–\\xa01/2\\xa0=\\xa03 и 1/2\\xa0часа просмотра телевизора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В пятницу перед выходными он может лечь спать позже,', 'поэтому он посмотрел два часовых эпизода.', 'После четверга у него осталось 5\\xa0–\\xa01\\xa0–\\xa01/2\\xa0=\\xa03 и 1/2\\xa0часа просмотра телевизора.']\nnew_fact = infer_new_fact(selected) # 'После пятницы у него осталось 3,5\\xa0–\\xa02\\xa0=\\xa01,5\\xa0часа просмотра телевизора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько 30-минутных эпизодов он посмотрел в среду?']\nnew_fact = infer_new_fact(selected) # 'Каждый 30-минутный эпизод длится 1/2 часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мы обозначим за W количество эпизодов, которые он посмотрел в среду.', 'После пятницы у него осталось 3,5\\xa0–\\xa02\\xa0=\\xa01,5\\xa0часа просмотра телевизора.', 'Каждый 30-минутный эпизод длится 1/2 часа.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, W\\xa0=\\xa01,5 часа\\xa0=\\xa03\\xa0эпизода.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он смотрел телевизор в общей сложности 7\\xa0часов,', 'сколько 30-минутных эпизодов он посмотрел в среду?', 'Таким образом, W\\xa0=\\xa01,5 часа\\xa0=\\xa03\\xa0эпизода.']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_108_2f29e0b20c", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Adding the cookies Henry dropped shows he baked 110 + 5 = 115 cookies this year.; int1 & sent3 -> int2: He had cooked too many, so he must have needed 115 – 15 = 100 cookies to double last year’s amount.; int2 & sent2 & sent6 -> int3: Therefore, he must have cooked 100 / 2 = 50 cookies last year.; int3 & sent6 -> int4: The answer is 50;", "textual_logical_units": {"1": "Генри готовит печенье для местного конкурса выпечки.", "2": "Он хочет испечь в 2 раза больше печенья, чем в прошлом году.", "3": "Когда он заканчивает печь, он понимает, что на самом деле испек на 15 печений больше, чем планировал.", "4": "Он роняет 5 печений, пока раскладывает их, чтобы они остыли,", "5": "и теперь в общей сложности у него 110 печений.", "6": "Сколько печенья испек Генри в прошлом году?", "7": "Прибавив печенье, которое Генри уронил, узнаем, что в этом году он испек 110 + 5 = 115 печений.", "8": "Он приготовил больше печенья, чем было нужно, чтобы удвоить прошлогоднее количество, то есть ему нужно было приготовить 115 – 15 = 100 печений.", "9": "Значит, что в прошлом году он приготовил 100 / 2 = 50 печений.", "10": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = [ 'Генри готовит печенье для местного конкурса выпечки.',\n  'Он хочет испечь в 2\\xa0раза больше печенья, чем в прошлом году.',\n  'Когда он заканчивает печь, он понимает, что на самом деле испек на 15\\xa0печений больше, чем планировал.',\n  'Он роняет 5\\xa0печений, пока раскладывает их, чтобы они остыли,',\n  'и теперь в общей сложности у него 110\\xa0печений.']\nquestion = 'Сколько печенья испек Генри в прошлом году?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он роняет 5\\xa0печений, пока раскладывает их, чтобы они остыли,', 'и теперь в общей сложности у него 110\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Прибавив печенье, которое Генри уронил, узнаем, что в этом году он испек 110\\xa0+\\xa05\\xa0=\\xa0115\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда он заканчивает печь, он понимает, что на самом деле испек на 15\\xa0печений больше, чем планировал.', 'Прибавив печенье, которое Генри уронил, узнаем, что в этом году он испек 110\\xa0+\\xa05\\xa0=\\xa0115\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Он приготовил больше печенья, чем было нужно, чтобы удвоить прошлогоднее количество, то есть ему нужно было приготовить 115\\xa0–\\xa015\\xa0=\\xa0100\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он хочет испечь в 2\\xa0раза больше печенья, чем в прошлом году.', 'Сколько печенья испек Генри в прошлом году?', 'Он приготовил больше печенья, чем было нужно, чтобы удвоить прошлогоднее количество, то есть ему нужно было приготовить 115\\xa0–\\xa015\\xa0=\\xa0100\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Значит, что в прошлом году он приготовил 100\\xa0/\\xa02\\xa0=\\xa050\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько печенья испек Генри в прошлом году?', 'Значит, что в прошлом году он приготовил 100\\xa0/\\xa02\\xa0=\\xa050\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_109_6cc1718b43", "context": "", "options": [], "answer": "28", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Gas is $3.00 a gallon and they buy 10 gallons of gas so that's 3*10 = $30.00; sent2 & sent3 -> int2: The app is offering $0.20 cashback per gallon and they buy 10 gallons so that's .20*10 = $2.00; int1 & int2 & sent4 -> int3: They spent $30.00 on gas and their app is offering them $2.00 cashback so they spent 30-2 = $28.00 per gallon; int3 & sent3 & sent4 -> int4: The answer is 28;", "textual_logical_units": {"1": "Местная автозаправочная станция продает бензин по 3 доллара за галлон.", "2": "Компания, выпускающая приложения, предлагает кэшбэк в размере 20 долларов за галлон, если вы заправитесь на этой станции.", "3": "Если кто-то купит 10 галлонов бензина,", "4": "каковы будут его затраты на бензин после получения кэшбэка?", "5": "Бензин стоит 3 доллара за галлон, было куплено 10 галлонов, так что потрачено 3 x 10 = 30 долларов.", "6": "Приложение предлагает кэшбэк в размере 0,20 доллара за галлон, за 10 галлонов кэшбэк составит 0,20 x 10 = 2,00 доллара.", "7": "Было потрачено 30 долларов на бензин, а приложение предлагает кэшбэк в размере 2 долларов, следовательно, потрачено 30 – 2 = 28 долларов за галлон.", "8": "The answer is 28"}, "human_translated": true, "code_input": "####\nfacts = [ 'Местная автозаправочная станция продает бензин по 3\\xa0доллара за галлон.',\n  'Компания, выпускающая приложения, предлагает кэшбэк в размере 20\\xa0долларов за галлон, если вы заправитесь на этой станции.',\n  'Если кто-то купит 10\\xa0галлонов бензина,']\nquestion = 'каковы будут его затраты на бензин после получения кэшбэка?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Местная автозаправочная станция продает бензин по 3\\xa0доллара за галлон.', 'Если кто-то купит 10\\xa0галлонов бензина,']\nnew_fact = infer_new_fact(selected) # 'Бензин стоит 3\\xa0доллара за галлон, было куплено 10\\xa0галлонов, так что потрачено 3\\xa0x\\xa010\\xa0=\\xa030\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания, выпускающая приложения, предлагает кэшбэк в размере 20\\xa0долларов за галлон, если вы заправитесь на этой станции.', 'Если кто-то купит 10\\xa0галлонов бензина,']\nnew_fact = infer_new_fact(selected) # 'Приложение предлагает кэшбэк в размере 0,20\\xa0доллара за галлон, за 10\\xa0галлонов кэшбэк составит 0,20\\xa0x\\xa010\\xa0=\\xa02,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каковы будут его затраты на бензин после получения кэшбэка?', 'Бензин стоит 3\\xa0доллара за галлон, было куплено 10\\xa0галлонов, так что потрачено 3\\xa0x\\xa010\\xa0=\\xa030\\xa0долларов.', 'Приложение предлагает кэшбэк в размере 0,20\\xa0доллара за галлон, за 10\\xa0галлонов кэшбэк составит 0,20\\xa0x\\xa010\\xa0=\\xa02,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Было потрачено 30\\xa0долларов на бензин, а приложение предлагает кэшбэк в размере 2\\xa0долларов, следовательно, потрачено 30\\xa0–\\xa02\\xa0=\\xa028\\xa0долларов за галлон.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если кто-то купит 10\\xa0галлонов бензина,', 'каковы будут его затраты на бензин после получения кэшбэка?', 'Было потрачено 30\\xa0долларов на бензин, а приложение предлагает кэшбэк в размере 2\\xa0долларов, следовательно, потрачено 30\\xa0–\\xa02\\xa0=\\xa028\\xa0долларов за галлон.']\nnew_fact = infer_new_fact(selected) # 'The answer is 28'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '28'"}
{"id": "GSM8K_110_ad42f9dde0", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 1], "consequent": 11}, {"antecedents": [6, 7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Beatrice ate 48 because 24 x 2 = 48.; sent5 -> int2: Marcell ate 42 because 14 x 3 = 42; int1 & int2 -> int3: In total they ate 90 because 48 + 42 = 90; sent1 & sent1 -> int4: On average they ate 45 because 90 / 2 = 45; int4 & sent6 & sent7 -> int5: The answer is 45;", "textual_logical_units": {"1": "Марсель и Беатрис устроили соревнования, чтобы узнать, кто может съесть больше конфет Fruit Roll-Ups,", "2": "поэтому они разворачивают все, которые есть дома.", "3": "К сожалению, один из них ошибся и", "4": "Беатрис съела 2 упаковки по", "5": "24 рулона в длину, у Марселла — 3 рулона в ширину и 14 рулонов в длину.", "6": "Если они оба съели все развернутые конфеты,", "7": "по сколько конфет в среднем они съели?", "8": "Беатрис съела 48, потому что 24 x 2 = 48.", "9": "Марсель съел 42, потому что 14 x 3 = 42.", "10": "В общей сложности они съели 90, потому что 48 + 42 = 90.", "11": "В среднем они съели по 45, потому что 90 / 2 = 45.", "12": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = [ 'Марсель и Беатрис устроили соревнования, чтобы узнать, кто может съесть больше конфет Fruit Roll-Ups,',\n  'поэтому они разворачивают все, которые есть дома.',\n  'К сожалению, один из них ошибся и',\n  'Беатрис съела 2\\xa0упаковки по',\n  '24 рулона в длину, у Марселла\\xa0— 3 рулона в ширину и 14 рулонов в длину.',\n  'Если они оба съели все развернутые конфеты,']\nquestion = 'по сколько конфет в среднем они съели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Беатрис съела 2\\xa0упаковки по', '24 рулона в длину, у Марселла\\xa0— 3 рулона в ширину и 14 рулонов в длину.']\nnew_fact = infer_new_fact(selected) # 'Беатрис съела 48, потому что 24\\xa0x\\xa02\\xa0=\\xa048.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['24 рулона в длину, у Марселла\\xa0— 3 рулона в ширину и 14 рулонов в длину.']\nnew_fact = infer_new_fact(selected) # 'Марсель съел 42, потому что 14\\xa0x\\xa03 = 42.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Беатрис съела 48, потому что 24\\xa0x\\xa02\\xa0=\\xa048.', 'Марсель съел 42, потому что 14\\xa0x\\xa03 = 42.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности они съели 90, потому что 48\\xa0+\\xa042\\xa0=\\xa090.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марсель и Беатрис устроили соревнования, чтобы узнать, кто может съесть больше конфет Fruit Roll-Ups,', 'Марсель и Беатрис устроили соревнования, чтобы узнать, кто может съесть больше конфет Fruit Roll-Ups,']\nnew_fact = infer_new_fact(selected) # 'В среднем они съели по\\xa045, потому что 90\\xa0/\\xa02\\xa0=\\xa045.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если они оба съели все развернутые конфеты,', 'по сколько конфет в среднем они съели?', 'В среднем они съели по\\xa045, потому что 90\\xa0/\\xa02\\xa0=\\xa045.']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_111_903aa75983", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: It took Julia 64 seconds to reach shore, so it took 64 / 16 = 4 times rowing 20 feet to reach the shore.; int1 -> int2: Thus, she had to row 20 * 4 = 80 feet back to shore.; int2 & sent2 -> int3: In those 80 feet, she took on 2 liters of water 80 / 10 = 8 times.; int3 & sent2 -> int4: Thus, the boat had taken on 8 * 2 = 16 liters of water by the time Julia reached the shore.; int4 & sent5 -> int5: The answer is 16;", "textual_logical_units": {"1": "Лодка Джулии дала течь, пока она плыла по озеру.", "2": "За каждые 10 футов, пока она возвращалась к берегу, лодка набирала 2 литра воды.", "3": "Ей потребовалось 16 секунд, чтобы преодолеть 20 футов.", "4": "До берега она добралась за 64 секунды.", "5": "Сколько воды набрала лодка, когда Джулия достигла берега?", "6": "Джулии потребовалось 64 секунды, чтобы добраться до берега, это 64 / 16 = 4 раза по 20 футов.", "7": "Таким образом, ей пришлось преодолеть 20 x 4 = 80 футов, чтобы достичь берега.", "8": "За эти 80 футов лодка набирала по 2 литра воды 80 / 10 = 8 раз.", "9": "Таким образом, к моменту выхода Джулии на берег лодка набрала 8 x 2 = 16 литров воды.", "10": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = [ 'Лодка Джулии дала течь, пока она плыла по озеру.',\n  'За каждые 10\\xa0футов, пока она возвращалась к берегу, лодка набирала 2\\xa0литра воды.',\n  'Ей потребовалось 16\\xa0секунд, чтобы преодолеть 20\\xa0футов.',\n  'До берега она добралась за 64\\xa0секунды.']\nquestion = 'Сколько воды набрала лодка, когда Джулия достигла берега?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ей потребовалось 16\\xa0секунд, чтобы преодолеть 20\\xa0футов.', 'До берега она добралась за 64\\xa0секунды.']\nnew_fact = infer_new_fact(selected) # 'Джулии потребовалось 64\\xa0секунды, чтобы добраться до берега, это 64\\xa0/\\xa016\\xa0=\\xa04\\xa0раза по 20\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джулии потребовалось 64\\xa0секунды, чтобы добраться до берега, это 64\\xa0/\\xa016\\xa0=\\xa04\\xa0раза по 20\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, ей пришлось преодолеть 20\\xa0x\\xa04\\xa0=\\xa080\\xa0футов, чтобы достичь берега.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждые 10\\xa0футов, пока она возвращалась к берегу, лодка набирала 2\\xa0литра воды.', 'Таким образом, ей пришлось преодолеть 20\\xa0x\\xa04\\xa0=\\xa080\\xa0футов, чтобы достичь берега.']\nnew_fact = infer_new_fact(selected) # 'За эти 80\\xa0футов лодка набирала по 2\\xa0литра воды 80\\xa0/\\xa010\\xa0=\\xa08\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждые 10\\xa0футов, пока она возвращалась к берегу, лодка набирала 2\\xa0литра воды.', 'За эти 80\\xa0футов лодка набирала по 2\\xa0литра воды 80\\xa0/\\xa010\\xa0=\\xa08\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, к моменту выхода Джулии на берег лодка набрала 8\\xa0x\\xa02\\xa0=\\xa016\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько воды набрала лодка, когда Джулия достигла берега?', 'Таким образом, к моменту выхода Джулии на берег лодка набрала 8\\xa0x\\xa02\\xa0=\\xa016\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_112_7855d39ca2", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: In one day, there are a total of 4 teachers * 2 lessons each = 8 lessons.; int1 & sent4 -> int2: The whiteboard is therefore cleaned 8 lessons * 3 cleans per lesson = 24 times.; int2 & sent4 & sent5 -> int3: The answer is 24;", "textual_logical_units": {"1": "В классе есть белая доска, которой пользуются 4 учителя, которые по очереди приходят в класс.", "2": "Каждый учитель проводит 2 урока в день и", "3": "использует доску на каждом уроке.", "4": "Если доску моют 3 раза за урок,", "5": "сколько раз в день моют доску?", "6": "В один день в общей сложности 4 преподавателя проводят x 2 урока = 8 уроков.", "7": "Таким образом, белую доску моют на протяжении 8 уроков x 3 раза за урок = 24 раза.", "8": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = [ 'В классе есть белая доска, которой пользуются 4\\xa0учителя, которые по очереди приходят в класс.',\n  'Каждый учитель проводит 2\\xa0урока в день и',\n  'использует доску на каждом уроке.',\n  'Если доску моют 3\\xa0раза за урок,']\nquestion = 'сколько раз в день моют доску?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В классе есть белая доска, которой пользуются 4\\xa0учителя, которые по очереди приходят в класс.', 'Каждый учитель проводит 2\\xa0урока в день и']\nnew_fact = infer_new_fact(selected) # 'В один день в общей сложности 4 преподавателя проводят\\xa0x\\xa02\\xa0урока\\xa0=\\xa08\\xa0уроков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если доску моют 3\\xa0раза за урок,', 'В один день в общей сложности 4 преподавателя проводят\\xa0x\\xa02\\xa0урока\\xa0=\\xa08\\xa0уроков.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, белую доску моют на протяжении 8\\xa0уроков\\xa0x\\xa03 раза за урок\\xa0=\\xa024\\xa0раза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если доску моют 3\\xa0раза за урок,', 'сколько раз в день моют доску?', 'Таким образом, белую доску моют на протяжении 8\\xa0уроков\\xa0x\\xa03 раза за урок\\xa0=\\xa024\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_113_717303c026", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Ryan plants 2*15=30 flowers in total.; int1 & sent2 -> int2: Given 5 plants did not grow, he has 30-5=25 flowers in his garden.; int2 & sent2 -> int3: The answer is 25;", "textual_logical_units": {"1": "Райан сажает в своем саду 2 цветка в день.", "2": "Сколько у него будет цветов через 15 дней, если 5 цветов не выросли?", "3": "Всего Райан посадит 2 x 15 = 30 цветов.", "4": "Если 5 цветов не выросли, у него в саду будет 30 – 5 = 25 цветов.", "5": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = ['Райан сажает в своем саду 2\\xa0цветка в день.']\nquestion = 'Сколько у него будет цветов через 15\\xa0дней, если 5\\xa0цветов не выросли?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Райан сажает в своем саду 2\\xa0цветка в день.', 'Сколько у него будет цветов через 15\\xa0дней, если 5\\xa0цветов не выросли?']\nnew_fact = infer_new_fact(selected) # 'Всего Райан посадит 2\\xa0x\\xa015\\xa0=\\xa030\\xa0цветов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у него будет цветов через 15\\xa0дней, если 5\\xa0цветов не выросли?', 'Всего Райан посадит 2\\xa0x\\xa015\\xa0=\\xa030\\xa0цветов.']\nnew_fact = infer_new_fact(selected) # 'Если 5\\xa0цветов не выросли, у него в саду будет 30\\xa0–\\xa05\\xa0=\\xa025\\xa0цветов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у него будет цветов через 15\\xa0дней, если 5\\xa0цветов не выросли?', 'Если 5\\xa0цветов не выросли, у него в саду будет 30\\xa0–\\xa05\\xa0=\\xa025\\xa0цветов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_114_3b9184bde6", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Since Jamal's phone can hold 1800 photos, which is 6 times more than Brittany's phone can hold, Brittany's phone can hold `1800/6=300 photographs.; int1 & sent2 -> int2: Since Brittany's phone can hold 50 times more photos than the number of birds in Jamal's photograph, then 300/50=6 ducks can be seen in Jamal's photograph of ducks at the zoo.; int2 & sent3 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "Телефон Джамала вмещает в 6 раз больше фотографий, чем телефон Бриттани.", "2": "Максимальное количество фотографий, которые может хранить телефон Бриттани, в 50 раз больше, чем количество птиц на фотографии уток в зоопарке, сделанной Джамалом.", "3": "Если телефон Джамала вмещает 1800 фотографий,", "4": "сколько уток можно увидеть на фотографии Джамала из зоопарка?", "5": "Поскольку телефон Джамала вмещает 1800 фотографий, что в 6 раз больше, чем телефон Бриттани, делаем вывод, что телефон Бриттани вмещает 1800 / 6 = 300 фотографий.", "6": "Поскольку в телефоне Бриттани в 50 раз больше фотографий, чем птиц на фотографии Джамала из зоопарка, то на этой фотографии можно увидеть 300 / 50 = 6 уток.", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = [ 'Телефон Джамала вмещает в 6\\xa0раз больше фотографий, чем телефон Бриттани.',\n  'Максимальное количество фотографий, которые может хранить телефон Бриттани, в 50\\xa0раз больше, чем количество птиц на фотографии уток в зоопарке, '\n  'сделанной Джамалом.',\n  'Если телефон Джамала вмещает 1800\\xa0фотографий,']\nquestion = 'сколько уток можно увидеть на фотографии Джамала из зоопарка?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Телефон Джамала вмещает в 6\\xa0раз больше фотографий, чем телефон Бриттани.', 'Если телефон Джамала вмещает 1800\\xa0фотографий,']\nnew_fact = infer_new_fact(selected) # 'Поскольку телефон Джамала вмещает 1800\\xa0фотографий, что в 6\\xa0раз больше, чем телефон Бриттани, делаем вывод, что телефон Бриттани вмещает 1800\\xa0/\\xa06\\xa0=\\xa0300\\xa0фотографий.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Максимальное количество фотографий, которые может хранить телефон Бриттани, в 50\\xa0раз больше, чем количество птиц на фотографии уток в зоопарке, сделанной Джамалом.', 'Поскольку телефон Джамала вмещает 1800\\xa0фотографий, что в 6\\xa0раз больше, чем телефон Бриттани, делаем вывод, что телефон Бриттани вмещает 1800\\xa0/\\xa06\\xa0=\\xa0300\\xa0фотографий.']\nnew_fact = infer_new_fact(selected) # 'Поскольку в телефоне Бриттани в 50\\xa0раз больше фотографий, чем птиц на фотографии Джамала из зоопарка, то на этой фотографии можно увидеть 300\\xa0/\\xa050\\xa0=\\xa06\\xa0уток.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если телефон Джамала вмещает 1800\\xa0фотографий,', 'сколько уток можно увидеть на фотографии Джамала из зоопарка?', 'Поскольку в телефоне Бриттани в 50\\xa0раз больше фотографий, чем птиц на фотографии Джамала из зоопарка, то на этой фотографии можно увидеть 300\\xa0/\\xa050\\xa0=\\xa06\\xa0уток.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_115_f0a09552a7", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: She bought the 2 x 4s for $100 because 10 x 10 = 100; sent4 -> int2: She bought the 4 x 4s for 80 because 5 x 16 = 80; int1 & int2 -> int3: She paid $180 for the lumber because 100 + 80 = 180; int3 & sent1 -> int4: The same number now sells for $270 because 180 x 1.5 = 270; int3 & sent1 -> int5: She made $90 in profit because 270 - 180 = 90; int5 & sent5 & sent6 -> int6: The answer is 90;", "textual_logical_units": {"1": "Саша замечает, что за последние несколько месяцев после покупки пиломатериалов цены на них выросли на 50 %.", "2": "Поскольку у нее остались излишки материалов, она решает продать их.", "3": "У нее осталось 10 досок размером 2 x 4 x 10, каждая из которых обошлась ей в 10 долларов.", "4": "Также у нее осталось 5 досок размером 4 x 4 x 10, которые она купила по 16 долларов за каждую.", "5": "Если она продаст их все,", "6": "какую прибыль она получит?", "7": "Она купила доски размером 2 x 4 за 100 долларов, потому что 10 x 10 = 100.", "8": "Доски размером 4 x 4 она купила за 80 долларов, потому что 5 x 16 = 80.", "9": "Она заплатила 180 долларов за пиломатериалы, потому что 100 + 80 = 180.", "10": "То же количество теперь продается за 270 долларов, потому что 180 x 1,5 = 270.", "11": "Она получит 90 долларов прибыли, потому что 270 – 180 = 90.", "12": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = [ 'Саша замечает, что за последние несколько месяцев после покупки пиломатериалов цены на них выросли на 50\\xa0%.',\n  'Поскольку у нее остались излишки материалов, она решает продать их.',\n  'У нее осталось 10\\xa0досок размером 2\\xa0x\\xa04\\xa0x\\xa010, каждая из которых обошлась ей в 10\\xa0долларов.',\n  'Также у нее осталось\\xa05\\xa0досок размером 4\\xa0x\\xa04\\xa0x\\xa010, которые она купила по 16\\xa0долларов за каждую.',\n  'Если она продаст их все,']\nquestion = 'какую прибыль она получит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У нее осталось 10\\xa0досок размером 2\\xa0x\\xa04\\xa0x\\xa010, каждая из которых обошлась ей в 10\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Она купила доски размером 2\\xa0x\\xa04 за 100\\xa0долларов, потому что 10\\xa0x\\xa010\\xa0=\\xa0100.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Также у нее осталось\\xa05\\xa0досок размером 4\\xa0x\\xa04\\xa0x\\xa010, которые она купила по 16\\xa0долларов за каждую.']\nnew_fact = infer_new_fact(selected) # 'Доски размером 4\\xa0x\\xa04 она купила за 80\\xa0долларов, потому что 5\\xa0x\\xa016\\xa0=\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она купила доски размером 2\\xa0x\\xa04 за 100\\xa0долларов, потому что 10\\xa0x\\xa010\\xa0=\\xa0100.', 'Доски размером 4\\xa0x\\xa04 она купила за 80\\xa0долларов, потому что 5\\xa0x\\xa016\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'Она заплатила 180\\xa0долларов за пиломатериалы, потому что 100\\xa0+\\xa080\\xa0=\\xa0180.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Саша замечает, что за последние несколько месяцев после покупки пиломатериалов цены на них выросли на 50\\xa0%.', 'Она заплатила 180\\xa0долларов за пиломатериалы, потому что 100\\xa0+\\xa080\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'То же количество теперь продается за 270\\xa0долларов, потому что 180\\xa0x\\xa01,5\\xa0=\\xa0270.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Саша замечает, что за последние несколько месяцев после покупки пиломатериалов цены на них выросли на 50\\xa0%.', 'Она заплатила 180\\xa0долларов за пиломатериалы, потому что 100\\xa0+\\xa080\\xa0=\\xa0180.']\nnew_fact = infer_new_fact(selected) # 'Она получит 90\\xa0долларов прибыли, потому что 270\\xa0–\\xa0180\\xa0=\\xa090.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если она продаст их все,', 'какую прибыль она получит?', 'Она получит 90\\xa0долларов прибыли, потому что 270\\xa0–\\xa0180\\xa0=\\xa090.']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_116_00e43ffc70", "context": "", "options": [], "answer": "42", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 2, 3, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total ratio representing the ingredients she used to make the coffee is 7+13 = 20; int1 & sent1 & sent2 & sent3 -> int2: Since the fraction representing the number of teaspoons she used is 7/20, she used 7/20*120 = 42; int2 & sent3 & sent4 -> int3: The answer is 42;", "textual_logical_units": {"1": "Кэти готовит кофе с сахаром в чайных ложках и", "2": "используя чашки воды в соотношении 7:13.", "3": "Если она использовала в общей сложности 120 чайных ложек сахара и чашек воды,", "4": "подсчитайте количество чайных ложек сахара, которое она использовала.", "5": "Общее соотношение ингредиентов, которые она использовала для приготовления кофе, составляет 7 + 13 = 20.", "6": "Поскольку количество использованных ею чайных ложек составляет 7/20, она использовала 7 / 20 x 120 = 42.", "7": "The answer is 42"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кэти готовит кофе с сахаром в чайных ложках и',\n  'используя чашки воды в соотношении 7:13.',\n  'Если она использовала в общей сложности 120\\xa0чайных ложек сахара и чашек воды,']\nquestion = 'подсчитайте количество чайных ложек сахара, которое она использовала.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Кэти готовит кофе с сахаром в чайных ложках и', 'используя чашки воды в соотношении 7:13.']\nnew_fact = infer_new_fact(selected) # 'Общее соотношение ингредиентов, которые она использовала для приготовления кофе, составляет 7\\xa0+\\xa013\\xa0=\\xa020.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кэти готовит кофе с сахаром в чайных ложках и', 'используя чашки воды в соотношении 7:13.', 'Если она использовала в общей сложности 120\\xa0чайных ложек сахара и чашек воды,', 'Общее соотношение ингредиентов, которые она использовала для приготовления кофе, составляет 7\\xa0+\\xa013\\xa0=\\xa020.']\nnew_fact = infer_new_fact(selected) # 'Поскольку количество использованных ею чайных ложек составляет 7/20, она использовала 7\\xa0/\\xa020\\xa0x\\xa0120\\xa0=\\xa042.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если она использовала в общей сложности 120\\xa0чайных ложек сахара и чашек воды,', 'подсчитайте количество чайных ложек сахара, которое она использовала.', 'Поскольку количество использованных ею чайных ложек составляет 7/20, она использовала 7\\xa0/\\xa020\\xa0x\\xa0120\\xa0=\\xa042.']\nnew_fact = infer_new_fact(selected) # 'The answer is 42'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '42'"}
{"id": "GSM8K_117_ccb257452c", "context": "", "options": [], "answer": "360", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He bought 3*2=6 pairs of shoes; int1 & sent2 -> int2: So he spent 60*6=$360; int2 & sent3 -> int3: The answer is 360;", "textual_logical_units": {"1": "Джон покупает по 2 пары обуви для каждого из своих 3 детей.", "2": "Они стоят 60 долларов за штуку.", "3": "Сколько он заплатил?", "4": "Он купил 3 x 2 = 6 пар обуви.", "5": "Таким образом, он потратил 60 x 6 = 360 долларов.", "6": "The answer is 360"}, "human_translated": true, "code_input": "####\nfacts = ['Джон покупает по 2\\xa0пары обуви для каждого из своих 3\\xa0детей.', 'Они стоят 60\\xa0долларов за штуку.']\nquestion = 'Сколько он заплатил?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джон покупает по 2\\xa0пары обуви для каждого из своих 3\\xa0детей.']\nnew_fact = infer_new_fact(selected) # 'Он купил 3\\xa0x\\xa02\\xa0=\\xa06\\xa0пар обуви.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Они стоят 60\\xa0долларов за штуку.', 'Он купил 3\\xa0x\\xa02\\xa0=\\xa06\\xa0пар обуви.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, он потратил 60\\xa0x\\xa06\\xa0=\\xa0360\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он заплатил?', 'Таким образом, он потратил 60\\xa0x\\xa06\\xa0=\\xa0360\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '360'"}
{"id": "GSM8K_118_0b25189ffa", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [5, 6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On the first day, 2*5 = 10 vehicles were Imported,; int1 & sent4 -> int2: On the next day, the number of vehicles imported through the port is 30-10 = 20 vehicles; int2 & sent2 -> int3: If each container has 5 vehicles, the number is 20/5 = 4 containers.; int3 & sent5 & sent6 -> int4: The answer is 4;", "textual_logical_units": {"1": "Сотрудник таможни в главном порту во время таможенного оформления товаров насчитал 2 контейнера с импортированными транспортными средствами,", "2": "в каждом из них по 5 автомобилей.", "3": "На следующий день было доставлено больше контейнеров,", "4": "а общее количество автомобилей в порту возросло до 30.", "5": "Рассчитайте количество контейнеров, которые были импортированы во 2 день,", "6": "при условии, что все контейнеры содержат 5 автомобилей.", "7": "В первый день было импортировано 2 x 5 = 10 автомобилей.", "8": "На следующий день количество автомобилей, ввезенных через порт, составляет 30 – 10 = 20.", "9": "Если в каждом контейнере 5 автомобилей, то количество контейнеров равно 20 / 5 = 4.", "10": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сотрудник таможни в главном порту во время таможенного оформления товаров насчитал 2\\xa0контейнера с импортированными транспортными средствами,',\n  'в каждом из них по 5\\xa0автомобилей.',\n  'На следующий день было доставлено больше контейнеров,',\n  'а общее количество автомобилей в порту возросло до\\xa030.',\n  'Рассчитайте количество контейнеров, которые были импортированы во 2\\xa0день,']\nquestion = 'при условии, что все контейнеры содержат 5\\xa0автомобилей.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сотрудник таможни в главном порту во время таможенного оформления товаров насчитал 2\\xa0контейнера с импортированными транспортными средствами,', 'в каждом из них по 5\\xa0автомобилей.']\nnew_fact = infer_new_fact(selected) # 'В первый день было импортировано 2\\xa0x\\xa05\\xa0= 10 автомобилей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а общее количество автомобилей в порту возросло до\\xa030.', 'В первый день было импортировано 2\\xa0x\\xa05\\xa0= 10 автомобилей.']\nnew_fact = infer_new_fact(selected) # 'На следующий день количество автомобилей, ввезенных через порт, составляет 30\\xa0–\\xa010\\xa0=\\xa020.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в каждом из них по 5\\xa0автомобилей.', 'На следующий день количество автомобилей, ввезенных через порт, составляет 30\\xa0–\\xa010\\xa0=\\xa020.']\nnew_fact = infer_new_fact(selected) # 'Если в каждом контейнере 5\\xa0автомобилей, то количество контейнеров равно 20\\xa0/\\xa05\\xa0=\\xa04.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте количество контейнеров, которые были импортированы во 2\\xa0день,', 'при условии, что все контейнеры содержат 5\\xa0автомобилей.', 'Если в каждом контейнере 5\\xa0автомобилей, то количество контейнеров равно 20\\xa0/\\xa05\\xa0=\\xa04.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_119_4b61230615", "context": "", "options": [], "answer": "95200", "reasoning_graph_edges": [{"antecedents": [3, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}, {"antecedents": [4, 5, 6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent3 & sent5 -> int1: Since Adrien was earning $40000 four years ago and received a raise that makes him earn 40% more, he received a 40/100*$40000 = $16000 raise.; int1 & sent5 -> int2: In total, four years later, Adrien's salary is $40000+$16000 = $56000; sent1 & sent4 -> int3: If four years ago Adrien was earning $40000, and Lylah's salary was 30% less, then Lylah's salary was 30/100*$40000= $12000 less than Adrien's salary four years ago.; int3 -> int4: Four years ago, Lylah was earning $40000-$12000 =$28000; int4 & sent3 & sent4 -> int5: After receiving a 40% raise, Lylah earns 40/100*$28000 = $11200; int4 & int5 -> int6: In total, four years later, Lylah earns $28000+$11200= $39200.; int2 & int6 -> int7: The total amount of salary the two earn four years later is $39200+$56000 = $95200; int7 & sent4 & sent5 & sent6 -> int8: The answer is 95200;", "textual_logical_units": {"1": "Общая зарплата Адриена была на 30 % выше зарплаты Лайлы.", "2": "4 года спустя его зарплата выросла,", "3": "и он зарабатывал на 40 % больше, чем 4 года назад.", "4": "Если зарплата Адриена и Лайлы увеличится одновременно,", "5": "а Адриен зарабатывал 40 000 долларов 4 года назад,", "6": "рассчитайте общую зарплату, которую они получают 4 года спустя?", "7": "Поскольку 4 года назад Адриен зарабатывал 40 000 долларов и получил прибавку, благодаря которой он стал зарабатывать на 40 % больше, прибавка составляла 40 / 100 x 40 000 долларов = 16 000 долларов.", "8": "В общей сложности 4 года спустя зарплата Адриена составляет 40 000 + 16 000 долларов = 56 000 долларов.", "9": "Если 4 года назад Адриен зарабатывал 40 000 долларов, а зарплата Лайлы была на 30 % меньше, то зарплата Лайлы была на 30 / 100 x 40 000 долларов = 12 000 долларов меньше зарплаты Адриена.", "10": "4 года назад Лайла зарабатывала 40 000 – 12 000 долларов = 28 000 долларов.", "11": "Получив повышение на 40 %, Лайла зарабатывает 40 / 100 x 28 000 долларов = 11 200 долларов.", "12": "В общей сложности четыре года спустя Лайла зарабатывает 28 000 долларов + 11 200 долларов = 39 200 долларов.", "13": "Общая сумма зарплаты, которую они получают 4 года спустя, составляет 39 200 долларов + 56 000 долларов = 95 200 долларов.", "14": "The answer is 95200"}, "human_translated": true, "code_input": "####\nfacts = [ 'Общая зарплата Адриена была на 30\\xa0% выше зарплаты Лайлы.',\n  '4\\xa0года спустя его зарплата выросла,',\n  'и он зарабатывал на 40\\xa0% больше, чем 4\\xa0года назад.',\n  'Если зарплата Адриена и Лайлы увеличится одновременно,',\n  'а Адриен зарабатывал 40\\xa0000\\xa0долларов 4\\xa0года назад,']\nquestion = 'рассчитайте общую зарплату, которую они получают\\xa04\\xa0года спустя?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и он зарабатывал на 40\\xa0% больше, чем 4\\xa0года назад.', 'а Адриен зарабатывал 40\\xa0000\\xa0долларов 4\\xa0года назад,']\nnew_fact = infer_new_fact(selected) # 'Поскольку 4\\xa0года назад Адриен зарабатывал 40\\xa0000 долларов и получил прибавку, благодаря которой он стал зарабатывать на 40\\xa0% больше, прибавка составляла 40\\xa0/\\xa0100\\xa0x\\xa040\\xa0000\\xa0долларов\\xa0=\\xa016\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Адриен зарабатывал 40\\xa0000\\xa0долларов 4\\xa0года назад,', 'Поскольку 4\\xa0года назад Адриен зарабатывал 40\\xa0000 долларов и получил прибавку, благодаря которой он стал зарабатывать на 40\\xa0% больше, прибавка составляла 40\\xa0/\\xa0100\\xa0x\\xa040\\xa0000\\xa0долларов\\xa0=\\xa016\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности 4\\xa0года спустя зарплата Адриена составляет 40\\xa0000\\xa0+\\xa016\\xa0000\\xa0долларов\\xa0=\\xa056\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая зарплата Адриена была на 30\\xa0% выше зарплаты Лайлы.', 'Если зарплата Адриена и Лайлы увеличится одновременно,']\nnew_fact = infer_new_fact(selected) # 'Если 4\\xa0года назад Адриен зарабатывал 40\\xa0000 долларов, а зарплата Лайлы была на 30\\xa0% меньше, то зарплата Лайлы была на 30\\xa0/\\xa0100\\xa0x\\xa040\\xa0000\\xa0долларов\\xa0=\\xa012\\xa0000\\xa0долларов меньше зарплаты Адриена.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 4\\xa0года назад Адриен зарабатывал 40\\xa0000 долларов, а зарплата Лайлы была на 30\\xa0% меньше, то зарплата Лайлы была на 30\\xa0/\\xa0100\\xa0x\\xa040\\xa0000\\xa0долларов\\xa0=\\xa012\\xa0000\\xa0долларов меньше зарплаты Адриена.']\nnew_fact = infer_new_fact(selected) # '4\\xa0года назад Лайла зарабатывала 40\\xa0000\\xa0–\\xa012\\xa0000\\xa0долларов\\xa0=\\xa028\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и он зарабатывал на 40\\xa0% больше, чем 4\\xa0года назад.', 'Если зарплата Адриена и Лайлы увеличится одновременно,', '4\\xa0года назад Лайла зарабатывала 40\\xa0000\\xa0–\\xa012\\xa0000\\xa0долларов\\xa0=\\xa028\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Получив повышение на 40\\xa0%, Лайла зарабатывает 40\\xa0/\\xa0100\\xa0x\\xa028\\xa0000\\xa0долларов\\xa0=\\xa011\\xa0200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4\\xa0года назад Лайла зарабатывала 40\\xa0000\\xa0–\\xa012\\xa0000\\xa0долларов\\xa0=\\xa028\\xa0000\\xa0долларов.', 'Получив повышение на 40\\xa0%, Лайла зарабатывает 40\\xa0/\\xa0100\\xa0x\\xa028\\xa0000\\xa0долларов\\xa0=\\xa011\\xa0200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности четыре года спустя Лайла зарабатывает 28\\xa0000\\xa0долларов\\xa0+\\xa011\\xa0200\\xa0долларов\\xa0=\\xa039\\xa0200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В общей сложности 4\\xa0года спустя зарплата Адриена составляет 40\\xa0000\\xa0+\\xa016\\xa0000\\xa0долларов\\xa0=\\xa056\\xa0000\\xa0долларов.', 'В общей сложности четыре года спустя Лайла зарабатывает 28\\xa0000\\xa0долларов\\xa0+\\xa011\\xa0200\\xa0долларов\\xa0=\\xa039\\xa0200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Общая сумма зарплаты, которую они получают 4\\xa0года спустя, составляет 39\\xa0200\\xa0долларов\\xa0+\\xa056\\xa0000\\xa0долларов\\xa0=\\xa095\\xa0200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если зарплата Адриена и Лайлы увеличится одновременно,', 'а Адриен зарабатывал 40\\xa0000\\xa0долларов 4\\xa0года назад,', 'рассчитайте общую зарплату, которую они получают\\xa04\\xa0года спустя?', 'Общая сумма зарплаты, которую они получают 4\\xa0года спустя, составляет 39\\xa0200\\xa0долларов\\xa0+\\xa056\\xa0000\\xa0долларов\\xa0=\\xa095\\xa0200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 95200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '95200'"}
{"id": "GSM8K_120_d4bf9a05d0", "context": "", "options": [], "answer": "240", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [2, 3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Miguel uses 30 x 2 = 60 sheets of paper every week.; int1 & sent3 -> int2: Therefore, he uses 60 x 4 = 240 sheets of paper every month.; int2 & sent2 & sent3 -> int3: The answer is 240;", "textual_logical_units": {"1": "Для рисования Мигель использует 2 стопки бумаги в неделю.", "2": "Если в стопке 30 листов бумаги,", "3": "сколько листов он использует каждый месяц?", "4": "Мигель использует 30 x 2 = 60 листов бумаги каждую неделю.", "5": "Следовательно, он использует 60 x 4 = 240 листов бумаги каждый месяц.", "6": "The answer is 240"}, "human_translated": true, "code_input": "####\nfacts = ['Для рисования Мигель использует 2\\xa0стопки бумаги в неделю.', 'Если в стопке 30\\xa0листов бумаги,']\nquestion = 'сколько листов он использует каждый месяц?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Для рисования Мигель использует 2\\xa0стопки бумаги в неделю.', 'Если в стопке 30\\xa0листов бумаги,']\nnew_fact = infer_new_fact(selected) # 'Мигель использует 30\\xa0x\\xa02\\xa0=\\xa060\\xa0листов бумаги каждую неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько листов он использует каждый месяц?', 'Мигель использует 30\\xa0x\\xa02\\xa0=\\xa060\\xa0листов бумаги каждую неделю.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он использует 60\\xa0x\\xa04\\xa0=\\xa0240\\xa0листов бумаги каждый месяц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в стопке 30\\xa0листов бумаги,', 'сколько листов он использует каждый месяц?', 'Следовательно, он использует 60\\xa0x\\xa04\\xa0=\\xa0240\\xa0листов бумаги каждый месяц.']\nnew_fact = infer_new_fact(selected) # 'The answer is 240'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '240'"}
{"id": "GSM8K_121_9198700887", "context": "", "options": [], "answer": "27", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 4], "consequent": 7}, {"antecedents": [2, 6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Kael brought 5 x 2 = 10 apples.; sent2 & sent4 -> int2: And he also brought 8 / 2 = 4 oranges.; int1 & int2 & sent2 -> int3: Therefore, Kael and Morisette brought 5 + 10 + 8 + 4 = 27 fruits in total.; int3 & sent5 -> int4: The answer is 27;", "textual_logical_units": {"1": "Моризетт и Кейла попросили принести фрукты.", "2": "Моризетт принесла 5 яблок и 8 апельсинов,", "3": "в то время как Кейл принес вдвое больше яблок и", "4": "в два раза меньше апельсинов, чем Моризетт.", "5": "Сколько у них всего фруктов?", "6": "Кейл принес 5 x 2 = 10 яблок.", "7": "Еще он принес 8 / 2 = 4 апельсина.", "8": "Значит, Кейл и Моризетт принесли в общей сложности 5 + 10 + 8 + 4 = 27 фруктов.", "9": "The answer is 27"}, "human_translated": true, "code_input": "####\nfacts = [ 'Моризетт и Кейла попросили принести фрукты.',\n  'Моризетт принесла 5\\xa0яблок и 8\\xa0апельсинов,',\n  'в то время как Кейл принес вдвое больше яблок и',\n  'в два раза меньше апельсинов, чем Моризетт.']\nquestion = 'Сколько у них всего фруктов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Моризетт принесла 5\\xa0яблок и 8\\xa0апельсинов,', 'в то время как Кейл принес вдвое больше яблок и']\nnew_fact = infer_new_fact(selected) # 'Кейл принес 5\\xa0x\\xa02\\xa0=\\xa010\\xa0яблок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Моризетт принесла 5\\xa0яблок и 8\\xa0апельсинов,', 'в два раза меньше апельсинов, чем Моризетт.']\nnew_fact = infer_new_fact(selected) # 'Еще он принес 8\\xa0/\\xa02\\xa0=\\xa04\\xa0апельсина.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Моризетт принесла 5\\xa0яблок и 8\\xa0апельсинов,', 'Кейл принес 5\\xa0x\\xa02\\xa0=\\xa010\\xa0яблок.', 'Еще он принес 8\\xa0/\\xa02\\xa0=\\xa04\\xa0апельсина.']\nnew_fact = infer_new_fact(selected) # 'Значит, Кейл и Моризетт принесли в общей сложности 5\\xa0+\\xa010\\xa0+\\xa08\\xa0+\\xa04\\xa0=\\xa027\\xa0фруктов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у них всего фруктов?', 'Значит, Кейл и Моризетт принесли в общей сложности 5\\xa0+\\xa010\\xa0+\\xa08\\xa0+\\xa04\\xa0=\\xa027\\xa0фруктов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 27'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '27'"}
{"id": "GSM8K_122_893c2d6675", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [7, 8, 10], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: If on Monday she slept 8 hours, then she slept 8-2 = 6 hours on each of the next two days.; int1 -> int2: The total number of hours slept for the two days will be 6*2 = 12 hours.; int1 & sent5 -> int3: If she slept 1 hour more for the rest of the week each day, then each day she slept 6+1 = 7 hours.; int1 & int2 & int3 -> int4: The total for the rest of the week will be 4*7 = 28 hours.; int1 & int2 & int4 -> int5: The total number of hours slept for the whole week will be 8+12+28 = 48 hours.; int5 & sent5 & sent6 -> int6: The answer is 48;", "textual_logical_units": {"1": "В понедельник Сэди спала 8 часов.", "2": "В течение следующих 2 дней", "3": "она спала на 2 часа меньше,", "4": "потому что ей нужно было выполнить домашнее задание.", "5": "Если в остальные дни недели она спала на 1 час больше, чем в эти два дня,", "6": "сколько часов она спала в общей сложности в течение недели?", "7": "Если в понедельник она спала 8 часов, то в каждый из следующих двух дней она спала 8 – 2 = 6 часов.", "8": "Общее количество часов сна за два дня составит 6 x 2 = 12 часов.", "9": "Если она спала на 1 час больше все оставшиеся до конца недели дни, то каждый день она спала 6 + 1 = 7 часов.", "10": "Всего за оставшиеся дни недели она спала 4 x 7 = 28 часов.", "11": "Общее количество часов сна за всю неделю составит 8 + 12 + 28 = 48 часов.", "12": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = [ 'В понедельник Сэди спала 8\\xa0часов.',\n  'В течение следующих 2\\xa0дней',\n  'она спала на 2\\xa0часа меньше,',\n  'потому что ей нужно было выполнить домашнее задание.',\n  'Если в остальные дни недели она спала на 1\\xa0час больше, чем в эти два дня,']\nquestion = 'сколько часов она спала в общей сложности в течение недели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник Сэди спала 8\\xa0часов.', 'В течение следующих 2\\xa0дней', 'она спала на 2\\xa0часа меньше,']\nnew_fact = infer_new_fact(selected) # 'Если в понедельник она спала 8\\xa0часов, то в каждый из следующих двух дней она спала 8\\xa0–\\xa02\\xa0=\\xa06\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в понедельник она спала 8\\xa0часов, то в каждый из следующих двух дней она спала 8\\xa0–\\xa02\\xa0=\\xa06\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Общее количество часов сна за два дня составит 6\\xa0x\\xa02\\xa0=\\xa012\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в остальные дни недели она спала на 1\\xa0час больше, чем в эти два дня,', 'Если в понедельник она спала 8\\xa0часов, то в каждый из следующих двух дней она спала 8\\xa0–\\xa02\\xa0=\\xa06\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Если она спала на 1\\xa0час больше все оставшиеся до конца недели дни, то каждый день она спала 6\\xa0+\\xa01\\xa0=\\xa07\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в понедельник она спала 8\\xa0часов, то в каждый из следующих двух дней она спала 8\\xa0–\\xa02\\xa0=\\xa06\\xa0часов.', 'Общее количество часов сна за два дня составит 6\\xa0x\\xa02\\xa0=\\xa012\\xa0часов.', 'Если она спала на 1\\xa0час больше все оставшиеся до конца недели дни, то каждый день она спала 6\\xa0+\\xa01\\xa0=\\xa07\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Всего за оставшиеся дни недели она спала 4\\xa0x\\xa07\\xa0=\\xa028\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в понедельник она спала 8\\xa0часов, то в каждый из следующих двух дней она спала 8\\xa0–\\xa02\\xa0=\\xa06\\xa0часов.', 'Общее количество часов сна за два дня составит 6\\xa0x\\xa02\\xa0=\\xa012\\xa0часов.', 'Всего за оставшиеся дни недели она спала 4\\xa0x\\xa07\\xa0=\\xa028\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Общее количество часов сна за всю неделю составит 8\\xa0+\\xa012\\xa0+\\xa028\\xa0=\\xa048\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в остальные дни недели она спала на 1\\xa0час больше, чем в эти два дня,', 'сколько часов она спала в общей сложности в течение недели?', 'Общее количество часов сна за всю неделю составит 8\\xa0+\\xa012\\xa0+\\xa028\\xa0=\\xa048\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_123_9df4c02762", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: For the first 3 hours, Rosie runs 10 miles per hour, so she runs 10*3=30 miles.; sent1 & sent3 -> int2: However, she still has 7-3=4 hours left to room.; int2 & sent2 -> int3: For the next 4 hours, she runs 5 miles per hour, so she runs 5*4=20 miles.; int1 & int3 -> int4: In total she runs 30+20=50 miles.; int4 & sent3 -> int5: The answer is 50;", "textual_logical_units": {"1": "Рози может бегать со скоростью 10 миль в час в течение 3 часов.", "2": "После этого она бежит со скоростью 5 миль в час.", "3": "Сколько миль она сможет пробежать за 7 часов?", "4": "Первые 3 часа Рози бежит со скоростью 10 миль в час, поэтому она пробегает 10 x 3 = 30 миль.", "5": "После этого ей остается пробежать 7 – 3 = 4 часа.", "6": "Следующие 4 часа она бежит со скоростью 5 миль в час, поэтому пробегает 5 x 4 = 20 миль.", "7": "В общей сложности она пробегает 30 + 20 = 50 миль.", "8": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = ['Рози может бегать со скоростью 10\\xa0миль в час в течение 3\\xa0часов.', 'После этого она бежит со скоростью 5\\xa0миль в час.']\nquestion = 'Сколько миль она сможет пробежать за 7\\xa0часов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рози может бегать со скоростью 10\\xa0миль в час в течение 3\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Первые 3\\xa0часа Рози бежит со скоростью 10\\xa0миль в час, поэтому она пробегает 10\\xa0x\\xa03\\xa0=\\xa030\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рози может бегать со скоростью 10\\xa0миль в час в течение 3\\xa0часов.', 'Сколько миль она сможет пробежать за 7\\xa0часов?']\nnew_fact = infer_new_fact(selected) # 'После этого ей остается пробежать 7\\xa0–\\xa03\\xa0=\\xa04\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После этого она бежит со скоростью 5\\xa0миль в час.', 'После этого ей остается пробежать 7\\xa0–\\xa03\\xa0=\\xa04\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Следующие 4\\xa0часа она бежит со скоростью 5\\xa0миль в час, поэтому пробегает 5\\xa0x\\xa04\\xa0=\\xa020\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первые 3\\xa0часа Рози бежит со скоростью 10\\xa0миль в час, поэтому она пробегает 10\\xa0x\\xa03\\xa0=\\xa030\\xa0миль.', 'Следующие 4\\xa0часа она бежит со скоростью 5\\xa0миль в час, поэтому пробегает 5\\xa0x\\xa04\\xa0=\\xa020\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности она пробегает 30\\xa0+\\xa020\\xa0=\\xa050\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько миль она сможет пробежать за 7\\xa0часов?', 'В общей сложности она пробегает 30\\xa0+\\xa020\\xa0=\\xa050\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_124_39f195d4f6", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: She stamped 60/3=20 letters.; int1 & sent5 -> int2: Then there were 30-20=10 in the already-stamped pile to begin with.; int2 & sent5 & sent6 -> int3: The answer is 10;", "textual_logical_units": {"1": "Дженни помогает маме в офисе.", "2": "У нее есть стопка из 60 писем, на которые нужно наклеить марки,", "3": "и стопка писем с уже наклеенными марками.", "4": "Она клеит марки на треть писем без них.", "5": "Если теперь в стопке писем с марками 30 писем,", "6": "сколько их было в этой стопке, когда Дженни только начинала?", "7": "Она наклеила марки на 60 / 3 = 20 писем.", "8": "Значит, в стопке писем с марками изначально было 30 – 20 = 10.", "9": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дженни помогает маме в офисе.',\n  'У нее есть стопка из 60\\xa0писем, на которые нужно наклеить марки,',\n  'и стопка писем с уже наклеенными марками.',\n  'Она клеит марки на треть писем без них.',\n  'Если теперь в стопке писем с марками 30\\xa0писем,']\nquestion = 'сколько их было в этой стопке, когда Дженни только начинала?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У нее есть стопка из 60\\xa0писем, на которые нужно наклеить марки,', 'Она клеит марки на треть писем без них.']\nnew_fact = infer_new_fact(selected) # 'Она наклеила марки на 60\\xa0/\\xa03\\xa0=\\xa020\\xa0писем.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если теперь в стопке писем с марками 30\\xa0писем,', 'Она наклеила марки на 60\\xa0/\\xa03\\xa0=\\xa020\\xa0писем.']\nnew_fact = infer_new_fact(selected) # 'Значит, в стопке писем с марками изначально было 30\\xa0–\\xa020\\xa0=\\xa010.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если теперь в стопке писем с марками 30\\xa0писем,', 'сколько их было в этой стопке, когда Дженни только начинала?', 'Значит, в стопке писем с марками изначально было 30\\xa0–\\xa020\\xa0=\\xa010.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_125_21103b71c7", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: The total number of spoons from Julia and her husband was 12+3=15 spoons.; int1 & sent5 -> int2: Since the husband bought a package of five spoons, then Julia's package contained 15-5=10 spoons.; int2 & sent10 -> int3: The answer is 10;", "textual_logical_units": {"1": "Джулия готовилась к званому обеду у себя дома,", "2": "где она собиралась подавать тушеное мясо.", "3": "Она заметила, что у нее закончились пластиковые ложки,", "4": "поэтому купила новую упаковку ложек.", "5": "Позже ее муж также купил упаковку из 5 новых ложек и отдал их Джулии.", "6": "Пока Джулия готовила рагу,", "7": "она попробовала тушеное мясо тремя ложками.", "8": "Позже, когда она пошла накрывать стол,", "9": "всего у нее осталось 12 ложек.", "10": "Сколько ложек было в упаковке, которую купила Джулия?", "11": "Общее количество ложек, которые купили Джулия и ее муж составило 12 + 3 = 15 ложек.", "12": "Поскольку муж купил упаковку из 5 ложек, то в упаковке Джулии было 15 – 5 = 10 ложек.", "13": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джулия готовилась к званому обеду у себя дома,',\n  'где она собиралась подавать тушеное мясо.',\n  'Она заметила, что у нее закончились пластиковые ложки,',\n  'поэтому купила новую упаковку ложек.',\n  'Позже ее муж также купил упаковку из 5\\xa0новых ложек и отдал их Джулии.',\n  'Пока Джулия готовила рагу,',\n  'она попробовала тушеное мясо тремя ложками.',\n  'Позже, когда она пошла накрывать стол,',\n  'всего у нее осталось 12\\xa0ложек.']\nquestion = 'Сколько ложек было в упаковке, которую купила Джулия?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['она попробовала тушеное мясо тремя ложками.', 'всего у нее осталось 12\\xa0ложек.']\nnew_fact = infer_new_fact(selected) # 'Общее количество ложек, которые купили Джулия и ее муж составило 12\\xa0+\\xa03\\xa0=\\xa015\\xa0ложек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Позже ее муж также купил упаковку из 5\\xa0новых ложек и отдал их Джулии.', 'Общее количество ложек, которые купили Джулия и ее муж составило 12\\xa0+\\xa03\\xa0=\\xa015\\xa0ложек.']\nnew_fact = infer_new_fact(selected) # 'Поскольку муж купил упаковку из 5\\xa0ложек, то в упаковке Джулии было 15\\xa0–\\xa05\\xa0=\\xa010\\xa0ложек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ложек было в упаковке, которую купила Джулия?', 'Поскольку муж купил упаковку из 5\\xa0ложек, то в упаковке Джулии было 15\\xa0–\\xa05\\xa0=\\xa010\\xa0ложек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_126_71fb9a1c41", "context": "", "options": [], "answer": "82", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: He bought 38 + 6 = 44 fish sausages.; int1 & sent3 -> int2: Dylan bought 38 + 44 = 82 sausages in all.; int2 & sent5 -> int3: The answer is 82;", "textual_logical_units": {"1": "Дилану нужны были куриные сосиски и", "2": "рыбные сосиски, чтобы приготовить на вечеринке сосиски в тесте.", "3": "Он купил 38 куриных сосисок и", "4": "на 6 рыбных сосисок больше, чем куриных.", "5": "Сколько сосисок купил Дилан?", "6": "Он купил 38 + 6 = 44 рыбные сосиски.", "7": "Всего Дилан купил 38 + 44 = 82 сосиски.", "8": "The answer is 82"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дилану нужны были куриные сосиски и',\n  'рыбные сосиски, чтобы приготовить на вечеринке сосиски в тесте.',\n  'Он купил 38\\xa0куриных сосисок и',\n  'на 6\\xa0рыбных сосисок больше, чем куриных.']\nquestion = 'Сколько сосисок купил Дилан?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он купил 38\\xa0куриных сосисок и', 'на 6\\xa0рыбных сосисок больше, чем куриных.']\nnew_fact = infer_new_fact(selected) # 'Он купил 38\\xa0+\\xa06\\xa0=\\xa044\\xa0рыбные сосиски.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он купил 38\\xa0куриных сосисок и', 'Он купил 38\\xa0+\\xa06\\xa0=\\xa044\\xa0рыбные сосиски.']\nnew_fact = infer_new_fact(selected) # 'Всего Дилан купил 38\\xa0+\\xa044\\xa0=\\xa082\\xa0сосиски.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сосисок купил Дилан?', 'Всего Дилан купил 38\\xa0+\\xa044\\xa0=\\xa082\\xa0сосиски.']\nnew_fact = infer_new_fact(selected) # 'The answer is 82'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '82'"}
{"id": "GSM8K_127_e803d7dd62", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Lily made 50 friends, Amy made 50+20 =70 friends.; int1 -> int2: Together, they made 70+50 = 120 friends at the new school.; int2 & sent3 & sent4 -> int3: The answer is 120;", "textual_logical_units": {"1": "После перевода в новую школу", "2": "у Эми стало на 20 друзей больше, чем у Лили.", "3": "Если у Лили 50 друзей,", "4": "сколько друзей у Лили и Эми?", "5": "Если у Лили 50 друзей, то у Эми 50 + 20 = 70 друзей.", "6": "Вместе у них 70 + 50 = 120 друзей в новой школе.", "7": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['После перевода в новую школу', 'у Эми стало на 20\\xa0друзей больше, чем у Лили.', 'Если у Лили 50\\xa0друзей,']\nquestion = 'сколько друзей у Лили и Эми?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['у Эми стало на 20\\xa0друзей больше, чем у Лили.', 'Если у Лили 50\\xa0друзей,']\nnew_fact = infer_new_fact(selected) # 'Если у Лили 50\\xa0друзей, то у Эми 50\\xa0+\\xa020\\xa0=\\xa070\\xa0друзей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Лили 50\\xa0друзей, то у Эми 50\\xa0+\\xa020\\xa0=\\xa070\\xa0друзей.']\nnew_fact = infer_new_fact(selected) # 'Вместе у них 70\\xa0+\\xa050\\xa0=\\xa0120\\xa0друзей в новой школе.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Лили 50\\xa0друзей,', 'сколько друзей у Лили и Эми?', 'Вместе у них 70\\xa0+\\xa050\\xa0=\\xa0120\\xa0друзей в новой школе.']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_128_b995641c74", "context": "", "options": [], "answer": "880", "reasoning_graph_edges": [{"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [5, 6], "consequent": 10}, {"antecedents": [5, 8], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent3 & sent6 -> int1: A watermelon costs three times what pepper costs, which is 3 * 15 = $45.; int1 & sent4 -> int2: An orange price is 45 - 5= $40.; int1 & sent5 -> int3: Dillon buys four watermelons at a total cost of 45 * 4 = $180.; sent5 & sent6 -> int4: He also purchases peppers at a total price of 20 * 15 = $300.; int2 & sent5 -> int5: The oranges cost him a total of 10 * 40 = $400.; int3 & int4 & int5 -> int6: He used a total of 400 + 300 + 180 = $880.; int6 & sent6 -> int7: The answer is 880;", "textual_logical_units": {"1": "Мать Уэлла продает арбузы, перцы", "2": "и апельсины в местном магазине.", "3": "Арбуз стоит в 3 раза больше, чем каждый перец.", "4": "Апельсин стоит на 5 долларов меньше арбуза.", "5": "Диллона отправляют в магазин за 4 арбузами, 20 перцами и 10 апельсинами.", "6": "Какую сумму он потратит, если каждый перец будет стоить 15 долларов?", "7": "Арбуз стоит в 3 раза дороже перца, что составляет 3 x 15 = 45 долларов.", "8": "Цена апельсина составляет 45 – 5 = 40 долларов.", "9": "Диллон покупает 4 арбуза общей стоимостью 45 x 4 = 180 долларов.", "10": "Значит, за перец он заплатит 20 x 15 = 300 долларов.", "11": "Апельсины обошлись ему в общей сложности в 10 x 40 = 400 долларов.", "12": "Он потратил в общей сложности 400 + 300 + 180 = 880 долларов.", "13": "The answer is 880"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мать Уэлла продает арбузы, перцы',\n  'и апельсины в местном магазине.',\n  'Арбуз стоит в 3\\xa0раза больше, чем каждый перец.',\n  'Апельсин стоит на 5\\xa0долларов меньше арбуза.',\n  'Диллона отправляют в магазин за 4\\xa0арбузами, 20\\xa0перцами и 10\\xa0апельсинами.']\nquestion = 'Какую сумму он потратит, если каждый перец будет стоить 15\\xa0долларов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Арбуз стоит в 3\\xa0раза больше, чем каждый перец.', 'Какую сумму он потратит, если каждый перец будет стоить 15\\xa0долларов?']\nnew_fact = infer_new_fact(selected) # 'Арбуз стоит в 3\\xa0раза дороже перца, что составляет 3\\xa0x\\xa015\\xa0=\\xa045\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Апельсин стоит на 5\\xa0долларов меньше арбуза.', 'Арбуз стоит в 3\\xa0раза дороже перца, что составляет 3\\xa0x\\xa015\\xa0=\\xa045\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Цена апельсина составляет 45\\xa0–\\xa05\\xa0=\\xa040\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Диллона отправляют в магазин за 4\\xa0арбузами, 20\\xa0перцами и 10\\xa0апельсинами.', 'Арбуз стоит в 3\\xa0раза дороже перца, что составляет 3\\xa0x\\xa015\\xa0=\\xa045\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Диллон покупает 4\\xa0арбуза общей стоимостью 45\\xa0x\\xa04\\xa0=\\xa0180\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Диллона отправляют в магазин за 4\\xa0арбузами, 20\\xa0перцами и 10\\xa0апельсинами.', 'Какую сумму он потратит, если каждый перец будет стоить 15\\xa0долларов?']\nnew_fact = infer_new_fact(selected) # 'Значит, за перец он заплатит 20\\xa0x\\xa015\\xa0=\\xa0300\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Диллона отправляют в магазин за 4\\xa0арбузами, 20\\xa0перцами и 10\\xa0апельсинами.', 'Цена апельсина составляет 45\\xa0–\\xa05\\xa0=\\xa040\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Апельсины обошлись ему в общей сложности в 10\\xa0x\\xa040\\xa0=\\xa0400\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Диллон покупает 4\\xa0арбуза общей стоимостью 45\\xa0x\\xa04\\xa0=\\xa0180\\xa0долларов.', 'Значит, за перец он заплатит 20\\xa0x\\xa015\\xa0=\\xa0300\\xa0долларов.', 'Апельсины обошлись ему в общей сложности в 10\\xa0x\\xa040\\xa0=\\xa0400\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Он потратил в общей сложности 400\\xa0+\\xa0300\\xa0+\\xa0180\\xa0=\\xa0880\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую сумму он потратит, если каждый перец будет стоить 15\\xa0долларов?', 'Он потратил в общей сложности 400\\xa0+\\xa0300\\xa0+\\xa0180\\xa0=\\xa0880\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 880'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '880'"}
{"id": "GSM8K_129_6cef70b898", "context": "", "options": [], "answer": "10000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The hospital sees patients for 500*24=12000 minutes a day; int1 & sent4 -> int2: That means they see patients for 12000/60=200 hours a day; sent3 & sent4 -> int3: They profit 200-150=$50 per hour; int2 & int3 -> int4: So they make a profit of 200 hours * $50/hour = $10000 a day from patient visits; int4 & sent5 -> int5: The answer is 10000;", "textual_logical_units": {"1": "Больница принимает 500 человек в день.", "2": "Каждого пациента осматривают в среднем 24 минуты.", "3": "Больница платит врачам 150 долларов в час и", "4": "взимает с пациентов 200 долларов в час.", "5": "Какую прибыль получает больница от визитов пациентов?", "6": "Больница принимает пациентов по 500 x 24 = 12 000 минут в день.", "7": "Это означает, что всего принимают пациентов в течение 12 000 / 60 = 200 часов в день.", "8": "Они зарабатывают 200 – 150 = 50 долларов в час.", "9": "Таким образом, больница получает прибыль в размере 200 часов x 50 долларов в час = 10 000 долларов в день, благодаря визитам пациентов.", "10": "The answer is 10000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Больница принимает 500\\xa0человек в день.',\n  'Каждого пациента осматривают в среднем 24\\xa0минуты.',\n  'Больница платит врачам 150\\xa0долларов в час и',\n  'взимает с пациентов 200\\xa0долларов в час.']\nquestion = 'Какую прибыль получает больница от визитов пациентов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Больница принимает 500\\xa0человек в день.', 'Каждого пациента осматривают в среднем 24\\xa0минуты.']\nnew_fact = infer_new_fact(selected) # 'Больница принимает пациентов по 500\\xa0x\\xa024\\xa0=\\xa012\\xa0000 минут в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['взимает с пациентов 200\\xa0долларов в час.', 'Больница принимает пациентов по 500\\xa0x\\xa024\\xa0=\\xa012\\xa0000 минут в день.']\nnew_fact = infer_new_fact(selected) # 'Это означает, что всего принимают пациентов в течение 12\\xa0000\\xa0/\\xa060\\xa0=\\xa0200\\xa0часов в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Больница платит врачам 150\\xa0долларов в час и', 'взимает с пациентов 200\\xa0долларов в час.']\nnew_fact = infer_new_fact(selected) # 'Они зарабатывают 200\\xa0–\\xa0150\\xa0=\\xa050\\xa0долларов в час.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Это означает, что всего принимают пациентов в течение 12\\xa0000\\xa0/\\xa060\\xa0=\\xa0200\\xa0часов в день.', 'Они зарабатывают 200\\xa0–\\xa0150\\xa0=\\xa050\\xa0долларов в час.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, больница получает прибыль в размере 200\\xa0часов\\xa0x\\xa050\\xa0долларов в час\\xa0=\\xa010\\xa0000\\xa0долларов в день, благодаря визитам пациентов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую прибыль получает больница от визитов пациентов?', 'Таким образом, больница получает прибыль в размере 200\\xa0часов\\xa0x\\xa050\\xa0долларов в час\\xa0=\\xa010\\xa0000\\xa0долларов в день, благодаря визитам пациентов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10000'"}
{"id": "GSM8K_130_70dc9a0006", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First, divide the starting number of elves by 3 to find out how many quit after being vomited on, which is 60 elves / 3 = 20 elves.; int1 -> int2: Then subtract that number from the starting number of elves to find out how many are left: 60 elves - 20 elves = 40 elves.; int2 & sent3 -> int3: Then subtract the number of elves who quit after being kicked to find the total number who left: 40 elves - 10 elves = 30 elves.; int3 & sent4 -> int4: The answer is 30;", "textual_logical_units": {"1": "Нисса нанимает 60 сезонных рабочих, чтобы они играли эльфов в деревне Санта в ее универмаге.", "2": "Треть эльфов уволилась после того, как на них вырвало детей,", "3": "затем 10 из оставшихся эльфов ушли, потому что дети пинались.", "4": "Сколько эльфов осталось?", "5": "Сначала разделим количество эльфов в самом начале на 3, чтобы узнать, сколько из них ушли после того, как на них вырвало детей. Это 60 / 3 = 20 эльфов.", "6": "Затем вычтем это число из начального числа эльфов, чтобы узнать, сколько их осталось: 60 эльфов – 20 эльфов = 40 эльфов.", "7": "Затем вычтем количество эльфов, которые ушли после того, как дети стали пинаться, и найдем общее количество оставшихся: 40 эльфов – 10 эльфов = 30 эльфов.", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = [ 'Нисса нанимает 60\\xa0сезонных рабочих, чтобы они играли эльфов в деревне Санта в ее универмаге.',\n  'Треть эльфов уволилась после того, как на них вырвало детей,',\n  'затем 10\\xa0из оставшихся эльфов ушли, потому что дети пинались.']\nquestion = 'Сколько эльфов осталось?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Нисса нанимает 60\\xa0сезонных рабочих, чтобы они играли эльфов в деревне Санта в ее универмаге.', 'Треть эльфов уволилась после того, как на них вырвало детей,']\nnew_fact = infer_new_fact(selected) # 'Сначала разделим количество эльфов в самом начале на 3, чтобы узнать, сколько из них ушли после того, как на них вырвало детей. Это 60\\xa0/\\xa03\\xa0=\\xa020\\xa0эльфов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала разделим количество эльфов в самом начале на 3, чтобы узнать, сколько из них ушли после того, как на них вырвало детей. Это 60\\xa0/\\xa03\\xa0=\\xa020\\xa0эльфов.']\nnew_fact = infer_new_fact(selected) # 'Затем вычтем это число из начального числа эльфов, чтобы узнать, сколько их осталось: 60 эльфов\\xa0–\\xa020\\xa0эльфов\\xa0=\\xa040\\xa0эльфов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['затем 10\\xa0из оставшихся эльфов ушли, потому что дети пинались.', 'Затем вычтем это число из начального числа эльфов, чтобы узнать, сколько их осталось: 60 эльфов\\xa0–\\xa020\\xa0эльфов\\xa0=\\xa040\\xa0эльфов.']\nnew_fact = infer_new_fact(selected) # 'Затем вычтем количество эльфов, которые ушли после того, как дети стали пинаться, и найдем общее количество оставшихся: 40\\xa0эльфов\\xa0–\\xa010\\xa0эльфов\\xa0=\\xa030\\xa0эльфов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько эльфов осталось?', 'Затем вычтем количество эльфов, которые ушли после того, как дети стали пинаться, и найдем общее количество оставшихся: 40\\xa0эльфов\\xa0–\\xa010\\xa0эльфов\\xa0=\\xa030\\xa0эльфов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_131_1ebd927d97", "context": "", "options": [], "answer": "940", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: His expenditure in June was $500 - $60 = $440.; int1 & sent1 -> int2: His total expenditure for May and June was $500 + $440 = $940.; int2 & sent3 -> int3: The answer is 940;", "textual_logical_units": {"1": "Расходы Джозефа в мае составили 500 долларов.", "2": "В июне его расходы сократились на 60 долларов.", "3": "Сколько он потратил в общей сложности за эти 2 месяца?", "4": "Его расходы в июне составили 500 – 60 = 440 долларов.", "5": "Его общие расходы за май и июнь составили 500 + 440 = 940 долларов.", "6": "The answer is 940"}, "human_translated": true, "code_input": "####\nfacts = ['Расходы Джозефа в мае составили 500\\xa0долларов.', 'В июне его расходы сократились на 60\\xa0долларов.']\nquestion = 'Сколько он потратил в общей сложности за эти 2\\xa0месяца?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Расходы Джозефа в мае составили 500\\xa0долларов.', 'В июне его расходы сократились на 60\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Его расходы в июне составили 500\\xa0–\\xa060\\xa0=\\xa0440\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расходы Джозефа в мае составили 500\\xa0долларов.', 'Его расходы в июне составили 500\\xa0–\\xa060\\xa0=\\xa0440\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Его общие расходы за май и июнь составили 500\\xa0+\\xa0440\\xa0=\\xa0940\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он потратил в общей сложности за эти 2\\xa0месяца?', 'Его общие расходы за май и июнь составили 500\\xa0+\\xa0440\\xa0=\\xa0940\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 940'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '940'"}
{"id": "GSM8K_132_ca0a223aa4", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: The total times that they ride the roller coaster is 2+4=6 times.; sent3 -> int2: The total times that they ride the luge is 2+2=4 times.; int1 & int2 -> int3: The total times they ride that day is 6+4=10 times.; int3 & sent4 -> int4: So, Pam and Fred used 10x6=60 tickets that day.; int4 & sent4 & sent5 -> int5: The answer is 60;", "textual_logical_units": {"1": "Пэм и Фред отправились на карнавал.", "2": "Пэм каталась на американских горках 2 раза, а Фред — 4 раза.", "3": "После этого каждый из них решил прокатиться с горы на санках по 2 раза.", "4": "Если каждая поездка стоит 6 билетов,", "5": "сколько билетов они использовали в тот день?", "6": "Общее количество, которое они катались на американских горках, составляет 2 + 4 = 6 раз.", "7": "С горы на санках они скатились всего 2 + 2 = 4 раза.", "8": "Всего в этот день они катались на аттракционах 6 + 4 = 10 раз.", "9": "Итак, в тот день Пэм и Фред использовали 10 x 6 = 60 билетов.", "10": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = [ 'Пэм и Фред отправились на карнавал.',\n  'Пэм каталась на американских горках 2\\xa0раза, а Фред\\xa0— 4\\xa0раза.',\n  'После этого каждый из них решил прокатиться с горы на санках по 2\\xa0раза.',\n  'Если каждая поездка стоит 6\\xa0билетов,']\nquestion = 'сколько билетов они использовали в тот день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Пэм каталась на американских горках 2\\xa0раза, а Фред\\xa0— 4\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'Общее количество, которое они катались на американских горках, составляет 2\\xa0+\\xa04\\xa0=\\xa06\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После этого каждый из них решил прокатиться с горы на санках по 2\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'С горы на санках они скатились всего 2\\xa0+\\xa02\\xa0=\\xa04\\xa0раза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее количество, которое они катались на американских горках, составляет 2\\xa0+\\xa04\\xa0=\\xa06\\xa0раз.', 'С горы на санках они скатились всего 2\\xa0+\\xa02\\xa0=\\xa04\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'Всего в этот день они катались на аттракционах 6\\xa0+\\xa04\\xa0=\\xa010\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если каждая поездка стоит 6\\xa0билетов,', 'Всего в этот день они катались на аттракционах 6\\xa0+\\xa04\\xa0=\\xa010\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Итак, в тот день Пэм и Фред использовали 10\\xa0x\\xa06\\xa0=\\xa060 билетов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если каждая поездка стоит 6\\xa0билетов,', 'сколько билетов они использовали в тот день?', 'Итак, в тот день Пэм и Фред использовали 10\\xa0x\\xa06\\xa0=\\xa060 билетов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_133_0e693843bb", "context": "", "options": [], "answer": "13", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Walt’s Tuesday walk was 4*6 = 24 miles.; int1 & sent1 -> int2: Walt’s Monday and Tuesday walk were 4+24 = 28 miles combined.; int2 & sent3 -> int3: Walt’s Wednesday walk was 41-28 = 13 miles.; int3 & sent4 -> int4: The answer is 13;", "textual_logical_units": {"1": "В понедельник Уолт прошел 4 мили.", "2": "Во вторник он прошел в 6 раз больше миль, чем в понедельник.", "3": "Всего с понедельника по среду она прошел 41 милю.", "4": "Сколько миль он прошел в среду?", "5": "Во вторник Уолт прошел 4 * 6 = 24 мили.", "6": "Всего за два дня (в понедельник и во вторник) Уолт прошел 4 + 24 = 28 миль.", "7": "В среду Уолт прошел 41 – 28 = 13 миль.", "8": "The answer is 13"}, "human_translated": true, "code_input": "####\nfacts = [ 'В понедельник Уолт прошел 4\\xa0мили.',\n  'Во вторник он прошел в 6\\xa0раз больше миль, чем в понедельник.',\n  'Всего с понедельника по среду она прошел 41\\xa0милю.']\nquestion = 'Сколько миль он прошел в среду?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник Уолт прошел 4\\xa0мили.', 'Во вторник он прошел в 6\\xa0раз больше миль, чем в понедельник.']\nnew_fact = infer_new_fact(selected) # 'Во вторник Уолт прошел 4\\xa0*\\xa06\\xa0=\\xa024\\xa0мили.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник Уолт прошел 4\\xa0мили.', 'Во вторник Уолт прошел 4\\xa0*\\xa06\\xa0=\\xa024\\xa0мили.']\nnew_fact = infer_new_fact(selected) # 'Всего за два дня (в понедельник и во вторник) Уолт прошел 4\\xa0+\\xa024\\xa0=\\xa028\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего с понедельника по среду она прошел 41\\xa0милю.', 'Всего за два дня (в понедельник и во вторник) Уолт прошел 4\\xa0+\\xa024\\xa0=\\xa028\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'В среду Уолт прошел 41\\xa0–\\xa028\\xa0=\\xa013\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько миль он прошел в среду?', 'В среду Уолт прошел 41\\xa0–\\xa028\\xa0=\\xa013\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'The answer is 13'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '13'"}
{"id": "GSM8K_134_2f2ab4e371", "context": "", "options": [], "answer": "720", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He gets 4*12=48 car washes a year; int1 & sent2 -> int2: That means it cost 48*15=$720; int2 & sent2 -> int3: The answer is 720;", "textual_logical_units": {"1": "Том моет машину 4 раза в месяц.", "2": "За каждую мойку он платит 15 долларов. Сколько он платит за год?", "3": "Он моет машину 4 * 12 = 48 раз в год.", "4": "Это значит, что он платит 48 * 15 = 720 долларов.", "5": "The answer is 720"}, "human_translated": true, "code_input": "####\nfacts = ['Том моет машину 4\\xa0раза в месяц.']\nquestion = 'За каждую мойку он платит 15\\xa0долларов. Сколько он платит за год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Том моет машину 4\\xa0раза в месяц.', 'За каждую мойку он платит 15\\xa0долларов. Сколько он платит за год?']\nnew_fact = infer_new_fact(selected) # 'Он моет машину 4\\xa0*\\xa012\\xa0=\\xa048\\xa0раз в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждую мойку он платит 15\\xa0долларов. Сколько он платит за год?', 'Он моет машину 4\\xa0*\\xa012\\xa0=\\xa048\\xa0раз в год.']\nnew_fact = infer_new_fact(selected) # 'Это значит, что он платит 48\\xa0*\\xa015\\xa0=\\xa0720\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждую мойку он платит 15\\xa0долларов. Сколько он платит за год?', 'Это значит, что он платит 48\\xa0*\\xa015\\xa0=\\xa0720\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 720'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '720'"}
{"id": "GSM8K_135_ea7a060d98", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [1, 2, 4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [2, 3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: If Brian previously had 20 video games but lost 5, that means he now has 20-5=15 video games; int1 & sent1 & sent2 -> int2: Brian has 15 video games, so if Bobby has 5 fewer than 3 times as many as Brian does we must first perform 15*3=45; int2 -> int3: We then subtract 5 from the previous total for 45-5=40 games in total.; int3 & sent2 & sent3 -> int4: The answer is 40;", "textual_logical_units": {"1": "Бобби — друг Брайана, у него на 5 видеоигр меньше, чем было бы у Брайана, если бы у него было в 3 раза больше игр.", "2": "У Брайана было 20 видеоигр, но 5 он потерял как раз перед тем, как друзья стали сравнивать их количество.", "3": "Сколько игр у Бобби?", "4": "Если раньше у Брайана было 20 видеоигр, но 5 он потерял, то теперь у него 20 – 5 = 15 видеоигр.", "5": "У Брайана 15 видеоигр. Раз у Бобби игр на 5 меньше, чем было бы у Брайана, если бы у него их было в 3 раза больше, сначала нужно вычислить 15 * 3 = 45.", "6": "Затем нужно вычесть 5 из предыдущей суммы, получается 45 – 5 = 40 игр.", "7": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = [ 'Бобби\\xa0— друг Брайана, у него на 5\\xa0видеоигр меньше, чем было бы у Брайана, если бы у него было в 3\\xa0раза больше игр.',\n  'У Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял как раз перед тем, как друзья стали сравнивать их количество.']\nquestion = 'Сколько игр у Бобби?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял как раз перед тем, как друзья стали сравнивать их количество.']\nnew_fact = infer_new_fact(selected) # 'Если раньше у Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял, то теперь у него 20\\xa0–\\xa05\\xa0=\\xa015 видеоигр.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Бобби\\xa0— друг Брайана, у него на 5\\xa0видеоигр меньше, чем было бы у Брайана, если бы у него было в 3\\xa0раза больше игр.', 'У Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял как раз перед тем, как друзья стали сравнивать их количество.', 'Если раньше у Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял, то теперь у него 20\\xa0–\\xa05\\xa0=\\xa015 видеоигр.']\nnew_fact = infer_new_fact(selected) # 'У Брайана 15\\xa0видеоигр. Раз у Бобби игр на 5\\xa0меньше, чем было бы у Брайана, если бы у него их было в 3\\xa0раза больше, сначала нужно вычислить 15\\xa0*\\xa03\\xa0=\\xa045.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Брайана 15\\xa0видеоигр. Раз у Бобби игр на 5\\xa0меньше, чем было бы у Брайана, если бы у него их было в 3\\xa0раза больше, сначала нужно вычислить 15\\xa0*\\xa03\\xa0=\\xa045.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно вычесть 5\\xa0из предыдущей суммы, получается 45\\xa0–\\xa05\\xa0=\\xa040\\xa0игр.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Брайана было 20\\xa0видеоигр, но 5\\xa0он потерял как раз перед тем, как друзья стали сравнивать их количество.', 'Сколько игр у Бобби?', 'Затем нужно вычесть 5\\xa0из предыдущей суммы, получается 45\\xa0–\\xa05\\xa0=\\xa040\\xa0игр.']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_136_d9c82cc71f", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Scottish Unicorns:27(1/3)=9; int1 & sent3 -> int2: Female:9(2/3)=6 unicorns; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "В мире осталось 27 единорогов.", "2": "Треть из них живет на территории Шотландского нагорья.", "3": "Две трети шотландских единорогов — самки.", "4": "Сколько существует самок шотландских единорогов?", "5": "Всего шотландских единорогов: 27 * 1/3 = 9", "6": "Из них самок: 9 * 2/3 = 6 единорогов.", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['В мире осталось 27\\xa0единорогов.', 'Треть из них живет на территории Шотландского нагорья.', 'Две трети шотландских единорогов\\xa0— самки.']\nquestion = 'Сколько существует самок шотландских единорогов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В мире осталось 27\\xa0единорогов.', 'Треть из них живет на территории Шотландского нагорья.']\nnew_fact = infer_new_fact(selected) # 'Всего шотландских единорогов: 27\\xa0*\\xa01/3\\xa0=\\xa09'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Две трети шотландских единорогов\\xa0— самки.', 'Всего шотландских единорогов: 27\\xa0*\\xa01/3\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'Из них самок: 9\\xa0*\\xa02/3\\xa0=\\xa06\\xa0единорогов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько существует самок шотландских единорогов?', 'Из них самок: 9\\xa0*\\xa02/3\\xa0=\\xa06\\xa0единорогов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_137_d6ca49d1e7", "context": "", "options": [], "answer": "29", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: 2 subs are $7.50 each so that’s 2*7.50 = $15.00; sent2 -> int2: 2 bags of chips are $1.50 each so that’s 2*1.50 = $3.00; sent3 -> int3: 2 cookies are $1.00 each so that’s 2*1 = $2.00; int1 & int2 & int3 -> int4: Her delivery order will be 15+3+2= $20.00; sent1 & sent4 -> int5: There’s a 20% delivery fee on the $20.00 which adds .20*20 = $4.00 to her bill; int4 & int5 & sent5 -> int6: The delivery order is $20.00, there’s a $4.00 delivery fee and she adds a $5.00 tip for a total of 20+4+5 = $29.00; int6 & sent6 -> int7: The answer is 29;", "textual_logical_units": {"1": "Рори заказала доставку: 2 сэндвича-субмарины по 7,50 долларов,", "2": "2 пакета чипсов по 1,50 доллара и", "3": "2 печенья по 1,00 доллару.", "4": "При оформлении заказа взимается плата за доставку в размере 20 % и", "5": "она хочет добавить 5,00 долларов как чаевые.", "6": "Сколько ей нужно заплатить за заказ?", "7": "Сэндвич-субмарина стоит 7,50 долларов, получается 2 * 7,50 = 15,00 долларов.", "8": "Пакет чипсов стоит 1,50 доллара, получается 2 * 1,50 = 3,00 доллара.", "9": "Печенье стоит 1,00 доллар, получается 2 * 1,00 = 2,00 доллара.", "10": "В сумме заказ стоит 15 + 3 + 2 = 20,00 долларов.", "11": "С этой суммы взимается плата за доставку в размере 20 %, поэтому к счету нужно добавить 0,20 * 20 = 4,00 доллара.", "12": "Сам заказ стоит 20,00 долларов, плата за доставку составляет 4,00 доллара, и Рори добавила 5,00 долларов чаевых. Итого получается 20 + 4 + 5 = 29,00 долларов.", "13": "The answer is 29"}, "human_translated": true, "code_input": "####\nfacts = [ 'Рори заказала доставку: 2\\xa0сэндвича-субмарины по 7,50\\xa0долларов,',\n  '2\\xa0пакета чипсов по 1,50\\xa0доллара и',\n  '2\\xa0печенья по 1,00 доллару.',\n  'При оформлении заказа взимается плата за доставку в размере 20\\xa0% и',\n  'она хочет добавить 5,00\\xa0долларов как чаевые.']\nquestion = 'Сколько ей нужно заплатить за заказ?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рори заказала доставку: 2\\xa0сэндвича-субмарины по 7,50\\xa0долларов,']\nnew_fact = infer_new_fact(selected) # 'Сэндвич-субмарина стоит 7,50\\xa0долларов, получается 2\\xa0*\\xa07,50\\xa0=\\xa015,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0пакета чипсов по 1,50\\xa0доллара и']\nnew_fact = infer_new_fact(selected) # 'Пакет чипсов стоит 1,50 доллара, получается 2\\xa0*\\xa01,50\\xa0=\\xa03,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0печенья по 1,00 доллару.']\nnew_fact = infer_new_fact(selected) # 'Печенье стоит 1,00\\xa0доллар, получается 2\\xa0*\\xa01,00\\xa0=\\xa02,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сэндвич-субмарина стоит 7,50\\xa0долларов, получается 2\\xa0*\\xa07,50\\xa0=\\xa015,00\\xa0долларов.', 'Пакет чипсов стоит 1,50 доллара, получается 2\\xa0*\\xa01,50\\xa0=\\xa03,00\\xa0доллара.', 'Печенье стоит 1,00\\xa0доллар, получается 2\\xa0*\\xa01,00\\xa0=\\xa02,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'В сумме заказ стоит 15\\xa0+\\xa03\\xa0+\\xa02\\xa0=\\xa020,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рори заказала доставку: 2\\xa0сэндвича-субмарины по 7,50\\xa0долларов,', 'При оформлении заказа взимается плата за доставку в размере 20\\xa0% и']\nnew_fact = infer_new_fact(selected) # 'С этой суммы взимается плата за доставку в размере 20\\xa0%, поэтому к счету нужно добавить 0,20\\xa0*\\xa020\\xa0=\\xa04,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['она хочет добавить 5,00\\xa0долларов как чаевые.', 'В сумме заказ стоит 15\\xa0+\\xa03\\xa0+\\xa02\\xa0=\\xa020,00\\xa0долларов.', 'С этой суммы взимается плата за доставку в размере 20\\xa0%, поэтому к счету нужно добавить 0,20\\xa0*\\xa020\\xa0=\\xa04,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Сам заказ стоит 20,00\\xa0долларов, плата за доставку составляет 4,00\\xa0доллара, и Рори добавила 5,00\\xa0долларов чаевых. Итого получается 20\\xa0+\\xa04\\xa0+\\xa05\\xa0=\\xa029,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ей нужно заплатить за заказ?', 'Сам заказ стоит 20,00\\xa0долларов, плата за доставку составляет 4,00\\xa0доллара, и Рори добавила 5,00\\xa0долларов чаевых. Итого получается 20\\xa0+\\xa04\\xa0+\\xa05\\xa0=\\xa029,00\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 29'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '29'"}
{"id": "GSM8K_138_beb61b44fb", "context": "", "options": [], "answer": "105", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [2, 5], "consequent": 8}, {"antecedents": [1, 7], "consequent": 9}, {"antecedents": [3, 8], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Questions Mark completed in yesterday’s test: 5*8 = 40.; sent2 & sent5 -> int2: Questions Mark completed in today’s test: 5*6 = 30.; int1 & sent1 -> int3: Questions Mark left incomplete in yesterday’s test: 75-40 = 35; int2 & sent3 -> int4: Questions Mark left incomplete in today's test: 100-30 = 70; int3 & int4 -> int5: Missed questions in total 35+70 = 105.; int5 & sent6 -> int6: The answer is 105;", "textual_logical_units": {"1": "Вчера Марк прошел тест, состоявший из 75 вопросов.", "2": "Он отвечал на тест со скоростью 5 вопросов в час.", "3": "Сегодня он прошел еще один тест из 100 вопросов с той же скоростью.", "4": "Если бы у Марка было 8 часов на прохождение первого теста и", "5": "6 часов на выполнение второго,", "6": "сколько вопросов он оставил бы без ответа?", "7": "Количество вопросов, на которые Марк ответил во вчерашнем тесте: 5 * 8 = 40.", "8": "Количество вопросов, на которые Марк ответил в сегодняшнем тесте: 5 * 6 = 30.", "9": "Количество вопросов, на которые Марк не ответил во вчерашнем тесте: 75 – 40 = 35.", "10": "Количество вопросов, на которые Марк не ответил в сегодняшнем тесте: 100 – 30 = 70.", "11": "Всего вопросов, оставшихся без ответа: 35 + 70 = 105.", "12": "The answer is 105"}, "human_translated": true, "code_input": "####\nfacts = [ 'Вчера Марк прошел тест, состоявший из 75\\xa0вопросов.',\n  'Он отвечал на тест со скоростью 5\\xa0вопросов в час.',\n  'Сегодня он прошел еще один тест из 100\\xa0вопросов с той же скоростью.',\n  'Если бы у Марка было 8\\xa0часов на прохождение первого теста и',\n  '6\\xa0часов на выполнение второго,']\nquestion = 'сколько вопросов он оставил бы без ответа?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он отвечал на тест со скоростью 5\\xa0вопросов в час.', 'Если бы у Марка было 8\\xa0часов на прохождение первого теста и']\nnew_fact = infer_new_fact(selected) # 'Количество вопросов, на которые Марк ответил во вчерашнем тесте: 5\\xa0*\\xa08\\xa0=\\xa040.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он отвечал на тест со скоростью 5\\xa0вопросов в час.', '6\\xa0часов на выполнение второго,']\nnew_fact = infer_new_fact(selected) # 'Количество вопросов, на которые Марк ответил в сегодняшнем тесте: 5\\xa0*\\xa06\\xa0=\\xa030.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вчера Марк прошел тест, состоявший из 75\\xa0вопросов.', 'Количество вопросов, на которые Марк ответил во вчерашнем тесте: 5\\xa0*\\xa08\\xa0=\\xa040.']\nnew_fact = infer_new_fact(selected) # 'Количество вопросов, на которые Марк не ответил во вчерашнем тесте: 75\\xa0–\\xa040\\xa0=\\xa035.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сегодня он прошел еще один тест из 100\\xa0вопросов с той же скоростью.', 'Количество вопросов, на которые Марк ответил в сегодняшнем тесте: 5\\xa0*\\xa06\\xa0=\\xa030.']\nnew_fact = infer_new_fact(selected) # 'Количество вопросов, на которые Марк не ответил в сегодняшнем тесте: 100\\xa0–\\xa030\\xa0=\\xa070.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество вопросов, на которые Марк не ответил во вчерашнем тесте: 75\\xa0–\\xa040\\xa0=\\xa035.', 'Количество вопросов, на которые Марк не ответил в сегодняшнем тесте: 100\\xa0–\\xa030\\xa0=\\xa070.']\nnew_fact = infer_new_fact(selected) # 'Всего вопросов, оставшихся без ответа: 35\\xa0+\\xa070\\xa0=\\xa0105.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько вопросов он оставил бы без ответа?', 'Всего вопросов, оставшихся без ответа: 35\\xa0+\\xa070\\xa0=\\xa0105.']\nnew_fact = infer_new_fact(selected) # 'The answer is 105'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '105'"}
{"id": "GSM8K_139_3a7530c506", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Four times the number of blue gumballs is 12*4=48 gumballs; int1 & sent1 -> int2: There are 48+22=70 pink gumballs; int2 & sent2 -> int3: The answer is 70;", "textual_logical_units": {"1": "В автомате с конфетами розовых жевательных шариков на 22 больше, чем четырехкратное количество синих шариков.", "2": "Если синих шариков 12, то сколько розовых?", "3": "Четырехкратное количество синих шариков равно 12 * 4 = 48.", "4": "Следовательно, розовых жевательных шариков 48 + 22 = 70.", "5": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['В автомате с конфетами розовых жевательных шариков на 22\\xa0больше, чем четырехкратное количество синих шариков.']\nquestion = 'Если синих шариков\\xa012, то сколько розовых?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В автомате с конфетами розовых жевательных шариков на 22\\xa0больше, чем четырехкратное количество синих шариков.', 'Если синих шариков\\xa012, то сколько розовых?']\nnew_fact = infer_new_fact(selected) # 'Четырехкратное количество синих шариков равно 12\\xa0*\\xa04\\xa0=\\xa048.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В автомате с конфетами розовых жевательных шариков на 22\\xa0больше, чем четырехкратное количество синих шариков.', 'Четырехкратное количество синих шариков равно 12\\xa0*\\xa04\\xa0=\\xa048.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, розовых жевательных шариков 48\\xa0+\\xa022\\xa0=\\xa070.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если синих шариков\\xa012, то сколько розовых?', 'Следовательно, розовых жевательных шариков 48\\xa0+\\xa022\\xa0=\\xa070.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_140_917a0fcf98", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 2, 4], "consequent": 5}, {"antecedents": [1, 2, 4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: 12 + 4 = 16 cars are either automatic or manual.; int1 & sent1 & sent2 -> int2: So, 20 - 16 = 4 cars are semi-automatic.; int1 & int2 & sent1 & sent2 -> int3: Therefore, the percentage of semi-automatic cars is 4/20 x 100% = 20%.; int3 & sent3 -> int4: The answer is 20;", "textual_logical_units": {"1": "Из 20 автомобилей, которые можно арендовать, 12 имеют автоматическую коробку передач, 4 — механическую,", "2": "а остальные — полуавтоматическую.", "3": "Какой процент автомобилей имеет полуавтоматическую коробку передач?", "4": "12 + 4 = 16 автомобилей имеют автоматическую или механическую коробку передач.", "5": "20 – 16 = 4 автомобиля имеют полуавтоматическую коробку передач.", "6": "Таким образом, автомобилей с полуавтоматической коробкой передач: 4 / 20 x 100 % = 20 %.", "7": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['Из 20\\xa0автомобилей, которые можно арендовать, 12\\xa0имеют автоматическую коробку передач, 4\\xa0— механическую,', 'а остальные\\xa0— полуавтоматическую.']\nquestion = 'Какой процент автомобилей имеет полуавтоматическую коробку передач?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Из 20\\xa0автомобилей, которые можно арендовать, 12\\xa0имеют автоматическую коробку передач, 4\\xa0— механическую,']\nnew_fact = infer_new_fact(selected) # '12\\xa0+\\xa04\\xa0=\\xa016\\xa0автомобилей имеют автоматическую или механическую коробку передач.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 20\\xa0автомобилей, которые можно арендовать, 12\\xa0имеют автоматическую коробку передач, 4\\xa0— механическую,', 'а остальные\\xa0— полуавтоматическую.', '12\\xa0+\\xa04\\xa0=\\xa016\\xa0автомобилей имеют автоматическую или механическую коробку передач.']\nnew_fact = infer_new_fact(selected) # '20\\xa0–\\xa016\\xa0=\\xa04\\xa0автомобиля имеют полуавтоматическую коробку передач.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 20\\xa0автомобилей, которые можно арендовать, 12\\xa0имеют автоматическую коробку передач, 4\\xa0— механическую,', 'а остальные\\xa0— полуавтоматическую.', '12\\xa0+\\xa04\\xa0=\\xa016\\xa0автомобилей имеют автоматическую или механическую коробку передач.', '20\\xa0–\\xa016\\xa0=\\xa04\\xa0автомобиля имеют полуавтоматическую коробку передач.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, автомобилей с полуавтоматической коробкой передач: 4\\xa0/\\xa020\\xa0x\\xa0100\\xa0%\\xa0=\\xa020\\xa0%.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой процент автомобилей имеет полуавтоматическую коробку передач?', 'Таким образом, автомобилей с полуавтоматической коробкой передач: 4\\xa0/\\xa020\\xa0x\\xa0100\\xa0%\\xa0=\\xa020\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_141_6775a1dbf9", "context": "", "options": [], "answer": "400", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3, 5, 6], "consequent": 7}, {"antecedents": [1, 5, 6, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [7, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: Let x represent the number of queens; int1 & sent3 -> int2: Babies:2x; int1 & int2 & sent2 & sent3 -> int3: Workers:2(2x)=4x; int1 & int2 & int3 & sent1 -> int4: Total:x+2x+4x=700; int4 -> int5: 7x=700; int5 -> int6: x=100 queen bees; int3 & int6 -> int7: Workers:4(100)=400 worker bees; int7 & sent4 -> int8: The answer is 400;", "textual_logical_units": {"1": "В улье 700 пчел.", "2": "Рабочих пчел в два раза больше, чем личинок,", "3": "а личинок в два раза больше, чем маток.", "4": "Сколько в улье рабочих пчел?", "5": "Пусть x — количество маток,", "6": "2x — количество личинок,", "7": "2 * 2x = 4x — количество рабочих пчел.", "8": "Итого: х + 2х + 4х = 700.", "9": "7х = 700.", "10": "x = 100 (маток).", "11": "Рабочих пчел: 4 * 100 = 400.", "12": "The answer is 400"}, "human_translated": true, "code_input": "####\nfacts = ['В улье 700\\xa0пчел.', 'Рабочих пчел в два раза больше, чем личинок,', 'а личинок в два раза больше, чем маток.']\nquestion = 'Сколько в улье рабочих пчел?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['а личинок в два раза больше, чем маток.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— количество маток,'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а личинок в два раза больше, чем маток.', 'Пусть x\\xa0— количество маток,']\nnew_fact = infer_new_fact(selected) # '2x\\xa0— количество личинок,'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рабочих пчел в два раза больше, чем личинок,', 'а личинок в два раза больше, чем маток.', 'Пусть x\\xa0— количество маток,', '2x\\xa0— количество личинок,']\nnew_fact = infer_new_fact(selected) # '2\\xa0*\\xa02x\\xa0=\\xa04x\\xa0— количество рабочих пчел.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В улье 700\\xa0пчел.', 'Пусть x\\xa0— количество маток,', '2x\\xa0— количество личинок,', '2\\xa0*\\xa02x\\xa0=\\xa04x\\xa0— количество рабочих пчел.']\nnew_fact = infer_new_fact(selected) # 'Итого: х\\xa0+\\xa02х\\xa0+\\xa04х\\xa0=\\xa0700.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Итого: х\\xa0+\\xa02х\\xa0+\\xa04х\\xa0=\\xa0700.']\nnew_fact = infer_new_fact(selected) # '7х\\xa0=\\xa0700.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['7х\\xa0=\\xa0700.']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0100\\xa0(маток).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0*\\xa02x\\xa0=\\xa04x\\xa0— количество рабочих пчел.', 'x\\xa0=\\xa0100\\xa0(маток).']\nnew_fact = infer_new_fact(selected) # 'Рабочих пчел: 4\\xa0*\\xa0100\\xa0=\\xa0400.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько в улье рабочих пчел?', 'Рабочих пчел: 4\\xa0*\\xa0100\\xa0=\\xa0400.']\nnew_fact = infer_new_fact(selected) # 'The answer is 400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '400'"}
{"id": "GSM8K_142_d8ba3de624", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: Jordan plays video games for 2 hours every day x 7 days in a week = 14 hours a week.; int1 & sent2 -> int2: If Jordan spent his 14 hours working instead, he would make 14 hours x $10 = $140.; int2 & sent3 -> int3: The answer is 140;", "textual_logical_units": {"1": "Джордан играет в видеоигры по 2 часа каждый день.", "2": "Еще он подрабатывает за 10 долларов в час.", "3": "Сколько бы Джордан заработал за неделю, если бы посвящал работе время, которое он тратит на видеоигры?", "4": "Джордан играет в видеоигры по 2 часа в день x 7 дней в неделю = 14 часов в неделю.", "5": "Если бы Джордан вместо этого работал 14 часов, он заработал бы 14 часов x 10 = 140 долларов.", "6": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = ['Джордан играет в видеоигры по 2\\xa0часа каждый день.', 'Еще он подрабатывает за 10\\xa0долларов в час.']\nquestion = 'Сколько бы Джордан заработал за неделю, если бы посвящал работе время, которое он тратит на видеоигры?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джордан играет в видеоигры по 2\\xa0часа каждый день.']\nnew_fact = infer_new_fact(selected) # 'Джордан играет в видеоигры по 2\\xa0часа в день\\xa0x 7\\xa0дней в неделю\\xa0=\\xa014\\xa0часов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Еще он подрабатывает за 10\\xa0долларов в час.', 'Джордан играет в видеоигры по 2\\xa0часа в день\\xa0x 7\\xa0дней в неделю\\xa0=\\xa014\\xa0часов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Если бы Джордан вместо этого работал 14\\xa0часов, он заработал бы 14\\xa0часов\\xa0x\\xa010\\xa0=\\xa0140\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько бы Джордан заработал за неделю, если бы посвящал работе время, которое он тратит на видеоигры?', 'Если бы Джордан вместо этого работал 14\\xa0часов, он заработал бы 14\\xa0часов\\xa0x\\xa010\\xa0=\\xa0140\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_143_aa97c4a867", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 2, 4], "consequent": 6}, {"antecedents": [4], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: The foodstuff cost 2+3=$5; sent1 & sent2 & sent4 -> int2: The nonfood stuff comes out to 3+3+4=$10; sent4 -> int3: Tax on the nonfood stuff comes out to 10*.1=$1; int1 & int2 & int3 -> int4: So the total cost is 5+10+1=$16; int4 & sent4 -> int5: The answer is 16;", "textual_logical_units": {"1": "Джон купил молока на 2 доллара, яиц на 3 доллара,", "2": "лампочек на 3 доллара, чашек на 3 доллара,", "3": "и ловушек для тараканов на 4 доллара.", "4": "Если за непродовольственные товары взимается налог в размере 10 %, сколько стоит его покупка?", "5": "Продукты питания стоят 2 + 3 = 5 долларов.", "6": "Стоимость непродовольственных товаров: 3 + 3 + 4 = 10 долларов.", "7": "Налог на непродовольственные товары составляет 10 * 0,1 = 1 доллар.", "8": "Итого общая стоимость покупки: 5 + 10 + 1 = 16 долларов.", "9": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['Джон купил молока на 2\\xa0доллара, яиц на 3\\xa0доллара,', 'лампочек на 3\\xa0доллара, чашек на 3\\xa0доллара,', 'и ловушек для тараканов на 4\\xa0доллара.']\nquestion = 'Если за непродовольственные товары взимается налог в размере 10\\xa0%, сколько стоит его покупка?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джон купил молока на 2\\xa0доллара, яиц на 3\\xa0доллара,']\nnew_fact = infer_new_fact(selected) # 'Продукты питания стоят 2\\xa0+\\xa03\\xa0=\\xa05\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джон купил молока на 2\\xa0доллара, яиц на 3\\xa0доллара,', 'лампочек на 3\\xa0доллара, чашек на 3\\xa0доллара,', 'Если за непродовольственные товары взимается налог в размере 10\\xa0%, сколько стоит его покупка?']\nnew_fact = infer_new_fact(selected) # 'Стоимость непродовольственных товаров: 3\\xa0+\\xa03\\xa0+\\xa04\\xa0=\\xa010\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если за непродовольственные товары взимается налог в размере 10\\xa0%, сколько стоит его покупка?']\nnew_fact = infer_new_fact(selected) # 'Налог на непродовольственные товары составляет 10\\xa0*\\xa00,1\\xa0=\\xa01\\xa0доллар.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продукты питания стоят 2\\xa0+\\xa03\\xa0=\\xa05\\xa0долларов.', 'Стоимость непродовольственных товаров: 3\\xa0+\\xa03\\xa0+\\xa04\\xa0=\\xa010\\xa0долларов.', 'Налог на непродовольственные товары составляет 10\\xa0*\\xa00,1\\xa0=\\xa01\\xa0доллар.']\nnew_fact = infer_new_fact(selected) # 'Итого общая стоимость покупки: 5\\xa0+\\xa010\\xa0+\\xa01\\xa0=\\xa016\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если за непродовольственные товары взимается налог в размере 10\\xa0%, сколько стоит его покупка?', 'Итого общая стоимость покупки: 5\\xa0+\\xa010\\xa0+\\xa01\\xa0=\\xa016\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_144_5f91483472", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 14}, {"antecedents": [6, 14], "consequent": 15}, {"antecedents": [7, 14], "consequent": 16}, {"antecedents": [8, 15], "consequent": 17}, {"antecedents": [9, 16], "consequent": 18}, {"antecedents": [17, 18], "consequent": 19}, {"antecedents": [11, 19], "consequent": 20}, {"antecedents": [13, 20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Lucas counts a total of 3 confirmed clients + 5 potential clients = 8 clients.; int1 & sent6 -> int2: Each week, he will need a total of 8 clients * 2 bottles of bleach per client = 16 bottles of bleach.; int1 & sent7 -> int3: Each week, he will also need a total of 8 clients * 1 pack of cloths per client = 8 packs of cloths.; int2 & sent8 -> int4: The bottles of bleach will cost him 16 bottles of bleach * $2 per bottle of bleach = $32.; int3 & sent9 -> int5: The packs of cloths will cost him 8 packs of cloths * $5 per pack of cloths = $40.; int4 & int5 -> int6: So each week, Lucas' total expenses will be $32 for bleach + $40 for packs of cloths = $72.; int6 & sent11 -> int7: His profit will therefore be $92 total income - $72 total expenses = $20.; int7 & sent13 -> int8: The answer is 20;", "textual_logical_units": {"1": "Ким открыл свой бизнес по уборке домов и", "2": "считает, какую прибыль он получит от своих клиентов.", "3": "У него уже есть 3 клиента,", "4": "и он ведет переговоры еще с 5-ю потенциальными клиентами.", "5": "Он настолько уверен в успехе, что включил их в свои расчеты.", "6": "Для уборки в каждом доме потребуется по 2 бутылки чистящего средства и", "7": "по упаковке салфеток.", "8": "Чистящее средство стоит по 2 доллара за бутылку, а", "9": "салфетки продаются по 5 долларов за упаковку.", "10": "Других расходов у Кима нет.", "11": "По подсчетам, его общий доход составит 92 доллара в неделю.", "12": "Прибыль — это разница между общим доходом и всеми расходами. Сколько долларов прибыли", "13": "Лукас будет получать каждую неделю?", "14": "Всего у Лукаса 3 подтвержденных клиента + 5 потенциальных клиентов = 8 клиентов.", "15": "Каждую неделю ему нужно будет в общей сложности: 8 клиентов * 2 бутылки чистящего средства на клиента = 16 бутылок чистящего средства.", "16": "Еще ему потребуется на неделю: 8 клиентов * 1 упаковка салфеток на клиента = 8 упаковок салфеток.", "17": "Чистящее средство обойдется ему в: 16 бутылок чистящего средства * 2 доллара за бутылку = 32 доллара.", "18": "За салфетки ему нужно будет заплатить: 8 упаковок салфеток * 5 долларов за упаковку = 40 долларов.", "19": "Таким образом, каждую неделю Лукас будет тратить всего: 32 доллара на чистящее средство и 40 долларов на салфетки = 72 доллара.", "20": "Значит, его прибыль составит: 92 доллара общего дохода – 72 доллара всех расходов = 20 долларов.", "21": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'Ким открыл свой бизнес по уборке домов и',\n  'считает, какую прибыль он получит от своих клиентов.',\n  'У него уже есть 3\\xa0клиента,',\n  'и он ведет переговоры еще с 5-ю\\xa0потенциальными клиентами.',\n  'Он настолько уверен в успехе, что включил их в свои расчеты.',\n  'Для уборки в каждом доме потребуется по 2\\xa0бутылки чистящего средства и',\n  'по упаковке салфеток.',\n  'Чистящее средство стоит по 2\\xa0доллара за бутылку, а',\n  'салфетки продаются по 5\\xa0долларов за упаковку.',\n  'Других расходов у Кима нет.',\n  'По подсчетам, его общий доход составит 92 доллара в неделю.',\n  'Прибыль\\xa0— это разница между общим доходом и всеми расходами. Сколько долларов прибыли']\nquestion = 'Лукас будет получать каждую неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У него уже есть 3\\xa0клиента,', 'и он ведет переговоры еще с 5-ю\\xa0потенциальными клиентами.']\nnew_fact = infer_new_fact(selected) # 'Всего у Лукаса 3\\xa0подтвержденных клиента\\xa0+ 5\\xa0потенциальных клиентов\\xa0=\\xa08\\xa0клиентов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для уборки в каждом доме потребуется по 2\\xa0бутылки чистящего средства и', 'Всего у Лукаса 3\\xa0подтвержденных клиента\\xa0+ 5\\xa0потенциальных клиентов\\xa0=\\xa08\\xa0клиентов.']\nnew_fact = infer_new_fact(selected) # 'Каждую неделю ему нужно будет в общей сложности: 8\\xa0клиентов\\xa0* 2\\xa0бутылки чистящего средства на клиента\\xa0=\\xa016\\xa0бутылок чистящего средства.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['по упаковке салфеток.', 'Всего у Лукаса 3\\xa0подтвержденных клиента\\xa0+ 5\\xa0потенциальных клиентов\\xa0=\\xa08\\xa0клиентов.']\nnew_fact = infer_new_fact(selected) # 'Еще ему потребуется на неделю: 8\\xa0клиентов\\xa0* 1\\xa0упаковка салфеток на клиента\\xa0=\\xa08\\xa0упаковок салфеток.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чистящее средство стоит по 2\\xa0доллара за бутылку, а', 'Каждую неделю ему нужно будет в общей сложности: 8\\xa0клиентов\\xa0* 2\\xa0бутылки чистящего средства на клиента\\xa0=\\xa016\\xa0бутылок чистящего средства.']\nnew_fact = infer_new_fact(selected) # 'Чистящее средство обойдется ему в: 16\\xa0бутылок чистящего средства\\xa0* 2\\xa0доллара за бутылку\\xa0=\\xa032\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['салфетки продаются по 5\\xa0долларов за упаковку.', 'Еще ему потребуется на неделю: 8\\xa0клиентов\\xa0* 1\\xa0упаковка салфеток на клиента\\xa0=\\xa08\\xa0упаковок салфеток.']\nnew_fact = infer_new_fact(selected) # 'За салфетки ему нужно будет заплатить: 8\\xa0упаковок салфеток\\xa0* 5\\xa0долларов за упаковку\\xa0=\\xa040\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чистящее средство обойдется ему в: 16\\xa0бутылок чистящего средства\\xa0* 2\\xa0доллара за бутылку\\xa0=\\xa032\\xa0доллара.', 'За салфетки ему нужно будет заплатить: 8\\xa0упаковок салфеток\\xa0* 5\\xa0долларов за упаковку\\xa0=\\xa040\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, каждую неделю Лукас будет тратить всего: 32\\xa0доллара на чистящее средство и 40\\xa0долларов на салфетки\\xa0=\\xa072\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По подсчетам, его общий доход составит 92 доллара в неделю.', 'Таким образом, каждую неделю Лукас будет тратить всего: 32\\xa0доллара на чистящее средство и 40\\xa0долларов на салфетки\\xa0=\\xa072\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Значит, его прибыль составит: 92\\xa0доллара общего дохода\\xa0– 72\\xa0доллара всех расходов\\xa0=\\xa020\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Лукас будет получать каждую неделю?', 'Значит, его прибыль составит: 92\\xa0доллара общего дохода\\xa0– 72\\xa0доллара всех расходов\\xa0=\\xa020\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_145_1a3e2b62ae", "context": "", "options": [], "answer": "4000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: John has 100 x 10= 1000 pineapples on his field.; sent3 -> int2: John can harvest his Pineapple 12 ÷ 3 = 4 times per year; int1 & int2 -> int3: Therefore John can harvest 1000 x 4 = 4000 pineapples per year.; int3 & sent4 -> int4: The answer is 4000;", "textual_logical_units": {"1": "У Джона 10 гектаров земли, на которой растут ананасы.", "2": "На одном гектаре размещается 100 ананасов.", "3": "Джон может собирать ананасы каждые 3 месяца.", "4": "Сколько ананасов Джон может собрать за год?", "5": "Всего у Джона растет 100 х 10 = 1000 ананасов.", "6": "Джон может собирать ананасы 12 / 3 = 4 раза в год.", "7": "Поэтому Джон может собрать 1000 x 4 = 4000 ананасов в год.", "8": "The answer is 4000"}, "human_translated": true, "code_input": "####\nfacts = ['У Джона 10\\xa0гектаров земли, на которой растут ананасы.', 'На одном гектаре размещается 100\\xa0ананасов.', 'Джон может собирать ананасы каждые 3\\xa0месяца.']\nquestion = 'Сколько ананасов Джон может собрать за год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Джона 10\\xa0гектаров земли, на которой растут ананасы.', 'На одном гектаре размещается 100\\xa0ананасов.']\nnew_fact = infer_new_fact(selected) # 'Всего у Джона растет 100\\xa0х\\xa010\\xa0=\\xa01000\\xa0ананасов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джон может собирать ананасы каждые 3\\xa0месяца.']\nnew_fact = infer_new_fact(selected) # 'Джон может собирать ананасы 12\\xa0/\\xa03\\xa0=\\xa04\\xa0раза в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего у Джона растет 100\\xa0х\\xa010\\xa0=\\xa01000\\xa0ананасов.', 'Джон может собирать ананасы 12\\xa0/\\xa03\\xa0=\\xa04\\xa0раза в год.']\nnew_fact = infer_new_fact(selected) # 'Поэтому Джон может собрать 1000\\xa0x\\xa04\\xa0=\\xa04000\\xa0ананасов в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ананасов Джон может собрать за год?', 'Поэтому Джон может собрать 1000\\xa0x\\xa04\\xa0=\\xa04000\\xa0ананасов в год.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4000'"}
{"id": "GSM8K_146_285833a555", "context": "", "options": [], "answer": "2125", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [3, 4], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The first set had 500 pieces, and the second set had 3 times as many as the first set, so the second set has 500*3=1500 pieces; sent3 & sent4 -> int2: The third set had one-quarter of the 500 pieces, so that means it had 500*.25= 125 pieces; int1 & int2 -> int3: In total, that means Johnny picked up 500 + 1500+ 125= 2125 blocks; int3 & sent5 -> int4: The answer is 2,125;", "textual_logical_units": {"1": "Джонни нужно собрать игрушки, которые лежат на полу в его комнате.", "2": "По полу раскидан набор Лего из 500 деталей,", "3": "еще один набор, в котором деталей в 3 раза больше, чем в первом,", "4": "и третий набор, который содержит 1/4 от количества деталей в первом наборе.", "5": "Сколько деталей придется собрать Джонни, чтобы все убрать?", "6": "В первом наборе 500 деталей, а во втором их в 3 раза больше, значит, во втором наборе 500 * 3 = 1500 деталей.", "7": "Третий набор содержит четверть от 500 деталей, то есть 500 * 0,25 = 125 деталей.", "8": "Это значит, что в общей сложности Джонни нужно собрать 500 + 1500 + 125 = 2125 деталей.", "9": "The answer is 2,125"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джонни нужно собрать игрушки, которые лежат на полу в его комнате.',\n  'По полу раскидан набор Лего из 500 деталей,',\n  'еще один набор, в котором деталей в 3 раза больше, чем в первом,',\n  'и третий набор, который содержит 1/4 от количества деталей в первом наборе.']\nquestion = 'Сколько деталей придется собрать Джонни, чтобы все убрать?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['По полу раскидан набор Лего из 500 деталей,', 'еще один набор, в котором деталей в 3 раза больше, чем в первом,']\nnew_fact = infer_new_fact(selected) # 'В первом наборе 500 деталей, а во втором их в 3 раза больше, значит, во втором наборе 500\\xa0*\\xa03\\xa0=\\xa01500\\xa0деталей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['еще один набор, в котором деталей в 3 раза больше, чем в первом,', 'и третий набор, который содержит 1/4 от количества деталей в первом наборе.']\nnew_fact = infer_new_fact(selected) # 'Третий набор содержит четверть от 500\\xa0деталей, то есть 500\\xa0*\\xa00,25\\xa0=\\xa0125\\xa0деталей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первом наборе 500 деталей, а во втором их в 3 раза больше, значит, во втором наборе 500\\xa0*\\xa03\\xa0=\\xa01500\\xa0деталей.', 'Третий набор содержит четверть от 500\\xa0деталей, то есть 500\\xa0*\\xa00,25\\xa0=\\xa0125\\xa0деталей.']\nnew_fact = infer_new_fact(selected) # 'Это значит, что в общей сложности Джонни нужно собрать 500\\xa0+\\xa01500\\xa0+\\xa0125\\xa0=\\xa02125\\xa0деталей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько деталей придется собрать Джонни, чтобы все убрать?', 'Это значит, что в общей сложности Джонни нужно собрать 500\\xa0+\\xa01500\\xa0+\\xa0125\\xa0=\\xa02125\\xa0деталей.']\nnew_fact = infer_new_fact(selected) # 'The answer is 2,125'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2125'"}
{"id": "GSM8K_147_e799d75f02", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 8}, {"antecedents": [4, 5], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Debra first sees 30 bees leave the hive, then sees 1/2 that many return, 30 x 1/2 = 15 bees that return and 15 bees that are still away from the hive.; sent4 & sent5 -> int2: Debra sees twice as many bees as first left the hive--which was 30--fly from the hive in the next 6 hours, 30 x 2 = 60 bees that leave the hive.; int2 & sent2 -> int3: In total, 30 + 60 = 90 bees left the hive.; int1 & int2 & int3 -> int4: There were 90 bees total that left the hive - 15 bees that already returned = 75 bees that return to the hive in the last 6 hours of the day.; int4 & sent7 -> int5: The answer is 75;", "textual_logical_units": {"1": "Дебра наблюдала за ульем, чтобы узнать, сколько пчел покидают его и возвращаются в течение суток.", "2": "В первые 6 часов из улья вылетели 30 пчел,", "3": "а в следующие 6 часов в улей вернулась 1/2 пчел.", "4": "Затем, в следующие 6 часов, из улья вылетело в два раза больше пчел,", "5": "чем в начале.", "6": "В течение следующих 6 часов в улей вернулись все остальные улетевшие пчелы.", "7": "Сколько пчел, по мнению Дебры, вернулось в улей за последние 6 часов наблюдения?", "8": "Сначала Дебра увидела, что из улья улетело 30 пчел, а затем половина из них вернулась. 30 x 1/2 = 15 пчел вернулось, значит, 15 пчел все еще находятся вдали от улья.", "9": "Дебра заметила, что в течение следующих 6 часов из улья вылетело в два раза больше пчел, чем в начале (тогда их было 30). 30 x 2 = 60 пчел покинули улей.", "10": "Всего улей покинули 30 + 60 = 90 пчел.", "11": "Итого: из улья вылетело 90 пчел – 15 пчел, которые уже вернулись = 75 пчел вернулись в улей за последние 6 часов наблюдения.", "12": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дебра наблюдала за ульем, чтобы узнать, сколько пчел покидают его и возвращаются в течение суток.',\n  'В первые 6\\xa0часов из улья вылетели 30\\xa0пчел,',\n  'а в следующие 6\\xa0часов в улей вернулась 1/2 пчел.',\n  'Затем, в следующие 6\\xa0часов, из улья вылетело в два раза больше пчел,',\n  'чем в начале.',\n  'В течение следующих 6\\xa0часов в улей вернулись все остальные улетевшие пчелы.']\nquestion = 'Сколько пчел, по мнению Дебры, вернулось в улей за последние 6\\xa0часов наблюдения?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В первые 6\\xa0часов из улья вылетели 30\\xa0пчел,', 'а в следующие 6\\xa0часов в улей вернулась 1/2 пчел.']\nnew_fact = infer_new_fact(selected) # 'Сначала Дебра увидела, что из улья улетело 30\\xa0пчел, а затем половина из них вернулась. 30\\xa0x\\xa01/2\\xa0=\\xa015\\xa0пчел вернулось, значит, 15\\xa0пчел все еще находятся вдали от улья.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем, в следующие 6\\xa0часов, из улья вылетело в два раза больше пчел,', 'чем в начале.']\nnew_fact = infer_new_fact(selected) # 'Дебра заметила, что в течение следующих 6\\xa0часов из улья вылетело в два раза больше пчел, чем в начале (тогда их было\\xa030). 30\\xa0x\\xa02\\xa0=\\xa060\\xa0пчел покинули улей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первые 6\\xa0часов из улья вылетели 30\\xa0пчел,', 'Дебра заметила, что в течение следующих 6\\xa0часов из улья вылетело в два раза больше пчел, чем в начале (тогда их было\\xa030). 30\\xa0x\\xa02\\xa0=\\xa060\\xa0пчел покинули улей.']\nnew_fact = infer_new_fact(selected) # 'Всего улей покинули 30\\xa0+\\xa060\\xa0=\\xa090\\xa0пчел.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала Дебра увидела, что из улья улетело 30\\xa0пчел, а затем половина из них вернулась. 30\\xa0x\\xa01/2\\xa0=\\xa015\\xa0пчел вернулось, значит, 15\\xa0пчел все еще находятся вдали от улья.', 'Дебра заметила, что в течение следующих 6\\xa0часов из улья вылетело в два раза больше пчел, чем в начале (тогда их было\\xa030). 30\\xa0x\\xa02\\xa0=\\xa060\\xa0пчел покинули улей.', 'Всего улей покинули 30\\xa0+\\xa060\\xa0=\\xa090\\xa0пчел.']\nnew_fact = infer_new_fact(selected) # 'Итого: из улья вылетело 90\\xa0пчел\\xa0– 15\\xa0пчел, которые уже вернулись\\xa0=\\xa075\\xa0пчел вернулись в улей за последние 6\\xa0часов наблюдения.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько пчел, по мнению Дебры, вернулось в улей за последние 6\\xa0часов наблюдения?', 'Итого: из улья вылетело 90\\xa0пчел\\xa0– 15\\xa0пчел, которые уже вернулись\\xa0=\\xa075\\xa0пчел вернулись в улей за последние 6\\xa0часов наблюдения.']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_148_7aade7d21e", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: The total cost of the tickets is 12+10=22 dollars.; int1 & sent4 -> int2: Brittany's mom gave the cashier 22+8=30 dollars.; int2 & sent4 & sent5 -> int3: The answer is 30;", "textual_logical_units": {"1": "Бриттани с мамой пошли в музей.", "2": "Входной билет стоит 12 долларов для взрослых и 10 долларов для детей.", "3": "Мама Бриттани заплатила за 1 детский и 1 взрослый билет.", "4": "Она получила сдачу 8 долларов. Сколько долларов", "5": "она дала кассиру?", "6": "Общая стоимость билетов: 12 + 10 = 22 доллара.", "7": "Мама Бриттани дала кассиру 22 + 8 = 30 долларов.", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = [ 'Бриттани с мамой пошли в музей.',\n  'Входной билет стоит 12\\xa0долларов для взрослых и 10\\xa0долларов для детей.',\n  'Мама Бриттани заплатила за 1\\xa0детский и 1\\xa0взрослый билет.',\n  'Она получила сдачу 8\\xa0долларов. Сколько долларов']\nquestion = 'она дала кассиру?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Входной билет стоит 12\\xa0долларов для взрослых и 10\\xa0долларов для детей.']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость билетов: 12\\xa0+\\xa010\\xa0=\\xa022\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она получила сдачу 8\\xa0долларов. Сколько долларов', 'Общая стоимость билетов: 12\\xa0+\\xa010\\xa0=\\xa022\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Мама Бриттани дала кассиру 22\\xa0+\\xa08\\xa0=\\xa030\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она получила сдачу 8\\xa0долларов. Сколько долларов', 'она дала кассиру?', 'Мама Бриттани дала кассиру 22\\xa0+\\xa08\\xa0=\\xa030\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_149_72eee8020e", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Dorothy has 12 / 3 = 4 Facebook friends.; sent1 & sent2 -> int2: James has 4 * 4 = 16 Facebook friends.; int2 & sent4 -> int3: The answer is 16;", "textual_logical_units": {"1": "У Чарли в три раза больше друзей в Facebook, чем у Дороти.", "2": "У Джеймса в четыре раза больше друзей в Facebook, чем у Дороти.", "3": "Если у Чарли в Facebook 12 друзей,", "4": "сколько друзей в Facebook у Джеймса?", "5": "У Дороти в Facebook 12 / 3 = 4 друга.", "6": "У Джеймса 4 * 4 = 16 друзей в Facebook.", "7": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Чарли в три раза больше друзей в Facebook, чем у Дороти.',\n  'У Джеймса в четыре раза больше друзей в Facebook, чем у Дороти.',\n  'Если у Чарли в Facebook 12\\xa0друзей,']\nquestion = 'сколько друзей в Facebook у Джеймса?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Чарли в три раза больше друзей в Facebook, чем у Дороти.', 'Если у Чарли в Facebook 12\\xa0друзей,']\nnew_fact = infer_new_fact(selected) # 'У Дороти в Facebook 12\\xa0/\\xa03\\xa0=\\xa04\\xa0друга.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Чарли в три раза больше друзей в Facebook, чем у Дороти.', 'У Джеймса в четыре раза больше друзей в Facebook, чем у Дороти.']\nnew_fact = infer_new_fact(selected) # 'У Джеймса 4\\xa0*\\xa04\\xa0=\\xa016\\xa0друзей в Facebook.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько друзей в Facebook у Джеймса?', 'У Джеймса 4\\xa0*\\xa04\\xa0=\\xa016\\xa0друзей в Facebook.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_150_f1d3e40732", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent4 -> int1: Steve has to travel 3 miles * (5280 feet/1 mile) = 15840 feet to get home.; int1 & sent5 -> int2: It will take Steve 15840 feet / (440 feet/minute) = 36 minutes to get home.; sent6 -> int3: Tim has to travel 2 miles * (5280 feet/1 mile) = 10560 feet to get home.; int3 & sent7 -> int4: It will take Tim 10560 feet / (264 feet/minute) = 40 minutes to get home.; int2 & int4 -> int5: Steve will finish the race in 40 minutes - 36 minutes = 4 minutes less time than Tim.; int5 & sent8 -> int6: The answer is 4;", "textual_logical_units": {"1": "Стив и Тим решили узнать, кто быстрее доберется домой из школы.", "2": "Стив живет от школы дальше, чем Тим,", "3": "поэтому он поедет на велосипеде.", "4": "Стив живет в 3 милях от школы и", "5": "ездит на велосипеде со скоростью 440 футов в минуту.", "6": "Тим живет в 2 милях от школы.", "7": "Если Тим поедет на скейтборде со скоростью 264 фута в минуту,", "8": "сколько времени добравшийся до дома победитель будет ждать, пока проигравший завершит состязание?", "9": "Чтобы добраться до дома, Стиву нужно проехать 3 мили. 1 миля = 5280 футов, значит, 3 мили * 5280 футов = 15 840 футов.", "10": "Стиву потребуется: 15 840 футов / 440 футов в минуту = 36 минут, чтобы добраться до дома.", "11": "Тиму, чтобы попасть домой, нужно проехать 2 мили * 5280 футов в 1 миле = 10 560 футов.", "12": "Чтобы оказаться дома, Тиму потребуется: 10 560 футов / 264 фута в минуту = 40 минут.", "13": "Стив завершит гонку: 40 минут – 36 минут = на 4 минуты раньше Тима.", "14": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = [ 'Стив и Тим решили узнать, кто быстрее доберется домой из школы.',\n  'Стив живет от школы дальше, чем Тим,',\n  'поэтому он поедет на велосипеде.',\n  'Стив живет в 3\\xa0милях от школы и',\n  'ездит на велосипеде со скоростью 440\\xa0футов в минуту.',\n  'Тим живет в 2\\xa0милях от школы.',\n  'Если Тим поедет на скейтборде со скоростью 264\\xa0фута в минуту,']\nquestion = 'сколько времени добравшийся до дома победитель будет ждать, пока проигравший завершит состязание?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Стив живет в 3\\xa0милях от школы и']\nnew_fact = infer_new_fact(selected) # 'Чтобы добраться до дома, Стиву нужно проехать 3\\xa0мили. 1\\xa0миля\\xa0=\\xa05280\\xa0футов, значит, 3\\xa0мили\\xa0* 5280\\xa0футов\\xa0=\\xa015\\xa0840\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ездит на велосипеде со скоростью 440\\xa0футов в минуту.', 'Чтобы добраться до дома, Стиву нужно проехать 3\\xa0мили. 1\\xa0миля\\xa0=\\xa05280\\xa0футов, значит, 3\\xa0мили\\xa0* 5280\\xa0футов\\xa0=\\xa015\\xa0840\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Стиву потребуется: 15\\xa0840\\xa0футов\\xa0/ 440\\xa0футов в минуту\\xa0=\\xa036\\xa0минут, чтобы добраться до дома.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тим живет в 2\\xa0милях от школы.']\nnew_fact = infer_new_fact(selected) # 'Тиму, чтобы попасть домой, нужно проехать 2\\xa0мили\\xa0*\\xa05280 футов в 1\\xa0миле\\xa0=\\xa010\\xa0560\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Тим поедет на скейтборде со скоростью 264\\xa0фута в минуту,', 'Тиму, чтобы попасть домой, нужно проехать 2\\xa0мили\\xa0*\\xa05280 футов в 1\\xa0миле\\xa0=\\xa010\\xa0560\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы оказаться дома, Тиму потребуется: 10\\xa0560\\xa0футов\\xa0/ 264\\xa0фута в минуту\\xa0=\\xa040\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Стиву потребуется: 15\\xa0840\\xa0футов\\xa0/ 440\\xa0футов в минуту\\xa0=\\xa036\\xa0минут, чтобы добраться до дома.', 'Чтобы оказаться дома, Тиму потребуется: 10\\xa0560\\xa0футов\\xa0/ 264\\xa0фута в минуту\\xa0=\\xa040\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Стив завершит гонку: 40\\xa0минут\\xa0– 36\\xa0минут\\xa0=\\xa0на 4\\xa0минуты раньше Тима.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько времени добравшийся до дома победитель будет ждать, пока проигравший завершит состязание?', 'Стив завершит гонку: 40\\xa0минут\\xa0– 36\\xa0минут\\xa0=\\xa0на 4\\xa0минуты раньше Тима.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_151_f3b92f8ee7", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [6], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent4 -> int1: There were 10 bike tires to fill up because 2 times 5 equals 10.; sent5 -> int2: There were 9 tricycle tires to fill up because 3 times 3 equals 9.; sent6 -> int3: There was one unicycle tire to fill up because 1 times 1 equals 1.; int1 & int2 & int3 -> int4: There were 20 total tires to fill up because 10 plus 9 plus 1 equals 20.; int4 & sent3 -> int5: She made $5 because 20 times .25 equals 5.; int5 & sent7 -> int6: The answer is 5;", "textual_logical_units": {"1": "Шонда знает, что у многих детей, живущих по соседству, есть велосипеды.", "2": "Поэтому она решила предложить им услуги по накачке шин.", "3": "Накачать одну шину стоит 25 центов.", "4": "В первый день к ней обратились 5 велосипедистов, чтобы накачать обе шины.", "5": "Трое ребят приехали на трехколесных велосипедах, чтобы накачать все шины.", "6": "Еще у одного клиента оказался моноцикл.", "7": "Сколько долларов Шонда заработала за этот день?", "8": "Ей нужно было накачать 10 велосипедных шин, так как 2, умноженное на 5, равно 10.", "9": "Далее она накачала 9 шин у трехколесных велосипедов: 3, умноженное на 3, равно 9.", "10": "Еще она накачала одну шину у моноцикла: 1, умноженное на 1, равно 1.", "11": "Всего она накачала 20 шин: 10 плюс 9 плюс 1 равно 20.", "12": "Она заработала 5 долларов, потому что 20, умноженное на 0,25, равно 5.", "13": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'Шонда знает, что у многих детей, живущих по соседству, есть велосипеды.',\n  'Поэтому она решила предложить им услуги по накачке шин.',\n  'Накачать одну шину стоит 25\\xa0центов.',\n  'В первый день к ней обратились 5\\xa0велосипедистов, чтобы накачать обе шины.',\n  'Трое ребят приехали на трехколесных велосипедах, чтобы накачать все шины.',\n  'Еще у одного клиента оказался моноцикл.']\nquestion = 'Сколько долларов Шонда заработала за этот день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В первый день к ней обратились 5\\xa0велосипедистов, чтобы накачать обе шины.']\nnew_fact = infer_new_fact(selected) # 'Ей нужно было накачать 10\\xa0велосипедных шин, так как 2,\\xa0умноженное на\\xa05, равно\\xa010.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Трое ребят приехали на трехколесных велосипедах, чтобы накачать все шины.']\nnew_fact = infer_new_fact(selected) # 'Далее она накачала 9\\xa0шин у трехколесных велосипедов: 3,\\xa0умноженное на\\xa03, равно\\xa09.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Еще у одного клиента оказался моноцикл.']\nnew_fact = infer_new_fact(selected) # 'Еще она накачала одну шину у моноцикла: 1,\\xa0умноженное на\\xa01, равно\\xa01.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ей нужно было накачать 10\\xa0велосипедных шин, так как 2,\\xa0умноженное на\\xa05, равно\\xa010.', 'Далее она накачала 9\\xa0шин у трехколесных велосипедов: 3,\\xa0умноженное на\\xa03, равно\\xa09.', 'Еще она накачала одну шину у моноцикла: 1,\\xa0умноженное на\\xa01, равно\\xa01.']\nnew_fact = infer_new_fact(selected) # 'Всего она накачала 20\\xa0шин: 10\\xa0плюс 9\\xa0плюс\\xa01 равно\\xa020.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Накачать одну шину стоит 25\\xa0центов.', 'Всего она накачала 20\\xa0шин: 10\\xa0плюс 9\\xa0плюс\\xa01 равно\\xa020.']\nnew_fact = infer_new_fact(selected) # 'Она заработала 5\\xa0долларов, потому что 20,\\xa0умноженное на\\xa00,25, равно\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов Шонда заработала за этот день?', 'Она заработала 5\\xa0долларов, потому что 20,\\xa0умноженное на\\xa00,25, равно\\xa05.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_152_98659db184", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: A pack of cookies costs 6 x $0.10 = $0.60.; int1 & sent1 -> int2: Thus, ten packs of cookies cost 10 x $0.6 = $6.; int2 & sent4 -> int3: Therefore, Carl will receive a $10 - $6 = $4 change.; int3 & sent4 -> int4: The answer is 4;", "textual_logical_units": {"1": "Карл купил десять пачек печенья.", "2": "В каждой пачке по шесть печений.", "3": "Каждое печенье стоит 0,10 доллара.", "4": "Сколько сдачи получит Карл, если заплатит купюрой в 10 долларов?", "5": "Пачка печенья стоит 6 x 0,10 доллара = 0,60 доллара.", "6": "Следовательно, десять пачек печенья стоят 10 x 0,6 доллара = 6 долларов.", "7": "Таким образом, Карл получит 10 – 6 долларов = 4 доллара сдачи.", "8": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['Карл купил десять пачек печенья.', 'В каждой пачке по шесть печений.', 'Каждое печенье стоит 0,10\\xa0доллара.']\nquestion = 'Сколько сдачи получит Карл, если заплатит купюрой в 10\\xa0долларов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В каждой пачке по шесть печений.', 'Каждое печенье стоит 0,10\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Пачка печенья стоит 6\\xa0x\\xa00,10\\xa0доллара\\xa0=\\xa00,60\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Карл купил десять пачек печенья.', 'Пачка печенья стоит 6\\xa0x\\xa00,10\\xa0доллара\\xa0=\\xa00,60\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, десять пачек печенья стоят 10\\xa0x\\xa00,6\\xa0доллара\\xa0=\\xa06\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сдачи получит Карл, если заплатит купюрой в 10\\xa0долларов?', 'Следовательно, десять пачек печенья стоят 10\\xa0x\\xa00,6\\xa0доллара\\xa0=\\xa06\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, Карл получит 10\\xa0–\\xa06\\xa0долларов\\xa0=\\xa04\\xa0доллара сдачи.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сдачи получит Карл, если заплатит купюрой в 10\\xa0долларов?', 'Таким образом, Карл получит 10\\xa0–\\xa06\\xa0долларов\\xa0=\\xa04\\xa0доллара сдачи.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_153_9c58c3ed07", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [4, 5], "consequent": 10}, {"antecedents": [7], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}, {"antecedents": [9, 10, 11, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Dave ate 14 french fries, so the seagull ate 14 * 1/2 = 14 / 2 = 7 fries.; sent4 & sent5 -> int2: The 3 pigeons ate 3 each, so they ate 3 * 3 = 9 fries.; sent7 -> int3: The ants took one french fry, so there were 5 + 1 = 6 after the racoon took some.; int3 & sent6 -> int4: The raccoon left 1/3 behind, so there were 6 * 3 = 18 fries before the raccoon took any.; int1 & int2 & int3 & int4 -> int5: Thus, the pack had 14 + 7 + 9 + 18 = 48 fries in it when Dave bought it.; int5 & sent8 -> int6: The answer is 48;", "textual_logical_units": {"1": "Дэйв купил большой пакет картофеля фри и", "2": "успел съесть четырнадцать ломтиков, прежде чем голодная чайка вырвала пакет у него из рук.", "3": "Приземлившись, чайка съела вдвое меньше ломтиков картофеля, чем успел съесть Дэйв.", "4": "Затем три голубя отогнали ее от еды,", "5": "и каждый голубь съел по три ломтика картофеля.", "6": "Две трети оставшегося картофеля стащил енот.", "7": "Наконец, один ломтик унесли муравьи, и в пакете их осталось всего пять.", "8": "Сколько ломтиков картофеля было в пакете, когда Дэйв его купил?", "9": "Дэйв съел 14 ломтиков картофеля, а значит, чайка съела 14 * 1/2 = 14 / 2 = 7 ломтиков.", "10": "Три голубя съели по 3 ломтика каждый, то есть 3 * 3 = 9 ломтиков.", "11": "Один ломтик унесли муравьи, значит, после енота, который съел часть картофеля, в пакете осталось 5 + 1 = 6 ломтиков.", "12": "После енота осталась 1/3 картофеля, значит, когда он только нашел пакет, в нем было 6 * 3 = 18 ломтиков картофеля.", "13": "Следовательно, в пакете, купленном Дэйвом, изначально было 14 + 7 + 9 + 18 = 48 ломтиков картофеля.", "14": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дэйв купил большой пакет картофеля фри и',\n  'успел съесть четырнадцать ломтиков, прежде чем голодная чайка вырвала пакет у него из рук.',\n  'Приземлившись, чайка съела вдвое меньше ломтиков картофеля, чем успел съесть Дэйв.',\n  'Затем три голубя отогнали ее от еды,',\n  'и каждый голубь съел по три ломтика картофеля.',\n  'Две трети оставшегося картофеля стащил енот.',\n  'Наконец, один ломтик унесли муравьи, и в пакете их осталось всего пять.']\nquestion = 'Сколько ломтиков картофеля было в пакете, когда Дэйв его купил?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['успел съесть четырнадцать ломтиков, прежде чем голодная чайка вырвала пакет у него из рук.', 'Приземлившись, чайка съела вдвое меньше ломтиков картофеля, чем успел съесть Дэйв.']\nnew_fact = infer_new_fact(selected) # 'Дэйв съел 14 ломтиков картофеля, а значит, чайка съела 14\\xa0*\\xa01/2\\xa0= 14\\xa0/\\xa02\\xa0=\\xa07\\xa0ломтиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем три голубя отогнали ее от еды,', 'и каждый голубь съел по три ломтика картофеля.']\nnew_fact = infer_new_fact(selected) # 'Три голубя съели по 3\\xa0ломтика каждый, то есть 3\\xa0*\\xa03\\xa0=\\xa09\\xa0ломтиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Наконец, один ломтик унесли муравьи, и в пакете их осталось всего пять.']\nnew_fact = infer_new_fact(selected) # 'Один ломтик унесли муравьи, значит, после енота, который съел часть картофеля, в пакете осталось 5\\xa0+\\xa01\\xa0=\\xa06\\xa0ломтиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Две трети оставшегося картофеля стащил енот.', 'Один ломтик унесли муравьи, значит, после енота, который съел часть картофеля, в пакете осталось 5\\xa0+\\xa01\\xa0=\\xa06\\xa0ломтиков.']\nnew_fact = infer_new_fact(selected) # 'После енота осталась 1/3\\xa0картофеля, значит, когда он только нашел пакет, в нем было 6\\xa0*\\xa03\\xa0=\\xa018\\xa0ломтиков картофеля.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Дэйв съел 14 ломтиков картофеля, а значит, чайка съела 14\\xa0*\\xa01/2\\xa0= 14\\xa0/\\xa02\\xa0=\\xa07\\xa0ломтиков.', 'Три голубя съели по 3\\xa0ломтика каждый, то есть 3\\xa0*\\xa03\\xa0=\\xa09\\xa0ломтиков.', 'Один ломтик унесли муравьи, значит, после енота, который съел часть картофеля, в пакете осталось 5\\xa0+\\xa01\\xa0=\\xa06\\xa0ломтиков.', 'После енота осталась 1/3\\xa0картофеля, значит, когда он только нашел пакет, в нем было 6\\xa0*\\xa03\\xa0=\\xa018\\xa0ломтиков картофеля.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в пакете, купленном Дэйвом, изначально было 14\\xa0+\\xa07\\xa0+\\xa09\\xa0+\\xa018\\xa0=\\xa048\\xa0ломтиков картофеля.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ломтиков картофеля было в пакете, когда Дэйв его купил?', 'Следовательно, в пакете, купленном Дэйвом, изначально было 14\\xa0+\\xa07\\xa0+\\xa09\\xa0+\\xa018\\xa0=\\xa048\\xa0ломтиков картофеля.']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_154_9c702ca983", "context": "", "options": [], "answer": "272", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}, {"antecedents": [5, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Kimo spends 3 x 1 = 3 hours in class on any given Monday, Wednesday or Friday.; int1 -> int2: Each week, he spends 3 x 3 = 9 hours in class on Monday, Wednesday, and Friday.; int2 & sent4 -> int3: In one semester, he spends 9 x 16 = 144 hours in class for Monday, Wednesday, and Friday.; sent3 -> int4: He spends 2 x 2 = 4 hours in class on any given Tuesday or Thursday.; int4 -> int5: Each week, he spends 4 x 2 = 8 hours in class on Tuesday and Thursday.; int4 & int5 -> int6: In one semester, he spends 8 x 16 = 128 hours in class on Tuesday and Thursday.; int3 & int6 -> int7: In total for one semester, Kimo spends 144 + 128 = 272 hours attending classes.; int7 & sent5 -> int8: The answer is 272;", "textual_logical_units": {"1": "У студента Кимо по понедельникам, средам и пятницам", "2": "три занятия, каждое из которых длится по 1 часу.", "3": "По вторникам и четвергам у него по два 2-часовых занятия.", "4": "Один семестр включает 16 недель.", "5": "Сколько часов Кимо проводит на занятиях в течение одного семестра?", "6": "Каждый понедельник, среду и пятницу занятия занимают у Кимо: 3 x 1 = 3 часа.", "7": "То есть, в общей сложности по этим дням он проводит в аудитории 3 x 3 = 9 часов в неделю.", "8": "Итого за семестр по понедельникам, средам и пятницам занятия занимают у него 9 x 16 = 144 часа.", "9": "Каждый вторник или четверг он проводит на занятиях 2 x 2 = 4 часа.", "10": "То есть, в общей сложности по этим дням он находится в аудитории 4 x 2 = 8 часов в неделю.", "11": "Итого за семестр по вторникам и четвергам он проводит на занятиях 8 x 16 = 128 часов.", "12": "В общей сложности в течение одного семестра Кимо посвящает учебным занятиям 144 + 128 = 272 часа.", "13": "The answer is 272"}, "human_translated": true, "code_input": "####\nfacts = [ 'У студента Кимо по понедельникам, средам и пятницам',\n  'три занятия, каждое из которых длится по 1\\xa0часу.',\n  'По вторникам и четвергам у него по два 2-часовых занятия.',\n  'Один семестр включает 16\\xa0недель.']\nquestion = 'Сколько часов Кимо проводит на занятиях в течение одного семестра?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У студента Кимо по понедельникам, средам и пятницам', 'три занятия, каждое из которых длится по 1\\xa0часу.']\nnew_fact = infer_new_fact(selected) # 'Каждый понедельник, среду и пятницу занятия занимают у Кимо: 3\\xa0x\\xa01\\xa0=\\xa03\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый понедельник, среду и пятницу занятия занимают у Кимо: 3\\xa0x\\xa01\\xa0=\\xa03\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'То есть, в общей сложности по этим дням он проводит в аудитории 3\\xa0x\\xa03\\xa0=\\xa09\\xa0часов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один семестр включает 16\\xa0недель.', 'То есть, в общей сложности по этим дням он проводит в аудитории 3\\xa0x\\xa03\\xa0=\\xa09\\xa0часов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Итого за семестр по понедельникам, средам и пятницам занятия занимают у него 9\\xa0x\\xa016\\xa0=\\xa0144\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По вторникам и четвергам у него по два 2-часовых занятия.']\nnew_fact = infer_new_fact(selected) # 'Каждый вторник или четверг он проводит на занятиях 2\\xa0x\\xa02\\xa0=\\xa04\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый вторник или четверг он проводит на занятиях 2\\xa0x\\xa02\\xa0=\\xa04\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'То есть, в общей сложности по этим дням он находится в аудитории 4\\xa0x\\xa02\\xa0=\\xa08\\xa0часов в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый вторник или четверг он проводит на занятиях 2\\xa0x\\xa02\\xa0=\\xa04\\xa0часа.', 'То есть, в общей сложности по этим дням он находится в аудитории 4\\xa0x\\xa02\\xa0=\\xa08\\xa0часов в неделю.']\nnew_fact = infer_new_fact(selected) # 'Итого за семестр по вторникам и четвергам он проводит на занятиях 8\\xa0x\\xa016\\xa0=\\xa0128\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Итого за семестр по понедельникам, средам и пятницам занятия занимают у него 9\\xa0x\\xa016\\xa0=\\xa0144\\xa0часа.', 'Итого за семестр по вторникам и четвергам он проводит на занятиях 8\\xa0x\\xa016\\xa0=\\xa0128\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности в течение одного семестра Кимо посвящает учебным занятиям 144\\xa0+\\xa0128\\xa0=\\xa0272\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов Кимо проводит на занятиях в течение одного семестра?', 'В общей сложности в течение одного семестра Кимо посвящает учебным занятиям 144\\xa0+\\xa0128\\xa0=\\xa0272\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'The answer is 272'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '272'"}
{"id": "GSM8K_155_027f6a23d5", "context": "", "options": [], "answer": "280", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 5], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [7, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find the total length of the rolls: 300 rolls * 4 inches/roll = 1200 inches; sent1 & sent4 -> int2: Then find the total length of the croissants: 120 rolls * 6 inches/roll = 720 inches; int1 & int2 -> int3: Then add the length of the rolls and croissants to find the total length in inches: 1200 inches + 720 inches = 1920 inches; int3 -> int4: Then divide the total length by 12 inches per foot to find the length in feet: 1920 inches / 12 inches/foot = 160 feet; sent2 & sent5 -> int5: Then find the total length of the baguettes: 60 baguettes * 2 feet/baguette = 120 feet; int4 & int5 -> int6: Then add the length of the other baked goods in feet to find the total length: 120 feet + 160 feet = 280 feet; int6 & sent7 -> int7: The answer is 280;", "textual_logical_units": {"1": "Билл ежедневно готовит 300 булочек, 120 круассанов с шоколадом", "2": "и 60 багетов.", "3": "Длина каждой булочки — 4 дюйма,", "4": "круассана — 6 дюймов,", "5": "а багета — два фута.", "6": "Если Билл выложит все свои изделия цепочкой концами друг к другу,", "7": "сколько футов длины будет в этой цепочке?", "8": "Сначала надо найти общую длину булочек: 300 булочек * 4 дюйма в булочке = 1200 дюймов.", "9": "Затем нужно узнать общую длину круассанов: 120 круассанов * 6 дюймов в круассане = 720 дюймов.", "10": "Затем нужно сложить получившиеся длины булочек и круассанов, чтобы вычислить их общую длину в дюймах: 1200 дюймов + 720 дюймов = 1920 дюймов.", "11": "Далее нужно узнать, сколько это будет в футах. В 1 футе 12 дюймов. Нужно разделить полученную общую длину на 12 дюймов. 1920 дюймов / 12 дюймов в футе = 160 футов.", "12": "Теперь нужно вычислить общую длину багетов: 60 багетов * 2 фута в багете = 120 футов", "13": "Чтобы вычислить общую длину, нужно прибавить к этому значению длину других хлебобулочных изделий: 120 футов + 160 футов = 280 футов.", "14": "The answer is 280"}, "human_translated": true, "code_input": "####\nfacts = [ 'Билл ежедневно готовит 300\\xa0булочек, 120\\xa0круассанов с шоколадом',\n  'и 60\\xa0багетов.',\n  'Длина каждой булочки\\xa0— 4\\xa0дюйма,',\n  'круассана\\xa0— 6\\xa0дюймов,',\n  'а багета\\xa0— два фута.',\n  'Если Билл выложит все свои изделия цепочкой концами друг к другу,']\nquestion = 'сколько футов длины будет в этой цепочке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Билл ежедневно готовит 300\\xa0булочек, 120\\xa0круассанов с шоколадом', 'Длина каждой булочки\\xa0— 4\\xa0дюйма,']\nnew_fact = infer_new_fact(selected) # 'Сначала надо найти общую длину булочек: 300\\xa0булочек\\xa0* 4\\xa0дюйма в булочке\\xa0=\\xa01200\\xa0дюймов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Билл ежедневно готовит 300\\xa0булочек, 120\\xa0круассанов с шоколадом', 'круассана\\xa0— 6\\xa0дюймов,']\nnew_fact = infer_new_fact(selected) # 'Затем нужно узнать общую длину круассанов: 120\\xa0круассанов\\xa0* 6\\xa0дюймов в круассане\\xa0=\\xa0720\\xa0дюймов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала надо найти общую длину булочек: 300\\xa0булочек\\xa0* 4\\xa0дюйма в булочке\\xa0=\\xa01200\\xa0дюймов.', 'Затем нужно узнать общую длину круассанов: 120\\xa0круассанов\\xa0* 6\\xa0дюймов в круассане\\xa0=\\xa0720\\xa0дюймов.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно сложить получившиеся длины булочек и круассанов, чтобы вычислить их общую длину в дюймах: 1200\\xa0дюймов\\xa0+ 720\\xa0дюймов\\xa0=\\xa01920\\xa0дюймов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем нужно сложить получившиеся длины булочек и круассанов, чтобы вычислить их общую длину в дюймах: 1200\\xa0дюймов\\xa0+ 720\\xa0дюймов\\xa0=\\xa01920\\xa0дюймов.']\nnew_fact = infer_new_fact(selected) # 'Далее нужно узнать, сколько это будет в футах. В 1\\xa0футе 12\\xa0дюймов. Нужно разделить полученную общую длину на 12 дюймов. 1920\\xa0дюймов\\xa0/\\xa012\\xa0дюймов в футе\\xa0=\\xa0160\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 60\\xa0багетов.', 'а багета\\xa0— два фута.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно вычислить общую длину багетов: 60\\xa0багетов\\xa0* 2\\xa0фута в багете\\xa0=\\xa0120\\xa0футов'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Далее нужно узнать, сколько это будет в футах. В 1\\xa0футе 12\\xa0дюймов. Нужно разделить полученную общую длину на 12 дюймов. 1920\\xa0дюймов\\xa0/\\xa012\\xa0дюймов в футе\\xa0=\\xa0160\\xa0футов.', 'Теперь нужно вычислить общую длину багетов: 60\\xa0багетов\\xa0* 2\\xa0фута в багете\\xa0=\\xa0120\\xa0футов']\nnew_fact = infer_new_fact(selected) # 'Чтобы вычислить общую длину, нужно прибавить к этому значению длину других хлебобулочных изделий: 120\\xa0футов\\xa0+ 160\\xa0футов\\xa0=\\xa0280\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько футов длины будет в этой цепочке?', 'Чтобы вычислить общую длину, нужно прибавить к этому значению длину других хлебобулочных изделий: 120\\xa0футов\\xa0+ 160\\xa0футов\\xa0=\\xa0280\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 280'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '280'"}
{"id": "GSM8K_156_540db09172", "context": "", "options": [], "answer": "1400", "reasoning_graph_edges": [{"antecedents": [3, 4, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 & sent5 -> int1: The total number of bananas the prime apes need every month is 200+400+100= 700.; int1 & sent2 -> int2: Therefore in 2 months, the total number of bananas they need is 700x2= 1400.; int2 & sent6 -> int3: The answer is 1400;", "textual_logical_units": {"1": "Для кормления обезьян хозяин зоопарка", "2": "каждые 2 месяца скупает все бананы у местного фермера.", "3": "В месяц мартышки съедают 200 бананов,", "4": "гориллы — 400 бананов,", "5": "а бабуины — 100 бананов.", "6": "Сколько нужно заказать бананов, чтобы обезьянам их хватило на 2 месяца?", "7": "В общей сложности в месяц обезьянам требуется 200 + 400 + 100 = 700 бананов.", "8": "Следовательно, на 2 месяца им потребуется всего 700 x 2 = 1400 бананов.", "9": "The answer is 1400"}, "human_translated": true, "code_input": "####\nfacts = [ 'Для кормления обезьян хозяин зоопарка',\n  'каждые 2\\xa0месяца скупает все бананы у местного фермера.',\n  'В месяц мартышки съедают 200\\xa0бананов,',\n  'гориллы\\xa0— 400\\xa0бананов,',\n  'а бабуины\\xa0— 100\\xa0бананов.']\nquestion = 'Сколько нужно заказать бананов, чтобы обезьянам их хватило на 2\\xa0месяца?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В месяц мартышки съедают 200\\xa0бананов,', 'гориллы\\xa0— 400\\xa0бананов,', 'а бабуины\\xa0— 100\\xa0бананов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности в месяц обезьянам требуется 200\\xa0+\\xa0400\\xa0+\\xa0100\\xa0=\\xa0700\\xa0бананов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каждые 2\\xa0месяца скупает все бананы у местного фермера.', 'В общей сложности в месяц обезьянам требуется 200\\xa0+\\xa0400\\xa0+\\xa0100\\xa0=\\xa0700\\xa0бананов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, на 2 месяца им потребуется всего 700\\xa0x\\xa02\\xa0=\\xa01400\\xa0бананов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько нужно заказать бананов, чтобы обезьянам их хватило на 2\\xa0месяца?', 'Следовательно, на 2 месяца им потребуется всего 700\\xa0x\\xa02\\xa0=\\xa01400\\xa0бананов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1400'"}
{"id": "GSM8K_157_7e2d012ec1", "context": "", "options": [], "answer": "80", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 2, 4], "consequent": 11}, {"antecedents": [4, 6], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}, {"antecedents": [11, 13], "consequent": 14}, {"antecedents": [10, 14], "consequent": 15}, {"antecedents": [9, 10, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [8, 16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Blake runs 200 yards for each back and forth because 100 x 2 = 200; int1 & sent3 -> int2: He runs 3000 yards in total because 200 x 15 = 3000; sent1 & sent2 & sent4 -> int3: Kelly runs 200 yards at first because 100 x 2 = 200; sent4 & sent6 -> int4: She runs 80 yards each time she does a back and forth to the 40-yard line because 40 x 2 = 80; int4 & sent7 -> int5: She runs 2720 from these back and forth because 34 x 80 = 2720; int3 & int5 -> int6: She runs 2920 in total because 2720 + 200 = 2920; int2 & int6 -> int7: Blake won because 3000 > 2920; int1 & int2 & int3 & int4 & int5 & int6 & int7 -> int8: The winner ran 80 yards more than the loser because 3000 - 2920 = 80; int8 & sent8 -> int9: The answer is 80;", "textual_logical_units": {"1": "Блейк и Келли решили узнать, кто больше пробежит за 15 минут.", "2": "Они пошли бегать на футбольное поле длиной 100 ярдов.", "3": "Блейк пробежал туда и обратно 15 раз.", "4": "Келли один раз сбегала туда и обратно,", "5": "но ей не понравилось бегать вместе с Блейком,", "6": "поэтому она стала бегать до отметки в 40 ярдов и обратно.", "7": "Она сделала так 34 раза.", "8": "На сколько ярдов больше пробежал победитель?", "9": "Блейк пробегал по 200 ярдов за каждый оборот, потому что 100 x 2 = 200.", "10": "Всего он пробежал 3000 ярдов (200 x 15 = 3000).", "11": "Келли вначале пробежала 200 ярдов (100 x 2 = 200).", "12": "Бегая до отметки в 40 ярдов, она каждый раз пробегала по 80 метров, так как 40 x 2 = 80.", "13": "То есть в общей сложности она пробежала таким способом 2720 ярдов (34 x 80 = 2720).", "14": "Всего она пробежала 2920 ярдов (2720 + 200 = 2920).", "15": "Победил Блейк, так как 3000 > 2920.", "16": "Победитель пробежал на 80 ярдов больше, потому что 3000 – 2920 = 80.", "17": "The answer is 80"}, "human_translated": true, "code_input": "####\nfacts = [ 'Блейк и Келли решили узнать, кто больше пробежит за 15\\xa0минут.',\n  'Они пошли бегать на футбольное поле длиной 100\\xa0ярдов.',\n  'Блейк пробежал туда и обратно 15\\xa0раз.',\n  'Келли один раз сбегала туда и обратно,',\n  'но ей не понравилось бегать вместе с Блейком,',\n  'поэтому она стала бегать до отметки в 40\\xa0ярдов и обратно.',\n  'Она сделала так 34\\xa0раза.']\nquestion = 'На сколько ярдов больше пробежал победитель?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Они пошли бегать на футбольное поле длиной 100\\xa0ярдов.', 'Блейк пробежал туда и обратно 15\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Блейк пробегал по 200\\xa0ярдов за каждый оборот, потому что 100\\xa0x\\xa02\\xa0=\\xa0200.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Блейк пробежал туда и обратно 15\\xa0раз.', 'Блейк пробегал по 200\\xa0ярдов за каждый оборот, потому что 100\\xa0x\\xa02\\xa0=\\xa0200.']\nnew_fact = infer_new_fact(selected) # 'Всего он пробежал 3000\\xa0ярдов (200\\xa0x\\xa015\\xa0=\\xa03000).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Блейк и Келли решили узнать, кто больше пробежит за 15\\xa0минут.', 'Они пошли бегать на футбольное поле длиной 100\\xa0ярдов.', 'Келли один раз сбегала туда и обратно,']\nnew_fact = infer_new_fact(selected) # 'Келли вначале пробежала 200\\xa0ярдов (100\\xa0x\\xa02\\xa0=\\xa0200).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Келли один раз сбегала туда и обратно,', 'поэтому она стала бегать до отметки в 40\\xa0ярдов и обратно.']\nnew_fact = infer_new_fact(selected) # 'Бегая до отметки в 40\\xa0ярдов, она каждый раз пробегала по 80\\xa0метров, так как 40\\xa0x\\xa02\\xa0=\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она сделала так 34\\xa0раза.', 'Бегая до отметки в 40\\xa0ярдов, она каждый раз пробегала по 80\\xa0метров, так как 40\\xa0x\\xa02\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'То есть в общей сложности она пробежала таким способом 2720\\xa0ярдов (34\\xa0x\\xa080\\xa0=\\xa02720).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Келли вначале пробежала 200\\xa0ярдов (100\\xa0x\\xa02\\xa0=\\xa0200).', 'То есть в общей сложности она пробежала таким способом 2720\\xa0ярдов (34\\xa0x\\xa080\\xa0=\\xa02720).']\nnew_fact = infer_new_fact(selected) # 'Всего она пробежала 2920\\xa0ярдов (2720\\xa0+\\xa0200\\xa0=\\xa02920).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего он пробежал 3000\\xa0ярдов (200\\xa0x\\xa015\\xa0=\\xa03000).', 'Всего она пробежала 2920\\xa0ярдов (2720\\xa0+\\xa0200\\xa0=\\xa02920).']\nnew_fact = infer_new_fact(selected) # 'Победил Блейк, так как 3000\\xa0> 2920.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Блейк пробегал по 200\\xa0ярдов за каждый оборот, потому что 100\\xa0x\\xa02\\xa0=\\xa0200.', 'Всего он пробежал 3000\\xa0ярдов (200\\xa0x\\xa015\\xa0=\\xa03000).', 'Келли вначале пробежала 200\\xa0ярдов (100\\xa0x\\xa02\\xa0=\\xa0200).', 'Бегая до отметки в 40\\xa0ярдов, она каждый раз пробегала по 80\\xa0метров, так как 40\\xa0x\\xa02\\xa0=\\xa080.', 'То есть в общей сложности она пробежала таким способом 2720\\xa0ярдов (34\\xa0x\\xa080\\xa0=\\xa02720).', 'Всего она пробежала 2920\\xa0ярдов (2720\\xa0+\\xa0200\\xa0=\\xa02920).', 'Победил Блейк, так как 3000\\xa0> 2920.']\nnew_fact = infer_new_fact(selected) # 'Победитель пробежал на 80\\xa0ярдов больше, потому что 3000\\xa0–\\xa02920\\xa0=\\xa080.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько ярдов больше пробежал победитель?', 'Победитель пробежал на 80\\xa0ярдов больше, потому что 3000\\xa0–\\xa02920\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'The answer is 80'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '80'"}
{"id": "GSM8K_158_6b10c2a22f", "context": "", "options": [], "answer": "34", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 -> int1: Raphael spent 4 x $1.5 = $6 for the pens.; sent3 -> int2: He also spent 2 x $4 = $8 for the notebooks.; int1 & int2 -> int3: Therefore, Raphael spent a total of $6 + $8 + $20 = $34 for the school supplies.; int3 & sent5 -> int4: The answer is 34;", "textual_logical_units": {"1": "Рафаэль пошел в магазин за школьными принадлежностями.", "2": "Он купил 4 ручки по 1,5 доллара,", "3": "2 блокнота по 4 доллара", "4": "и рулон хорошей бумаги за 20 долларов.", "5": "Сколько всего Рафаэль потратил на свои покупки?", "6": "На ручки Рафаэль потратил 4 x 1,5 доллара = 6 долларов.", "7": "Блокноты ему обошлись в 2 x 4 доллара = 8 долларов.", "8": "Таким образом, в общей сложности Рафаэль потратил на покупку школьных принадлежностей 6 долларов + 8 долларов + 20 долларов = 34 доллара.", "9": "The answer is 34"}, "human_translated": true, "code_input": "####\nfacts = [ 'Рафаэль пошел в магазин за школьными принадлежностями.',\n  'Он купил 4\\xa0ручки по 1,5\\xa0доллара,',\n  '2\\xa0блокнота по 4\\xa0доллара',\n  'и рулон хорошей бумаги за 20\\xa0долларов.']\nquestion = 'Сколько всего Рафаэль потратил на свои покупки?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он купил 4\\xa0ручки по 1,5\\xa0доллара,']\nnew_fact = infer_new_fact(selected) # 'На ручки Рафаэль потратил 4\\xa0x 1,5\\xa0доллара\\xa0=\\xa06\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0блокнота по 4\\xa0доллара']\nnew_fact = infer_new_fact(selected) # 'Блокноты ему обошлись в 2\\xa0x\\xa04\\xa0доллара\\xa0=\\xa08\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На ручки Рафаэль потратил 4\\xa0x 1,5\\xa0доллара\\xa0=\\xa06\\xa0долларов.', 'Блокноты ему обошлись в 2\\xa0x\\xa04\\xa0доллара\\xa0=\\xa08\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в общей сложности Рафаэль потратил на покупку школьных принадлежностей 6\\xa0долларов\\xa0+ 8 долларов\\xa0+ 20\\xa0долларов\\xa0=\\xa034\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего Рафаэль потратил на свои покупки?', 'Таким образом, в общей сложности Рафаэль потратил на покупку школьных принадлежностей 6\\xa0долларов\\xa0+ 8 долларов\\xa0+ 20\\xa0долларов\\xa0=\\xa034\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 34'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '34'"}
{"id": "GSM8K_159_6d9ce7cff5", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When the hidden tadpoles come out, Finn sees 11 + 6 = 17 tadpoles swimming.; int1 & sent2 -> int2: After some of them hide under a rock, he now sees 17 - 2 = 15 tadpoles swimming.; int2 & sent3 -> int3: The answer is 15;", "textual_logical_units": {"1": "Финн наблюдал, как в пруду плавают 11 головастиков.", "2": "Вдруг из-под листа кувшинки выплыли 6 новых головастиков, но потом Финн заметил, что двое из них юркнули под камень.", "3": "Сколько головастиков теперь видит Финн?", "4": "Когда головастики выбрались из-под листа кувшинки, Финну стали видны 11 + 6 = 17 головастиков.", "5": "Когда часть головастиков спряталась под камнем, Финну стали видны только 17 – 2 = 15 головастиков.", "6": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = [ 'Финн наблюдал, как в пруду плавают 11 головастиков.',\n  'Вдруг из-под листа кувшинки выплыли 6\\xa0новых головастиков, но потом Финн заметил, что двое из них юркнули под камень.']\nquestion = 'Сколько головастиков теперь видит Финн?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Финн наблюдал, как в пруду плавают 11 головастиков.', 'Вдруг из-под листа кувшинки выплыли 6\\xa0новых головастиков, но потом Финн заметил, что двое из них юркнули под камень.']\nnew_fact = infer_new_fact(selected) # 'Когда головастики выбрались из-под листа кувшинки, Финну стали видны 11\\xa0+\\xa06\\xa0=\\xa017\\xa0головастиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вдруг из-под листа кувшинки выплыли 6\\xa0новых головастиков, но потом Финн заметил, что двое из них юркнули под камень.', 'Когда головастики выбрались из-под листа кувшинки, Финну стали видны 11\\xa0+\\xa06\\xa0=\\xa017\\xa0головастиков.']\nnew_fact = infer_new_fact(selected) # 'Когда часть головастиков спряталась под камнем, Финну стали видны только 17\\xa0–\\xa02\\xa0=\\xa015\\xa0головастиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько головастиков теперь видит Финн?', 'Когда часть головастиков спряталась под камнем, Финну стали видны только 17\\xa0–\\xa02\\xa0=\\xa015\\xa0головастиков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_160_f84b73a55d", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On Tuesday there was 17+7 = 24 feet of water in the tank.; int1 & sent3 -> int2: 24/3 = 8. On Wednesday there was 2*8 = 16 feet of water in the tank.; int2 & sent4 -> int3: The answer is 16;", "textual_logical_units": {"1": "В понедельник уровень воды в бассейне составлял 17 футов.", "2": "Во вторник он поднялся на 7 футов.", "3": "В среду уровень воды составлял две трети от уровня, зафиксированного во вторник.", "4": "Каким был уровень воды в бассейне в среду?", "5": "Во вторник уровень воды в бассейне достиг отметки 17 + 7 = 24 фута.", "6": "24 / 3 = 8. В среду уровень воды в бассейне составлял 2 * 8 = 16 футов.", "7": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = [ 'В понедельник уровень воды в бассейне составлял 17\\xa0футов.',\n  'Во вторник он поднялся на 7\\xa0футов.',\n  'В среду уровень воды составлял две трети от уровня, зафиксированного во вторник.']\nquestion = 'Каким был уровень воды в бассейне в среду?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник уровень воды в бассейне составлял 17\\xa0футов.', 'Во вторник он поднялся на 7\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Во вторник уровень воды в бассейне достиг отметки 17\\xa0+\\xa07\\xa0= 24\\xa0фута.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В среду уровень воды составлял две трети от уровня, зафиксированного во вторник.', 'Во вторник уровень воды в бассейне достиг отметки 17\\xa0+\\xa07\\xa0= 24\\xa0фута.']\nnew_fact = infer_new_fact(selected) # '24\\xa0/\\xa03\\xa0= 8. В среду уровень воды в бассейне составлял 2\\xa0*\\xa08\\xa0= 16\\xa0футов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каким был уровень воды в бассейне в среду?', '24\\xa0/\\xa03\\xa0= 8. В среду уровень воды в бассейне составлял 2\\xa0*\\xa08\\xa0= 16\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_161_220629edef", "context": "", "options": [], "answer": "32", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [2, 4], "consequent": 9}, {"antecedents": [2, 4, 9], "consequent": 10}, {"antecedents": [2, 5], "consequent": 11}, {"antecedents": [2, 5, 11], "consequent": 12}, {"antecedents": [8, 10, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Locsin caught 10 - 5 = 5 starfishes.; int1 & sent2 -> int2: They caught 10 + 5 = 15 starfishes.; sent2 & sent4 -> int3: Locsin caught 6 - 3 = 3 seahorses; int3 & sent2 & sent4 -> int4: They caught 6 + 3 = 9 seahorses; sent2 & sent5 -> int5: Locsin caught 3 + 2 = 5 clownfish.; int5 & sent2 & sent5 -> int6: So, they caught 3 + 5 = 8 clownfish.; int2 & int4 & int6 -> int7: Therefore, Anakin and Locsin were able to catch a total of 15 + 9 + 8 = 32 fish.; int7 & sent6 -> int8: The answer is 32;", "textual_logical_units": {"1": "Энакин и Локсин пошли на пляж.", "2": "Энакин поймал 10 морских звезд, 6 морских коньков и 3 рыбы-клоуна.", "3": "Локсин поймал на 5 морских звезд", "4": "и на 3 морских конька меньше, чем Энакин,", "5": "зато рыб-клоунов у него было на 2 больше.", "6": "Сколько всего рыбы им удалось поймать?", "7": "Локсин поймал 10 – 5 = 5 морских звезд.", "8": "Вместе они поймали 10 + 5 = 15 морских звезд.", "9": "Локсин пойман 6 – 3 = 3 морских конька.", "10": "Вместе они поймали 6 + 3 = 9 морских коньков.", "11": "Локсин поймал 3 + 2 = 5 рыб-клоунов.", "12": "Вместе они поймали 3 + 5 = 8 рыб-клоунов.", "13": "Таким образом, Энакин и Локсин в общей сложности поймали 15 + 9 + 8 = 32 рыбины.", "14": "The answer is 32"}, "human_translated": true, "code_input": "####\nfacts = [ 'Энакин и Локсин пошли на пляж.',\n  'Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.',\n  'Локсин поймал на 5 морских звезд',\n  'и на 3\\xa0морских конька меньше, чем Энакин,',\n  'зато рыб-клоунов у него было на 2\\xa0больше.']\nquestion = 'Сколько всего рыбы им удалось поймать?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'Локсин поймал на 5 морских звезд']\nnew_fact = infer_new_fact(selected) # 'Локсин поймал 10\\xa0–\\xa05\\xa0= 5\\xa0морских звезд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'Локсин поймал 10\\xa0–\\xa05\\xa0= 5\\xa0морских звезд.']\nnew_fact = infer_new_fact(selected) # 'Вместе они поймали 10\\xa0+\\xa05\\xa0= 15\\xa0морских звезд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'и на 3\\xa0морских конька меньше, чем Энакин,']\nnew_fact = infer_new_fact(selected) # 'Локсин пойман 6\\xa0–\\xa03\\xa0= 3\\xa0морских конька.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'и на 3\\xa0морских конька меньше, чем Энакин,', 'Локсин пойман 6\\xa0–\\xa03\\xa0= 3\\xa0морских конька.']\nnew_fact = infer_new_fact(selected) # 'Вместе они поймали 6\\xa0+\\xa03\\xa0= 9\\xa0морских коньков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'зато рыб-клоунов у него было на 2\\xa0больше.']\nnew_fact = infer_new_fact(selected) # 'Локсин поймал 3\\xa0+\\xa02\\xa0= 5\\xa0рыб-клоунов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энакин поймал 10\\xa0морских звезд, 6\\xa0морских коньков и 3\\xa0рыбы-клоуна.', 'зато рыб-клоунов у него было на 2\\xa0больше.', 'Локсин поймал 3\\xa0+\\xa02\\xa0= 5\\xa0рыб-клоунов.']\nnew_fact = infer_new_fact(selected) # 'Вместе они поймали 3\\xa0+\\xa05\\xa0= 8\\xa0рыб-клоунов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вместе они поймали 10\\xa0+\\xa05\\xa0= 15\\xa0морских звезд.', 'Вместе они поймали 6\\xa0+\\xa03\\xa0= 9\\xa0морских коньков.', 'Вместе они поймали 3\\xa0+\\xa05\\xa0= 8\\xa0рыб-клоунов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, Энакин и Локсин в общей сложности поймали 15\\xa0+\\xa09\\xa0+\\xa08\\xa0= 32\\xa0рыбины.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего рыбы им удалось поймать?', 'Таким образом, Энакин и Локсин в общей сложности поймали 15\\xa0+\\xa09\\xa0+\\xa08\\xa0= 32\\xa0рыбины.']\nnew_fact = infer_new_fact(selected) # 'The answer is 32'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '32'"}
{"id": "GSM8K_162_d76189ada6", "context": "", "options": [], "answer": "92", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [1, 2, 3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When the price of the bag of marble increase by 20%, the price increases by 20/100*20 = $4; int1 & sent3 -> int2: If the price increases after every two months, in 36 months, it will increase 36/2 = 18 times.; int1 & int2 -> int3: If each increase is $4, the total amount the price of the bag of marbles will have increased by after 36 months is 18*$4 = $72; int3 & sent1 & sent3 -> int4: After the total increase of the price of the bag of marbles after 36 months, the total cost will be $20+$72 = $92; int4 & sent1 & sent2 & sent3 -> int5: The answer is 92;", "textual_logical_units": {"1": "Мешок мраморной крошки стоит 20 долларов, но каждые два месяца", "2": "его цена увеличивается на 20 % от первоначальной стоимости.", "3": "Сколько будет стоить мешок мраморной крошки через 36 месяцев?", "4": "Увеличиваясь на 20 %, стоимость мешка мраморной крошки возрастает на 20 / 100 * 20 = 4 доллара.", "5": "Если цена будет расти каждые два месяца, то за 36 месяцев она поднимется 36 / 2 = 18 раз.", "6": "Если каждый раз цена будет повышаться на 4 доллара, то через 36 месяцев она увеличится в общей сложности на 18 * 4 доллара = 72 доллара.", "7": "При таком повышении через 36 месяцев мешок мраморной крошки будет стоить 20 долларов + 72 доллара = 92 доллара.", "8": "The answer is 92"}, "human_translated": true, "code_input": "####\nfacts = ['Мешок мраморной крошки стоит 20\\xa0долларов, но каждые два месяца', 'его цена увеличивается на 20\\xa0% от первоначальной стоимости.']\nquestion = 'Сколько будет стоить мешок мраморной крошки через 36\\xa0месяцев?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Мешок мраморной крошки стоит 20\\xa0долларов, но каждые два месяца', 'его цена увеличивается на 20\\xa0% от первоначальной стоимости.']\nnew_fact = infer_new_fact(selected) # 'Увеличиваясь на 20\\xa0%, стоимость мешка мраморной крошки возрастает на 20\\xa0/\\xa0100\\xa0*\\xa020\\xa0= 4\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить мешок мраморной крошки через 36\\xa0месяцев?', 'Увеличиваясь на 20\\xa0%, стоимость мешка мраморной крошки возрастает на 20\\xa0/\\xa0100\\xa0*\\xa020\\xa0= 4\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Если цена будет расти каждые два месяца, то за 36\\xa0месяцев она поднимется 36\\xa0/\\xa02\\xa0= 18\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Увеличиваясь на 20\\xa0%, стоимость мешка мраморной крошки возрастает на 20\\xa0/\\xa0100\\xa0*\\xa020\\xa0= 4\\xa0доллара.', 'Если цена будет расти каждые два месяца, то за 36\\xa0месяцев она поднимется 36\\xa0/\\xa02\\xa0= 18\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Если каждый раз цена будет повышаться на 4\\xa0доллара, то через 36\\xa0месяцев она увеличится в общей сложности на 18\\xa0* 4\\xa0доллара\\xa0= 72\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мешок мраморной крошки стоит 20\\xa0долларов, но каждые два месяца', 'Сколько будет стоить мешок мраморной крошки через 36\\xa0месяцев?', 'Если каждый раз цена будет повышаться на 4\\xa0доллара, то через 36\\xa0месяцев она увеличится в общей сложности на 18\\xa0* 4\\xa0доллара\\xa0= 72\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'При таком повышении через 36\\xa0месяцев мешок мраморной крошки будет стоить 20\\xa0долларов\\xa0+ 72\\xa0доллара\\xa0= 92\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мешок мраморной крошки стоит 20\\xa0долларов, но каждые два месяца', 'его цена увеличивается на 20\\xa0% от первоначальной стоимости.', 'Сколько будет стоить мешок мраморной крошки через 36\\xa0месяцев?', 'При таком повышении через 36\\xa0месяцев мешок мраморной крошки будет стоить 20\\xa0долларов\\xa0+ 72\\xa0доллара\\xa0= 92\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 92'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '92'"}
{"id": "GSM8K_163_3e869f023b", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent5 -> int1: Three actions figures are worth 3 * 5 = $15, as much as the doll.; sent1 & sent3 -> int2: The red cars are worth 5 * 4 = $20.; int1 & int2 -> int3: So all toys are worth 20 + 15 + 15 = $50.; int3 & sent4 & sent5 -> int4: The answer is 50;", "textual_logical_units": {"1": "В комнате находятся игрушки: 5 красных машин, 3 фигурки персонажей и кукла.", "2": "Кукла стоит столько же, сколько 3 фигурки персонажей, а", "3": "одна красная машина стоит 4 доллара.", "4": "Какова стоимость всех игрушек,", "5": "если фигурка персонажа стоит 5 долларов?", "6": "Три фигурки персонажей стоят 3 * 5 = 15 долларов, и столько же стоит кукла.", "7": "Красные автомобили стоят 5 * 4 = 20 долларов.", "8": "Таким образом, стоимость всех игрушек: 20 + 15 + 15 = 50 долларов.", "9": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = [ 'В комнате находятся игрушки: 5\\xa0красных машин, 3 фигурки персонажей и кукла.',\n  'Кукла стоит столько же, сколько 3\\xa0фигурки персонажей, а',\n  'одна красная машина стоит 4\\xa0доллара.',\n  'Какова стоимость всех игрушек,']\nquestion = 'если фигурка персонажа стоит 5\\xa0долларов?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В комнате находятся игрушки: 5\\xa0красных машин, 3 фигурки персонажей и кукла.', 'если фигурка персонажа стоит 5\\xa0долларов?']\nnew_fact = infer_new_fact(selected) # 'Три фигурки персонажей стоят 3\\xa0*\\xa05\\xa0= 15\\xa0долларов, и столько же стоит кукла.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В комнате находятся игрушки: 5\\xa0красных машин, 3 фигурки персонажей и кукла.', 'одна красная машина стоит 4\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Красные автомобили стоят 5\\xa0*\\xa04\\xa0= 20\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Три фигурки персонажей стоят 3\\xa0*\\xa05\\xa0= 15\\xa0долларов, и столько же стоит кукла.', 'Красные автомобили стоят 5\\xa0*\\xa04\\xa0= 20\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, стоимость всех игрушек: 20\\xa0+\\xa015\\xa0+\\xa015\\xa0= 50\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова стоимость всех игрушек,', 'если фигурка персонажа стоит 5\\xa0долларов?', 'Таким образом, стоимость всех игрушек: 20\\xa0+\\xa015\\xa0+\\xa015\\xa0= 50\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_164_c283728116", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: First find the total lost revenue if Jackie does her taxes herself: $35/hour * 3 hours = $105; int1 & sent5 -> int2: Then subtract the accountant's charge to find how much money Janet saves: $105 - $90 = $15; int2 & sent6 -> int3: The answer is 15;", "textual_logical_units": {"1": "Джеки нужно решить, платить ли налоги самостоятельно или нанять бухгалтера.", "2": "Если она сама будет платить налоги,", "3": "она сможет работать фрилансером на 3 часа меньше,", "4": "и ее упущенный доход составит 35 долларов в час.", "5": "Бухгалтер берет за свою работу 90 долларов.", "6": "Какую выгоду получит Джеки, если наймет бухгалтера?", "7": "Сначала нужно найти общую сумму дохода, который Джеки недополучит, если сама будет платить налоги: 35 долларов в час * 3 часа = 105 долларов.", "8": "Чтобы узнать, какую выгоду получит Джанет, нужно вычесть из этой суммы оплату услуг бухгалтера: 105 долларов — 90 долларов = 15 долларов.", "9": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джеки нужно решить, платить ли налоги самостоятельно или нанять бухгалтера.',\n  'Если она сама будет платить налоги,',\n  'она сможет работать фрилансером на 3\\xa0часа меньше,',\n  'и ее упущенный доход составит 35\\xa0долларов в час.',\n  'Бухгалтер берет за свою работу 90\\xa0долларов.']\nquestion = 'Какую выгоду получит Джеки, если наймет бухгалтера?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['она сможет работать фрилансером на 3\\xa0часа меньше,', 'и ее упущенный доход составит 35\\xa0долларов в час.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно найти общую сумму дохода, который Джеки недополучит, если сама будет платить налоги: 35\\xa0долларов в час\\xa0* 3\\xa0часа\\xa0= 105\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Бухгалтер берет за свою работу 90\\xa0долларов.', 'Сначала нужно найти общую сумму дохода, который Джеки недополучит, если сама будет платить налоги: 35\\xa0долларов в час\\xa0* 3\\xa0часа\\xa0= 105\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать, какую выгоду получит Джанет, нужно вычесть из этой суммы оплату услуг бухгалтера: 105\\xa0долларов\\xa0— 90\\xa0долларов\\xa0= 15\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую выгоду получит Джеки, если наймет бухгалтера?', 'Чтобы узнать, какую выгоду получит Джанет, нужно вычесть из этой суммы оплату услуг бухгалтера: 105\\xa0долларов\\xa0— 90\\xa0долларов\\xa0= 15\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_165_4e0bf82a17", "context": "", "options": [], "answer": "77", "reasoning_graph_edges": [{"antecedents": [5, 6, 7], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent5 & sent6 & sent7 -> int1: First, let’s look at the total cost of computer equipment: 1090 + 157 + 74 + 102 = 1423 euros; int1 & sent2 -> int2: Let us now calculate what is left for the garment: 1500 - 1423 = 77 euros; int2 & sent8 -> int3: The answer is 77;", "textual_logical_units": {"1": "На 30-й день рождения Эльвира решила купить себе в подарок новый компьютер с множеством аксессуаров.", "2": "Родные подарили ей 1500 евро, и", "3": "она надеется, что у нее останется небольшая сумма на покупку одежды.", "4": "Она пошла в компьютерный магазин и", "5": "выбрала компьютер с монитором, клавиатурой и мышью за 1090 евро.", "6": "Еще она взяла сканер за 157 евро,", "7": "устройство для записи компакт-дисков за 74 евро и принтер за 102 евро.", "8": "Сколько денег у нее останется на покупку одежды?", "9": "Для начала нужно узнать, сколько в целом стоит компьютерное оборудование: 1090 + 157 + 74 + 102 = 1423 евро.", "10": "Теперь нужно узнать, сколько денег остается на одежду: 1500 – 1423 = 77 евро.", "11": "The answer is 77"}, "human_translated": true, "code_input": "####\nfacts = [ 'На 30-й день рождения Эльвира решила купить себе в подарок новый компьютер с множеством аксессуаров.',\n  'Родные подарили ей 1500\\xa0евро, и',\n  'она надеется, что у нее останется небольшая сумма на покупку одежды.',\n  'Она пошла в компьютерный магазин и',\n  'выбрала компьютер с монитором, клавиатурой и мышью за 1090\\xa0евро.',\n  'Еще она взяла сканер за 157\\xa0евро,',\n  'устройство для записи компакт-дисков за 74\\xa0евро и принтер за 102\\xa0евро.']\nquestion = 'Сколько денег у нее останется на покупку одежды?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['выбрала компьютер с монитором, клавиатурой и мышью за 1090\\xa0евро.', 'Еще она взяла сканер за 157\\xa0евро,', 'устройство для записи компакт-дисков за 74\\xa0евро и принтер за 102\\xa0евро.']\nnew_fact = infer_new_fact(selected) # 'Для начала нужно узнать, сколько в целом стоит компьютерное оборудование: 1090\\xa0+\\xa0157\\xa0+\\xa074\\xa0+\\xa0102\\xa0= 1423\\xa0евро.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Родные подарили ей 1500\\xa0евро, и', 'Для начала нужно узнать, сколько в целом стоит компьютерное оборудование: 1090\\xa0+\\xa0157\\xa0+\\xa074\\xa0+\\xa0102\\xa0= 1423\\xa0евро.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно узнать, сколько денег остается на одежду: 1500\\xa0–\\xa01423\\xa0= 77\\xa0евро.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег у нее останется на покупку одежды?', 'Теперь нужно узнать, сколько денег остается на одежду: 1500\\xa0–\\xa01423\\xa0= 77\\xa0евро.']\nnew_fact = infer_new_fact(selected) # 'The answer is 77'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '77'"}
{"id": "GSM8K_166_86924c2578", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Sandra needs a total of 15 x 3 = 45 eggs.; int1 & sent1 -> int2: She will have to babysit 45/9 = 5 times.; int2 & sent3 & sent4 -> int3: The answer is 5;", "textual_logical_units": {"1": "Всякий раз, когда Сандра остается присмотреть за дочерью соседки, ей в благодарность дают лоток с 9 яйцами.", "2": "Для приготовления пирога с ягодами требуется 3 яйца.", "3": "В школе Сандре поручили сделать 15 таких пирогов для благотворительной ярмарки.", "4": "Сколько раз Сандре придется присматривать за дочерью соседки, чтобы набрать достаточно яиц?", "5": "Всего Сандре нужно 15 x 3 = 45 яиц.", "6": "Ей придется сидеть с ребенком 45 / 9 = 5 раз.", "7": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'Всякий раз, когда Сандра остается присмотреть за дочерью соседки, ей в благодарность дают лоток с 9\\xa0яйцами.',\n  'Для приготовления пирога с ягодами требуется 3\\xa0яйца.',\n  'В школе Сандре поручили сделать 15\\xa0таких пирогов для благотворительной ярмарки.']\nquestion = 'Сколько раз Сандре придется присматривать за дочерью соседки, чтобы набрать достаточно яиц?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Для приготовления пирога с ягодами требуется 3\\xa0яйца.', 'В школе Сандре поручили сделать 15\\xa0таких пирогов для благотворительной ярмарки.']\nnew_fact = infer_new_fact(selected) # 'Всего Сандре нужно 15\\xa0x\\xa03\\xa0= 45\\xa0яиц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всякий раз, когда Сандра остается присмотреть за дочерью соседки, ей в благодарность дают лоток с 9\\xa0яйцами.', 'Всего Сандре нужно 15\\xa0x\\xa03\\xa0= 45\\xa0яиц.']\nnew_fact = infer_new_fact(selected) # 'Ей придется сидеть с ребенком 45\\xa0/\\xa09\\xa0= 5\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В школе Сандре поручили сделать 15\\xa0таких пирогов для благотворительной ярмарки.', 'Сколько раз Сандре придется присматривать за дочерью соседки, чтобы набрать достаточно яиц?', 'Ей придется сидеть с ребенком 45\\xa0/\\xa09\\xa0= 5\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_167_d0c863e677", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: To solve this problem, we can set up an equation where x represents Brooke’s age and 2x represents Seth’s age and noting that in two years, the sum of their ages is (2x + 2) + (x + 2) = 28.; int1 -> int2: Then we add all the values together, 3x + 4 = 28.; int1 & int2 -> int3: And we subtract 4 from each side, 3x +4 - 4 = 28 – 4.; int1 & int2 & int3 -> int4: Then we divide each side by 3x/3 = 24/3.; int4 -> int5: We find that x = 8, or Brooke’s age is 8.; int1 & int5 -> int6: Seth is twice as old as Brooke, so Seth is 8 x 2 = 16.; int6 & sent3 -> int7: The answer is 16;", "textual_logical_units": {"1": "Сет в два раза старше Брук.", "2": "Через 2 года им в общей сложности будет 28 лет.", "3": "Сколько лет Сету?", "4": "Чтобы решить эту задачу, можно составить уравнение, в котором x — это возраст Брук, а 2x — возраст Сета. Если через два года сумма их возрастов составит 28, то получится выражение (2x + 2) + (x + 2) = 28.", "5": "Теперь нужно сложить все значения вместе: 3x + 4 = 28,", "6": "а затем вычесть по 4 с каждой стороны выражения: 3x + 4 – 4 = 28 – 4.", "7": "Теперь каждую сторону нужно поделить на 3: 3x / 3 = 24 / 3.", "8": "x = 8, то есть Брук сейчас 8 лет.", "9": "Сету в два раза больше, чем Брук, следовательно, Сету 8 x 2 = 16 лет.", "10": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['Сет в два раза старше Брук.', 'Через 2\\xa0года им в общей сложности будет 28\\xa0лет.']\nquestion = 'Сколько лет Сету?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сет в два раза старше Брук.', 'Через 2\\xa0года им в общей сложности будет 28\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Чтобы решить эту задачу, можно составить уравнение, в котором x\\xa0— это возраст Брук, а 2x\\xa0— возраст Сета. Если через два года сумма их возрастов составит\\xa028, то получится выражение (2x\\xa0+\\xa02)\\xa0+\\xa0(x\\xa0+\\xa02)\\xa0=\\xa028.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы решить эту задачу, можно составить уравнение, в котором x\\xa0— это возраст Брук, а 2x\\xa0— возраст Сета. Если через два года сумма их возрастов составит\\xa028, то получится выражение (2x\\xa0+\\xa02)\\xa0+\\xa0(x\\xa0+\\xa02)\\xa0=\\xa028.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно сложить все значения вместе: 3x\\xa0+\\xa04\\xa0=\\xa028,'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы решить эту задачу, можно составить уравнение, в котором x\\xa0— это возраст Брук, а 2x\\xa0— возраст Сета. Если через два года сумма их возрастов составит\\xa028, то получится выражение (2x\\xa0+\\xa02)\\xa0+\\xa0(x\\xa0+\\xa02)\\xa0=\\xa028.', 'Теперь нужно сложить все значения вместе: 3x\\xa0+\\xa04\\xa0=\\xa028,']\nnew_fact = infer_new_fact(selected) # 'а затем вычесть по\\xa04 с каждой стороны выражения: 3x\\xa0+\\xa04\\xa0–\\xa04\\xa0=\\xa028\\xa0–\\xa04.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы решить эту задачу, можно составить уравнение, в котором x\\xa0— это возраст Брук, а 2x\\xa0— возраст Сета. Если через два года сумма их возрастов составит\\xa028, то получится выражение (2x\\xa0+\\xa02)\\xa0+\\xa0(x\\xa0+\\xa02)\\xa0=\\xa028.', 'Теперь нужно сложить все значения вместе: 3x\\xa0+\\xa04\\xa0=\\xa028,', 'а затем вычесть по\\xa04 с каждой стороны выражения: 3x\\xa0+\\xa04\\xa0–\\xa04\\xa0=\\xa028\\xa0–\\xa04.']\nnew_fact = infer_new_fact(selected) # 'Теперь каждую сторону нужно поделить на\\xa03: 3x\\xa0/\\xa03\\xa0=\\xa024\\xa0/\\xa03.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Теперь каждую сторону нужно поделить на\\xa03: 3x\\xa0/\\xa03\\xa0=\\xa024\\xa0/\\xa03.']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa08, то есть Брук сейчас 8\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы решить эту задачу, можно составить уравнение, в котором x\\xa0— это возраст Брук, а 2x\\xa0— возраст Сета. Если через два года сумма их возрастов составит\\xa028, то получится выражение (2x\\xa0+\\xa02)\\xa0+\\xa0(x\\xa0+\\xa02)\\xa0=\\xa028.', 'x\\xa0=\\xa08, то есть Брук сейчас 8\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Сету в два раза больше, чем Брук, следовательно, Сету 8\\xa0x\\xa02\\xa0= 16\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет Сету?', 'Сету в два раза больше, чем Брук, следовательно, Сету 8\\xa0x\\xa02\\xa0= 16\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_168_cd681f8c28", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total amount of money jimmy has 2*$8 = $16 more than Ethel.; int1 & sent1 -> int2: If Jimmy has $2 more than twice the money Ethel has, he has 2+16 = $18; int2 & sent2 -> int3: The answer is 18;", "textual_logical_units": {"1": "Денег у Джимми на 2 доллара больше, чем двукратная сумма денег, которыми располагает Этель.", "2": "У Этель 8 долларов. Сколько денег у Джимми?", "3": "Для начала нужно найти, сколько денег было бы у Этель, если бы их было в два раза больше: 2 * 8 долларов = 16 долларов.", "4": "У Джимми еще на 2 доллара больше, значит, у него 2 + 16 = 18 долларов.", "5": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['Денег у Джимми на 2\\xa0доллара больше, чем двукратная сумма денег, которыми располагает Этель.']\nquestion = 'У Этель 8\\xa0долларов. Сколько денег у Джимми?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Денег у Джимми на 2\\xa0доллара больше, чем двукратная сумма денег, которыми располагает Этель.', 'У Этель 8\\xa0долларов. Сколько денег у Джимми?']\nnew_fact = infer_new_fact(selected) # 'Для начала нужно найти, сколько денег было бы у Этель, если бы их было в два раза больше: 2\\xa0* 8\\xa0долларов\\xa0= 16\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Денег у Джимми на 2\\xa0доллара больше, чем двукратная сумма денег, которыми располагает Этель.', 'Для начала нужно найти, сколько денег было бы у Этель, если бы их было в два раза больше: 2\\xa0* 8\\xa0долларов\\xa0= 16\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'У Джимми еще на 2\\xa0доллара больше, значит, у него 2\\xa0+\\xa016\\xa0= 18\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Этель 8\\xa0долларов. Сколько денег у Джимми?', 'У Джимми еще на 2\\xa0доллара больше, значит, у него 2\\xa0+\\xa016\\xa0= 18\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_169_d5adfb3479", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He walks 100 miles during the weekdays because 5 x 20 = 100; sent2 -> int2: He walks 20 miles on the weekend because 2 x 10 = 20; int1 & int2 -> int3: He walks 120 miles total because 100 + 20 = 120; int3 & sent3 -> int4: The answer is 120;", "textual_logical_units": {"1": "Панчо проходит по 20 миль в день,", "2": "кроме выходных, когда он проходит только по 10 миль.", "3": "Сколько миль он проходит за неделю?", "4": "В будние дни он проходит 100 миль, так как 5 x 20 = 100.", "5": "По выходным он проходит 20 миль (2 x 10 = 20).", "6": "Всего он проходит 120 миль: 100 + 20 = 120.", "7": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['Панчо проходит по 20\\xa0миль в день,', 'кроме выходных, когда он проходит только по 10\\xa0миль.']\nquestion = 'Сколько миль он проходит за неделю?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Панчо проходит по 20\\xa0миль в день,', 'кроме выходных, когда он проходит только по 10\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'В будние дни он проходит 100\\xa0миль, так как 5\\xa0x\\xa020\\xa0=\\xa0100.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['кроме выходных, когда он проходит только по 10\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'По выходным он проходит 20\\xa0миль (2\\xa0x\\xa010\\xa0=\\xa020).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В будние дни он проходит 100\\xa0миль, так как 5\\xa0x\\xa020\\xa0=\\xa0100.', 'По выходным он проходит 20\\xa0миль (2\\xa0x\\xa010\\xa0=\\xa020).']\nnew_fact = infer_new_fact(selected) # 'Всего он проходит 120\\xa0миль: 100\\xa0+\\xa020\\xa0=\\xa0120.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько миль он проходит за неделю?', 'Всего он проходит 120\\xa0миль: 100\\xa0+\\xa020\\xa0=\\xa0120.']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_170_31ba335544", "context": "", "options": [], "answer": "150", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: First find the cost of the jacket: $25 * 3 = $75; int1 & sent2 -> int2: Then add the cost of the jacket and hat: $25 + $75 = $100; int2 & sent4 -> int3: Then divide that amount by 2 to find the average cost, which is the cost of the pants: $100 / 2 = $50; int2 & int3 -> int4: Then add the cost of each item of clothing to find the total cost of the uniform: $25 + $75 + $50 = $150; int4 & sent5 -> int5: The answer is 150;", "textual_logical_units": {"1": "Для оркестра заказали новые костюмы.", "2": "Каждый костюм состоит из шляпы стоимостью 25 долларов,", "3": "куртки, которая стоит в три раза дороже шляпы,", "4": "и брюк, цена которых равна среднему значению от стоимости шляпы и куртки.", "5": "Сколько всего стоит каждый костюм?", "6": "Сначала нужно найти стоимость куртки: 25 долларов * 3 = 75 долларов.", "7": "Затем нужно сложить стоимость куртки и шляпы: 25 долларов + 75 долларов = 100 долларов.", "8": "Эту сумму следует разделить на 2, чтобы найти среднее значение, то есть цену брюк: 100 долларов / 2 = 50 долларов.", "9": "Затем нужно сложить стоимость каждого предмета одежды, чтобы узнать общую стоимость костюма: 25 долларов + 75 долларов + 50 долларов = 150 долларов.", "10": "The answer is 150"}, "human_translated": true, "code_input": "####\nfacts = [ 'Для оркестра заказали новые костюмы.',\n  'Каждый костюм состоит из шляпы стоимостью 25\\xa0долларов,',\n  'куртки, которая стоит в три раза дороже шляпы,',\n  'и брюк, цена которых равна среднему значению от стоимости шляпы и куртки.']\nquestion = 'Сколько всего стоит каждый костюм?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый костюм состоит из шляпы стоимостью 25\\xa0долларов,', 'куртки, которая стоит в три раза дороже шляпы,']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно найти стоимость куртки: 25\\xa0долларов\\xa0*\\xa03\\xa0= 75\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый костюм состоит из шляпы стоимостью 25\\xa0долларов,', 'Сначала нужно найти стоимость куртки: 25\\xa0долларов\\xa0*\\xa03\\xa0= 75\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно сложить стоимость куртки и шляпы: 25\\xa0долларов\\xa0+ 75\\xa0долларов\\xa0= 100\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и брюк, цена которых равна среднему значению от стоимости шляпы и куртки.', 'Затем нужно сложить стоимость куртки и шляпы: 25\\xa0долларов\\xa0+ 75\\xa0долларов\\xa0= 100\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Эту сумму следует разделить на\\xa02, чтобы найти среднее значение, то есть цену брюк: 100\\xa0долларов\\xa0/\\xa02\\xa0= 50\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем нужно сложить стоимость куртки и шляпы: 25\\xa0долларов\\xa0+ 75\\xa0долларов\\xa0= 100\\xa0долларов.', 'Эту сумму следует разделить на\\xa02, чтобы найти среднее значение, то есть цену брюк: 100\\xa0долларов\\xa0/\\xa02\\xa0= 50\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно сложить стоимость каждого предмета одежды, чтобы узнать общую стоимость костюма: 25\\xa0долларов\\xa0+ 75\\xa0долларов\\xa0+ 50\\xa0долларов\\xa0= 150\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего стоит каждый костюм?', 'Затем нужно сложить стоимость каждого предмета одежды, чтобы узнать общую стоимость костюма: 25\\xa0долларов\\xa0+ 75\\xa0долларов\\xa0+ 50\\xa0долларов\\xa0= 150\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 150'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '150'"}
{"id": "GSM8K_171_18a1aadbe4", "context": "", "options": [], "answer": "1210", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: First find the total number of spider legs: 80 spiders * 8 legs/spider = 640 legs; sent3 -> int2: Then find the total number of insect legs: 90 spiders * 6 legs/spider = 540 legs; sent4 -> int3: Then find the total number of mutant invertebrate legs: 3 mutants * 10 legs/mutant = 30 legs; int1 & int2 & int3 -> int4: Then add the number of each kind of leg to find the total he saw: 640 legs + 540 legs + 30 legs = 1210 legs; int4 & sent5 -> int5: The answer is 1210;", "textual_logical_units": {"1": "Джейк побывал в Музее энтомологии.", "2": "Он насчитал 80 пауков с 8 ногами и", "3": "90 насекомых с 6 ногами.", "4": "Еще он видел 3 редкие мутации. У каждого такого экземпляра было по 10 ног.", "5": "Сколько ног в общей сложности было у насекомых, которых разглядывал Джейк?", "6": "Сначала нужно найти, сколько ног у всех пауков: 80 пауков * 8 ног у каждого = 640 ног.", "7": "Затем нужно узнать, сколько всего ног у насекомых: 90 пауков * 6 ног у каждого = 540 ног.", "8": "Теперь нужно вычислить, сколько всего ног у мутантов: 3 мутанта * 10 ног у каждого = 30 ног.", "9": "Чтобы узнать, сколько всего ног было у насекомых, которых разглядывал Джейк, нужно сложить все полученные числа. 640 ног + 540 ног + 30 ног = 1210 ног.", "10": "The answer is 1210"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джейк побывал в Музее энтомологии.',\n  'Он насчитал 80\\xa0пауков с 8\\xa0ногами и',\n  '90\\xa0насекомых с 6\\xa0ногами.',\n  'Еще он видел 3\\xa0редкие мутации. У каждого такого экземпляра было по 10\\xa0ног.']\nquestion = 'Сколько ног в общей сложности было у насекомых, которых разглядывал Джейк?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он насчитал 80\\xa0пауков с 8\\xa0ногами и']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно найти, сколько ног у всех пауков: 80\\xa0пауков\\xa0* 8\\xa0ног у каждого\\xa0= 640\\xa0ног.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['90\\xa0насекомых с 6\\xa0ногами.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно узнать, сколько всего ног у насекомых: 90\\xa0пауков\\xa0* 6\\xa0ног у каждого\\xa0= 540\\xa0ног.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Еще он видел 3\\xa0редкие мутации. У каждого такого экземпляра было по 10\\xa0ног.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно вычислить, сколько всего ног у мутантов: 3\\xa0мутанта\\xa0* 10\\xa0ног у каждого\\xa0= 30\\xa0ног.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала нужно найти, сколько ног у всех пауков: 80\\xa0пауков\\xa0* 8\\xa0ног у каждого\\xa0= 640\\xa0ног.', 'Затем нужно узнать, сколько всего ног у насекомых: 90\\xa0пауков\\xa0* 6\\xa0ног у каждого\\xa0= 540\\xa0ног.', 'Теперь нужно вычислить, сколько всего ног у мутантов: 3\\xa0мутанта\\xa0* 10\\xa0ног у каждого\\xa0= 30\\xa0ног.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать, сколько всего ног было у насекомых, которых разглядывал Джейк, нужно сложить все полученные числа. 640\\xa0ног\\xa0+ 540\\xa0ног\\xa0+ 30\\xa0ног\\xa0= 1210\\xa0ног.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ног в общей сложности было у насекомых, которых разглядывал Джейк?', 'Чтобы узнать, сколько всего ног было у насекомых, которых разглядывал Джейк, нужно сложить все полученные числа. 640\\xa0ног\\xa0+ 540\\xa0ног\\xa0+ 30\\xa0ног\\xa0= 1210\\xa0ног.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1210'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1210'"}
{"id": "GSM8K_172_62220e1b28", "context": "", "options": [], "answer": "51", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [2, 8], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If Sally Thirtytwo is 8 years old, same as Sally four, their total age 8+8 = 16 years.; int1 & sent3 -> int2: Granny red is two times as old as Sally four, meaning Granny red is 2*8 = 16 years old.; sent0 -> int3: Sally Thirtytwo, Sally four, and Sally red are 16+16 = 32 years old.; int2 & sent2 -> int4: Sally two is three years older than Granny red, meaning Sally two is 16+3= 19 years old.; int3 & int4 -> int5: The four birds have a total age of 32+19 = 51 years old.; int5 & sent6 -> int6: The answer is 51;", "textual_logical_units": {"1": "На камбузе живут четыре птицы.", "2": "Салли Вторая на три года старше Бабули Рэд.", "3": "Бабуля Рэд в два раза старше Салли Четвертой.", "4": "Салли Четвертой столько же лет, сколько Салли Тридцать второй,", "5": "которой сейчас 8 лет.", "6": "Каков общий возраст всех четырех птиц?", "7": "Если Салли Тридцать второй 8 лет, как и Салли Четвертой, то их общий возраст равен 8 + 8 = 16 годам.", "8": "Бабуля Рэд в два раза старше Салли Четвертой, а значит, Бабуле Рэд 2 * 8 = 16 лет.", "9": "В общей сложности Салли Тридцать второй, Салли Четвертой и Салли Рэд 16 + 16 = 32 года.", "10": "Салли Вторая на три года старше Бабули Рэд, то есть ей 16 + 3 = 19 лет.", "11": "Общий возраст четырех птиц составляет 32 + 19 = 51 год.", "12": "The answer is 51"}, "human_translated": true, "code_input": "####\nfacts = [ 'На камбузе живут четыре птицы.',\n  'Салли Вторая на три года старше Бабули Рэд.',\n  'Бабуля Рэд в два раза старше Салли Четвертой.',\n  'Салли Четвертой столько же лет, сколько Салли Тридцать второй,',\n  'которой сейчас 8\\xa0лет.']\nquestion = 'Каков общий возраст всех четырех птиц?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Салли Четвертой столько же лет, сколько Салли Тридцать второй,', 'которой сейчас 8\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Если Салли Тридцать второй 8\\xa0лет, как и Салли Четвертой, то их общий возраст равен 8\\xa0+\\xa08\\xa0= 16\\xa0годам.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Бабуля Рэд в два раза старше Салли Четвертой.', 'Если Салли Тридцать второй 8\\xa0лет, как и Салли Четвертой, то их общий возраст равен 8\\xa0+\\xa08\\xa0= 16\\xa0годам.']\nnew_fact = infer_new_fact(selected) # 'Бабуля Рэд в два раза старше Салли Четвертой, а значит, Бабуле Рэд 2\\xa0*\\xa08\\xa0= 16\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'В общей сложности Салли Тридцать второй, Салли Четвертой и Салли Рэд 16\\xa0+\\xa016\\xa0= 32\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Салли Вторая на три года старше Бабули Рэд.', 'Бабуля Рэд в два раза старше Салли Четвертой, а значит, Бабуле Рэд 2\\xa0*\\xa08\\xa0= 16\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Салли Вторая на три года старше Бабули Рэд, то есть ей 16\\xa0+\\xa03\\xa0= 19\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В общей сложности Салли Тридцать второй, Салли Четвертой и Салли Рэд 16\\xa0+\\xa016\\xa0= 32\\xa0года.', 'Салли Вторая на три года старше Бабули Рэд, то есть ей 16\\xa0+\\xa03\\xa0= 19\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Общий возраст четырех птиц составляет 32\\xa0+\\xa019\\xa0= 51\\xa0год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков общий возраст всех четырех птиц?', 'Общий возраст четырех птиц составляет 32\\xa0+\\xa019\\xa0= 51\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'The answer is 51'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '51'"}
{"id": "GSM8K_173_6554d106fe", "context": "", "options": [], "answer": "18000", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: First find the total minimum payment each month: $300/month + $200/month + $500/month = $1000/month; int1 & sent5 -> int2: Then multiply that number by 50% to find how much extra Jessica pays each month: $1000/month * .5 = $500/month; int1 & int2 -> int3: Add that number to the total minimum payment to find how much Jessica pays per month: $1000/month + $500/month = $1500/month; int3 & sent6 -> int4: Now multiply that number by the number of months in a year to find Jessica's annual payment: $1500/month * 12 months/year = $18,000/year; int4 & sent5 & sent6 -> int5: The answer is 18000;", "textual_logical_units": {"1": "Джессика подсчитывает, сколько ей нужно платить в месяц, чтобы погасить все кредиты.", "2": "За кредит на учебу ей надо выплачивать не меньше 300 долларов в месяц,", "3": "хотя бы 200 долларов в месяц нужно платить по кредитной карте,", "4": "и за ипотеку ей нужно вносить минимум 500 долларов в месяц.", "5": "Если Джессика хочет платить на 50 % больше этой минимальной суммы,", "6": "сколько ей придется заплатить в год?", "7": "Сначала нужно узнать, сколько всего составит минимальный ежемесячный платеж Джессики: 300 долларов + 200 долларов + 500 долларов = 1000 долларов в месяц.", "8": "Затем это число нужно умножить на 50 %, чтобы узнать, сколько Джессика будет платить дополнительно каждый месяц: 1000 долларов * 0,5 = 500 долларов в месяц.", "9": "Это число необходимо добавить к общему минимальному платежу, чтобы получить сумму, которую Джессика желает платить ежемесячно: 1000 долларов + 500 долларов = 1500 долларов в месяц.", "10": "Чтобы узнать размер годового платежа, это число нужно умножить на количество месяцев в году: 1500 долларов в месяц * 12 месяцев в году = 18 000 долларов в год.", "11": "The answer is 18000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джессика подсчитывает, сколько ей нужно платить в месяц, чтобы погасить все кредиты.',\n  'За кредит на учебу ей надо выплачивать не меньше 300\\xa0долларов в месяц,',\n  'хотя бы 200\\xa0долларов в месяц нужно платить по кредитной карте,',\n  'и за ипотеку ей нужно вносить минимум 500\\xa0долларов в месяц.',\n  'Если Джессика хочет платить на 50\\xa0% больше этой минимальной суммы,']\nquestion = 'сколько ей придется заплатить в год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['За кредит на учебу ей надо выплачивать не меньше 300\\xa0долларов в месяц,', 'хотя бы 200\\xa0долларов в месяц нужно платить по кредитной карте,', 'и за ипотеку ей нужно вносить минимум 500\\xa0долларов в месяц.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько всего составит минимальный ежемесячный платеж Джессики: 300\\xa0долларов\\xa0+ 200\\xa0долларов\\xa0+ 500\\xa0долларов\\xa0= 1000\\xa0долларов в месяц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джессика хочет платить на 50\\xa0% больше этой минимальной суммы,', 'Сначала нужно узнать, сколько всего составит минимальный ежемесячный платеж Джессики: 300\\xa0долларов\\xa0+ 200\\xa0долларов\\xa0+ 500\\xa0долларов\\xa0= 1000\\xa0долларов в месяц.']\nnew_fact = infer_new_fact(selected) # 'Затем это число нужно умножить на 50\\xa0%, чтобы узнать, сколько Джессика будет платить дополнительно каждый месяц: 1000\\xa0долларов\\xa0*\\xa00,5\\xa0= 500\\xa0долларов в месяц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала нужно узнать, сколько всего составит минимальный ежемесячный платеж Джессики: 300\\xa0долларов\\xa0+ 200\\xa0долларов\\xa0+ 500\\xa0долларов\\xa0= 1000\\xa0долларов в месяц.', 'Затем это число нужно умножить на 50\\xa0%, чтобы узнать, сколько Джессика будет платить дополнительно каждый месяц: 1000\\xa0долларов\\xa0*\\xa00,5\\xa0= 500\\xa0долларов в месяц.']\nnew_fact = infer_new_fact(selected) # 'Это число необходимо добавить к общему минимальному платежу, чтобы получить сумму, которую Джессика желает платить ежемесячно: 1000\\xa0долларов\\xa0+ 500\\xa0долларов\\xa0= 1500\\xa0долларов в месяц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько ей придется заплатить в год?', 'Это число необходимо добавить к общему минимальному платежу, чтобы получить сумму, которую Джессика желает платить ежемесячно: 1000\\xa0долларов\\xa0+ 500\\xa0долларов\\xa0= 1500\\xa0долларов в месяц.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать размер годового платежа, это число нужно умножить на количество месяцев в году: 1500\\xa0долларов в месяц\\xa0* 12\\xa0месяцев в году\\xa0= 18\\xa0000\\xa0долларов в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джессика хочет платить на 50\\xa0% больше этой минимальной суммы,', 'сколько ей придется заплатить в год?', 'Чтобы узнать размер годового платежа, это число нужно умножить на количество месяцев в году: 1500\\xa0долларов в месяц\\xa0* 12\\xa0месяцев в году\\xa0= 18\\xa0000\\xa0долларов в год.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18000'"}
{"id": "GSM8K_174_50c69e769b", "context": "", "options": [], "answer": "95", "reasoning_graph_edges": [{"antecedents": [2, 5, 6], "consequent": 9}, {"antecedents": [2, 7], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent5 & sent6 -> int1: There are 60 potatoes, and Billy takes a minute and a half to peel each one, or 60 potatoes * 1.5 minutes per potato = 90 minutes.; sent2 & sent7 -> int2: Billy only takes 5 seconds to cut the potatoes, so it takes 5 seconds * 60 potatoes / 60 seconds per minute = 5 minutes to cut the potatoes.; int1 & int2 -> int3: So it will take him a total of 90 minutes peeling + 5 minutes cutting = 95 minutes total prepping the potatoes.; int3 & sent8 -> int4: The answer is 95;", "textual_logical_units": {"1": "Билли пригласил всех родных на барбекю и теперь чистит и режет картофель, чтобы приготовить картофельный салат.", "2": "Гостей будет много, поэтому ему потребуется 60 картофелин.", "3": "Все они примерно одного размера,", "4": "поэтому на каждую уходит приблизительно равное количество времени.", "5": "Билли чистит картофелину", "6": "примерно за полторы минуты,", "7": "а затем нарезает ее за 5 секунд.", "8": "Сколько времени потребуется Билли, чтобы очистить и нарезать весь картофель?", "9": "Всего картофелин 60, и каждую Билли очищает за полторы минуты, то есть ему потребуется: 60 картофелин * 1,5 минуты на каждую = 90 минут.", "10": "Билли нарезает картофелину всего за 5 секунд, поэтому на нарезку всего картофеля уйдет: 5 секунд * 60 картофелин / 60 секунд в минуте = 5 минут.", "11": "Таким образом, на приготовление картофеля у него уйдет в общей сложности: 90 минут на чистку картофеля + 5 минут на нарезку = 95 минут.", "12": "The answer is 95"}, "human_translated": true, "code_input": "####\nfacts = [ 'Билли пригласил всех родных на барбекю и теперь чистит и режет картофель, чтобы приготовить картофельный салат.',\n  'Гостей будет много, поэтому ему потребуется 60\\xa0картофелин.',\n  'Все они примерно одного размера,',\n  'поэтому на каждую уходит приблизительно равное количество времени.',\n  'Билли чистит картофелину',\n  'примерно за полторы минуты,',\n  'а затем нарезает ее за 5\\xa0секунд.']\nquestion = 'Сколько времени потребуется Билли, чтобы очистить и нарезать весь картофель?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Гостей будет много, поэтому ему потребуется 60\\xa0картофелин.', 'Билли чистит картофелину', 'примерно за полторы минуты,']\nnew_fact = infer_new_fact(selected) # 'Всего картофелин\\xa060, и каждую Билли очищает за полторы минуты, то есть ему потребуется: 60\\xa0картофелин\\xa0* 1,5\\xa0минуты на каждую\\xa0= 90\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Гостей будет много, поэтому ему потребуется 60\\xa0картофелин.', 'а затем нарезает ее за 5\\xa0секунд.']\nnew_fact = infer_new_fact(selected) # 'Билли нарезает картофелину всего за 5 секунд, поэтому на нарезку всего картофеля уйдет: 5\\xa0секунд\\xa0* 60\\xa0картофелин\\xa0/ 60\\xa0секунд в минуте\\xa0= 5\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего картофелин\\xa060, и каждую Билли очищает за полторы минуты, то есть ему потребуется: 60\\xa0картофелин\\xa0* 1,5\\xa0минуты на каждую\\xa0= 90\\xa0минут.', 'Билли нарезает картофелину всего за 5 секунд, поэтому на нарезку всего картофеля уйдет: 5\\xa0секунд\\xa0* 60\\xa0картофелин\\xa0/ 60\\xa0секунд в минуте\\xa0= 5\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, на приготовление картофеля у него уйдет в общей сложности: 90\\xa0минут на чистку картофеля\\xa0+ 5\\xa0минут на нарезку\\xa0= 95\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени потребуется Билли, чтобы очистить и нарезать весь картофель?', 'Таким образом, на приготовление картофеля у него уйдет в общей сложности: 90\\xa0минут на чистку картофеля\\xa0+ 5\\xa0минут на нарезку\\xa0= 95\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 95'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '95'"}
{"id": "GSM8K_175_48fc080fa9", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [2], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Each gallon sells for a total of $10 because 20 x .5 = 10; sent2 -> int2: Each gallon costs $5 to make because 3 + 2 = 5; int1 & int2 -> int3: They make $5 off each gallon because 10 - 5 = 5; int3 & sent5 -> int4: They made and sold 5 gallons because 25 / 5 = 5; int4 & sent2 -> int5: They spent $15 on lemons because 5 x 3 = 15; int5 & sent5 & sent6 -> int6: The answer is 15;", "textual_logical_units": {"1": "Хуан и его брат Карлос продают лимонад.", "2": "Чтобы сделать галлон лимонада, им нужно потратить 3 доллара на лимоны и 2 доллара на сахар.", "3": "Стакан лимонада они продают за 0,50 доллара.", "4": "В галлоне 20 таких стаканов.", "5": "Если братья получили 25 долларов прибыли,", "6": "сколько они потратили на лимоны?", "7": "За каждый галлон лимонада братья выручают по 10 долларов, так как 20 x 0,5 = 10.", "8": "На приготовление одного галлона лимонада уходит 5 долларов: 3 + 2 = 5.", "9": "С каждого галлона братья получают 5 долларов прибыли: 10 – 5 = 5.", "10": "Они приготовили и продали 5 галлонов лимонада: 25 / 5 = 5.", "11": "На лимоны братья потратили 15 долларов: 5 x 3 = 15.", "12": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = [ 'Хуан и его брат Карлос продают лимонад.',\n  'Чтобы сделать галлон лимонада, им нужно потратить 3\\xa0доллара на лимоны и 2\\xa0доллара на сахар.',\n  'Стакан лимонада они продают за 0,50\\xa0доллара.',\n  'В галлоне 20\\xa0таких стаканов.',\n  'Если братья получили 25\\xa0долларов прибыли,']\nquestion = 'сколько они потратили на лимоны?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Стакан лимонада они продают за 0,50\\xa0доллара.', 'В галлоне 20\\xa0таких стаканов.']\nnew_fact = infer_new_fact(selected) # 'За каждый галлон лимонада братья выручают по 10\\xa0долларов, так как 20\\xa0x\\xa00,5\\xa0=\\xa010.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы сделать галлон лимонада, им нужно потратить 3\\xa0доллара на лимоны и 2\\xa0доллара на сахар.']\nnew_fact = infer_new_fact(selected) # 'На приготовление одного галлона лимонада уходит 5\\xa0долларов: 3\\xa0+\\xa02\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За каждый галлон лимонада братья выручают по 10\\xa0долларов, так как 20\\xa0x\\xa00,5\\xa0=\\xa010.', 'На приготовление одного галлона лимонада уходит 5\\xa0долларов: 3\\xa0+\\xa02\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'С каждого галлона братья получают 5\\xa0долларов прибыли: 10\\xa0–\\xa05\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если братья получили 25\\xa0долларов прибыли,', 'С каждого галлона братья получают 5\\xa0долларов прибыли: 10\\xa0–\\xa05\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'Они приготовили и продали 5\\xa0галлонов лимонада: 25\\xa0/\\xa05\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы сделать галлон лимонада, им нужно потратить 3\\xa0доллара на лимоны и 2\\xa0доллара на сахар.', 'Они приготовили и продали 5\\xa0галлонов лимонада: 25\\xa0/\\xa05\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'На лимоны братья потратили 15\\xa0долларов: 5\\xa0x\\xa03\\xa0=\\xa015.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если братья получили 25\\xa0долларов прибыли,', 'сколько они потратили на лимоны?', 'На лимоны братья потратили 15\\xa0долларов: 5\\xa0x\\xa03\\xa0=\\xa015.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_176_4492f48909", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If there were 80 Japanese, the number of Chinese was 240-80=160.; int1 & sent3 -> int2: Since there were 60 boys in the Chinese team, there were 160-60 = 100 girls in the Chinese team.; int2 & sent4 -> int3: The answer is 100;", "textual_logical_units": {"1": "В гонке участвовало 240 азиатов, из них 80 были японцами,", "2": "а остальные — китайцами.", "3": "Если в китайской команде было 60 юношей,", "4": "то сколько в ней было девушек?", "5": "Если японцев было 80, то китайцев было: 240 – 80 = 160.", "6": "Поскольку в китайской команде было 60 юношей, то девушек в ней было: 160 – 60 = 100 человек.", "7": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = ['В гонке участвовало 240\\xa0азиатов, из них 80\\xa0были японцами,', 'а остальные\\xa0— китайцами.', 'Если в китайской команде было 60\\xa0юношей,']\nquestion = 'то сколько в ней было девушек?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В гонке участвовало 240\\xa0азиатов, из них 80\\xa0были японцами,', 'а остальные\\xa0— китайцами.']\nnew_fact = infer_new_fact(selected) # 'Если японцев было\\xa080, то китайцев было: 240\\xa0–\\xa080\\xa0=\\xa0160.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в китайской команде было 60\\xa0юношей,', 'Если японцев было\\xa080, то китайцев было: 240\\xa0–\\xa080\\xa0=\\xa0160.']\nnew_fact = infer_new_fact(selected) # 'Поскольку в китайской команде было 60\\xa0юношей, то девушек в ней было: 160\\xa0–\\xa060\\xa0= 100\\xa0человек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то сколько в ней было девушек?', 'Поскольку в китайской команде было 60\\xa0юношей, то девушек в ней было: 160\\xa0–\\xa060\\xa0= 100\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_177_1f3cd00881", "context": "", "options": [], "answer": "350", "reasoning_graph_edges": [{"antecedents": [1, 6], "consequent": 8}, {"antecedents": [2, 6], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [4, 5], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [6, 7, 14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent6 -> int1: When Zaid spend 1/4 of his salary on rent, he parts with 1/4*$6000 = $1500; sent2 & sent6 -> int2: Car fuel costs him 1/3*$6000 = $2000; int1 & int2 -> int3: Total expenses amount to $2000+$1500 = $3500; int3 & sent6 -> int4: The total amount of money he remains with is $6000-$3500 = $2500; int4 & sent3 -> int5: He donates half of the remaining amount, which is 1/2*$2500 = $1250; sent4 & sent5 -> int6: The total amount of money given to his wife and daughter is $200+$700 = $900; int5 & int6 -> int7: After the amount that he gave the wife and daughter, the total amount remaining is $1250-$900 = $350; int7 & sent6 & sent7 -> int8: The answer is 350;", "textual_logical_units": {"1": "Зайд отдает 1/4 своей зарплаты за аренду квартиры,", "2": "1/3 тратит на заправку автомобиля, а", "3": "половину оставшейся суммы жертвует своей любимой благотворительной организации.", "4": "Кроме того, он дает дочери 200 долларов на карманные расходы и", "5": "еще 700 долларов отдает жене на продукты и другие хозяйственные покупки.", "6": "Если Зайд зарабатывает 6000 долларов в месяц,", "7": "сколько у него останется денег за минусом всех расходов и пожертвований?", "8": "Зайд отдает 1/4 зарплаты за аренду, то есть 1/4 * 6000 долларов = 1500 долларов.", "9": "На бензин у него уходит 1/3 * 6000 долларов = 2000 долларов.", "10": "В сумме на это он тратит: 2000 долларов + 1500 долларов = 3500 долларов.", "11": "После этих трат у него остается 6000 долларов – 3500 долларов = 2500 долларов.", "12": "Половину оставшейся суммы он жертвует на благотворительность, это 1/2 * 2500 долларов = 1250 долларов.", "13": "Жене и дочери он отдает 200 долларов + 700 долларов = 900 долларов.", "14": "В итоге у него остается 1250 – 900 долларов = 350 долларов.", "15": "The answer is 350"}, "human_translated": true, "code_input": "####\nfacts = [ 'Зайд отдает 1/4\\xa0своей зарплаты за аренду квартиры,',\n  '1/3\\xa0тратит на заправку автомобиля, а',\n  'половину оставшейся суммы жертвует своей любимой благотворительной организации.',\n  'Кроме того, он дает дочери 200\\xa0долларов на карманные расходы и',\n  'еще 700\\xa0долларов отдает жене на продукты и другие хозяйственные покупки.',\n  'Если Зайд зарабатывает 6000\\xa0долларов в месяц,']\nquestion = 'сколько у него останется денег за минусом всех расходов и пожертвований?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Зайд отдает 1/4\\xa0своей зарплаты за аренду квартиры,', 'Если Зайд зарабатывает 6000\\xa0долларов в месяц,']\nnew_fact = infer_new_fact(selected) # 'Зайд отдает 1/4\\xa0зарплаты за аренду, то есть 1/4\\xa0* 6000\\xa0долларов\\xa0= 1500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1/3\\xa0тратит на заправку автомобиля, а', 'Если Зайд зарабатывает 6000\\xa0долларов в месяц,']\nnew_fact = infer_new_fact(selected) # 'На бензин у него уходит 1/3\\xa0*\\xa06000\\xa0долларов\\xa0= 2000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Зайд отдает 1/4\\xa0зарплаты за аренду, то есть 1/4\\xa0* 6000\\xa0долларов\\xa0= 1500\\xa0долларов.', 'На бензин у него уходит 1/3\\xa0*\\xa06000\\xa0долларов\\xa0= 2000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В сумме на это он тратит: 2000\\xa0долларов\\xa0+ 1500\\xa0долларов\\xa0= 3500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Зайд зарабатывает 6000\\xa0долларов в месяц,', 'В сумме на это он тратит: 2000\\xa0долларов\\xa0+ 1500\\xa0долларов\\xa0= 3500\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'После этих трат у него остается 6000\\xa0долларов\\xa0– 3500\\xa0долларов\\xa0= 2500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['половину оставшейся суммы жертвует своей любимой благотворительной организации.', 'После этих трат у него остается 6000\\xa0долларов\\xa0– 3500\\xa0долларов\\xa0= 2500\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Половину оставшейся суммы он жертвует на благотворительность, это 1/2\\xa0*\\xa02500\\xa0долларов\\xa0= 1250\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, он дает дочери 200\\xa0долларов на карманные расходы и', 'еще 700\\xa0долларов отдает жене на продукты и другие хозяйственные покупки.']\nnew_fact = infer_new_fact(selected) # 'Жене и дочери он отдает 200\\xa0долларов\\xa0+ 700\\xa0долларов\\xa0= 900\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Половину оставшейся суммы он жертвует на благотворительность, это 1/2\\xa0*\\xa02500\\xa0долларов\\xa0= 1250\\xa0долларов.', 'Жене и дочери он отдает 200\\xa0долларов\\xa0+ 700\\xa0долларов\\xa0= 900\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В итоге у него остается 1250\\xa0– 900\\xa0долларов\\xa0= 350\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Зайд зарабатывает 6000\\xa0долларов в месяц,', 'сколько у него останется денег за минусом всех расходов и пожертвований?', 'В итоге у него остается 1250\\xa0– 900\\xa0долларов\\xa0= 350\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 350'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '350'"}
{"id": "GSM8K_178_9d25237f21", "context": "", "options": [], "answer": "122", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: If Bo has 40 crabs, then Monic, who has 4 fewer crabs than Bo, has 40-4 = 36 crabs.; int1 -> int2: Bo and Monic have a total of 36+40 = 76 crabs.; int1 & sent1 -> int3: Since Monic has 36 crabs, Rani's number of crabs is 36+ 10 = 46.; int2 & int3 -> int4: Together, the three have 76+46 = 122 crabs.; int4 & sent3 & sent4 -> int5: The answer is 122;", "textual_logical_units": {"1": "У Рани на десять крабов больше, чем у Моники,", "2": "а у Моники на 4 краба меньше, чем у Бо.", "3": "Если у Бо 40 крабов,", "4": "то сколько всего крабов у всех троих?", "5": "Если у Бо 40 крабов, а у Моники на 4 краба меньше, то у нее 40 – 4 = 36 крабов.", "6": "В сумме у Бо и Моники 36 + 40 = 76 крабов.", "7": "Раз у Моники 36 крабов, то у Рани их 36 + 10 = 46.", "8": "В сумме у всех троих 76 + 46 = 122 краба.", "9": "The answer is 122"}, "human_translated": true, "code_input": "####\nfacts = ['У Рани на десять крабов больше, чем у Моники,', 'а у Моники на 4\\xa0краба меньше, чем у Бо.', 'Если у Бо 40\\xa0крабов,']\nquestion = 'то сколько всего крабов у всех троих?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Рани на десять крабов больше, чем у Моники,', 'а у Моники на 4\\xa0краба меньше, чем у Бо.', 'Если у Бо 40\\xa0крабов,']\nnew_fact = infer_new_fact(selected) # 'Если у Бо 40\\xa0крабов, а у Моники на 4\\xa0краба меньше, то у нее 40\\xa0–\\xa04\\xa0= 36\\xa0крабов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Бо 40\\xa0крабов, а у Моники на 4\\xa0краба меньше, то у нее 40\\xa0–\\xa04\\xa0= 36\\xa0крабов.']\nnew_fact = infer_new_fact(selected) # 'В сумме у Бо и Моники 36\\xa0+\\xa040\\xa0= 76\\xa0крабов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Рани на десять крабов больше, чем у Моники,', 'Если у Бо 40\\xa0крабов, а у Моники на 4\\xa0краба меньше, то у нее 40\\xa0–\\xa04\\xa0= 36\\xa0крабов.']\nnew_fact = infer_new_fact(selected) # 'Раз у Моники 36\\xa0крабов, то у Рани их 36\\xa0+\\xa010\\xa0=\\xa046.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В сумме у Бо и Моники 36\\xa0+\\xa040\\xa0= 76\\xa0крабов.', 'Раз у Моники 36\\xa0крабов, то у Рани их 36\\xa0+\\xa010\\xa0=\\xa046.']\nnew_fact = infer_new_fact(selected) # 'В сумме у всех троих 76\\xa0+\\xa046\\xa0= 122\\xa0краба.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Бо 40\\xa0крабов,', 'то сколько всего крабов у всех троих?', 'В сумме у всех троих 76\\xa0+\\xa046\\xa0= 122\\xa0краба.']\nnew_fact = infer_new_fact(selected) # 'The answer is 122'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '122'"}
{"id": "GSM8K_179_13ab58e3d6", "context": "", "options": [], "answer": "130", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 5], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Lloyd tutored 5 + 8 = 13 hours for the first two weeks.; int1 & sent1 -> int2: Therefore, he earned 13 x $10 = $130 for the first two weeks.; int1 & sent4 -> int3: The answer is 130;", "textual_logical_units": {"1": "Ллойд занимается репетиторством по математике и зарабатывает 10 долларов в час.", "2": "В первую неделю уроки заняли у него 5 часов,", "3": "а во вторую неделю — 8 часов.", "4": "Сколько он заработал за эти две недели?", "5": "Первые две недели Ллойд проводил занятия в течение 5 + 8 = 13 часов.", "6": "То есть за первые две недели он заработал 13 x 10 = 130 долларов.", "7": "The answer is 130"}, "human_translated": true, "code_input": "####\nfacts = [ 'Ллойд занимается репетиторством по математике и зарабатывает 10\\xa0долларов в час.',\n  'В первую неделю уроки заняли у него 5\\xa0часов,',\n  'а во вторую неделю\\xa0— 8\\xa0часов.']\nquestion = 'Сколько он заработал за эти две недели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В первую неделю уроки заняли у него 5\\xa0часов,', 'а во вторую неделю\\xa0— 8\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Первые две недели Ллойд проводил занятия в течение 5\\xa0+\\xa08\\xa0= 13\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ллойд занимается репетиторством по математике и зарабатывает 10\\xa0долларов в час.', 'Первые две недели Ллойд проводил занятия в течение 5\\xa0+\\xa08\\xa0= 13\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'То есть за первые две недели он заработал 13\\xa0x\\xa010\\xa0= 130\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько он заработал за эти две недели?', 'Первые две недели Ллойд проводил занятия в течение 5\\xa0+\\xa08\\xa0= 13\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 130'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '130'"}
{"id": "GSM8K_180_8ee2b98692", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The winner got 3/4*80 = 60 votes.; int1 & sent3 -> int2: The loser got 80-60 = 20 votes.; int2 & sent2 & sent3 & sent4 -> int3: The answer is 20;", "textual_logical_units": {"1": "На роль старосты класса в школе Сары претендуют два кандидата.", "2": "Победитель набрал 3/4 голосов.", "3": "Всего в голосовании приняло участие 80 человек.", "4": "Сколько голосов набрал проигравший кандидат?", "5": "Победитель получил 3/4 * 80 = 60 голосов.", "6": "Проигравший получил 80 – 60 = 20 голосов.", "7": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['На роль старосты класса в школе Сары претендуют два кандидата.', 'Победитель набрал 3/4 голосов.', 'Всего в голосовании приняло участие 80\\xa0человек.']\nquestion = 'Сколько голосов набрал проигравший кандидат?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Победитель набрал 3/4 голосов.', 'Всего в голосовании приняло участие 80\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Победитель получил 3/4\\xa0*\\xa080\\xa0= 60\\xa0голосов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего в голосовании приняло участие 80\\xa0человек.', 'Победитель получил 3/4\\xa0*\\xa080\\xa0= 60\\xa0голосов.']\nnew_fact = infer_new_fact(selected) # 'Проигравший получил 80\\xa0–\\xa060\\xa0= 20\\xa0голосов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Победитель набрал 3/4 голосов.', 'Всего в голосовании приняло участие 80\\xa0человек.', 'Сколько голосов набрал проигравший кандидат?', 'Проигравший получил 80\\xa0–\\xa060\\xa0= 20\\xa0голосов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_181_2970bf0efc", "context": "", "options": [], "answer": "160", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [3, 5, 8], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Sandra ordered 200 pink calla lilies / 5 = 40 white carnations.; int1 & sent3 & sent5 -> int2: Sandra therefore ordered 4 * 40 = 160 red roses.; int2 & sent7 -> int3: The answer is 160;", "textual_logical_units": {"1": "Сандра, владелица цветочного киоска,", "2": "недовольна тем, что Фред привез не все, что ей требовалось.", "3": "Сандра заказала в четыре раза больше красных роз, чем белых гвоздик.", "4": "Еще она включила в заказ 200 розовых калл,", "5": "что в пять раз превышает количество белых гвоздик.", "6": "Сандра пригрозила сменить поставщика, если к 17:00 Фред не доставит недостающие красные розы.", "7": "Сколько красных роз Фред должен доставить к 17:00, чтобы умиротворить Сандру?", "8": "Сандра заказала: 200 розовых калл / 5 = 40 белых гвоздик.", "9": "Значит, она заказала 4 * 40 = 160 красных роз.", "10": "The answer is 160"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сандра, владелица цветочного киоска,',\n  'недовольна тем, что Фред привез не все, что ей требовалось.',\n  'Сандра заказала в четыре раза больше красных роз, чем белых гвоздик.',\n  'Еще она включила в заказ 200\\xa0розовых калл,',\n  'что в пять раз превышает количество белых гвоздик.',\n  'Сандра пригрозила сменить поставщика, если к 17:00 Фред не доставит недостающие красные розы.']\nquestion = 'Сколько красных роз Фред должен доставить к 17:00, чтобы умиротворить Сандру?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Еще она включила в заказ 200\\xa0розовых калл,', 'что в пять раз превышает количество белых гвоздик.']\nnew_fact = infer_new_fact(selected) # 'Сандра заказала: 200\\xa0розовых калл\\xa0/\\xa05\\xa0= 40\\xa0белых гвоздик.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сандра заказала в четыре раза больше красных роз, чем белых гвоздик.', 'что в пять раз превышает количество белых гвоздик.', 'Сандра заказала: 200\\xa0розовых калл\\xa0/\\xa05\\xa0= 40\\xa0белых гвоздик.']\nnew_fact = infer_new_fact(selected) # 'Значит, она заказала 4\\xa0*\\xa040\\xa0= 160\\xa0красных роз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько красных роз Фред должен доставить к 17:00, чтобы умиротворить Сандру?', 'Значит, она заказала 4\\xa0*\\xa040\\xa0= 160\\xa0красных роз.']\nnew_fact = infer_new_fact(selected) # 'The answer is 160'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '160'"}
{"id": "GSM8K_182_2654bdac99", "context": "", "options": [], "answer": "23", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 3, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: 2 years ago Jan was 30-2=28 years old; int1 & sent2 & sent3 -> int2: So Marks age two years ago was 5+28/2=19 years old; int2 & sent1 -> int3: Mark is now 19+2=21 years old; int3 & sent1 -> int4: So Jean is 21+2=23 years old; int4 & sent3 -> int5: The answer is 23;", "textual_logical_units": {"1": "Джин на два года старше Марка.", "2": "Два года назад возраст Марка был на 5 лет больше половины возраста Яна.", "3": "Если Яну 30 лет, сколько Жану?", "4": "2 года назад Яну было 30 – 2 = 28 лет.", "5": "На тот момент Марку было 5 + 28 / 2 = 19 лет.", "6": "Сейчас Марку 19 + 2 = 21 год.", "7": "Значит, Жану 21 + 2 = 23 года.", "8": "The answer is 23"}, "human_translated": true, "code_input": "####\nfacts = ['Джин на два года старше Марка.', 'Два года назад возраст Марка был на 5\\xa0лет больше половины возраста Яна.']\nquestion = 'Если Яну 30\\xa0лет, сколько Жану?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Два года назад возраст Марка был на 5\\xa0лет больше половины возраста Яна.', 'Если Яну 30\\xa0лет, сколько Жану?']\nnew_fact = infer_new_fact(selected) # '2\\xa0года назад Яну было 30\\xa0–\\xa02\\xa0= 28\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Два года назад возраст Марка был на 5\\xa0лет больше половины возраста Яна.', 'Если Яну 30\\xa0лет, сколько Жану?', '2\\xa0года назад Яну было 30\\xa0–\\xa02\\xa0= 28\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'На тот момент Марку было 5\\xa0+\\xa028\\xa0/\\xa02\\xa0= 19\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джин на два года старше Марка.', 'На тот момент Марку было 5\\xa0+\\xa028\\xa0/\\xa02\\xa0= 19\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Сейчас Марку 19\\xa0+\\xa02\\xa0= 21\\xa0год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джин на два года старше Марка.', 'Сейчас Марку 19\\xa0+\\xa02\\xa0= 21\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'Значит, Жану 21\\xa0+\\xa02\\xa0= 23\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Яну 30\\xa0лет, сколько Жану?', 'Значит, Жану 21\\xa0+\\xa02\\xa0= 23\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'The answer is 23'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '23'"}
{"id": "GSM8K_183_33fc9ff0f7", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4, 5], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: The first team will finish the relay in 4*55 = 220 seconds.; sent4 & sent5 -> int2: On the second team we must determine each runner's individual pace. We know the first runner will complete their leg in 60 seconds, so the second runner will take 60 - 3 = 57 seconds, then the third will take 57 - 3 = 54 seconds, and the fourth will take 54 - 3 = 51 seconds.; int2 & sent4 & sent5 -> int3: Thus, the second team will finish the relay in 60 + 57 + 54 + 51 = 222 seconds.; int1 & int3 -> int4: Therefore, the first team will finish 222 - 220 = 2 seconds faster than the second team.; int4 & sent6 -> int5: The answer is 2;", "textual_logical_units": {"1": "Две команды принимали участие в легкоатлетической эстафете 4 × 400 метров. Четыре участника каждой команды должны были пробежать по 400 метров (один круг) по стандартной трассе.", "2": "Одна из команд была отлично подготовлена,", "3": "и каждый ее участник пробежал 400 метров ровно за 55 секунд.", "4": "Подготовка другой команды была слабее: первый ее бегун пробежал 400 метров за 60 секунд,", "5": "а каждый следующий участник улучшал предыдущий результат на 3 секунды.", "6": "Учитывая эти условия, на сколько секунд обойдет соперников более быстрая команда?", "7": "Первая команда завершит эстафету за: 4 * 55 = 220 секунд.", "8": "Во второй команде необходимо определить темп каждого бегуна. Раз первый участник пробежал свою трассу за 60 секунд, то второму потребуется 60 – 3 = 57 секунд, третьему — 57 – 3 = 54 секунды, а четвертому — 54 – 3 = 51 секунда.", "9": "Таким образом, вторая команда завершит эстафету за: 60 + 57 + 54 + 51 = 222 секунды.", "10": "Следовательно, первая команда финиширует на: 222 – 220 = 2 секунды быстрее второй.", "11": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = [ 'Две команды принимали участие в легкоатлетической эстафете 4\\xa0×\\xa0400 метров. Четыре участника каждой команды должны были пробежать по 400\\xa0метров '\n  '(один круг) по стандартной трассе.',\n  'Одна из команд была отлично подготовлена,',\n  'и каждый ее участник пробежал 400\\xa0метров ровно за 55\\xa0секунд.',\n  'Подготовка другой команды была слабее: первый ее бегун пробежал 400\\xa0метров за 60\\xa0секунд,',\n  'а каждый следующий участник улучшал предыдущий результат на 3\\xa0секунды.']\nquestion = 'Учитывая эти условия, на сколько секунд обойдет соперников более быстрая команда?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и каждый ее участник пробежал 400\\xa0метров ровно за 55\\xa0секунд.']\nnew_fact = infer_new_fact(selected) # 'Первая команда завершит эстафету за: 4\\xa0*\\xa055\\xa0= 220\\xa0секунд.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подготовка другой команды была слабее: первый ее бегун пробежал 400\\xa0метров за 60\\xa0секунд,', 'а каждый следующий участник улучшал предыдущий результат на 3\\xa0секунды.']\nnew_fact = infer_new_fact(selected) # 'Во второй команде необходимо определить темп каждого бегуна. Раз первый участник пробежал свою трассу за 60\\xa0секунд, то второму потребуется 60\\xa0–\\xa03\\xa0= 57\\xa0секунд, третьему\\xa0— 57\\xa0–\\xa03\\xa0= 54\\xa0секунды, а четвертому\\xa0— 54\\xa0–\\xa03\\xa0= 51\\xa0секунда.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подготовка другой команды была слабее: первый ее бегун пробежал 400\\xa0метров за 60\\xa0секунд,', 'а каждый следующий участник улучшал предыдущий результат на 3\\xa0секунды.', 'Во второй команде необходимо определить темп каждого бегуна. Раз первый участник пробежал свою трассу за 60\\xa0секунд, то второму потребуется 60\\xa0–\\xa03\\xa0= 57\\xa0секунд, третьему\\xa0— 57\\xa0–\\xa03\\xa0= 54\\xa0секунды, а четвертому\\xa0— 54\\xa0–\\xa03\\xa0= 51\\xa0секунда.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, вторая команда завершит эстафету за: 60\\xa0+\\xa057\\xa0+\\xa054\\xa0+\\xa051 =\\xa0222\\xa0секунды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первая команда завершит эстафету за: 4\\xa0*\\xa055\\xa0= 220\\xa0секунд.', 'Таким образом, вторая команда завершит эстафету за: 60\\xa0+\\xa057\\xa0+\\xa054\\xa0+\\xa051 =\\xa0222\\xa0секунды.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, первая команда финиширует на: 222\\xa0–\\xa0220\\xa0= 2\\xa0секунды быстрее второй.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Учитывая эти условия, на сколько секунд обойдет соперников более быстрая команда?', 'Следовательно, первая команда финиширует на: 222\\xa0–\\xa0220\\xa0= 2\\xa0секунды быстрее второй.']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_184_4de5e61d39", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 3 numbers greater than 3 on the dice, so the chances of rolling one of them are 3 / 6 = 50%.; int1 & sent2 -> int2: The chance of rolling one even number is 50%, so the chance of rolling two in a row is 50% * 50% = 25%.; int1 & int2 -> int3: The difference between these two probabilities is 50% - 25% = 25%.; int3 & sent2 -> int4: The answer is 25;", "textual_logical_units": {"1": "Джерри бросает шестигранный кубик.", "2": "Насколько выше вероятность (в процентах), что он бросит число больше трех, чем два четных числа подряд?", "3": "На кубиках 3 числа больше трех, поэтому вероятность выкинуть одно из них составляет 3 / 6 = 50 %.", "4": "Вероятность выпадения одного четного числа равна 50 %, поэтому вероятность выпадения двух таких чисел подряд составляет 50 % * 50 % = 25 %.", "5": "Разница между этими двумя вероятностями составляет 50 % – 25 % = 25 %.", "6": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = ['Джерри бросает шестигранный кубик.']\nquestion = 'Насколько выше вероятность (в процентах), что он бросит число больше трех, чем два четных числа подряд?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джерри бросает шестигранный кубик.', 'Насколько выше вероятность (в процентах), что он бросит число больше трех, чем два четных числа подряд?']\nnew_fact = infer_new_fact(selected) # 'На кубиках 3\\xa0числа больше трех, поэтому вероятность выкинуть одно из них составляет 3\\xa0/\\xa06\\xa0=\\xa050\\xa0%.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Насколько выше вероятность (в процентах), что он бросит число больше трех, чем два четных числа подряд?', 'На кубиках 3\\xa0числа больше трех, поэтому вероятность выкинуть одно из них составляет 3\\xa0/\\xa06\\xa0=\\xa050\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Вероятность выпадения одного четного числа равна 50\\xa0%, поэтому вероятность выпадения двух таких чисел подряд составляет 50\\xa0%\\xa0*\\xa050\\xa0%\\xa0=\\xa025\\xa0%.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На кубиках 3\\xa0числа больше трех, поэтому вероятность выкинуть одно из них составляет 3\\xa0/\\xa06\\xa0=\\xa050\\xa0%.', 'Вероятность выпадения одного четного числа равна 50\\xa0%, поэтому вероятность выпадения двух таких чисел подряд составляет 50\\xa0%\\xa0*\\xa050\\xa0%\\xa0=\\xa025\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Разница между этими двумя вероятностями составляет 50\\xa0%\\xa0–\\xa025\\xa0%\\xa0=\\xa025\\xa0%.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Насколько выше вероятность (в процентах), что он бросит число больше трех, чем два четных числа подряд?', 'Разница между этими двумя вероятностями составляет 50\\xa0%\\xa0–\\xa025\\xa0%\\xa0=\\xa025\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_185_19ebf2310f", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Jenna got half as many apples as her mom, then she got 1/2 * 20 apples = 10 apples; int1 & sent3 -> int2: Together, they had 10 apples + 20 apples = 30 apples; int2 & sent4 -> int3: The answer is 30;", "textual_logical_units": {"1": "Дженна с мамой собирали яблоки на своей ферме.", "2": "Дженна собрала вдвое меньше яблок, чем ее мама.", "3": "Если мама собрала 20 яблок,", "4": "то сколько яблок они собрали вместе?", "5": "Если у Дженны в два раза меньше яблок, чем у мамы, значит, у нее 1/2 * 20 яблок = 10 яблок.", "6": "Всего у них 10 яблок + 20 яблок = 30 яблок.", "7": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['Дженна с мамой собирали яблоки на своей ферме.', 'Дженна собрала вдвое меньше яблок, чем ее мама.', 'Если мама собрала 20\\xa0яблок,']\nquestion = 'то сколько яблок они собрали вместе?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Дженна собрала вдвое меньше яблок, чем ее мама.', 'Если мама собрала 20\\xa0яблок,']\nnew_fact = infer_new_fact(selected) # 'Если у Дженны в два раза меньше яблок, чем у мамы, значит, у нее 1/2\\xa0* 20\\xa0яблок\\xa0= 10\\xa0яблок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если мама собрала 20\\xa0яблок,', 'Если у Дженны в два раза меньше яблок, чем у мамы, значит, у нее 1/2\\xa0* 20\\xa0яблок\\xa0= 10\\xa0яблок.']\nnew_fact = infer_new_fact(selected) # 'Всего у них 10\\xa0яблок\\xa0+ 20\\xa0яблок\\xa0= 30\\xa0яблок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то сколько яблок они собрали вместе?', 'Всего у них 10\\xa0яблок\\xa0+ 20\\xa0яблок\\xa0= 30\\xa0яблок.']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_186_3482d126f8", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [5, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [9, 12], "consequent": 13}, {"antecedents": [3, 13], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [9, 10, 15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent5 & sent6 -> int1: In the hamster cages, there are 10 cages * 5 pieces of straw per hamster cage = 50 pieces of straw.; int1 & sent7 -> int2: Between the rabbits and the hamsters, there are 50 pieces of straw for hamsters + 20 pieces of straw for rabbits = 70 pieces of straw.; int2 & sent9 -> int3: As the remaining straw is for the rats, the rats have a total of 160 used pieces of straw – 70 pieces of straw for the hamsters and rabbits = 90 pieces of straws.; int3 & sent3 -> int4: So in each cage, there are 90 pieces of straw / 3 cages = 30 pieces of straw.; int4 & sent4 -> int5: This means that each cage has 30 pieces of straw / 6 pieces of straw per rat = 5 rats.; int5 & sent10 & sent9 -> int6: The answer is 5;", "textual_logical_units": {"1": "Рассел работает в зоомагазине и", "2": "раскладывает солому в клетки с грызунами.", "3": "Крыс содержат равными группами в 3 клетках.", "4": "Каждой крысе причитается 6 соломинок.", "5": "Есть еще 10 клеток с хомяками, которых содержат по отдельности.", "6": "Каждому хомяку дают 5 соломинок.", "7": "Кролики содержатся в одной большой клетке, куда Рассел кладет 20 соломинок.", "8": "Больше солома в магазине нигде не используется.", "9": "Если грызуны получили в общей сложности 160 соломинок,", "10": "сколько крыс содержится в каждой клетке?", "11": "Хомякам было выдано: 10 клеток * 5 соломинок на хомяка = 50 соломинок.", "12": "Всего кролики и хомяки получили: 50 соломинок для хомяков + 20 соломинок для кроликов = 70 соломинок.", "13": "Остальная солома предназначена для крыс, а это: 160 соломинок всего – 70 соломинок для хомяков и кроликов = 90 соломинок.", "14": "В каждую клетку поместили: 90 соломинок / 3 клетки = 30 соломинок.", "15": "Это значит, что в каждой клетке: 30 соломинок / 6 соломинок на крысу = 5 крыс.", "16": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'Рассел работает в зоомагазине и',\n  'раскладывает солому в клетки с грызунами.',\n  'Крыс содержат равными группами в 3\\xa0клетках.',\n  'Каждой крысе причитается 6\\xa0соломинок.',\n  'Есть еще 10\\xa0клеток с хомяками, которых содержат по отдельности.',\n  'Каждому хомяку дают 5\\xa0соломинок.',\n  'Кролики содержатся в одной большой клетке, куда Рассел кладет 20\\xa0соломинок.',\n  'Больше солома в магазине нигде не используется.',\n  'Если грызуны получили в общей сложности 160\\xa0соломинок,']\nquestion = 'сколько крыс содержится в каждой клетке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Есть еще 10\\xa0клеток с хомяками, которых содержат по отдельности.', 'Каждому хомяку дают 5\\xa0соломинок.']\nnew_fact = infer_new_fact(selected) # 'Хомякам было выдано: 10\\xa0клеток\\xa0* 5\\xa0соломинок на хомяка\\xa0= 50\\xa0соломинок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кролики содержатся в одной большой клетке, куда Рассел кладет 20\\xa0соломинок.', 'Хомякам было выдано: 10\\xa0клеток\\xa0* 5\\xa0соломинок на хомяка\\xa0= 50\\xa0соломинок.']\nnew_fact = infer_new_fact(selected) # 'Всего кролики и хомяки получили: 50\\xa0соломинок для хомяков\\xa0+ 20\\xa0соломинок для кроликов\\xa0= 70\\xa0соломинок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если грызуны получили в общей сложности 160\\xa0соломинок,', 'Всего кролики и хомяки получили: 50\\xa0соломинок для хомяков\\xa0+ 20\\xa0соломинок для кроликов\\xa0= 70\\xa0соломинок.']\nnew_fact = infer_new_fact(selected) # 'Остальная солома предназначена для крыс, а это: 160 соломинок всего\\xa0– 70\\xa0соломинок для хомяков и кроликов\\xa0= 90\\xa0соломинок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Крыс содержат равными группами в 3\\xa0клетках.', 'Остальная солома предназначена для крыс, а это: 160 соломинок всего\\xa0– 70\\xa0соломинок для хомяков и кроликов\\xa0= 90\\xa0соломинок.']\nnew_fact = infer_new_fact(selected) # 'В каждую клетку поместили: 90\\xa0соломинок\\xa0/ 3\\xa0клетки\\xa0= 30\\xa0соломинок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждой крысе причитается 6\\xa0соломинок.', 'В каждую клетку поместили: 90\\xa0соломинок\\xa0/ 3\\xa0клетки\\xa0= 30\\xa0соломинок.']\nnew_fact = infer_new_fact(selected) # 'Это значит, что в каждой клетке: 30\\xa0соломинок\\xa0/ 6\\xa0соломинок на крысу\\xa0= 5\\xa0крыс.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если грызуны получили в общей сложности 160\\xa0соломинок,', 'сколько крыс содержится в каждой клетке?', 'Это значит, что в каждой клетке: 30\\xa0соломинок\\xa0/ 6\\xa0соломинок на крысу\\xa0= 5\\xa0крыс.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_187_2b65c2a463", "context": "", "options": [], "answer": "106", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The monthly interest is $100 x 2/100 = $2.; int1 & sent3 -> int2: After 3 months, the total interest amount to $2 x 3 = $6.; int2 & sent1 -> int3: Therefore, Mandy should give Benedict a total of $100 + $6 = $106.; int3 & sent3 & sent4 -> int4: The answer is 106;", "textual_logical_units": {"1": "Мэнди должна Бенедикту 100 долларов.", "2": "Они договорились, что ежемесячно на эту сумму будет начисляться по 2 %.", "3": "Мэнди смогла выплатить долг через 3 месяца.", "4": "Сколько денег она заплатила Бенедикту?", "5": "Ежемесячный процент составляет: 100 долларов x 2 / 100 = 2 доллара.", "6": "Через 3 месяца общая сумма процентов составит: 2 x 3 = 6 долларов.", "7": "Поэтому Мэнди пришлось заплатить Бенедикту в общей сложности: 100 долларов + 6 долларов = 106 долларов.", "8": "The answer is 106"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мэнди должна Бенедикту 100\\xa0долларов.',\n  'Они договорились, что ежемесячно на эту сумму будет начисляться по 2\\xa0%.',\n  'Мэнди смогла выплатить долг через 3\\xa0месяца.']\nquestion = 'Сколько денег она заплатила Бенедикту?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Мэнди должна Бенедикту 100\\xa0долларов.', 'Они договорились, что ежемесячно на эту сумму будет начисляться по 2\\xa0%.']\nnew_fact = infer_new_fact(selected) # 'Ежемесячный процент составляет: 100\\xa0долларов\\xa0x\\xa02\\xa0/\\xa0100\\xa0= 2\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мэнди смогла выплатить долг через 3\\xa0месяца.', 'Ежемесячный процент составляет: 100\\xa0долларов\\xa0x\\xa02\\xa0/\\xa0100\\xa0= 2\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Через 3 месяца общая сумма процентов составит: 2\\xa0x\\xa03\\xa0= 6\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мэнди должна Бенедикту 100\\xa0долларов.', 'Через 3 месяца общая сумма процентов составит: 2\\xa0x\\xa03\\xa0= 6\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Поэтому Мэнди пришлось заплатить Бенедикту в общей сложности: 100\\xa0долларов\\xa0+ 6\\xa0долларов\\xa0= 106\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мэнди смогла выплатить долг через 3\\xa0месяца.', 'Сколько денег она заплатила Бенедикту?', 'Поэтому Мэнди пришлось заплатить Бенедикту в общей сложности: 100\\xa0долларов\\xa0+ 6\\xa0долларов\\xa0= 106\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 106'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '106'"}
{"id": "GSM8K_188_98bdc7be82", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [2, 3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Each bag of wheat cost the trader $20+$2=$22 (taking transportation costs into account); int1 & sent3 -> int2: Each bag of wheat was sold for $30 each giving a profit of $30-$22=$8 on each bag; int1 & int2 & sent3 -> int3: Since a total of $400 profit was made, the total number of bags sold is $400/$8=50 bags; int3 & sent2 & sent3 & sent4 -> int4: The answer is 50;", "textual_logical_units": {"1": "Торговец купил у фермера несколько мешков зерна по 20 долларов за мешок.", "2": "Чтобы перевезти их на склад, ему пришлось заплатить еще по 2 доллара за мешок.", "3": "Торговец продал все зерно по 30 долларов за мешок и получил 400 долларов прибыли.", "4": "Сколько мешков зерна он продал?", "5": "Каждый мешок пшеницы обошелся торговцу в: 20 + 2 = 22 доллара (с учетом транспортных расходов).", "6": "Торговец продал зерно по 30 долларов за мешок, получив за каждый: 30 – 22 доллара = 8 долларов прибыли.", "7": "Поскольку общая прибыль составила 400 долларов, всего было продано: 400 долларов / 8 долларов = 50 мешков зерна.", "8": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = [ 'Торговец купил у фермера несколько мешков зерна по 20\\xa0долларов за мешок.',\n  'Чтобы перевезти их на склад, ему пришлось заплатить еще по 2\\xa0доллара за мешок.',\n  'Торговец продал все зерно по 30\\xa0долларов за мешок и получил 400\\xa0долларов прибыли.']\nquestion = 'Сколько мешков зерна он продал?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Торговец купил у фермера несколько мешков зерна по 20\\xa0долларов за мешок.', 'Чтобы перевезти их на склад, ему пришлось заплатить еще по 2\\xa0доллара за мешок.']\nnew_fact = infer_new_fact(selected) # 'Каждый мешок пшеницы обошелся торговцу в: 20\\xa0+\\xa02\\xa0= 22\\xa0доллара (с учетом транспортных расходов).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Торговец продал все зерно по 30\\xa0долларов за мешок и получил 400\\xa0долларов прибыли.', 'Каждый мешок пшеницы обошелся торговцу в: 20\\xa0+\\xa02\\xa0= 22\\xa0доллара (с учетом транспортных расходов).']\nnew_fact = infer_new_fact(selected) # 'Торговец продал зерно по 30\\xa0долларов за мешок, получив за каждый: 30\\xa0– 22\\xa0доллара\\xa0= 8\\xa0долларов прибыли.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Торговец продал все зерно по 30\\xa0долларов за мешок и получил 400\\xa0долларов прибыли.', 'Каждый мешок пшеницы обошелся торговцу в: 20\\xa0+\\xa02\\xa0= 22\\xa0доллара (с учетом транспортных расходов).', 'Торговец продал зерно по 30\\xa0долларов за мешок, получив за каждый: 30\\xa0– 22\\xa0доллара\\xa0= 8\\xa0долларов прибыли.']\nnew_fact = infer_new_fact(selected) # 'Поскольку общая прибыль составила 400\\xa0долларов, всего было продано: 400\\xa0долларов\\xa0/ 8\\xa0долларов\\xa0= 50\\xa0мешков зерна.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы перевезти их на склад, ему пришлось заплатить еще по 2\\xa0доллара за мешок.', 'Торговец продал все зерно по 30\\xa0долларов за мешок и получил 400\\xa0долларов прибыли.', 'Сколько мешков зерна он продал?', 'Поскольку общая прибыль составила 400\\xa0долларов, всего было продано: 400\\xa0долларов\\xa0/ 8\\xa0долларов\\xa0= 50\\xa0мешков зерна.']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_189_c0068c460f", "context": "", "options": [], "answer": "34", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [1, 6, 7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: They spent $20.25 - $4.50 = $15.75 on food.; sent3 -> int2: They spent $33 x 2 = $66 for the rides.; int1 & int2 & sent1 -> int3: They spent a total of $20.25 + $15.75 + $66 = $102.; int3 & sent1 -> int4: So each of them paid $102/3 = $34.; int4 & sent4 & sent5 -> int5: The answer is 34;", "textual_logical_units": {"1": "Трое друзей купили 3 билета на выставку, потратив 20,25 доллара.", "2": "Они перекусили в кафе, потратив на 4,50 доллара меньше, чем на билеты.", "3": "Потом они посетили 2 разных аттракциона, потратив на каждый по 33 доллара.", "4": "Если они поделили все расходы поровну,", "5": "сколько заплатил каждый из них?", "6": "Они оставили в кафе 20,25 доллара – 4,50 доллара = 15,75 доллара.", "7": "На аттракционы они потратили 33 доллара x 2 = 66 долларов.", "8": "В общей сложности они потратили 20,25 доллара + 15,75 доллара + 66 долларов = 102 доллара.", "9": "Таким образом, каждый из них заплатил 102 / 3 = 34 доллара.", "10": "The answer is 34"}, "human_translated": true, "code_input": "####\nfacts = [ 'Трое друзей купили 3\\xa0билета на выставку, потратив 20,25\\xa0доллара.',\n  'Они перекусили в кафе, потратив на 4,50\\xa0доллара меньше, чем на билеты.',\n  'Потом они посетили 2\\xa0разных аттракциона, потратив на каждый по 33\\xa0доллара.',\n  'Если они поделили все расходы поровну,']\nquestion = 'сколько заплатил каждый из них?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Трое друзей купили 3\\xa0билета на выставку, потратив 20,25\\xa0доллара.', 'Они перекусили в кафе, потратив на 4,50\\xa0доллара меньше, чем на билеты.']\nnew_fact = infer_new_fact(selected) # 'Они оставили в кафе 20,25\\xa0доллара\\xa0– 4,50\\xa0доллара\\xa0= 15,75\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Потом они посетили 2\\xa0разных аттракциона, потратив на каждый по 33\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'На аттракционы они потратили 33\\xa0доллара\\xa0x\\xa02\\xa0= 66\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Трое друзей купили 3\\xa0билета на выставку, потратив 20,25\\xa0доллара.', 'Они оставили в кафе 20,25\\xa0доллара\\xa0– 4,50\\xa0доллара\\xa0= 15,75\\xa0доллара.', 'На аттракционы они потратили 33\\xa0доллара\\xa0x\\xa02\\xa0= 66\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности они потратили 20,25\\xa0доллара\\xa0+ 15,75\\xa0доллара\\xa0+ 66\\xa0долларов\\xa0= 102\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Трое друзей купили 3\\xa0билета на выставку, потратив 20,25\\xa0доллара.', 'В общей сложности они потратили 20,25\\xa0доллара\\xa0+ 15,75\\xa0доллара\\xa0+ 66\\xa0долларов\\xa0= 102\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, каждый из них заплатил 102\\xa0/\\xa03\\xa0= 34\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если они поделили все расходы поровну,', 'сколько заплатил каждый из них?', 'Таким образом, каждый из них заплатил 102\\xa0/\\xa03\\xa0= 34\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 34'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '34'"}
{"id": "GSM8K_190_4137f91436", "context": "", "options": [], "answer": "360", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He is collecting peaches for 3*60=180 minutes; int1 & sent2 -> int2: So he can collect 180 * 2 = 360 peaches; int2 & sent3 -> int3: The answer is 360;", "textual_logical_units": {"1": "Джон уже 3 часа подряд собирает персики", "2": "со скоростью 2 персика в минуту.", "3": "Сколько персиков он собрал?", "4": "Он собирает персики в течение: 3 * 60 = 180 минут.", "5": "Следовательно, он собрал 180 * 2 = 360 персиков.", "6": "The answer is 360"}, "human_translated": true, "code_input": "####\nfacts = ['Джон уже 3\\xa0часа подряд собирает персики', 'со скоростью 2\\xa0персика в минуту.']\nquestion = 'Сколько персиков он собрал?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джон уже 3\\xa0часа подряд собирает персики']\nnew_fact = infer_new_fact(selected) # 'Он собирает персики в течение: 3\\xa0*\\xa060\\xa0=\\xa0180\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['со скоростью 2\\xa0персика в минуту.', 'Он собирает персики в течение: 3\\xa0*\\xa060\\xa0=\\xa0180\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, он собрал 180\\xa0*\\xa02\\xa0= 360\\xa0персиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько персиков он собрал?', 'Следовательно, он собрал 180\\xa0*\\xa02\\xa0= 360\\xa0персиков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '360'"}
{"id": "GSM8K_191_127e4a8214", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The flock needs 35 pounds per week because 10 x 3.5 = 35; int1 & sent1 -> int2: They need 5 pounds per day because 35 / 7 = 5; int2 & sent2 & sent3 -> int3: The answer is 5;", "textual_logical_units": {"1": "Чтобы выжить, утки должны съедать каждую неделю по 3,5 фунта насекомых.", "2": "Если в стае десять уток,", "3": "сколько фунтов насекомых им нужно в день?", "4": "На неделю стае нужно 35 фунтов насекомых: 10 x 3,5 = 35.", "5": "Значит, в день им требуется 5 фунтов насекомых: 35 / 7 = 5.", "6": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['Чтобы выжить, утки должны съедать каждую неделю по 3,5\\xa0фунта насекомых.', 'Если в стае десять уток,']\nquestion = 'сколько фунтов насекомых им нужно в день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Чтобы выжить, утки должны съедать каждую неделю по 3,5\\xa0фунта насекомых.', 'Если в стае десять уток,']\nnew_fact = infer_new_fact(selected) # 'На неделю стае нужно 35\\xa0фунтов насекомых: 10\\xa0x\\xa03,5\\xa0=\\xa035.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы выжить, утки должны съедать каждую неделю по 3,5\\xa0фунта насекомых.', 'На неделю стае нужно 35\\xa0фунтов насекомых: 10\\xa0x\\xa03,5\\xa0=\\xa035.']\nnew_fact = infer_new_fact(selected) # 'Значит, в день им требуется 5\\xa0фунтов насекомых: 35\\xa0/\\xa07\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в стае десять уток,', 'сколько фунтов насекомых им нужно в день?', 'Значит, в день им требуется 5\\xa0фунтов насекомых: 35\\xa0/\\xa07\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_192_8c741df1ea", "context": "", "options": [], "answer": "91", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He gets 10-2=8 new trees a year; int1 & sent1 -> int2: After 10 years he has 8*10=80 new trees; int2 & sent3 -> int3: So he had 80+50=130 trees; int3 & sent4 -> int4: He lost 130*.3=39 trees; int3 & int4 -> int5: That means he had 130-39=91 trees; int5 & sent5 -> int6: The answer is 91;", "textual_logical_units": {"1": "Том сажает по 10 деревьев в год.", "2": "Каждый год он также срубает 2 дерева.", "3": "В самом начале у него было 50 деревьев.", "4": "Через 10 лет 30 % деревьев погибло.", "5": "Сколько деревьев осталось у Тома?", "6": "Каждый год Том выращивает 10 – 2 = 8 новых деревьев.", "7": "За 10 лет у него выросло 8 * 10 = 80 новых деревьев.", "8": "То есть у него стало 80 + 50 = 130 деревьев.", "9": "Из них он потерял 130 * 0,3 = 39 деревьев.", "10": "Это значит, что у него осталось 130 – 39 = 91 дерево.", "11": "The answer is 91"}, "human_translated": true, "code_input": "####\nfacts = [ 'Том сажает по 10\\xa0деревьев в год.',\n  'Каждый год он также срубает 2\\xa0дерева.',\n  'В самом начале у него было 50\\xa0деревьев.',\n  'Через 10\\xa0лет 30\\xa0% деревьев погибло.']\nquestion = 'Сколько деревьев осталось у Тома?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Том сажает по 10\\xa0деревьев в год.', 'Каждый год он также срубает 2\\xa0дерева.']\nnew_fact = infer_new_fact(selected) # 'Каждый год Том выращивает 10\\xa0–\\xa02\\xa0= 8\\xa0новых деревьев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Том сажает по 10\\xa0деревьев в год.', 'Каждый год Том выращивает 10\\xa0–\\xa02\\xa0= 8\\xa0новых деревьев.']\nnew_fact = infer_new_fact(selected) # 'За 10\\xa0лет у него выросло 8\\xa0*\\xa010\\xa0= 80\\xa0новых деревьев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В самом начале у него было 50\\xa0деревьев.', 'За 10\\xa0лет у него выросло 8\\xa0*\\xa010\\xa0= 80\\xa0новых деревьев.']\nnew_fact = infer_new_fact(selected) # 'То есть у него стало 80\\xa0+\\xa050\\xa0= 130\\xa0деревьев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через 10\\xa0лет 30\\xa0% деревьев погибло.', 'То есть у него стало 80\\xa0+\\xa050\\xa0= 130\\xa0деревьев.']\nnew_fact = infer_new_fact(selected) # 'Из них он потерял 130\\xa0*\\xa00,3\\xa0= 39\\xa0деревьев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['То есть у него стало 80\\xa0+\\xa050\\xa0= 130\\xa0деревьев.', 'Из них он потерял 130\\xa0*\\xa00,3\\xa0= 39\\xa0деревьев.']\nnew_fact = infer_new_fact(selected) # 'Это значит, что у него осталось 130\\xa0–\\xa039\\xa0= 91\\xa0дерево.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько деревьев осталось у Тома?', 'Это значит, что у него осталось 130\\xa0–\\xa039\\xa0= 91\\xa0дерево.']\nnew_fact = infer_new_fact(selected) # 'The answer is 91'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '91'"}
{"id": "GSM8K_193_bdd6ee8d04", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [6, 8, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: On Saturday, one third of the original 18 pink flamingos were removed and painted white: 18*1/3=6 white flamingos.; int1 -> int2: This left 18 pink - 6 = 12 pink flamingos.; int1 & int2 & sent6 -> int3: On Sunday, 18 more pink flamingos were added, for a total of 12 + 18 = 30 pink flamingos on the front lawn.; int1 & int2 & int3 -> int4: Altogether, there were 30 pink and 6 white flamingos on the lawn, so there were 30 pink - 6 white =24 more pink flamingos.; int4 & sent7 -> int5: The answer is 24;", "textual_logical_units": {"1": "Сью живет в районе, где люди любят различные забавы.", "2": "Однажды на выходных соседи решили подшутить над Сью.", "3": "В пятницу утром они установили 18 пластиковых розовых фламинго на лужайке перед ее домом.", "4": "В субботу утром соседи забрали треть фламинго, покрасили их в белый цвет,", "5": "а затем снова установили перед домом Сью.", "6": "В воскресенье утром они добавили к этой «стае» еще 18 розовых фламинго.", "7": "На сколько количество розовых фламинго превышало количество белых к полудню воскресенья?", "8": "В субботу треть из 18 изначально установленных розовых фламинго убрали и покрасили в белый цвет: 18 * 1/3 = 6 белых фламинго.", "9": "Осталось 18 – 6 = 12 розовых фламинго.", "10": "В воскресенье установили еще 18 розовых фламинго, так что на лужайке перед домом оказалось 12 + 18 = 30 розовых фламинго.", "11": "Всего перед домом было 30 розовых и 6 белых фламинго, то есть розовых фламинго было на: 30 розовых фламинго – 6 белых фламинго = 24 штуки больше.", "12": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сью живет в районе, где люди любят различные забавы.',\n  'Однажды на выходных соседи решили подшутить над Сью.',\n  'В пятницу утром они установили 18\\xa0пластиковых розовых фламинго на лужайке перед ее домом.',\n  'В субботу утром соседи забрали треть фламинго, покрасили их в белый цвет,',\n  'а затем снова установили перед домом Сью.',\n  'В воскресенье утром они добавили к этой «стае» еще 18\\xa0розовых фламинго.']\nquestion = 'На сколько количество розовых фламинго превышало количество белых к полудню воскресенья?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В пятницу утром они установили 18\\xa0пластиковых розовых фламинго на лужайке перед ее домом.', 'В субботу утром соседи забрали треть фламинго, покрасили их в белый цвет,']\nnew_fact = infer_new_fact(selected) # 'В субботу треть из 18\\xa0изначально установленных розовых фламинго убрали и покрасили в белый цвет: 18\\xa0*\\xa01/3\\xa0= 6\\xa0белых фламинго.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В субботу треть из 18\\xa0изначально установленных розовых фламинго убрали и покрасили в белый цвет: 18\\xa0*\\xa01/3\\xa0= 6\\xa0белых фламинго.']\nnew_fact = infer_new_fact(selected) # 'Осталось 18\\xa0–\\xa06\\xa0= 12\\xa0розовых фламинго.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В воскресенье утром они добавили к этой «стае» еще 18\\xa0розовых фламинго.', 'В субботу треть из 18\\xa0изначально установленных розовых фламинго убрали и покрасили в белый цвет: 18\\xa0*\\xa01/3\\xa0= 6\\xa0белых фламинго.', 'Осталось 18\\xa0–\\xa06\\xa0= 12\\xa0розовых фламинго.']\nnew_fact = infer_new_fact(selected) # 'В воскресенье установили еще 18\\xa0розовых фламинго, так что на лужайке перед домом оказалось 12\\xa0+\\xa018\\xa0= 30\\xa0розовых фламинго.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В субботу треть из 18\\xa0изначально установленных розовых фламинго убрали и покрасили в белый цвет: 18\\xa0*\\xa01/3\\xa0= 6\\xa0белых фламинго.', 'Осталось 18\\xa0–\\xa06\\xa0= 12\\xa0розовых фламинго.', 'В воскресенье установили еще 18\\xa0розовых фламинго, так что на лужайке перед домом оказалось 12\\xa0+\\xa018\\xa0= 30\\xa0розовых фламинго.']\nnew_fact = infer_new_fact(selected) # 'Всего перед домом было 30\\xa0розовых и 6\\xa0белых фламинго, то есть розовых фламинго было на: 30\\xa0розовых фламинго\\xa0– 6 белых фламинго\\xa0= 24\\xa0штуки больше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько количество розовых фламинго превышало количество белых к полудню воскресенья?', 'Всего перед домом было 30\\xa0розовых и 6\\xa0белых фламинго, то есть розовых фламинго было на: 30\\xa0розовых фламинго\\xa0– 6 белых фламинго\\xa0= 24\\xa0штуки больше.']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_194_18825f334d", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Violetta is going to pay 5 * 2 = $10 for the crayons she wants.; int1 & sent3 -> int2: If she pays $20, she will get 20 - 10 = $10 of change.; int2 & sent5 -> int3: The answer is 10;", "textual_logical_units": {"1": "Виолетта решила купить новые карандаши.", "2": "Ей нужны карандаши пяти разных цветов.", "3": "На их покупку она собирается потратить 20 долларов.", "4": "Один карандаш стоит 2 доллара.", "5": "Сколько сдачи она получит?", "6": "За карандаши, которые ей нужны, Виолетте нужно будет заплатить: 5 * 2 = 10 долларов.", "7": "Если она заплатит 20 долларов, то получит: 20 – 10 = 10 долларов сдачи.", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Виолетта решила купить новые карандаши.',\n  'Ей нужны карандаши пяти разных цветов.',\n  'На их покупку она собирается потратить 20\\xa0долларов.',\n  'Один карандаш стоит 2\\xa0доллара.']\nquestion = 'Сколько сдачи она получит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ей нужны карандаши пяти разных цветов.', 'Один карандаш стоит 2\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'За карандаши, которые ей нужны, Виолетте нужно будет заплатить: 5\\xa0*\\xa02\\xa0= 10\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На их покупку она собирается потратить 20\\xa0долларов.', 'За карандаши, которые ей нужны, Виолетте нужно будет заплатить: 5\\xa0*\\xa02\\xa0= 10\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Если она заплатит 20\\xa0долларов, то получит: 20\\xa0–\\xa010\\xa0= 10\\xa0долларов сдачи.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сдачи она получит?', 'Если она заплатит 20\\xa0долларов, то получит: 20\\xa0–\\xa010\\xa0= 10\\xa0долларов сдачи.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_195_98efe060af", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A pen costs $1.20 + $0.30 = $1.50.; int1 & sent3 -> int2: So, 8 pens cost $1.50 x 8 = $12.; int2 & sent3 -> int3: The answer is 12;", "textual_logical_units": {"1": "Ручка стоит столько же, сколько карандаш и ластик вместе взятые.", "2": "Карандаш стоит 1,20 доллара, а ластик — 0,30 доллара.", "3": "Сколько будут стоить 8 ручек?", "4": "Ручка стоит: 1,20 доллара + 0,30 доллара = 1,50 доллара.", "5": "Следовательно, 8 ручек стоят: 1,50 доллара x 8 = 12 долларов.", "6": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = ['Ручка стоит столько же, сколько карандаш и ластик вместе взятые.', 'Карандаш стоит 1,20\\xa0доллара, а ластик\\xa0— 0,30\\xa0доллара.']\nquestion = 'Сколько будут стоить 8\\xa0ручек?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ручка стоит столько же, сколько карандаш и ластик вместе взятые.', 'Карандаш стоит 1,20\\xa0доллара, а ластик\\xa0— 0,30\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Ручка стоит: 1,20\\xa0доллара\\xa0+ 0,30\\xa0доллара\\xa0= 1,50\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будут стоить 8\\xa0ручек?', 'Ручка стоит: 1,20\\xa0доллара\\xa0+ 0,30\\xa0доллара\\xa0= 1,50\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 8\\xa0ручек стоят: 1,50\\xa0доллара\\xa0x\\xa08\\xa0= 12\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будут стоить 8\\xa0ручек?', 'Следовательно, 8\\xa0ручек стоят: 1,50\\xa0доллара\\xa0x\\xa08\\xa0= 12\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_196_23d1fe5901", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The restaurants need 40 * 2 = 80 lbs. of carrots.; int1 & sent1 -> int2: So 200 - 80 = 120 lbs. of carrots will not be used.; int2 & sent3 -> int3: The answer is 120;", "textual_logical_units": {"1": "200 фунтов моркови нужно распределить между 40 городскими ресторанами.", "2": "Каждый ресторан должен получить по 2 фунта моркови.", "3": "Сколько фунтов моркови останется?", "4": "Всего ресторанам нужно: 40 * 2 = 80 фунтов моркови.", "5": "Следовательно, останется: 200 – 80 = 120 фунтов моркови.", "6": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['200\\xa0фунтов моркови нужно распределить между 40\\xa0городскими ресторанами.', 'Каждый ресторан должен получить по 2\\xa0фунта моркови.']\nquestion = 'Сколько фунтов моркови останется?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['200\\xa0фунтов моркови нужно распределить между 40\\xa0городскими ресторанами.', 'Каждый ресторан должен получить по 2\\xa0фунта моркови.']\nnew_fact = infer_new_fact(selected) # 'Всего ресторанам нужно: 40\\xa0*\\xa02\\xa0= 80\\xa0фунтов моркови.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['200\\xa0фунтов моркови нужно распределить между 40\\xa0городскими ресторанами.', 'Всего ресторанам нужно: 40\\xa0*\\xa02\\xa0= 80\\xa0фунтов моркови.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, останется: 200\\xa0–\\xa080\\xa0= 120\\xa0фунтов моркови.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько фунтов моркови останется?', 'Следовательно, останется: 200\\xa0–\\xa080\\xa0= 120\\xa0фунтов моркови.']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_197_9b62a1e506", "context": "", "options": [], "answer": "6277", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent3 -> int1: The total number of adults is 8417 + 9092 = 17509; int1 & sent2 -> int2: Thus the number of children is 23786 - 17509 = 6277; int2 & sent5 -> int3: The answer is 6277;", "textual_logical_units": {"1": "В небольшом городке", "2": "проживает ровно 23 786 человек.", "3": "Среди них 8417 мужчин и 9092 женщины.", "4": "Все остальные жители городка — дети.", "5": "Сколько в городке детей?", "6": "Всего в городке проживает: 8417 + 9092 = 17 509 взрослых.", "7": "Следовательно, в нем: 23 786 – 17 509 = 6277 детей.", "8": "The answer is 6277"}, "human_translated": true, "code_input": "####\nfacts = ['В небольшом городке', 'проживает ровно 23\\xa0786\\xa0человек.', 'Среди них 8417\\xa0мужчин и 9092\\xa0женщины.', 'Все остальные жители городка\\xa0— дети.']\nquestion = 'Сколько в городке детей?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Среди них 8417\\xa0мужчин и 9092\\xa0женщины.']\nnew_fact = infer_new_fact(selected) # 'Всего в городке проживает: 8417\\xa0+\\xa09092\\xa0= 17\\xa0509\\xa0взрослых.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['проживает ровно 23\\xa0786\\xa0человек.', 'Всего в городке проживает: 8417\\xa0+\\xa09092\\xa0= 17\\xa0509\\xa0взрослых.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в нем: 23\\xa0786\\xa0–\\xa017\\xa0509\\xa0= 6277\\xa0детей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько в городке детей?', 'Следовательно, в нем: 23\\xa0786\\xa0–\\xa017\\xa0509\\xa0= 6277\\xa0детей.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6277'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6277'"}
{"id": "GSM8K_198_0524c63e39", "context": "", "options": [], "answer": "320", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 6, 7, 8], "consequent": 9}, {"antecedents": [1, 6, 7, 8, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: In the first month, Elaine collected 3*20= 60 pokemon cards.; int1 & sent3 -> int2: In the second month, she collected 60-20 = 40 cards.; int1 & int2 -> int3: After the two months, the new pokemon cards she'd collected is 40+60 = 100; int1 & int2 & int3 & sent4 -> int4: The number of cards in the third month is twice the combined number in the first and second month, which totals 2*100 = 200 pokemon cards.; int1 & int2 & int3 & int4 & sent1 -> int5: In total, Elaine has 20 cards she initially had+100 cards collected in the first and second month +200 cards collected in the third month = 320 cards; int5 & sent5 -> int6: The answer is 320;", "textual_logical_units": {"1": "Изначально у Элейн было 20 карточек с покемонами.", "2": "В первый месяц она собрала в три раза больше таких карточек.", "3": "Во втором месяце у нее получилось собрать на 20 карточек меньше, чем в первом.", "4": "В третьем месяце она добавила в коллекцию в два раза больше карточек, чем за первый и второй месяцы вместе взятые.", "5": "Сколько у нее сейчас карточек с покемонами?", "6": "В первый месяц Элейн собрала 3 * 20 = 60 карточек с покемонами.", "7": "Во втором месяце она собрала 60 – 20 = 40 карточек.", "8": "За два месяца ей удалось получить: 40 + 60 = 100 новых карточек с покемонами.", "9": "В третьем месяце она собрала в два раза больше карточек, чем за первый и второй месяцы вместе взятые, то есть 2 * 100 = 200 карточек с покемонами.", "10": "Значит, сейчас у Элейн: 20 карточек, которые были у нее изначально + 100 карточек, собранных за первый и второй месяцы + 200 карточек, собранных за третий месяц = 320 карточек.", "11": "The answer is 320"}, "human_translated": true, "code_input": "####\nfacts = [ 'Изначально у Элейн было 20\\xa0карточек с покемонами.',\n  'В первый месяц она собрала в три раза больше таких карточек.',\n  'Во втором месяце у нее получилось собрать на 20\\xa0карточек меньше, чем в первом.',\n  'В третьем месяце она добавила в коллекцию в два раза больше карточек, чем за первый и второй месяцы вместе взятые.']\nquestion = 'Сколько у нее сейчас карточек с покемонами?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Изначально у Элейн было 20\\xa0карточек с покемонами.', 'В первый месяц она собрала в три раза больше таких карточек.']\nnew_fact = infer_new_fact(selected) # 'В первый месяц Элейн собрала 3\\xa0*\\xa020\\xa0= 60\\xa0карточек с покемонами.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во втором месяце у нее получилось собрать на 20\\xa0карточек меньше, чем в первом.', 'В первый месяц Элейн собрала 3\\xa0*\\xa020\\xa0= 60\\xa0карточек с покемонами.']\nnew_fact = infer_new_fact(selected) # 'Во втором месяце она собрала 60\\xa0–\\xa020\\xa0= 40\\xa0карточек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый месяц Элейн собрала 3\\xa0*\\xa020\\xa0= 60\\xa0карточек с покемонами.', 'Во втором месяце она собрала 60\\xa0–\\xa020\\xa0= 40\\xa0карточек.']\nnew_fact = infer_new_fact(selected) # 'За два месяца ей удалось получить: 40\\xa0+\\xa060\\xa0= 100\\xa0новых карточек с покемонами.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В третьем месяце она добавила в коллекцию в два раза больше карточек, чем за первый и второй месяцы вместе взятые.', 'В первый месяц Элейн собрала 3\\xa0*\\xa020\\xa0= 60\\xa0карточек с покемонами.', 'Во втором месяце она собрала 60\\xa0–\\xa020\\xa0= 40\\xa0карточек.', 'За два месяца ей удалось получить: 40\\xa0+\\xa060\\xa0= 100\\xa0новых карточек с покемонами.']\nnew_fact = infer_new_fact(selected) # 'В третьем месяце она собрала в два раза больше карточек, чем за первый и второй месяцы вместе взятые, то есть 2\\xa0*\\xa0100\\xa0= 200\\xa0карточек с покемонами.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Изначально у Элейн было 20\\xa0карточек с покемонами.', 'В первый месяц Элейн собрала 3\\xa0*\\xa020\\xa0= 60\\xa0карточек с покемонами.', 'Во втором месяце она собрала 60\\xa0–\\xa020\\xa0= 40\\xa0карточек.', 'За два месяца ей удалось получить: 40\\xa0+\\xa060\\xa0= 100\\xa0новых карточек с покемонами.', 'В третьем месяце она собрала в два раза больше карточек, чем за первый и второй месяцы вместе взятые, то есть 2\\xa0*\\xa0100\\xa0= 200\\xa0карточек с покемонами.']\nnew_fact = infer_new_fact(selected) # 'Значит, сейчас у Элейн: 20\\xa0карточек, которые были у нее изначально\\xa0+ 100\\xa0карточек, собранных за первый и второй месяцы\\xa0+ 200\\xa0карточек, собранных за третий месяц\\xa0= 320\\xa0карточек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у нее сейчас карточек с покемонами?', 'Значит, сейчас у Элейн: 20\\xa0карточек, которые были у нее изначально\\xa0+ 100\\xa0карточек, собранных за первый и второй месяцы\\xa0+ 200\\xa0карточек, собранных за третий месяц\\xa0= 320\\xa0карточек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 320'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '320'"}
{"id": "GSM8K_199_d34b138877", "context": "", "options": [], "answer": "7500", "reasoning_graph_edges": [{"antecedents": [2, 5], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [4, 6], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent5 -> int1: Since Mark edits an equal number of sentences for each publisher, he edits 1000 / 2 = 500 sentences for each of them.; int1 & sent5 -> int2: From Publisher A, he earns 5 cents per sentence * 500 sentences = 2500 cents.; sent4 & sent6 -> int3: Since Publisher B pays Mark twice as much, he earns 5 * 2 = 10 cents per sentence from Publisher B.; int1 & int3 -> int4: Thus, he earns 10 cents per sentence * 500 sentences = 5000 cents from publisher B.; int2 & int4 -> int5: Thus, he earns 2500 + 5000 = 7500 cents in total.; int5 & sent7 -> int6: The answer is 7500;", "textual_logical_units": {"1": "Марк работает редактором.", "2": "Каждую неделю он редактирует одинаковое количество предложений для двух разных издательств.", "3": "Ставки за предложение у этих издательств разные.", "4": "Издатель B платит Марку в два раза больше, чем издатель A.", "5": "Марк редактирует в общей сложности 1000 предложений в неделю.", "6": "Издатель А платит ему 5 центов за предложение.", "7": "Сколько Марк зарабатывает за неделю в центах?", "8": "Поскольку Марк редактирует одинаковое количество предложений для обоих издателей, значит, для каждого из них он редактирует по: 1000 / 2 = 500 предложений.", "9": "В издательстве А он зарабатывает 5 центов за предложение, то есть 5 центов * 500 предложений = 2500 центов.", "10": "Поскольку издатель B платит Марку в два раза больше, здесь Марк зарабатывает 5 * 2 = 10 центов за предложение.", "11": "Таким образом, издатель B платит ему: 10 центов за предложение * 500 предложений = 5000 центов.", "12": "Следовательно, в общей сложности Марк зарабатывает: 2500 + 5000 = 7500 центов.", "13": "The answer is 7500"}, "human_translated": true, "code_input": "####\nfacts = [ 'Марк работает редактором.',\n  'Каждую неделю он редактирует одинаковое количество предложений для двух разных издательств.',\n  'Ставки за предложение у этих издательств разные.',\n  'Издатель\\xa0B платит Марку в два раза больше, чем издатель\\xa0A.',\n  'Марк редактирует в общей сложности 1000\\xa0предложений в неделю.',\n  'Издатель\\xa0А платит ему 5\\xa0центов за предложение.']\nquestion = 'Сколько Марк зарабатывает за неделю в центах?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждую неделю он редактирует одинаковое количество предложений для двух разных издательств.', 'Марк редактирует в общей сложности 1000\\xa0предложений в неделю.']\nnew_fact = infer_new_fact(selected) # 'Поскольку Марк редактирует одинаковое количество предложений для обоих издателей, значит, для каждого из них он редактирует по: 1000\\xa0/\\xa02\\xa0= 500\\xa0предложений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марк редактирует в общей сложности 1000\\xa0предложений в неделю.', 'Поскольку Марк редактирует одинаковое количество предложений для обоих издателей, значит, для каждого из них он редактирует по: 1000\\xa0/\\xa02\\xa0= 500\\xa0предложений.']\nnew_fact = infer_new_fact(selected) # 'В издательстве\\xa0А он зарабатывает 5\\xa0центов за предложение, то есть 5\\xa0центов\\xa0* 500\\xa0предложений\\xa0= 2500\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Издатель\\xa0B платит Марку в два раза больше, чем издатель\\xa0A.', 'Издатель\\xa0А платит ему 5\\xa0центов за предложение.']\nnew_fact = infer_new_fact(selected) # 'Поскольку издатель\\xa0B платит Марку в два раза больше, здесь Марк зарабатывает 5\\xa0*\\xa02\\xa0= 10\\xa0центов за предложение.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поскольку Марк редактирует одинаковое количество предложений для обоих издателей, значит, для каждого из них он редактирует по: 1000\\xa0/\\xa02\\xa0= 500\\xa0предложений.', 'Поскольку издатель\\xa0B платит Марку в два раза больше, здесь Марк зарабатывает 5\\xa0*\\xa02\\xa0= 10\\xa0центов за предложение.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, издатель\\xa0B платит ему: 10\\xa0центов за предложение\\xa0*\\xa0500 предложений\\xa0= 5000\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В издательстве\\xa0А он зарабатывает 5\\xa0центов за предложение, то есть 5\\xa0центов\\xa0* 500\\xa0предложений\\xa0= 2500\\xa0центов.', 'Таким образом, издатель\\xa0B платит ему: 10\\xa0центов за предложение\\xa0*\\xa0500 предложений\\xa0= 5000\\xa0центов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в общей сложности Марк зарабатывает: 2500\\xa0+\\xa05000\\xa0= 7500\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько Марк зарабатывает за неделю в центах?', 'Следовательно, в общей сложности Марк зарабатывает: 2500\\xa0+\\xa05000\\xa0= 7500\\xa0центов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7500'"}
{"id": "GSM8K_200_141aaef0a6", "context": "", "options": [], "answer": "55", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 4], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Baldur gets 5 x 5 = 25 liters of water in the morning.; sent3 & sent4 -> int2: He gets 6 x 5 = 30 liters of water in the afternoon.; int1 & int2 -> int3: Therefore, the total liters of water he gets every day is 30 + 25 = 55.; int3 & sent4 & sent5 -> int4: The answer is 55;", "textual_logical_units": {"1": "Бальдур берет воду из колодца.", "2": "Каждое утро он приносит 5 ведер воды,", "3": "а после обеда приносит еще 6 ведер.", "4": "Если каждое ведро рассчитано на 5 литров воды,", "5": "сколько литров воды Бальдур приносит в день?", "6": "Утром Бальдур приносит: 5 x 5 = 25 литров воды.", "7": "После обеда он приносит: 6 x 5 = 30 литров воды.", "8": "Следовательно, всего за день он приносит: 30 + 25 = 55 литров воды.", "9": "The answer is 55"}, "human_translated": true, "code_input": "####\nfacts = [ 'Бальдур берет воду из колодца.',\n  'Каждое утро он приносит 5\\xa0ведер воды,',\n  'а после обеда приносит еще 6\\xa0ведер.',\n  'Если каждое ведро рассчитано на 5\\xa0литров воды,']\nquestion = 'сколько литров воды Бальдур приносит в день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждое утро он приносит 5\\xa0ведер воды,', 'Если каждое ведро рассчитано на 5\\xa0литров воды,']\nnew_fact = infer_new_fact(selected) # 'Утром Бальдур приносит: 5\\xa0x\\xa05\\xa0= 25\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а после обеда приносит еще 6\\xa0ведер.', 'Если каждое ведро рассчитано на 5\\xa0литров воды,']\nnew_fact = infer_new_fact(selected) # 'После обеда он приносит: 6\\xa0x\\xa05\\xa0= 30\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Утром Бальдур приносит: 5\\xa0x\\xa05\\xa0= 25\\xa0литров воды.', 'После обеда он приносит: 6\\xa0x\\xa05\\xa0= 30\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, всего за день он приносит: 30\\xa0+\\xa025\\xa0= 55\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если каждое ведро рассчитано на 5\\xa0литров воды,', 'сколько литров воды Бальдур приносит в день?', 'Следовательно, всего за день он приносит: 30\\xa0+\\xa025\\xa0= 55\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 55'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '55'"}
{"id": "GSM8K_201_3e73cccbdc", "context": "", "options": [], "answer": "114200", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [4, 5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: He makes 2000*52=$104,000 a year; int1 & sent3 -> int2: So the raise is worth .05*104,000=$5200; int1 & int2 -> int3: So he makes 104,000+5200=$109,200 from his salary; int3 & sent2 -> int4: So in total he made 109,200+5,000=$114,200; int4 & sent4 & sent5 & sent6 -> int5: The answer is 114,200;", "textual_logical_units": {"1": "За хорошую работу Джону выдали премию", "2": "в размере 5000 долларов,", "3": "и повысили зарплату на 5 %.", "4": "Он зарабатывает по 2000 долларов в неделю,", "5": "за год не пропустил ни одной недели,", "6": "а премию получил в первый день года. Сколько денег он заработал за этот год?", "7": "Джон зарабатывает: 2000 * 52 = 104 000 долларов в год.", "8": "Прибавка за год составила: 0,05 * 104 000 = 5200 долларов.", "9": "Следовательно, общая сумма его зарплаты равна: 104 000 + 5200 = 109 200 долларам.", "10": "В общей сложности он заработал 109 200 + 5000 = 114 200 долларов.", "11": "The answer is 114,200"}, "human_translated": true, "code_input": "####\nfacts = [ 'За хорошую работу Джону выдали премию',\n  'в размере 5000\\xa0долларов,',\n  'и повысили зарплату на 5\\xa0%.',\n  'Он зарабатывает по 2000\\xa0долларов в неделю,',\n  'за год не пропустил ни одной недели,']\nquestion = 'а премию получил в первый день года. Сколько денег он заработал за этот год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он зарабатывает по 2000\\xa0долларов в неделю,', 'за год не пропустил ни одной недели,']\nnew_fact = infer_new_fact(selected) # 'Джон зарабатывает: 2000\\xa0*\\xa052\\xa0= 104\\xa0000\\xa0долларов в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и повысили зарплату на 5\\xa0%.', 'Джон зарабатывает: 2000\\xa0*\\xa052\\xa0= 104\\xa0000\\xa0долларов в год.']\nnew_fact = infer_new_fact(selected) # 'Прибавка за год составила: 0,05\\xa0*\\xa0104\\xa0000\\xa0= 5200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джон зарабатывает: 2000\\xa0*\\xa052\\xa0= 104\\xa0000\\xa0долларов в год.', 'Прибавка за год составила: 0,05\\xa0*\\xa0104\\xa0000\\xa0= 5200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, общая сумма его зарплаты равна: 104\\xa0000\\xa0+\\xa05200\\xa0= 109\\xa0200\\xa0долларам.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в размере 5000\\xa0долларов,', 'Следовательно, общая сумма его зарплаты равна: 104\\xa0000\\xa0+\\xa05200\\xa0= 109\\xa0200\\xa0долларам.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности он заработал 109\\xa0200\\xa0+\\xa05000\\xa0= 114\\xa0200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он зарабатывает по 2000\\xa0долларов в неделю,', 'за год не пропустил ни одной недели,', 'а премию получил в первый день года. Сколько денег он заработал за этот год?', 'В общей сложности он заработал 109\\xa0200\\xa0+\\xa05000\\xa0= 114\\xa0200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 114,200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '114200'"}
{"id": "GSM8K_202_60e1a5ff24", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If each acre produces 5 tons of grapes per year, then her ten-acre farm produces 10*5=50 tons of grapes per year.; int1 & sent3 -> int2: If each ton of grapes makes 2 barrels of wine, then 50 tons makes 2*50=100 barrels of wine per year.; int2 & sent4 -> int3: The answer is 100;", "textual_logical_units": {"1": "Джози выращивает виноград на своей ферме площадью 10 акров.", "2": "С каждого акра она собирает 5 тонн винограда в год,", "3": "а из каждой тонны винограда получается 2 бочки вина.", "4": "Сколько бочек вина производит ее ферма в год?", "5": "Если с каждого акра получают 5 тонн винограда в год, то ферма площадью 10 акров дает: 10 * 5 = 50 тонн винограда в год.", "6": "Если из тонны винограда можно сделать 2 бочки вина, то 50 тонн позволяют производить 2 * 50 = 100 бочек вина в год.", "7": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джози выращивает виноград на своей ферме площадью 10\\xa0акров.',\n  'С каждого акра она собирает 5\\xa0тонн винограда в год,',\n  'а из каждой тонны винограда получается 2\\xa0бочки вина.']\nquestion = 'Сколько бочек вина производит ее ферма в год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джози выращивает виноград на своей ферме площадью 10\\xa0акров.', 'С каждого акра она собирает 5\\xa0тонн винограда в год,']\nnew_fact = infer_new_fact(selected) # 'Если с каждого акра получают 5\\xa0тонн винограда в год, то ферма площадью 10\\xa0акров дает: 10\\xa0*\\xa05\\xa0= 50\\xa0тонн винограда в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а из каждой тонны винограда получается 2\\xa0бочки вина.', 'Если с каждого акра получают 5\\xa0тонн винограда в год, то ферма площадью 10\\xa0акров дает: 10\\xa0*\\xa05\\xa0= 50\\xa0тонн винограда в год.']\nnew_fact = infer_new_fact(selected) # 'Если из тонны винограда можно сделать 2\\xa0бочки вина, то 50\\xa0тонн позволяют производить 2\\xa0*\\xa050\\xa0= 100\\xa0бочек вина в год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько бочек вина производит ее ферма в год?', 'Если из тонны винограда можно сделать 2\\xa0бочки вина, то 50\\xa0тонн позволяют производить 2\\xa0*\\xa050\\xa0= 100\\xa0бочек вина в год.']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_203_fe330c480f", "context": "", "options": [], "answer": "31", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [7, 9, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: His 2-slice sandwiches used 2 * 7 = 14 slices of cheese for all 7 days of the week.; sent3 & sent4 -> int2: His cheese and egg omelets used one more slice than his sandwiches, so they used 2 + 1 = 3 slices of cheese each.; int2 & sent4 -> int3: He made 3 omelets, so they used 3 * 3 = 9 slices of cheese.; int1 & int3 & sent7 -> int4: Carl’s sandwiches, omelets, and macaroni used 14 + 9 + 8 = 31 slices of cheese in all.; int4 & sent8 -> int5: The answer is 31;", "textual_logical_units": {"1": "Карл обожает сыр.", "2": "На этой неделе он каждый день в обед съедал по сэндвичу", "3": "с двумя ломтиками сыра.", "4": "Три дня в неделю он ел омлеты с сыром, причем в каждый омлет клал на один ломтик сыра больше, чем в сэндвич.", "5": "Еще он приготовил много макарон", "6": "с сыром, чтобы можно было несколько раз поужинать на этой неделе.", "7": "На это блюдо ушло 8 ломтиков сыра.", "8": "Сколько всего ломтиков сыра он использовал?", "9": "Карл клал в сэндвичи по 2 ломтика и ел их каждый день в течение недели, значит на неделю ему потребовалось 2 * 7 = 14 ломтиков сыра.", "10": "В омлеты он добавлял на один ломтик сыра больше, чем в сэндвичи, поэтому в каждом омлете было: 2 + 1 = 3 ломтика сыра.", "11": "Он приготовил 3 омлета, а значит, ему потребовалось: 3 * 3 = 9 ломтиков сыра.", "12": "Всего для сэндвичей, омлетов и макарон Карл использовал 14 + 9 + 8 = 31 ломтик сыра.", "13": "The answer is 31"}, "human_translated": true, "code_input": "####\nfacts = [ 'Карл обожает сыр.',\n  'На этой неделе он каждый день в обед съедал по сэндвичу',\n  'с двумя ломтиками сыра.',\n  'Три дня в неделю он ел омлеты с сыром, причем в каждый омлет клал на один ломтик сыра больше, чем в сэндвич.',\n  'Еще он приготовил много макарон',\n  'с сыром, чтобы можно было несколько раз поужинать на этой неделе.',\n  'На это блюдо ушло 8\\xa0ломтиков сыра.']\nquestion = 'Сколько всего ломтиков сыра он использовал?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На этой неделе он каждый день в обед съедал по сэндвичу', 'с двумя ломтиками сыра.']\nnew_fact = infer_new_fact(selected) # 'Карл клал в сэндвичи по 2\\xa0ломтика и ел их каждый день в течение недели, значит на неделю ему потребовалось 2\\xa0*\\xa07\\xa0= 14\\xa0ломтиков сыра.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['с двумя ломтиками сыра.', 'Три дня в неделю он ел омлеты с сыром, причем в каждый омлет клал на один ломтик сыра больше, чем в сэндвич.']\nnew_fact = infer_new_fact(selected) # 'В омлеты он добавлял на один ломтик сыра больше, чем в сэндвичи, поэтому в каждом омлете было: 2\\xa0+\\xa01\\xa0= 3\\xa0ломтика сыра.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Три дня в неделю он ел омлеты с сыром, причем в каждый омлет клал на один ломтик сыра больше, чем в сэндвич.', 'В омлеты он добавлял на один ломтик сыра больше, чем в сэндвичи, поэтому в каждом омлете было: 2\\xa0+\\xa01\\xa0= 3\\xa0ломтика сыра.']\nnew_fact = infer_new_fact(selected) # 'Он приготовил 3 омлета, а значит, ему потребовалось: 3\\xa0*\\xa03\\xa0= 9\\xa0ломтиков сыра.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На это блюдо ушло 8\\xa0ломтиков сыра.', 'Карл клал в сэндвичи по 2\\xa0ломтика и ел их каждый день в течение недели, значит на неделю ему потребовалось 2\\xa0*\\xa07\\xa0= 14\\xa0ломтиков сыра.', 'Он приготовил 3 омлета, а значит, ему потребовалось: 3\\xa0*\\xa03\\xa0= 9\\xa0ломтиков сыра.']\nnew_fact = infer_new_fact(selected) # 'Всего для сэндвичей, омлетов и макарон Карл использовал 14\\xa0+\\xa09\\xa0+\\xa08\\xa0= 31\\xa0ломтик сыра.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего ломтиков сыра он использовал?', 'Всего для сэндвичей, омлетов и макарон Карл использовал 14\\xa0+\\xa09\\xa0+\\xa08\\xa0= 31\\xa0ломтик сыра.']\nnew_fact = infer_new_fact(selected) # 'The answer is 31'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '31'"}
{"id": "GSM8K_204_2355a6acd6", "context": "", "options": [], "answer": "98", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [3, 4], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: Janet previously had 22 + 10 = 32 pens.; sent2 & sent4 -> int2: The number of blue pens is 6 × 9 = 54.; sent3 & sent4 -> int3: The number of red pens is 2 × 6 = 12.; int1 & int2 & int3 -> int4: Janet has 32 + 54 + 12 = 98 pens now.; sent1 & sent6 -> int5: The answer is 98;", "textual_logical_units": {"1": "У Джанет было 22 зеленых и 10 желтых ручек.", "2": "Она купила 6 упаковок синих ручек", "3": "и 2 упаковки красных ручек.", "4": "Синие ручки продавались по 9 штук в упаковке,", "5": "а красные — по 6 штук в упаковке.", "6": "Сколько всего сейчас ручек у Джанет?", "7": "Изначально у Джанет было 22 + 10 = 32 ручки.", "8": "Синих ручек она купила: 6 × 9 = 54 штуки,", "9": "а красных — 2 × 6 = 12 штук.", "10": "Сейчас у Джанет 32 + 54 + 12 = 98 ручек.", "11": "The answer is 98"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Джанет было 22\\xa0зеленых и 10\\xa0желтых ручек.',\n  'Она купила 6\\xa0упаковок синих ручек',\n  'и 2\\xa0упаковки красных ручек.',\n  'Синие ручки продавались по 9\\xa0штук в упаковке,',\n  'а красные\\xa0— по 6\\xa0штук в упаковке.']\nquestion = 'Сколько всего сейчас ручек у Джанет?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Джанет было 22\\xa0зеленых и 10\\xa0желтых ручек.']\nnew_fact = infer_new_fact(selected) # 'Изначально у Джанет было 22\\xa0+\\xa010\\xa0= 32\\xa0ручки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она купила 6\\xa0упаковок синих ручек', 'Синие ручки продавались по 9\\xa0штук в упаковке,']\nnew_fact = infer_new_fact(selected) # 'Синих ручек она купила: 6\\xa0×\\xa09\\xa0=\\xa054\\xa0штуки,'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 2\\xa0упаковки красных ручек.', 'Синие ручки продавались по 9\\xa0штук в упаковке,']\nnew_fact = infer_new_fact(selected) # 'а красных\\xa0— 2\\xa0×\\xa06\\xa0= 12\\xa0штук.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Изначально у Джанет было 22\\xa0+\\xa010\\xa0= 32\\xa0ручки.', 'Синих ручек она купила: 6\\xa0×\\xa09\\xa0=\\xa054\\xa0штуки,', 'а красных\\xa0— 2\\xa0×\\xa06\\xa0= 12\\xa0штук.']\nnew_fact = infer_new_fact(selected) # 'Сейчас у Джанет 32\\xa0+\\xa054\\xa0+\\xa012\\xa0= 98\\xa0ручек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Джанет было 22\\xa0зеленых и 10\\xa0желтых ручек.', 'Сколько всего сейчас ручек у Джанет?']\nnew_fact = infer_new_fact(selected) # 'The answer is 98'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '98'"}
{"id": "GSM8K_205_bd32892fb0", "context": "", "options": [], "answer": "98", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 9}, {"antecedents": [8], "consequent": 10}, {"antecedents": [7, 8], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent6 -> int1: First, identify the lowest score, which is 71, and remove it.; sent8 -> int2: Since Brinley wants a score of 93, we know her total score needs to be 93 (average) * 5 (tests) = 465 points; sent7 & sent8 -> int3: So far, Brinley has earned 89 + 92 +100 + 86 = 367 points; int2 & int3 -> int4: The final test must be 465 - 367 = 98 points.; int4 & sent8 -> int5: The answer is 98;", "textual_logical_units": {"1": "В классе Бринли", "2": "математику преподает учитель Берт.", "3": "В течение четверти", "4": "учитель Берт проводит шесть тестов.", "5": "Подсчитывая средний балл ученика за все тесты в четверти, он не берет в расчет самую низкую оценку.", "6": "Если за пять первых тестов Бринли получила 89, 71, 92, 100", "7": "и 86 баллов,", "8": "какой балл ей нужен за шестой тест, чтобы получить в среднем 93 балла?", "9": "Сначала нужно определить самый низкий балл (71) и убрать его.", "10": "Поскольку Бринли хочет получить 93 балла, в общей сумме у нее должно быть: 93 (средний балл) * 5 тестов = 465 баллов.", "11": "На данный момент у Бринли 89 + 92 + 100 + 86 = 367 баллов.", "12": "За последний тест ей нужно получить 465 – 367 = 98 баллов.", "13": "The answer is 98"}, "human_translated": true, "code_input": "####\nfacts = [ 'В классе Бринли',\n  'математику преподает учитель Берт.',\n  'В течение четверти',\n  'учитель Берт проводит шесть тестов.',\n  'Подсчитывая средний балл ученика за все тесты в четверти, он не берет в расчет самую низкую оценку.',\n  'Если за пять первых тестов Бринли получила 89, 71, 92, 100',\n  'и 86\\xa0баллов,']\nquestion = 'какой балл ей нужен за шестой тест, чтобы получить в среднем 93\\xa0балла?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если за пять первых тестов Бринли получила 89, 71, 92, 100']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно определить самый низкий балл (71) и убрать его.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой балл ей нужен за шестой тест, чтобы получить в среднем 93\\xa0балла?']\nnew_fact = infer_new_fact(selected) # 'Поскольку Бринли хочет получить 93\\xa0балла, в общей сумме у нее должно быть: 93\\xa0(средний балл)\\xa0* 5\\xa0тестов\\xa0= 465\\xa0баллов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 86\\xa0баллов,', 'какой балл ей нужен за шестой тест, чтобы получить в среднем 93\\xa0балла?']\nnew_fact = infer_new_fact(selected) # 'На данный момент у Бринли 89\\xa0+\\xa092\\xa0+\\xa0100\\xa0+\\xa086\\xa0= 367\\xa0баллов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поскольку Бринли хочет получить 93\\xa0балла, в общей сумме у нее должно быть: 93\\xa0(средний балл)\\xa0* 5\\xa0тестов\\xa0= 465\\xa0баллов.', 'На данный момент у Бринли 89\\xa0+\\xa092\\xa0+\\xa0100\\xa0+\\xa086\\xa0= 367\\xa0баллов.']\nnew_fact = infer_new_fact(selected) # 'За последний тест ей нужно получить 465\\xa0–\\xa0367\\xa0= 98\\xa0баллов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой балл ей нужен за шестой тест, чтобы получить в среднем 93\\xa0балла?', 'За последний тест ей нужно получить 465\\xa0–\\xa0367\\xa0= 98\\xa0баллов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 98'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '98'"}
{"id": "GSM8K_206_099f3278a8", "context": "", "options": [], "answer": "860", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}, {"antecedents": [5, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: In the first part, Micheal did 5 * 25 = 125 kilometers every week.; int1 & sent4 -> int2: He did that for four weeks, which means he made during that time 125 * 4 = 500 kilometers.; sent5 & sent6 -> int3: After that, he made 2 * 60 = 120 kilometers a week.; int3 & sent7 -> int4: And Micheal did that for three weeks, so he rode 120 * 3 = 360 kilometers during that time.; int2 & int4 -> int5: In total Micheal did 500 + 360 = 860 kilometers.; int5 & sent8 -> int6: The answer is 860;", "textual_logical_units": {"1": "Майкл любит кататься на велосипеде.", "2": "Он катался на нем не менее 5 раз в неделю,", "3": "каждый раз проезжая по 25 километров.", "4": "Так прошло четыре недели, после чего Майкл решил", "5": "использовать велосипед только 2 раза в неделю,", "6": "но проезжать при этом по 60 километров.", "7": "Так прошло еще 3 недели.", "8": "Сколько километров в общей сложности проехал Майкл?", "9": "Сначала Майкл каждую неделю проезжал по: 5 * 25 = 125 километров.", "10": "Так он делал на протяжении четырех недель и за это время проехал 125 * 4 = 500 километров.", "11": "После этого он проезжал по 2 * 60 = 120 километров в неделю.", "12": "Так продолжалось три недели, и за это время Майкл преодолел 120 * 3 = 360 километров.", "13": "В общей сложности Майкл проехал 500 + 360 = 860 километров.", "14": "The answer is 860"}, "human_translated": true, "code_input": "####\nfacts = [ 'Майкл любит кататься на велосипеде.',\n  'Он катался на нем не менее 5\\xa0раз в неделю,',\n  'каждый раз проезжая по 25\\xa0километров.',\n  'Так прошло четыре недели, после чего Майкл решил',\n  'использовать велосипед только 2\\xa0раза в неделю,',\n  'но проезжать при этом по 60\\xa0километров.',\n  'Так прошло еще 3\\xa0недели.']\nquestion = 'Сколько километров в общей сложности проехал Майкл?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он катался на нем не менее 5\\xa0раз в неделю,', 'каждый раз проезжая по 25\\xa0километров.']\nnew_fact = infer_new_fact(selected) # 'Сначала Майкл каждую неделю проезжал по: 5\\xa0*\\xa025\\xa0= 125\\xa0километров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Так прошло четыре недели, после чего Майкл решил', 'Сначала Майкл каждую неделю проезжал по: 5\\xa0*\\xa025\\xa0= 125\\xa0километров.']\nnew_fact = infer_new_fact(selected) # 'Так он делал на протяжении четырех недель и за это время проехал 125\\xa0*\\xa04\\xa0= 500\\xa0километров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['использовать велосипед только 2\\xa0раза в неделю,', 'но проезжать при этом по 60\\xa0километров.']\nnew_fact = infer_new_fact(selected) # 'После этого он проезжал по 2\\xa0*\\xa060\\xa0= 120\\xa0километров в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Так прошло еще 3\\xa0недели.', 'После этого он проезжал по 2\\xa0*\\xa060\\xa0= 120\\xa0километров в неделю.']\nnew_fact = infer_new_fact(selected) # 'Так продолжалось три недели, и за это время Майкл преодолел 120\\xa0*\\xa03\\xa0= 360\\xa0километров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Так он делал на протяжении четырех недель и за это время проехал 125\\xa0*\\xa04\\xa0= 500\\xa0километров.', 'Так продолжалось три недели, и за это время Майкл преодолел 120\\xa0*\\xa03\\xa0= 360\\xa0километров.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности Майкл проехал 500\\xa0+\\xa0360\\xa0= 860\\xa0километров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько километров в общей сложности проехал Майкл?', 'В общей сложности Майкл проехал 500\\xa0+\\xa0360\\xa0= 860\\xa0километров.']\nnew_fact = infer_new_fact(selected) # 'The answer is 860'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '860'"}
{"id": "GSM8K_207_52479bc41c", "context": "", "options": [], "answer": "2600", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The candied apples weigh 40/2=20 grams each.; sent1 & sent3 -> int2: The chocolate bars weigh 40*25=1000 grams in total.; int1 & sent1 -> int3: The candied apples weigh 20*80=1600 grams in total.; int2 & int3 -> int4: Joe's bag weighs 1000+1600=2600 grams.; int4 & sent4 -> int5: The answer is 2600;", "textual_logical_units": {"1": "На Хэллоуин Джо получил мешочек сладостей, в котором было 25 шоколадных батончиков и 80 засахаренных ломтиков яблок.", "2": "Шоколадный батончик весит в два раза больше, чем ломтик яблока.", "3": "Если шоколадный батончик весит 40 г,", "4": "сколько весит в граммах мешочек со сладостями, который получил Джо?", "5": "Каждый ломтик яблока весит: 40 / 2 = 20 грамм.", "6": "Общий вес шоколадных батончиков составляет 40 * 25 = 1000 грамм.", "7": "Все засахаренные ломтики яблок весят 20 * 80 = 1600 грамм.", "8": "Общий вес мешочка сладостей, который получил Джо, составляет 1000 + 1600 = 2600 грамм.", "9": "The answer is 2600"}, "human_translated": true, "code_input": "####\nfacts = [ 'На Хэллоуин Джо получил мешочек сладостей, в котором было 25\\xa0шоколадных батончиков и 80\\xa0засахаренных ломтиков яблок.',\n  'Шоколадный батончик весит в два раза больше, чем ломтик яблока.',\n  'Если шоколадный батончик весит 40\\xa0г,']\nquestion = 'сколько весит в граммах мешочек со сладостями, который получил Джо?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Шоколадный батончик весит в два раза больше, чем ломтик яблока.', 'Если шоколадный батончик весит 40\\xa0г,']\nnew_fact = infer_new_fact(selected) # 'Каждый ломтик яблока весит: 40\\xa0/\\xa02\\xa0= 20\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На Хэллоуин Джо получил мешочек сладостей, в котором было 25\\xa0шоколадных батончиков и 80\\xa0засахаренных ломтиков яблок.', 'Если шоколадный батончик весит 40\\xa0г,']\nnew_fact = infer_new_fact(selected) # 'Общий вес шоколадных батончиков составляет 40\\xa0*\\xa025\\xa0= 1000\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На Хэллоуин Джо получил мешочек сладостей, в котором было 25\\xa0шоколадных батончиков и 80\\xa0засахаренных ломтиков яблок.', 'Каждый ломтик яблока весит: 40\\xa0/\\xa02\\xa0= 20\\xa0грамм.']\nnew_fact = infer_new_fact(selected) # 'Все засахаренные ломтики яблок весят 20\\xa0*\\xa080\\xa0= 1600\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общий вес шоколадных батончиков составляет 40\\xa0*\\xa025\\xa0= 1000\\xa0грамм.', 'Все засахаренные ломтики яблок весят 20\\xa0*\\xa080\\xa0= 1600\\xa0грамм.']\nnew_fact = infer_new_fact(selected) # 'Общий вес мешочка сладостей, который получил Джо, составляет 1000\\xa0+\\xa01600\\xa0= 2600\\xa0грамм.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько весит в граммах мешочек со сладостями, который получил Джо?', 'Общий вес мешочка сладостей, который получил Джо, составляет 1000\\xa0+\\xa01600\\xa0= 2600\\xa0грамм.']\nnew_fact = infer_new_fact(selected) # 'The answer is 2600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2600'"}
{"id": "GSM8K_208_55aedda100", "context": "", "options": [], "answer": "76", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2, 3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: On Monday she bought 4 cakes; int1 & sent2 & sent3 -> int2: On Tuesday she bought 4*3=12 cakes; int2 & sent4 & sent5 -> int3: On Wednesday she bought 12*5=60 cakes; int1 & int2 & int3 -> int4: Rose bought a total of 4+12+60= 76 cakes during the three days; sent1 & sent6 -> int5: The answer is 76;", "textual_logical_units": {"1": "В понедельник Роуз пошла в магазин и купила 4 пирожных.", "2": "Во вторник она пошла в другой магазин", "3": "и купила в три раза больше пирожных.", "4": "В среду она пошла в третий магазин", "5": "и купила в 5 раз больше пирожных, чем во вторник.", "6": "Сколько пирожных она купила за все три дня?", "7": "В понедельник она купила 4 пирожных.", "8": "Во вторник она купила: 4 * 3 = 12 пирожных.", "9": "В среду она купила: 12 * 5 = 60 пирожных.", "10": "За три дня Роуз купила в общей сложности: 4 + 12 + 60 = 76 пирожных.", "11": "The answer is 76"}, "human_translated": true, "code_input": "####\nfacts = [ 'В понедельник Роуз пошла в магазин и купила 4\\xa0пирожных.',\n  'Во вторник она пошла в другой магазин',\n  'и купила в три раза больше пирожных.',\n  'В среду она пошла в третий магазин',\n  'и купила в 5\\xa0раз больше пирожных, чем во вторник.']\nquestion = 'Сколько пирожных она купила за все три дня?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник Роуз пошла в магазин и купила 4\\xa0пирожных.']\nnew_fact = infer_new_fact(selected) # 'В понедельник она купила 4 пирожных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во вторник она пошла в другой магазин', 'и купила в три раза больше пирожных.', 'В понедельник она купила 4 пирожных.']\nnew_fact = infer_new_fact(selected) # 'Во вторник она купила: 4\\xa0*\\xa03\\xa0= 12\\xa0пирожных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В среду она пошла в третий магазин', 'и купила в 5\\xa0раз больше пирожных, чем во вторник.', 'Во вторник она купила: 4\\xa0*\\xa03\\xa0= 12\\xa0пирожных.']\nnew_fact = infer_new_fact(selected) # 'В среду она купила: 12\\xa0*\\xa05\\xa0= 60\\xa0пирожных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник она купила 4 пирожных.', 'Во вторник она купила: 4\\xa0*\\xa03\\xa0= 12\\xa0пирожных.', 'В среду она купила: 12\\xa0*\\xa05\\xa0= 60\\xa0пирожных.']\nnew_fact = infer_new_fact(selected) # 'За три дня Роуз купила в общей сложности: 4\\xa0+\\xa012\\xa0+\\xa060\\xa0= 76\\xa0пирожных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник Роуз пошла в магазин и купила 4\\xa0пирожных.', 'Сколько пирожных она купила за все три дня?']\nnew_fact = infer_new_fact(selected) # 'The answer is 76'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '76'"}
{"id": "GSM8K_209_59d74b32a3", "context": "", "options": [], "answer": "145", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Since a dozen has 12 items, half a dozen plates are 12/2 = 6; int1 & sent1 -> int2: Half a dozen plates sold at $6000 each cost 6*$6000 = $36000; int2 & sent1 -> int3: Twenty dozen cups cost $1200 less than the total cost of half a dozen plates, meaning the twenty dozen cups cost a total of $36000-$1200 = 34800; int1 -> int4: Since a dozen has 12 items, twenty dozen cups are 20*12 = 240 cups.; int3 & int4 -> int5: If the twenty dozen cups cost $34800, each cup costs $34800/240=$145; int5 & sent2 -> int6: The answer is 145;", "textual_logical_units": {"1": "Двадцать дюжин чашек стоят на 1200 долларов меньше, чем полдюжины тарелок стоимостью по 6000 долларов каждая.", "2": "Сколько стоит одна чашка?", "3": "Дюжина — это 12 предметов, значит, полдюжины тарелок — это 12 / 2 = 6 штук.", "4": "Полдюжины тарелок по 6000 долларов каждая будут стоить: 6 * 6000 долларов = 36 000 долларов.", "5": "Двадцать дюжин чашек стоят на 1200 долларов меньше, чем полдюжины тарелок, то есть их общая стоимость составляет: 36 000 долларов — 1200 долларов = 34 800 долларов.", "6": "Поскольку в дюжине 12 предметов, двадцать дюжин чашек — это 20 * 12 = 240 штук.", "7": "Если двадцать дюжин чашек стоят 34 800 долларов, то цена каждой чашки — 34 800 / 240 = 145 долларов.", "8": "The answer is 145"}, "human_translated": true, "code_input": "####\nfacts = ['Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок стоимостью по 6000\\xa0долларов каждая.']\nquestion = 'Сколько стоит одна чашка?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок стоимостью по 6000\\xa0долларов каждая.']\nnew_fact = infer_new_fact(selected) # 'Дюжина\\xa0— это 12\\xa0предметов, значит, полдюжины тарелок\\xa0— это 12\\xa0/\\xa02\\xa0= 6\\xa0штук.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок стоимостью по 6000\\xa0долларов каждая.', 'Дюжина\\xa0— это 12\\xa0предметов, значит, полдюжины тарелок\\xa0— это 12\\xa0/\\xa02\\xa0= 6\\xa0штук.']\nnew_fact = infer_new_fact(selected) # 'Полдюжины тарелок по 6000\\xa0долларов каждая будут стоить: 6\\xa0*\\xa06000\\xa0долларов\\xa0= 36\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок стоимостью по 6000\\xa0долларов каждая.', 'Полдюжины тарелок по 6000\\xa0долларов каждая будут стоить: 6\\xa0*\\xa06000\\xa0долларов\\xa0= 36\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок, то есть их общая стоимость составляет: 36\\xa0000\\xa0долларов\\xa0— 1200\\xa0долларов\\xa0= 34\\xa0800\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Дюжина\\xa0— это 12\\xa0предметов, значит, полдюжины тарелок\\xa0— это 12\\xa0/\\xa02\\xa0= 6\\xa0штук.']\nnew_fact = infer_new_fact(selected) # 'Поскольку в дюжине 12\\xa0предметов, двадцать дюжин чашек\\xa0— это 20\\xa0*\\xa012\\xa0= 240\\xa0штук.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Двадцать дюжин чашек стоят на 1200\\xa0долларов меньше, чем полдюжины тарелок, то есть их общая стоимость составляет: 36\\xa0000\\xa0долларов\\xa0— 1200\\xa0долларов\\xa0= 34\\xa0800\\xa0долларов.', 'Поскольку в дюжине 12\\xa0предметов, двадцать дюжин чашек\\xa0— это 20\\xa0*\\xa012\\xa0= 240\\xa0штук.']\nnew_fact = infer_new_fact(selected) # 'Если двадцать дюжин чашек стоят 34\\xa0800\\xa0долларов, то цена каждой чашки\\xa0— 34\\xa0800\\xa0/\\xa0240\\xa0= 145\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько стоит одна чашка?', 'Если двадцать дюжин чашек стоят 34\\xa0800\\xa0долларов, то цена каждой чашки\\xa0— 34\\xa0800\\xa0/\\xa0240\\xa0= 145\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 145'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '145'"}
{"id": "GSM8K_210_67f7bd36f7", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [4, 5], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}, {"antecedents": [8, 14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Both pairs of shoes will cost a total of 2 * $20 = $40.; int1 & sent2 -> int2: Sara will need to save a total of $30 + $40 = $70 to buy everything that she wants.; sent4 & sent5 -> int3: Sara has earned 4 * $5 = $20 from babysitting.; int3 & sent7 -> int4: Between her savings and the babysitting, Sara has already saved $10 + $20 = $30.; int2 & int4 -> int5: Sara needs to earn an additional $70 - $30 = $40 from mowing the lawn to afford her clothes.; int5 & sent6 -> int6: Sara must mow the lawn $40 / $4 = 10 times to afford to buy the jacket and shoes.; int6 & sent8 -> int7: The answer is 10;", "textual_logical_units": {"1": "Сара хочет купить себе новую куртку и 2 пары обуви.", "2": "Куртка, которая ей нужна, стоит 30 долларов,", "3": "а каждая пара обуви стоит 20 долларов.", "4": "Сара 4 раза присматривала за соседскими детьми.", "5": "За это ей каждый раз платили по 5 долларов.", "6": "Родители платят ей 4 доллара каждый раз, когда она стрижет газон.", "7": "Прежде чем Сара начала присматривать за детьми, у нее уже было 10 долларов.", "8": "Сколько раз ей нужно постричь газон, чтобы заработать достаточно денег на покупку куртки и обуви?", "9": "Обе пары обуви будут стоить: 2 * 20 долларов = 40 долларов.", "10": "Чтобы купить все, что ей хочется, Саре нужно накопить: 30 долларов + 40 долларов = 70 долларов.", "11": "Присматривая за детьми, Сара заработала: 4 * 5 долларов = 20 долларов.", "12": "Если прибавить к этой сумме ее сбережения, то сейчас у Сары: 10 долларов + 20 долларов = 30 долларов.", "13": "Чтобы купить одежду, Саре нужно заработать на стрижке газонов еще: 70 долларов – 30 долларов = 40 долларов.", "14": "Чтобы получить возможность купить куртку и обувь, Саре придется постричь газон еще: 40 долларов / 4 доллара = 10 раз.", "15": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сара хочет купить себе новую куртку и 2\\xa0пары обуви.',\n  'Куртка, которая ей нужна, стоит 30\\xa0долларов,',\n  'а каждая пара обуви стоит 20\\xa0долларов.',\n  'Сара 4\\xa0раза присматривала за соседскими детьми.',\n  'За это ей каждый раз платили по 5\\xa0долларов.',\n  'Родители платят ей 4\\xa0доллара каждый раз, когда она стрижет газон.',\n  'Прежде чем Сара начала присматривать за детьми, у нее уже было 10\\xa0долларов.']\nquestion = 'Сколько раз ей нужно постричь газон, чтобы заработать достаточно денег на покупку куртки и обуви?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сара хочет купить себе новую куртку и 2\\xa0пары обуви.', 'а каждая пара обуви стоит 20\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Обе пары обуви будут стоить: 2\\xa0*\\xa020\\xa0долларов\\xa0= 40\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Куртка, которая ей нужна, стоит 30\\xa0долларов,', 'Обе пары обуви будут стоить: 2\\xa0*\\xa020\\xa0долларов\\xa0= 40\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы купить все, что ей хочется, Саре нужно накопить: 30\\xa0долларов\\xa0+ 40\\xa0долларов\\xa0= 70\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сара 4\\xa0раза присматривала за соседскими детьми.', 'За это ей каждый раз платили по 5\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Присматривая за детьми, Сара заработала: 4\\xa0*\\xa05\\xa0долларов\\xa0= 20\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прежде чем Сара начала присматривать за детьми, у нее уже было 10\\xa0долларов.', 'Присматривая за детьми, Сара заработала: 4\\xa0*\\xa05\\xa0долларов\\xa0= 20\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Если прибавить к этой сумме ее сбережения, то сейчас у Сары: 10\\xa0долларов\\xa0+ 20\\xa0долларов\\xa0= 30\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы купить все, что ей хочется, Саре нужно накопить: 30\\xa0долларов\\xa0+ 40\\xa0долларов\\xa0= 70\\xa0долларов.', 'Если прибавить к этой сумме ее сбережения, то сейчас у Сары: 10\\xa0долларов\\xa0+ 20\\xa0долларов\\xa0= 30\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы купить одежду, Саре нужно заработать на стрижке газонов еще: 70\\xa0долларов\\xa0– 30\\xa0долларов\\xa0= 40\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Родители платят ей 4\\xa0доллара каждый раз, когда она стрижет газон.', 'Чтобы купить одежду, Саре нужно заработать на стрижке газонов еще: 70\\xa0долларов\\xa0– 30\\xa0долларов\\xa0= 40\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Чтобы получить возможность купить куртку и обувь, Саре придется постричь газон еще: 40\\xa0долларов\\xa0/ 4\\xa0доллара\\xa0= 10\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько раз ей нужно постричь газон, чтобы заработать достаточно денег на покупку куртки и обуви?', 'Чтобы получить возможность купить куртку и обувь, Саре придется постричь газон еще: 40\\xa0долларов\\xa0/ 4\\xa0доллара\\xa0= 10\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_211_768dd956ae", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: First, set up the equation for the number of eggs the chickens lay each day: 3r + 5w = 42, where r is the number of red chickens and w is the number of white chickens.; int1 -> int2: Then, express r in terms of w based on the information in the problem: w = r + 2; int1 & int2 -> int3: Now substitute r + 2 for w in the equation for the number of eggs: 3r + 5(r + 2) = 42; int3 & sent3 -> int4: Now multiply 5 through the parentheses: 3r + 5r + 10 = 42; int4 -> int5: Now add like terms to get 8r + 10 = 42; int5 -> int6: Now subtract 10 from both sides of the equation: 8r = 32; int6 -> int7: Finally, divide both sides of the equation by 8 to get r = 4; int7 & sent6 -> int8: The answer is 4;", "textual_logical_units": {"1": "У Джерри завел себе кур.", "2": "Рыжие куры дают по 3 яйца в день,", "3": "а белые — по 5 яиц в день.", "4": "Каждый день Джерри собирает 42 яйца.", "5": "Если белых кур у него в два раза больше, чем рыжих,", "6": "то сколько у Джерри рыжих кур?", "7": "Сначала нужно составить уравнение, чтобы описать, сколько яиц куры откладывают в день. 3r + 5w = 42, где r — количество рыжих кур, а w — количество белых кур.", "8": "r нужно выразить через w, используя сведения из задачи: w = r + 2.", "9": "В уравнении, описывающем количество яиц, нужно w заменить на r + 2: 3r + 5 * (r + 2) = 42.", "10": "5 необходимо умножить на значение в круглых скобках: 3r + 5r + 10 = 42.", "11": "Если упростить выражение, получится 8r + 10 = 42.", "12": "Теперь нужно вычесть 10 из обеих частей уравнения: 8r = 32.", "13": "Если теперь разделить обе части уравнения на 8, получится r = 4.", "14": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Джерри завел себе кур.',\n  'Рыжие куры дают по 3\\xa0яйца в день,',\n  'а белые\\xa0— по 5\\xa0яиц в день.',\n  'Каждый день Джерри собирает 42\\xa0яйца.',\n  'Если белых кур у него в два раза больше, чем рыжих,']\nquestion = 'то сколько у Джерри рыжих кур?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рыжие куры дают по 3\\xa0яйца в день,', 'а белые\\xa0— по 5\\xa0яиц в день.', 'Каждый день Джерри собирает 42\\xa0яйца.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно составить уравнение, чтобы описать, сколько яиц куры откладывают в день. 3r\\xa0+\\xa05w\\xa0=\\xa042, где r\\xa0— количество рыжих кур, а w\\xa0— количество белых кур.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала нужно составить уравнение, чтобы описать, сколько яиц куры откладывают в день. 3r\\xa0+\\xa05w\\xa0=\\xa042, где r\\xa0— количество рыжих кур, а w\\xa0— количество белых кур.']\nnew_fact = infer_new_fact(selected) # 'r нужно выразить через w, используя сведения из задачи: w\\xa0=\\xa0r\\xa0+\\xa02.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сначала нужно составить уравнение, чтобы описать, сколько яиц куры откладывают в день. 3r\\xa0+\\xa05w\\xa0=\\xa042, где r\\xa0— количество рыжих кур, а w\\xa0— количество белых кур.', 'r нужно выразить через w, используя сведения из задачи: w\\xa0=\\xa0r\\xa0+\\xa02.']\nnew_fact = infer_new_fact(selected) # 'В уравнении, описывающем количество яиц, нужно w заменить на r\\xa0+\\xa02: 3r\\xa0+\\xa05\\xa0*\\xa0(r\\xa0+\\xa02)\\xa0=\\xa042.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а белые\\xa0— по 5\\xa0яиц в день.', 'В уравнении, описывающем количество яиц, нужно w заменить на r\\xa0+\\xa02: 3r\\xa0+\\xa05\\xa0*\\xa0(r\\xa0+\\xa02)\\xa0=\\xa042.']\nnew_fact = infer_new_fact(selected) # '5\\xa0необходимо умножить на значение в круглых скобках: 3r\\xa0+\\xa05r\\xa0+\\xa010\\xa0=\\xa042.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5\\xa0необходимо умножить на значение в круглых скобках: 3r\\xa0+\\xa05r\\xa0+\\xa010\\xa0=\\xa042.']\nnew_fact = infer_new_fact(selected) # 'Если упростить выражение, получится 8r\\xa0+\\xa010\\xa0=\\xa042.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если упростить выражение, получится 8r\\xa0+\\xa010\\xa0=\\xa042.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно вычесть\\xa010 из обеих частей уравнения: 8r\\xa0=\\xa032.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Теперь нужно вычесть\\xa010 из обеих частей уравнения: 8r\\xa0=\\xa032.']\nnew_fact = infer_new_fact(selected) # 'Если теперь разделить обе части уравнения на\\xa08, получится r\\xa0=\\xa04.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то сколько у Джерри рыжих кур?', 'Если теперь разделить обе части уравнения на\\xa08, получится r\\xa0=\\xa04.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_212_cf4e9f2382", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 -> int1: First find the length of the two long sides of the park: 6 miles * 2 = 12 miles; sent2 -> int2: Then find the length of the two short sides of the park: 1.5 miles * 2 = 3 miles; int1 & int2 -> int3: Then add those two lengthes to find the total distance around the park: 12 miles + 3 miles = 15 miles; int3 & sent3 -> int4: Then divide the total length by Gary's speed to find how long he spends walking: 15 miles / 3 miles/hour = 5 hours; int4 & sent4 -> int5: The answer is 5;", "textual_logical_units": {"1": "Гари любит гулять по периметру парка,", "2": "который представляет собой прямоугольник размером 1,5 на 6 миль.", "3": "Если он проходит 3 мили в час,", "4": "сколько часов ему потребуется, чтобы обойти весь парк?", "5": "Для начала нужно найти общую протяженность двух длинных сторон периметра: 6 миль * 2 = 12 миль.", "6": "Затем нужно найти общую длину двух коротких сторон периметра: 1,5 мили * 2 = 3 мили.", "7": "Если сложить два полученных значения, можно вычислить общее расстояние прогулки вокруг парка: 12 миль + 3 мили = 15 миль.", "8": "Чтобы узнать время прогулки Гари, это общее расстояние необходимо разделить на скорость его передвижения: 15 миль / 3 мили в час = 5 часов.", "9": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['Гари любит гулять по периметру парка,', 'который представляет собой прямоугольник размером 1,5\\xa0на 6\\xa0миль.', 'Если он проходит 3\\xa0мили в час,']\nquestion = 'сколько часов ему потребуется, чтобы обойти весь парк?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['который представляет собой прямоугольник размером 1,5\\xa0на 6\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Для начала нужно найти общую протяженность двух длинных сторон периметра: 6\\xa0миль\\xa0*\\xa02\\xa0= 12\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['который представляет собой прямоугольник размером 1,5\\xa0на 6\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Затем нужно найти общую длину двух коротких сторон периметра: 1,5\\xa0мили\\xa0*\\xa02\\xa0= 3\\xa0мили.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для начала нужно найти общую протяженность двух длинных сторон периметра: 6\\xa0миль\\xa0*\\xa02\\xa0= 12\\xa0миль.', 'Затем нужно найти общую длину двух коротких сторон периметра: 1,5\\xa0мили\\xa0*\\xa02\\xa0= 3\\xa0мили.']\nnew_fact = infer_new_fact(selected) # 'Если сложить два полученных значения, можно вычислить общее расстояние прогулки вокруг парка: 12\\xa0миль\\xa0+ 3\\xa0мили\\xa0= 15\\xa0миль.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он проходит 3\\xa0мили в час,', 'Если сложить два полученных значения, можно вычислить общее расстояние прогулки вокруг парка: 12\\xa0миль\\xa0+ 3\\xa0мили\\xa0= 15\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать время прогулки Гари, это общее расстояние необходимо разделить на скорость его передвижения: 15\\xa0миль\\xa0/ 3\\xa0мили в час\\xa0= 5\\xa0часов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько часов ему потребуется, чтобы обойти весь парк?', 'Чтобы узнать время прогулки Гари, это общее расстояние необходимо разделить на скорость его передвижения: 15\\xa0миль\\xa0/ 3\\xa0мили в час\\xa0= 5\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_213_1624cd3d64", "context": "", "options": [], "answer": "250", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: On the second day, she counted 100+50 = 150 customers.; int1 & sent2 -> int2: The total for the first two days is 150+100 = 250 customers.; int2 & sent4 -> int3: If the total count for three days was 500, she counted 500-250 = 250 customers on the third day.; int3 & sent5 -> int4: The answer is 250;", "textual_logical_units": {"1": "Слоан работает продавщицей в магазине Fix Price.", "2": "В первый день магазин посетило 100 покупателей.", "3": "На следующий день покупателей было на 50 человек больше, чем в первый день.", "4": "Всего за три дня в магазине побывало 500 покупателей.", "5": "Сколько покупателей было в третий день?", "6": "Во второй день в магазине побывало: 100 + 50 = 150 покупателей.", "7": "Всего за первые два дня было: 150 + 100 = 250 покупателей.", "8": "Если за три дня в магазине побывало 500 покупателей, значит, в третий день покупателей было 500 – 250 = 250 человек.", "9": "The answer is 250"}, "human_translated": true, "code_input": "####\nfacts = [ 'Слоан работает продавщицей в магазине Fix Price.',\n  'В первый день магазин посетило 100\\xa0покупателей.',\n  'На следующий день покупателей было на 50\\xa0человек больше, чем в первый день.',\n  'Всего за три дня в магазине побывало 500\\xa0покупателей.']\nquestion = 'Сколько покупателей было в третий день?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В первый день магазин посетило 100\\xa0покупателей.', 'На следующий день покупателей было на 50\\xa0человек больше, чем в первый день.']\nnew_fact = infer_new_fact(selected) # 'Во второй день в магазине побывало: 100\\xa0+\\xa050\\xa0= 150\\xa0покупателей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первый день магазин посетило 100\\xa0покупателей.', 'Во второй день в магазине побывало: 100\\xa0+\\xa050\\xa0= 150\\xa0покупателей.']\nnew_fact = infer_new_fact(selected) # 'Всего за первые два дня было: 150\\xa0+\\xa0100\\xa0= 250\\xa0покупателей.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего за три дня в магазине побывало 500\\xa0покупателей.', 'Всего за первые два дня было: 150\\xa0+\\xa0100\\xa0= 250\\xa0покупателей.']\nnew_fact = infer_new_fact(selected) # 'Если за три дня в магазине побывало 500\\xa0покупателей, значит, в третий день покупателей было 500\\xa0–\\xa0250\\xa0= 250\\xa0человек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько покупателей было в третий день?', 'Если за три дня в магазине побывало 500\\xa0покупателей, значит, в третий день покупателей было 500\\xa0–\\xa0250\\xa0= 250\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 250'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '250'"}
{"id": "GSM8K_214_b58697d1c3", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: First find how many gallons of water flow out of the pools in 4 minutes: 4 gallons/minute * 4 minutes = 16 gallons; int1 & sent3 & sent4 -> int2: Let b be the amount of water the big pool has now and s be the amount of water the small pool has. We know that b = 4s, and b + 16 = 2(s + 16); int2 -> int3: Substituting the first equation into the second equation, we get 4s + 16 = 2(s + 16); int3 -> int4: Multiplying through the parentheses, we get 4s + 16 = 2s + 32; int4 -> int5: Subtracting 2s from both sides, we get 2s + 16 = 32; int5 -> int6: Subtracting 16 from both sides, we get 2s = 16; int6 -> int7: Dividing both sides by 2, we get s = 8; int7 & sent4 -> int8: The answer is 8;", "textual_logical_units": {"1": "У Джерри в саду есть два бассейна. Оба они протекают, поэтому вода уходит из них со скоростью 4 галлона в минуту.", "2": "4 минуты назад в большом бассейне было в два раза больше воды, чем в маленьком.", "3": "Теперь в большом бассейне в четыре раза больше воды, чем в маленьком.", "4": "Сколько воды сейчас в маленьком бассейне?", "5": "Сначала нужно узнать, сколько галлонов воды вытекло из бассейнов за 4 минуты: 4 галлона в минуту * 4 минуты = 16 галлонов.", "6": "Пусть b — количество воды, которая в настоящий момент осталась в большом бассейне, а s — количество воды в маленьком бассейне. Известно, что b = 4s и b + 16 = 2 * (s + 16).", "7": "Если подставить первое уравнение во второе, получится 4s + 16 = 2 * (s + 16).", "8": "Если раскрыть скобки, будет: 4s + 16 = 2s + 32.", "9": "Если вычесть 2s с обеих сторон, получится: 2s + 16 = 32.", "10": "Далее нужно вычесть 16 с обеих сторон, результат: 2s = 16.", "11": "Обе стороны полученного выражения нужно поделить на 2, получится s = 8.", "12": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Джерри в саду есть два бассейна. Оба они протекают, поэтому вода уходит из них со скоростью 4\\xa0галлона в минуту.',\n  '4\\xa0минуты назад в большом бассейне было в два раза больше воды, чем в маленьком.',\n  'Теперь в большом бассейне в четыре раза больше воды, чем в маленьком.']\nquestion = 'Сколько воды сейчас в маленьком бассейне?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Джерри в саду есть два бассейна. Оба они протекают, поэтому вода уходит из них со скоростью 4\\xa0галлона в минуту.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько галлонов воды вытекло из бассейнов за 4\\xa0минуты: 4\\xa0галлона в минуту\\xa0* 4\\xa0минуты\\xa0= 16\\xa0галлонов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Теперь в большом бассейне в четыре раза больше воды, чем в маленьком.', 'Сколько воды сейчас в маленьком бассейне?', 'Сначала нужно узнать, сколько галлонов воды вытекло из бассейнов за 4\\xa0минуты: 4\\xa0галлона в минуту\\xa0* 4\\xa0минуты\\xa0= 16\\xa0галлонов.']\nnew_fact = infer_new_fact(selected) # 'Пусть b\\xa0— количество воды, которая в настоящий момент осталась в большом бассейне, а s\\xa0— количество воды в маленьком бассейне. Известно, что b\\xa0= 4s и b\\xa0+\\xa016\\xa0=\\xa02\\xa0*\\xa0(s\\xa0+\\xa016).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть b\\xa0— количество воды, которая в настоящий момент осталась в большом бассейне, а s\\xa0— количество воды в маленьком бассейне. Известно, что b\\xa0= 4s и b\\xa0+\\xa016\\xa0=\\xa02\\xa0*\\xa0(s\\xa0+\\xa016).']\nnew_fact = infer_new_fact(selected) # 'Если подставить первое уравнение во второе, получится 4s\\xa0+\\xa016\\xa0=\\xa02\\xa0*\\xa0(s\\xa0+\\xa016).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если подставить первое уравнение во второе, получится 4s\\xa0+\\xa016\\xa0=\\xa02\\xa0*\\xa0(s\\xa0+\\xa016).']\nnew_fact = infer_new_fact(selected) # 'Если раскрыть скобки, будет: 4s\\xa0+\\xa016\\xa0= 2s\\xa0+\\xa032.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если раскрыть скобки, будет: 4s\\xa0+\\xa016\\xa0= 2s\\xa0+\\xa032.']\nnew_fact = infer_new_fact(selected) # 'Если вычесть 2s с обеих сторон, получится: 2s\\xa0+\\xa016\\xa0=\\xa032.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если вычесть 2s с обеих сторон, получится: 2s\\xa0+\\xa016\\xa0=\\xa032.']\nnew_fact = infer_new_fact(selected) # 'Далее нужно вычесть\\xa016 с обеих сторон, результат: 2s\\xa0=\\xa016.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Далее нужно вычесть\\xa016 с обеих сторон, результат: 2s\\xa0=\\xa016.']\nnew_fact = infer_new_fact(selected) # 'Обе стороны полученного выражения нужно поделить на\\xa02, получится s\\xa0=\\xa08.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько воды сейчас в маленьком бассейне?', 'Обе стороны полученного выражения нужно поделить на\\xa02, получится s\\xa0=\\xa08.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_215_92bce8e84c", "context": "", "options": [], "answer": "44", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: She wants to buy a pair of shoes for $320.00 and a belt for $32.00 for a total of 320+32 = $352.00; int1 & sent3 -> int2: Her purchase will total $352.00 and she makes $8.00 at her part-time job so she'll have to work 352/8 = 44 hours; int2 & sent4 -> int3: The answer is 44;", "textual_logical_units": {"1": "Лори хочет купить ботинки за 320,00 долларов", "2": "и подходящий к ним ремень за 32,00 доллара.", "3": "За подработку ей платят 8,00 долларов в час.", "4": "Сколько часов ей придется работать, прежде чем она сможет купить то, что хочется?", "5": "Она хочет купить ботинки за 320,00 долларов и ремень за 32,00 доллара, то есть всего ей нужно 320 долларов + 32 доллара = 352,00 доллара.", "6": "На покупки ей нужно 352,00 доллара, а за подработку ей платят 8,00 долларов, поэтому ей придется работать: 352 / 8 = 44 часа.", "7": "The answer is 44"}, "human_translated": true, "code_input": "####\nfacts = ['Лори хочет купить ботинки за 320,00\\xa0долларов', 'и подходящий к ним ремень за 32,00\\xa0доллара.', 'За подработку ей платят 8,00\\xa0долларов в час.']\nquestion = 'Сколько часов ей придется работать, прежде чем она сможет купить то, что хочется?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Лори хочет купить ботинки за 320,00\\xa0долларов', 'и подходящий к ним ремень за 32,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Она хочет купить ботинки за 320,00\\xa0долларов и ремень за 32,00\\xa0доллара, то есть всего ей нужно 320\\xa0долларов\\xa0+ 32\\xa0доллара\\xa0= 352,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За подработку ей платят 8,00\\xa0долларов в час.', 'Она хочет купить ботинки за 320,00\\xa0долларов и ремень за 32,00\\xa0доллара, то есть всего ей нужно 320\\xa0долларов\\xa0+ 32\\xa0доллара\\xa0= 352,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'На покупки ей нужно 352,00\\xa0доллара, а за подработку ей платят 8,00\\xa0долларов, поэтому ей придется работать: 352\\xa0/\\xa08\\xa0= 44\\xa0часа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов ей придется работать, прежде чем она сможет купить то, что хочется?', 'На покупки ей нужно 352,00\\xa0доллара, а за подработку ей платят 8,00\\xa0долларов, поэтому ей придется работать: 352\\xa0/\\xa08\\xa0= 44\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'The answer is 44'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '44'"}
{"id": "GSM8K_216_126c1ae606", "context": "", "options": [], "answer": "220", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Janeth will pay an additional $2000x 10/100 =$200.; int1 -> int2: So she is going to pay off a total of $2000 + $200 = $2200.; sent2 -> int3: Janeth will be able to pay off $165 x 12 = $1980 in 12 months.; int2 & int3 & sent3 -> int4: Hence, her remaining balance by then will be $2200 - $1980 = $220.; int4 & sent3 -> int5: The answer is 220;", "textual_logical_units": {"1": "Джанет заняла 2000 долларов и пообещала вернуть 10 % от этой суммы сверху.", "2": "Если она собирается выплачивать по 165 долларов в месяц в течение 12 месяцев,", "3": "сколько ей останется заплатить по окончании этого срока?", "4": "Джанет нужно заплатить дополнительно: 2000 долларов x 10/100 = 200 долларов.", "5": "То есть в общей сложности ей нужно выплатить: 2000 долларов + 200 долларов = 2200 долларов.", "6": "За 12 месяцев Джанет заплатит: 165 x 12 = 1980 долларов.", "7": "По окончании этого срока ей останется заплатить 2200 долларов – 1980 долларов = 220 долларов.", "8": "The answer is 220"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джанет заняла 2000\\xa0долларов и пообещала вернуть 10\\xa0% от этой суммы сверху.',\n  'Если она собирается выплачивать по 165\\xa0долларов в месяц в течение 12\\xa0месяцев,']\nquestion = 'сколько ей останется заплатить по окончании этого срока?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джанет заняла 2000\\xa0долларов и пообещала вернуть 10\\xa0% от этой суммы сверху.']\nnew_fact = infer_new_fact(selected) # 'Джанет нужно заплатить дополнительно: 2000\\xa0долларов\\xa0x\\xa010/100\\xa0= 200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джанет нужно заплатить дополнительно: 2000\\xa0долларов\\xa0x\\xa010/100\\xa0= 200\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'То есть в общей сложности ей нужно выплатить: 2000\\xa0долларов\\xa0+ 200\\xa0долларов\\xa0= 2200\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если она собирается выплачивать по 165\\xa0долларов в месяц в течение 12\\xa0месяцев,']\nnew_fact = infer_new_fact(selected) # 'За 12 месяцев Джанет заплатит: 165\\xa0x\\xa012\\xa0= 1980\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько ей останется заплатить по окончании этого срока?', 'То есть в общей сложности ей нужно выплатить: 2000\\xa0долларов\\xa0+ 200\\xa0долларов\\xa0= 2200\\xa0долларов.', 'За 12 месяцев Джанет заплатит: 165\\xa0x\\xa012\\xa0= 1980\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'По окончании этого срока ей останется заплатить 2200\\xa0долларов\\xa0– 1980\\xa0долларов\\xa0= 220\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько ей останется заплатить по окончании этого срока?', 'По окончании этого срока ей останется заплатить 2200\\xa0долларов\\xa0– 1980\\xa0долларов\\xa0= 220\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 220'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '220'"}
{"id": "GSM8K_217_a40ee07fbd", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 4 + 7 = 11 dahlias in the vase.; int1 -> int2: In total there are 4 + 11 = 15 flowers in the vase.; int2 & sent3 -> int3: The answer is 15;", "textual_logical_units": {"1": "В вазе стоят 4 розы,", "2": "а георгинов в ней на 7 больше, чем роз.", "3": "Сколько всего цветов в вазе?", "4": "В вазе стоят: 4 + 7 = 11 георгинов.", "5": "Всего в вазе: 4 + 11 = 15 цветов.", "6": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['В вазе стоят 4\\xa0розы,', 'а георгинов в ней на 7\\xa0больше, чем роз.']\nquestion = 'Сколько всего цветов в вазе?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В вазе стоят 4\\xa0розы,', 'а георгинов в ней на 7\\xa0больше, чем роз.']\nnew_fact = infer_new_fact(selected) # 'В вазе стоят: 4\\xa0+\\xa07\\xa0= 11\\xa0георгинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В вазе стоят: 4\\xa0+\\xa07\\xa0= 11\\xa0георгинов.']\nnew_fact = infer_new_fact(selected) # 'Всего в вазе: 4\\xa0+\\xa011\\xa0= 15\\xa0цветов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего цветов в вазе?', 'Всего в вазе: 4\\xa0+\\xa011\\xa0= 15\\xa0цветов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_218_6ed8827b09", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 4}, {"antecedents": [1, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 4, 6, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 3], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: In three years, Harriet will be 21+3 = 24 years old.; sent1 & sent3 -> int2: Since Adrian's age is three times that of Harriet, Adrian is 3*21 = 63 years old.; int2 & sent3 -> int3: In three years, he will be 63+3 =66 years old.; sent2 & sent3 -> int4: If Harriet is half times the age of Zack, Zack is 21*2 = 42 years old.; int4 & sent3 -> int5: In three years, he will be 42+3 = 45 years old.; int1 & int3 & int5 & sent3 -> int6: The combined age of the three in 3 years will be 45+66+24 = 135 years.; int6 & sent3 -> int7: The average age for the in three years will be 135/3 =45 years; sent1 & sent3 -> int8: The answer is 45;", "textual_logical_units": {"1": "Адриан в три раза старше Харриет,", "2": "а Харриет вдвое моложе Зака.", "3": "Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21 год.", "4": "Через три года Харриет будет: 21 + 3 = 24 года.", "5": "Поскольку Адриан втрое старше Харриет, ему: 3 * 21 = 63 года.", "6": "Через три года ему будет: 63 + 3 = 66 лет.", "7": "Если Харриет вдвое моложе Зака, то Заку: 21 * 2 = 42 года.", "8": "Через три года ему будет: 42 + 3 = 45 лет.", "9": "Совокупный возраст всех троих через 3 года составит 45 + 66 + 24 = 135 лет.", "10": "Средний их возраст через три года составит 135 / 3 = 45 лет.", "11": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = ['Адриан в три раза старше Харриет,', 'а Харриет вдвое моложе Зака.']\nquestion = 'Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'Через три года Харриет будет: 21\\xa0+\\xa03\\xa0= 24\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Адриан в три раза старше Харриет,', 'Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'Поскольку Адриан втрое старше Харриет, ему: 3\\xa0*\\xa021\\xa0= 63\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.', 'Поскольку Адриан втрое старше Харриет, ему: 3\\xa0*\\xa021\\xa0= 63\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'Через три года ему будет: 63\\xa0+\\xa03\\xa0= 66\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Харриет вдвое моложе Зака.', 'Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'Если Харриет вдвое моложе Зака, то Заку: 21\\xa0*\\xa02\\xa0= 42\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.', 'Если Харриет вдвое моложе Зака, то Заку: 21\\xa0*\\xa02\\xa0= 42\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'Через три года ему будет: 42\\xa0+\\xa03\\xa0= 45\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.', 'Через три года Харриет будет: 21\\xa0+\\xa03\\xa0= 24\\xa0года.', 'Через три года ему будет: 63\\xa0+\\xa03\\xa0= 66\\xa0лет.', 'Через три года ему будет: 42\\xa0+\\xa03\\xa0= 45\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Совокупный возраст всех троих через 3\\xa0года составит 45\\xa0+\\xa066\\xa0+\\xa024\\xa0= 135\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.', 'Совокупный возраст всех троих через 3\\xa0года составит 45\\xa0+\\xa066\\xa0+\\xa024\\xa0= 135\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Средний их возраст через три года составит 135\\xa0/\\xa03\\xa0= 45\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Адриан в три раза старше Харриет,', 'Рассчитайте средний возраст всех троих через три года, если Харриет сейчас 21\\xa0год.']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_219_4e84897434", "context": "", "options": [], "answer": "54", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 6], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: Naomi scored 68 points.; int1 & sent3 -> int2: Yuri scored 1/2 (68) + 10 = 44 points; int1 & sent4 -> int3: Brianna scored 68 + 17 = 85 points; int1 & int2 & int3 -> int4: Naomi, Yuri + Brianna scored = 68 + 44 + 85 = 197 points; int4 & sent5 -> int5: Jojo scored the rest 251 - 197 = 54 points; int5 -> int6: Jojo scored 54 points.; int6 & sent5 -> int7: The answer is 54;", "textual_logical_units": {"1": "Четыре студента набрали 251 очко в настольной игре.", "2": "Наоми набрала 68 очков.", "3": "Юрий набрал на 10 очков больше, чем половинное количество очков Наоми,", "4": "а Брианна набрала на 17 очков больше, чем Наоми.", "5": "Сколько очков набрал Джоджо?", "6": "Наоми набрала 68 очков.", "7": "Значит у Юрия: 1/2 * 68 + 10 = 44 очка.", "8": "Брианна набрала 68 + 17 = 85 очков.", "9": "Вместе Наоми, Юрий и Брианна получили: 68 + 44 + 85 = 197 очков.", "10": "Остальные очки принадлежат Джоджо, то есть у него: 251 – 197 = 54 очка.", "11": "Джоджо набрал 54 очка.", "12": "The answer is 54"}, "human_translated": true, "code_input": "####\nfacts = [ 'Четыре студента набрали 251\\xa0очко в настольной игре.',\n  'Наоми набрала 68\\xa0очков.',\n  'Юрий набрал на 10\\xa0очков больше, чем половинное количество очков Наоми,',\n  'а Брианна набрала на 17\\xa0очков больше, чем Наоми.']\nquestion = 'Сколько очков набрал Джоджо?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Наоми набрала 68\\xa0очков.']\nnew_fact = infer_new_fact(selected) # 'Наоми набрала 68\\xa0очков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Юрий набрал на 10\\xa0очков больше, чем половинное количество очков Наоми,', 'Наоми набрала 68\\xa0очков.']\nnew_fact = infer_new_fact(selected) # 'Значит у Юрия: 1/2\\xa0*\\xa068\\xa0+\\xa010\\xa0= 44\\xa0очка.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Брианна набрала на 17\\xa0очков больше, чем Наоми.', 'Наоми набрала 68\\xa0очков.']\nnew_fact = infer_new_fact(selected) # 'Брианна набрала 68\\xa0+\\xa017\\xa0= 85\\xa0очков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Наоми набрала 68\\xa0очков.', 'Значит у Юрия: 1/2\\xa0*\\xa068\\xa0+\\xa010\\xa0= 44\\xa0очка.', 'Брианна набрала 68\\xa0+\\xa017\\xa0= 85\\xa0очков.']\nnew_fact = infer_new_fact(selected) # 'Вместе Наоми, Юрий и Брианна получили: 68\\xa0+\\xa044\\xa0+\\xa085\\xa0= 197\\xa0очков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько очков набрал Джоджо?', 'Вместе Наоми, Юрий и Брианна получили: 68\\xa0+\\xa044\\xa0+\\xa085\\xa0= 197\\xa0очков.']\nnew_fact = infer_new_fact(selected) # 'Остальные очки принадлежат Джоджо, то есть у него: 251\\xa0–\\xa0197\\xa0= 54\\xa0очка.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Остальные очки принадлежат Джоджо, то есть у него: 251\\xa0–\\xa0197\\xa0= 54\\xa0очка.']\nnew_fact = infer_new_fact(selected) # 'Джоджо набрал 54\\xa0очка.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько очков набрал Джоджо?', 'Джоджо набрал 54\\xa0очка.']\nnew_fact = infer_new_fact(selected) # 'The answer is 54'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '54'"}
{"id": "GSM8K_220_d42c6be462", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: It takes 10 minutes to complete a crossword puzzle and she completed 3 for a total of 10*3 = 30 minutes; sent2 & sent3 -> int2: It takes 5 minutes to complete a sudoku puzzle and she completed 8 for a total of 5*8 = 40 minutes; int1 & int2 -> int3: She spent 30 minutes on crosswords and 40 minutes on sudoku for a total of 30+40 = 70 minutes; int3 & sent4 -> int4: The answer is 70;", "textual_logical_units": {"1": "Кармен разгадывает кроссворд за 10 минут,", "2": "а судоку — за 5 минут.", "3": "За выходные она разгадала 3 кроссворда и 8 судоку.", "4": "Сколько времени она потратила на эти головоломки?", "5": "На разгадку кроссворда Кармен тратит 10 минут, значит, на 3 кроссворда ей понадобилось: 10 * 3 = 30 минут.", "6": "На решение судоку ей требуется 5 минут, следовательно, на 8 судоку ей нужно: 5 * 8 = 40 минут.", "7": "То есть она потратила 30 минут на кроссворды и 40 минут на судоку, всего 30 + 40 = 70 минут.", "8": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['Кармен разгадывает кроссворд за 10\\xa0минут,', 'а судоку\\xa0— за 5\\xa0минут.', 'За выходные она разгадала 3\\xa0кроссворда и 8\\xa0судоку.']\nquestion = 'Сколько времени она потратила на эти головоломки?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Кармен разгадывает кроссворд за 10\\xa0минут,', 'За выходные она разгадала 3\\xa0кроссворда и 8\\xa0судоку.']\nnew_fact = infer_new_fact(selected) # 'На разгадку кроссворда Кармен тратит 10\\xa0минут, значит, на 3\\xa0кроссворда ей понадобилось: 10\\xa0*\\xa03\\xa0= 30\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а судоку\\xa0— за 5\\xa0минут.', 'За выходные она разгадала 3\\xa0кроссворда и 8\\xa0судоку.']\nnew_fact = infer_new_fact(selected) # 'На решение судоку ей требуется 5\\xa0минут, следовательно, на 8\\xa0судоку ей нужно: 5\\xa0*\\xa08\\xa0= 40\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На разгадку кроссворда Кармен тратит 10\\xa0минут, значит, на 3\\xa0кроссворда ей понадобилось: 10\\xa0*\\xa03\\xa0= 30\\xa0минут.', 'На решение судоку ей требуется 5\\xa0минут, следовательно, на 8\\xa0судоку ей нужно: 5\\xa0*\\xa08\\xa0= 40\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'То есть она потратила 30\\xa0минут на кроссворды и 40\\xa0минут на судоку, всего 30\\xa0+\\xa040\\xa0= 70\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени она потратила на эти головоломки?', 'То есть она потратила 30\\xa0минут на кроссворды и 40\\xa0минут на судоку, всего 30\\xa0+\\xa040\\xa0= 70\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_221_be07c6fc3b", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: After watering Celine's garden, 120 - 90 = 30 liters of water were left in the tank.; int1 & sent3 -> int2: Celine was able to collect 30 x 2 = 60 liters of rainwater.; int1 & int2 -> int3: Thus, there are 30 + 60 = 90 liters of water in the tank.; int3 & sent3 -> int4: The answer is 90;", "textual_logical_units": {"1": "В бочку налито 120 литров воды.", "2": "Чтобы полить свой сад, Селин истратила 90 литров.", "3": "Затем она смогла налить в бочку дождевой воды — в два раза больше, чем в ней оставалось.", "4": "Сколько литров воды сейчас в бочке?", "5": "Когда Селин закончила с поливом сада, в бочке осталось 120 – 90 = 30 литров воды.", "6": "Селин удалось налить в бочку: 30 x 2 = 60 литров дождевой воды.", "7": "Следовательно, в бочке сейчас 30 + 60 = 90 литров воды.", "8": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = [ 'В бочку налито 120\\xa0литров воды.',\n  'Чтобы полить свой сад, Селин истратила 90\\xa0литров.',\n  'Затем она смогла налить в бочку дождевой воды\\xa0— в два раза больше, чем в ней оставалось.']\nquestion = 'Сколько литров воды сейчас в бочке?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В бочку налито 120\\xa0литров воды.', 'Чтобы полить свой сад, Селин истратила 90\\xa0литров.']\nnew_fact = infer_new_fact(selected) # 'Когда Селин закончила с поливом сада, в бочке осталось 120\\xa0–\\xa090\\xa0= 30\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем она смогла налить в бочку дождевой воды\\xa0— в два раза больше, чем в ней оставалось.', 'Когда Селин закончила с поливом сада, в бочке осталось 120\\xa0–\\xa090\\xa0= 30\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'Селин удалось налить в бочку: 30\\xa0x\\xa02\\xa0= 60\\xa0литров дождевой воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда Селин закончила с поливом сада, в бочке осталось 120\\xa0–\\xa090\\xa0= 30\\xa0литров воды.', 'Селин удалось налить в бочку: 30\\xa0x\\xa02\\xa0= 60\\xa0литров дождевой воды.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в бочке сейчас 30\\xa0+\\xa060\\xa0= 90\\xa0литров воды.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем она смогла налить в бочку дождевой воды\\xa0— в два раза больше, чем в ней оставалось.', 'Следовательно, в бочке сейчас 30\\xa0+\\xa060\\xa0= 90\\xa0литров воды.']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_222_d91f050b29", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First find the number of petunias Andy plants: 90 flowers - 40 = 50 flowers; int1 & sent1 -> int2: Then add the number of each kind of flower he plants to find the total number: 50 flowers + 90 flowers = 140 flowers; int2 & sent3 -> int3: The answer is 140;", "textual_logical_units": {"1": "Энди посадил 90 кустиков герани.", "2": "Еще он посадил петунии — на 40 кустиков меньше, чем гераней.", "3": "Сколько всего цветов он посадил?", "4": "Сначала нужно узнать, сколько петуний посадил Энди: 90 – 40 = 50 цветов.", "5": "Теперь нужно сложить количество цветов каждого вида, чтобы узнать итоговый результат: 50 петуний + 90 гераней = 140 цветов.", "6": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = ['Энди посадил 90\\xa0кустиков герани.', 'Еще он посадил петунии\\xa0— на 40 кустиков меньше, чем гераней.']\nquestion = 'Сколько всего цветов он посадил?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Энди посадил 90\\xa0кустиков герани.', 'Еще он посадил петунии\\xa0— на 40 кустиков меньше, чем гераней.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько петуний посадил Энди: 90\\xa0–\\xa040\\xa0= 50\\xa0цветов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Энди посадил 90\\xa0кустиков герани.', 'Сначала нужно узнать, сколько петуний посадил Энди: 90\\xa0–\\xa040\\xa0= 50\\xa0цветов.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно сложить количество цветов каждого вида, чтобы узнать итоговый результат: 50\\xa0петуний\\xa0+ 90\\xa0гераней\\xa0= 140\\xa0цветов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего цветов он посадил?', 'Теперь нужно сложить количество цветов каждого вида, чтобы узнать итоговый результат: 50\\xa0петуний\\xa0+ 90\\xa0гераней\\xa0= 140\\xa0цветов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_223_3290e1a204", "context": "", "options": [], "answer": "20000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 15000/3 = 5,000 is spent on advertisement in the second year.; int1 & sent1 & sent2 -> int2: The total on advertisement for the two years is 15000+5000 = 20000 dollars.; int2 & sent2 -> int3: The answer is 20000;", "textual_logical_units": {"1": "В течение года компания потратила 15 000 долларов на рекламу.", "2": "В следующем году она потратила на рекламу только треть этой суммы.  Сколько всего компания потратила на рекламу за два года?", "3": "15 000 / 3 = 5000 долларов было потрачено на рекламу во второй год.", "4": "Всего за два года на рекламу было потрачено: 15 000 + 5000 = 20 000 долларов.", "5": "The answer is 20000"}, "human_translated": true, "code_input": "####\nfacts = ['В течение года компания потратила 15\\xa0000\\xa0долларов на рекламу.']\nquestion = 'В следующем году она потратила на рекламу только треть этой суммы.\\xa0 Сколько всего компания потратила на рекламу за два года?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В течение года компания потратила 15\\xa0000\\xa0долларов на рекламу.', 'В следующем году она потратила на рекламу только треть этой суммы.\\xa0 Сколько всего компания потратила на рекламу за два года?']\nnew_fact = infer_new_fact(selected) # '15\\xa0000\\xa0/\\xa03\\xa0= 5000\\xa0долларов было потрачено на рекламу во второй год.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В течение года компания потратила 15\\xa0000\\xa0долларов на рекламу.', 'В следующем году она потратила на рекламу только треть этой суммы.\\xa0 Сколько всего компания потратила на рекламу за два года?', '15\\xa0000\\xa0/\\xa03\\xa0= 5000\\xa0долларов было потрачено на рекламу во второй год.']\nnew_fact = infer_new_fact(selected) # 'Всего за два года на рекламу было потрачено: 15\\xa0000\\xa0+\\xa05000\\xa0= 20\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В следующем году она потратила на рекламу только треть этой суммы.\\xa0 Сколько всего компания потратила на рекламу за два года?', 'Всего за два года на рекламу было потрачено: 15\\xa0000\\xa0+\\xa05000\\xa0= 20\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20000'"}
{"id": "GSM8K_224_34806f09cd", "context": "", "options": [], "answer": "180", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [3, 5], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Carlos would have to pay $30 x 3 = $90; sent3 & sent5 -> int2: Benji would have to pay $18 x 5 = $90; int1 & int2 -> int3: All together, Carlos and Benji will have to pay $90 + $90 = $180; int3 & sent6 -> int4: The answer is 180;", "textual_logical_units": {"1": "Карлос и Бенджи пошли на пляж.", "2": "Карлос взял напрокат каноэ за 30 долларов в час,", "3": "а Бенджи взял надувную лодку-банан за 18 долларов в час.", "4": "Если Карлос будет кататься на лодке 3 часа,", "5": "а Бенджи на своем банане — 5 часов,", "6": "сколько всего они заплатят за прокат?", "7": "Карлосу нужно будет заплатить: 30 долларов x 3 = 90 долларов.", "8": "Бенджи придется заплатить: 18 долларов x 5 = 90 долларов.", "9": "В общей сложности Карлосу и Бенджи нужно будет заплатить: 90 долларов + 90 долларов = 180 долларов.", "10": "The answer is 180"}, "human_translated": true, "code_input": "####\nfacts = [ 'Карлос и Бенджи пошли на пляж.',\n  'Карлос взял напрокат каноэ за 30\\xa0долларов в час,',\n  'а Бенджи взял надувную лодку-банан за 18\\xa0долларов в час.',\n  'Если Карлос будет кататься на лодке 3\\xa0часа,',\n  'а Бенджи на своем банане\\xa0— 5\\xa0часов,']\nquestion = 'сколько всего они заплатят за прокат?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Карлос взял напрокат каноэ за 30\\xa0долларов в час,', 'Если Карлос будет кататься на лодке 3\\xa0часа,']\nnew_fact = infer_new_fact(selected) # 'Карлосу нужно будет заплатить: 30\\xa0долларов\\xa0x\\xa03\\xa0= 90\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Бенджи взял надувную лодку-банан за 18\\xa0долларов в час.', 'а Бенджи на своем банане\\xa0— 5\\xa0часов,']\nnew_fact = infer_new_fact(selected) # 'Бенджи придется заплатить: 18\\xa0долларов\\xa0x\\xa05\\xa0= 90\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Карлосу нужно будет заплатить: 30\\xa0долларов\\xa0x\\xa03\\xa0= 90\\xa0долларов.', 'Бенджи придется заплатить: 18\\xa0долларов\\xa0x\\xa05\\xa0= 90\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности Карлосу и Бенджи нужно будет заплатить: 90\\xa0долларов\\xa0+ 90\\xa0долларов\\xa0= 180\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько всего они заплатят за прокат?', 'В общей сложности Карлосу и Бенджи нужно будет заплатить: 90\\xa0долларов\\xa0+ 90\\xa0долларов\\xa0= 180\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 180'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '180'"}
{"id": "GSM8K_225_4b7a00fa22", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The number of days to travel by car are 6/2 = 3 days.; int1 & sent2 -> int2: The total number of days for the whole trip is 6 + 3 = 9 days.; int2 & sent4 & sent5 -> int3: The answer is 9;", "textual_logical_units": {"1": "Эндрю нужно съездить из Нью-Джерси в Рочестер.", "2": "Поездка на автобусе занимает 6 дней,", "3": "а на машине можно добраться вдвое быстрее.", "4": "Сколько дней потребуется Эндрю на поездку, если он хочет добраться до Рочестера на автобусе,", "5": "а обратно планирует вернуться на машине?", "6": "Поездка на автомобиле займет: 6 / 2 = 3 дня.", "7": "Всего на поездку потребуется: 6 + 3 = 9 дней.", "8": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = [ 'Эндрю нужно съездить из Нью-Джерси в Рочестер.',\n  'Поездка на автобусе занимает 6\\xa0дней,',\n  'а на машине можно добраться вдвое быстрее.',\n  'Сколько дней потребуется Эндрю на поездку, если он хочет добраться до Рочестера на автобусе,']\nquestion = 'а обратно планирует вернуться на машине?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Поездка на автобусе занимает 6\\xa0дней,', 'а на машине можно добраться вдвое быстрее.']\nnew_fact = infer_new_fact(selected) # 'Поездка на автомобиле займет: 6\\xa0/\\xa02\\xa0= 3\\xa0дня.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поездка на автобусе занимает 6\\xa0дней,', 'Поездка на автомобиле займет: 6\\xa0/\\xa02\\xa0= 3\\xa0дня.']\nnew_fact = infer_new_fact(selected) # 'Всего на поездку потребуется: 6\\xa0+\\xa03\\xa0= 9\\xa0дней.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дней потребуется Эндрю на поездку, если он хочет добраться до Рочестера на автобусе,', 'а обратно планирует вернуться на машине?', 'Всего на поездку потребуется: 6\\xa0+\\xa03\\xa0= 9\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_226_197541af27", "context": "", "options": [], "answer": "33", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 5, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: First find the final number of grass type Pokemon: 20 grass type + 14 grass type = 34 grass type; sent2 & sent3 -> int2: Then find the final number of water type Pokemon: 40 water type - 8 water type = 32 water type; int1 & int2 & sent2 -> int3: Then add the number of each type of Pokemon to find the total number: 34 Pokemon + 32 Pokemon + 30 Pokemon = 96 Pokemon; int2 & int3 & sent4 -> int4: Then divide the number of water type Pokemon by the total number of Pokemon and multiply by 100% to express the answer as a percentage: 32 water type / 96 Pokemon * 100% = 33.333...%, which rounds down to 33%; int4 & sent4 -> int5: The answer is 33;", "textual_logical_units": {"1": "Джеймс считает, сколько у него карточек с покемонами.", "2": "У него 30 огненных покемонов, 20 травяных и 40 водных.", "3": "Если он потеряет 8 водных покемонов и купит 14 травяных,", "4": "какова вероятность в процентах, что на случайно выбранной карточке будет водный покемон? Полученное значение нужно округлить до ближайшего целого числа.", "5": "Сначала нужно узнать, сколько у Джеймса будет травяных покемонов: 20 + 14 = 34 травяных покемона.", "6": "Затем надо найти, сколько у него останется водных покемонов. 40 – 8 = 32 водных покемона.", "7": "Чтобы найти общее количество, нужно сложить карточки всех типов: 34 травяных покемона + 32 водных покемона + 30 огненных покемонов = 96 покемонов.", "8": "Затем следует разделить количество водных покемонов на общее количество карточек и умножить полученное значение на 100 %, чтобы выразить ответ в процентах: 32 водных покемона / 96 карточек * 100 % = 33,333... %, что округляется до 33 %", "9": "The answer is 33"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джеймс считает, сколько у него карточек с покемонами.',\n  'У него 30\\xa0огненных покемонов, 20\\xa0травяных и 40\\xa0водных.',\n  'Если он потеряет 8\\xa0водных покемонов и купит 14\\xa0травяных,']\nquestion = 'какова вероятность в процентах, что на случайно выбранной карточке будет водный покемон? Полученное значение нужно округлить до ближайшего целого числа.'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У него 30\\xa0огненных покемонов, 20\\xa0травяных и 40\\xa0водных.', 'Если он потеряет 8\\xa0водных покемонов и купит 14\\xa0травяных,']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько у Джеймса будет травяных покемонов: 20\\xa0+\\xa014\\xa0= 34\\xa0травяных покемона.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У него 30\\xa0огненных покемонов, 20\\xa0травяных и 40\\xa0водных.', 'Если он потеряет 8\\xa0водных покемонов и купит 14\\xa0травяных,']\nnew_fact = infer_new_fact(selected) # 'Затем надо найти, сколько у него останется водных покемонов. 40\\xa0–\\xa08\\xa0= 32\\xa0водных покемона.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У него 30\\xa0огненных покемонов, 20\\xa0травяных и 40\\xa0водных.', 'Сначала нужно узнать, сколько у Джеймса будет травяных покемонов: 20\\xa0+\\xa014\\xa0= 34\\xa0травяных покемона.', 'Затем надо найти, сколько у него останется водных покемонов. 40\\xa0–\\xa08\\xa0= 32\\xa0водных покемона.']\nnew_fact = infer_new_fact(selected) # 'Чтобы найти общее количество, нужно сложить карточки всех типов: 34\\xa0травяных покемона\\xa0+ 32\\xa0водных покемона\\xa0+ 30\\xa0огненных покемонов\\xa0= 96\\xa0покемонов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова вероятность в процентах, что на случайно выбранной карточке будет водный покемон? Полученное значение нужно округлить до ближайшего целого числа.', 'Затем надо найти, сколько у него останется водных покемонов. 40\\xa0–\\xa08\\xa0= 32\\xa0водных покемона.', 'Чтобы найти общее количество, нужно сложить карточки всех типов: 34\\xa0травяных покемона\\xa0+ 32\\xa0водных покемона\\xa0+ 30\\xa0огненных покемонов\\xa0= 96\\xa0покемонов.']\nnew_fact = infer_new_fact(selected) # 'Затем следует разделить количество водных покемонов на общее количество карточек и умножить полученное значение на 100\\xa0%, чтобы выразить ответ в процентах: 32\\xa0водных покемона\\xa0/ 96\\xa0карточек\\xa0*\\xa0100\\xa0%\\xa0= 33,333...\\xa0%, что округляется до 33\\xa0%'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова вероятность в процентах, что на случайно выбранной карточке будет водный покемон? Полученное значение нужно округлить до ближайшего целого числа.', 'Затем следует разделить количество водных покемонов на общее количество карточек и умножить полученное значение на 100\\xa0%, чтобы выразить ответ в процентах: 32\\xa0водных покемона\\xa0/ 96\\xa0карточек\\xa0*\\xa0100\\xa0%\\xa0= 33,333...\\xa0%, что округляется до 33\\xa0%']\nnew_fact = infer_new_fact(selected) # 'The answer is 33'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '33'"}
{"id": "GSM8K_227_b64de3691a", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 -> int1: He orders 2 sauces at $0.25 each so 2*.25 = $0.50 for sauce; int1 & sent3 -> int2: He orders extra meat for $2.00, extra cheese for $1.00, avocado for $1.00 and $0.50 for sauce for a total of 2+1+1+.50 = $4.50 in extras; int2 & sent2 & sent5 -> int3: His burrito cost $6.50 and he adds $4.50 in extras and upgrades his meal for $3.00 so now he owes, 6.50+4.50+3 = $14.00; sent1 & sent6 -> int4: He has a $5.00 gift card and his current bill is $14.00 so he will owe 14-5 = $9.00; int4 & sent7 -> int5: The answer is 9;", "textual_logical_units": {"1": "Чад заказал на обед буррито с начинкой по своему вкусу.", "2": "Обычное буррито стоит 6,50 долларов.", "3": "Чад добавил мяса на 2,00 доллара, сыра на 1,00 доллар, авокадо на 1,00 доллар", "4": "и 2 соуса по 0,25 доллара каждый.", "5": "Он решил потратить еще 3,00 доллара и добавить к заказу чипсы и напиток.", "6": "У него есть подарочная карта на 5,00 долларов, которую он использовал при оформлении заказа.", "7": "Сколько ему нужно доплатить?", "8": "Чад заказал 2 соуса по 0,25 доллара за каждый, то есть соус ему обойдется в 2 * 0,25 = 0,50 доллара.", "9": "Он добавил на 2,00 доллара мяса, сыра на 1,00 доллар, авокадо на 1,00 доллар и соусов на 0,50 доллара на общую сумму 2 + 1 + 1 + 0,50 доллара = 4,50 доллара.", "10": "Буррито стоит 6,50 долларов, за добавки нужно заплатить 4,50 доллара и еще 3,00 доллара за чипсы и напиток, следовательно, весь заказ стоит: 6,50 + 4,50 + 3 = 14,00 долларов.", "11": "У Чада есть подарочная карта на 5,00 долларов, а по счету ему нужно заплатить 14,00 долларов, поэтому он должен еще: 14 – 5 = 9,00 долларов.", "12": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = [ 'Чад заказал на обед буррито с начинкой по своему вкусу.',\n  'Обычное буррито стоит 6,50\\xa0долларов.',\n  'Чад добавил мяса на 2,00\\xa0доллара, сыра на 1,00\\xa0доллар, авокадо на 1,00\\xa0доллар',\n  'и 2\\xa0соуса по 0,25\\xa0доллара каждый.',\n  'Он решил потратить еще 3,00\\xa0доллара и добавить к заказу чипсы и напиток.',\n  'У него есть подарочная карта на 5,00\\xa0долларов, которую он использовал при оформлении заказа.']\nquestion = 'Сколько ему нужно доплатить?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и 2\\xa0соуса по 0,25\\xa0доллара каждый.']\nnew_fact = infer_new_fact(selected) # 'Чад заказал 2\\xa0соуса по 0,25\\xa0доллара за каждый, то есть соус ему обойдется в 2\\xa0*\\xa00,25\\xa0= 0,50\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чад добавил мяса на 2,00\\xa0доллара, сыра на 1,00\\xa0доллар, авокадо на 1,00\\xa0доллар', 'Чад заказал 2\\xa0соуса по 0,25\\xa0доллара за каждый, то есть соус ему обойдется в 2\\xa0*\\xa00,25\\xa0= 0,50\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Он добавил на 2,00\\xa0доллара мяса, сыра на 1,00\\xa0доллар, авокадо на 1,00\\xa0доллар и соусов на 0,50\\xa0доллара на общую сумму 2\\xa0+\\xa01\\xa0+\\xa01\\xa0+\\xa00,50\\xa0доллара\\xa0= 4,50\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обычное буррито стоит 6,50\\xa0долларов.', 'Он решил потратить еще 3,00\\xa0доллара и добавить к заказу чипсы и напиток.', 'Он добавил на 2,00\\xa0доллара мяса, сыра на 1,00\\xa0доллар, авокадо на 1,00\\xa0доллар и соусов на 0,50\\xa0доллара на общую сумму 2\\xa0+\\xa01\\xa0+\\xa01\\xa0+\\xa00,50\\xa0доллара\\xa0= 4,50\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Буррито стоит 6,50\\xa0долларов, за добавки нужно заплатить 4,50\\xa0доллара и еще 3,00\\xa0доллара за чипсы и напиток, следовательно, весь заказ стоит: 6,50\\xa0+\\xa04,50\\xa0+\\xa03\\xa0= 14,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чад заказал на обед буррито с начинкой по своему вкусу.', 'У него есть подарочная карта на 5,00\\xa0долларов, которую он использовал при оформлении заказа.']\nnew_fact = infer_new_fact(selected) # 'У Чада есть подарочная карта на 5,00\\xa0долларов, а по счету ему нужно заплатить 14,00\\xa0долларов, поэтому он должен еще: 14\\xa0–\\xa05\\xa0= 9,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ему нужно доплатить?', 'У Чада есть подарочная карта на 5,00\\xa0долларов, а по счету ему нужно заплатить 14,00\\xa0долларов, поэтому он должен еще: 14\\xa0–\\xa05\\xa0= 9,00\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_228_0a1e116105", "context": "", "options": [], "answer": "1", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Her mom places 2 pieces per minute because 4 / 2 = 2; int1 & sent2 -> int2: On average they get in 6 pieces per minute because 4 + 2 = 6; int2 & sent1 -> int3: It will take 60 minutes to complete the puzzle because 360 / 6 = 60; int3 & sent4 -> int4: It will take one hour because 60 / 60 = 1; int4 & sent4 -> int5: The answer is 1;", "textual_logical_units": {"1": "Калинда с мамой собирает пазл из 360 частей.", "2": "Обычно Калинда находит 4 нужных пазла за минуту.", "3": "Ее мама обычно находит в минуту вдвое меньше подходящих пазлов, чем Калинда.", "4": "Сколько часов им понадобится, чтобы собрать весь пазл?", "5": "Мама Калинды за минуту находит 2 нужных пазла: 4 / 2 = 2.", "6": "В среднем они складывают по 6 пазлов в минуту: 4 + 2 = 6.", "7": "Чтобы собрать весь пазл, им потребуется 60 минут: 360 / 6 = 60,", "8": "или один час: 60 / 60 = 1.", "9": "The answer is 1"}, "human_translated": true, "code_input": "####\nfacts = [ 'Калинда с мамой собирает пазл из 360\\xa0частей.',\n  'Обычно Калинда находит 4\\xa0нужных пазла за минуту.',\n  'Ее мама обычно находит в минуту вдвое меньше подходящих пазлов, чем Калинда.']\nquestion = 'Сколько часов им понадобится, чтобы собрать весь пазл?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Обычно Калинда находит 4\\xa0нужных пазла за минуту.', 'Ее мама обычно находит в минуту вдвое меньше подходящих пазлов, чем Калинда.']\nnew_fact = infer_new_fact(selected) # 'Мама Калинды за минуту находит 2\\xa0нужных пазла: 4\\xa0/\\xa02\\xa0=\\xa02.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обычно Калинда находит 4\\xa0нужных пазла за минуту.', 'Мама Калинды за минуту находит 2\\xa0нужных пазла: 4\\xa0/\\xa02\\xa0=\\xa02.']\nnew_fact = infer_new_fact(selected) # 'В среднем они складывают по 6\\xa0пазлов в минуту: 4\\xa0+\\xa02\\xa0=\\xa06.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Калинда с мамой собирает пазл из 360\\xa0частей.', 'В среднем они складывают по 6\\xa0пазлов в минуту: 4\\xa0+\\xa02\\xa0=\\xa06.']\nnew_fact = infer_new_fact(selected) # 'Чтобы собрать весь пазл, им потребуется 60\\xa0минут: 360\\xa0/\\xa06\\xa0=\\xa060,'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов им понадобится, чтобы собрать весь пазл?', 'Чтобы собрать весь пазл, им потребуется 60\\xa0минут: 360\\xa0/\\xa06\\xa0=\\xa060,']\nnew_fact = infer_new_fact(selected) # 'или один час: 60\\xa0/\\xa060\\xa0=\\xa01.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов им понадобится, чтобы собрать весь пазл?', 'или один час: 60\\xa0/\\xa060\\xa0=\\xa01.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1'"}
{"id": "GSM8K_229_b451177ace", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [5, 6, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: When Ashlyn found out that 30% of the melons were ready, she took home 30/100 *120 = 36 watermelons.; int1 & sent1 -> int2: The number of watermelons remaining on the farm is 120-36 =84; int2 & sent5 & sent6 -> int3: When she returned two weeks later, she found that 3/4*84 = 63 were ready for harvest,; int2 & sent1 -> int4: The number of watermelons that were not ready is 84-63 =21; int4 & sent7 -> int5: The answer is 21;", "textual_logical_units": {"1": "На ферме высадили 120 ростков арбуза.", "2": "Через два месяца Эшлин приехала на ферму", "3": "и узнала, что 30 % арбузов уже созрело,", "4": "поэтому она забрала их домой.", "5": "Когда она вернулась через две недели,", "6": "созрело 3/4 оставшихся арбузов, поэтому их она тоже забрала.", "7": "Сколько арбузов не успело созреть за эти две недели?", "8": "Узнав, что 30 % арбузов созрело, Эшлин увезла: 30 / 100 * 120 = 36 арбузов.", "9": "На ферме осталось: 120 – 36 = 84 арбуза.", "10": "Вернувшись через две недели, Эшлин узнала, что созрело еще: 3/4 * 84 = 63 арбуза.", "11": "Следовательно, не успел созреть 84 – 63 = 21 арбуз.", "12": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = [ 'На ферме высадили 120\\xa0ростков арбуза.',\n  'Через два месяца Эшлин приехала на ферму',\n  'и узнала, что 30\\xa0% арбузов уже созрело,',\n  'поэтому она забрала их домой.',\n  'Когда она вернулась через две недели,',\n  'созрело 3/4\\xa0оставшихся арбузов, поэтому их она тоже забрала.']\nquestion = 'Сколько арбузов не успело созреть за эти две недели?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На ферме высадили 120\\xa0ростков арбуза.', 'и узнала, что 30\\xa0% арбузов уже созрело,']\nnew_fact = infer_new_fact(selected) # 'Узнав, что 30\\xa0% арбузов созрело, Эшлин увезла: 30\\xa0/\\xa0100\\xa0*\\xa0120\\xa0= 36\\xa0арбузов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На ферме высадили 120\\xa0ростков арбуза.', 'Узнав, что 30\\xa0% арбузов созрело, Эшлин увезла: 30\\xa0/\\xa0100\\xa0*\\xa0120\\xa0= 36\\xa0арбузов.']\nnew_fact = infer_new_fact(selected) # 'На ферме осталось: 120\\xa0–\\xa036\\xa0= 84\\xa0арбуза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда она вернулась через две недели,', 'созрело 3/4\\xa0оставшихся арбузов, поэтому их она тоже забрала.', 'На ферме осталось: 120\\xa0–\\xa036\\xa0= 84\\xa0арбуза.']\nnew_fact = infer_new_fact(selected) # 'Вернувшись через две недели, Эшлин узнала, что созрело еще: 3/4\\xa0*\\xa084\\xa0= 63\\xa0арбуза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На ферме высадили 120\\xa0ростков арбуза.', 'На ферме осталось: 120\\xa0–\\xa036\\xa0= 84\\xa0арбуза.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, не успел созреть 84\\xa0–\\xa063\\xa0= 21\\xa0арбуз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько арбузов не успело созреть за эти две недели?', 'Следовательно, не успел созреть 84\\xa0–\\xa063\\xa0= 21\\xa0арбуз.']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_230_341cf3f089", "context": "", "options": [], "answer": "276000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 5], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The cars cost 20000*12=$240,000; int1 & sent3 -> int2: So the tax came out to 240,000*.1=$24,000; int1 & int2 -> int3: So the cars cost 240,000+24,000=$264,000; sent1 & sent4 -> int4: Registration cost another 12*1000=12,000; int3 & int4 -> int5: So his total cost is 264,000+12,000=$276,000; sent1 & sent5 -> int6: The answer is 276,000;", "textual_logical_units": {"1": "Марк закупает для своей компании 12 автомобилей.", "2": "Каждый автомобиль стоит 20 000 долларов.", "3": "Кроме того, ему нужно заплатить 10 % налога за эти автомобили,", "4": "и еще по 1000 долларов придется потратить за регистрацию каждого из них.", "5": "Сколько всего нужно заплатить Марку?", "6": "Общая стоимость автомобилей: 20 000 * 12 = 240 000 долларов.", "7": "На налог придется потратить: 240 000 * 0,1 = 24 000 долларов.", "8": "То есть на этом этапе стоимость автомобилей составляет 240 000 + 24 000 = 264 000 долларов.", "9": "Регистрация обойдется в 12 * 1000 = 12 000 долларов.", "10": "Таким образом, всего при покупке автомобилей Марку нужно заплатить: 264 000 + 12 000 = 276 000 долларов.", "11": "The answer is 276,000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Марк закупает для своей компании 12\\xa0автомобилей.',\n  'Каждый автомобиль стоит 20\\xa0000\\xa0долларов.',\n  'Кроме того, ему нужно заплатить 10\\xa0% налога за эти автомобили,',\n  'и еще по 1000\\xa0долларов придется потратить за регистрацию каждого из них.']\nquestion = 'Сколько всего нужно заплатить Марку?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Марк закупает для своей компании 12\\xa0автомобилей.', 'Каждый автомобиль стоит 20\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость автомобилей: 20\\xa0000\\xa0*\\xa012\\xa0= 240\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, ему нужно заплатить 10\\xa0% налога за эти автомобили,', 'Общая стоимость автомобилей: 20\\xa0000\\xa0*\\xa012\\xa0= 240\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'На налог придется потратить: 240\\xa0000\\xa0*\\xa00,1 = 24\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая стоимость автомобилей: 20\\xa0000\\xa0*\\xa012\\xa0= 240\\xa0000\\xa0долларов.', 'На налог придется потратить: 240\\xa0000\\xa0*\\xa00,1 = 24\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'То есть на этом этапе стоимость автомобилей составляет 240\\xa0000\\xa0+\\xa024\\xa0000\\xa0= 264\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марк закупает для своей компании 12\\xa0автомобилей.', 'и еще по 1000\\xa0долларов придется потратить за регистрацию каждого из них.']\nnew_fact = infer_new_fact(selected) # 'Регистрация обойдется в 12\\xa0*\\xa01000\\xa0= 12\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['То есть на этом этапе стоимость автомобилей составляет 240\\xa0000\\xa0+\\xa024\\xa0000\\xa0= 264\\xa0000\\xa0долларов.', 'Регистрация обойдется в 12\\xa0*\\xa01000\\xa0= 12\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, всего при покупке автомобилей Марку нужно заплатить: 264\\xa0000\\xa0+\\xa012\\xa0000\\xa0= 276\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марк закупает для своей компании 12\\xa0автомобилей.', 'Сколько всего нужно заплатить Марку?']\nnew_fact = infer_new_fact(selected) # 'The answer is 276,000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '276000'"}
{"id": "GSM8K_231_dfc5dc70ec", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: On Monday, Kylie collects 20 + 5 = 25 shells; sent3 -> int2: On Tuesday, Kylie collects 25 * 2 = 50 shells; int2 & sent4 -> int3: The answer is 50;", "textual_logical_units": {"1": "Кайли и Роберт любят ходить на пляж за ракушками.", "2": "В понедельник Кайли собрала на 5 ракушек больше, чем Роберт, который нашел 20 ракушек.", "3": "Во вторник Кайли собрала в 2 раза больше ракушек, чем в понедельник.", "4": "Сколько ракушек Кайли собрала во вторник?", "5": "В понедельник Кайли собрала 20 + 5 = 25 ракушек.", "6": "Во вторник Кайли собрала 25 * 2 = 50 ракушек.", "7": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кайли и Роберт любят ходить на пляж за ракушками.',\n  'В понедельник Кайли собрала на 5\\xa0ракушек больше, чем Роберт, который нашел 20\\xa0ракушек.',\n  'Во вторник Кайли собрала в 2\\xa0раза больше ракушек, чем в понедельник.']\nquestion = 'Сколько ракушек Кайли собрала во вторник?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник Кайли собрала на 5\\xa0ракушек больше, чем Роберт, который нашел 20\\xa0ракушек.']\nnew_fact = infer_new_fact(selected) # 'В понедельник Кайли собрала 20\\xa0+\\xa05\\xa0= 25\\xa0ракушек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во вторник Кайли собрала в 2\\xa0раза больше ракушек, чем в понедельник.']\nnew_fact = infer_new_fact(selected) # 'Во вторник Кайли собрала 25\\xa0*\\xa02\\xa0= 50\\xa0ракушек.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько ракушек Кайли собрала во вторник?', 'Во вторник Кайли собрала 25\\xa0*\\xa02\\xa0= 50\\xa0ракушек.']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_232_0687e50a8c", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If there were 50 ants, the total number of bugs in the garden is 1 bug/2 ants * 50 ants = 25 bugs; int1 & sent3 -> int2: The total number of insects in the garden is 25 bugs + 50 ants = 75 insects; int2 & sent4 -> int3: The answer is 75;", "textual_logical_units": {"1": "Дакс отправился на ферму за яблоками", "2": "и обнаружил, что жуков в саду вдвое меньше, чем муравьев.", "3": "Если в саду было 50 муравьев,", "4": "то сколько всего там насекомых?", "5": "Если в саду было 50 муравьев, то жуков было в два раза меньше, то есть 1/2 * 50 муравьев = 25 жуков.", "6": "Всего в саду 25 жуков + 50 муравьев = 75 насекомых.", "7": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = ['Дакс отправился на ферму за яблоками', 'и обнаружил, что жуков в саду вдвое меньше, чем муравьев.', 'Если в саду было 50\\xa0муравьев,']\nquestion = 'то сколько всего там насекомых?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и обнаружил, что жуков в саду вдвое меньше, чем муравьев.', 'Если в саду было 50\\xa0муравьев,']\nnew_fact = infer_new_fact(selected) # 'Если в саду было 50\\xa0муравьев, то жуков было в два раза меньше, то есть 1/2\\xa0*\\xa050\\xa0муравьев\\xa0= 25\\xa0жуков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в саду было 50\\xa0муравьев,', 'Если в саду было 50\\xa0муравьев, то жуков было в два раза меньше, то есть 1/2\\xa0*\\xa050\\xa0муравьев\\xa0= 25\\xa0жуков.']\nnew_fact = infer_new_fact(selected) # 'Всего в саду 25\\xa0жуков\\xa0+ 50\\xa0муравьев\\xa0= 75\\xa0насекомых.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то сколько всего там насекомых?', 'Всего в саду 25\\xa0жуков\\xa0+ 50\\xa0муравьев\\xa0= 75\\xa0насекомых.']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_233_2021bf8148", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: This many penguins are swimming: 36/3 = 12 penguins.; sent1 & sent3 -> int2: This many penguins are eating their dinner: 36/3 = 12 penguins.; int1 & int2 -> int3: This many penguins are not sunbathing: 12 + 12 = 24.; int3 & sent1 -> int4: This many penguins are still sunbathing: 36 - 24 = 12 penguins.; int4 & sent4 -> int5: The answer is 12;", "textual_logical_units": {"1": "36 пингвинов нежились на солнышке на снегу.", "2": "Затем треть из них прыгнула в воду поплавать.", "3": "Еще треть ушла в пещеру ужинать.", "4": "Сколько пингвинов осталось нежится на солнце?", "5": "Плавать отправились: 36 / 3 = 12 пингвинов.", "6": "На ужин ушли: 36 / 3 = 12 пингвинов.", "7": "То есть, не захотели лежать на солнце: 12 + 12 = 24 пингвина.", "8": "Остались нежится на солнце: 36 – 24 = 12 пингвинов.", "9": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = ['36\\xa0пингвинов нежились на солнышке на снегу.', 'Затем треть из них прыгнула в воду поплавать.', 'Еще треть ушла в пещеру ужинать.']\nquestion = 'Сколько пингвинов осталось нежится на солнце?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['36\\xa0пингвинов нежились на солнышке на снегу.', 'Затем треть из них прыгнула в воду поплавать.']\nnew_fact = infer_new_fact(selected) # 'Плавать отправились: 36\\xa0/\\xa03\\xa0= 12\\xa0пингвинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36\\xa0пингвинов нежились на солнышке на снегу.', 'Еще треть ушла в пещеру ужинать.']\nnew_fact = infer_new_fact(selected) # 'На ужин ушли: 36\\xa0/\\xa03\\xa0= 12\\xa0пингвинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Плавать отправились: 36\\xa0/\\xa03\\xa0= 12\\xa0пингвинов.', 'На ужин ушли: 36\\xa0/\\xa03\\xa0= 12\\xa0пингвинов.']\nnew_fact = infer_new_fact(selected) # 'То есть, не захотели лежать на солнце: 12\\xa0+\\xa012\\xa0= 24\\xa0пингвина.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36\\xa0пингвинов нежились на солнышке на снегу.', 'То есть, не захотели лежать на солнце: 12\\xa0+\\xa012\\xa0= 24\\xa0пингвина.']\nnew_fact = infer_new_fact(selected) # 'Остались нежится на солнце: 36\\xa0–\\xa024\\xa0= 12\\xa0пингвинов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько пингвинов осталось нежится на солнце?', 'Остались нежится на солнце: 36\\xa0–\\xa024\\xa0= 12\\xa0пингвинов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_234_a8e9df9d49", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: His girlfriend eats 6/2=3 tomatoes per day; int1 & sent4 -> int2: So together they eat 6+3=9 tomatoes a day; int2 & sent5 -> int3: That means they eat 9*7=63 tomatoes a day; int3 & sent5 -> int4: So he needs 63/3=21 tomato vines; int4 & sent5 -> int5: The answer is 21;", "textual_logical_units": {"1": "Стив решил есть больше помидоров", "2": "и в связи с этим захотел сам выращивать помидоры черри.", "3": "Он ест в два раза больше помидоров, чем его девушка.", "4": "Он ест по 6 помидоров в день.", "5": "Если одно растение может давать 3 помидора в неделю, сколько растений нужно Стиву?", "6": "Девушка Стива съедает: 6 / 2 = 3 помидора в день.", "7": "Значит, вместе они съедают: 6 + 3 = 9 помидоров в день.", "8": "Следовательно, в день им требуется 9 * 7 = 63 помидора.", "9": "Стиву нужно посадить: 63 / 3 = 21 куст помидора.", "10": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = [ 'Стив решил есть больше помидоров',\n  'и в связи с этим захотел сам выращивать помидоры черри.',\n  'Он ест в два раза больше помидоров, чем его девушка.',\n  'Он ест по 6\\xa0помидоров в день.']\nquestion = 'Если одно растение может давать 3\\xa0помидора в неделю, сколько растений нужно Стиву?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он ест в два раза больше помидоров, чем его девушка.', 'Он ест по 6\\xa0помидоров в день.']\nnew_fact = infer_new_fact(selected) # 'Девушка Стива съедает: 6\\xa0/\\xa02\\xa0= 3\\xa0помидора в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он ест по 6\\xa0помидоров в день.', 'Девушка Стива съедает: 6\\xa0/\\xa02\\xa0= 3\\xa0помидора в день.']\nnew_fact = infer_new_fact(selected) # 'Значит, вместе они съедают: 6\\xa0+\\xa03\\xa0= 9\\xa0помидоров в день.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одно растение может давать 3\\xa0помидора в неделю, сколько растений нужно Стиву?', 'Значит, вместе они съедают: 6\\xa0+\\xa03\\xa0= 9\\xa0помидоров в день.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в день им требуется 9\\xa0*\\xa07\\xa0= 63\\xa0помидора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одно растение может давать 3\\xa0помидора в неделю, сколько растений нужно Стиву?', 'Следовательно, в день им требуется 9\\xa0*\\xa07\\xa0= 63\\xa0помидора.']\nnew_fact = infer_new_fact(selected) # 'Стиву нужно посадить: 63\\xa0/\\xa03\\xa0= 21\\xa0куст помидора.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одно растение может давать 3\\xa0помидора в неделю, сколько растений нужно Стиву?', 'Стиву нужно посадить: 63\\xa0/\\xa03\\xa0= 21\\xa0куст помидора.']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_235_ab136ec39d", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: John's 20 friends each need 4 slices, so that means 4*20= 80 slices are needed; int1 & sent4 -> int2: Each pizza has 8 slices, so to get 80 slices in total 80/8= 10 pizzas are needed; int2 & sent5 -> int3: The answer is 10;", "textual_logical_units": {"1": "Джон хочет заказать пиццу, чтобы угостить друзей.", "2": "У него 20 друзей,", "3": "и Джон хочет, чтобы каждому досталось по 4 куска.", "4": "Пиццу продают только нарезанной на 8 кусков.", "5": "Сколько пицц нужно заказать Джону?", "6": "Каждому из 20 друзей Джона нужно по 4 куска, то есть всего потребуется 4 * 20 = 80 кусков.", "7": "Каждая пицца состоит из 8 кусков, поэтому, чтобы получить 80 кусков, нужно заказать 80 / 8 = 10 пицц.", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джон хочет заказать пиццу, чтобы угостить друзей.',\n  'У него 20\\xa0друзей,',\n  'и Джон хочет, чтобы каждому досталось по 4\\xa0куска.',\n  'Пиццу продают только нарезанной на 8\\xa0кусков.']\nquestion = 'Сколько пицц нужно заказать Джону?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У него 20\\xa0друзей,', 'и Джон хочет, чтобы каждому досталось по 4\\xa0куска.']\nnew_fact = infer_new_fact(selected) # 'Каждому из 20\\xa0друзей Джона нужно по 4\\xa0куска, то есть всего потребуется 4\\xa0*\\xa020\\xa0= 80\\xa0кусков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пиццу продают только нарезанной на 8\\xa0кусков.', 'Каждому из 20\\xa0друзей Джона нужно по 4\\xa0куска, то есть всего потребуется 4\\xa0*\\xa020\\xa0= 80\\xa0кусков.']\nnew_fact = infer_new_fact(selected) # 'Каждая пицца состоит из 8\\xa0кусков, поэтому, чтобы получить 80\\xa0кусков, нужно заказать 80\\xa0/\\xa08\\xa0= 10\\xa0пицц.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько пицц нужно заказать Джону?', 'Каждая пицца состоит из 8\\xa0кусков, поэтому, чтобы получить 80\\xa0кусков, нужно заказать 80\\xa0/\\xa08\\xa0= 10\\xa0пицц.']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_236_efdf40916f", "context": "", "options": [], "answer": "31", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: He can make 5 pens when the 25 run low because 25 / 5 = 5; int1 -> int2: He can make 1 pen when the ink in the re-made pens runs low because 5 / 1 = 5; int1 & int2 -> int3: He will have 31 total pens because 25 + 5 + 1 = 31; int3 & sent5 -> int4: The answer is 31;", "textual_logical_units": {"1": "Раму требуется много стержней для ручек.", "2": "Он обнаружил, что можно сэкономить деньги, собрав чернила из пяти закончившихся стержней в один, что позволяет получить полноценный стержень.", "3": "Если он купит 25 стрежней и", "4": "использует их для изготовления новых стержней, когда чернила будут заканчиваться,", "5": "сколько стержней он в итоге получит?", "6": "Когда у него будут заканчиваться 25 стержней, он сможет сделать из них еще 5 новых, потому что 25 / 5 = 5.", "7": "Когда и в этих стержнях будут заканчиваться чернила, он сможет получить еще один полноценный стержень, так как 5 / 1 = 5.", "8": "Всего он получит 31 стержень: 25 + 5 + 1 = 31.", "9": "The answer is 31"}, "human_translated": true, "code_input": "####\nfacts = [ 'Раму требуется много стержней для ручек.',\n  'Он обнаружил, что можно сэкономить деньги, собрав чернила из пяти закончившихся стержней в один, что позволяет получить полноценный стержень.',\n  'Если он купит 25\\xa0стрежней и',\n  'использует их для изготовления новых стержней, когда чернила будут заканчиваться,']\nquestion = 'сколько стержней он в итоге получит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он обнаружил, что можно сэкономить деньги, собрав чернила из пяти закончившихся стержней в один, что позволяет получить полноценный стержень.', 'Если он купит 25\\xa0стрежней и', 'использует их для изготовления новых стержней, когда чернила будут заканчиваться,']\nnew_fact = infer_new_fact(selected) # 'Когда у него будут заканчиваться 25\\xa0стержней, он сможет сделать из них еще\\xa05\\xa0новых, потому что 25\\xa0/\\xa05\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда у него будут заканчиваться 25\\xa0стержней, он сможет сделать из них еще\\xa05\\xa0новых, потому что 25\\xa0/\\xa05\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'Когда и в этих стержнях будут заканчиваться чернила, он сможет получить еще один полноценный стержень, так как 5\\xa0/\\xa01\\xa0=\\xa05.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда у него будут заканчиваться 25\\xa0стержней, он сможет сделать из них еще\\xa05\\xa0новых, потому что 25\\xa0/\\xa05\\xa0=\\xa05.', 'Когда и в этих стержнях будут заканчиваться чернила, он сможет получить еще один полноценный стержень, так как 5\\xa0/\\xa01\\xa0=\\xa05.']\nnew_fact = infer_new_fact(selected) # 'Всего он получит 31\\xa0стержень: 25\\xa0+\\xa05\\xa0+\\xa01\\xa0=\\xa031.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько стержней он в итоге получит?', 'Всего он получит 31\\xa0стержень: 25\\xa0+\\xa05\\xa0+\\xa01\\xa0=\\xa031.']\nnew_fact = infer_new_fact(selected) # 'The answer is 31'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '31'"}
{"id": "GSM8K_237_dd4ed51c58", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Johnny invested twenty and ten dollars for a total of 20+10=30 dollars invested; int1 & sent4 -> int2: Johnny tripled this amount of money over the year, for a total of 30*=90 dollars; int2 & sent5 -> int3: The answer is 90;", "textual_logical_units": {"1": "Джонни получил пособие в размере 20 долларов", "2": "и добавил к нему еще 10 долларов.", "3": "Затем он вложил эти деньги,", "4": "и за год сумма утроилась.", "5": "Сколько денег он получил через год?", "6": "Джонни вложил двадцать и десять долларов, то есть всего: 20 + 10 = 30 долларов.", "7": "За год эта сумма утроилась, следовательно, Джонни получил 30 * 3 = 90 долларов.", "8": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = ['Джонни получил пособие в размере 20\\xa0долларов', 'и добавил к нему еще 10\\xa0долларов.', 'Затем он вложил эти деньги,', 'и за год сумма утроилась.']\nquestion = 'Сколько денег он получил через год?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джонни получил пособие в размере 20\\xa0долларов', 'и добавил к нему еще 10\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Джонни вложил двадцать и десять долларов, то есть всего: 20\\xa0+\\xa010\\xa0= 30\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и за год сумма утроилась.', 'Джонни вложил двадцать и десять долларов, то есть всего: 20\\xa0+\\xa010\\xa0= 30\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'За год эта сумма утроилась, следовательно, Джонни получил 30\\xa0*\\xa03\\xa0= 90\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег он получил через год?', 'За год эта сумма утроилась, следовательно, Джонни получил 30\\xa0*\\xa03\\xa0= 90\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_238_adba7edfd8", "context": "", "options": [], "answer": "68", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Joan is 20 + 5 = 25 years old.; int1 & sent1 -> int2: Mary is 25 – 2 = 23 years old.; int1 & int2 & sent3 & sent4 -> int3: Therefore, the sum of their ages is 20 + 25 + 23 = 68.; int3 & sent4 -> int4: The answer is 68;", "textual_logical_units": {"1": "Мэри младше Джоан на два года,", "2": "а Джоан на пять лет старше Джессы.", "3": "Если Джессе 20 лет,", "4": "каков в сумме возраст всех трех девушек?", "5": "Возраст Джоан: 20 + 5 = 25 лет.", "6": "Возраст Мэри: 25 – 2 = 23 года.", "7": "Следовательно, в сумме их возраст равен: 20 + 25 + 23 = 68 лет.", "8": "The answer is 68"}, "human_translated": true, "code_input": "####\nfacts = ['Мэри младше Джоан на два года,', 'а Джоан на пять лет старше Джессы.', 'Если Джессе 20\\xa0лет,']\nquestion = 'каков в сумме возраст всех трех девушек?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['а Джоан на пять лет старше Джессы.', 'Если Джессе 20\\xa0лет,']\nnew_fact = infer_new_fact(selected) # 'Возраст Джоан: 20\\xa0+\\xa05\\xa0= 25\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мэри младше Джоан на два года,', 'Возраст Джоан: 20\\xa0+\\xa05\\xa0= 25\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Возраст Мэри: 25\\xa0–\\xa02\\xa0= 23\\xa0года.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Джессе 20\\xa0лет,', 'каков в сумме возраст всех трех девушек?', 'Возраст Джоан: 20\\xa0+\\xa05\\xa0= 25\\xa0лет.', 'Возраст Мэри: 25\\xa0–\\xa02\\xa0= 23\\xa0года.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в сумме их возраст равен: 20\\xa0+\\xa025\\xa0+\\xa023\\xa0=\\xa068\\xa0лет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каков в сумме возраст всех трех девушек?', 'Следовательно, в сумме их возраст равен: 20\\xa0+\\xa025\\xa0+\\xa023\\xa0=\\xa068\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'The answer is 68'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '68'"}
{"id": "GSM8K_239_ffde322075", "context": "", "options": [], "answer": "280", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: The number of students who went out through exit A is 30/100%1000 = 300 students.; int1 -> int2: The number of students who didn't use exit A is 1000-300 = 700; int2 & sent5 -> int3: 3/5 of the students used exit B, a total of 3/5*700 = 420 students.; sent1 & sent6 -> int4: If 420 of the remaining students who didn't use exit A used exit B, the number who used exit C is 700-420 = 280 students.; int4 & sent7 -> int5: The answer is 280;", "textual_logical_units": {"1": "В школьном зале собрались 1000 учеников.", "2": "Зал имеет 3 входа (A, B", "3": "и C), которые служат и выходами.", "4": "После собрания 30 % учеников покинули школу через выход A,", "5": "3/5 оставшихся учеников ушли через выход B,", "6": "а остальные воспользовались выходом C.", "7": "Сколько студентов вышли через выход C?", "8": "Через выход A ушли: 30 / 100 % * 1000 = 300 учеников.", "9": "Количество учеников, которые не воспользовались выходом A, равно: 1000 – 300 = 700.", "10": "3/5 оставшихся учеников воспользовались выходом B, то есть 3/5 * 700 = 420 учеников.", "11": "420 человек, не воспользовавшихся выходом A, ушли через выход B, значит, через выход C здание покинули: 700 – 420 = 280 учеников.", "12": "The answer is 280"}, "human_translated": true, "code_input": "####\nfacts = [ 'В школьном зале собрались 1000\\xa0учеников.',\n  'Зал имеет 3\\xa0входа (A, B',\n  'и C), которые служат и выходами.',\n  'После собрания 30\\xa0% учеников покинули школу через выход\\xa0A,',\n  '3/5\\xa0оставшихся учеников ушли через выход\\xa0B,',\n  'а остальные воспользовались выходом\\xa0C.']\nquestion = 'Сколько студентов вышли через выход\\xa0C?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В школьном зале собрались 1000\\xa0учеников.', 'После собрания 30\\xa0% учеников покинули школу через выход\\xa0A,']\nnew_fact = infer_new_fact(selected) # 'Через выход A ушли: 30\\xa0/\\xa0100\\xa0%\\xa0*\\xa01000\\xa0= 300\\xa0учеников.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через выход A ушли: 30\\xa0/\\xa0100\\xa0%\\xa0*\\xa01000\\xa0= 300\\xa0учеников.']\nnew_fact = infer_new_fact(selected) # 'Количество учеников, которые не воспользовались выходом\\xa0A, равно: 1000\\xa0–\\xa0300\\xa0=\\xa0700.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3/5\\xa0оставшихся учеников ушли через выход\\xa0B,', 'Количество учеников, которые не воспользовались выходом\\xa0A, равно: 1000\\xa0–\\xa0300\\xa0=\\xa0700.']\nnew_fact = infer_new_fact(selected) # '3/5\\xa0оставшихся учеников воспользовались выходом\\xa0B, то есть 3/5\\xa0*\\xa0700\\xa0= 420\\xa0учеников.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В школьном зале собрались 1000\\xa0учеников.', 'а остальные воспользовались выходом\\xa0C.']\nnew_fact = infer_new_fact(selected) # '420\\xa0человек, не воспользовавшихся выходом\\xa0A, ушли через выход\\xa0B, значит, через выход\\xa0C здание покинули: 700\\xa0–\\xa0420\\xa0= 280\\xa0учеников.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько студентов вышли через выход\\xa0C?', '420\\xa0человек, не воспользовавшихся выходом\\xa0A, ушли через выход\\xa0B, значит, через выход\\xa0C здание покинули: 700\\xa0–\\xa0420\\xa0= 280\\xa0учеников.']\nnew_fact = infer_new_fact(selected) # 'The answer is 280'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '280'"}
{"id": "GSM8K_240_270aee8e9a", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Robert has 54/2 = 27 candies.; int1 & sent1 -> int2: James has 27+6 = 33 candies.; int2 & sent3 & sent4 -> int3: John has 54-33= 21 more candies than James.; int3 & sent4 -> int4: The answer is 21;", "textual_logical_units": {"1": "У Джеймса на 6 конфет больше, чем у Роберта.", "2": "У Джона в два раза больше конфет, чем у Роберта.", "3": "Если у Джона 54 конфеты,", "4": "на сколько конфет у Джона больше, чем у Джеймса?", "5": "У Роберта 54 / 2 = 27 конфет.", "6": "У Джеймса 27 + 6 = 33 конфеты.", "7": "У Джона на: 54 – 33 = 21 конфету больше, чем у Джеймса.", "8": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = ['У Джеймса на 6\\xa0конфет больше, чем у Роберта.', 'У Джона в два раза больше конфет, чем у Роберта.', 'Если у Джона 54\\xa0конфеты,']\nquestion = 'на сколько конфет у Джона больше, чем у Джеймса?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Джона в два раза больше конфет, чем у Роберта.', 'Если у Джона 54\\xa0конфеты,']\nnew_fact = infer_new_fact(selected) # 'У Роберта 54\\xa0/\\xa02\\xa0= 27\\xa0конфет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Джеймса на 6\\xa0конфет больше, чем у Роберта.', 'У Роберта 54\\xa0/\\xa02\\xa0= 27\\xa0конфет.']\nnew_fact = infer_new_fact(selected) # 'У Джеймса 27\\xa0+\\xa06\\xa0= 33\\xa0конфеты.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если у Джона 54\\xa0конфеты,', 'на сколько конфет у Джона больше, чем у Джеймса?', 'У Джеймса 27\\xa0+\\xa06\\xa0= 33\\xa0конфеты.']\nnew_fact = infer_new_fact(selected) # 'У Джона на: 54\\xa0–\\xa033\\xa0= 21\\xa0конфету больше, чем у Джеймса.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на сколько конфет у Джона больше, чем у Джеймса?', 'У Джона на: 54\\xa0–\\xa033\\xa0= 21\\xa0конфету больше, чем у Джеймса.']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_241_11576e8b3a", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 2 + 1 = 3 books in total.; int1 & sent3 -> int2: Dolly and Pandora both read all 3 books, so 3 books/person x 2 people = 6 books total; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "У Долли две книги,", "2": "а у Пандоры — одна.", "3": "Если Долли и Пандора прочитают свои книги и книги друг друга,", "4": "сколько книг в итоге они прочитают вдвоем?", "5": "Всего у девочек 2 + 1 = 3 книги.", "6": "И Долли, и Пандора прочитают все 3 книги, следовательно, 3 книги на человека x 2 человека = итого 6 книг.", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['У Долли две книги,', 'а у Пандоры\\xa0— одна.', 'Если Долли и Пандора прочитают свои книги и книги друг друга,']\nquestion = 'сколько книг в итоге они прочитают вдвоем?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Долли две книги,', 'а у Пандоры\\xa0— одна.']\nnew_fact = infer_new_fact(selected) # 'Всего у девочек 2\\xa0+\\xa01\\xa0= 3\\xa0книги.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Долли и Пандора прочитают свои книги и книги друг друга,', 'Всего у девочек 2\\xa0+\\xa01\\xa0= 3\\xa0книги.']\nnew_fact = infer_new_fact(selected) # 'И Долли, и Пандора прочитают все 3\\xa0книги, следовательно, 3\\xa0книги на человека\\xa0x 2\\xa0человека\\xa0= итого 6\\xa0книг.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько книг в итоге они прочитают вдвоем?', 'И Долли, и Пандора прочитают все 3\\xa0книги, следовательно, 3\\xa0книги на человека\\xa0x 2\\xa0человека\\xa0= итого 6\\xa0книг.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_242_6407ca527a", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He is penpals with 5-2=3 people; int1 & sent3 -> int2: Thus he gets 3*2=6 letters a week; int2 & sent3 & sent4 -> int3: So he writes 6*5=30 pages a week; int3 & sent5 -> int4: So he writes for 30*6=180 minutes a week; int4 -> int5: So he writes 180/60=3 hours a week; int5 & sent6 -> int6: The answer is 3;", "textual_logical_units": {"1": "Майк переписывался с пятью людьми,", "2": "но двоим потом перестал писать.", "3": "Каждый из оставшихся друзей по переписке присылает в неделю по 2 письма на 5 страницах.", "4": "Майк поступает так же.", "5": "Чтобы написать одну страницу, ему требуется 6 минут.", "6": "Сколько часов в неделю он тратит на написание писем?", "7": "У Майка 5 – 2 = 3 друга по переписке.", "8": "От них он получает: 3 * 2 = 6 писем в неделю.", "9": "Поэтому он пишет: 6 * 5 = 30 страниц в неделю.", "10": "На это ему требуется: 30 * 6 = 180 минут в неделю.", "11": "В часах это будет: 180 / 60 = 3 часа в неделю.", "12": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = [ 'Майк переписывался с пятью людьми,',\n  'но двоим потом перестал писать.',\n  'Каждый из оставшихся друзей по переписке присылает в неделю по 2\\xa0письма на 5\\xa0страницах.',\n  'Майк поступает так же.',\n  'Чтобы написать одну страницу, ему требуется 6\\xa0минут.']\nquestion = 'Сколько часов в неделю он тратит на написание писем?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Майк переписывался с пятью людьми,', 'но двоим потом перестал писать.']\nnew_fact = infer_new_fact(selected) # 'У Майка 5\\xa0–\\xa02\\xa0= 3\\xa0друга по переписке.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый из оставшихся друзей по переписке присылает в неделю по 2\\xa0письма на 5\\xa0страницах.', 'У Майка 5\\xa0–\\xa02\\xa0= 3\\xa0друга по переписке.']\nnew_fact = infer_new_fact(selected) # 'От них он получает: 3\\xa0*\\xa02\\xa0= 6\\xa0писем в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый из оставшихся друзей по переписке присылает в неделю по 2\\xa0письма на 5\\xa0страницах.', 'Майк поступает так же.', 'От них он получает: 3\\xa0*\\xa02\\xa0= 6\\xa0писем в неделю.']\nnew_fact = infer_new_fact(selected) # 'Поэтому он пишет: 6\\xa0*\\xa05\\xa0= 30\\xa0страниц в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы написать одну страницу, ему требуется 6\\xa0минут.', 'Поэтому он пишет: 6\\xa0*\\xa05\\xa0= 30\\xa0страниц в неделю.']\nnew_fact = infer_new_fact(selected) # 'На это ему требуется: 30\\xa0*\\xa06\\xa0= 180\\xa0минут в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На это ему требуется: 30\\xa0*\\xa06\\xa0= 180\\xa0минут в неделю.']\nnew_fact = infer_new_fact(selected) # 'В часах это будет: 180\\xa0/\\xa060\\xa0= 3\\xa0часа в неделю.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов в неделю он тратит на написание писем?', 'В часах это будет: 180\\xa0/\\xa060\\xa0= 3\\xa0часа в неделю.']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_243_d43ec45285", "context": "", "options": [], "answer": "250", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: First find the total time Jason spends calling his boss: 15 minutes/call * 30 calls/month = 450 minutes; int1 & sent1 & sent3 -> int2: Then subtract the minutes Jason has already used to find how many he has left: 1000 minutes - 450 minutes - 300 minutes = 250 minutes; int2 & sent4 -> int3: The answer is 250;", "textual_logical_units": {"1": "Тарифный план Джейсона предоставляет ему 1000 минут на звонки в месяц.", "2": "Каждый день он звонит своему начальнику и разговаривает с ним по 15 минут,", "3": "кроме того, в этом месяце он потратил еще 300 минут на другие звонки.", "4": "Сколько минут для звонков осталось у Джейсона, если в этом месяце 30 дней?", "5": "Сначала нужно узнать, сколько всего минут Джейсон тратит на разговоры с начальником: 15 минут на звонок * 30 звонков в месяц = 450 минут.", "6": "Чтобы узнать, сколько минут звонков осталось у Джейсона, нужно вычесть минуты, которые он уже использовал: 1000 минут – 450 минут – 300 минут = 250 минут.", "7": "The answer is 250"}, "human_translated": true, "code_input": "####\nfacts = [ 'Тарифный план Джейсона предоставляет ему 1000\\xa0минут на звонки в месяц.',\n  'Каждый день он звонит своему начальнику и разговаривает с ним по 15\\xa0минут,',\n  'кроме того, в этом месяце он потратил еще 300\\xa0минут на другие звонки.']\nquestion = 'Сколько минут для звонков осталось у Джейсона, если в этом месяце 30\\xa0дней?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый день он звонит своему начальнику и разговаривает с ним по 15\\xa0минут,', 'Сколько минут для звонков осталось у Джейсона, если в этом месяце 30\\xa0дней?']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько всего минут Джейсон тратит на разговоры с начальником: 15\\xa0минут на звонок\\xa0*\\xa030\\xa0звонков в месяц\\xa0= 450\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тарифный план Джейсона предоставляет ему 1000\\xa0минут на звонки в месяц.', 'кроме того, в этом месяце он потратил еще 300\\xa0минут на другие звонки.', 'Сначала нужно узнать, сколько всего минут Джейсон тратит на разговоры с начальником: 15\\xa0минут на звонок\\xa0*\\xa030\\xa0звонков в месяц\\xa0= 450\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Чтобы узнать, сколько минут звонков осталось у Джейсона, нужно вычесть минуты, которые он уже использовал: 1000\\xa0минут\\xa0– 450\\xa0минут\\xa0– 300\\xa0минут\\xa0= 250\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько минут для звонков осталось у Джейсона, если в этом месяце 30\\xa0дней?', 'Чтобы узнать, сколько минут звонков осталось у Джейсона, нужно вычесть минуты, которые он уже использовал: 1000\\xa0минут\\xa0– 450\\xa0минут\\xa0– 300\\xa0минут\\xa0= 250\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is 250'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '250'"}
{"id": "GSM8K_244_6be47fa721", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [5, 8], "consequent": 10}, {"antecedents": [6, 8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Griffin had 24 french fries, but Kyle took 5 of them.; int1 & sent3 -> int2: Billy took twice as many as Kyle, removing 2*5=10 fries.; int1 & sent5 -> int3: Colby took 3 less than the number of fries that Kyle had taken, removing 5-3=2 fries.; int1 & int2 & int3 & sent6 -> int4: If we let X be the number of fries given to Griffin by Ginger, then 24-5-10-2+x=27; int4 -> int5: Thus, Ginger had given Griffin x=20 fries; int5 & sent7 -> int6: The answer is 20;", "textual_logical_units": {"1": "Гриффин купил пакет картофеля фри, в котором было 24 ломтика.", "2": "5 из них взял Кайл.", "3": "Билли взял в два раза больше ломтиков, чем Кайл.", "4": "Джинджер дала Гриффину горсть картофеля фри, но потом", "5": "Колби взял у Гриффина на 3 ломтика меньше, чем Кайл.", "6": "Если в итоге Гриффину досталось 27 ломтиков,", "7": "сколько картофеля ему дала Джинджер?", "8": "Гриффин купил пакет с 24 ломтиками картофеля, но 5 из них съел Кайл.", "9": "Билли съел в два раза больше, чем Кайл, то есть 2 * 5 = 10 ломтиков.", "10": "Колби съел на 3 ломтика меньше, чем Кайл, или 5 – 3 = 2 ломтика.", "11": "Если взять картофель, подаренный Джинджер, за x, то 24 – 5 – 10 – 2 + x = 27.", "12": "Следовательно, Джинджер дала Гриффину x = 20 ломтиков картофеля фри.", "13": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'Гриффин купил пакет картофеля фри, в котором было 24 ломтика.',\n  '5\\xa0из них взял Кайл.',\n  'Билли взял в два раза больше ломтиков, чем Кайл.',\n  'Джинджер дала Гриффину горсть картофеля фри, но потом',\n  'Колби взял у Гриффина на 3\\xa0ломтика меньше, чем Кайл.',\n  'Если в итоге Гриффину досталось 27\\xa0ломтиков,']\nquestion = 'сколько картофеля ему дала Джинджер?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Гриффин купил пакет картофеля фри, в котором было 24 ломтика.', '5\\xa0из них взял Кайл.']\nnew_fact = infer_new_fact(selected) # 'Гриффин купил пакет с 24\\xa0ломтиками картофеля, но 5\\xa0из них съел Кайл.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Билли взял в два раза больше ломтиков, чем Кайл.', 'Гриффин купил пакет с 24\\xa0ломтиками картофеля, но 5\\xa0из них съел Кайл.']\nnew_fact = infer_new_fact(selected) # 'Билли съел в два раза больше, чем Кайл, то есть 2\\xa0*\\xa05\\xa0= 10\\xa0ломтиков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Колби взял у Гриффина на 3\\xa0ломтика меньше, чем Кайл.', 'Гриффин купил пакет с 24\\xa0ломтиками картофеля, но 5\\xa0из них съел Кайл.']\nnew_fact = infer_new_fact(selected) # 'Колби съел на 3\\xa0ломтика меньше, чем Кайл, или 5\\xa0–\\xa03\\xa0= 2\\xa0ломтика.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в итоге Гриффину досталось 27\\xa0ломтиков,', 'Гриффин купил пакет с 24\\xa0ломтиками картофеля, но 5\\xa0из них съел Кайл.', 'Билли съел в два раза больше, чем Кайл, то есть 2\\xa0*\\xa05\\xa0= 10\\xa0ломтиков.', 'Колби съел на 3\\xa0ломтика меньше, чем Кайл, или 5\\xa0–\\xa03\\xa0= 2\\xa0ломтика.']\nnew_fact = infer_new_fact(selected) # 'Если взять картофель, подаренный Джинджер, за x, то 24\\xa0–\\xa05\\xa0–\\xa010\\xa0–\\xa02\\xa0+\\xa0x\\xa0=\\xa027.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если взять картофель, подаренный Джинджер, за x, то 24\\xa0–\\xa05\\xa0–\\xa010\\xa0–\\xa02\\xa0+\\xa0x\\xa0=\\xa027.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, Джинджер дала Гриффину x\\xa0= 20\\xa0ломтиков картофеля фри.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько картофеля ему дала Джинджер?', 'Следовательно, Джинджер дала Гриффину x\\xa0= 20\\xa0ломтиков картофеля фри.']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_245_6805733f9a", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The difference between the number of snails is 32 - 4 = 28 snails.; int1 & sent3 -> int2: There are 28/2 = 14 fish in both aquariums.; int2 & sent4 -> int3: There are 14/2 = 7 fish in each aquarium.; int3 & sent5 -> int4: The answer is 7;", "textual_logical_units": {"1": "В одном аквариуме живут 4 улитки,", "2": "а в другом — 32 улитки.", "3": "Разница между количеством улиток в двух аквариумах в два раза превышает количество рыб в обоих аквариумах.", "4": "Если в обоих аквариумах одинаковое количество рыб,", "5": "сколько рыб в каждом аквариуме?", "6": "Разница в улитках равна: 32 – 4 = 28 улиток.", "7": "В обоих аквариумах: 28 / 2 = 14 рыб.", "8": "В каждом аквариуме: 14 / 2 = 7 рыб.", "9": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = [ 'В одном аквариуме живут 4\\xa0улитки,',\n  'а в другом\\xa0— 32\\xa0улитки.',\n  'Разница между количеством улиток в двух аквариумах в два раза превышает количество рыб в обоих аквариумах.',\n  'Если в обоих аквариумах одинаковое количество рыб,']\nquestion = 'сколько рыб в каждом аквариуме?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В одном аквариуме живут 4\\xa0улитки,', 'а в другом\\xa0— 32\\xa0улитки.']\nnew_fact = infer_new_fact(selected) # 'Разница в улитках равна: 32\\xa0–\\xa04\\xa0= 28\\xa0улиток.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Разница между количеством улиток в двух аквариумах в два раза превышает количество рыб в обоих аквариумах.', 'Разница в улитках равна: 32\\xa0–\\xa04\\xa0= 28\\xa0улиток.']\nnew_fact = infer_new_fact(selected) # 'В обоих аквариумах: 28\\xa0/\\xa02\\xa0= 14\\xa0рыб.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в обоих аквариумах одинаковое количество рыб,', 'В обоих аквариумах: 28\\xa0/\\xa02\\xa0= 14\\xa0рыб.']\nnew_fact = infer_new_fact(selected) # 'В каждом аквариуме: 14\\xa0/\\xa02\\xa0= 7\\xa0рыб.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько рыб в каждом аквариуме?', 'В каждом аквариуме: 14\\xa0/\\xa02\\xa0= 7\\xa0рыб.']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_246_5ad129280b", "context": "", "options": [], "answer": "27000", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Jean pays 250*6=$1500 a day; int1 & sent4 -> int2: So he pays 1500*4=$6000 a week; int2 & sent5 -> int3: So the work cost 6000*5=$30,000; sent1 & sent6 -> int4: They give a discount of 30,000*.1=$3000; int3 & int4 -> int5: So the total cost paid is 30,000-3000=$27,000; int5 & sent7 -> int6: The answer is 27000;", "textual_logical_units": {"1": "Визажист, который делает макияж Джин, берет 250 долларов в час.", "2": "Джин нужен был очень дорогой макияж для фильма, в котором она снималась.", "3": "Чтобы его нанести, требовалось 6 часов,", "4": "и ей приходилось делать его 4 раза в неделю.", "5": "Съемки фильма заняли 5 недель.", "6": "По окончании съемок визажист предоставил Джин 10 % скидки за объем проделанной работы.", "7": "Сколько Джин заплатила визажисту?", "8": "За один макияж Джин платила 250 * 6 = 1500 долларов.", "9": "В неделю она тратила на макияж 1500 * 4 = 6000 долларов.", "10": "Следовательно, работа визажиста стоила 6000 * 5 = 30 000 долларов.", "11": "Он дал Джин скидку: 30 000 * 0,1 = 3000 долларов.", "12": "Таким образом, в сумме Джин заплатила визажисту 30 000 – 3000 = 27 000 долларов.", "13": "The answer is 27000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Визажист, который делает макияж Джин, берет 250\\xa0долларов в час.',\n  'Джин нужен был очень дорогой макияж для фильма, в котором она снималась.',\n  'Чтобы его нанести, требовалось 6\\xa0часов,',\n  'и ей приходилось делать его 4\\xa0раза в неделю.',\n  'Съемки фильма заняли 5\\xa0недель.',\n  'По окончании съемок визажист предоставил Джин 10\\xa0% скидки за объем проделанной работы.']\nquestion = 'Сколько Джин заплатила визажисту?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Визажист, который делает макияж Джин, берет 250\\xa0долларов в час.', 'Чтобы его нанести, требовалось 6\\xa0часов,']\nnew_fact = infer_new_fact(selected) # 'За один макияж Джин платила 250\\xa0*\\xa06\\xa0= 1500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и ей приходилось делать его 4\\xa0раза в неделю.', 'За один макияж Джин платила 250\\xa0*\\xa06\\xa0= 1500\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'В неделю она тратила на макияж 1500\\xa0*\\xa04\\xa0= 6000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Съемки фильма заняли 5\\xa0недель.', 'В неделю она тратила на макияж 1500\\xa0*\\xa04\\xa0= 6000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, работа визажиста стоила 6000\\xa0*\\xa05\\xa0= 30\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Визажист, который делает макияж Джин, берет 250\\xa0долларов в час.', 'По окончании съемок визажист предоставил Джин 10\\xa0% скидки за объем проделанной работы.']\nnew_fact = infer_new_fact(selected) # 'Он дал Джин скидку: 30\\xa0000\\xa0*\\xa00,1\\xa0= 3000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, работа визажиста стоила 6000\\xa0*\\xa05\\xa0= 30\\xa0000\\xa0долларов.', 'Он дал Джин скидку: 30\\xa0000\\xa0*\\xa00,1\\xa0= 3000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, в сумме Джин заплатила визажисту 30\\xa0000\\xa0–\\xa03000\\xa0= 27\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько Джин заплатила визажисту?', 'Таким образом, в сумме Джин заплатила визажисту 30\\xa0000\\xa0–\\xa03000\\xa0= 27\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 27000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '27000'"}
{"id": "GSM8K_247_5e46618d7e", "context": "", "options": [], "answer": "32", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Isabelle spent 12 + 43 + 15 + 4 + 22 = $96 on party supplies.; int1 & sent4 -> int2: The cost was evenly split 3 ways, so each person paid 96 / 3 = $32.; int2 & sent5 -> int3: The answer is 32;", "textual_logical_units": {"1": "Изабель купила все необходимое для вечеринки по случаю дня рождения младшей сестры.", "2": "Она потратила 12 долларов на ингредиенты для торта, 43 доллара на подарок для сестры, 15 долларов на украшения, 4 доллара на приглашения,", "3": "и 22 доллара на подарки для гостей.", "4": "Расходы она поделила поровну на троих с родителями.", "5": "Сколько долларов заплатил каждый из них?", "6": "Изабель потратила на подготовку праздника: 12 + 43 + 15 + 4 + 22 = 96 долларов.", "7": "Общую сумму разделили поровну на три части, поэтому каждый из троих заплатил: 96 / 3 = 32 доллара.", "8": "The answer is 32"}, "human_translated": true, "code_input": "####\nfacts = [ 'Изабель купила все необходимое для вечеринки по случаю дня рождения младшей сестры.',\n  'Она потратила 12\\xa0долларов на ингредиенты для торта, 43\\xa0доллара на подарок для сестры, 15\\xa0долларов на украшения, 4\\xa0доллара на приглашения,',\n  'и 22\\xa0доллара на подарки для гостей.',\n  'Расходы она поделила поровну на троих с родителями.']\nquestion = 'Сколько долларов заплатил каждый из них?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она потратила 12\\xa0долларов на ингредиенты для торта, 43\\xa0доллара на подарок для сестры, 15\\xa0долларов на украшения, 4\\xa0доллара на приглашения,', 'и 22\\xa0доллара на подарки для гостей.']\nnew_fact = infer_new_fact(selected) # 'Изабель потратила на подготовку праздника: 12\\xa0+\\xa043\\xa0+\\xa015\\xa0+\\xa04\\xa0+\\xa022\\xa0= 96\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расходы она поделила поровну на троих с родителями.', 'Изабель потратила на подготовку праздника: 12\\xa0+\\xa043\\xa0+\\xa015\\xa0+\\xa04\\xa0+\\xa022\\xa0= 96\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Общую сумму разделили поровну на три части, поэтому каждый из троих заплатил: 96\\xa0/\\xa03\\xa0= 32\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов заплатил каждый из них?', 'Общую сумму разделили поровну на три части, поэтому каждый из троих заплатил: 96\\xa0/\\xa03\\xa0= 32\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 32'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '32'"}
{"id": "GSM8K_248_fee350ec70", "context": "", "options": [], "answer": "300", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: A bag of onions cost $1.50 x 50 = $75.; int1 & sent1 -> int2: Therefore, the chef spent $75 x 4 = $300 for the four bags of onions.; int2 & sent4 -> int3: The answer is 300;", "textual_logical_units": {"1": "Шеф-повар купил 4 мешка лука.", "2": "Каждый мешок весит 50 фунтов.", "3": "Фунт лука стоит 1,50 доллара.", "4": "Сколько потратил шеф-повар?", "5": "Мешок лука стоит: 1,50 долларов х 50 = 75 долларов.", "6": "Следовательно, за четыре мешка лука шеф-повар заплатил: 75 x 4 = 300 долларов.", "7": "The answer is 300"}, "human_translated": true, "code_input": "####\nfacts = ['Шеф-повар купил 4\\xa0мешка лука.', 'Каждый мешок весит 50\\xa0фунтов.', 'Фунт лука стоит 1,50\\xa0доллара.']\nquestion = 'Сколько потратил шеф-повар?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый мешок весит 50\\xa0фунтов.', 'Фунт лука стоит 1,50\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Мешок лука стоит: 1,50\\xa0долларов\\xa0х\\xa050\\xa0= 75\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Шеф-повар купил 4\\xa0мешка лука.', 'Мешок лука стоит: 1,50\\xa0долларов\\xa0х\\xa050\\xa0= 75\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, за четыре мешка лука шеф-повар заплатил: 75\\xa0x\\xa04\\xa0= 300\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько потратил шеф-повар?', 'Следовательно, за четыре мешка лука шеф-повар заплатил: 75\\xa0x\\xa04\\xa0= 300\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 300'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '300'"}
{"id": "GSM8K_249_aa8699a929", "context": "", "options": [], "answer": "5600", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Sue’s Monday cookie intake is 4*5 = 20.; sent2 & sent3 -> int2: Sue’s Tuesday cookie intake is 2*13 = 26.; int1 & int2 -> int3: Total cookies Sue consumed is 20+26 = 46.; sent3 -> int4: Sue’s sister ate a total of 5+13 = 18 cookies.; int3 & int4 -> int5: Sue ate 46-18=28 more cookies.; sent1 & sent4 -> int6: Sue consumed 28*200=5,600 more calories.; int6 & sent5 -> int7: The answer is 5,600;", "textual_logical_units": {"1": "В понедельник Сью съела в 4 раза больше печенья, чем ее сестра.", "2": "Во вторник она съела в два раза больше печенья, чем сестра.", "3": "Сестра съела в понедельник 5 печений, а на следующий день — 13.", "4": "Если в 1 печенье 200 калорий,", "5": "на сколько Сью съела больше калорий, чем сестра?", "6": "В понедельник Сью съела: 4 * 5 = 20 печений.", "7": "Во вторник она съела: 2 * 13 = 26 печений.", "8": "Всего Сью съела: 20 + 26 = 46 печений.", "9": "Ее сестра съела в общей сложности: 5 + 13 = 18 печений.", "10": "Сью съела на: 46 – 18 = 28 печений больше.", "11": "Следовательно, Сью съела на 28 * 200 = 5600 калорий больше, чем сестра.", "12": "The answer is 5,600"}, "human_translated": true, "code_input": "####\nfacts = [ 'В понедельник Сью съела в 4\\xa0раза больше печенья, чем ее сестра.',\n  'Во вторник она съела в два раза больше печенья, чем сестра.',\n  'Сестра съела в понедельник 5\\xa0печений, а на следующий день\\xa0— 13.',\n  'Если в 1\\xa0печенье 200\\xa0калорий,']\nquestion = 'на сколько Сью съела больше калорий, чем сестра?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В понедельник Сью съела в 4\\xa0раза больше печенья, чем ее сестра.', 'Сестра съела в понедельник 5\\xa0печений, а на следующий день\\xa0— 13.']\nnew_fact = infer_new_fact(selected) # 'В понедельник Сью съела: 4\\xa0*\\xa05\\xa0= 20\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во вторник она съела в два раза больше печенья, чем сестра.', 'Сестра съела в понедельник 5\\xa0печений, а на следующий день\\xa0— 13.']\nnew_fact = infer_new_fact(selected) # 'Во вторник она съела: 2\\xa0*\\xa013\\xa0= 26\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник Сью съела: 4\\xa0*\\xa05\\xa0= 20\\xa0печений.', 'Во вторник она съела: 2\\xa0*\\xa013\\xa0= 26\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Всего Сью съела: 20\\xa0+\\xa026\\xa0= 46\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сестра съела в понедельник 5\\xa0печений, а на следующий день\\xa0— 13.']\nnew_fact = infer_new_fact(selected) # 'Ее сестра съела в общей сложности: 5\\xa0+\\xa013\\xa0= 18\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего Сью съела: 20\\xa0+\\xa026\\xa0= 46\\xa0печений.', 'Ее сестра съела в общей сложности: 5\\xa0+\\xa013\\xa0= 18\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Сью съела на: 46\\xa0–\\xa018\\xa0= 28 печений больше.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В понедельник Сью съела в 4\\xa0раза больше печенья, чем ее сестра.', 'Если в 1\\xa0печенье 200\\xa0калорий,']\nnew_fact = infer_new_fact(selected) # 'Следовательно, Сью съела на 28\\xa0*\\xa0200\\xa0= 5600\\xa0калорий больше, чем сестра.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на сколько Сью съела больше калорий, чем сестра?', 'Следовательно, Сью съела на 28\\xa0*\\xa0200\\xa0= 5600\\xa0калорий больше, чем сестра.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5,600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5600'"}
{"id": "GSM8K_250_19fab02dec", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The school has 60 students because 3 x 20 = 60; int1 & sent3 -> int2: The school has 30 girls because 60 x .5 = 30; int2 & sent4 & sent5 -> int3: The third class has 3 girls because 30 - 15 - 12 = 3; int3 & sent1 -> int4: The third class has 17 boys because 20 - 3 = 17; sent1 & sent6 -> int5: The answer is 17;", "textual_logical_units": {"1": "В школе 3 класса,", "2": "в каждом классе по 20 учеников.", "3": "Среди учеников школы 50 % мальчиков и 50 % девочек.", "4": "В первом классе 15 девочек.", "5": "Во втором классе 12 девочек.", "6": "Сколько мальчиков в третьем классе?", "7": "Всего в школе 60 учеников: 3 x 20 = 60.", "8": "Всего в школе 30 девочек: 60 х 0,5 = 30.", "9": "В третьем классе 3 девочки, потому что 30 – 15 – 12 = 3.", "10": "В третьем классе 17 мальчиков, так как 20 – 3 = 17.", "11": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = [ 'В школе 3\\xa0класса,',\n  'в каждом классе по 20\\xa0учеников.',\n  'Среди учеников школы 50\\xa0% мальчиков и 50\\xa0% девочек.',\n  'В первом классе 15\\xa0девочек.',\n  'Во втором классе 12\\xa0девочек.']\nquestion = 'Сколько мальчиков в третьем классе?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В школе 3\\xa0класса,', 'в каждом классе по 20\\xa0учеников.']\nnew_fact = infer_new_fact(selected) # 'Всего в школе 60\\xa0учеников: 3\\xa0x\\xa020\\xa0=\\xa060.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Среди учеников школы 50\\xa0% мальчиков и 50\\xa0% девочек.', 'Всего в школе 60\\xa0учеников: 3\\xa0x\\xa020\\xa0=\\xa060.']\nnew_fact = infer_new_fact(selected) # 'Всего в школе 30\\xa0девочек: 60\\xa0х\\xa00,5\\xa0=\\xa030.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В первом классе 15\\xa0девочек.', 'Во втором классе 12\\xa0девочек.', 'Всего в школе 30\\xa0девочек: 60\\xa0х\\xa00,5\\xa0=\\xa030.']\nnew_fact = infer_new_fact(selected) # 'В третьем классе 3\\xa0девочки, потому что 30\\xa0–\\xa015\\xa0–\\xa012\\xa0=\\xa03.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В школе 3\\xa0класса,', 'В третьем классе 3\\xa0девочки, потому что 30\\xa0–\\xa015\\xa0–\\xa012\\xa0=\\xa03.']\nnew_fact = infer_new_fact(selected) # 'В третьем классе 17\\xa0мальчиков, так как 20\\xa0–\\xa03\\xa0=\\xa017.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В школе 3\\xa0класса,', 'Сколько мальчиков в третьем классе?']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_251_a9450aed84", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Travis had 61 - 9 = 52 apps after deleting the ones he didn't use.; int1 & sent2 -> int2: After downloading some more he now has 52 + 18 = 70 apps on his tablet.; int2 & sent3 -> int3: The answer is 70;", "textual_logical_units": {"1": "На планшете у Трэвиса было установлено 61 приложение.", "2": "Он удалил 9 приложений, которыми перестал пользоваться, и загрузил еще 18.", "3": "Сколько приложений сейчас установлено на его планшете?", "4": "После удаления неиспользуемых приложений у Трэвиса осталось: 61 – 9 = 52 приложения.", "5": "Когда он загрузил новые приложения, на планшете стало: 52 + 18 = 70 приложений.", "6": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['На планшете у Трэвиса было установлено 61\\xa0приложение.', 'Он удалил 9\\xa0приложений, которыми перестал пользоваться, и загрузил еще\\xa018.']\nquestion = 'Сколько приложений сейчас установлено на его планшете?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На планшете у Трэвиса было установлено 61\\xa0приложение.', 'Он удалил 9\\xa0приложений, которыми перестал пользоваться, и загрузил еще\\xa018.']\nnew_fact = infer_new_fact(selected) # 'После удаления неиспользуемых приложений у Трэвиса осталось: 61\\xa0–\\xa09\\xa0= 52\\xa0приложения.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он удалил 9\\xa0приложений, которыми перестал пользоваться, и загрузил еще\\xa018.', 'После удаления неиспользуемых приложений у Трэвиса осталось: 61\\xa0–\\xa09\\xa0= 52\\xa0приложения.']\nnew_fact = infer_new_fact(selected) # 'Когда он загрузил новые приложения, на планшете стало: 52\\xa0+\\xa018\\xa0= 70\\xa0приложений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько приложений сейчас установлено на его планшете?', 'Когда он загрузил новые приложения, на планшете стало: 52\\xa0+\\xa018\\xa0= 70\\xa0приложений.']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_252_58daff43f0", "context": "", "options": [], "answer": "73", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: The total number of animals that Rick killed while hunting yesterday is 15+10 = 25; sent1 & sent3 -> int2: Today, Rick killed three fewer cougars than the previous night, a total of 15-3 = 12 cougars.; int2 & sent2 -> int3: He also killed three times as many wolves as cougars today, a total of 3*12 = 36 wolves.; int2 & int3 -> int4: Together, his hunt today yielded 36+12 = 48 animals.; int1 & int4 -> int5: In total, he has 48+25 = 73 animals from the hunt.; int5 & sent4 -> int6: The answer is 73;", "textual_logical_units": {"1": "Прошлой ночью Рик убил на охоте десять волков и 15 пум.", "2": "Сегодня Рик убил в три раза больше волков, чем пум и", "3": "на три пумы меньше, чем прошлой ночью.", "4": "Сколько животных убил Рик?", "5": "Всего во время вчерашней охоты Рик убил:15 + 10 = 25 животных.", "6": "Сегодня Рик убил на три пумы меньше, чем прошлой ночью, то есть 15 – 3 = 12 пум.", "7": "Кроме того, сегодня он убил в три раза больше волков, чем пум: 3 * 12 = 36 волков.", "8": "В общей сложности сегодня на охоте он добыл: 36 + 12 = 48 животных.", "9": "За все время охоты он добыл 48 + 25 = 73 животных.", "10": "The answer is 73"}, "human_translated": true, "code_input": "####\nfacts = ['Прошлой ночью Рик убил на охоте десять волков и 15\\xa0пум.', 'Сегодня Рик убил в три раза больше волков, чем пум и', 'на три пумы меньше, чем прошлой ночью.']\nquestion = 'Сколько животных убил Рик?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прошлой ночью Рик убил на охоте десять волков и 15\\xa0пум.']\nnew_fact = infer_new_fact(selected) # 'Всего во время вчерашней охоты Рик убил:15\\xa0+\\xa010\\xa0= 25\\xa0животных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прошлой ночью Рик убил на охоте десять волков и 15\\xa0пум.', 'на три пумы меньше, чем прошлой ночью.']\nnew_fact = infer_new_fact(selected) # 'Сегодня Рик убил на три пумы меньше, чем прошлой ночью, то есть 15\\xa0–\\xa03\\xa0= 12\\xa0пум.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сегодня Рик убил в три раза больше волков, чем пум и', 'Сегодня Рик убил на три пумы меньше, чем прошлой ночью, то есть 15\\xa0–\\xa03\\xa0= 12\\xa0пум.']\nnew_fact = infer_new_fact(selected) # 'Кроме того, сегодня он убил в три раза больше волков, чем пум: 3\\xa0*\\xa012\\xa0= 36\\xa0волков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сегодня Рик убил на три пумы меньше, чем прошлой ночью, то есть 15\\xa0–\\xa03\\xa0= 12\\xa0пум.', 'Кроме того, сегодня он убил в три раза больше волков, чем пум: 3\\xa0*\\xa012\\xa0= 36\\xa0волков.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности сегодня на охоте он добыл: 36\\xa0+\\xa012\\xa0= 48\\xa0животных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего во время вчерашней охоты Рик убил:15\\xa0+\\xa010\\xa0= 25\\xa0животных.', 'В общей сложности сегодня на охоте он добыл: 36\\xa0+\\xa012\\xa0= 48\\xa0животных.']\nnew_fact = infer_new_fact(selected) # 'За все время охоты он добыл 48\\xa0+\\xa025\\xa0= 73\\xa0животных.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько животных убил Рик?', 'За все время охоты он добыл 48\\xa0+\\xa025\\xa0= 73\\xa0животных.']\nnew_fact = infer_new_fact(selected) # 'The answer is 73'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '73'"}
{"id": "GSM8K_253_1faf68b44c", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First multiply Bill's starting floor number by 4: 3 * 4 = 12; int1 & sent2 -> int2: Then add six to find the ending floor Bill is on: 12 + 6 = 18; int2 & sent3 -> int3: The answer is 18;", "textual_logical_units": {"1": "Билл зашел в лифт на третьем этаже.", "2": "Он поднялся на этаж, чей номер равен четырежды взятому номеру этажа, на котором он сел в лифт, плюс 6.", "3": "На каком этаже сейчас Билл?", "4": "Сначала нужно умножить номер этажа, на котором Билл зашел в лифт, на 4: 3 * 4 = 12.", "5": "Затем, чтобы найти этаж, на который поднялся Билл, нужно прибавить шесть: 12 + 6 = 18.", "6": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['Билл зашел в лифт на третьем этаже.', 'Он поднялся на этаж, чей номер равен четырежды взятому номеру этажа, на котором он сел в лифт, плюс 6.']\nquestion = 'На каком этаже сейчас Билл?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Билл зашел в лифт на третьем этаже.', 'Он поднялся на этаж, чей номер равен четырежды взятому номеру этажа, на котором он сел в лифт, плюс 6.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно умножить номер этажа, на котором Билл зашел в лифт, на\\xa04: 3\\xa0*\\xa04\\xa0=\\xa012.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он поднялся на этаж, чей номер равен четырежды взятому номеру этажа, на котором он сел в лифт, плюс 6.', 'Сначала нужно умножить номер этажа, на котором Билл зашел в лифт, на\\xa04: 3\\xa0*\\xa04\\xa0=\\xa012.']\nnew_fact = infer_new_fact(selected) # 'Затем, чтобы найти этаж, на который поднялся Билл, нужно прибавить шесть: 12\\xa0+\\xa06\\xa0=\\xa018.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На каком этаже сейчас Билл?', 'Затем, чтобы найти этаж, на который поднялся Билл, нужно прибавить шесть: 12\\xa0+\\xa06\\xa0=\\xa018.']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_254_ef307513f1", "context": "", "options": [], "answer": "84", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Anne went down the slide 30% less than Mitchel who went down 30 times so that's .30*30 = 9 times less; int1 & sent2 -> int2: Mitchel went down 30 times and Anne went down 9 times less than him for a total of 30-9 = 21 times; int2 & sent4 -> int3: Robert went down the slide 4 times as much as Anne, who went down 21 times so Robert went down the slide 4*21 = 84 times; int3 & sent5 -> int4: The answer is 84;", "textual_logical_units": {"1": "Трое детей Шелли весь день провели в аквапарке.", "2": "Митчел 30 раз скатился с водной горки.", "3": "Энн каталась с горки на 30 % меньше, чем Митчел,", "4": "а Роберт — в 4 раза больше, чем Энн.", "5": "Сколько раз Роберт скатился с водной горки?", "6": "Митчел скатился с горки 30 раз, а Энн — на 30 % меньше, значит, она скатилась на 9 раз меньше (0,30 * 30 = 9).", "7": "Если Энн каталась на 9 раз меньше Митчела, который скатился с горки 30 раз, значит, она скатилась: 30 – 9 = 21 раз.", "8": "Роберт катался с горки в 4 раза больше, чем Энн. Если она скатилась 21 раз, то Роберт — 4 * 21 = 84 раза.", "9": "The answer is 84"}, "human_translated": true, "code_input": "####\nfacts = [ 'Трое детей Шелли весь день провели в аквапарке.',\n  'Митчел 30\\xa0раз скатился с водной горки.',\n  'Энн каталась с горки на 30\\xa0% меньше, чем Митчел,',\n  'а Роберт\\xa0— в 4\\xa0раза больше, чем Энн.']\nquestion = 'Сколько раз Роберт скатился с водной горки?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Митчел 30\\xa0раз скатился с водной горки.', 'Энн каталась с горки на 30\\xa0% меньше, чем Митчел,']\nnew_fact = infer_new_fact(selected) # 'Митчел скатился с горки 30\\xa0раз, а Энн\\xa0— на 30\\xa0% меньше, значит, она скатилась на 9\\xa0раз меньше (0,30\\xa0*\\xa030\\xa0= 9).'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Митчел 30\\xa0раз скатился с водной горки.', 'Митчел скатился с горки 30\\xa0раз, а Энн\\xa0— на 30\\xa0% меньше, значит, она скатилась на 9\\xa0раз меньше (0,30\\xa0*\\xa030\\xa0= 9).']\nnew_fact = infer_new_fact(selected) # 'Если Энн каталась на 9 раз меньше Митчела, который скатился с горки 30\\xa0раз, значит, она скатилась: 30\\xa0–\\xa09\\xa0= 21\\xa0раз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Роберт\\xa0— в 4\\xa0раза больше, чем Энн.', 'Если Энн каталась на 9 раз меньше Митчела, который скатился с горки 30\\xa0раз, значит, она скатилась: 30\\xa0–\\xa09\\xa0= 21\\xa0раз.']\nnew_fact = infer_new_fact(selected) # 'Роберт катался с горки в 4\\xa0раза больше, чем Энн. Если она скатилась 21\\xa0раз, то Роберт\\xa0— 4\\xa0*\\xa021\\xa0= 84\\xa0раза.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько раз Роберт скатился с водной горки?', 'Роберт катался с горки в 4\\xa0раза больше, чем Энн. Если она скатилась 21\\xa0раз, то Роберт\\xa0— 4\\xa0*\\xa021\\xa0= 84\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'The answer is 84'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '84'"}
{"id": "GSM8K_255_f3d4779ee4", "context": "", "options": [], "answer": "192", "reasoning_graph_edges": [{"antecedents": [1, 3, 4], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1, 5], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent4 -> int1: When Mr. Sylas puts an equal number of the cows he bought into the stalls, each stall gets 40/10 = 4 new cows.; int1 & sent5 -> int2: Each of the stalls gets four cows, meaning a total of 8*4 = 32 cows are placed into eight of the stalls.; sent1 & sent5 -> int3: Since each stall had 20 cows before Mr. Sylas added four into each of the stalls, the total number of cows in eight of the stalls was 8*20= 160 cows.; int2 & int3 -> int4: There are 160+32 = 192 cows in eight stalls after Mr. Sylas adds four into each of the stalls.; int4 & sent5 -> int5: The answer is 192;", "textual_logical_units": {"1": "В каждом из десяти стойл находится по 20 коров.", "2": "Г-н", "3": "Сайлас купил 40 коров и поставил", "4": "в каждое из двадцати стойл одинаковое количество новых коров.", "5": "Сколько коров в 8 стойлах?", "6": "Когда г-н Сайлас поровну распределил по всем стойлам купленных коров, в каждом стойле появилось: 40 / 10 = 4 новые коровы.", "7": "В каждом из стойл появилось по четыре коровы, значит, в восьми стойлах стало больше на: 8 * 4 = 32 коровы.", "8": "Поскольку в каждом стойле уже было по 20 коров, прежде чем там появились новые, значит, там было: 8 * 20 = 160 коров.", "9": "Вместе с новыми коровами теперь в восьми стойлах содержится: 160 + 32 = 192 коровы.", "10": "The answer is 192"}, "human_translated": true, "code_input": "####\nfacts = [ 'В каждом из десяти стойл находится по 20\\xa0коров.',\n  'Г-н',\n  'Сайлас купил 40\\xa0коров и поставил',\n  'в каждое из двадцати стойл одинаковое количество новых коров.']\nquestion = 'Сколько коров в 8\\xa0стойлах?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В каждом из десяти стойл находится по 20\\xa0коров.', 'Сайлас купил 40\\xa0коров и поставил', 'в каждое из двадцати стойл одинаковое количество новых коров.']\nnew_fact = infer_new_fact(selected) # 'Когда г-н Сайлас поровну распределил по всем стойлам купленных коров, в каждом стойле появилось: 40\\xa0/\\xa010\\xa0= 4\\xa0новые коровы.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько коров в 8\\xa0стойлах?', 'Когда г-н Сайлас поровну распределил по всем стойлам купленных коров, в каждом стойле появилось: 40\\xa0/\\xa010\\xa0= 4\\xa0новые коровы.']\nnew_fact = infer_new_fact(selected) # 'В каждом из стойл появилось по четыре коровы, значит, в восьми стойлах стало больше на: 8\\xa0*\\xa04\\xa0= 32\\xa0коровы.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В каждом из десяти стойл находится по 20\\xa0коров.', 'Сколько коров в 8\\xa0стойлах?']\nnew_fact = infer_new_fact(selected) # 'Поскольку в каждом стойле уже было по 20\\xa0коров, прежде чем там появились новые, значит, там было: 8\\xa0*\\xa020\\xa0= 160\\xa0коров.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В каждом из стойл появилось по четыре коровы, значит, в восьми стойлах стало больше на: 8\\xa0*\\xa04\\xa0= 32\\xa0коровы.', 'Поскольку в каждом стойле уже было по 20\\xa0коров, прежде чем там появились новые, значит, там было: 8\\xa0*\\xa020\\xa0= 160\\xa0коров.']\nnew_fact = infer_new_fact(selected) # 'Вместе с новыми коровами теперь в восьми стойлах содержится: 160\\xa0+\\xa032\\xa0= 192\\xa0коровы.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько коров в 8\\xa0стойлах?', 'Вместе с новыми коровами теперь в восьми стойлах содержится: 160\\xa0+\\xa032\\xa0= 192\\xa0коровы.']\nnew_fact = infer_new_fact(selected) # 'The answer is 192'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '192'"}
{"id": "GSM8K_256_7b552d5cd5", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [2], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: Since a penny is 1 cent, then 100 pennies is equal to 100 x 1 cent = 100 cents.; sent2 -> int2: Since nickel is 5 cents, then 40 nickels is equal to 40 x 5 = 200 cents.; sent2 -> int3: Since a dime is equal to 10 cents, then 20 dimes are equal to 20 x 10 = 200 cents.; int1 & int2 & int3 -> int4: So, Brady has a total of 100 + 200 + 200 = 500 cents.; int4 & sent4 -> int5: Since a dollar is equal to 100 cents, then 500 cents is equal to 500/100 = 5 dollars.; int5 & sent3 -> int6: Thus, Brady has a total of $40 + $5 = $45 in his piggy bank.; sent1 & sent4 -> int7: The answer is 45;", "textual_logical_units": {"1": "Брейди посчитал деньги в своей копилке.", "2": "В ней оказалось 100 пенни, 40 никелей, 20 даймов", "3": "и 40 долларовых купюр.", "4": "Сколько у Брейди в копилке денег в долларах?", "5": "Один пенни равен 1 центу, значит, 100 пенни равны 100 x 1 цент = 100 центов.", "6": "Никель равен 5 центам, соответственно 40 никелей — это 40 x 5 = 200 центов.", "7": "Один дайм равен 10 центам, поэтому 20 даймов — это 20 x 10 = 200 центов.", "8": "В общей сложности у Брейди 100 + 200 + 200 = 500 центов.", "9": "Доллар равен 100 центам, значит, 500 центов составляют: 500 / 100 = 5 долларов.", "10": "Следовательно, в копилке у Брейди всего 40 долларов + 5 долларов = 45 долларов.", "11": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = ['Брейди посчитал деньги в своей копилке.', 'В ней оказалось 100\\xa0пенни, 40\\xa0никелей, 20\\xa0даймов', 'и 40\\xa0долларовых купюр.']\nquestion = 'Сколько у Брейди в копилке денег в долларах?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В ней оказалось 100\\xa0пенни, 40\\xa0никелей, 20\\xa0даймов']\nnew_fact = infer_new_fact(selected) # 'Один пенни равен 1\\xa0центу, значит, 100\\xa0пенни равны 100\\xa0x\\xa01 цент\\xa0= 100\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В ней оказалось 100\\xa0пенни, 40\\xa0никелей, 20\\xa0даймов']\nnew_fact = infer_new_fact(selected) # 'Никель равен 5\\xa0центам, соответственно 40\\xa0никелей\\xa0— это 40\\xa0x\\xa05\\xa0= 200\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В ней оказалось 100\\xa0пенни, 40\\xa0никелей, 20\\xa0даймов']\nnew_fact = infer_new_fact(selected) # 'Один дайм равен 10\\xa0центам, поэтому 20 даймов\\xa0— это 20\\xa0x\\xa010\\xa0= 200\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один пенни равен 1\\xa0центу, значит, 100\\xa0пенни равны 100\\xa0x\\xa01 цент\\xa0= 100\\xa0центов.', 'Никель равен 5\\xa0центам, соответственно 40\\xa0никелей\\xa0— это 40\\xa0x\\xa05\\xa0= 200\\xa0центов.', 'Один дайм равен 10\\xa0центам, поэтому 20 даймов\\xa0— это 20\\xa0x\\xa010\\xa0= 200\\xa0центов.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности у Брейди 100\\xa0+\\xa0200\\xa0+\\xa0200\\xa0= 500\\xa0центов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у Брейди в копилке денег в долларах?', 'В общей сложности у Брейди 100\\xa0+\\xa0200\\xa0+\\xa0200\\xa0= 500\\xa0центов.']\nnew_fact = infer_new_fact(selected) # 'Доллар равен 100\\xa0центам, значит, 500\\xa0центов составляют: 500\\xa0/\\xa0100\\xa0= 5\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и 40\\xa0долларовых купюр.', 'Доллар равен 100\\xa0центам, значит, 500\\xa0центов составляют: 500\\xa0/\\xa0100\\xa0= 5\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в копилке у Брейди всего 40\\xa0долларов\\xa0+ 5\\xa0долларов\\xa0= 45\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Брейди посчитал деньги в своей копилке.', 'Сколько у Брейди в копилке денег в долларах?']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_257_14b15c1a0f", "context": "", "options": [], "answer": "5600", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find how many 10-foot sections are in the redwood: 200 feet / 10 feet/section = 20 sections; int1 & sent1 -> int2: Then multiply the number of sections by the weight of each section to find the total weight of the redwood: 20 sections * 400 pounds/section = 8000 pounds; int2 & sent2 -> int3: Then find the amount of the wood the termites ate: 8000 pounds * 30% = 2400 pounds; int3 -> int4: Then subtract that amount from the total weight of the wood: 8000 pounds - 2400 pounds = 5600 pounds; int4 & sent4 -> int5: The answer is 5600;", "textual_logical_units": {"1": "Каждый цельный 10-футовый кусок сосны весит 400 фунтов.", "2": "Термиты съели 30 % древесины этой сосны.", "3": "Если высота сосны 200 футов,", "4": "сколько она весит?", "5": "Сначала нужно узнать, сколько 10-футовых кусков в сосне: 200 футов / 10 футов в куске = 20 кусков.", "6": "Затем необходимо умножить количество кусков на вес каждого куска, чтобы найти общий вес сосны: 20 кусков * 400 фунтов в куске = 8000 фунтов.", "7": "Теперь нужно узнать, сколько древесины съели термиты: 8000 фунтов * 30 % = 2400 фунтов.", "8": "Если вычесть это значение из общего веса древесины, получится: 8000 фунтов – 2400 фунтов = 5600 фунтов.", "9": "The answer is 5600"}, "human_translated": true, "code_input": "####\nfacts = ['Каждый цельный 10-футовый кусок сосны весит 400\\xa0фунтов.', 'Термиты съели 30\\xa0% древесины этой сосны.', 'Если высота сосны 200\\xa0футов,']\nquestion = 'сколько она весит?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый цельный 10-футовый кусок сосны весит 400\\xa0фунтов.', 'Если высота сосны 200\\xa0футов,']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно узнать, сколько 10-футовых кусков в сосне: 200\\xa0футов\\xa0/ 10\\xa0футов в куске\\xa0= 20\\xa0кусков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый цельный 10-футовый кусок сосны весит 400\\xa0фунтов.', 'Сначала нужно узнать, сколько 10-футовых кусков в сосне: 200\\xa0футов\\xa0/ 10\\xa0футов в куске\\xa0= 20\\xa0кусков.']\nnew_fact = infer_new_fact(selected) # 'Затем необходимо умножить количество кусков на вес каждого куска, чтобы найти общий вес сосны: 20\\xa0кусков\\xa0* 400\\xa0фунтов в куске\\xa0= 8000\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Термиты съели 30\\xa0% древесины этой сосны.', 'Затем необходимо умножить количество кусков на вес каждого куска, чтобы найти общий вес сосны: 20\\xa0кусков\\xa0* 400\\xa0фунтов в куске\\xa0= 8000\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'Теперь нужно узнать, сколько древесины съели термиты: 8000\\xa0фунтов\\xa0*\\xa030\\xa0%\\xa0= 2400\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Теперь нужно узнать, сколько древесины съели термиты: 8000\\xa0фунтов\\xa0*\\xa030\\xa0%\\xa0= 2400\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'Если вычесть это значение из общего веса древесины, получится: 8000\\xa0фунтов\\xa0– 2400\\xa0фунтов\\xa0= 5600\\xa0фунтов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько она весит?', 'Если вычесть это значение из общего веса древесины, получится: 8000\\xa0фунтов\\xa0– 2400\\xa0фунтов\\xa0= 5600\\xa0фунтов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 5600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5600'"}
{"id": "GSM8K_258_6adcaec483", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: First multiply the late fee per book by the number of books: $0.50/book * 8 books = $4.00; int1 & sent3 -> int2: Then add the \"more than a week overdue\" fee to the answer from the previous step to find the total: $4.00 + $2.00 = $6.00; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "Нэнси принесла сдавать просроченные книги в библиотеку.", "2": "Она должна заплатить по 0,50 цента за каждую из 8 книг.", "3": "Кроме того, с нее возьмут еще 2,00 доллара — это фиксированный штраф за наличие хотя бы одной книги, просроченной больше чем на неделю.", "4": "Сколько всего ей придется заплатить?", "5": "Сначала нужно умножить плату за просрочку на количество книг: 0,50 долларов за книгу * 8 книг = 4,00 доллара.", "6": "Чтобы вычислить общую сумму платежа, к предыдущему значению нужно добавить штраф за просрочку больше недели: 4,00 доллара + 2,00 доллара = 6,00 долларов.", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = [ 'Нэнси принесла сдавать просроченные книги в библиотеку.',\n  'Она должна заплатить по 0,50\\xa0цента за каждую из 8\\xa0книг.',\n  'Кроме того, с нее возьмут еще 2,00\\xa0доллара\\xa0— это фиксированный штраф за наличие хотя бы одной книги, просроченной больше чем на неделю.']\nquestion = 'Сколько всего ей придется заплатить?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она должна заплатить по 0,50\\xa0цента за каждую из 8\\xa0книг.']\nnew_fact = infer_new_fact(selected) # 'Сначала нужно умножить плату за просрочку на количество книг: 0,50\\xa0долларов за книгу\\xa0* 8\\xa0книг\\xa0= 4,00\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, с нее возьмут еще 2,00\\xa0доллара\\xa0— это фиксированный штраф за наличие хотя бы одной книги, просроченной больше чем на неделю.', 'Сначала нужно умножить плату за просрочку на количество книг: 0,50\\xa0долларов за книгу\\xa0* 8\\xa0книг\\xa0= 4,00\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'Чтобы вычислить общую сумму платежа, к предыдущему значению нужно добавить штраф за просрочку больше недели: 4,00\\xa0доллара\\xa0+ 2,00\\xa0доллара\\xa0= 6,00\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько всего ей придется заплатить?', 'Чтобы вычислить общую сумму платежа, к предыдущему значению нужно добавить штраф за просрочку больше недели: 4,00\\xa0доллара\\xa0+ 2,00\\xa0доллара\\xa0= 6,00\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_259_fdf8ed1f57", "context": "", "options": [], "answer": "168", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: Since Andrea has 8 more apples than Jamal, if Andrea has 52 apples, Jamal has 52-8 = 44 apples.; int1 -> int2: The total number of apples is 44+52 = 96; int1 & sent3 -> int3: Jamal has 4 more bananas than apples, meaning he has 44+4 = 48 bananas.; int3 & sent2 -> int4: Andrea has half as many bananas as Jamal, which totals 48/2 = 24 bananas.; int3 & int4 -> int5: There are a total of 48+24 = 72 bananas.; int2 & int5 -> int6: Altogether, there are 96 apples + 72 bananas = 168 fruits; sent1 & sent4 -> int7: The answer is 168;", "textual_logical_units": {"1": "У Андреа на 8 яблок больше, чем у Джамала,", "2": "а бананов в два раза меньше, чем у Джамала.", "3": "Бананов у Джамала на 4 штуки больше, чем яблок.", "4": "Сколько всего фруктов у детей, если у Андреа 52 яблока?", "5": "У Андреа на 8 яблок больше, чем у Джамала, значит, если у нее 52 яблока, то у Джамала: 52 – 8 = 44 яблока.", "6": "Всего у детей: 44 + 52 = 96 яблок.", "7": "У Джамала бананов на 4 штуки больше, чем яблок, то есть 44 + 4 = 48 бананов.", "8": "У Андреа вдвое меньше бананов, чем у Джамала, то есть 48 / 2 = 24 банана.", "9": "Всего у детей: 48 + 24 = 72 банана.", "10": "В общей сложности у них: 96 яблок + 72 банана = 168 фруктов.", "11": "The answer is 168"}, "human_translated": true, "code_input": "####\nfacts = ['У Андреа на 8\\xa0яблок больше, чем у Джамала,', 'а бананов в два раза меньше, чем у Джамала.', 'Бананов у Джамала на 4\\xa0штуки больше, чем яблок.']\nquestion = 'Сколько всего фруктов у детей, если у Андреа 52\\xa0яблока?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Андреа на 8\\xa0яблок больше, чем у Джамала,', 'Сколько всего фруктов у детей, если у Андреа 52\\xa0яблока?']\nnew_fact = infer_new_fact(selected) # 'У Андреа на 8\\xa0яблок больше, чем у Джамала, значит, если у нее 52\\xa0яблока, то у Джамала: 52\\xa0–\\xa08\\xa0= 44\\xa0яблока.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Андреа на 8\\xa0яблок больше, чем у Джамала, значит, если у нее 52\\xa0яблока, то у Джамала: 52\\xa0–\\xa08\\xa0= 44\\xa0яблока.']\nnew_fact = infer_new_fact(selected) # 'Всего у детей: 44\\xa0+\\xa052\\xa0= 96\\xa0яблок.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Бананов у Джамала на 4\\xa0штуки больше, чем яблок.', 'У Андреа на 8\\xa0яблок больше, чем у Джамала, значит, если у нее 52\\xa0яблока, то у Джамала: 52\\xa0–\\xa08\\xa0= 44\\xa0яблока.']\nnew_fact = infer_new_fact(selected) # 'У Джамала бананов на 4\\xa0штуки больше, чем яблок, то есть 44\\xa0+\\xa04\\xa0= 48\\xa0бананов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а бананов в два раза меньше, чем у Джамала.', 'У Джамала бананов на 4\\xa0штуки больше, чем яблок, то есть 44\\xa0+\\xa04\\xa0= 48\\xa0бананов.']\nnew_fact = infer_new_fact(selected) # 'У Андреа вдвое меньше бананов, чем у Джамала, то есть 48\\xa0/\\xa02\\xa0= 24\\xa0банана.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Джамала бананов на 4\\xa0штуки больше, чем яблок, то есть 44\\xa0+\\xa04\\xa0= 48\\xa0бананов.', 'У Андреа вдвое меньше бананов, чем у Джамала, то есть 48\\xa0/\\xa02\\xa0= 24\\xa0банана.']\nnew_fact = infer_new_fact(selected) # 'Всего у детей: 48\\xa0+\\xa024\\xa0= 72\\xa0банана.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего у детей: 44\\xa0+\\xa052\\xa0= 96\\xa0яблок.', 'Всего у детей: 48\\xa0+\\xa024\\xa0= 72\\xa0банана.']\nnew_fact = infer_new_fact(selected) # 'В общей сложности у них: 96\\xa0яблок\\xa0+ 72\\xa0банана\\xa0= 168\\xa0фруктов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Андреа на 8\\xa0яблок больше, чем у Джамала,', 'Сколько всего фруктов у детей, если у Андреа 52\\xa0яблока?']\nnew_fact = infer_new_fact(selected) # 'The answer is 168'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '168'"}
{"id": "GSM8K_260_d1c764238f", "context": "", "options": [], "answer": "11", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: Carla will bake a total of 36 + 30 = 66 cookies.; int1 & sent1 -> int2: Since 1 dozen is equal to 12, then 66 cookies are equal to 66/12 = 5.5 dozens.; int2 & sent1 -> int3: Hence, Carla will need 5.5 x 2 = 11 cups of flour.; int3 & sent3 -> int4: The answer is 11;", "textual_logical_units": {"1": "Для приготовления дюжины печений требуется два стакана муки.", "2": "Карла должна приготовить 36 печений сегодня и 30 печений завтра.", "3": "Сколько стаканов муки понадобится Карле, чтобы испечь печенье сегодня и завтра?", "4": "Всего Карла испечет: 36 + 30 = 66 печений.", "5": "Поскольку 1 дюжина — это 12, то 66 печений — это 66 / 12 = 5,5 дюжин.", "6": "Следовательно, Карле понадобится 5,5 х 2 = 11 стаканов муки.", "7": "The answer is 11"}, "human_translated": true, "code_input": "####\nfacts = ['Для приготовления дюжины печений требуется два стакана муки.', 'Карла должна приготовить 36\\xa0печений сегодня и 30\\xa0печений завтра.']\nquestion = 'Сколько стаканов муки понадобится Карле, чтобы испечь печенье сегодня и завтра?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Карла должна приготовить 36\\xa0печений сегодня и 30\\xa0печений завтра.']\nnew_fact = infer_new_fact(selected) # 'Всего Карла испечет: 36\\xa0+\\xa030\\xa0= 66\\xa0печений.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для приготовления дюжины печений требуется два стакана муки.', 'Всего Карла испечет: 36\\xa0+\\xa030\\xa0= 66\\xa0печений.']\nnew_fact = infer_new_fact(selected) # 'Поскольку 1 дюжина\\xa0— это\\xa012, то 66\\xa0печений\\xa0— это 66\\xa0/\\xa012\\xa0= 5,5\\xa0дюжин.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для приготовления дюжины печений требуется два стакана муки.', 'Поскольку 1 дюжина\\xa0— это\\xa012, то 66\\xa0печений\\xa0— это 66\\xa0/\\xa012\\xa0= 5,5\\xa0дюжин.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, Карле понадобится 5,5\\xa0х\\xa02\\xa0= 11\\xa0стаканов муки.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько стаканов муки понадобится Карле, чтобы испечь печенье сегодня и завтра?', 'Следовательно, Карле понадобится 5,5\\xa0х\\xa02\\xa0= 11\\xa0стаканов муки.']\nnew_fact = infer_new_fact(selected) # 'The answer is 11'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '11'"}
{"id": "GSM8K_261_b200c99def", "context": "", "options": [], "answer": "62", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A third of the pennies in a cup is 9,300/3 = 3,100.; int1 & sent2 -> int2: Number of pennies in the stack is 3,100*2 = 6,200.; int2 -> int3: Total dollar amount in the stack is 6,200/100 = 62.; int3 & sent2 -> int4: The answer is 62;", "textual_logical_units": {"1": "В чаше лежат 9300 пенни.", "2": "Сколько долларов будет в стопке, содержащей две трети монет, лежащих в чаше?", "3": "Треть пенни в чаше — это 9300 / 3 = 3100 монет.", "4": "Значит, в стопке будет: 3100 * 2 = 6200 пенни.", "5": "В пересчете на доллары в стопке будет: 6200 / 100 = 62 доллара.", "6": "The answer is 62"}, "human_translated": true, "code_input": "####\nfacts = ['В чаше лежат 9300\\xa0пенни.']\nquestion = 'Сколько долларов будет в стопке, содержащей две трети монет, лежащих в чаше?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В чаше лежат 9300\\xa0пенни.', 'Сколько долларов будет в стопке, содержащей две трети монет, лежащих в чаше?']\nnew_fact = infer_new_fact(selected) # 'Треть\\xa0пенни в чаше\\xa0— это 9300\\xa0/\\xa03\\xa0= 3100\\xa0монет.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов будет в стопке, содержащей две трети монет, лежащих в чаше?', 'Треть\\xa0пенни в чаше\\xa0— это 9300\\xa0/\\xa03\\xa0= 3100\\xa0монет.']\nnew_fact = infer_new_fact(selected) # 'Значит, в стопке будет: 3100\\xa0*\\xa02\\xa0= 6200\\xa0пенни.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Значит, в стопке будет: 3100\\xa0*\\xa02\\xa0= 6200\\xa0пенни.']\nnew_fact = infer_new_fact(selected) # 'В пересчете на доллары в стопке будет: 6200\\xa0/\\xa0100\\xa0= 62\\xa0доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов будет в стопке, содержащей две трети монет, лежащих в чаше?', 'В пересчете на доллары в стопке будет: 6200\\xa0/\\xa0100\\xa0= 62\\xa0доллара.']\nnew_fact = infer_new_fact(selected) # 'The answer is 62'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '62'"}
{"id": "GSM8K_262_49eb131d8e", "context": "", "options": [], "answer": "270", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: Maddison has 5 x 50 = 250 marbles from her boxes.; int1 & sent2 -> int2: So she has a total of 250 + 20 = 270 marbles now.; int2 & sent3 -> int3: The answer is 270;", "textual_logical_units": {"1": "У Мэддисон есть 5 коробок с шариками, по 50 шариков в каждой.", "2": "Подруга дала ей еще 20 шариков.", "3": "Сколько теперь у нее шариков?", "4": "Всего у Мэддисон в коробках: 5 х 50 = 250 шариков.", "5": "Теперь у нее: 250 + 20 = 270 шариков.", "6": "The answer is 270"}, "human_translated": true, "code_input": "####\nfacts = ['У Мэддисон есть 5\\xa0коробок с шариками, по 50\\xa0шариков в каждой.', 'Подруга дала ей еще 20\\xa0шариков.']\nquestion = 'Сколько теперь у нее шариков?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Мэддисон есть 5\\xa0коробок с шариками, по 50\\xa0шариков в каждой.']\nnew_fact = infer_new_fact(selected) # 'Всего у Мэддисон в коробках: 5\\xa0х\\xa050\\xa0= 250\\xa0шариков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подруга дала ей еще 20\\xa0шариков.', 'Всего у Мэддисон в коробках: 5\\xa0х\\xa050\\xa0= 250\\xa0шариков.']\nnew_fact = infer_new_fact(selected) # 'Теперь у нее: 250\\xa0+\\xa020\\xa0= 270\\xa0шариков.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько теперь у нее шариков?', 'Теперь у нее: 250\\xa0+\\xa020\\xa0= 270\\xa0шариков.']\nnew_fact = infer_new_fact(selected) # 'The answer is 270'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '270'"}
{"id": "GSM8K_263_763de04a2c", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Ferdinand:6/2=3 trees; int1 & sent3 -> int2: Harry:5+2(3)=5+6=11 trees; int1 & int2 -> int3: 11-3=8 trees; int3 & sent4 -> int4: The answer is 8;", "textual_logical_units": {"1": "Во дворе у Криса растет 6 деревьев.", "2": "У Фердинанда вдвое меньше деревьев, чем у Криса.", "3": "У Гарри деревьев на 5 больше, чем удвоенное количество деревьев, растущих у Фердинанда.", "4": "На сколько во дворе Гарри больше деревьев, чем во дворе Фердинанда?", "5": "У Фердинанда растет: 6 / 2 = 3 дерева.", "6": "У Гарри растет: 5 + 2 * 3 = 5 + 6 = 11 деревьев.", "7": "У Гарри на 11 – 3 = 8 деревьев больше, чем у Фердинанда.", "8": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = [ 'Во дворе у Криса растет 6\\xa0деревьев.',\n  'У Фердинанда вдвое меньше деревьев, чем у Криса.',\n  'У Гарри деревьев на 5\\xa0больше, чем удвоенное количество деревьев, растущих у Фердинанда.']\nquestion = 'На сколько во дворе Гарри больше деревьев, чем во дворе Фердинанда?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Во дворе у Криса растет 6\\xa0деревьев.', 'У Фердинанда вдвое меньше деревьев, чем у Криса.']\nnew_fact = infer_new_fact(selected) # 'У Фердинанда растет: 6\\xa0/\\xa02\\xa0= 3\\xa0дерева.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Гарри деревьев на 5\\xa0больше, чем удвоенное количество деревьев, растущих у Фердинанда.', 'У Фердинанда растет: 6\\xa0/\\xa02\\xa0= 3\\xa0дерева.']\nnew_fact = infer_new_fact(selected) # 'У Гарри растет: 5\\xa0+\\xa02\\xa0*\\xa03\\xa0=\\xa05\\xa0+\\xa06\\xa0= 11\\xa0деревьев.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Фердинанда растет: 6\\xa0/\\xa02\\xa0= 3\\xa0дерева.', 'У Гарри растет: 5\\xa0+\\xa02\\xa0*\\xa03\\xa0=\\xa05\\xa0+\\xa06\\xa0= 11\\xa0деревьев.']\nnew_fact = infer_new_fact(selected) # 'У Гарри на 11\\xa0–\\xa03\\xa0= 8\\xa0деревьев больше, чем у Фердинанда.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько во дворе Гарри больше деревьев, чем во дворе Фердинанда?', 'У Гарри на 11\\xa0–\\xa03\\xa0= 8\\xa0деревьев больше, чем у Фердинанда.']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_264_743e854af1", "context": "", "options": [], "answer": "400", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: Samantha has $100+$25 = $125.; int1 & sent2 -> int2: Daisy has $125+$50 = $175.; int1 & int2 & sent1 -> int3: The total amount of money that the three girls have is $175+$125+$100 = $400.; int3 & sent3 -> int4: The answer is 400;", "textual_logical_units": {"1": "У Кармен 100 долларов, у Саманты на 25 долларов больше, чем у Кармен,", "2": "а у Дейзи на 50 долларов больше, чем у Саманты.", "3": "Сколько долларов у всех трех девушек?", "4": "У Саманты: 100 долларов + 25 долларов = 125 долларов.", "5": "У Дейзи: 125 долларов + 50 долларов = 175 долларов.", "6": "Всего у трех девушек: 175 долларов + 125 долларов + 100 долларов = 400 долларов.", "7": "The answer is 400"}, "human_translated": true, "code_input": "####\nfacts = ['У Кармен 100\\xa0долларов, у Саманты на 25\\xa0долларов больше, чем у Кармен,', 'а у Дейзи на 50\\xa0долларов больше, чем у Саманты.']\nquestion = 'Сколько долларов у всех трех девушек?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Кармен 100\\xa0долларов, у Саманты на 25\\xa0долларов больше, чем у Кармен,']\nnew_fact = infer_new_fact(selected) # 'У Саманты: 100\\xa0долларов\\xa0+ 25\\xa0долларов\\xa0= 125\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а у Дейзи на 50\\xa0долларов больше, чем у Саманты.', 'У Саманты: 100\\xa0долларов\\xa0+ 25\\xa0долларов\\xa0= 125\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'У Дейзи: 125\\xa0долларов\\xa0+ 50\\xa0долларов\\xa0= 175\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Кармен 100\\xa0долларов, у Саманты на 25\\xa0долларов больше, чем у Кармен,', 'У Саманты: 100\\xa0долларов\\xa0+ 25\\xa0долларов\\xa0= 125\\xa0долларов.', 'У Дейзи: 125\\xa0долларов\\xa0+ 50\\xa0долларов\\xa0= 175\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Всего у трех девушек: 175\\xa0долларов\\xa0+ 125\\xa0долларов\\xa0+ 100\\xa0долларов\\xa0= 400\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько долларов у всех трех девушек?', 'Всего у трех девушек: 175\\xa0долларов\\xa0+ 125\\xa0долларов\\xa0+ 100\\xa0долларов\\xa0= 400\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '400'"}
{"id": "GSM8K_265_27a7504bc5", "context": "", "options": [], "answer": "9500", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 8}, {"antecedents": [3, 5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [6, 7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: The brokerage fee is $350 000 x 5/100 = $17500.; sent3 & sent5 -> int2: The transfer fee is $350 000 x 12/100 = $42000.; int1 & int2 -> int3: The total price of the house is $350 000 + $17500 + $42000 = $409 500.; sent1 & sent2 -> int4: So, it is $409 500 - $400 000 = $9500 more than Mrs. Cruz's budget.; int4 & sent6 & sent7 -> int5: The answer is 9500;", "textual_logical_units": {"1": "Г-жа", "2": "Круз ищет дом стоимостью не больше 400 000 долларов.", "3": "Она присмотрела дом, который продают за 350 000 долларов.", "4": "Но ей нужно будет заплатить риелтору комиссию в 5 % от цены продажи,", "5": "а также 12 % от цены продажи за перевод денег.", "6": "Насколько общая стоимость дома превышает", "7": "бюджет г-жи Круз?", "8": "Комиссия агента составляет: 350 000 долларов x 5/100 = 17 500 долларов.", "9": "За перевод денег нужно заплатить 350 000 долларов x 12/100 = 42 000 долларов.", "10": "То есть в сумме дом обойдется в: 350 000 долларов + 17 500 долларов + 42 000 долларов = 409 500 долларов.", "11": "Таким образом, его общая стоимость на: 409 500 долларов – 400 000 долларов = 9500 долларов превышает бюджет г-жи Круз.", "12": "The answer is 9500"}, "human_translated": true, "code_input": "####\nfacts = [ 'Г-жа',\n  'Круз ищет дом стоимостью не больше 400\\xa0000\\xa0долларов.',\n  'Она присмотрела дом, который продают за 350\\xa0000\\xa0долларов.',\n  'Но ей нужно будет заплатить риелтору комиссию в 5\\xa0% от цены продажи,',\n  'а также 12\\xa0% от цены продажи за перевод денег.',\n  'Насколько общая стоимость дома превышает']\nquestion = 'бюджет г-жи Круз?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она присмотрела дом, который продают за 350\\xa0000\\xa0долларов.', 'Но ей нужно будет заплатить риелтору комиссию в 5\\xa0% от цены продажи,']\nnew_fact = infer_new_fact(selected) # 'Комиссия агента составляет: 350\\xa0000 долларов\\xa0x\\xa05/100\\xa0= 17\\xa0500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она присмотрела дом, который продают за 350\\xa0000\\xa0долларов.', 'а также 12\\xa0% от цены продажи за перевод денег.']\nnew_fact = infer_new_fact(selected) # 'За перевод денег нужно заплатить 350\\xa0000\\xa0долларов\\xa0x\\xa012/100\\xa0= 42\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Комиссия агента составляет: 350\\xa0000 долларов\\xa0x\\xa05/100\\xa0= 17\\xa0500\\xa0долларов.', 'За перевод денег нужно заплатить 350\\xa0000\\xa0долларов\\xa0x\\xa012/100\\xa0= 42\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'То есть в сумме дом обойдется в: 350\\xa0000\\xa0долларов\\xa0+ 17\\xa0500\\xa0долларов\\xa0+ 42\\xa0000\\xa0долларов\\xa0= 409\\xa0500\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Г-жа', 'Круз ищет дом стоимостью не больше 400\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, его общая стоимость на: 409\\xa0500\\xa0долларов\\xa0–\\xa0400\\xa0000\\xa0долларов\\xa0=\\xa09500\\xa0долларов превышает бюджет г-жи Круз.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Насколько общая стоимость дома превышает', 'бюджет г-жи Круз?', 'Таким образом, его общая стоимость на: 409\\xa0500\\xa0долларов\\xa0–\\xa0400\\xa0000\\xa0долларов\\xa0=\\xa09500\\xa0долларов превышает бюджет г-жи Круз.']\nnew_fact = infer_new_fact(selected) # 'The answer is 9500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9500'"}
{"id": "GSM8K_266_822c7f0af0", "context": "", "options": [], "answer": "118000", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 7, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Mr. Tan paid $400 000 x 3/100 = $12 000 for the transfer fees.; sent2 & sent4 -> int2: He paid $400 000 x 5/100 = $20 000 for the brokerage fee.; int1 & int2 & sent5 -> int3: So, Mr. Tan paid a total of $12 000 + $20 000 + $250 000 = $282 000 for the transfer, brokerage, and loan fees.; int3 & sent2 -> int4: Hence, Mr. Tan's net proceeds is $400 000 - $282 000 = $118 000.; int4 & sent5 & sent6 -> int5: The answer is 118000;", "textual_logical_units": {"1": "Г-н", "2": "Тан продал свой дом за 400 000 долларов.", "3": "Он заплатил 3 % от цены продажи за перевод денег", "4": "и выплатил агенту комиссию в 5 % от цены продажи.", "5": "Также ему пришлось внести 250 000 долларов, чтобы погасить оставшуюся сумму кредита за дом.", "6": "Сколько долларов чистой выручки г-н Тан получил от продажи дома?", "7": "За перевод денег г-н Тан заплатил: 400 000 долларов x 3/100 = 12 000 долларов.", "8": "Агенту он выплатил 400 000 долларов x 5/100 = 20 000 долларов.", "9": "Следовательно, в общей сложности за перевод денег, услуги агента и погашение кредита г-н Тан заплатил: 12 000 долларов + 20 000 долларов + 250 000 долларов = 282 000 доллара.", "10": "Таким образом, его чистая выручка составила: 400 000 долларов – 282 000 долларов = 118 000 долларов.", "11": "The answer is 118000"}, "human_translated": true, "code_input": "####\nfacts = [ 'Г-н',\n  'Тан продал свой дом за 400\\xa0000\\xa0долларов.',\n  'Он заплатил 3\\xa0% от цены продажи за перевод денег',\n  'и выплатил агенту комиссию в 5\\xa0% от цены продажи.',\n  'Также ему пришлось внести 250\\xa0000\\xa0долларов, чтобы погасить оставшуюся сумму кредита за дом.']\nquestion = 'Сколько долларов чистой выручки г-н Тан получил от продажи дома?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Тан продал свой дом за 400\\xa0000\\xa0долларов.', 'Он заплатил 3\\xa0% от цены продажи за перевод денег']\nnew_fact = infer_new_fact(selected) # 'За перевод денег г-н Тан заплатил: 400\\xa0000\\xa0долларов\\xa0x\\xa03/100\\xa0= 12\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тан продал свой дом за 400\\xa0000\\xa0долларов.', 'и выплатил агенту комиссию в 5\\xa0% от цены продажи.']\nnew_fact = infer_new_fact(selected) # 'Агенту он выплатил 400\\xa0000\\xa0долларов\\xa0x\\xa05/100\\xa0= 20\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Также ему пришлось внести 250\\xa0000\\xa0долларов, чтобы погасить оставшуюся сумму кредита за дом.', 'За перевод денег г-н Тан заплатил: 400\\xa0000\\xa0долларов\\xa0x\\xa03/100\\xa0= 12\\xa0000\\xa0долларов.', 'Агенту он выплатил 400\\xa0000\\xa0долларов\\xa0x\\xa05/100\\xa0= 20\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, в общей сложности за перевод денег, услуги агента и погашение кредита г-н Тан заплатил: 12\\xa0000\\xa0долларов\\xa0+ 20\\xa0000\\xa0долларов\\xa0+ 250\\xa0000\\xa0долларов\\xa0= 282\\xa0000 доллара.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тан продал свой дом за 400\\xa0000\\xa0долларов.', 'Следовательно, в общей сложности за перевод денег, услуги агента и погашение кредита г-н Тан заплатил: 12\\xa0000\\xa0долларов\\xa0+ 20\\xa0000\\xa0долларов\\xa0+ 250\\xa0000\\xa0долларов\\xa0= 282\\xa0000 доллара.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, его чистая выручка составила: 400\\xa0000\\xa0долларов\\xa0– 282\\xa0000\\xa0долларов\\xa0= 118\\xa0000\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Также ему пришлось внести 250\\xa0000\\xa0долларов, чтобы погасить оставшуюся сумму кредита за дом.', 'Сколько долларов чистой выручки г-н Тан получил от продажи дома?', 'Таким образом, его чистая выручка составила: 400\\xa0000\\xa0долларов\\xa0– 282\\xa0000\\xa0долларов\\xa0= 118\\xa0000\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 118000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '118000'"}
{"id": "GSM8K_267_9ca7796fed", "context": "", "options": [], "answer": "91", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: It takes 20*.4=8 more minutes to go from 300 to 400 degrees than from room temperature to 300; int1 -> int2: So it takes 20+8=28 minutes to warm up; int2 & sent1 -> int3: So the total warming time was 28+20=48 minutes; int3 & sent4 -> int4: So it took 48-5=43 minutes to cook the chicken; int3 & int4 -> int5: So it took 48+43=91 minutes to make the chicken.; int5 & sent4 -> int6: The answer is 91;", "textual_logical_units": {"1": "Масло нагревается до 300 градусов за 20 минут.", "2": "Чтобы затем нагреть масло до желаемой температуры в 400 градусов, потребуется на 40 % больше времени.", "3": "Когда масло нагрелось, на приготовление курицы уйдет на 5 минут меньше времени, чем на нагрев масла.", "4": "Сколько времени проходит от начала нагрева масла до окончания приготовления курицы?", "5": "Чтобы нагреть масло с 300 до 400 градусов, потребуется на: 20 * 0,4 = 8 минут больше, чем на нагрев от комнатной температуры до 300 градусов.", "6": "Поэтому для полного нагрева масла требуется: 20 + 8 = 28 минут.", "7": "Значит, общее время нагрева: 28 + 20 = 48 минут.", "8": "На приготовление курицы требуется 48 – 5 = 43 минуты.", "9": "То есть, общий процесс приготовления курицы займет 48 + 43 = 91 минуту.", "10": "The answer is 91"}, "human_translated": true, "code_input": "####\nfacts = [ 'Масло нагревается до 300\\xa0градусов за 20\\xa0минут.',\n  'Чтобы затем нагреть масло до желаемой температуры в 400\\xa0градусов, потребуется на 40\\xa0% больше времени.',\n  'Когда масло нагрелось, на приготовление курицы уйдет на 5\\xa0минут меньше времени, чем на нагрев масла.']\nquestion = 'Сколько времени проходит от начала нагрева масла до окончания приготовления курицы?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Масло нагревается до 300\\xa0градусов за 20\\xa0минут.', 'Чтобы затем нагреть масло до желаемой температуры в 400\\xa0градусов, потребуется на 40\\xa0% больше времени.']\nnew_fact = infer_new_fact(selected) # 'Чтобы нагреть масло с\\xa0300 до 400\\xa0градусов, потребуется на: 20\\xa0*\\xa00,4\\xa0= 8\\xa0минут больше, чем на нагрев от комнатной температуры до 300\\xa0градусов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы нагреть масло с\\xa0300 до 400\\xa0градусов, потребуется на: 20\\xa0*\\xa00,4\\xa0= 8\\xa0минут больше, чем на нагрев от комнатной температуры до 300\\xa0градусов.']\nnew_fact = infer_new_fact(selected) # 'Поэтому для полного нагрева масла требуется: 20\\xa0+\\xa08\\xa0= 28\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Масло нагревается до 300\\xa0градусов за 20\\xa0минут.', 'Поэтому для полного нагрева масла требуется: 20\\xa0+\\xa08\\xa0= 28\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Значит, общее время нагрева: 28\\xa0+\\xa020\\xa0= 48\\xa0минут.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени проходит от начала нагрева масла до окончания приготовления курицы?', 'Значит, общее время нагрева: 28\\xa0+\\xa020\\xa0= 48\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'На приготовление курицы требуется 48\\xa0–\\xa05\\xa0= 43\\xa0минуты.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Значит, общее время нагрева: 28\\xa0+\\xa020\\xa0= 48\\xa0минут.', 'На приготовление курицы требуется 48\\xa0–\\xa05\\xa0= 43\\xa0минуты.']\nnew_fact = infer_new_fact(selected) # 'То есть, общий процесс приготовления курицы займет 48\\xa0+\\xa043\\xa0= 91\\xa0минуту.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени проходит от начала нагрева масла до окончания приготовления курицы?', 'То есть, общий процесс приготовления курицы займет 48\\xa0+\\xa043\\xa0= 91\\xa0минуту.']\nnew_fact = infer_new_fact(selected) # 'The answer is 91'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '91'"}
{"id": "GSM8K_268_015248df44", "context": "", "options": [], "answer": "1375", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: He spent a total of $5 x 50 = $250 for the newspaper ads.; sent2 & sent3 -> int2: He spent a total of $75 x 15 = $1125 for the television ads.; int1 & int2 -> int3: Therefore, the real estate agent spent $250 + $1125 = $1375 on buying all the ads.; int3 & sent4 -> int4: The answer is 1375;", "textual_logical_units": {"1": "Агент по недвижимости заплатил по 5 долларов на каждое объявление в газете", "2": "и по 75 долларов на каждую телевизионную рекламу.", "3": "Он оплатил 50 рекламных объявлений в газетах и 15 телереклам.", "4": "Сколько денег агент по недвижимости потратил на оплату всех рекламных объявлений?", "5": "На рекламу в газетах он потратил в общей сложности: 5 x 50 = 250 долларов.", "6": "Всего на телерекламу у него ушло: 75 x 15 = 1125 долларов.", "7": "Следовательно, на оплату всех рекламных объявлений агент по недвижимости потратил 250 долларов + 1125 долларов = 1375 долларов.", "8": "The answer is 1375"}, "human_translated": true, "code_input": "####\nfacts = [ 'Агент по недвижимости заплатил по 5\\xa0долларов на каждое объявление в газете',\n  'и по 75\\xa0долларов на каждую телевизионную рекламу.',\n  'Он оплатил 50\\xa0рекламных объявлений в газетах и 15\\xa0телереклам.']\nquestion = 'Сколько денег агент по недвижимости потратил на оплату всех рекламных объявлений?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Агент по недвижимости заплатил по 5\\xa0долларов на каждое объявление в газете', 'Он оплатил 50\\xa0рекламных объявлений в газетах и 15\\xa0телереклам.']\nnew_fact = infer_new_fact(selected) # 'На рекламу в газетах он потратил в общей сложности: 5\\xa0x\\xa050\\xa0= 250\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и по 75\\xa0долларов на каждую телевизионную рекламу.', 'Он оплатил 50\\xa0рекламных объявлений в газетах и 15\\xa0телереклам.']\nnew_fact = infer_new_fact(selected) # 'Всего на телерекламу у него ушло: 75\\xa0x\\xa015\\xa0= 1125\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На рекламу в газетах он потратил в общей сложности: 5\\xa0x\\xa050\\xa0= 250\\xa0долларов.', 'Всего на телерекламу у него ушло: 75\\xa0x\\xa015\\xa0= 1125\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, на оплату всех рекламных объявлений агент по недвижимости потратил 250\\xa0долларов\\xa0+ 1125\\xa0долларов\\xa0= 1375\\xa0долларов.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег агент по недвижимости потратил на оплату всех рекламных объявлений?', 'Следовательно, на оплату всех рекламных объявлений агент по недвижимости потратил 250\\xa0долларов\\xa0+ 1125\\xa0долларов\\xa0= 1375\\xa0долларов.']\nnew_fact = infer_new_fact(selected) # 'The answer is 1375'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1375'"}
{"id": "GSM8K_269_5e020deff1", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Golf Balls:16/2=8; int1 & sent3 -> int2: Blue Golf Balls:8/2=4 balls; int2 & sent4 -> int3: The answer is 4;", "textual_logical_units": {"1": "Жонглер умеет жонглировать 16 мячами.", "2": "Половина их них — мячи для гольфа.", "3": "Половина мячей для гольфа — синие.", "4": "Сколько у жонглера синих мячей для гольфа?", "5": "Всего у жонглера:16 / 2 = 8 мячей для гольфа.", "6": "Из них синих: 8 / 2 = 4 мяча.", "7": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['Жонглер умеет жонглировать 16\\xa0мячами.', 'Половина их них\\xa0— мячи для гольфа.', 'Половина мячей для гольфа\\xa0— синие.']\nquestion = 'Сколько у жонглера синих мячей для гольфа?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Жонглер умеет жонглировать 16\\xa0мячами.', 'Половина их них\\xa0— мячи для гольфа.']\nnew_fact = infer_new_fact(selected) # 'Всего у жонглера:16\\xa0/\\xa02\\xa0= 8\\xa0мячей для гольфа.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Половина мячей для гольфа\\xa0— синие.', 'Всего у жонглера:16\\xa0/\\xa02\\xa0= 8\\xa0мячей для гольфа.']\nnew_fact = infer_new_fact(selected) # 'Из них синих: 8\\xa0/\\xa02\\xa0= 4\\xa0мяча.'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько у жонглера синих мячей для гольфа?', 'Из них синих: 8\\xa0/\\xa02\\xa0= 4\\xa0мяча.']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
