{"id": "GSM8K_0_0c3da8c7d5", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.; int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.; int2 & sent5 -> int3: The answer is 18;", "textual_logical_units": {"1": "ジャネットのアヒルは 1 日に 16 個の卵を産みます。", "2": "彼女は毎朝朝食に 3 つ食べて", "3": "4 つは友達のために毎日マフィンを焼きます。", "4": "彼女はファーマーズマーケットで残りの新鮮なアヒルの卵を毎日 1 個あたり 2 ドルで売っています。", "5": "彼女はファーマーズマーケットで毎日いくら稼いでいますか？", "6": "ジャネットは 1 日に 16 - 3 -4 = 9 個のアヒルの卵を売っています。", "7": "彼女はファーマーズマーケットで毎日 9 * 2 = 18 ドル稼いでいます。", "8": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['ジャネットのアヒルは 1 日に 16 個の卵を産みます。', '彼女は毎朝朝食に 3 つ食べて', '4 つは友達のために毎日マフィンを焼きます。', '彼女はファーマーズマーケットで残りの新鮮なアヒルの卵を毎日 1 個あたり 2 ドルで売っています。']\nquestion = '彼女はファーマーズマーケットで毎日いくら稼いでいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジャネットのアヒルは 1 日に 16 個の卵を産みます。', '彼女は毎朝朝食に 3 つ食べて', '4 つは友達のために毎日マフィンを焼きます。', '彼女はファーマーズマーケットで残りの新鮮なアヒルの卵を毎日 1 個あたり 2 ドルで売っています。']\nnew_fact = infer_new_fact(selected) # 'ジャネットは 1 日に 16 - 3 -4 = 9 個のアヒルの卵を売っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はファーマーズマーケットで残りの新鮮なアヒルの卵を毎日 1 個あたり 2 ドルで売っています。', 'ジャネットは 1 日に 16 - 3 -4 = 9 個のアヒルの卵を売っています。']\nnew_fact = infer_new_fact(selected) # '彼女はファーマーズマーケットで毎日 9 * 2 = 18 ドル稼いでいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はファーマーズマーケットで毎日いくら稼いでいますか？', '彼女はファーマーズマーケットで毎日 9 * 2 = 18 ドル稼いでいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_1_e1817d7abd", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber; int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric; int2 & sent3 -> int3: The answer is 3;", "textual_logical_units": {"1": "ワンピースには青い繊維の束が 2 つと", "2": "その半分の白い繊維を使用します。", "3": "束は全部でいくつ必要ですか？", "4": "2/2=1 束の白い繊維が必要です", "5": "つまり、生地の総量は 2 + 1 = 3 束の繊維になります", "6": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['ワンピースには青い繊維の束が 2 つと', 'その半分の白い繊維を使用します。']\nquestion = '束は全部でいくつ必要ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ワンピースには青い繊維の束が 2 つと', 'その半分の白い繊維を使用します。']\nnew_fact = infer_new_fact(selected) # '2/2=1 束の白い繊維が必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['束は全部でいくつ必要ですか？', '2/2=1 束の白い繊維が必要です']\nnew_fact = infer_new_fact(selected) # 'つまり、生地の総量は 2 + 1 = 3 束の繊維になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['束は全部でいくつ必要ですか？', 'つまり、生地の総量は 2 + 1 = 3 束の繊維になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_2_ecffc3947e", "context": "", "options": [], "answer": "70000", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 4], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000; sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000; int2 -> int3: So the new value of the house is 120,000+80,000=$200,000; int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000; int4 & sent5 -> int5: The answer is 70000;", "textual_logical_units": {"1": "ジョシュはハウスフリッピングすることにしました。", "2": "彼は 8 万ドルで家を購入し、", "3": "その後、5 万ドルの修理費を投入します。", "4": "これにより、住宅の価値が 150% 上昇しました。", "5": "彼はどれくらいの利益を上げましたか？", "6": "家と修理の費用は 80,000 + 50,000 = 130,000 ドルになりました", "7": "彼は家の価値を 80,000 * 1.5=120,000 ドル高めました", "8": "つまり、家の新しい価値は 120,000 + 80,000 = 200,000 ドルです", "9": "つまり、彼は 200,000 - 130,000 = 70,000 ドルの利益を上げました", "10": "The answer is 70000"}, "human_translated": true, "code_input": "####\nfacts = ['ジョシュはハウスフリッピングすることにしました。', '彼は 8 万ドルで家を購入し、', 'その後、5 万ドルの修理費を投入します。', 'これにより、住宅の価値が 150% 上昇しました。']\nquestion = '彼はどれくらいの利益を上げましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 8 万ドルで家を購入し、', 'その後、5 万ドルの修理費を投入します。']\nnew_fact = infer_new_fact(selected) # '家と修理の費用は 80,000 + 50,000 = 130,000 ドルになりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 8 万ドルで家を購入し、', 'これにより、住宅の価値が 150% 上昇しました。']\nnew_fact = infer_new_fact(selected) # '彼は家の価値を 80,000 * 1.5=120,000 ドル高めました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は家の価値を 80,000 * 1.5=120,000 ドル高めました']\nnew_fact = infer_new_fact(selected) # 'つまり、家の新しい価値は 120,000 + 80,000 = 200,000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['家と修理の費用は 80,000 + 50,000 = 130,000 ドルになりました', '彼は家の価値を 80,000 * 1.5=120,000 ドル高めました', 'つまり、家の新しい価値は 120,000 + 80,000 = 200,000 ドルです']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 200,000 - 130,000 = 70,000 ドルの利益を上げました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はどれくらいの利益を上げましたか？', 'つまり、彼は 200,000 - 130,000 = 70,000 ドルの利益を上げました']\nnew_fact = infer_new_fact(selected) # 'The answer is 70000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70000'"}
{"id": "GSM8K_3_ac5e5c9d28", "context": "", "options": [], "answer": "540", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He sprints 3*3=9 times; int1 & sent2 -> int2: So he runs 9*60=540 meters; int2 & sent3 -> int3: The answer is 540;", "textual_logical_units": {"1": "ジェームズは週 3 回、短距離走を 3 回行うことにしました。", "2": "彼は 1 回の短距離走で 60 メートル走ります。", "3": "彼は週に合計何メートル走りますか？", "4": "彼は 3 * 3 = 9 回の短距離走を行います", "5": "つまり、彼は 9 * 60 = 540 メートル走ります", "6": "The answer is 540"}, "human_translated": true, "code_input": "####\nfacts = ['ジェームズは週 3 回、短距離走を 3 回行うことにしました。', '彼は 1 回の短距離走で 60 メートル走ります。']\nquestion = '彼は週に合計何メートル走りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジェームズは週 3 回、短距離走を 3 回行うことにしました。']\nnew_fact = infer_new_fact(selected) # '彼は 3 * 3 = 9 回の短距離走を行います'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 回の短距離走で 60 メートル走ります。', '彼は 3 * 3 = 9 回の短距離走を行います']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 9 * 60 = 540 メートル走ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は週に合計何メートル走りますか？', 'つまり、彼は 9 * 60 = 540 メートル走ります']\nnew_fact = infer_new_fact(selected) # 'The answer is 540'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '540'"}
{"id": "GSM8K_4_7bec3d29ea", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 5, 6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.; int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.; int2 & sent6 -> int3: The answer is 20;", "textual_logical_units": {"1": "ウェンディは毎日、種子、ミールワーム、ミミズ、健康維持に役立つ", "2": "野菜を含む混合鶏飼料を鶏 1 羽につき 3 カップ与えています。", "3": "彼女は鶏たちに 3回 に分けて餌を与えます。", "4": "朝、彼女は鶏の群れに 15 カップの餌を与えます。", "5": "午後、彼女は鶏にさらに 25 カップの餌を与えます。", "6": "ウェンディの鶏の群れに 20 羽がいる場合、その日の最後の食事で鶏に何杯の餌を与える必要がありますか？", "7": "それぞれの鶏が1日に 3 カップの飼料を食べる場合、20 羽の鶏には 1 日あたり 3 * 20 = 60 カップの飼料が必要になります。", "8": "彼女が群れに朝 15 カップ、午後 25 カップの餌を与える場合、最後の食事には 60-15-25 = 20 カップの鶏の餌が必要になります。", "9": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['ウェンディは毎日、種子、ミールワーム、ミミズ、健康維持に役立つ', '野菜を含む混合鶏飼料を鶏 1 羽につき 3 カップ与えています。', '彼女は鶏たちに 3回 に分けて餌を与えます。', '朝、彼女は鶏の群れに 15 カップの餌を与えます。', '午後、彼女は鶏にさらに 25 カップの餌を与えます。']\nquestion = 'ウェンディの鶏の群れに 20 羽がいる場合、その日の最後の食事で鶏に何杯の餌を与える必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ウェンディは毎日、種子、ミールワーム、ミミズ、健康維持に役立つ', 'ウェンディの鶏の群れに 20 羽がいる場合、その日の最後の食事で鶏に何杯の餌を与える必要がありますか？']\nnew_fact = infer_new_fact(selected) # 'それぞれの鶏が1日に 3 カップの飼料を食べる場合、20 羽の鶏には 1 日あたり 3 * 20 = 60 カップの飼料が必要になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['朝、彼女は鶏の群れに 15 カップの餌を与えます。', '午後、彼女は鶏にさらに 25 カップの餌を与えます。', 'ウェンディの鶏の群れに 20 羽がいる場合、その日の最後の食事で鶏に何杯の餌を与える必要がありますか？', 'それぞれの鶏が1日に 3 カップの飼料を食べる場合、20 羽の鶏には 1 日あたり 3 * 20 = 60 カップの飼料が必要になります。']\nnew_fact = infer_new_fact(selected) # '彼女が群れに朝 15 カップ、午後 25 カップの餌を与える場合、最後の食事には 60-15-25 = 20 カップの鶏の餌が必要になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ウェンディの鶏の群れに 20 羽がいる場合、その日の最後の食事で鶏に何杯の餌を与える必要がありますか？', '彼女が群れに朝 15 カップ、午後 25 カップの餌を与える場合、最後の食事には 60-15-25 = 20 カップの鶏の餌が必要になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_5_6f13335704", "context": "", "options": [], "answer": "64", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [2, 6], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.; sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.; int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.; int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.; int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.; int5 & sent4 -> int6: The answer is 64;", "textual_logical_units": {"1": "カイラーは新しいアパートのガラスを買いに店に行きました。", "2": "ガラスは 1 枚 5 ドルですが、2 枚目からは価格の 60% で買うことができます。", "3": "カイラーは 16 枚のガラスを買いたいと思っています。", "4": "彼は全部でいくら支払う必要がありますか？", "5": "ガラス 1 枚の割引価格は 60/100 * 5 = 3 ドルです。", "6": "2 枚目以降のガラスが安くなれば、カイラーは 16/2 = 8 枚の安いガラスを購入することになります。", "7": "つまり、安いガラスに対して、カイラーは 8 * 3 = 24 ドルを支払うことになります。", "8": "また、通常価格のガラスに対して、カイラーは 8 * 5 = 40 ドルを支払います。", "9": "つまり、カイラーは購入したいガラスに合計 24 + 40 = 64 ドルを支払う必要があります。", "10": "The answer is 64"}, "human_translated": true, "code_input": "####\nfacts = ['カイラーは新しいアパートのガラスを買いに店に行きました。', 'ガラスは 1 枚 5 ドルですが、2 枚目からは価格の 60% で買うことができます。', 'カイラーは 16 枚のガラスを買いたいと思っています。']\nquestion = '彼は全部でいくら支払う必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カイラーは新しいアパートのガラスを買いに店に行きました。', 'ガラスは 1 枚 5 ドルですが、2 枚目からは価格の 60% で買うことができます。']\nnew_fact = infer_new_fact(selected) # 'ガラス 1 枚の割引価格は 60/100 * 5 = 3 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ガラスは 1 枚 5 ドルですが、2 枚目からは価格の 60% で買うことができます。', 'カイラーは 16 枚のガラスを買いたいと思っています。']\nnew_fact = infer_new_fact(selected) # '2 枚目以降のガラスが安くなれば、カイラーは 16/2 = 8 枚の安いガラスを購入することになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ガラス 1 枚の割引価格は 60/100 * 5 = 3 ドルです。', '2 枚目以降のガラスが安くなれば、カイラーは 16/2 = 8 枚の安いガラスを購入することになります。']\nnew_fact = infer_new_fact(selected) # 'つまり、安いガラスに対して、カイラーは 8 * 3 = 24 ドルを支払うことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ガラスは 1 枚 5 ドルですが、2 枚目からは価格の 60% で買うことができます。', '2 枚目以降のガラスが安くなれば、カイラーは 16/2 = 8 枚の安いガラスを購入することになります。']\nnew_fact = infer_new_fact(selected) # 'また、通常価格のガラスに対して、カイラーは 8 * 5 = 40 ドルを支払います。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、安いガラスに対して、カイラーは 8 * 3 = 24 ドルを支払うことになります。', 'また、通常価格のガラスに対して、カイラーは 8 * 5 = 40 ドルを支払います。']\nnew_fact = infer_new_fact(selected) # 'つまり、カイラーは購入したいガラスに合計 24 + 40 = 64 ドルを支払う必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は全部でいくら支払う必要がありますか？', 'つまり、カイラーは購入したいガラスに合計 24 + 40 = 64 ドルを支払う必要があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 64'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '64'"}
{"id": "GSM8K_6_8c57a63641", "context": "", "options": [], "answer": "260", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep; int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep; int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep; int3 & sent4 -> int4: The answer is 260;", "textual_logical_units": {"1": "トゥールーズはチャールストンの 2 倍の数の羊を飼っています。", "2": "チャールストンはシアトルの 4 倍の数の羊を飼っています。", "3": "シアトルに羊が 20 匹いる場合、トゥールーズ、チャールストン、", "4": "シアトルには合計何匹の羊がいますか？", "5": "シアトルに 20 匹の羊がいる場合、チャールストンには 4 * 20 匹の羊 = 80 匹の羊がいます", "6": "トゥールーズにはチャールストンの 2 倍の数の羊がいます。つまり、2 * 80 匹の羊 = 160 匹の羊がいます", "7": "合計で、3 人には 20 匹の羊 + 160 匹の羊 + 80 匹の羊 = 260 匹の羊がいます", "8": "The answer is 260"}, "human_translated": true, "code_input": "####\nfacts = ['トゥールーズはチャールストンの 2 倍の数の羊を飼っています。', 'チャールストンはシアトルの 4 倍の数の羊を飼っています。', 'シアトルに羊が 20 匹いる場合、トゥールーズ、チャールストン、']\nquestion = 'シアトルには合計何匹の羊がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['チャールストンはシアトルの 4 倍の数の羊を飼っています。', 'シアトルには合計何匹の羊がいますか？']\nnew_fact = infer_new_fact(selected) # 'シアトルに 20 匹の羊がいる場合、チャールストンには 4 * 20 匹の羊 = 80 匹の羊がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トゥールーズはチャールストンの 2 倍の数の羊を飼っています。', 'シアトルに 20 匹の羊がいる場合、チャールストンには 4 * 20 匹の羊 = 80 匹の羊がいます']\nnew_fact = infer_new_fact(selected) # 'トゥールーズにはチャールストンの 2 倍の数の羊がいます。つまり、2 * 80 匹の羊 = 160 匹の羊がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シアトルには合計何匹の羊がいますか？', 'シアトルに 20 匹の羊がいる場合、チャールストンには 4 * 20 匹の羊 = 80 匹の羊がいます', 'トゥールーズにはチャールストンの 2 倍の数の羊がいます。つまり、2 * 80 匹の羊 = 160 匹の羊がいます']\nnew_fact = infer_new_fact(selected) # '合計で、3 人には 20 匹の羊 + 160 匹の羊 + 80 匹の羊 = 260 匹の羊がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シアトルには合計何匹の羊がいますか？', '合計で、3 人には 20 匹の羊 + 160 匹の羊 + 80 匹の羊 = 260 匹の羊がいます']\nnew_fact = infer_new_fact(selected) # 'The answer is 260'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '260'"}
{"id": "GSM8K_7_ec85fd850b", "context": "", "options": [], "answer": "160", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [1, 2, 5], "consequent": 9}, {"antecedents": [4, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB; int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes; sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes; int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes; int4 & sent6 -> int5: The answer is 160;", "textual_logical_units": {"1": "カーラは 200 GB のファイルをダウンロードしています。", "2": "通常、彼女は毎分 2 GB をダウンロードできますが、", "3": "ダウンロードの 40% が完了すると、", "4": "Windows は、更新プログラムをインストールするために強制的に再起動します。これには 20 分かかります。", "5": "その後、カーラはダウンロードを最初からやり直す必要があります。", "6": "ファイルのダウンロードにはどのくらいの時間がかかりますか？", "7": "まず、ファイルの 40% に何ギガバイトが入っているかを調べます。 200 ギガバイト * 40% = 80 ギガバイト", "8": "次に、その数値をダウンロード速度で割って、Windows が再起動するまでの時間を求めます。 80 ギガバイト/2 ギガバイト/分 = 40 分", "9": "次に、再起動後にファイル全体をダウンロードする時間を調べます。 200 GB/2 GB/分 = 100 分", "10": "次に、ファイルの 40% をダウンロードする時間、ファイル全体をダウンロードする時間、Windows の更新を待つ時間を追加します。 40 分 + 100 分 + 20 分 = 160 分", "11": "The answer is 160"}, "human_translated": true, "code_input": "####\nfacts = [ 'カーラは 200 GB のファイルをダウンロードしています。',\n  '通常、彼女は毎分 2 GB をダウンロードできますが、',\n  'ダウンロードの 40% が完了すると、',\n  'Windows は、更新プログラムをインストールするために強制的に再起動します。これには 20 分かかります。',\n  'その後、カーラはダウンロードを最初からやり直す必要があります。']\nquestion = 'ファイルのダウンロードにはどのくらいの時間がかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カーラは 200 GB のファイルをダウンロードしています。', 'ダウンロードの 40% が完了すると、']\nnew_fact = infer_new_fact(selected) # 'まず、ファイルの 40% に何ギガバイトが入っているかを調べます。 200 ギガバイト * 40% = 80 ギガバイト'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['通常、彼女は毎分 2 GB をダウンロードできますが、', 'まず、ファイルの 40% に何ギガバイトが入っているかを調べます。 200 ギガバイト * 40% = 80 ギガバイト']\nnew_fact = infer_new_fact(selected) # '次に、その数値をダウンロード速度で割って、Windows が再起動するまでの時間を求めます。 80 ギガバイト/2 ギガバイト/分 = 40 分'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カーラは 200 GB のファイルをダウンロードしています。', '通常、彼女は毎分 2 GB をダウンロードできますが、', 'その後、カーラはダウンロードを最初からやり直す必要があります。']\nnew_fact = infer_new_fact(selected) # '次に、再起動後にファイル全体をダウンロードする時間を調べます。 200 GB/2 GB/分 = 100 分'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Windows は、更新プログラムをインストールするために強制的に再起動します。これには 20 分かかります。', '次に、その数値をダウンロード速度で割って、Windows が再起動するまでの時間を求めます。 80 ギガバイト/2 ギガバイト/分 = 40 分', '次に、再起動後にファイル全体をダウンロードする時間を調べます。 200 GB/2 GB/分 = 100 分']\nnew_fact = infer_new_fact(selected) # '次に、ファイルの 40% をダウンロードする時間、ファイル全体をダウンロードする時間、Windows の更新を待つ時間を追加します。 40 分 + 100 分 + 20 分 = 160 分'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ファイルのダウンロードにはどのくらいの時間がかかりますか？', '次に、ファイルの 40% をダウンロードする時間、ファイル全体をダウンロードする時間、Windows の更新を待つ時間を追加します。 40 分 + 100 分 + 20 分 = 160 分']\nnew_fact = infer_new_fact(selected) # 'The answer is 160'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '160'"}
{"id": "GSM8K_8_f8cdd58483", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [4], "consequent": 9}, {"antecedents": [5], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [6, 7, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home; sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours; sent4 -> int3: In half an hour he goes 30*.5=15 miles; sent5 -> int4: He then drives another 2-.5=1.5 hours; int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles; int3 & int5 -> int6: So he drove 120+15=135 miles; int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home; int7 & sent6 -> int8: The answer is 45;", "textual_logical_units": {"1": "ジョンは時速 96.56 キロメートルで 3 時間運転していますが、", "2": "家に大事なものを忘れていたのに気づいたので引き返します。", "3": "彼は 4 時間後に家に帰ろうとしますが、最初の 2 時間は交通渋滞に巻き込まれます。", "4": "彼は次の 30 分を時速 48.28 キロメートルで運転し、", "5": "残り 4 時間を時速 128.74 キロメートルで運転できるようにします。", "6": "この 4 時間後、彼は家からどれくらいの距離にいますか？", "7": "彼が引き返すとき、彼は家から 3 * 96.56 = 289.68 キロメートルの距離にいました", "8": "彼は最初の 4 時間で 4 - 2 = 2 時間しか運転できませんでした", "9": "彼は 30 分で 48.28 * .5 = 24.14 キロメートル走ります", "10": "その後、彼はさらに 2-.5 = 1.5 時間運転します。", "11": "その間に彼は 128.74 * 1.5 = 193.11 キロメートル走ります", "12": "つまり、彼は 193.12 + 24.14 = 217.26 キロメートル運転しました", "13": "つまり、彼は家から 289.68 - 217.26 = 72.42 キロメートルの距離にいます", "14": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジョンは時速 96.56 キロメートルで 3 時間運転していますが、',\n  '家に大事なものを忘れていたのに気づいたので引き返します。',\n  '彼は 4 時間後に家に帰ろうとしますが、最初の 2 時間は交通渋滞に巻き込まれます。',\n  '彼は次の 30 分を時速 48.28 キロメートルで運転し、',\n  '残り 4 時間を時速 128.74 キロメートルで運転できるようにします。']\nquestion = 'この 4 時間後、彼は家からどれくらいの距離にいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは時速 96.56 キロメートルで 3 時間運転していますが、', '家に大事なものを忘れていたのに気づいたので引き返します。']\nnew_fact = infer_new_fact(selected) # '彼が引き返すとき、彼は家から 3 * 96.56 = 289.68 キロメートルの距離にいました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 4 時間後に家に帰ろうとしますが、最初の 2 時間は交通渋滞に巻き込まれます。']\nnew_fact = infer_new_fact(selected) # '彼は最初の 4 時間で 4 - 2 = 2 時間しか運転できませんでした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は次の 30 分を時速 48.28 キロメートルで運転し、']\nnew_fact = infer_new_fact(selected) # '彼は 30 分で 48.28 * .5 = 24.14 キロメートル走ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残り 4 時間を時速 128.74 キロメートルで運転できるようにします。']\nnew_fact = infer_new_fact(selected) # 'その後、彼はさらに 2-.5 = 1.5 時間運転します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残り 4 時間を時速 128.74 キロメートルで運転できるようにします。', 'その後、彼はさらに 2-.5 = 1.5 時間運転します。']\nnew_fact = infer_new_fact(selected) # 'その間に彼は 128.74 * 1.5 = 193.11 キロメートル走ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 30 分で 48.28 * .5 = 24.14 キロメートル走ります', 'その間に彼は 128.74 * 1.5 = 193.11 キロメートル走ります']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 193.12 + 24.14 = 217.26 キロメートル運転しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この 4 時間後、彼は家からどれくらいの距離にいますか？', '彼が引き返すとき、彼は家から 3 * 96.56 = 289.68 キロメートルの距離にいました', 'つまり、彼は 193.12 + 24.14 = 217.26 キロメートル運転しました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は家から 289.68 - 217.26 = 72.42 キロメートルの距離にいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この 4 時間後、彼は家からどれくらいの距離にいますか？', 'つまり、彼は家から 289.68 - 217.26 = 72.42 キロメートルの距離にいます']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_9_81d0fa7c02", "context": "", "options": [], "answer": "460", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [4, 7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.; sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.; int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.; sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.; int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.; int5 & sent4 -> int6: The answer is 460;", "textual_logical_units": {"1": "イライザが毎週働く最初の 40 時間の時給は 10 ドルです。", "2": "また、通常の時給の 1.2 倍の残業代も受け取っています。", "3": "イライザが今週 45 時間働いた場合、", "4": "今週の彼女の収入はいくらですか？", "5": "イライザには 45 -40 = 5 時間の残業手当が支給されます。", "6": "彼女の残業手当の時給は 10 ドル x 1.2 = 12 ドルです。", "7": "つまり、イライザは残業代として 12 ドル × 5 ドル = 60 ドルを受け取ることになります。", "8": "彼女の通常の 1 週間の収入は 10 ドル x 40 = 400 ドルです。", "9": "したがって、イライザは今週の仕事に対して合計 400 ドル + 60 ドル= 460 ドルを受け取ります。", "10": "The answer is 460"}, "human_translated": true, "code_input": "####\nfacts = ['イライザが毎週働く最初の 40 時間の時給は 10 ドルです。', 'また、通常の時給の 1.2 倍の残業代も受け取っています。', 'イライザが今週 45 時間働いた場合、']\nquestion = '今週の彼女の収入はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['イライザが毎週働く最初の 40 時間の時給は 10 ドルです。', 'イライザが今週 45 時間働いた場合、']\nnew_fact = infer_new_fact(selected) # 'イライザには 45 -40 = 5 時間の残業手当が支給されます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['イライザが毎週働く最初の 40 時間の時給は 10 ドルです。', 'また、通常の時給の 1.2 倍の残業代も受け取っています。']\nnew_fact = infer_new_fact(selected) # '彼女の残業手当の時給は 10 ドル x 1.2 = 12 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['イライザには 45 -40 = 5 時間の残業手当が支給されます。', '彼女の残業手当の時給は 10 ドル x 1.2 = 12 ドルです。']\nnew_fact = infer_new_fact(selected) # 'つまり、イライザは残業代として 12 ドル × 5 ドル = 60 ドルを受け取ることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['イライザが毎週働く最初の 40 時間の時給は 10 ドルです。']\nnew_fact = infer_new_fact(selected) # '彼女の通常の 1 週間の収入は 10 ドル x 40 = 400 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今週の彼女の収入はいくらですか？', 'つまり、イライザは残業代として 12 ドル × 5 ドル = 60 ドルを受け取ることになります。', '彼女の通常の 1 週間の収入は 10 ドル x 40 = 400 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、イライザは今週の仕事に対して合計 400 ドル + 60 ドル= 460 ドルを受け取ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今週の彼女の収入はいくらですか？', 'したがって、イライザは今週の仕事に対して合計 400 ドル + 60 ドル= 460 ドルを受け取ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 460'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '460'"}
{"id": "GSM8K_10_35eaba6383", "context": "", "options": [], "answer": "366", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180; int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240; int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54; int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.; int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366; int5 & sent4 -> int6: The answer is 366;", "textual_logical_units": {"1": "新しいプログラムは、最初の月に 60 回ダウンロードされました。", "2": "2 か月目のダウンロード数は、1 か月目のダウンロード数の 3 倍でしたが、", "3": "3 か月目には 30% 減少しました。", "4": "3 か月間のプログラムのダウンロード数は合計で何回でしたか？", "5": "2 か月目のプログラムのダウンロード数は 3 * 60 = 180 回に増加しました", "6": "最初の 2 か月間のプログラムの総ダウンロード数は 180 + 60 = 240 回でした", "7": "3 か月目には、プログラムのダウンロード数が 30/100 * 180 = 54 回減少しました", "8": "3 か月目のダウンロード数は 180 - 54 = 126 回でした。", "9": "3 か月間のプログラムの総ダウンロード数は 126 + 240 = 366 回でした", "10": "The answer is 366"}, "human_translated": true, "code_input": "####\nfacts = ['新しいプログラムは、最初の月に 60 回ダウンロードされました。', '2 か月目のダウンロード数は、1 か月目のダウンロード数の 3 倍でしたが、', '3 か月目には 30% 減少しました。']\nquestion = '3 か月間のプログラムのダウンロード数は合計で何回でしたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['新しいプログラムは、最初の月に 60 回ダウンロードされました。', '2 か月目のダウンロード数は、1 か月目のダウンロード数の 3 倍でしたが、']\nnew_fact = infer_new_fact(selected) # '2 か月目のプログラムのダウンロード数は 3 * 60 = 180 回に増加しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['新しいプログラムは、最初の月に 60 回ダウンロードされました。', '2 か月目のプログラムのダウンロード数は 3 * 60 = 180 回に増加しました']\nnew_fact = infer_new_fact(selected) # '最初の 2 か月間のプログラムの総ダウンロード数は 180 + 60 = 240 回でした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 か月目には 30% 減少しました。', '2 か月目のプログラムのダウンロード数は 3 * 60 = 180 回に増加しました']\nnew_fact = infer_new_fact(selected) # '3 か月目には、プログラムのダウンロード数が 30/100 * 180 = 54 回減少しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 か月目のプログラムのダウンロード数は 3 * 60 = 180 回に増加しました', '3 か月目には、プログラムのダウンロード数が 30/100 * 180 = 54 回減少しました']\nnew_fact = infer_new_fact(selected) # '3 か月目のダウンロード数は 180 - 54 = 126 回でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 2 か月間のプログラムの総ダウンロード数は 180 + 60 = 240 回でした', '3 か月目のダウンロード数は 180 - 54 = 126 回でした。']\nnew_fact = infer_new_fact(selected) # '3 か月間のプログラムの総ダウンロード数は 126 + 240 = 366 回でした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 か月間のプログラムのダウンロード数は合計で何回でしたか？', '3 か月間のプログラムの総ダウンロード数は 126 + 240 = 366 回でした']\nnew_fact = infer_new_fact(selected) # 'The answer is 366'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '366'"}
{"id": "GSM8K_11_f765a410ff", "context": "", "options": [], "answer": "694", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [6, 7, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.; sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.; sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.; int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.; int4 & sent6 -> int5: The answer is 694;", "textual_logical_units": {"1": "トゥーラはパン屋に行って", "2": "いろいろな種類のペストリーを買いました。", "3": "彼女は 1 ダース 68 ドルのドーナツを 3 ダース、", "4": "1 ダース 80 ドルのミニカップケーキを 2 ダース、", "5": "1 ダース 55 ドルのミニチーズケーキを 6 ダース買いました。", "6": "総費用はいくらかかりましたか？", "7": "ドーナツの合計金額は、3 x 68 ドル = 204 ドルでした。", "8": "ミニカップケーキの合計金額は、2 x 80 ドル = 160 ドルでした。", "9": "ミニチーズケーキの合計金額は、6 x 55 ドル = 330 ドルでした。", "10": "したがって、トゥーラがペストリーに支払った合計金額は、204 ドル + 160 ドル + 330 ドル= 694 ドルでした。", "11": "The answer is 694"}, "human_translated": true, "code_input": "####\nfacts = ['トゥーラはパン屋に行って', 'いろいろな種類のペストリーを買いました。', '彼女は 1 ダース 68 ドルのドーナツを 3 ダース、', '1 ダース 80 ドルのミニカップケーキを 2 ダース、', '1 ダース 55 ドルのミニチーズケーキを 6 ダース買いました。']\nquestion = '総費用はいくらかかりましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は 1 ダース 68 ドルのドーナツを 3 ダース、']\nnew_fact = infer_new_fact(selected) # 'ドーナツの合計金額は、3 x 68 ドル = 204 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ダース 80 ドルのミニカップケーキを 2 ダース、']\nnew_fact = infer_new_fact(selected) # 'ミニカップケーキの合計金額は、2 x 80 ドル = 160 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ダース 55 ドルのミニチーズケーキを 6 ダース買いました。']\nnew_fact = infer_new_fact(selected) # 'ミニチーズケーキの合計金額は、6 x 55 ドル = 330 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['総費用はいくらかかりましたか？', 'ドーナツの合計金額は、3 x 68 ドル = 204 ドルでした。', 'ミニカップケーキの合計金額は、2 x 80 ドル = 160 ドルでした。', 'ミニチーズケーキの合計金額は、6 x 55 ドル = 330 ドルでした。']\nnew_fact = infer_new_fact(selected) # 'したがって、トゥーラがペストリーに支払った合計金額は、204 ドル + 160 ドル + 330 ドル= 694 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['総費用はいくらかかりましたか？', 'したがって、トゥーラがペストリーに支払った合計金額は、204 ドル + 160 ドル + 330 ドル= 694 ドルでした。']\nnew_fact = infer_new_fact(selected) # 'The answer is 694'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '694'"}
{"id": "GSM8K_12_b192b3e028", "context": "", "options": [], "answer": "13", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [2, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5; int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5; int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12; int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13; int4 & sent6 -> int5: The answer is 13;", "textual_logical_units": {"1": "カルロスはレモンの木を植えています。", "2": "木を植えるには 90 ドルかかります。", "3": "毎年 7 個のレモンが実り、", "4": "彼はそれを 1 個 1.5 ドルで売ることができます。", "5": "木に水をやり、肥料を与えるには年間 3 ドルかかります。", "6": "彼がレモンの木でお金を稼ぎ始めるまでには何年かかりますか？", "7": "7 x 1.5 = 10.5 なので、彼はレモンを売って毎年 10.5 ドル稼ぎます。", "8": "10.5 - 3 = 7.5 なので、彼はレモンの木で毎年 7.5 ドル稼ぎます。", "9": "90/7.5 = 12 なので、木から利益を得られるほど稼ぐには 12 年かかります", "10": "12 + 1 = 13 なので、彼は 13 年目に利益を得るでしょう。", "11": "The answer is 13"}, "human_translated": true, "code_input": "####\nfacts = ['カルロスはレモンの木を植えています。', '木を植えるには 90 ドルかかります。', '毎年 7 個のレモンが実り、', '彼はそれを 1 個 1.5 ドルで売ることができます。', '木に水をやり、肥料を与えるには年間 3 ドルかかります。']\nquestion = '彼がレモンの木でお金を稼ぎ始めるまでには何年かかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['毎年 7 個のレモンが実り、', '彼はそれを 1 個 1.5 ドルで売ることができます。']\nnew_fact = infer_new_fact(selected) # '7 x 1.5 = 10.5 なので、彼はレモンを売って毎年 10.5 ドル稼ぎます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['木に水をやり、肥料を与えるには年間 3 ドルかかります。', '7 x 1.5 = 10.5 なので、彼はレモンを売って毎年 10.5 ドル稼ぎます。']\nnew_fact = infer_new_fact(selected) # '10.5 - 3 = 7.5 なので、彼はレモンの木で毎年 7.5 ドル稼ぎます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['木を植えるには 90 ドルかかります。', '彼がレモンの木でお金を稼ぎ始めるまでには何年かかりますか？', '10.5 - 3 = 7.5 なので、彼はレモンの木で毎年 7.5 ドル稼ぎます。']\nnew_fact = infer_new_fact(selected) # '90/7.5 = 12 なので、木から利益を得られるほど稼ぐには 12 年かかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼がレモンの木でお金を稼ぎ始めるまでには何年かかりますか？', '90/7.5 = 12 なので、木から利益を得られるほど稼ぐには 12 年かかります']\nnew_fact = infer_new_fact(selected) # '12 + 1 = 13 なので、彼は 13 年目に利益を得るでしょう。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼がレモンの木でお金を稼ぎ始めるまでには何年かかりますか？', '12 + 1 = 13 なので、彼は 13 年目に利益を得るでしょう。']\nnew_fact = infer_new_fact(selected) # 'The answer is 13'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '13'"}
{"id": "GSM8K_13_bf283ac359", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10; int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12; int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18; int3 & sent6 -> int4: The answer is 18;", "textual_logical_units": {"1": "メラニーは訪問販売員です。", "2": "彼女は掃除機の 3 分の 1 を緑の家で売り、", "3": "さらに 2 つを赤い家で売り、", "4": "残りの半分をオレンジの家で売りました。", "5": "メラニーに掃除機が 5 台残っている場合、", "6": "始めは何台でしたか？", "7": "まず、残りの 5 台の掃除機に 2 を掛けて、メラニーがオレンジの家を訪れる前に何台持っていたかを求めます。 5 * 2 = 10", "8": "次に、2 を足して、赤い家に行く前に彼女が持っていた掃除機の数を算出します。 10 + 2 = 12", "9": "これで、2/3 * x = 12 であることがわかりました。x はメラニーの最初の掃除機の数です。方程式の各辺を 2/3 で割ると x を求めることができます。これにより x = 18 になります。", "10": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['メラニーは訪問販売員です。', '彼女は掃除機の 3 分の 1 を緑の家で売り、', 'さらに 2 つを赤い家で売り、', '残りの半分をオレンジの家で売りました。', 'メラニーに掃除機が 5 台残っている場合、']\nquestion = '始めは何台でしたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['残りの半分をオレンジの家で売りました。', 'メラニーに掃除機が 5 台残っている場合、']\nnew_fact = infer_new_fact(selected) # 'まず、残りの 5 台の掃除機に 2 を掛けて、メラニーがオレンジの家を訪れる前に何台持っていたかを求めます。 5 * 2 = 10'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['さらに 2 つを赤い家で売り、', 'まず、残りの 5 台の掃除機に 2 を掛けて、メラニーがオレンジの家を訪れる前に何台持っていたかを求めます。 5 * 2 = 10']\nnew_fact = infer_new_fact(selected) # '次に、2 を足して、赤い家に行く前に彼女が持っていた掃除機の数を算出します。 10 + 2 = 12'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は掃除機の 3 分の 1 を緑の家で売り、', '次に、2 を足して、赤い家に行く前に彼女が持っていた掃除機の数を算出します。 10 + 2 = 12']\nnew_fact = infer_new_fact(selected) # 'これで、2/3 * x = 12 であることがわかりました。x はメラニーの最初の掃除機の数です。方程式の各辺を 2/3 で割ると x を求めることができます。これにより x = 18 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['始めは何台でしたか？', 'これで、2/3 * x = 12 であることがわかりました。x はメラニーの最初の掃除機の数です。方程式の各辺を 2/3 で割ると x を求めることができます。これにより x = 18 になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_14_e601ee3b3e", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [1, 5, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.; int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.; int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.; int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.; int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.; int5 & sent5 -> int6: The answer is 60;", "textual_logical_units": {"1": "20 人の学生のダンスクラスでは、", "2": "20% がコンテンポラリーダンスに登録し、", "3": "残りの 25% がジャズダンスに登録し、", "4": "残りはヒップホップダンスに登録しました。", "5": "全学生の何パーセントがヒップホップダンスに登録しましたか？", "6": "コンテンポラリーダンスに登録した学生は 20 x 20/100 = 4 人です。", "7": "つまり、20 - 4 = 16 人の学生がジャズダンスまたはヒップホップダンスのどちらかに登録しています。", "8": "ジャズダンスに登録した学生は 16 x 25/100 = 4 人です。", "9": "したがって、16 - 4 = 12 人の学生がヒップホップダンスに登録しました。", "10": "これは全学生の 12/20 x 100% = 60% です。", "11": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['20 人の学生のダンスクラスでは、', '20% がコンテンポラリーダンスに登録し、', '残りの 25% がジャズダンスに登録し、', '残りはヒップホップダンスに登録しました。']\nquestion = '全学生の何パーセントがヒップホップダンスに登録しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['20 人の学生のダンスクラスでは、', '20% がコンテンポラリーダンスに登録し、']\nnew_fact = infer_new_fact(selected) # 'コンテンポラリーダンスに登録した学生は 20 x 20/100 = 4 人です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 25% がジャズダンスに登録し、', '残りはヒップホップダンスに登録しました。', 'コンテンポラリーダンスに登録した学生は 20 x 20/100 = 4 人です。']\nnew_fact = infer_new_fact(selected) # 'つまり、20 - 4 = 16 人の学生がジャズダンスまたはヒップホップダンスのどちらかに登録しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 25% がジャズダンスに登録し、', 'つまり、20 - 4 = 16 人の学生がジャズダンスまたはヒップホップダンスのどちらかに登録しています。']\nnew_fact = infer_new_fact(selected) # 'ジャズダンスに登録した学生は 16 x 25/100 = 4 人です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 25% がジャズダンスに登録し、', 'ジャズダンスに登録した学生は 16 x 25/100 = 4 人です。']\nnew_fact = infer_new_fact(selected) # 'したがって、16 - 4 = 12 人の学生がヒップホップダンスに登録しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 人の学生のダンスクラスでは、', '全学生の何パーセントがヒップホップダンスに登録しましたか？', 'したがって、16 - 4 = 12 人の学生がヒップホップダンスに登録しました。']\nnew_fact = infer_new_fact(selected) # 'これは全学生の 12/20 x 100% = 60% です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['全学生の何パーセントがヒップホップダンスに登録しましたか？', 'これは全学生の 12/20 x 100% = 60% です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_15_213dd01190", "context": "", "options": [], "answer": "125", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125; sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96; int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125; int3 & sent4 -> int4: The answer is 125;", "textual_logical_units": {"1": "あるマーチャントが、5,000 ドル相当のジュエリーと 8,000 ドル相当の電子機器という 2 つの購入プランのどちらかを選択したいと考えています。", "2": "彼の財務顧問は、ジュエリー市場は 2.5% 上昇し、電子機器市場は同月中に 1.2% 上昇すると予測しています。", "3": "マーチャントが、選択して今月末に利益を最大化したいと考えている場合、", "4": "利益はどのくらいになりますか？", "5": "彼がジュエリーを購入した場合、2.5% の利益を上げることになり、5000 ドル * (2.5/100) = 125 ドルになります", "6": "彼が電子機器を購入した場合、1.2% の利益を上げることになり、8000 ドル * (1.2/100) = 96ドルになります", "7": "125 ドル > 96 ドルなので、利益を最大化したい場合、彼はジュエリーの購入を選択し、それによって 125 ドルの利益を上げます。", "8": "The answer is 125"}, "human_translated": true, "code_input": "####\nfacts = [ 'あるマーチャントが、5,000 ドル相当のジュエリーと 8,000 ドル相当の電子機器という 2 つの購入プランのどちらかを選択したいと考えています。',\n  '彼の財務顧問は、ジュエリー市場は 2.5% 上昇し、電子機器市場は同月中に 1.2% 上昇すると予測しています。',\n  'マーチャントが、選択して今月末に利益を最大化したいと考えている場合、']\nquestion = '利益はどのくらいになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['あるマーチャントが、5,000 ドル相当のジュエリーと 8,000 ドル相当の電子機器という 2 つの購入プランのどちらかを選択したいと考えています。', '彼の財務顧問は、ジュエリー市場は 2.5% 上昇し、電子機器市場は同月中に 1.2% 上昇すると予測しています。']\nnew_fact = infer_new_fact(selected) # '彼がジュエリーを購入した場合、2.5% の利益を上げることになり、5000 ドル * (2.5/100) = 125 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['あるマーチャントが、5,000 ドル相当のジュエリーと 8,000 ドル相当の電子機器という 2 つの購入プランのどちらかを選択したいと考えています。', '彼の財務顧問は、ジュエリー市場は 2.5% 上昇し、電子機器市場は同月中に 1.2% 上昇すると予測しています。']\nnew_fact = infer_new_fact(selected) # '彼が電子機器を購入した場合、1.2% の利益を上げることになり、8000 ドル * (1.2/100) = 96ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マーチャントが、選択して今月末に利益を最大化したいと考えている場合、', '彼がジュエリーを購入した場合、2.5% の利益を上げることになり、5000 ドル * (2.5/100) = 125 ドルになります', '彼が電子機器を購入した場合、1.2% の利益を上げることになり、8000 ドル * (1.2/100) = 96ドルになります']\nnew_fact = infer_new_fact(selected) # '125 ドル > 96 ドルなので、利益を最大化したい場合、彼はジュエリーの購入を選択し、それによって 125 ドルの利益を上げます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['利益はどのくらいになりますか？', '125 ドル > 96 ドルなので、利益を最大化したい場合、彼はジュエリーの購入を選択し、それによって 125 ドルの利益を上げます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 125'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '125'"}
{"id": "GSM8K_16_ce6da24bec", "context": "", "options": [], "answer": "230", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.; sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.; int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles; int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train; int4 & sent4 -> int5: The answer is 230;", "textual_logical_units": {"1": "2 本の列車が同時にサンラファエルを出発します。", "2": "列車は西に向かって移動を始め、両方とも 128.74 キロメートルを移動します。", "3": "翌日、列車は 241.40 キロメートルにわたって北上します。", "4": "2 日間で各列車が走る距離はどれくらいですか？", "5": "列車は初日に 2 本の列車 * 128.74 キロメートル/列車 = 257.48 キロメートル走行しました。", "6": "また、2 日目には 241.40 キロメートル/列車 × 2 本の列車 = 482.80 キロメートル走行しました。", "7": "2 日間で走行した 2 本の列車の合計距離は 482.80 キロメートル + 257.48 キロメートル = 740.28 キロメートルです。", "8": "2 日間の平均距離は 740.28 キロメートル/2 本の列車 = 370.14 キロメートル/列車です", "9": "The answer is 230"}, "human_translated": true, "code_input": "####\nfacts = ['2 本の列車が同時にサンラファエルを出発します。', '列車は西に向かって移動を始め、両方とも 128.74 キロメートルを移動します。', '翌日、列車は 241.40 キロメートルにわたって北上します。']\nquestion = '2 日間で各列車が走る距離はどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['2 本の列車が同時にサンラファエルを出発します。', '列車は西に向かって移動を始め、両方とも 128.74 キロメートルを移動します。']\nnew_fact = infer_new_fact(selected) # '列車は初日に 2 本の列車 * 128.74 キロメートル/列車 = 257.48 キロメートル走行しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 本の列車が同時にサンラファエルを出発します。', '翌日、列車は 241.40 キロメートルにわたって北上します。']\nnew_fact = infer_new_fact(selected) # 'また、2 日目には 241.40 キロメートル/列車 × 2 本の列車 = 482.80 キロメートル走行しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['列車は初日に 2 本の列車 * 128.74 キロメートル/列車 = 257.48 キロメートル走行しました。', 'また、2 日目には 241.40 キロメートル/列車 × 2 本の列車 = 482.80 キロメートル走行しました。']\nnew_fact = infer_new_fact(selected) # '2 日間で走行した 2 本の列車の合計距離は 482.80 キロメートル + 257.48 キロメートル = 740.28 キロメートルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 日間で各列車が走る距離はどれくらいですか？', 'また、2 日目には 241.40 キロメートル/列車 × 2 本の列車 = 482.80 キロメートル走行しました。', '2 日間で走行した 2 本の列車の合計距離は 482.80 キロメートル + 257.48 キロメートル = 740.28 キロメートルです。']\nnew_fact = infer_new_fact(selected) # '2 日間の平均距離は 740.28 キロメートル/2 本の列車 = 370.14 キロメートル/列車です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 日間で各列車が走る距離はどれくらいですか？', '2 日間の平均距離は 740.28 キロメートル/2 本の列車 = 370.14 キロメートル/列車です']\nnew_fact = infer_new_fact(selected) # 'The answer is 230'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '230'"}
{"id": "GSM8K_17_db87bf5161", "context": "", "options": [], "answer": "57500", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 6}, {"antecedents": [2, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week; sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week; int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week; int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500; int4 & sent5 -> int5: The answer is 57500;", "textual_logical_units": {"1": "ジルは教師として時給 20 ドル、", "2": "チアリーディングのコーチとして 30 ドルを受け取ります。", "3": "彼女が 1 年で 50 週間、", "4": "教師として週 35 時間、", "5": "コーチとして週 15 時間働いた場合、年収はいくらになりますか？", "6": "まず、ジルが教師として 1 週間に稼ぐ合計金額を求めます。1 時間あたり 20 ドル * 35 時間/週 = 700 ドル/週です", "7": "次に、ジルがコーチとして 1 週間に稼ぐ合計金額を求めます。1 時間あたり 30 ドル * 15 時間/週 = 450 ドル/週です", "8": "次に、これら 2 つの金額を足して、ジルが 1 週間に稼ぐ合計金額を求めます。700 ドル/週 + 450 ドル/週 = 1,150 ドル/週です", "9": "次に、その数値にジルが 1 年間で働く週数を掛けて、彼女の年収を求めます。週 1,150 ドル* 50 週/年 = 57,500 ドルです", "10": "The answer is 57500"}, "human_translated": true, "code_input": "####\nfacts = ['ジルは教師として時給 20 ドル、', 'チアリーディングのコーチとして 30 ドルを受け取ります。', '彼女が 1 年で 50 週間、', '教師として週 35 時間、']\nquestion = 'コーチとして週 15 時間働いた場合、年収はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジルは教師として時給 20 ドル、', '教師として週 35 時間、']\nnew_fact = infer_new_fact(selected) # 'まず、ジルが教師として 1 週間に稼ぐ合計金額を求めます。1 時間あたり 20 ドル * 35 時間/週 = 700 ドル/週です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チアリーディングのコーチとして 30 ドルを受け取ります。', 'コーチとして週 15 時間働いた場合、年収はいくらになりますか？']\nnew_fact = infer_new_fact(selected) # '次に、ジルがコーチとして 1 週間に稼ぐ合計金額を求めます。1 時間あたり 30 ドル * 15 時間/週 = 450 ドル/週です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、ジルが教師として 1 週間に稼ぐ合計金額を求めます。1 時間あたり 20 ドル * 35 時間/週 = 700 ドル/週です', '次に、ジルがコーチとして 1 週間に稼ぐ合計金額を求めます。1 時間あたり 30 ドル * 15 時間/週 = 450 ドル/週です']\nnew_fact = infer_new_fact(selected) # '次に、これら 2 つの金額を足して、ジルが 1 週間に稼ぐ合計金額を求めます。700 ドル/週 + 450 ドル/週 = 1,150 ドル/週です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が 1 年で 50 週間、', '次に、これら 2 つの金額を足して、ジルが 1 週間に稼ぐ合計金額を求めます。700 ドル/週 + 450 ドル/週 = 1,150 ドル/週です']\nnew_fact = infer_new_fact(selected) # '次に、その数値にジルが 1 年間で働く週数を掛けて、彼女の年収を求めます。週 1,150 ドル* 50 週/年 = 57,500 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['コーチとして週 15 時間働いた場合、年収はいくらになりますか？', '次に、その数値にジルが 1 年間で働く週数を掛けて、彼女の年収を求めます。週 1,150 ドル* 50 週/年 = 57,500 ドルです']\nnew_fact = infer_new_fact(selected) # 'The answer is 57500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '57500'"}
{"id": "GSM8K_18_18856591b9", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week; int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs; int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs; int3 & sent2 -> int4: The answer is 7;", "textual_logical_units": {"1": "クレアは毎朝朝食に卵 3 個分のオムレツを作ります。", "2": "彼女は 4 週間で何十個の卵を食べますか？", "3": "彼女は毎日 3 個の卵を食べますが、1 週間は 7 日なので、週に 3 * 7 = 21 個の卵を食べます", "4": "4 週間後、彼女は 4 * 21 = 84 個の卵を食べたことになります", "5": "1 ダースに 12 個の卵が入っていて、彼女は 84 個の卵を食べるので、84/12 = 7 ダースの卵になります", "6": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = ['クレアは毎朝朝食に卵 3 個分のオムレツを作ります。']\nquestion = '彼女は 4 週間で何十個の卵を食べますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['クレアは毎朝朝食に卵 3 個分のオムレツを作ります。']\nnew_fact = infer_new_fact(selected) # '彼女は毎日 3 個の卵を食べますが、1 週間は 7 日なので、週に 3 * 7 = 21 個の卵を食べます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 4 週間で何十個の卵を食べますか？', '彼女は毎日 3 個の卵を食べますが、1 週間は 7 日なので、週に 3 * 7 = 21 個の卵を食べます']\nnew_fact = infer_new_fact(selected) # '4 週間後、彼女は 4 * 21 = 84 個の卵を食べたことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 4 週間で何十個の卵を食べますか？', '4 週間後、彼女は 4 * 21 = 84 個の卵を食べたことになります']\nnew_fact = infer_new_fact(selected) # '1 ダースに 12 個の卵が入っていて、彼女は 84 個の卵を食べるので、84/12 = 7 ダースの卵になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 4 週間で何十個の卵を食べますか？', '1 ダースに 12 個の卵が入っていて、彼女は 84 個の卵を食べるので、84/12 = 7 ダースの卵になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_19_c5a60611f6", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [2, 3, 6], "consequent": 7}, {"antecedents": [1, 2, 3], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours; int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour; sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles; int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph; int4 & sent5 -> int5: The answer is 6;", "textual_logical_units": {"1": "マリッサは 19.31 キロメートルのトレイルをハイキングしています。", "2": "彼女は最初の 6.43 キロメートルを歩くのに 1 時間かかり、", "3": "あと 1 時間で次の 3.21 キロメートルを歩きます。", "4": "彼女が平均速度を時速 6.43 キロメートルにしたい場合、", "5": "残りの距離を歩くのに必要な速度 (キロメートル/時) はどれくらいですか？", "6": "まず、距離を速度で割って、19.31 キロメートルのトレイルを 6.43 キロメートル/時でハイキングするのにかかる時間を計算します。 19.31 キロメートル/時速 6.43 キロメートル = 3 時間", "7": "次に、マリッサがすでに歩いた時間を引いて、残りの時間を求めます。 3 時間 - 1 時間 - 1 時間 = 1 時間", "8": "次に、合計距離からすでに移動した距離を引いて、どれくらいの距離が残っているかを計算します。 19.31 キロメートル - 6.43 キロメートル - 3.21 キロメートル = 9.67 キロメートル", "9": "次に、残りの距離を残りの時間で割って、マリッサが移動しなければならない速度 (キロメートル/時) を求めます。 9.67 キロメートル/1 時間 = 9.67 キロメートル/時", "10": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['マリッサは 19.31 キロメートルのトレイルをハイキングしています。', '彼女は最初の 6.43 キロメートルを歩くのに 1 時間かかり、', 'あと 1 時間で次の 3.21 キロメートルを歩きます。', '彼女が平均速度を時速 6.43 キロメートルにしたい場合、']\nquestion = '残りの距離を歩くのに必要な速度 (キロメートル/時) はどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マリッサは 19.31 キロメートルのトレイルをハイキングしています。', '彼女は最初の 6.43 キロメートルを歩くのに 1 時間かかり、']\nnew_fact = infer_new_fact(selected) # 'まず、距離を速度で割って、19.31 キロメートルのトレイルを 6.43 キロメートル/時でハイキングするのにかかる時間を計算します。 19.31 キロメートル/時速 6.43 キロメートル = 3 時間'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は最初の 6.43 キロメートルを歩くのに 1 時間かかり、', 'あと 1 時間で次の 3.21 キロメートルを歩きます。', 'まず、距離を速度で割って、19.31 キロメートルのトレイルを 6.43 キロメートル/時でハイキングするのにかかる時間を計算します。 19.31 キロメートル/時速 6.43 キロメートル = 3 時間']\nnew_fact = infer_new_fact(selected) # '次に、マリッサがすでに歩いた時間を引いて、残りの時間を求めます。 3 時間 - 1 時間 - 1 時間 = 1 時間'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マリッサは 19.31 キロメートルのトレイルをハイキングしています。', '彼女は最初の 6.43 キロメートルを歩くのに 1 時間かかり、', 'あと 1 時間で次の 3.21 キロメートルを歩きます。']\nnew_fact = infer_new_fact(selected) # '次に、合計距離からすでに移動した距離を引いて、どれくらいの距離が残っているかを計算します。 19.31 キロメートル - 6.43 キロメートル - 3.21 キロメートル = 9.67 キロメートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの距離を歩くのに必要な速度 (キロメートル/時) はどれくらいですか？', '次に、合計距離からすでに移動した距離を引いて、どれくらいの距離が残っているかを計算します。 19.31 キロメートル - 6.43 キロメートル - 3.21 キロメートル = 9.67 キロメートル']\nnew_fact = infer_new_fact(selected) # '次に、残りの距離を残りの時間で割って、マリッサが移動しなければならない速度 (キロメートル/時) を求めます。 9.67 キロメートル/1 時間 = 9.67 キロメートル/時'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの距離を歩くのに必要な速度 (キロメートル/時) はどれくらいですか？', '次に、残りの距離を残りの時間で割って、マリッサが移動しなければならない速度 (キロメートル/時) を求めます。 9.67 キロメートル/1 時間 = 9.67 キロメートル/時']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_20_ea9cd7843f", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [1, 4], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.; sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.; int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.; int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.; int4 & sent5 -> int5: The answer is 15;", "textual_logical_units": {"1": "3 分の 2 が水であるオレンジドリンクが 10 リットルあり、", "2": "これを 5 分の 3 が水である 15 リットルのパイナップルドリンクに加えたいと思っています。", "3": "しかし注ぐときに、", "4": "オレンジドリンクを 1 リットルこぼしてしまいました。", "5": "残りの 24 リットルにはどのくらいの水が入っていますか？", "6": "15 リットルのパイナップルドリンクには、15 x 3/5 = 9 リットルの水が入っています。", "7": "1 リットルのオレンジドリンクをこぼした後、10 - 1 = 9 リットルのオレンジドリンクが残りました。", "8": "9 リットルのうち、9 x 2/3 = 6 リットルは水です。", "9": "したがって、24 リットルの中に入っている水は合計 9 + 6 = 15 リットルです。", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['3 分の 2 が水であるオレンジドリンクが 10 リットルあり、', 'これを 5 分の 3 が水である 15 リットルのパイナップルドリンクに加えたいと思っています。', 'しかし注ぐときに、', 'オレンジドリンクを 1 リットルこぼしてしまいました。']\nquestion = '残りの 24 リットルにはどのくらいの水が入っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['これを 5 分の 3 が水である 15 リットルのパイナップルドリンクに加えたいと思っています。']\nnew_fact = infer_new_fact(selected) # '15 リットルのパイナップルドリンクには、15 x 3/5 = 9 リットルの水が入っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 分の 2 が水であるオレンジドリンクが 10 リットルあり、', 'オレンジドリンクを 1 リットルこぼしてしまいました。']\nnew_fact = infer_new_fact(selected) # '1 リットルのオレンジドリンクをこぼした後、10 - 1 = 9 リットルのオレンジドリンクが残りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 分の 2 が水であるオレンジドリンクが 10 リットルあり、', '1 リットルのオレンジドリンクをこぼした後、10 - 1 = 9 リットルのオレンジドリンクが残りました。']\nnew_fact = infer_new_fact(selected) # '9 リットルのうち、9 x 2/3 = 6 リットルは水です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 24 リットルにはどのくらいの水が入っていますか？', '15 リットルのパイナップルドリンクには、15 x 3/5 = 9 リットルの水が入っています。', '9 リットルのうち、9 x 2/3 = 6 リットルは水です。']\nnew_fact = infer_new_fact(selected) # 'したがって、24 リットルの中に入っている水は合計 9 + 6 = 15 リットルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 24 リットルにはどのくらいの水が入っていますか？', 'したがって、24 リットルの中に入っている水は合計 9 + 6 = 15 リットルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_21_6858311ee4", "context": "", "options": [], "answer": "14", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.; int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.; int2 & sent5 -> int3: The answer is 14;", "textual_logical_units": {"1": "レイモンドとサマンサはいとこです。", "2": "レイモンドはサマンサより 6 年前に生まれました。", "3": "レイモンドには 23 歳の息子がいました。", "4": "サマンサが今 31 歳なら", "5": "レイモンドの息子は何年前に生まれましたか？", "6": "レイモンドの息子が生まれたとき、サマンサは 23 - 6 = 17 歳でした。", "7": "したがって、レイモンドの息子が生まれたのは 31 - 17 = 14 年前になります。", "8": "The answer is 14"}, "human_translated": true, "code_input": "####\nfacts = ['レイモンドとサマンサはいとこです。', 'レイモンドはサマンサより 6 年前に生まれました。', 'レイモンドには 23 歳の息子がいました。', 'サマンサが今 31 歳なら']\nquestion = 'レイモンドの息子は何年前に生まれましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['レイモンドはサマンサより 6 年前に生まれました。', 'レイモンドには 23 歳の息子がいました。']\nnew_fact = infer_new_fact(selected) # 'レイモンドの息子が生まれたとき、サマンサは 23 - 6 = 17 歳でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サマンサが今 31 歳なら', 'レイモンドの息子は何年前に生まれましたか？', 'レイモンドの息子が生まれたとき、サマンサは 23 - 6 = 17 歳でした。']\nnew_fact = infer_new_fact(selected) # 'したがって、レイモンドの息子が生まれたのは 31 - 17 = 14 年前になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['レイモンドの息子は何年前に生まれましたか？', 'したがって、レイモンドの息子が生まれたのは 31 - 17 = 14 年前になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 14'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '14'"}
{"id": "GSM8K_22_b2e7b4eecc", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [5, 6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.; sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.; int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.; int3 & sent6 -> int4: The answer is 7;", "textual_logical_units": {"1": "ビリーは DVD を売っています。", "2": "火曜日、彼には 8 人の客が来ます。", "3": "彼の最初の 3 人の客は、それぞれ 1 枚ずつ DVD を購入します。", "4": "彼の次の 2 人の客は、それぞれ 2 枚ずつ DVD を購入します。", "5": "彼の最後の 3 人の客は、DVD を一切購入しません。", "6": "ビリーは火曜日に何枚の DVD を売りましたか？", "7": "彼の最初の 3 人の客は、3 枚 * 1 = 3 枚の DVD を購入します。", "8": "彼の次の 2 人の客は、2 * 2 = 4 枚の DVD を購入します。", "9": "彼は合計で 3 + 4 + 0 = 7 枚の DVD を売ります。", "10": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = ['ビリーは DVD を売っています。', '火曜日、彼には 8 人の客が来ます。', '彼の最初の 3 人の客は、それぞれ 1 枚ずつ DVD を購入します。', '彼の次の 2 人の客は、それぞれ 2 枚ずつ DVD を購入します。', '彼の最後の 3 人の客は、DVD を一切購入しません。']\nquestion = 'ビリーは火曜日に何枚の DVD を売りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼の最初の 3 人の客は、それぞれ 1 枚ずつ DVD を購入します。']\nnew_fact = infer_new_fact(selected) # '彼の最初の 3 人の客は、3 枚 * 1 = 3 枚の DVD を購入します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼の次の 2 人の客は、それぞれ 2 枚ずつ DVD を購入します。']\nnew_fact = infer_new_fact(selected) # '彼の次の 2 人の客は、2 * 2 = 4 枚の DVD を購入します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼の最後の 3 人の客は、DVD を一切購入しません。', 'ビリーは火曜日に何枚の DVD を売りましたか？', '彼の最初の 3 人の客は、3 枚 * 1 = 3 枚の DVD を購入します。', '彼の次の 2 人の客は、2 * 2 = 4 枚の DVD を購入します。']\nnew_fact = infer_new_fact(selected) # '彼は合計で 3 + 4 + 0 = 7 枚の DVD を売ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビリーは火曜日に何枚の DVD を売りましたか？', '彼は合計で 3 + 4 + 0 = 7 枚の DVD を売ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_23_ddd8cf9c35", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent2 -> int1: The candle burns for 5 - 1 = 4 hours.; int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.; int2 & sent2 -> int3: The answer is 8;", "textual_logical_units": {"1": "ろうそくを燃やすと 1 時間に 2 センチずつ溶けます。", "2": "午後 1 時から午後 5 時まで燃やした後、ろうそくは何センチ短くなりますか？", "3": "ろうそくは 5 - 1 = 4 時間燃えます。", "4": "したがって、ろうそくは 2 * 4 = 8 センチ短くなります。", "5": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['ろうそくを燃やすと 1 時間に 2 センチずつ溶けます。']\nquestion = '午後 1 時から午後 5 時まで燃やした後、ろうそくは何センチ短くなりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['午後 1 時から午後 5 時まで燃やした後、ろうそくは何センチ短くなりますか？']\nnew_fact = infer_new_fact(selected) # 'ろうそくは 5 - 1 = 4 時間燃えます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ろうそくを燃やすと 1 時間に 2 センチずつ溶けます。', 'ろうそくは 5 - 1 = 4 時間燃えます。']\nnew_fact = infer_new_fact(selected) # 'したがって、ろうそくは 2 * 4 = 8 センチ短くなります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['午後 1 時から午後 5 時まで燃やした後、ろうそくは何センチ短くなりますか？', 'したがって、ろうそくは 2 * 4 = 8 センチ短くなります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_24_18a7cbe01d", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.; int1 -> int2: Combining like terms, we get .75X = $19.50; int2 -> int3: Dividing both sides by .75, we get X = $26.; int3 & sent3 -> int4: The answer is 26;", "textual_logical_units": {"1": "カイルは昨年のベストセラーの本を 19.50 ドルで購入しました。", "2": "これは元の価格から 25% 割引されています。", "3": "本の元の価格はいくらでしたか？", "4": "X を本の元の価格とします。割引後の価格は X - X * 25% = 19.50 ドルです。", "5": "同類項を組み合わせると、0.75X = 19.50 ドルになります", "6": "両方を 0.75 で割ると、X = 26 ドルになります。", "7": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = ['カイルは昨年のベストセラーの本を 19.50 ドルで購入しました。', 'これは元の価格から 25% 割引されています。']\nquestion = '本の元の価格はいくらでしたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カイルは昨年のベストセラーの本を 19.50 ドルで購入しました。', 'これは元の価格から 25% 割引されています。', '本の元の価格はいくらでしたか？']\nnew_fact = infer_new_fact(selected) # 'X を本の元の価格とします。割引後の価格は X - X * 25% = 19.50 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X を本の元の価格とします。割引後の価格は X - X * 25% = 19.50 ドルです。']\nnew_fact = infer_new_fact(selected) # '同類項を組み合わせると、0.75X = 19.50 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['同類項を組み合わせると、0.75X = 19.50 ドルになります']\nnew_fact = infer_new_fact(selected) # '両方を 0.75 で割ると、X = 26 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['本の元の価格はいくらでしたか？', '両方を 0.75 で割ると、X = 26 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_25_c2b12baadd", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [1, 7, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: Five packs of milk cost $3 x 5 = $15.; sent3 -> int2: Four apples cost $1.50 x 4 = $6.; int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.; int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.; int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.; int5 & sent6 -> int6: The answer is 2;", "textual_logical_units": {"1": "マリーは、12 ドルのチキンミール、", "2": "1 パック 3 ドルの牛乳 5 パック、", "3": "1 個 1.50 ドルのリンゴ 4 個、", "4": "それと箱入りのピザを 1 つ注文しました。", "5": "マリーは合計 50 ドルを支払いました。", "6": "1箱あたり 8.50 ドルとすると、マリーは何箱のピザを注文しましたか？", "7": "牛乳 5 パックの価格は 3 ドル x 5 = 15 ドルです。", "8": "リンゴ 4 個の価格は 1.50 ドル x 4 = 6 ドルです。", "9": "チキンミール、牛乳、リンゴの合計費用は、12 ドル + 15 ドル + 6 ドル = 33 ドルです。", "10": "したがって、箱入りのピザの価格は 50 ドル - 33 ドル = 17 ドルです。", "11": "よって、マリーは 17 ドル/8.50 ドル = ピザ 2 箱を注文しました。", "12": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = ['マリーは、12 ドルのチキンミール、', '1 パック 3 ドルの牛乳 5 パック、', '1 個 1.50 ドルのリンゴ 4 個、', 'それと箱入りのピザを 1 つ注文しました。', 'マリーは合計 50 ドルを支払いました。']\nquestion = '1箱あたり 8.50 ドルとすると、マリーは何箱のピザを注文しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 パック 3 ドルの牛乳 5 パック、']\nnew_fact = infer_new_fact(selected) # '牛乳 5 パックの価格は 3 ドル x 5 = 15 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 個 1.50 ドルのリンゴ 4 個、']\nnew_fact = infer_new_fact(selected) # 'リンゴ 4 個の価格は 1.50 ドル x 4 = 6 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マリーは、12 ドルのチキンミール、', '牛乳 5 パックの価格は 3 ドル x 5 = 15 ドルです。', 'リンゴ 4 個の価格は 1.50 ドル x 4 = 6 ドルです。']\nnew_fact = infer_new_fact(selected) # 'チキンミール、牛乳、リンゴの合計費用は、12 ドル + 15 ドル + 6 ドル = 33 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それと箱入りのピザを 1 つ注文しました。', 'マリーは合計 50 ドルを支払いました。', 'チキンミール、牛乳、リンゴの合計費用は、12 ドル + 15 ドル + 6 ドル = 33 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、箱入りのピザの価格は 50 ドル - 33 ドル = 17 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1箱あたり 8.50 ドルとすると、マリーは何箱のピザを注文しましたか？', 'したがって、箱入りのピザの価格は 50 ドル - 33 ドル = 17 ドルです。']\nnew_fact = infer_new_fact(selected) # 'よって、マリーは 17 ドル/8.50 ドル = ピザ 2 箱を注文しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1箱あたり 8.50 ドルとすると、マリーは何箱のピザを注文しましたか？', 'よって、マリーは 17 ドル/8.50 ドル = ピザ 2 箱を注文しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_26_ab1d75e849", "context": "", "options": [], "answer": "243", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243; int1 & sent6 -> int2: Mishka spent $243 on clothing.; int2 & sent6 -> int3: The answer is 243;", "textual_logical_units": {"1": "ミシュカはショートパンツを 3 足、パンツを 3 足、", "2": "靴を 3 足購入しました。", "3": "ショートパンツは 1 足 16.50 ドルです。", "4": "パンツは 1 足 22.50 ドルで", "5": "靴は 1 足 42 ドルです。", "6": "ミシュカはすべての衣料品に何ドル費やしましたか？", "7": "3 * (16.50 + 22.50 + 42) = 243 ドル", "8": "ミシュカは衣類に 243 ドルを費やしました。", "9": "The answer is 243"}, "human_translated": true, "code_input": "####\nfacts = ['ミシュカはショートパンツを 3 足、パンツを 3 足、', '靴を 3 足購入しました。', 'ショートパンツは 1 足 16.50 ドルです。', 'パンツは 1 足 22.50 ドルで', '靴は 1 足 42 ドルです。']\nquestion = 'ミシュカはすべての衣料品に何ドル費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ミシュカはショートパンツを 3 足、パンツを 3 足、', '靴を 3 足購入しました。', 'ショートパンツは 1 足 16.50 ドルです。', 'パンツは 1 足 22.50 ドルで', '靴は 1 足 42 ドルです。']\nnew_fact = infer_new_fact(selected) # '3 * (16.50 + 22.50 + 42) = 243 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ミシュカはすべての衣料品に何ドル費やしましたか？', '3 * (16.50 + 22.50 + 42) = 243 ドル']\nnew_fact = infer_new_fact(selected) # 'ミシュカは衣類に 243 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ミシュカはすべての衣料品に何ドル費やしましたか？', 'ミシュカは衣類に 243 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 243'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '243'"}
{"id": "GSM8K_27_05688c8d4e", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream; int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00; int2 & sent3 -> int3: The answer is 16;", "textual_logical_units": {"1": "シンシアは毎晩 1 人分のアイスクリームを食べます。", "2": "彼女は、1 カートンに 15 人分のアイスクリームが入った容器入りのアイスクリームを 1 カートン 4.00 ドルで購入します。", "3": "60 日後、彼女はアイスクリームにいくら費やすでしょうか？", "4": "アイスクリームの各容器には 15 人分が入っており、彼女は一晩に 1 人分を食べるので、60 日分では 60/15 = 4 つの容器のアイスクリームが必要になります", "5": "各カートンの価格が 4.00 ドルで、4 つの容器が必要な場合、4*4 = 16.00 ドルの費用がかかります。", "6": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['シンシアは毎晩 1 人分のアイスクリームを食べます。', '彼女は、1 カートンに 15 人分のアイスクリームが入った容器入りのアイスクリームを 1 カートン 4.00 ドルで購入します。']\nquestion = '60 日後、彼女はアイスクリームにいくら費やすでしょうか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['シンシアは毎晩 1 人分のアイスクリームを食べます。', '彼女は、1 カートンに 15 人分のアイスクリームが入った容器入りのアイスクリームを 1 カートン 4.00 ドルで購入します。', '60 日後、彼女はアイスクリームにいくら費やすでしょうか？']\nnew_fact = infer_new_fact(selected) # 'アイスクリームの各容器には 15 人分が入っており、彼女は一晩に 1 人分を食べるので、60 日分では 60/15 = 4 つの容器のアイスクリームが必要になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は、1 カートンに 15 人分のアイスクリームが入った容器入りのアイスクリームを 1 カートン 4.00 ドルで購入します。', 'アイスクリームの各容器には 15 人分が入っており、彼女は一晩に 1 人分を食べるので、60 日分では 60/15 = 4 つの容器のアイスクリームが必要になります']\nnew_fact = infer_new_fact(selected) # '各カートンの価格が 4.00 ドルで、4 つの容器が必要な場合、4*4 = 16.00 ドルの費用がかかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['60 日後、彼女はアイスクリームにいくら費やすでしょうか？', '各カートンの価格が 4.00 ドルで、4 つの容器が必要な場合、4*4 = 16.00 ドルの費用がかかります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_28_931b3848f4", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.; int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.; int2 & sent4 -> int3: The answer is 25;", "textual_logical_units": {"1": "ヘンリーは 96.56 キロメートルの自転車旅行中、2 回の休憩をとりました。", "2": "彼は 32.18 キロメートルを過ぎた頃に最初の休憩をとりました。", "3": "彼が 2 回目に休憩したのは、旅が終わる 24.14 キロメートル手前でした。", "4": "彼は最初の休憩と 2 回目の休憩の間に何キロメートル移動しましたか？", "5": "彼は休憩場所の間の距離を除くと、32.18 キロメートル + 24.14 キロメートル = 56.32 キロメートルを移動しました。", "6": "ヘンリーは、最初の休憩場所と 2 回目の休憩場所の間を 96.56 キロメートル - 56.32 キロメートル = 40.24 キロメートル移動しました。", "7": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = ['ヘンリーは 96.56 キロメートルの自転車旅行中、2 回の休憩をとりました。', '彼は 32.18 キロメートルを過ぎた頃に最初の休憩をとりました。', '彼が 2 回目に休憩したのは、旅が終わる 24.14 キロメートル手前でした。']\nquestion = '彼は最初の休憩と 2 回目の休憩の間に何キロメートル移動しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 32.18 キロメートルを過ぎた頃に最初の休憩をとりました。', '彼が 2 回目に休憩したのは、旅が終わる 24.14 キロメートル手前でした。']\nnew_fact = infer_new_fact(selected) # '彼は休憩場所の間の距離を除くと、32.18 キロメートル + 24.14 キロメートル = 56.32 キロメートルを移動しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヘンリーは 96.56 キロメートルの自転車旅行中、2 回の休憩をとりました。', '彼は休憩場所の間の距離を除くと、32.18 キロメートル + 24.14 キロメートル = 56.32 キロメートルを移動しました。']\nnew_fact = infer_new_fact(selected) # 'ヘンリーは、最初の休憩場所と 2 回目の休憩場所の間を 96.56 キロメートル - 56.32 キロメートル = 40.24 キロメートル移動しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は最初の休憩と 2 回目の休憩の間に何キロメートル移動しましたか？', 'ヘンリーは、最初の休憩場所と 2 回目の休憩場所の間を 96.56 キロメートル - 56.32 キロメートル = 40.24 キロメートル移動しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_29_bea1855c2f", "context": "", "options": [], "answer": "104", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 -> int1: The second pair of heels costs 33 * 2 = $66.; int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.; int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.; int3 & sent6 -> int4: The answer is 104;", "textual_logical_units": {"1": "グロリアは靴の買い物をしていると、靴の予算に合うブーツを見つけました。", "2": "しかし、彼女はブーツと、", "3": "ブーツよりも 5 ドル安い 2 足のハイヒールのどちらかを選ばなければなりません。", "4": "ヒール 1 足が 33 ドルで、", "5": "もう 1 足の価格がその 2 倍の場合、", "6": "ブーツは何ドルになりますか？", "7": "2 足目のヒールの価格は 33 * 2 = 66 ドルです。", "8": "2 つのヒールを合わせると 66 + 33 = 99 ドルかかります。", "9": "ブーツは 2 足のヒールを合わせた価格よりも 5 ドル高いので、ブーツの価格は 99 + 5 = 104 ドルです。", "10": "The answer is 104"}, "human_translated": true, "code_input": "####\nfacts = ['グロリアは靴の買い物をしていると、靴の予算に合うブーツを見つけました。', 'しかし、彼女はブーツと、', 'ブーツよりも 5 ドル安い 2 足のハイヒールのどちらかを選ばなければなりません。', 'ヒール 1 足が 33 ドルで、', 'もう 1 足の価格がその 2 倍の場合、']\nquestion = 'ブーツは何ドルになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ヒール 1 足が 33 ドルで、']\nnew_fact = infer_new_fact(selected) # '2 足目のヒールの価格は 33 * 2 = 66 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヒール 1 足が 33 ドルで、', 'もう 1 足の価格がその 2 倍の場合、', '2 足目のヒールの価格は 33 * 2 = 66 ドルです。']\nnew_fact = infer_new_fact(selected) # '2 つのヒールを合わせると 66 + 33 = 99 ドルかかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['しかし、彼女はブーツと、', 'ブーツよりも 5 ドル安い 2 足のハイヒールのどちらかを選ばなければなりません。', '2 つのヒールを合わせると 66 + 33 = 99 ドルかかります。']\nnew_fact = infer_new_fact(selected) # 'ブーツは 2 足のヒールを合わせた価格よりも 5 ドル高いので、ブーツの価格は 99 + 5 = 104 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブーツは何ドルになりますか？', 'ブーツは 2 足のヒールを合わせた価格よりも 5 ドル高いので、ブーツの価格は 99 + 5 = 104 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 104'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '104'"}
{"id": "GSM8K_30_d5513cdd8c", "context": "", "options": [], "answer": "109", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: The total ratio representing their ages is 7+11= 18; int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99; int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old; int3 & sent3 -> int4: The answer is 109;", "textual_logical_units": {"1": "ダレルとアレンの年齢比は 7:11 です。", "2": "現在の彼らの合計年齢を 162 歳として", "3": "今から 10 年後のアレンの年齢を計算してください。", "4": "彼らの年齢を表す比率の合計は 7 + 11 = 18 です", "5": "アレンの年齢を表す比率の割合は 11/18 なので、アレンの現在の年齢は 11/18 * 162 = 99 歳です", "6": "アレンが現在 99 歳の場合、10 年後には 99 + 10 = 109 歳になります", "7": "The answer is 109"}, "human_translated": true, "code_input": "####\nfacts = ['ダレルとアレンの年齢比は 7:11 です。', '現在の彼らの合計年齢を 162 歳として']\nquestion = '今から 10 年後のアレンの年齢を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ダレルとアレンの年齢比は 7:11 です。']\nnew_fact = infer_new_fact(selected) # '彼らの年齢を表す比率の合計は 7 + 11 = 18 です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['現在の彼らの合計年齢を 162 歳として', '彼らの年齢を表す比率の合計は 7 + 11 = 18 です']\nnew_fact = infer_new_fact(selected) # 'アレンの年齢を表す比率の割合は 11/18 なので、アレンの現在の年齢は 11/18 * 162 = 99 歳です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今から 10 年後のアレンの年齢を計算してください。', 'アレンの年齢を表す比率の割合は 11/18 なので、アレンの現在の年齢は 11/18 * 162 = 99 歳です']\nnew_fact = infer_new_fact(selected) # 'アレンが現在 99 歳の場合、10 年後には 99 + 10 = 109 歳になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今から 10 年後のアレンの年齢を計算してください。', 'アレンが現在 99 歳の場合、10 年後には 99 + 10 = 109 歳になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 109'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '109'"}
{"id": "GSM8K_31_e8508bec13", "context": "", "options": [], "answer": "80", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [3, 5], "consequent": 8}, {"antecedents": [3, 7, 8], "consequent": 9}, {"antecedents": [3, 7, 8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60; sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100; int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240; int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80; int4 & sent6 -> int5: The answer is 80;", "textual_logical_units": {"1": "ガンターは瓶の中のジェリービーンズを数えようとしています。", "2": "彼は友達に、瓶にいくつ入っていると思うか尋ねます。", "3": "1 人は 80 個と言います。", "4": "別の人は、最初の人の半分より 20 個多いと言います。", "5": "3 人目は 1 人目より 25% 多いと言います。", "6": "彼らの推測の平均は何個ですか？", "7": "2 人目は、20 + (80/2) = 60 なので 60 個と推測しました", "8": "3 人目は、80 x 1.25 = 100 なので 100 個と推測しました", "9": "80 + 60 + 100 = 240 なので、推測された合計数は 240 個です", "10": "240/3 = 80 なので、推測された個数の平均は 80 個です", "11": "The answer is 80"}, "human_translated": true, "code_input": "####\nfacts = ['ガンターは瓶の中のジェリービーンズを数えようとしています。', '彼は友達に、瓶にいくつ入っていると思うか尋ねます。', '1 人は 80 個と言います。', '別の人は、最初の人の半分より 20 個多いと言います。', '3 人目は 1 人目より 25% 多いと言います。']\nquestion = '彼らの推測の平均は何個ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 人は 80 個と言います。', '別の人は、最初の人の半分より 20 個多いと言います。']\nnew_fact = infer_new_fact(selected) # '2 人目は、20 + (80/2) = 60 なので 60 個と推測しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 人は 80 個と言います。', '3 人目は 1 人目より 25% 多いと言います。']\nnew_fact = infer_new_fact(selected) # '3 人目は、80 x 1.25 = 100 なので 100 個と推測しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 人は 80 個と言います。', '2 人目は、20 + (80/2) = 60 なので 60 個と推測しました', '3 人目は、80 x 1.25 = 100 なので 100 個と推測しました']\nnew_fact = infer_new_fact(selected) # '80 + 60 + 100 = 240 なので、推測された合計数は 240 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 人は 80 個と言います。', '2 人目は、20 + (80/2) = 60 なので 60 個と推測しました', '3 人目は、80 x 1.25 = 100 なので 100 個と推測しました', '80 + 60 + 100 = 240 なので、推測された合計数は 240 個です']\nnew_fact = infer_new_fact(selected) # '240/3 = 80 なので、推測された個数の平均は 80 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らの推測の平均は何個ですか？', '240/3 = 80 なので、推測された個数の平均は 80 個です']\nnew_fact = infer_new_fact(selected) # 'The answer is 80'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '80'"}
{"id": "GSM8K_32_89c164c5ae", "context": "", "options": [], "answer": "35", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He spends 10*.5=5 hours per day; int1 & sent4 -> int2: That means he spends 5*7=35 hours per week; int2 & sent4 -> int3: The answer is 35;", "textual_logical_units": {"1": "ジョンは 10 匹の犬の世話をしています。", "2": "それぞれの犬の散歩と世話に", "3": "1 日 0.5 時間かかります。", "4": "彼は犬の世話に週に何時間を費やしていますか？", "5": "彼は 1 日あたり 10 *.5 = 5 時間を費やしています", "6": "つまり、彼は週に 5 * 7 = 35 時間を費やしているということです", "7": "The answer is 35"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは 10 匹の犬の世話をしています。', 'それぞれの犬の散歩と世話に', '1 日 0.5 時間かかります。']\nquestion = '彼は犬の世話に週に何時間を費やしていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは 10 匹の犬の世話をしています。', 'それぞれの犬の散歩と世話に']\nnew_fact = infer_new_fact(selected) # '彼は 1 日あたり 10 *.5 = 5 時間を費やしています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は犬の世話に週に何時間を費やしていますか？', '彼は 1 日あたり 10 *.5 = 5 時間を費やしています']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 5 * 7 = 35 時間を費やしているということです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は犬の世話に週に何時間を費やしていますか？', 'つまり、彼は週に 5 * 7 = 35 時間を費やしているということです']\nnew_fact = infer_new_fact(selected) # 'The answer is 35'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '35'"}
{"id": "GSM8K_33_563617ecbf", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has; int1 & sent2 -> int2: Gretchen has x+30 gold coins.; int2 & sent1 -> int3: x+x+30=110; int3 -> int4: 2*x=80; int4 -> int5: x=40; int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins; int6 & sent3 -> int7: The answer is 70;", "textual_logical_units": {"1": "グレッチェンはコインを 110 枚持っています。", "2": "金貨は銀貨より 30 枚多いです。", "3": "グレッチェンは何枚の金貨を持っていますか？", "4": "グレッチェンが持っている銀貨の数を x とします", "5": "グレッチェンは x + 30 枚の金貨を持っています。", "6": "x + x + 30 = 110", "7": "2 * x = 80", "8": "x = 40", "9": "グレッチェンは 40 + 30 = 70 枚の金貨を持っています", "10": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['グレッチェンはコインを 110 枚持っています。', '金貨は銀貨より 30 枚多いです。']\nquestion = 'グレッチェンは何枚の金貨を持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['グレッチェンはコインを 110 枚持っています。', '金貨は銀貨より 30 枚多いです。']\nnew_fact = infer_new_fact(selected) # 'グレッチェンが持っている銀貨の数を x とします'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['金貨は銀貨より 30 枚多いです。', 'グレッチェンが持っている銀貨の数を x とします']\nnew_fact = infer_new_fact(selected) # 'グレッチェンは x + 30 枚の金貨を持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グレッチェンはコインを 110 枚持っています。', 'グレッチェンは x + 30 枚の金貨を持っています。']\nnew_fact = infer_new_fact(selected) # 'x + x + 30 = 110'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x + x + 30 = 110']\nnew_fact = infer_new_fact(selected) # '2 * x = 80'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 * x = 80']\nnew_fact = infer_new_fact(selected) # 'x = 40'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['金貨は銀貨より 30 枚多いです。', 'グレッチェンは何枚の金貨を持っていますか？', 'x = 40']\nnew_fact = infer_new_fact(selected) # 'グレッチェンは 40 + 30 = 70 枚の金貨を持っています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グレッチェンは何枚の金貨を持っていますか？', 'グレッチェンは 40 + 30 = 70 枚の金貨を持っています']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_34_58622fd43b", "context": "", "options": [], "answer": "23", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20; int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.; int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.; int3 & sent4 -> int4: The answer is 23;", "textual_logical_units": {"1": "シボーンアーロンより 2 つ少ない宝石を持っています。", "2": "アーロンはレイモンドの宝石の半分より 5 つ多い宝石を持っています。", "3": "レイモンドが宝石を 40 個持っている場合、", "4": "シボーハンは宝石をいくつ持っていますか？", "5": "レイモンドの宝石の半分は 40/2 = 20 です", "6": "アーロンはレイモンドの宝石の半分よりも 5 つ多い宝石を持っているので、20 + 5 = 25 個の宝石を持っていることになります。", "7": "シボーンの宝石がアーロンより 2 つ少ない場合、25 - 2 = 23 個の宝石を持っていることになります。", "8": "The answer is 23"}, "human_translated": true, "code_input": "####\nfacts = ['シボーンアーロンより 2 つ少ない宝石を持っています。', 'アーロンはレイモンドの宝石の半分より 5 つ多い宝石を持っています。', 'レイモンドが宝石を 40 個持っている場合、']\nquestion = 'シボーハンは宝石をいくつ持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['アーロンはレイモンドの宝石の半分より 5 つ多い宝石を持っています。', 'レイモンドが宝石を 40 個持っている場合、']\nnew_fact = infer_new_fact(selected) # 'レイモンドの宝石の半分は 40/2 = 20 です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アーロンはレイモンドの宝石の半分より 5 つ多い宝石を持っています。', 'レイモンドの宝石の半分は 40/2 = 20 です']\nnew_fact = infer_new_fact(selected) # 'アーロンはレイモンドの宝石の半分よりも 5 つ多い宝石を持っているので、20 + 5 = 25 個の宝石を持っていることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シボーンアーロンより 2 つ少ない宝石を持っています。', 'アーロンはレイモンドの宝石の半分よりも 5 つ多い宝石を持っているので、20 + 5 = 25 個の宝石を持っていることになります。']\nnew_fact = infer_new_fact(selected) # 'シボーンの宝石がアーロンより 2 つ少ない場合、25 - 2 = 23 個の宝石を持っていることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シボーハンは宝石をいくつ持っていますか？', 'シボーンの宝石がアーロンより 2 つ少ない場合、25 - 2 = 23 個の宝石を持っていることになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 23'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '23'"}
{"id": "GSM8K_35_9fe2535ed9", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [2, 5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes; int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes; int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes; int3 & sent5 -> int4: The answer is 9;", "textual_logical_units": {"1": "マイクは 40 分間卓球をします。", "2": "最初の 20 分で、彼は 4 ポイントを獲得しました。", "3": "次の 20 分で、", "4": "彼はさらに 25% 多く得点を獲得しました。", "5": "彼は合計何点を獲得しましたか？", "6": "彼は次の 20 分で 4 * .25 = 1 ポイントを追加しました", "7": "つまり、彼は次の 20 分間で 4 + 1 = 5 ポイントを獲得しました", "8": "つまり、彼は 40 分間で合計 4 + 5 = 9 ポイントを獲得しました", "9": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = ['マイクは 40 分間卓球をします。', '最初の 20 分で、彼は 4 ポイントを獲得しました。', '次の 20 分で、', '彼はさらに 25% 多く得点を獲得しました。']\nquestion = '彼は合計何点を獲得しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['最初の 20 分で、彼は 4 ポイントを獲得しました。', '次の 20 分で、', '彼はさらに 25% 多く得点を獲得しました。']\nnew_fact = infer_new_fact(selected) # '彼は次の 20 分で 4 * .25 = 1 ポイントを追加しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次の 20 分で、', '彼はさらに 25% 多く得点を獲得しました。', '彼は次の 20 分で 4 * .25 = 1 ポイントを追加しました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は次の 20 分間で 4 + 1 = 5 ポイントを獲得しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 20 分で、彼は 4 ポイントを獲得しました。', '彼は合計何点を獲得しましたか？', 'つまり、彼は次の 20 分間で 4 + 1 = 5 ポイントを獲得しました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 40 分間で合計 4 + 5 = 9 ポイントを獲得しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は合計何点を獲得しましたか？', 'つまり、彼は 40 分間で合計 4 + 5 = 9 ポイントを獲得しました']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_36_c91a135eb6", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts; int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs; int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt; int3 & sent3 -> int4: The answer is 75;", "textual_logical_units": {"1": "テリーは 1 日にヨーグルトを 2 個食べます。", "2": "現在、ヨーグルトは 4個 5.00 ドルで販売されています。", "3": "彼は 30 日間でヨーグルトにいくら費やしていますか？", "4": "彼は 1 日に 2 個のヨーグルトを食べるので、30 日分で 2 * 30 = 60 個のヨーグルトが必要になります", "5": "ヨーグルトは 4 ユニット 5.00 ドルで販売されており、彼は 60 個のヨーグルトを必要とするので、60/4 = 15 個入りが 4 パックになります", "6": "4 つのパックには 5.00 ドルずつかかり、4 パックが 15 個必要なので、ヨーグルトに 5 * 15 ドル = 75.00 ドルを費やすことになります", "7": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = ['テリーは 1 日にヨーグルトを 2 個食べます。', '現在、ヨーグルトは 4個 5.00 ドルで販売されています。']\nquestion = '彼は 30 日間でヨーグルトにいくら費やしていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['テリーは 1 日にヨーグルトを 2 個食べます。', '彼は 30 日間でヨーグルトにいくら費やしていますか？']\nnew_fact = infer_new_fact(selected) # '彼は 1 日に 2 個のヨーグルトを食べるので、30 日分で 2 * 30 = 60 個のヨーグルトが必要になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['現在、ヨーグルトは 4個 5.00 ドルで販売されています。', '彼は 1 日に 2 個のヨーグルトを食べるので、30 日分で 2 * 30 = 60 個のヨーグルトが必要になります']\nnew_fact = infer_new_fact(selected) # 'ヨーグルトは 4 ユニット 5.00 ドルで販売されており、彼は 60 個のヨーグルトを必要とするので、60/4 = 15 個入りが 4 パックになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 30 日間でヨーグルトにいくら費やしていますか？', 'ヨーグルトは 4 ユニット 5.00 ドルで販売されており、彼は 60 個のヨーグルトを必要とするので、60/4 = 15 個入りが 4 パックになります']\nnew_fact = infer_new_fact(selected) # '4 つのパックには 5.00 ドルずつかかり、4 パックが 15 個必要なので、ヨーグルトに 5 * 15 ドル = 75.00 ドルを費やすことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 30 日間でヨーグルトにいくら費やしていますか？', '4 つのパックには 5.00 ドルずつかかり、4 パックが 15 個必要なので、ヨーグルトに 5 * 15 ドル = 75.00 ドルを費やすことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_37_3afae2bcd4", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}, {"antecedents": [3, 6, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent5 -> int1: He spent $160 on video games because 8 x 20 = 160; int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165; int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165; int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2; int4 & sent6 -> int5: The answer is 2;", "textual_logical_units": {"1": "ジョンは自分のおもちゃを全部売り、", "2": "そのお金を使ってビデオゲームを買うつもりです。", "3": "彼は 13 個のレゴセットを持っていて、", "4": "それらをそれぞれ 15 ドルで売ります。", "5": "彼は最終的に 8 本のビデオゲームをそれぞれ 20 ドルで購入し、5 ドル残っています。", "6": "彼はまだいくつのレゴセットを持っていますか？", "7": "8 x 20 = 160 なので、彼はビデオゲームに 160 ドルを費やしました。", "8": "160 + 5 = 165 なので、彼は売却で 165 ドルを稼ぎました", "9": "11 x 15 = 165 なので、彼は 11 個のレゴセットを売ったことになります", "10": "13 - 11 = 2 なので、彼は残り 2 セット持っています", "11": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは自分のおもちゃを全部売り、', 'そのお金を使ってビデオゲームを買うつもりです。', '彼は 13 個のレゴセットを持っていて、', 'それらをそれぞれ 15 ドルで売ります。', '彼は最終的に 8 本のビデオゲームをそれぞれ 20 ドルで購入し、5 ドル残っています。']\nquestion = '彼はまだいくつのレゴセットを持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は最終的に 8 本のビデオゲームをそれぞれ 20 ドルで購入し、5 ドル残っています。']\nnew_fact = infer_new_fact(selected) # '8 x 20 = 160 なので、彼はビデオゲームに 160 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は最終的に 8 本のビデオゲームをそれぞれ 20 ドルで購入し、5 ドル残っています。', '8 x 20 = 160 なので、彼はビデオゲームに 160 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # '160 + 5 = 165 なので、彼は売却で 165 ドルを稼ぎました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 13 個のレゴセットを持っていて、', 'それらをそれぞれ 15 ドルで売ります。', '160 + 5 = 165 なので、彼は売却で 165 ドルを稼ぎました']\nnew_fact = infer_new_fact(selected) # '11 x 15 = 165 なので、彼は 11 個のレゴセットを売ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 13 個のレゴセットを持っていて、', '彼はまだいくつのレゴセットを持っていますか？', '11 x 15 = 165 なので、彼は 11 個のレゴセットを売ったことになります']\nnew_fact = infer_new_fact(selected) # '13 - 11 = 2 なので、彼は残り 2 セット持っています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はまだいくつのレゴセットを持っていますか？', '13 - 11 = 2 なので、彼は残り 2 セット持っています']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_38_c326316e50", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 6}, {"antecedents": [2], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent0 -> int1: He has 7-1=6 possible running days.; sent2 -> int2: He runs half of those so he runs 6/2=3 days.; sent3 & sent4 -> int3: So for two days, he runs 3/2=1.5 hours.; int3 & sent3 -> int4: So in total, he runs 3+1.5+1.5=6 hours.; int4 & sent1 -> int5: So he runs 60/6=10 mph.; int5 & sent5 -> int6: The answer is 10;", "textual_logical_units": {"1": "ジョンは週に 96.56 キロメートル走ります。", "2": "彼は週に 3 日走ります。", "3": "初日は 3 時間走って", "4": "残りの 2 日間はその半分の時間を走ります。", "5": "彼はどれくらいの速さで走りますか？", "6": "彼が走れる日数は 7 - 1 = 6 日です。", "7": "彼はその半分を走るので、6/2 = 3 日走ります。", "8": "つまり、2 日間で、彼は 3/2 = 1.5 時間走ります。", "9": "つまり、合計で 3 + 1.5 + 1.5 = 6 時間走ることになります。", "10": "つまり、彼は時速 96.56/6 = 10 キロメートルで走ります。", "11": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは週に 96.56 キロメートル走ります。', '彼は週に 3 日走ります。', '初日は 3 時間走って', '残りの 2 日間はその半分の時間を走ります。']\nquestion = '彼はどれくらいの速さで走りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # '彼が走れる日数は 7 - 1 = 6 日です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は週に 3 日走ります。']\nnew_fact = infer_new_fact(selected) # '彼はその半分を走るので、6/2 = 3 日走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['初日は 3 時間走って', '残りの 2 日間はその半分の時間を走ります。']\nnew_fact = infer_new_fact(selected) # 'つまり、2 日間で、彼は 3/2 = 1.5 時間走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['初日は 3 時間走って', 'つまり、2 日間で、彼は 3/2 = 1.5 時間走ります。']\nnew_fact = infer_new_fact(selected) # 'つまり、合計で 3 + 1.5 + 1.5 = 6 時間走ることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは週に 96.56 キロメートル走ります。', 'つまり、合計で 3 + 1.5 + 1.5 = 6 時間走ることになります。']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は時速 96.56/6 = 10 キロメートルで走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はどれくらいの速さで走りますか？', 'つまり、彼は時速 96.56/6 = 10 キロメートルで走ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_39_99b35180d8", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [4, 6, 9], "consequent": 10}, {"antecedents": [7, 8], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 4, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.; sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.; int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.; int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.; int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.; int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.; int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.; int7 & sent3 & sent4 -> int8: The answer is 18;", "textual_logical_units": {"1": "ダナは歩く速度の 4 倍の速さで走ることができますが、", "2": "スキップできる速さは走る速さの半分です。", "3": "彼女が時速 4.82 キロメートルでスキップでき、", "4": "3 分の 1 の時間をランニングに費やし、3 分の 2 をウォーキングに費やした場合、", "5": "6 時間で何キロメートル移動できますか？", "6": "ダナが走る速度の半分でスキップできるとすると、彼女は時速 4.82 * 2 = 9.64 キロメートルで走ることができます。", "7": "また、彼女は歩く速度の 4 倍の速度で走ることができるため、時速 9.64/4 = 2.41 キロメートルで歩くことができます。", "8": "3 分の 2 の時間がウォーキングに費やされるとすると、彼女は 6 * (2/3) = 4時間歩きます。", "9": "3 分の 1 の時間をランニングに費やす場合、彼女は 6 - 4 = 2 時間走ることになります。", "10": "したがって、彼女は時速 9.64 キロメートルで走り、2 時間で 2 * 9.64 キロメートル = 19.28 キロメートル走ります。", "11": "彼女は時速 2.41 キロメートルで歩き、4 時間で 2.41 * 1.5 = 9.64 キロメートル歩きます。", "12": "したがって、彼女は合計で 19.28 + 9.64 = 28.92 キロメートル移動します。", "13": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['ダナは歩く速度の 4 倍の速さで走ることができますが、', 'スキップできる速さは走る速さの半分です。', '彼女が時速 4.82 キロメートルでスキップでき、', '3 分の 1 の時間をランニングに費やし、3 分の 2 をウォーキングに費やした場合、']\nquestion = '6 時間で何キロメートル移動できますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スキップできる速さは走る速さの半分です。', '彼女が時速 4.82 キロメートルでスキップでき、']\nnew_fact = infer_new_fact(selected) # 'ダナが走る速度の半分でスキップできるとすると、彼女は時速 4.82 * 2 = 9.64 キロメートルで走ることができます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ダナは歩く速度の 4 倍の速さで走ることができますが、', '6 時間で何キロメートル移動できますか？']\nnew_fact = infer_new_fact(selected) # 'また、彼女は歩く速度の 4 倍の速度で走ることができるため、時速 9.64/4 = 2.41 キロメートルで歩くことができます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6 時間で何キロメートル移動できますか？', 'また、彼女は歩く速度の 4 倍の速度で走ることができるため、時速 9.64/4 = 2.41 キロメートルで歩くことができます。']\nnew_fact = infer_new_fact(selected) # '3 分の 2 の時間がウォーキングに費やされるとすると、彼女は 6 * (2/3) = 4時間歩きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 分の 1 の時間をランニングに費やし、3 分の 2 をウォーキングに費やした場合、', '3 分の 2 の時間がウォーキングに費やされるとすると、彼女は 6 * (2/3) = 4時間歩きます。']\nnew_fact = infer_new_fact(selected) # '3 分の 1 の時間をランニングに費やす場合、彼女は 6 - 4 = 2 時間走ることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 分の 1 の時間をランニングに費やし、3 分の 2 をウォーキングに費やした場合、', 'ダナが走る速度の半分でスキップできるとすると、彼女は時速 4.82 * 2 = 9.64 キロメートルで走ることができます。', '3 分の 1 の時間をランニングに費やす場合、彼女は 6 - 4 = 2 時間走ることになります。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女は時速 9.64 キロメートルで走り、2 時間で 2 * 9.64 キロメートル = 19.28 キロメートル走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['また、彼女は歩く速度の 4 倍の速度で走ることができるため、時速 9.64/4 = 2.41 キロメートルで歩くことができます。', '3 分の 2 の時間がウォーキングに費やされるとすると、彼女は 6 * (2/3) = 4時間歩きます。']\nnew_fact = infer_new_fact(selected) # '彼女は時速 2.41 キロメートルで歩き、4 時間で 2.41 * 1.5 = 9.64 キロメートル歩きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['したがって、彼女は時速 9.64 キロメートルで走り、2 時間で 2 * 9.64 キロメートル = 19.28 キロメートル走ります。', '彼女は時速 2.41 キロメートルで歩き、4 時間で 2.41 * 1.5 = 9.64 キロメートル歩きます。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女は合計で 19.28 + 9.64 = 28.92 キロメートル移動します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が時速 4.82 キロメートルでスキップでき、', '3 分の 1 の時間をランニングに費やし、3 分の 2 をウォーキングに費やした場合、', 'したがって、彼女は合計で 19.28 + 9.64 = 28.92 キロメートル移動します。']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_40_4dfa312de8", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.; int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.; int2 & sent4 -> int3: The answer is 8;", "textual_logical_units": {"1": "ブランドンの iPhone はベンの iPhone の 4 倍古いです。", "2": "ベンの iPhone はスージーの iPhone の 2 倍古いです。", "3": "スージーの iPhone が 1 年前のものだとすると、", "4": "ブランドンの iPhone は何年前のものですか？", "5": "ベンの iPhone は 1 * 2 = 2 年前のものです。", "6": "ブランドンの iPhone は 4 * 2 = 8 年前のものです。", "7": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['ブランドンの iPhone はベンの iPhone の 4 倍古いです。', 'ベンの iPhone はスージーの iPhone の 2 倍古いです。', 'スージーの iPhone が 1 年前のものだとすると、']\nquestion = 'ブランドンの iPhone は何年前のものですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ベンの iPhone はスージーの iPhone の 2 倍古いです。', 'スージーの iPhone が 1 年前のものだとすると、']\nnew_fact = infer_new_fact(selected) # 'ベンの iPhone は 1 * 2 = 2 年前のものです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブランドンの iPhone はベンの iPhone の 4 倍古いです。', 'ベンの iPhone は 1 * 2 = 2 年前のものです。']\nnew_fact = infer_new_fact(selected) # 'ブランドンの iPhone は 4 * 2 = 8 年前のものです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブランドンの iPhone は何年前のものですか？', 'ブランドンの iPhone は 4 * 2 = 8 年前のものです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_41_e85a06590c", "context": "", "options": [], "answer": "200", "reasoning_graph_edges": [{"antecedents": [5, 8], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [9, 10, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.; int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.; int2 & sent10 & sent9 -> int3: The answer is 200;", "textual_logical_units": {"1": "強大なドラゴン、ペルグがファーボ山の頂上に座り、", "2": "304.8 メートル以内のあらゆるものに火を吹いています。", "3": "ポリーは、ドラゴンを倒す唯一の武器として知られる", "4": "金色の槍を", "5": "ドラゴンの炎が届く範囲である 121.92 メートルの距離まで", "6": "投げることができました。", "7": "しかしポリーがサファイアの宝石を手に取ると、", "8": "宝石を持っていない時よりも 3 倍遠くまで槍を投げることができました。", "9": "宝石を持っている場合、ポリーはドラゴンの炎の届く範囲からどれくらい離れたところに立ち、", "10": "なおかつ金の槍をドラゴンに当てることができますか？", "11": "宝石によって、ポリーは槍を 121.92 メートルの 3 倍遠く、3 * 121.92 = 365.76 メートルの距離まで投げることができました。", "12": "365.76 メートルは、ドラゴンの炎が届く 304.8 メートルの範囲を 365.76 - 304.8 = 60.96 メートル超えています。", "13": "The answer is 200"}, "human_translated": true, "code_input": "####\nfacts = [ '強大なドラゴン、ペルグがファーボ山の頂上に座り、',\n  '304.8 メートル以内のあらゆるものに火を吹いています。',\n  'ポリーは、ドラゴンを倒す唯一の武器として知られる',\n  '金色の槍を',\n  'ドラゴンの炎が届く範囲である 121.92 メートルの距離まで',\n  '投げることができました。',\n  'しかしポリーがサファイアの宝石を手に取ると、',\n  '宝石を持っていない時よりも 3 倍遠くまで槍を投げることができました。',\n  '宝石を持っている場合、ポリーはドラゴンの炎の届く範囲からどれくらい離れたところに立ち、']\nquestion = 'なおかつ金の槍をドラゴンに当てることができますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ドラゴンの炎が届く範囲である 121.92 メートルの距離まで', '宝石を持っていない時よりも 3 倍遠くまで槍を投げることができました。']\nnew_fact = infer_new_fact(selected) # '宝石によって、ポリーは槍を 121.92 メートルの 3 倍遠く、3 * 121.92 = 365.76 メートルの距離まで投げることができました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['304.8 メートル以内のあらゆるものに火を吹いています。', '宝石によって、ポリーは槍を 121.92 メートルの 3 倍遠く、3 * 121.92 = 365.76 メートルの距離まで投げることができました。']\nnew_fact = infer_new_fact(selected) # '365.76 メートルは、ドラゴンの炎が届く 304.8 メートルの範囲を 365.76 - 304.8 = 60.96 メートル超えています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['宝石を持っている場合、ポリーはドラゴンの炎の届く範囲からどれくらい離れたところに立ち、', 'なおかつ金の槍をドラゴンに当てることができますか？', '365.76 メートルは、ドラゴンの炎が届く 304.8 メートルの範囲を 365.76 - 304.8 = 60.96 メートル超えています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '200'"}
{"id": "GSM8K_42_0e55dd01d6", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.; int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.; int2 & sent8 -> int3: The answer is 26;", "textual_logical_units": {"1": "ジョーンズおばあちゃんは、消防士の昼食会のためにアップルパイを 5 個焼きました。", "2": "彼女はそれぞれのパイを 8 つに切り、", "3": "5 個のパイをビュッフェテーブルに置いて、ゲストが自分でサーブできるようにしました。", "4": "夕暮れ時、", "5": "ゲストがパイを手に取って", "6": "食べた後、", "7": "14 ピースのパイが残りました。", "8": "ゲストが手に取ったのは何ピースですか？", "9": "夕暮れ前、8 ピースずつのパイが 5 個用意され、5 * 8 = 40 ピースのパイがありました。", "10": "14 個しか残っていない場合、ゲストは 40 - 14 = 26 ピースのパイを手に取ったことになります。", "11": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジョーンズおばあちゃんは、消防士の昼食会のためにアップルパイを 5 個焼きました。',\n  '彼女はそれぞれのパイを 8 つに切り、',\n  '5 個のパイをビュッフェテーブルに置いて、ゲストが自分でサーブできるようにしました。',\n  '夕暮れ時、',\n  'ゲストがパイを手に取って',\n  '食べた後、',\n  '14 ピースのパイが残りました。']\nquestion = 'ゲストが手に取ったのは何ピースですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョーンズおばあちゃんは、消防士の昼食会のためにアップルパイを 5 個焼きました。', '彼女はそれぞれのパイを 8 つに切り、']\nnew_fact = infer_new_fact(selected) # '夕暮れ前、8 ピースずつのパイが 5 個用意され、5 * 8 = 40 ピースのパイがありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['14 ピースのパイが残りました。', 'ゲストが手に取ったのは何ピースですか？', '夕暮れ前、8 ピースずつのパイが 5 個用意され、5 * 8 = 40 ピースのパイがありました。']\nnew_fact = infer_new_fact(selected) # '14 個しか残っていない場合、ゲストは 40 - 14 = 26 ピースのパイを手に取ったことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ゲストが手に取ったのは何ピースですか？', '14 個しか残っていない場合、ゲストは 40 - 14 = 26 ピースのパイを手に取ったことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_43_0d9cbd33eb", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 6}, {"antecedents": [2, 4, 6], "consequent": 7}, {"antecedents": [3], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat; int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving; sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams; int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams; int4 & sent4 & sent5 -> int5: The answer is 48;", "textual_logical_units": {"1": "栄養成分表によると、", "2": "1 袋のチップスは 1 食あたり 250 キロカロリーです。", "3": "300g の袋に 5 食分が入っており、", "4": "1 日のカロリー目標が 2000 で、すでに 1800 キロカロリーを摂取している場合、", "5": "あと何グラム食べられますか？", "6": "合計カロリーの目標が 2000 キロカロリーで、すでに 1800 キロカロリーを摂取した場合、2000 - 1800 = 200 キロカロリー残っていることになります。", "7": "1 食分のチップスが 250 キロカロリーで、食べられるカロリーが 200 キロカロリーしか残っていない場合、1 食分の 200/250 = 1 食分の 4/5 しか食べられません", "8": "また、300g のチップスの袋には 5 食分が入っていることもわかっています。したがって、1 食分は 300g/5 = 60 グラムです", "9": "1 食分の 4/5 しか食べられない場合、60g * 4/5 = 240g/5 = 5 = 48 グラムしか食べられません", "10": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = ['栄養成分表によると、', '1 袋のチップスは 1 食あたり 250 キロカロリーです。', '300g の袋に 5 食分が入っており、', '1 日のカロリー目標が 2000 で、すでに 1800 キロカロリーを摂取している場合、']\nquestion = 'あと何グラム食べられますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 日のカロリー目標が 2000 で、すでに 1800 キロカロリーを摂取している場合、', 'あと何グラム食べられますか？']\nnew_fact = infer_new_fact(selected) # '合計カロリーの目標が 2000 キロカロリーで、すでに 1800 キロカロリーを摂取した場合、2000 - 1800 = 200 キロカロリー残っていることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 袋のチップスは 1 食あたり 250 キロカロリーです。', '1 日のカロリー目標が 2000 で、すでに 1800 キロカロリーを摂取している場合、', '合計カロリーの目標が 2000 キロカロリーで、すでに 1800 キロカロリーを摂取した場合、2000 - 1800 = 200 キロカロリー残っていることになります。']\nnew_fact = infer_new_fact(selected) # '1 食分のチップスが 250 キロカロリーで、食べられるカロリーが 200 キロカロリーしか残っていない場合、1 食分の 200/250 = 1 食分の 4/5 しか食べられません'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['300g の袋に 5 食分が入っており、']\nnew_fact = infer_new_fact(selected) # 'また、300g のチップスの袋には 5 食分が入っていることもわかっています。したがって、1 食分は 300g/5 = 60 グラムです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 食分のチップスが 250 キロカロリーで、食べられるカロリーが 200 キロカロリーしか残っていない場合、1 食分の 200/250 = 1 食分の 4/5 しか食べられません', 'また、300g のチップスの袋には 5 食分が入っていることもわかっています。したがって、1 食分は 300g/5 = 60 グラムです']\nnew_fact = infer_new_fact(selected) # '1 食分の 4/5 しか食べられない場合、60g * 4/5 = 240g/5 = 5 = 48 グラムしか食べられません'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 日のカロリー目標が 2000 で、すでに 1800 キロカロリーを摂取している場合、', 'あと何グラム食べられますか？', '1 食分の 4/5 しか食べられない場合、60g * 4/5 = 240g/5 = 5 = 48 グラムしか食べられません']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_44_40def09442", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [2, 3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [6, 7], "consequent": 10}, {"antecedents": [7, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax; int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00; sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00; int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00; int4 & sent7 -> int5: The answer is 20;", "textual_logical_units": {"1": "チャーリーは蜜蝋キャンドルを売りたいと思っています。", "2": "蜜蝋 453.59 グラムにつき、", "3": "彼は 10 本の先細キャンドルを作ることができます。", "4": "材料である 453.59 グラムの蜜蝋と", "5": "芯の価格は 10.00 ドルです", "6": "彼がろうそくを 1 本 2.00 ドルで売った場合、", "7": "20 本のろうそくを作って売った場合の純利益はいくらですか？", "8": "453.59 グラムの蜜蝋と芯で 10 本のろうそくを作れますが、彼は 20 本のろうそくを作りたいので、20/453.59 = 907.18 グラムの蜜蝋が必要です", "9": "453.59 グラムの蜜蝋は 10.00 ドルで、彼には 907.18 グラム必要なので、材料には 10*2 = 20.00 ドルかかります", "10": "彼はキャンドルを 1 本 あたり 2.00ドルで売りたいと思い、20 本のキャンドルを売っているので、2*20 = 40.00 ドルになります", "11": "彼がキャンドルを売って 40.00 ドルを稼ぎ、材料の価格が 20.00 ドルだった場合、彼の純利益は 40 - 20 = 20.00 ドルになります", "12": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['チャーリーは蜜蝋キャンドルを売りたいと思っています。', '蜜蝋 453.59 グラムにつき、', '彼は 10 本の先細キャンドルを作ることができます。', '材料である 453.59 グラムの蜜蝋と', '芯の価格は 10.00 ドルです', '彼がろうそくを 1 本 2.00 ドルで売った場合、']\nquestion = '20 本のろうそくを作って売った場合の純利益はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['蜜蝋 453.59 グラムにつき、', '彼は 10 本の先細キャンドルを作ることができます。', '20 本のろうそくを作って売った場合の純利益はいくらですか？']\nnew_fact = infer_new_fact(selected) # '453.59 グラムの蜜蝋と芯で 10 本のろうそくを作れますが、彼は 20 本のろうそくを作りたいので、20/453.59 = 907.18 グラムの蜜蝋が必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['材料である 453.59 グラムの蜜蝋と', '芯の価格は 10.00 ドルです', '453.59 グラムの蜜蝋と芯で 10 本のろうそくを作れますが、彼は 20 本のろうそくを作りたいので、20/453.59 = 907.18 グラムの蜜蝋が必要です']\nnew_fact = infer_new_fact(selected) # '453.59 グラムの蜜蝋は 10.00 ドルで、彼には 907.18 グラム必要なので、材料には 10*2 = 20.00 ドルかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼がろうそくを 1 本 2.00 ドルで売った場合、', '20 本のろうそくを作って売った場合の純利益はいくらですか？']\nnew_fact = infer_new_fact(selected) # '彼はキャンドルを 1 本 あたり 2.00ドルで売りたいと思い、20 本のキャンドルを売っているので、2*20 = 40.00 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 本のろうそくを作って売った場合の純利益はいくらですか？', '453.59 グラムの蜜蝋は 10.00 ドルで、彼には 907.18 グラム必要なので、材料には 10*2 = 20.00 ドルかかります', '彼はキャンドルを 1 本 あたり 2.00ドルで売りたいと思い、20 本のキャンドルを売っているので、2*20 = 40.00 ドルになります']\nnew_fact = infer_new_fact(selected) # '彼がキャンドルを売って 40.00 ドルを稼ぎ、材料の価格が 20.00 ドルだった場合、彼の純利益は 40 - 20 = 20.00 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 本のろうそくを作って売った場合の純利益はいくらですか？', '彼がキャンドルを売って 40.00 ドルを稼ぎ、材料の価格が 20.00 ドルだった場合、彼の純利益は 40 - 20 = 20.00 ドルになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_45_b52a924542", "context": "", "options": [], "answer": "104", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [4, 9, 10], "consequent": 11}, {"antecedents": [3, 7, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.; int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7; int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.; int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.; int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.; int5 & sent7 -> int6: The answer is 104;", "textual_logical_units": {"1": "メレディスは、健康に関するトピックについて執筆しているフリーランスのブロガーで、", "2": "常勤の仕事として毎日クライアントに記事を提出しています。", "3": "ブログ記事は、調査して記事を書くのに平均 4 時間かかります。", "4": "先週、彼女は月曜日に 5 件の記事を書き、", "5": "火曜日には月曜日の 2/5 倍の記事を書きました。", "6": "水曜日には、火曜日に書いた記事の 2 倍の記事を書きました。", "7": "3 日間に彼女が記事を書くのに費やした合計時間数を計算します。", "8": "彼女が月曜日に 5 つの記事を書いたとすると、火曜日には 2/5* 5 = 2 件の記事を書いたことになります。", "9": "彼女が火曜日までに書いた記事の総数は 5+2 = 7 件です", "10": "水曜日、記事の数は火曜日に書いた数の 2 倍だったので、2*7 = 14 件の記事でした。", "11": "この 3 日間で、彼女は 5+7 +14 = 26 件の記事を書きました。", "12": "各記事について調べたり執筆したりするのに 4 時間かかるとすると、彼女はすべての記事に 4*26 = 104 時間を費やしたことになります。", "13": "The answer is 104"}, "human_translated": true, "code_input": "####\nfacts = [ 'メレディスは、健康に関するトピックについて執筆しているフリーランスのブロガーで、',\n  '常勤の仕事として毎日クライアントに記事を提出しています。',\n  'ブログ記事は、調査して記事を書くのに平均 4 時間かかります。',\n  '先週、彼女は月曜日に 5 件の記事を書き、',\n  '火曜日には月曜日の 2/5 倍の記事を書きました。',\n  '水曜日には、火曜日に書いた記事の 2 倍の記事を書きました。']\nquestion = '3 日間に彼女が記事を書くのに費やした合計時間数を計算します。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['先週、彼女は月曜日に 5 件の記事を書き、', '火曜日には月曜日の 2/5 倍の記事を書きました。']\nnew_fact = infer_new_fact(selected) # '彼女が月曜日に 5 つの記事を書いたとすると、火曜日には 2/5* 5 = 2 件の記事を書いたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が月曜日に 5 つの記事を書いたとすると、火曜日には 2/5* 5 = 2 件の記事を書いたことになります。']\nnew_fact = infer_new_fact(selected) # '彼女が火曜日までに書いた記事の総数は 5+2 = 7 件です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['水曜日には、火曜日に書いた記事の 2 倍の記事を書きました。', '彼女が火曜日までに書いた記事の総数は 5+2 = 7 件です']\nnew_fact = infer_new_fact(selected) # '水曜日、記事の数は火曜日に書いた数の 2 倍だったので、2*7 = 14 件の記事でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['先週、彼女は月曜日に 5 件の記事を書き、', '彼女が火曜日までに書いた記事の総数は 5+2 = 7 件です', '水曜日、記事の数は火曜日に書いた数の 2 倍だったので、2*7 = 14 件の記事でした。']\nnew_fact = infer_new_fact(selected) # 'この 3 日間で、彼女は 5+7 +14 = 26 件の記事を書きました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブログ記事は、調査して記事を書くのに平均 4 時間かかります。', '3 日間に彼女が記事を書くのに費やした合計時間数を計算します。', 'この 3 日間で、彼女は 5+7 +14 = 26 件の記事を書きました。']\nnew_fact = infer_new_fact(selected) # '各記事について調べたり執筆したりするのに 4 時間かかるとすると、彼女はすべての記事に 4*26 = 104 時間を費やしたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 日間に彼女が記事を書くのに費やした合計時間数を計算します。', '各記事について調べたり執筆したりするのに 4 時間かかるとすると、彼女はすべての記事に 4*26 = 104 時間を費やしたことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 104'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '104'"}
{"id": "GSM8K_46_c1d08edad8", "context": "", "options": [], "answer": "163", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.; int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.; int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23; int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.; int4 & sent6 -> int5: The answer is 163;", "textual_logical_units": {"1": "キャンディスは、コーヒーショップでの仕事に出かける前に、80 枚の付箋紙を財布に入れました。", "2": "途中、彼女は店に立ち寄り、", "3": "付箋紙のパッケージを購入しました。職場で、", "4": "彼女は 220 個の異なるコーヒーカップそれぞれに付箋紙を 1 枚貼りました。", "5": "付箋紙が全部で 23 枚残ってるとしたら、", "6": "彼女が購入したパッケージには付箋紙が何枚入っていましたか？", "7": "キャンディスが購入したパッケージ入りの付箋紙の数を x とします。", "8": "すると、彼女が店を出たときに持っていた付箋紙の総数は 80 + x になります。", "9": "そして、彼女が職場で 220 枚の付箋紙を使い、23 枚残っているとすると、80 + x = 220 + 23 枚になります", "10": "方程式の両辺から 80 を引くと、付箋紙は x = 220 + 23 - 80 = 163 枚であることがわかります。", "11": "The answer is 163"}, "human_translated": true, "code_input": "####\nfacts = ['キャンディスは、コーヒーショップでの仕事に出かける前に、80 枚の付箋紙を財布に入れました。', '途中、彼女は店に立ち寄り、', '付箋紙のパッケージを購入しました。職場で、', '彼女は 220 個の異なるコーヒーカップそれぞれに付箋紙を 1 枚貼りました。', '付箋紙が全部で 23 枚残ってるとしたら、']\nquestion = '彼女が購入したパッケージには付箋紙が何枚入っていましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女が購入したパッケージには付箋紙が何枚入っていましたか？']\nnew_fact = infer_new_fact(selected) # 'キャンディスが購入したパッケージ入りの付箋紙の数を x とします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['キャンディスは、コーヒーショップでの仕事に出かける前に、80 枚の付箋紙を財布に入れました。', 'キャンディスが購入したパッケージ入りの付箋紙の数を x とします。']\nnew_fact = infer_new_fact(selected) # 'すると、彼女が店を出たときに持っていた付箋紙の総数は 80 + x になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 220 個の異なるコーヒーカップそれぞれに付箋紙を 1 枚貼りました。', '付箋紙が全部で 23 枚残ってるとしたら、', 'すると、彼女が店を出たときに持っていた付箋紙の総数は 80 + x になります。']\nnew_fact = infer_new_fact(selected) # 'そして、彼女が職場で 220 枚の付箋紙を使い、23 枚残っているとすると、80 + x = 220 + 23 枚になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['そして、彼女が職場で 220 枚の付箋紙を使い、23 枚残っているとすると、80 + x = 220 + 23 枚になります']\nnew_fact = infer_new_fact(selected) # '方程式の両辺から 80 を引くと、付箋紙は x = 220 + 23 - 80 = 163 枚であることがわかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が購入したパッケージには付箋紙が何枚入っていましたか？', '方程式の両辺から 80 を引くと、付箋紙は x = 220 + 23 - 80 = 163 枚であることがわかります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 163'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '163'"}
{"id": "GSM8K_47_6e4d497caa", "context": "", "options": [], "answer": "800", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [3, 4, 9], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: He bought 200 / 40 = 5 blue ties; int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties; sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties; int3 & sent3 -> int4: So they each cost $40 + $20 = $60; int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties; int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties; int6 & sent4 -> int7: The answer is 800;", "textual_logical_units": {"1": "ジョンは青いネクタイの 2 倍の数の赤いネクタイを買います。", "2": "赤いネクタイは青いネクタイよりも 50% 高価です。", "3": "彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。", "4": "彼はネクタイにいくら費やしましたか？", "5": "彼は 200/40 = 5 本の青いネクタイを買いました", "6": "つまり、彼は 5 * 2 = 10 本の赤いネクタイを買いました", "7": "赤いネクタイは青いネクタイよりもそれぞれ 40ドル* .5 = 20 ドル高価です", "8": "それぞれの費用は 40 ドル + 20ドル = 60 ドルです", "9": "彼は赤いネクタイに 60 ドル* 10 = 600 ドルを費やしました", "10": "つまり、彼はネクタイに 200 ドル + 600 ドル = 800 ドルを費やしました", "11": "The answer is 800"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは青いネクタイの 2 倍の数の赤いネクタイを買います。', '赤いネクタイは青いネクタイよりも 50% 高価です。', '彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。']\nquestion = '彼はネクタイにいくら費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # '彼は 200/40 = 5 本の青いネクタイを買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは青いネクタイの 2 倍の数の赤いネクタイを買います。', '彼は 200/40 = 5 本の青いネクタイを買いました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 5 * 2 = 10 本の赤いネクタイを買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['赤いネクタイは青いネクタイよりも 50% 高価です。', '彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # '赤いネクタイは青いネクタイよりもそれぞれ 40ドル* .5 = 20 ドル高価です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。', '赤いネクタイは青いネクタイよりもそれぞれ 40ドル* .5 = 20 ドル高価です']\nnew_fact = infer_new_fact(selected) # 'それぞれの費用は 40 ドル + 20ドル = 60 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、彼は 5 * 2 = 10 本の赤いネクタイを買いました', 'それぞれの費用は 40 ドル + 20ドル = 60 ドルです']\nnew_fact = infer_new_fact(selected) # '彼は赤いネクタイに 60 ドル* 10 = 600 ドルを費やしました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 本 40 ドルの青いネクタイに 200 ドルを費やしました。', '彼はネクタイにいくら費やしましたか？', '彼は赤いネクタイに 60 ドル* 10 = 600 ドルを費やしました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼はネクタイに 200 ドル + 600 ドル = 800 ドルを費やしました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はネクタイにいくら費やしましたか？', 'つまり、彼はネクタイに 200 ドル + 600 ドル = 800 ドルを費やしました']\nnew_fact = infer_new_fact(selected) # 'The answer is 800'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '800'"}
{"id": "GSM8K_48_fb3fb38853", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.; int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces; int2 & sent3 -> int3: The answer is 8;", "textual_logical_units": {"1": "トレーシーは庭のトマトの苗を支えるために長さ 1.21 メートルのワイヤーを使いました。", "2": "ワイヤーは 15.24 センチの長さに切断されました。", "3": "彼女はいくつのピースを手に入れましたか？", "4": "トレーシーが長さ 1.21 メートルのワイヤーを使用した場合、1 メートルは 100 センチに等しいため、メートル単位のワイヤーの全長は 100*1.21 = 121 センチでした。", "5": "ワイヤーを 15.24 センチの長さにカットしたので、トレーシーは 121/15.24 = 8 つのピースを手に入れたことになります", "6": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['トレーシーは庭のトマトの苗を支えるために長さ 1.21 メートルのワイヤーを使いました。', 'ワイヤーは 15.24 センチの長さに切断されました。']\nquestion = '彼女はいくつのピースを手に入れましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['トレーシーは庭のトマトの苗を支えるために長さ 1.21 メートルのワイヤーを使いました。']\nnew_fact = infer_new_fact(selected) # 'トレーシーが長さ 1.21 メートルのワイヤーを使用した場合、1 メートルは 100 センチに等しいため、メートル単位のワイヤーの全長は 100*1.21 = 121 センチでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ワイヤーは 15.24 センチの長さに切断されました。', '彼女はいくつのピースを手に入れましたか？', 'トレーシーが長さ 1.21 メートルのワイヤーを使用した場合、1 メートルは 100 センチに等しいため、メートル単位のワイヤーの全長は 100*1.21 = 121 センチでした。']\nnew_fact = infer_new_fact(selected) # 'ワイヤーを 15.24 センチの長さにカットしたので、トレーシーは 121/15.24 = 8 つのピースを手に入れたことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はいくつのピースを手に入れましたか？', 'ワイヤーを 15.24 センチの長さにカットしたので、トレーシーは 121/15.24 = 8 つのピースを手に入れたことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_49_856ec86627", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.; int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.; int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.; int3 & sent4 -> int4: The answer is 30;", "textual_logical_units": {"1": "リチャードは 15 階建てのアパートに住んでいます。", "2": "各フロアには 8 つのユニットがあり、", "3": "建物の 3/4 が使用されています。", "4": "建物内の空いているユニットの総数はいくつですか？", "5": "建物内のユニットの総数は、8 ユニット/フロア* 15 フロア= 120 ユニットになります。", "6": "建物の 3/4 が使用されている場合、使用されているユニットの総数は 3/4 * 120 ユニット = 90 ユニットです。", "7": "空いているユニットの総数は 120 ユニット (90 ユニット = 30 ユニット) です。", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['リチャードは 15 階建てのアパートに住んでいます。', '各フロアには 8 つのユニットがあり、', '建物の 3/4 が使用されています。']\nquestion = '建物内の空いているユニットの総数はいくつですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['リチャードは 15 階建てのアパートに住んでいます。', '各フロアには 8 つのユニットがあり、']\nnew_fact = infer_new_fact(selected) # '建物内のユニットの総数は、8 ユニット/フロア* 15 フロア= 120 ユニットになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['建物の 3/4 が使用されています。', '建物内のユニットの総数は、8 ユニット/フロア* 15 フロア= 120 ユニットになります。']\nnew_fact = infer_new_fact(selected) # '建物の 3/4 が使用されている場合、使用されているユニットの総数は 3/4 * 120 ユニット = 90 ユニットです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['建物内の空いているユニットの総数はいくつですか？', '建物内のユニットの総数は、8 ユニット/フロア* 15 フロア= 120 ユニットになります。', '建物の 3/4 が使用されている場合、使用されているユニットの総数は 3/4 * 120 ユニット = 90 ユニットです。']\nnew_fact = infer_new_fact(selected) # '空いているユニットの総数は 120 ユニット (90 ユニット = 30 ユニット) です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['建物内の空いているユニットの総数はいくつですか？', '空いているユニットの総数は 120 ユニット (90 ユニット = 30 ユニット) です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_50_be1b78e251", "context": "", "options": [], "answer": "294", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.; int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.; int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.; int3 & sent4 -> int4: The answer is 294;", "textual_logical_units": {"1": "ロイドはエッグファームを所有しています。", "2": "彼の鶏は 1 日に 252 個の卵を産み、", "3": "彼は 1 ダースあたり 2 ドルで売っています", "4": "ロイドは卵で週にどれくらい稼ぎますか？", "5": "ロイドのエッグファームでは、1 週間で 252 x 7 = 1764 個の卵が生産されます。", "6": "1 週間に 1764/12 = 147 ダースの卵が生産されます。", "7": "つまり、ロイドは卵で 147 x 2 ドル = 294 ドルを稼いでいます。", "8": "The answer is 294"}, "human_translated": true, "code_input": "####\nfacts = ['ロイドはエッグファームを所有しています。', '彼の鶏は 1 日に 252 個の卵を産み、', '彼は 1 ダースあたり 2 ドルで売っています']\nquestion = 'ロイドは卵で週にどれくらい稼ぎますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼の鶏は 1 日に 252 個の卵を産み、', 'ロイドは卵で週にどれくらい稼ぎますか？']\nnew_fact = infer_new_fact(selected) # 'ロイドのエッグファームでは、1 週間で 252 x 7 = 1764 個の卵が生産されます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 ダースあたり 2 ドルで売っています', 'ロイドのエッグファームでは、1 週間で 252 x 7 = 1764 個の卵が生産されます。']\nnew_fact = infer_new_fact(selected) # '1 週間に 1764/12 = 147 ダースの卵が生産されます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 ダースあたり 2 ドルで売っています', 'ロイドは卵で週にどれくらい稼ぎますか？', '1 週間に 1764/12 = 147 ダースの卵が生産されます。']\nnew_fact = infer_new_fact(selected) # 'つまり、ロイドは卵で 147 x 2 ドル = 294 ドルを稼いでいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロイドは卵で週にどれくらい稼ぎますか？', 'つまり、ロイドは卵で 147 x 2 ドル = 294 ドルを稼いでいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 294'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '294'"}
{"id": "GSM8K_51_e4757b3475", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: He was travelling at full speed for 4-1=3 hours; int1 & sent1 -> int2: So he went 3*10=30 miles; int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back; int3 & sent4 -> int4: The answer is 5;", "textual_logical_units": {"1": "トムの船は時速 16.09 キロメートルで移動できます。", "2": "彼は午後 1 時から 4 時まで航海しています。", "3": "その後、彼は時速 9.65 キロメートルで戻ります。", "4": "彼が戻るのにどれくらい時間がかかりますか。", "5": "彼は 4 - 1 = 3 時間、全速力で移動しました", "6": "つまり、彼は 3 * 16.09 = 48.27 キロメートル進みました", "7": "つまり、戻るまでに 48.27/9.65 = 5 時間かかります", "8": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['トムの船は時速 16.09 キロメートルで移動できます。', '彼は午後 1 時から 4 時まで航海しています。', 'その後、彼は時速 9.65 キロメートルで戻ります。']\nquestion = '彼が戻るのにどれくらい時間がかかりますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は午後 1 時から 4 時まで航海しています。']\nnew_fact = infer_new_fact(selected) # '彼は 4 - 1 = 3 時間、全速力で移動しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トムの船は時速 16.09 キロメートルで移動できます。', '彼は 4 - 1 = 3 時間、全速力で移動しました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 3 * 16.09 = 48.27 キロメートル進みました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼は時速 9.65 キロメートルで戻ります。', '彼が戻るのにどれくらい時間がかかりますか。', 'つまり、彼は 3 * 16.09 = 48.27 キロメートル進みました']\nnew_fact = infer_new_fact(selected) # 'つまり、戻るまでに 48.27/9.65 = 5 時間かかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が戻るのにどれくらい時間がかかりますか。', 'つまり、戻るまでに 48.27/9.65 = 5 時間かかります']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_52_51cab0f5b8", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [4, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5; int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5; int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15; int3 & sent6 -> int4: The answer is 15;", "textual_logical_units": {"1": "ウリアのブックバッグは彼には重くなりすぎています。", "2": "彼はそこから 6.8 キログラム取り除く必要があります。", "3": "彼の漫画本の重さはそれぞれ 0.11 キログラムで", "4": "彼のおもちゃの重さはそれぞれ 0.22 キログラムです。", "5": "彼が漫画本を 30 冊減らした場合、", "6": "彼はいくつのおもちゃを取り除く必要がありますか？", "7": "30 x 0.11 = 3.3 なので、30 冊のコミック本の重さは 3.3 キログラムです。", "8": "6.8 - 3.3 = 3.5 なので、彼はさらに 3.5 キログラム減らす必要があります", "9": "3.5/.0.22 = 15 なので、彼は 15 個のおもちゃを取り除く必要があります", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['ウリアのブックバッグは彼には重くなりすぎています。', '彼はそこから 6.8 キログラム取り除く必要があります。', '彼の漫画本の重さはそれぞれ 0.11 キログラムで', '彼のおもちゃの重さはそれぞれ 0.22 キログラムです。', '彼が漫画本を 30 冊減らした場合、']\nquestion = '彼はいくつのおもちゃを取り除く必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼の漫画本の重さはそれぞれ 0.11 キログラムで', '彼が漫画本を 30 冊減らした場合、']\nnew_fact = infer_new_fact(selected) # '30 x 0.11 = 3.3 なので、30 冊のコミック本の重さは 3.3 キログラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はそこから 6.8 キログラム取り除く必要があります。', '30 x 0.11 = 3.3 なので、30 冊のコミック本の重さは 3.3 キログラムです。']\nnew_fact = infer_new_fact(selected) # '6.8 - 3.3 = 3.5 なので、彼はさらに 3.5 キログラム減らす必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼のおもちゃの重さはそれぞれ 0.22 キログラムです。', '彼はいくつのおもちゃを取り除く必要がありますか？', '6.8 - 3.3 = 3.5 なので、彼はさらに 3.5 キログラム減らす必要があります']\nnew_fact = infer_new_fact(selected) # '3.5/.0.22 = 15 なので、彼は 15 個のおもちゃを取り除く必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はいくつのおもちゃを取り除く必要がありますか？', '3.5/.0.22 = 15 なので、彼は 15 個のおもちゃを取り除く必要があります']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_53_b9e40ecd00", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [3, 5, 6], "consequent": 10}, {"antecedents": [5, 7], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [9, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.; sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.; int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.; int3 & sent9 -> int4: The answer is 40;", "textual_logical_units": {"1": "整備士は、トラックと車のタイヤの修理に異なる料金を請求します。", "2": "修理するトラックのタイヤ 1 本に", "3": "整備士は 60 ドルを請求し、", "4": "修理する自動車のタイヤ 1 本に", "5": "整備士は 40 ドルを請求します。", "6": "木曜日に、整備士は 6 本のトラックのタイヤと 4 本の自動車のタイヤを修理します。", "7": "金曜日には、整備士が 12 台の車のタイヤを修理し、", "8": "トラックのタイヤは修理しません。", "9": "整備士は、収益が増えた当日にどれだけ多くの収益を上げましたか？", "10": "木曜日に、整備士は合計 6  *60 + 4 * 40 = 520 ドルを請求しました。", "11": "金曜日に、整備士は合計 12 * 40 = 480 ドルを請求しました。", "12": "したがって、収益の多い木曜日には、整備士の収益は金曜日よりも 520 - 480 = 40 ドル多くなりました。", "13": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = [ '整備士は、トラックと車のタイヤの修理に異なる料金を請求します。',\n  '修理するトラックのタイヤ 1 本に',\n  '整備士は 60 ドルを請求し、',\n  '修理する自動車のタイヤ 1 本に',\n  '整備士は 40 ドルを請求します。',\n  '木曜日に、整備士は 6 本のトラックのタイヤと 4 本の自動車のタイヤを修理します。',\n  '金曜日には、整備士が 12 台の車のタイヤを修理し、',\n  'トラックのタイヤは修理しません。']\nquestion = '整備士は、収益が増えた当日にどれだけ多くの収益を上げましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['整備士は 60 ドルを請求し、', '整備士は 40 ドルを請求します。', '木曜日に、整備士は 6 本のトラックのタイヤと 4 本の自動車のタイヤを修理します。']\nnew_fact = infer_new_fact(selected) # '木曜日に、整備士は合計 6  *60 + 4 * 40 = 520 ドルを請求しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['整備士は 40 ドルを請求します。', '金曜日には、整備士が 12 台の車のタイヤを修理し、']\nnew_fact = infer_new_fact(selected) # '金曜日に、整備士は合計 12 * 40 = 480 ドルを請求しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['整備士は、収益が増えた当日にどれだけ多くの収益を上げましたか？', '木曜日に、整備士は合計 6  *60 + 4 * 40 = 520 ドルを請求しました。', '金曜日に、整備士は合計 12 * 40 = 480 ドルを請求しました。']\nnew_fact = infer_new_fact(selected) # 'したがって、収益の多い木曜日には、整備士の収益は金曜日よりも 520 - 480 = 40 ドル多くなりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['整備士は、収益が増えた当日にどれだけ多くの収益を上げましたか？', 'したがって、収益の多い木曜日には、整備士の収益は金曜日よりも 520 - 480 = 40 ドル多くなりました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_54_70199a93f0", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens; int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.; int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.; int3 & sent4 -> int4: The answer is 40;", "textual_logical_units": {"1": "ダウトファイア姉妹は、地元の動物保護施設から引き取った 7 匹の子猫を連れて家に帰る途中、2 匹の飼い猫が先ほど子猫を産んだと母親から電話がかかってきました。", "2": "彼女が言うには、最初の猫であるパッチーには、", "3": "引き取った猫の 3 倍の子猫がいて、もう 1 匹のトリクシーには 12 匹の子猫がいます。", "4": "ダウトファイア家には現在何匹の子猫がいますか？", "5": "パッチーは 3 x 7 = 21 匹の子猫を産んだところです", "6": "トリクシーの子猫は 12 匹なので、両方の猫を合わせると 21 +12 = 33 匹の子猫がいることになります。", "7": "引き取った子猫と 2 匹の猫の子猫を合わせると、ダウトファイア家には現在 7 匹 + 33 = 40 匹の子猫がいます。", "8": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = ['ダウトファイア姉妹は、地元の動物保護施設から引き取った 7 匹の子猫を連れて家に帰る途中、2 匹の飼い猫が先ほど子猫を産んだと母親から電話がかかってきました。', '彼女が言うには、最初の猫であるパッチーには、', '引き取った猫の 3 倍の子猫がいて、もう 1 匹のトリクシーには 12 匹の子猫がいます。']\nquestion = 'ダウトファイア家には現在何匹の子猫がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ダウトファイア姉妹は、地元の動物保護施設から引き取った 7 匹の子猫を連れて家に帰る途中、2 匹の飼い猫が先ほど子猫を産んだと母親から電話がかかってきました。', '彼女が言うには、最初の猫であるパッチーには、', '引き取った猫の 3 倍の子猫がいて、もう 1 匹のトリクシーには 12 匹の子猫がいます。']\nnew_fact = infer_new_fact(selected) # 'パッチーは 3 x 7 = 21 匹の子猫を産んだところです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['引き取った猫の 3 倍の子猫がいて、もう 1 匹のトリクシーには 12 匹の子猫がいます。', 'パッチーは 3 x 7 = 21 匹の子猫を産んだところです']\nnew_fact = infer_new_fact(selected) # 'トリクシーの子猫は 12 匹なので、両方の猫を合わせると 21 +12 = 33 匹の子猫がいることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ダウトファイア姉妹は、地元の動物保護施設から引き取った 7 匹の子猫を連れて家に帰る途中、2 匹の飼い猫が先ほど子猫を産んだと母親から電話がかかってきました。', 'トリクシーの子猫は 12 匹なので、両方の猫を合わせると 21 +12 = 33 匹の子猫がいることになります。']\nnew_fact = infer_new_fact(selected) # '引き取った子猫と 2 匹の猫の子猫を合わせると、ダウトファイア家には現在 7 匹 + 33 = 40 匹の子猫がいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ダウトファイア家には現在何匹の子猫がいますか？', '引き取った子猫と 2 匹の猫の子猫を合わせると、ダウトファイア家には現在 7 匹 + 33 = 40 匹の子猫がいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_55_3f62913f36", "context": "", "options": [], "answer": "14", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops; int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops; int2 & sent4 -> int3: The answer is 14;", "textual_logical_units": {"1": "ジーンは 30 個のロリポップを持っています。", "2": "ジーンはロリポップを 2 個食べます。", "3": "残りのロリポップを使って、ジーンは 2 個のロリポップを 1 個のバッグに詰めたいと考えています。", "4": "ジーンはいくつのバッグに詰められますか？", "5": "ジーンは 30 - 2 = 28 個のロリポップを持っています", "6": "ジーンは 28/2 = 14 袋にロリポップを入れることができます", "7": "The answer is 14"}, "human_translated": true, "code_input": "####\nfacts = ['ジーンは 30 個のロリポップを持っています。', 'ジーンはロリポップを 2 個食べます。', '残りのロリポップを使って、ジーンは 2 個のロリポップを 1 個のバッグに詰めたいと考えています。']\nquestion = 'ジーンはいくつのバッグに詰められますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジーンは 30 個のロリポップを持っています。', 'ジーンはロリポップを 2 個食べます。']\nnew_fact = infer_new_fact(selected) # 'ジーンは 30 - 2 = 28 個のロリポップを持っています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りのロリポップを使って、ジーンは 2 個のロリポップを 1 個のバッグに詰めたいと考えています。', 'ジーンはいくつのバッグに詰められますか？', 'ジーンは 30 - 2 = 28 個のロリポップを持っています']\nnew_fact = infer_new_fact(selected) # 'ジーンは 28/2 = 14 袋にロリポップを入れることができます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジーンはいくつのバッグに詰められますか？', 'ジーンは 28/2 = 14 袋にロリポップを入れることができます']\nnew_fact = infer_new_fact(selected) # 'The answer is 14'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '14'"}
{"id": "GSM8K_56_bac73f4830", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14; int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3; int2 & sent4 -> int3: The answer is 3;", "textual_logical_units": {"1": "ピーターは今週映画を見に行く予定です。", "2": "彼はいつもチケットを 7 ドル、ポップコーンを 7 ドルで手に入れます。", "3": "彼がその週に 42 ドル持っていた場合、", "4": "彼は何回映画を見に行けますか？", "5": "7 + 7 = 14 なので、映画を見に行くのに 14 ドルかかります", "6": "42/14 = 3 なので、彼は映画を 3 回見ることができます", "7": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['ピーターは今週映画を見に行く予定です。', '彼はいつもチケットを 7 ドル、ポップコーンを 7 ドルで手に入れます。', '彼がその週に 42 ドル持っていた場合、']\nquestion = '彼は何回映画を見に行けますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼はいつもチケットを 7 ドル、ポップコーンを 7 ドルで手に入れます。']\nnew_fact = infer_new_fact(selected) # '7 + 7 = 14 なので、映画を見に行くのに 14 ドルかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼がその週に 42 ドル持っていた場合、', '7 + 7 = 14 なので、映画を見に行くのに 14 ドルかかります']\nnew_fact = infer_new_fact(selected) # '42/14 = 3 なので、彼は映画を 3 回見ることができます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は何回映画を見に行けますか？', '42/14 = 3 なので、彼は映画を 3 回見ることができます']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_57_c28d1a27f0", "context": "", "options": [], "answer": "83", "reasoning_graph_edges": [{"antecedents": [1, 4, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.; int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.; int2 & sent6 -> int3: The answer is 83;", "textual_logical_units": {"1": "木製の橋では 2267.96 キログラムまでしか運ぶことができません。", "2": "それぞれ 6.8 キログラムの重さの同じ箱を詰めた配送トラックが", "3": "橋を渡ります。", "4": "ドライバーと", "5": "空のトラックの合計重量は 1703.23 キログラムです", "6": "橋の重量制限を超えずにトラックに積み込める箱の最大数はいくつですか？", "7": "箱の重量は最大 2267.96 キログラム - 1703.23 キログラム = 合計 564.73 キログラムです。", "8": "橋の重量制限を超えずに、564.73/6.8 = 83 個の箱をトラックに積み込むことができます。", "9": "The answer is 83"}, "human_translated": true, "code_input": "####\nfacts = ['木製の橋では 2267.96 キログラムまでしか運ぶことができません。', 'それぞれ 6.8 キログラムの重さの同じ箱を詰めた配送トラックが', '橋を渡ります。', 'ドライバーと', '空のトラックの合計重量は 1703.23 キログラムです']\nquestion = '橋の重量制限を超えずにトラックに積み込める箱の最大数はいくつですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['木製の橋では 2267.96 キログラムまでしか運ぶことができません。', 'ドライバーと', '空のトラックの合計重量は 1703.23 キログラムです']\nnew_fact = infer_new_fact(selected) # '箱の重量は最大 2267.96 キログラム - 1703.23 キログラム = 合計 564.73 キログラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれ 6.8 キログラムの重さの同じ箱を詰めた配送トラックが', '箱の重量は最大 2267.96 キログラム - 1703.23 キログラム = 合計 564.73 キログラムです。']\nnew_fact = infer_new_fact(selected) # '橋の重量制限を超えずに、564.73/6.8 = 83 個の箱をトラックに積み込むことができます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['橋の重量制限を超えずにトラックに積み込める箱の最大数はいくつですか？', '橋の重量制限を超えずに、564.73/6.8 = 83 個の箱をトラックに積み込むことができます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 83'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '83'"}
{"id": "GSM8K_58_ee1c753c43", "context": "", "options": [], "answer": "57", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 6], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [7, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00; sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees; int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00; int3 & sent7 -> int4: The answer is 57;", "textual_logical_units": {"1": "スティーブンは食料品をオンラインで注文しました。", "2": "最終請求額は 40.00 ドルになりました。", "3": "配送業者を経由していたため、", "4": "最終合計に 25% の手数料が加算され", "5": "配送料として 3.00 ドルが請求されました。", "6": "スティーブンはまた、4.00 ドルのチップを追加しました。", "7": "追加料金を差し引いた後、スティーブンの食料品の最終価格はいくらでしたか？", "8": "彼は食料品に 40.00 ドルを費やしましたが、25% の手数料がかかったので、40*.25 = 10.00 ドルになります", "9": "また、3 ドル + 4ドル = 7.00 ドルの手数料を支払い、3.00 ドルの配送料と 4.00 ドルのチップ代がかかります", "10": "食料品は 40.00 ドルで、10.00 ドルの手数料に加えて、さらに 7.00 ドルの配送料/チップ代がかかり、最終的な合計は 40 ドル+ 10 ドル+ 7 ドル = 57.00 ドルになりました。", "11": "The answer is 57"}, "human_translated": true, "code_input": "####\nfacts = ['スティーブンは食料品をオンラインで注文しました。', '最終請求額は 40.00 ドルになりました。', '配送業者を経由していたため、', '最終合計に 25% の手数料が加算され', '配送料として 3.00 ドルが請求されました。', 'スティーブンはまた、4.00 ドルのチップを追加しました。']\nquestion = '追加料金を差し引いた後、スティーブンの食料品の最終価格はいくらでしたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['最終請求額は 40.00 ドルになりました。', '最終合計に 25% の手数料が加算され']\nnew_fact = infer_new_fact(selected) # '彼は食料品に 40.00 ドルを費やしましたが、25% の手数料がかかったので、40*.25 = 10.00 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['配送料として 3.00 ドルが請求されました。', 'スティーブンはまた、4.00 ドルのチップを追加しました。']\nnew_fact = infer_new_fact(selected) # 'また、3 ドル + 4ドル = 7.00 ドルの手数料を支払い、3.00 ドルの配送料と 4.00 ドルのチップ代がかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は食料品に 40.00 ドルを費やしましたが、25% の手数料がかかったので、40*.25 = 10.00 ドルになります', 'また、3 ドル + 4ドル = 7.00 ドルの手数料を支払い、3.00 ドルの配送料と 4.00 ドルのチップ代がかかります']\nnew_fact = infer_new_fact(selected) # '食料品は 40.00 ドルで、10.00 ドルの手数料に加えて、さらに 7.00 ドルの配送料/チップ代がかかり、最終的な合計は 40 ドル+ 10 ドル+ 7 ドル = 57.00 ドルになりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['追加料金を差し引いた後、スティーブンの食料品の最終価格はいくらでしたか？', '食料品は 40.00 ドルで、10.00 ドルの手数料に加えて、さらに 7.00 ドルの配送料/チップ代がかかり、最終的な合計は 40 ドル+ 10 ドル+ 7 ドル = 57.00 ドルになりました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 57'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '57'"}
{"id": "GSM8K_59_d2005757cb", "context": "", "options": [], "answer": "187", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit; int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit; int2 & sent3 -> int3: The answer is 187;", "textual_logical_units": {"1": "ラズベリーの木には、それぞれ 20 個の果実からなる房が 6 つあり、", "2": "67 個の果実が木に散在しています。", "3": "ラズベリーは全部でいくつありますか？", "4": "まず、房の中の果実の数を求めます。 20 果実/房 * 6 = 120 果実です", "5": "次に、個々の果実の数を加算して、果実の総数を求めます。 120 果実 + 67 果実 = 187 果実です", "6": "The answer is 187"}, "human_translated": true, "code_input": "####\nfacts = ['ラズベリーの木には、それぞれ 20 個の果実からなる房が 6 つあり、', '67 個の果実が木に散在しています。']\nquestion = 'ラズベリーは全部でいくつありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ラズベリーの木には、それぞれ 20 個の果実からなる房が 6 つあり、']\nnew_fact = infer_new_fact(selected) # 'まず、房の中の果実の数を求めます。 20 果実/房 * 6 = 120 果実です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['67 個の果実が木に散在しています。', 'まず、房の中の果実の数を求めます。 20 果実/房 * 6 = 120 果実です']\nnew_fact = infer_new_fact(selected) # '次に、個々の果実の数を加算して、果実の総数を求めます。 120 果実 + 67 果実 = 187 果実です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラズベリーは全部でいくつありますか？', '次に、個々の果実の数を加算して、果実の総数を求めます。 120 果実 + 67 果実 = 187 果実です']\nnew_fact = infer_new_fact(selected) # 'The answer is 187'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '187'"}
{"id": "GSM8K_60_b4dc5170cd", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 2, 3, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges; int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges; int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good; int3 & sent2 -> int4: The answer is 17;", "textual_logical_units": {"1": "バスケットに 25 個のオレンジが入っており、そのうち 1 個は状態が悪く、20% は熟しておらず、2 個は酸っぱく、残りは良い状態です。", "2": "良い状態のオレンジは何個ありますか？", "3": "25 個のオレンジの 20% は (20/100) *25 = 5 個のオレンジ", "4": "したがって、状態が悪い、熟していない、酸っぱいオレンジの総数は、1 + 5 + 2 = 8 個のオレンジです。", "5": "残りの 25 - 8 = 17 個のオレンジは状態が良いです", "6": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = ['バスケットに 25 個のオレンジが入っており、そのうち 1 個は状態が悪く、20% は熟しておらず、2 個は酸っぱく、残りは良い状態です。']\nquestion = '良い状態のオレンジは何個ありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['バスケットに 25 個のオレンジが入っており、そのうち 1 個は状態が悪く、20% は熟しておらず、2 個は酸っぱく、残りは良い状態です。']\nnew_fact = infer_new_fact(selected) # '25 個のオレンジの 20% は (20/100) *25 = 5 個のオレンジ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バスケットに 25 個のオレンジが入っており、そのうち 1 個は状態が悪く、20% は熟しておらず、2 個は酸っぱく、残りは良い状態です。', '25 個のオレンジの 20% は (20/100) *25 = 5 個のオレンジ']\nnew_fact = infer_new_fact(selected) # 'したがって、状態が悪い、熟していない、酸っぱいオレンジの総数は、1 + 5 + 2 = 8 個のオレンジです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バスケットに 25 個のオレンジが入っており、そのうち 1 個は状態が悪く、20% は熟しておらず、2 個は酸っぱく、残りは良い状態です。', '良い状態のオレンジは何個ありますか？', '25 個のオレンジの 20% は (20/100) *25 = 5 個のオレンジ', 'したがって、状態が悪い、熟していない、酸っぱいオレンジの総数は、1 + 5 + 2 = 8 個のオレンジです。']\nnew_fact = infer_new_fact(selected) # '残りの 25 - 8 = 17 個のオレンジは状態が良いです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['良い状態のオレンジは何個ありますか？', '残りの 25 - 8 = 17 個のオレンジは状態が良いです']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_61_6e93c38f35", "context": "", "options": [], "answer": "1430", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300; int1 & sent4 -> int2: The insurance was 1300*.1=$130; int1 & int2 -> int3: So she pays 1300+130=$1430; int3 & sent5 -> int4: The answer is 1430;", "textual_logical_units": {"1": "ジャネットは娘のためにブローチを買います。", "2": "彼女はそれを作るための材料に 500 ドル払って", "3": "さらに 800 ドルで宝石店に作ってもらいます。", "4": "その後、彼女はその 10% を支払って保険に加入します。", "5": "彼女はいくら払いましたか？", "6": "ブローチの総費用は 500 + 800 = 1300 ドルでした", "7": "保険は 1300 * .1 = 130 ドルでした", "8": "つまり、彼女は 1300 + 13 0= 1430 ドルを支払います", "9": "The answer is 1430"}, "human_translated": true, "code_input": "####\nfacts = ['ジャネットは娘のためにブローチを買います。', '彼女はそれを作るための材料に 500 ドル払って', 'さらに 800 ドルで宝石店に作ってもらいます。', 'その後、彼女はその 10% を支払って保険に加入します。']\nquestion = '彼女はいくら払いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女はそれを作るための材料に 500 ドル払って', 'さらに 800 ドルで宝石店に作ってもらいます。']\nnew_fact = infer_new_fact(selected) # 'ブローチの総費用は 500 + 800 = 1300 ドルでした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女はその 10% を支払って保険に加入します。', 'ブローチの総費用は 500 + 800 = 1300 ドルでした']\nnew_fact = infer_new_fact(selected) # '保険は 1300 * .1 = 130 ドルでした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブローチの総費用は 500 + 800 = 1300 ドルでした', '保険は 1300 * .1 = 130 ドルでした']\nnew_fact = infer_new_fact(selected) # 'つまり、彼女は 1300 + 13 0= 1430 ドルを支払います'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はいくら払いましたか？', 'つまり、彼女は 1300 + 13 0= 1430 ドルを支払います']\nnew_fact = infer_new_fact(selected) # 'The answer is 1430'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1430'"}
{"id": "GSM8K_62_aa8b921815", "context": "", "options": [], "answer": "25000", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years; int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%; int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000; int3 & sent5 -> int4: The answer is 25000;", "textual_logical_units": {"1": "マーシーが同じ会社に 40 年間勤めた場合、", "2": "彼女は年間 5 万ドルの年金を受け取ります", "3": "20 年後から、彼女には年金の額の 5% を受け取る権利が発生します。", "4": "彼女が 30 年後に退職した場合、", "5": "彼女の年収はどうなりますか？", "6": "まず、マーシーが 20 年後に何年働いているかを調べます。 30 年 - 20 年 = 10 年", "7": "次に、その数に彼女が 1 年に受け取る年金の額を掛けます。 10 年 * 5% = 50%", "8": "次に、そのパーセンテージに年金の全額を掛けて、彼女が受け取る金額を求めます。50,000 ドル * 50% = 25,000 ドル", "9": "The answer is 25000"}, "human_translated": true, "code_input": "####\nfacts = ['マーシーが同じ会社に 40 年間勤めた場合、', '彼女は年間 5 万ドルの年金を受け取ります', '20 年後から、彼女には年金の額の 5% を受け取る権利が発生します。', '彼女が 30 年後に退職した場合、']\nquestion = '彼女の年収はどうなりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['20 年後から、彼女には年金の額の 5% を受け取る権利が発生します。', '彼女が 30 年後に退職した場合、']\nnew_fact = infer_new_fact(selected) # 'まず、マーシーが 20 年後に何年働いているかを調べます。 30 年 - 20 年 = 10 年'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 年後から、彼女には年金の額の 5% を受け取る権利が発生します。', 'まず、マーシーが 20 年後に何年働いているかを調べます。 30 年 - 20 年 = 10 年']\nnew_fact = infer_new_fact(selected) # '次に、その数に彼女が 1 年に受け取る年金の額を掛けます。 10 年 * 5% = 50%'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は年間 5 万ドルの年金を受け取ります', '次に、その数に彼女が 1 年に受け取る年金の額を掛けます。 10 年 * 5% = 50%']\nnew_fact = infer_new_fact(selected) # '次に、そのパーセンテージに年金の全額を掛けて、彼女が受け取る金額を求めます。50,000 ドル * 50% = 25,000 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の年収はどうなりますか？', '次に、そのパーセンテージに年金の全額を掛けて、彼女が受け取る金額を求めます。50,000 ドル * 50% = 25,000 ドル']\nnew_fact = infer_new_fact(selected) # 'The answer is 25000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25000'"}
{"id": "GSM8K_63_1883b4fc6e", "context": "", "options": [], "answer": "1596", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 3], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [3, 5, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,; int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840; sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less; int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,; int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.; int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596; int6 & sent4 -> int7: The answer is 1596;", "textual_logical_units": {"1": "アレーナは、1 か月に 140 ドルが請求されるストリーミングサービスに登録しました。", "2": "ストリーミング会社が彼女に最初の半年分の金額を請求し、", "3": "その後、残りの半年に 10% 少ない金額が請求された場合、", "4": "年末までに彼女がストリーミングサービスに支払った合計金額を計算してください。", "5": "1 年は 12 か月なので、1 年の半分は 12/2 = 6 か月です。", "6": "最初の 6 か月間、ストリーミングサービスは彼女に合計 6 * 140 = 840 ドルを請求しました", "7": "その年の次の 6 か月間、ストリーミングサービス会社は彼女に 10/100 * 140 = 14 ドル少ない金額を請求しました", "8": "彼女はその年の残りの 6 か月間、毎月 140 ドル - 14 ドル = 126ドルを支払いました。", "9": "彼女はその年の残りの 6 か月間に、合計で 126 * 6 = 756 ドルをストリーミングサービスに支払いました。", "10": "彼女が年末に支払ったお金の総額は 840 ドル + 756 ドル= 1596 ドルです", "11": "The answer is 1596"}, "human_translated": true, "code_input": "####\nfacts = ['アレーナは、1 か月に 140 ドルが請求されるストリーミングサービスに登録しました。', 'ストリーミング会社が彼女に最初の半年分の金額を請求し、', 'その後、残りの半年に 10% 少ない金額が請求された場合、']\nquestion = '年末までに彼女がストリーミングサービスに支払った合計金額を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ストリーミング会社が彼女に最初の半年分の金額を請求し、']\nnew_fact = infer_new_fact(selected) # '1 年は 12 か月なので、1 年の半分は 12/2 = 6 か月です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アレーナは、1 か月に 140 ドルが請求されるストリーミングサービスに登録しました。', '1 年は 12 か月なので、1 年の半分は 12/2 = 6 か月です。']\nnew_fact = infer_new_fact(selected) # '最初の 6 か月間、ストリーミングサービスは彼女に合計 6 * 140 = 840 ドルを請求しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アレーナは、1 か月に 140 ドルが請求されるストリーミングサービスに登録しました。', 'その後、残りの半年に 10% 少ない金額が請求された場合、']\nnew_fact = infer_new_fact(selected) # 'その年の次の 6 か月間、ストリーミングサービス会社は彼女に 10/100 * 140 = 14 ドル少ない金額を請求しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アレーナは、1 か月に 140 ドルが請求されるストリーミングサービスに登録しました。', 'その年の次の 6 か月間、ストリーミングサービス会社は彼女に 10/100 * 140 = 14 ドル少ない金額を請求しました']\nnew_fact = infer_new_fact(selected) # '彼女はその年の残りの 6 か月間、毎月 140 ドル - 14 ドル = 126ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、残りの半年に 10% 少ない金額が請求された場合、', '1 年は 12 か月なので、1 年の半分は 12/2 = 6 か月です。', '彼女はその年の残りの 6 か月間、毎月 140 ドル - 14 ドル = 126ドルを支払いました。']\nnew_fact = infer_new_fact(selected) # '彼女はその年の残りの 6 か月間に、合計で 126 * 6 = 756 ドルをストリーミングサービスに支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 6 か月間、ストリーミングサービスは彼女に合計 6 * 140 = 840 ドルを請求しました', '彼女はその年の残りの 6 か月間に、合計で 126 * 6 = 756 ドルをストリーミングサービスに支払いました。']\nnew_fact = infer_new_fact(selected) # '彼女が年末に支払ったお金の総額は 840 ドル + 756 ドル= 1596 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['年末までに彼女がストリーミングサービスに支払った合計金額を計算してください。', '彼女が年末に支払ったお金の総額は 840 ドル + 756 ドル= 1596 ドルです']\nnew_fact = infer_new_fact(selected) # 'The answer is 1596'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1596'"}
{"id": "GSM8K_64_74e8075a62", "context": "", "options": [], "answer": "300", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon; int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles; int2 & sent6 -> int3: The answer is 300;", "textual_logical_units": {"1": "ソフィアは車でドライブ旅行をして、", "2": "ガソリンタンク 1 本でどこまで運転できるか知りたいと考えています。", "3": "彼女は最後にガソリンを満タンにしてから 100 マイル走行しましたが、", "4": "再度満タンにするために 4 ガロンのガソリンを入れる必要がありました。", "5": "彼女の車のオーナーマニュアルには、タンクには 12 ガロンのガソリンが入ると書かれています。", "6": "ソフィアは 1 本のガソリンタンクで何マイル走行できますか？", "7": "1 ガロンあたりのマイル数を求めるには、100 マイル/4 ガロン = 25 マイル/ガロンの割り算を使用します", "8": "オリビアが 1 本のタンクで進める距離は、1 ガロンあたり 25 マイル x 12 ガロン = 300 マイルになります", "9": "The answer is 300"}, "human_translated": true, "code_input": "####\nfacts = [ 'ソフィアは車でドライブ旅行をして、',\n  'ガソリンタンク 1 本でどこまで運転できるか知りたいと考えています。',\n  '彼女は最後にガソリンを満タンにしてから 100 マイル走行しましたが、',\n  '再度満タンにするために 4 ガロンのガソリンを入れる必要がありました。',\n  '彼女の車のオーナーマニュアルには、タンクには 12 ガロンのガソリンが入ると書かれています。']\nquestion = 'ソフィアは 1 本のガソリンタンクで何マイル走行できますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は最後にガソリンを満タンにしてから 100 マイル走行しましたが、', '再度満タンにするために 4 ガロンのガソリンを入れる必要がありました。']\nnew_fact = infer_new_fact(selected) # '1 ガロンあたりのマイル数を求めるには、100 マイル/4 ガロン = 25 マイル/ガロンの割り算を使用します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の車のオーナーマニュアルには、タンクには 12 ガロンのガソリンが入ると書かれています。', '1 ガロンあたりのマイル数を求めるには、100 マイル/4 ガロン = 25 マイル/ガロンの割り算を使用します']\nnew_fact = infer_new_fact(selected) # 'オリビアが 1 本のタンクで進める距離は、1 ガロンあたり 25 マイル x 12 ガロン = 300 マイルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ソフィアは 1 本のガソリンタンクで何マイル走行できますか？', 'オリビアが 1 本のタンクで進める距離は、1 ガロンあたり 25 マイル x 12 ガロン = 300 マイルになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 300'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '300'"}
{"id": "GSM8K_65_b2468a824b", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night; int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities; int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them; int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities; int4 & sent5 -> int5: The answer is 36;", "textual_logical_units": {"1": "ジムは 2 時間テレビを見て", "2": "その後、寝ることにしてから", "3": "テレビを見る半分の時間で読書します。", "4": "彼はこれを週に 3 回行います。", "5": "彼は 4 週間でテレビや読書に何時間を費やしていますか？", "6": "彼は一晩に 2/2 = 1 時間読書します", "7": "つまり、彼はこれらの活動に 2 + 1 = 3 時間を費やしています", "8": "つまり、彼は週に 3 * 3 = 9 時間をそれらに費やしているということです", "9": "つまり、4 週間で、彼はこれらの活動に 9 * 4 = 36 時間を費やしています", "10": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['ジムは 2 時間テレビを見て', 'その後、寝ることにしてから', 'テレビを見る半分の時間で読書します。', '彼はこれを週に 3 回行います。']\nquestion = '彼は 4 週間でテレビや読書に何時間を費やしていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジムは 2 時間テレビを見て', 'その後、寝ることにしてから', 'テレビを見る半分の時間で読書します。']\nnew_fact = infer_new_fact(selected) # '彼は一晩に 2/2 = 1 時間読書します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジムは 2 時間テレビを見て', 'テレビを見る半分の時間で読書します。', '彼は一晩に 2/2 = 1 時間読書します']\nnew_fact = infer_new_fact(selected) # 'つまり、彼はこれらの活動に 2 + 1 = 3 時間を費やしています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はこれを週に 3 回行います。', '彼は一晩に 2/2 = 1 時間読書します', 'つまり、彼はこれらの活動に 2 + 1 = 3 時間を費やしています']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 3 * 3 = 9 時間をそれらに費やしているということです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 4 週間でテレビや読書に何時間を費やしていますか？', 'つまり、彼は週に 3 * 3 = 9 時間をそれらに費やしているということです']\nnew_fact = infer_new_fact(selected) # 'つまり、4 週間で、彼はこれらの活動に 9 * 4 = 36 時間を費やしています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 4 週間でテレビや読書に何時間を費やしていますか？', 'つまり、4 週間で、彼はこれらの活動に 9 * 4 = 36 時間を費やしています']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_66_c163f23711", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [2, 3, 5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.; int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.; sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.; int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.; int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.; int5 & sent6 -> int6: The answer is 48;", "textual_logical_units": {"1": "バスケットボール大会には 4 つの学校が参加しています。", "2": "各学校は女子バスケットボールチームと", "3": "男子バスケットボールチームを派遣し、", "4": "各チームにはそれぞれ 5 人の選手がいます。", "5": "各学校は各チームにコーチを派遣しています。", "6": "すべての学校から派遣された人数は合計で何人ですか？", "7": "各学校は、女子バスケットボールチーム 1 チーム + 男子バスケットボールチーム 1 チーム = 2 チームを派遣しました。", "8": "つまり、各学校は 2 チーム x 1 チームあたり 5 人 = 10 人の選手を派遣しました。", "9": "また、それぞれ 2 チーム × 1 チームあたり 1 人のコーチ = 2 人のコーチを派遣しています。", "10": "合計で、各学校は 10 人の選手 + 2 人のコーチ= 12人を派遣しています。", "11": "したがって、各学校は 1 校につき合計 12 人 * 4校 = 48 人を派遣しています。", "12": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = ['バスケットボール大会には 4 つの学校が参加しています。', '各学校は女子バスケットボールチームと', '男子バスケットボールチームを派遣し、', '各チームにはそれぞれ 5 人の選手がいます。', '各学校は各チームにコーチを派遣しています。']\nquestion = 'すべての学校から派遣された人数は合計で何人ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['各学校は女子バスケットボールチームと', '男子バスケットボールチームを派遣し、']\nnew_fact = infer_new_fact(selected) # '各学校は、女子バスケットボールチーム 1 チーム + 男子バスケットボールチーム 1 チーム = 2 チームを派遣しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各チームにはそれぞれ 5 人の選手がいます。', '各学校は、女子バスケットボールチーム 1 チーム + 男子バスケットボールチーム 1 チーム = 2 チームを派遣しました。']\nnew_fact = infer_new_fact(selected) # 'つまり、各学校は 2 チーム x 1 チームあたり 5 人 = 10 人の選手を派遣しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各学校は女子バスケットボールチームと', '男子バスケットボールチームを派遣し、', '各学校は各チームにコーチを派遣しています。']\nnew_fact = infer_new_fact(selected) # 'また、それぞれ 2 チーム × 1 チームあたり 1 人のコーチ = 2 人のコーチを派遣しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、各学校は 2 チーム x 1 チームあたり 5 人 = 10 人の選手を派遣しました。', 'また、それぞれ 2 チーム × 1 チームあたり 1 人のコーチ = 2 人のコーチを派遣しています。']\nnew_fact = infer_new_fact(selected) # '合計で、各学校は 10 人の選手 + 2 人のコーチ= 12人を派遣しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バスケットボール大会には 4 つの学校が参加しています。', '合計で、各学校は 10 人の選手 + 2 人のコーチ= 12人を派遣しています。']\nnew_fact = infer_new_fact(selected) # 'したがって、各学校は 1 校につき合計 12 人 * 4校 = 48 人を派遣しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すべての学校から派遣された人数は合計で何人ですか？', 'したがって、各学校は 1 校につき合計 12 人 * 4校 = 48 人を派遣しています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_67_eac7b1ff98", "context": "", "options": [], "answer": "595", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.; int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.; int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.; int3 & sent4 -> int4: The answer is 595;", "textual_logical_units": {"1": "トレジャーハンターは、宝石が詰まっている埋もれた宝箱を見つけました。", "2": "ダイヤモンドは 175 個で、ルビーはダイヤモンドより 35 個少なく、", "3": "エメラルドの数はルビーの 2 倍でした。", "4": "宝箱にはいくつの宝石が入っていましたか？", "5": "宝箱には 175 - 35 = 140 個のルビーが入っていました。", "6": "宝箱には 140 x 2 = 280 個のエメラルドが入っていました。", "7": "つまり、宝箱に入ってい宝石の総数は 175 + 140 + 280 = 595 個です。", "8": "The answer is 595"}, "human_translated": true, "code_input": "####\nfacts = ['トレジャーハンターは、宝石が詰まっている埋もれた宝箱を見つけました。', 'ダイヤモンドは 175 個で、ルビーはダイヤモンドより 35 個少なく、', 'エメラルドの数はルビーの 2 倍でした。']\nquestion = '宝箱にはいくつの宝石が入っていましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ダイヤモンドは 175 個で、ルビーはダイヤモンドより 35 個少なく、']\nnew_fact = infer_new_fact(selected) # '宝箱には 175 - 35 = 140 個のルビーが入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エメラルドの数はルビーの 2 倍でした。', '宝箱には 175 - 35 = 140 個のルビーが入っていました。']\nnew_fact = infer_new_fact(selected) # '宝箱には 140 x 2 = 280 個のエメラルドが入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ダイヤモンドは 175 個で、ルビーはダイヤモンドより 35 個少なく、', '宝箱には 175 - 35 = 140 個のルビーが入っていました。', '宝箱には 140 x 2 = 280 個のエメラルドが入っていました。']\nnew_fact = infer_new_fact(selected) # 'つまり、宝箱に入ってい宝石の総数は 175 + 140 + 280 = 595 個です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['宝箱にはいくつの宝石が入っていましたか？', 'つまり、宝箱に入ってい宝石の総数は 175 + 140 + 280 = 595 個です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 595'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '595'"}
{"id": "GSM8K_68_e7bde02c2e", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys; int1 & sent3 -> int2: There are 120 + 60 = 180 students in total; int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers; int3 & sent5 -> int4: The answer is 36;", "textual_logical_units": {"1": "ワーツ博士の学校には", "2": "女子の 2 倍の男子がいます。", "3": "60 人の女子がいて", "4": "それぞれの教師に 5 人の生徒がいる場合、", "5": "先生は何人いますか？", "6": "男子は女子の 2 倍なので、女子が 60 人いる場合、男子は 2 * 60 = 120 人です", "7": "合計で 120 人+ 60 人 = 180 人の生徒がいます", "8": "各教師に 5 人の生徒がいる場合、180 人の学生には 180/5 = 36 人の教師が必要です", "9": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['ワーツ博士の学校には', '女子の 2 倍の男子がいます。', '60 人の女子がいて', 'それぞれの教師に 5 人の生徒がいる場合、']\nquestion = '先生は何人いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ワーツ博士の学校には', '60 人の女子がいて']\nnew_fact = infer_new_fact(selected) # '男子は女子の 2 倍なので、女子が 60 人いる場合、男子は 2 * 60 = 120 人です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['60 人の女子がいて', '男子は女子の 2 倍なので、女子が 60 人いる場合、男子は 2 * 60 = 120 人です']\nnew_fact = infer_new_fact(selected) # '合計で 120 人+ 60 人 = 180 人の生徒がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれの教師に 5 人の生徒がいる場合、', '合計で 120 人+ 60 人 = 180 人の生徒がいます']\nnew_fact = infer_new_fact(selected) # '各教師に 5 人の生徒がいる場合、180 人の学生には 180/5 = 36 人の教師が必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['先生は何人いますか？', '各教師に 5 人の生徒がいる場合、180 人の学生には 180/5 = 36 人の教師が必要です']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_69_3b456d32d8", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [3, 4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance; int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60; int2 & sent3 & sent4 & sent5 -> int3: The answer is 60;", "textual_logical_units": {"1": "ベイリーは一定の金額から始めます。", "2": "その後、彼女は 8 週間にわたって週 5 ドルの手当を受け取ります。", "3": "8 週間目の終わりに、", "4": "彼女が合計 100 ドル持っていた場合、", "5": "ベイリーはどれくらいのお金で始めたことになりますか？", "6": "8 週間で、ベイリーは 5 ドル* 8 = 40 ドルの手当を受け取ります", "7": "ベイリーは 100 ドル - 40 ドル = 60 ドルで始めました", "8": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['ベイリーは一定の金額から始めます。', 'その後、彼女は 8 週間にわたって週 5 ドルの手当を受け取ります。', '8 週間目の終わりに、', '彼女が合計 100 ドル持っていた場合、']\nquestion = 'ベイリーはどれくらいのお金で始めたことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['その後、彼女は 8 週間にわたって週 5 ドルの手当を受け取ります。']\nnew_fact = infer_new_fact(selected) # '8 週間で、ベイリーは 5 ドル* 8 = 40 ドルの手当を受け取ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8 週間目の終わりに、', '彼女が合計 100 ドル持っていた場合、', '8 週間で、ベイリーは 5 ドル* 8 = 40 ドルの手当を受け取ります']\nnew_fact = infer_new_fact(selected) # 'ベイリーは 100 ドル - 40 ドル = 60 ドルで始めました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8 週間目の終わりに、', '彼女が合計 100 ドル持っていた場合、', 'ベイリーはどれくらいのお金で始めたことになりますか？', 'ベイリーは 100 ドル - 40 ドル = 60 ドルで始めました']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_70_5540274292", "context": "", "options": [], "answer": "7425", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes; int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes; int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students; int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425; int4 & sent2 & sent3 & sent4 -> int5: The answer is 7425;", "textual_logical_units": {"1": "ジュディは、平日は毎日 5 回、土曜日は 8 回のダンスクラスを教えています。", "2": "各クラスに 15 人の学生がいて、", "3": "学生一人あたり 15.00 ドルを請求する場合、", "4": "彼女は 1 週間でどれくらいのお金を稼ぎますか？", "5": "彼女は週 5 日、5 回のダンスクラスを教えているので、5 * 5 = 25 クラスになります", "6": "彼女は平日に 25 クラス、土曜日に 8 クラス、合計 25 + 8 = 33 クラスを教えています。", "7": "33 クラスのそれぞれに 15 人の生徒がいるので、15 * 33 = 495 人の生徒がいることになります", "8": "各生徒は 1 クラスあたり 15.00 ドルを支払い、495 人の生徒がいるため、ジュディは 15 * 495 = 7,425 ドル稼いでいます", "9": "The answer is 7425"}, "human_translated": true, "code_input": "####\nfacts = ['ジュディは、平日は毎日 5 回、土曜日は 8 回のダンスクラスを教えています。', '各クラスに 15 人の学生がいて、', '学生一人あたり 15.00 ドルを請求する場合、']\nquestion = '彼女は 1 週間でどれくらいのお金を稼ぎますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジュディは、平日は毎日 5 回、土曜日は 8 回のダンスクラスを教えています。']\nnew_fact = infer_new_fact(selected) # '彼女は週 5 日、5 回のダンスクラスを教えているので、5 * 5 = 25 クラスになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジュディは、平日は毎日 5 回、土曜日は 8 回のダンスクラスを教えています。', '彼女は週 5 日、5 回のダンスクラスを教えているので、5 * 5 = 25 クラスになります']\nnew_fact = infer_new_fact(selected) # '彼女は平日に 25 クラス、土曜日に 8 クラス、合計 25 + 8 = 33 クラスを教えています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各クラスに 15 人の学生がいて、', '彼女は平日に 25 クラス、土曜日に 8 クラス、合計 25 + 8 = 33 クラスを教えています。']\nnew_fact = infer_new_fact(selected) # '33 クラスのそれぞれに 15 人の生徒がいるので、15 * 33 = 495 人の生徒がいることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['学生一人あたり 15.00 ドルを請求する場合、', '33 クラスのそれぞれに 15 人の生徒がいるので、15 * 33 = 495 人の生徒がいることになります']\nnew_fact = infer_new_fact(selected) # '各生徒は 1 クラスあたり 15.00 ドルを支払い、495 人の生徒がいるため、ジュディは 15 * 495 = 7,425 ドル稼いでいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各クラスに 15 人の学生がいて、', '学生一人あたり 15.00 ドルを請求する場合、', '彼女は 1 週間でどれくらいのお金を稼ぎますか？', '各生徒は 1 クラスあたり 15.00 ドルを支払い、495 人の生徒がいるため、ジュディは 15 * 495 = 7,425 ドル稼いでいます']\nnew_fact = infer_new_fact(selected) # 'The answer is 7425'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7425'"}
{"id": "GSM8K_71_c4f2bf54b1", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.; int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.; int2 & sent4 -> int3: The answer is 60;", "textual_logical_units": {"1": "ケリアンは料理を作るためのレシピを 2 つ使います。", "2": "1 つ目には 20 個の説明があり", "3": "2 つ目には 1 つ目の 2 倍の説明があります。", "4": "ケリアンが 2 つの料理を作るには、説明をいくつ読まなければなりませんか？", "5": "2 つ目のレシピには 2 * 20 個の説明 = 40 個の説明があります。", "6": "2 つの料理を合計すると、40 個の説明+ 20 個の説明= 60 個の説明になります。", "7": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['ケリアンは料理を作るためのレシピを 2 つ使います。', '1 つ目には 20 個の説明があり', '2 つ目には 1 つ目の 2 倍の説明があります。']\nquestion = 'ケリアンが 2 つの料理を作るには、説明をいくつ読まなければなりませんか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 つ目には 20 個の説明があり', '2 つ目には 1 つ目の 2 倍の説明があります。']\nnew_fact = infer_new_fact(selected) # '2 つ目のレシピには 2 * 20 個の説明 = 40 個の説明があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 つ目には 20 個の説明があり', '2 つ目のレシピには 2 * 20 個の説明 = 40 個の説明があります。']\nnew_fact = infer_new_fact(selected) # '2 つの料理を合計すると、40 個の説明+ 20 個の説明= 60 個の説明になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ケリアンが 2 つの料理を作るには、説明をいくつ読まなければなりませんか？', '2 つの料理を合計すると、40 個の説明+ 20 個の説明= 60 個の説明になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_72_53c969e291", "context": "", "options": [], "answer": "221", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.; sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.; int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221; int3 & sent3 & sent4 -> int4: The answer is 221;", "textual_logical_units": {"1": "トミーはブラウニーを 1 切れ 3 ドル、チーズケーキを 1 切れ 4 ドルで売って、", "2": "チャリティーの募金活動を行っています。", "3": "トミーがブラウニー 43 枚とチーズケーキ 23 枚を売った場合、", "4": "トミーはどのくらいのお金を集めることになりますか？", "5": "トミーはブラウニーを売って、43 個のブラウニー x 3 ドル/ブラウニー = 129 ドルを稼ぎました。", "6": "トミーはチーズケーキを売って 23 切れ x 4 ドル = 92 ドルを稼ぎましだ。", "7": "トミーは合計で 129 ドル + 92 ドル = 221 ドルを稼ぎました", "8": "The answer is 221"}, "human_translated": true, "code_input": "####\nfacts = ['トミーはブラウニーを 1 切れ 3 ドル、チーズケーキを 1 切れ 4 ドルで売って、', 'チャリティーの募金活動を行っています。', 'トミーがブラウニー 43 枚とチーズケーキ 23 枚を売った場合、']\nquestion = 'トミーはどのくらいのお金を集めることになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['トミーはブラウニーを 1 切れ 3 ドル、チーズケーキを 1 切れ 4 ドルで売って、', 'トミーがブラウニー 43 枚とチーズケーキ 23 枚を売った場合、']\nnew_fact = infer_new_fact(selected) # 'トミーはブラウニーを売って、43 個のブラウニー x 3 ドル/ブラウニー = 129 ドルを稼ぎました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チャリティーの募金活動を行っています。', 'トミーがブラウニー 43 枚とチーズケーキ 23 枚を売った場合、']\nnew_fact = infer_new_fact(selected) # 'トミーはチーズケーキを売って 23 切れ x 4 ドル = 92 ドルを稼ぎましだ。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トミーはどのくらいのお金を集めることになりますか？', 'トミーはブラウニーを売って、43 個のブラウニー x 3 ドル/ブラウニー = 129 ドルを稼ぎました。', 'トミーはチーズケーキを売って 23 切れ x 4 ドル = 92 ドルを稼ぎましだ。']\nnew_fact = infer_new_fact(selected) # 'トミーは合計で 129 ドル + 92 ドル = 221 ドルを稼ぎました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トミーがブラウニー 43 枚とチーズケーキ 23 枚を売った場合、', 'トミーはどのくらいのお金を集めることになりますか？', 'トミーは合計で 129 ドル + 92 ドル = 221 ドルを稼ぎました']\nnew_fact = infer_new_fact(selected) # 'The answer is 221'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '221'"}
{"id": "GSM8K_73_5e0a20f343", "context": "", "options": [], "answer": "255", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.; int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.; int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.; int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.; int4 & sent3 -> int5: The answer is 255;", "textual_logical_units": {"1": "シーラは、3 か月の分割払いで 5 台の携帯電話をそれぞれ 150 ドルで購入しました。", "2": "1 個につき 2% の金利がかかります。", "3": "シーラは 3 か月間、毎月いくら払いますか？", "4": "1 個につき 150 ドル x 2/100 = 3 ドルの金利がかかります。", "5": "つまり、携帯電話 1 台の価格は 150 ドル + 3 ドル= 153 ドルです。", "6": "5 台の携帯電話に支払われる合計金額は 153 ドル x 5 = 765 ドルです。", "7": "したがって、シーラは毎月 765 ドル/3 = 255 ドルを支払うことになります。", "8": "The answer is 255"}, "human_translated": true, "code_input": "####\nfacts = ['シーラは、3 か月の分割払いで 5 台の携帯電話をそれぞれ 150 ドルで購入しました。', '1 個につき 2% の金利がかかります。']\nquestion = 'シーラは 3 か月間、毎月いくら払いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['シーラは、3 か月の分割払いで 5 台の携帯電話をそれぞれ 150 ドルで購入しました。', '1 個につき 2% の金利がかかります。']\nnew_fact = infer_new_fact(selected) # '1 個につき 150 ドル x 2/100 = 3 ドルの金利がかかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シーラは、3 か月の分割払いで 5 台の携帯電話をそれぞれ 150 ドルで購入しました。', '1 個につき 150 ドル x 2/100 = 3 ドルの金利がかかります。']\nnew_fact = infer_new_fact(selected) # 'つまり、携帯電話 1 台の価格は 150 ドル + 3 ドル= 153 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シーラは、3 か月の分割払いで 5 台の携帯電話をそれぞれ 150 ドルで購入しました。', 'つまり、携帯電話 1 台の価格は 150 ドル + 3 ドル= 153 ドルです。']\nnew_fact = infer_new_fact(selected) # '5 台の携帯電話に支払われる合計金額は 153 ドル x 5 = 765 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シーラは 3 か月間、毎月いくら払いますか？', '5 台の携帯電話に支払われる合計金額は 153 ドル x 5 = 765 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、シーラは毎月 765 ドル/3 = 255 ドルを支払うことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シーラは 3 か月間、毎月いくら払いますか？', 'したがって、シーラは毎月 765 ドル/3 = 255 ドルを支払うことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 255'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '255'"}
{"id": "GSM8K_74_0a4493ada4", "context": "", "options": [], "answer": "88", "reasoning_graph_edges": [{"antecedents": [3, 7], "consequent": 11}, {"antecedents": [4, 7], "consequent": 12}, {"antecedents": [5, 7], "consequent": 13}, {"antecedents": [8, 11], "consequent": 14}, {"antecedents": [9, 12], "consequent": 15}, {"antecedents": [9, 13], "consequent": 16}, {"antecedents": [10, 14, 15, 16], "consequent": 17}, {"antecedents": [8, 9, 10, 17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.; sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.; sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.; int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36; int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18; int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34; int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88; int7 & sent10 & sent8 & sent9 -> int8: The answer is 88;", "textual_logical_units": {"1": "アーティは直売所にフラワースタンドを設置しています。", "2": "彼はマリーゴールド、ペチュニア、ベゴニアの 3 種類の花を販売しています。", "3": "彼は通常、マリーゴールドを 1 ポットあたり 2.74 ドル、", "4": "ペチュニアを 1 ポットあたり 1.87 ドル、", "5": "ベゴニアを1ポットあたり 2.12 ドルで販売しています。", "6": "アーティには今日、釣り銭がないため、", "7": "すべての価格を一番近い金額に四捨五入することにしました。", "8": "アーティがマリーゴールドを 12 ポット、", "9": "ペチュニアを 9 ポット、ベゴニアを 17 ポット売った場合、", "10": "彼はいくら稼ぎますか？", "11": "2 に続く数字が 5 以上のため、アーティはマリーゴールドを 2.74 ドルから 3 ドルに切り上げます。", "12": "1 に続く数字が 5 以上のため、アーティはペチュニアを 1.87 ドルから 2 ドルに切り上げます。", "13": "2 に続く数字が 5 未満のため、アーティはベゴニアを 2.12 ドルから 2 ドルに切り下げます。", "14": "アーティは 12 個のマリーゴールドを x 3ドル = 36 ドルで販売します", "15": "アーティは 9 個のペチュニアを x 2ドル = 18 ドルで販売します", "16": "アーティは 1 7個のベゴニアを x 2ドル = 34 ドルで販売します", "17": "合計すると、アーティは 36 ドル + 18 ドル + 34ドル = 88 ドルを稼ぐことになります", "18": "The answer is 88"}, "human_translated": true, "code_input": "####\nfacts = [ 'アーティは直売所にフラワースタンドを設置しています。',\n  '彼はマリーゴールド、ペチュニア、ベゴニアの 3 種類の花を販売しています。',\n  '彼は通常、マリーゴールドを 1 ポットあたり 2.74 ドル、',\n  'ペチュニアを 1 ポットあたり 1.87 ドル、',\n  'ベゴニアを1ポットあたり 2.12 ドルで販売しています。',\n  'アーティには今日、釣り銭がないため、',\n  'すべての価格を一番近い金額に四捨五入することにしました。',\n  'アーティがマリーゴールドを 12 ポット、',\n  'ペチュニアを 9 ポット、ベゴニアを 17 ポット売った場合、']\nquestion = '彼はいくら稼ぎますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は通常、マリーゴールドを 1 ポットあたり 2.74 ドル、', 'すべての価格を一番近い金額に四捨五入することにしました。']\nnew_fact = infer_new_fact(selected) # '2 に続く数字が 5 以上のため、アーティはマリーゴールドを 2.74 ドルから 3 ドルに切り上げます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ペチュニアを 1 ポットあたり 1.87 ドル、', 'すべての価格を一番近い金額に四捨五入することにしました。']\nnew_fact = infer_new_fact(selected) # '1 に続く数字が 5 以上のため、アーティはペチュニアを 1.87 ドルから 2 ドルに切り上げます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ベゴニアを1ポットあたり 2.12 ドルで販売しています。', 'すべての価格を一番近い金額に四捨五入することにしました。']\nnew_fact = infer_new_fact(selected) # '2 に続く数字が 5 未満のため、アーティはベゴニアを 2.12 ドルから 2 ドルに切り下げます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アーティがマリーゴールドを 12 ポット、', '2 に続く数字が 5 以上のため、アーティはマリーゴールドを 2.74 ドルから 3 ドルに切り上げます。']\nnew_fact = infer_new_fact(selected) # 'アーティは 12 個のマリーゴールドを x 3ドル = 36 ドルで販売します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ペチュニアを 9 ポット、ベゴニアを 17 ポット売った場合、', '1 に続く数字が 5 以上のため、アーティはペチュニアを 1.87 ドルから 2 ドルに切り上げます。']\nnew_fact = infer_new_fact(selected) # 'アーティは 9 個のペチュニアを x 2ドル = 18 ドルで販売します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ペチュニアを 9 ポット、ベゴニアを 17 ポット売った場合、', '2 に続く数字が 5 未満のため、アーティはベゴニアを 2.12 ドルから 2 ドルに切り下げます。']\nnew_fact = infer_new_fact(selected) # 'アーティは 1 7個のベゴニアを x 2ドル = 34 ドルで販売します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はいくら稼ぎますか？', 'アーティは 12 個のマリーゴールドを x 3ドル = 36 ドルで販売します', 'アーティは 9 個のペチュニアを x 2ドル = 18 ドルで販売します', 'アーティは 1 7個のベゴニアを x 2ドル = 34 ドルで販売します']\nnew_fact = infer_new_fact(selected) # '合計すると、アーティは 36 ドル + 18 ドル + 34ドル = 88 ドルを稼ぐことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アーティがマリーゴールドを 12 ポット、', 'ペチュニアを 9 ポット、ベゴニアを 17 ポット売った場合、', '彼はいくら稼ぎますか？', '合計すると、アーティは 36 ドル + 18 ドル + 34ドル = 88 ドルを稼ぐことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 88'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '88'"}
{"id": "GSM8K_75_df37851fde", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32; int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64; int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128; int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240; int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60; int5 & sent3 & sent4 -> int6: The answer is 60;", "textual_logical_units": {"1": "ルークはビーチで砂のお城を作って時間を過ごしています。", "2": "やがて彼は、砂の城の各階の面積が、その下の階の半分になることに気付きました。", "3": "彼が最上階の面積が 1.48 平方メートルで 4 階建ての砂のお城を作った場合、", "4": "各階の平均面積はどれくらいですか？", "5": "1.48 x 2 = 2.97 なので、3 階は 2.97 平方メートルです。", "6": "2.97 x 2 = 5.94 なので、2 階は 5.94 平方メートルです", "7": "5.94 x 2 = 11.89 なので、1 階は 11.89 平方メートルです", "8": "11.89 + 5.94 + 2.97 + 1.48 = 22.28 なので、4 つの階は合計で 22.28 平方メートルになります", "9": "22.28/4 = 5.54なので、各階の平均面積は 5.54 平方メートルです。", "10": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['ルークはビーチで砂のお城を作って時間を過ごしています。', 'やがて彼は、砂の城の各階の面積が、その下の階の半分になることに気付きました。', '彼が最上階の面積が 1.48 平方メートルで 4 階建ての砂のお城を作った場合、']\nquestion = '各階の平均面積はどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['やがて彼は、砂の城の各階の面積が、その下の階の半分になることに気付きました。', '彼が最上階の面積が 1.48 平方メートルで 4 階建ての砂のお城を作った場合、']\nnew_fact = infer_new_fact(selected) # '1.48 x 2 = 2.97 なので、3 階は 2.97 平方メートルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['やがて彼は、砂の城の各階の面積が、その下の階の半分になることに気付きました。', '1.48 x 2 = 2.97 なので、3 階は 2.97 平方メートルです。']\nnew_fact = infer_new_fact(selected) # '2.97 x 2 = 5.94 なので、2 階は 5.94 平方メートルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['やがて彼は、砂の城の各階の面積が、その下の階の半分になることに気付きました。', '2.97 x 2 = 5.94 なので、2 階は 5.94 平方メートルです']\nnew_fact = infer_new_fact(selected) # '5.94 x 2 = 11.89 なので、1 階は 11.89 平方メートルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が最上階の面積が 1.48 平方メートルで 4 階建ての砂のお城を作った場合、', '1.48 x 2 = 2.97 なので、3 階は 2.97 平方メートルです。', '2.97 x 2 = 5.94 なので、2 階は 5.94 平方メートルです', '5.94 x 2 = 11.89 なので、1 階は 11.89 平方メートルです']\nnew_fact = infer_new_fact(selected) # '11.89 + 5.94 + 2.97 + 1.48 = 22.28 なので、4 つの階は合計で 22.28 平方メートルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各階の平均面積はどれくらいですか？', '11.89 + 5.94 + 2.97 + 1.48 = 22.28 なので、4 つの階は合計で 22.28 平方メートルになります']\nnew_fact = infer_new_fact(selected) # '22.28/4 = 5.54なので、各階の平均面積は 5.54 平方メートルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が最上階の面積が 1.48 平方メートルで 4 階建ての砂のお城を作った場合、', '各階の平均面積はどれくらいですか？', '22.28/4 = 5.54なので、各階の平均面積は 5.54 平方メートルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_76_92aabda037", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}, {"antecedents": [4, 5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: The number of cups of dog food given for the first 180 days is 180 * 1 = 180 cups; int1 -> int2: The number of days left in the year is 365 - 180 = 185; int2 & sent3 -> int3: The number of cups of dog food given for the rest of the first year is 185 * 2 = 370 cups; int1 & int3 -> int4: The total number of cups given in the first year is 180 + 370 = 550 cups; int4 & sent4 & sent5 -> int5: The number of bags of dog food used in the first year is 550 / 110 = 5 bags; int5 & sent4 & sent5 -> int6: The answer is 5;", "textual_logical_units": {"1": "セシリアは新しい子犬を買ったばかりです。", "2": "獣医によると、彼女は最初の 180 日間、子犬に毎日 1 カップのドッグフードを与えなければなりません。", "3": "その後、彼女は子犬に毎日 2 カップのドッグフードを一生与えなければなりません。", "4": "ドッグフード 1 袋に 110 カップ分が入っている場合、", "5": "セシリアは最初の年に何袋のドッグフードを使いますか？", "6": "最初の 180 日間に与えるドッグフードのカップ数は 180 * 1 = 180 カップです", "7": "その年の残り日数は 365 - 180 = 185 日です", "8": "最初の年の残りの期間に与えるドッグフードのカップ数は 185 * 2 = 370 カップです", "9": "最初の年に与えるカップの総数は 180 + 370 = 550 カップです", "10": "最初の年に使用したドッグフードの袋の数は 550/110 = 5 袋です", "11": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['セシリアは新しい子犬を買ったばかりです。', '獣医によると、彼女は最初の 180 日間、子犬に毎日 1 カップのドッグフードを与えなければなりません。', 'その後、彼女は子犬に毎日 2 カップのドッグフードを一生与えなければなりません。', 'ドッグフード 1 袋に 110 カップ分が入っている場合、']\nquestion = 'セシリアは最初の年に何袋のドッグフードを使いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['獣医によると、彼女は最初の 180 日間、子犬に毎日 1 カップのドッグフードを与えなければなりません。']\nnew_fact = infer_new_fact(selected) # '最初の 180 日間に与えるドッグフードのカップ数は 180 * 1 = 180 カップです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 180 日間に与えるドッグフードのカップ数は 180 * 1 = 180 カップです']\nnew_fact = infer_new_fact(selected) # 'その年の残り日数は 365 - 180 = 185 日です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は子犬に毎日 2 カップのドッグフードを一生与えなければなりません。', 'その年の残り日数は 365 - 180 = 185 日です']\nnew_fact = infer_new_fact(selected) # '最初の年の残りの期間に与えるドッグフードのカップ数は 185 * 2 = 370 カップです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 180 日間に与えるドッグフードのカップ数は 180 * 1 = 180 カップです', '最初の年の残りの期間に与えるドッグフードのカップ数は 185 * 2 = 370 カップです']\nnew_fact = infer_new_fact(selected) # '最初の年に与えるカップの総数は 180 + 370 = 550 カップです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ドッグフード 1 袋に 110 カップ分が入っている場合、', 'セシリアは最初の年に何袋のドッグフードを使いますか？', '最初の年に与えるカップの総数は 180 + 370 = 550 カップです']\nnew_fact = infer_new_fact(selected) # '最初の年に使用したドッグフードの袋の数は 550/110 = 5 袋です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ドッグフード 1 袋に 110 カップ分が入っている場合、', 'セシリアは最初の年に何袋のドッグフードを使いますか？', '最初の年に使用したドッグフードの袋の数は 550/110 = 5 袋です']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_77_8aff5c238d", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [1, 2, 3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: If Sarah does 400 pounds of laundry, and Raymond does half as much laundry as Sarah, Raymond does 1/2*400 = 200 pounds of laundry.; sent2 & sent4 -> int2: Sara also does 4 times as much laundry as David, meaning David does 400/4 = 100 pounds of laundry.; int1 & int2 & sent3 -> int3: The difference in the amount of laundry Raymond and David do is 200-100 = 100 pounds; int3 & sent1 & sent2 & sent3 & sent4 -> int4: The answer is 100;", "textual_logical_units": {"1": "レイモンドがサラの半分の量の洗濯をし、", "2": "サラがデイビッドの 4 倍の量の洗濯をするとして、", "3": "サラが 181.43 キログラムの洗濯をした場合の", "4": "レイモンドとデイビッドの洗濯の量の差を計算してください。", "5": "サラが 181.43 キログラムの洗濯をし、レイモンドがサラの半分の洗濯をした場合、レイモンドは 1/2 * 181.43 = 90.71 キログラムの洗濯をします。", "6": "サラはデイビッドの 4 倍の洗濯もします。つまり、デイビッドは 181.43/4 = 45.35 キログラムの洗濯をします。", "7": "レイモンドとデイビッドが洗濯する量の差は 181.43 - 45.35 = 136.08 キログラムです", "8": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = ['レイモンドがサラの半分の量の洗濯をし、', 'サラがデイビッドの 4 倍の量の洗濯をするとして、', 'サラが 181.43 キログラムの洗濯をした場合の']\nquestion = 'レイモンドとデイビッドの洗濯の量の差を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['レイモンドがサラの半分の量の洗濯をし、', 'レイモンドとデイビッドの洗濯の量の差を計算してください。']\nnew_fact = infer_new_fact(selected) # 'サラが 181.43 キログラムの洗濯をし、レイモンドがサラの半分の洗濯をした場合、レイモンドは 1/2 * 181.43 = 90.71 キログラムの洗濯をします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サラがデイビッドの 4 倍の量の洗濯をするとして、', 'レイモンドとデイビッドの洗濯の量の差を計算してください。']\nnew_fact = infer_new_fact(selected) # 'サラはデイビッドの 4 倍の洗濯もします。つまり、デイビッドは 181.43/4 = 45.35 キログラムの洗濯をします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サラが 181.43 キログラムの洗濯をした場合の', 'サラが 181.43 キログラムの洗濯をし、レイモンドがサラの半分の洗濯をした場合、レイモンドは 1/2 * 181.43 = 90.71 キログラムの洗濯をします。', 'サラはデイビッドの 4 倍の洗濯もします。つまり、デイビッドは 181.43/4 = 45.35 キログラムの洗濯をします。']\nnew_fact = infer_new_fact(selected) # 'レイモンドとデイビッドが洗濯する量の差は 181.43 - 45.35 = 136.08 キログラムです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['レイモンドがサラの半分の量の洗濯をし、', 'サラがデイビッドの 4 倍の量の洗濯をするとして、', 'サラが 181.43 キログラムの洗濯をした場合の', 'レイモンドとデイビッドの洗濯の量の差を計算してください。', 'レイモンドとデイビッドが洗濯する量の差は 181.43 - 45.35 = 136.08 キログラムです']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_78_6d7b636c76", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 4, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Find how many packages of 3 would be needed which is 18 ÷ 3 = 6.; int1 & sent1 -> int2: The cost of using packages of 3 is 6 × $2.50 = $15.; sent1 & sent2 -> int3: Find how many packages of 2 would be needed which is 18 ÷ 2 = 9.; int3 & sent1 -> int4: The cost of using packages of 2 is 9 × $1 = $9.; int2 & int4 & sent2 -> int5: Vincent would save $15 - $9 = $6.; int5 & sent2 -> int6: The answer is 6;", "textual_logical_units": {"1": "ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。", "2": "18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？", "3": "18 ÷ 3 = 6 で、3 本入りパッケージがいくつ必要になるかを求めます。", "4": "3 本入りパッケージを使用する場合のコストは、6 × 2.50 ドル = 15 ドルです。", "5": "18 ÷ 2 = 9 で、2 本入りパッケージがいくつ必要になるかを求めます。", "6": "2 つのパッケージを使用する場合の費用は 9 × 1 ドル = 9 ドルです。", "7": "ヴィンセントは 15 ドル - 9ドル = 6 ドル節約できるでしょう。", "8": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。']\nquestion = '18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。', '18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？']\nnew_fact = infer_new_fact(selected) # '18 ÷ 3 = 6 で、3 本入りパッケージがいくつ必要になるかを求めます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。', '18 ÷ 3 = 6 で、3 本入りパッケージがいくつ必要になるかを求めます。']\nnew_fact = infer_new_fact(selected) # '3 本入りパッケージを使用する場合のコストは、6 × 2.50 ドル = 15 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。', '18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？']\nnew_fact = infer_new_fact(selected) # '18 ÷ 2 = 9 で、2 本入りパッケージがいくつ必要になるかを求めます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヴィンセントは、3 本入りパッケージの花を 2.50ドル、または 2 本入りパッケージを 1 ドルで購入できます。', '18 ÷ 2 = 9 で、2 本入りパッケージがいくつ必要になるかを求めます。']\nnew_fact = infer_new_fact(selected) # '2 つのパッケージを使用する場合の費用は 9 × 1 ドル = 9 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？', '3 本入りパッケージを使用する場合のコストは、6 × 2.50 ドル = 15 ドルです。', '2 つのパッケージを使用する場合の費用は 9 × 1 ドル = 9 ドルです。']\nnew_fact = infer_new_fact(selected) # 'ヴィンセントは 15 ドル - 9ドル = 6 ドル節約できるでしょう。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['18 本の花をより低価格で購入することで、彼はどれくらいのお金を節約できますか？', 'ヴィンセントは 15 ドル - 9ドル = 6 ドル節約できるでしょう。']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_79_af5edf5e8b", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The groomer gave a 100*.3=$30 discount; int1 & sent2 & sent4 -> int2: So the grooming cost 100-30=$70; int2 & sent4 -> int3: The answer is 70;", "textual_logical_units": {"1": "ジョンは犬を飼っています。", "2": "彼は犬をグルーマーに連れて行きます。料金は 100 ドルです。", "3": "グルーマーは彼に新規顧客として 30% の割引を提供します。", "4": "グルーミングにはどれくらいの費用がかかりますか？", "5": "グルーマーは 100 * .3 = 30 ドルの割引を行いました", "6": "つまり、グルーミングの費用は 100 - 30 ドル = 70 ドルです", "7": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは犬を飼っています。', '彼は犬をグルーマーに連れて行きます。料金は 100 ドルです。', 'グルーマーは彼に新規顧客として 30% の割引を提供します。']\nquestion = 'グルーミングにはどれくらいの費用がかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は犬をグルーマーに連れて行きます。料金は 100 ドルです。', 'グルーマーは彼に新規顧客として 30% の割引を提供します。']\nnew_fact = infer_new_fact(selected) # 'グルーマーは 100 * .3 = 30 ドルの割引を行いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は犬をグルーマーに連れて行きます。料金は 100 ドルです。', 'グルーミングにはどれくらいの費用がかかりますか？', 'グルーマーは 100 * .3 = 30 ドルの割引を行いました']\nnew_fact = infer_new_fact(selected) # 'つまり、グルーミングの費用は 100 - 30 ドル = 70 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グルーミングにはどれくらいの費用がかかりますか？', 'つまり、グルーミングの費用は 100 - 30 ドル = 70 ドルです']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_80_d57a485b8e", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Each of the girls got 24 x 1/6 = 4 liters of water.; int1 & sent1 -> int2: So the two girls got a total of 4 x 2 = 8 liters.; int2 & sent2 -> int3: Thus, a total of 8 + 6 = 14 liters of water were gotten by the two girls and the boy.; int3 & sent1 & sent3 -> int4: Therefore, 24 - 14 = 10 liters of water were left.; int4 & sent3 -> int5: The answer is 10;", "textual_logical_units": {"1": "2 人の女の子がそれぞれ 24 リットルの水の 1/6 を飲みました。", "2": "その後、男の子が 6 リットルの水を飲みました。", "3": "水は何リットル残りましたか？", "4": "女の子 1 人あたり 24 x 1/6 = 4 リットルの水を飲みました", "5": "つまり、2 人の女の子は合計 4 x 2 = 8 リットル飲みました。", "6": "したがって、2 人の女の子と男の子は合計 8 + 6 = 14 リットルの水を飲みました。", "7": "したがって、24 - 14 = 10 リットルの水が残りました。", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['2 人の女の子がそれぞれ 24 リットルの水の 1/6 を飲みました。', 'その後、男の子が 6 リットルの水を飲みました。']\nquestion = '水は何リットル残りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['2 人の女の子がそれぞれ 24 リットルの水の 1/6 を飲みました。']\nnew_fact = infer_new_fact(selected) # '女の子 1 人あたり 24 x 1/6 = 4 リットルの水を飲みました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 人の女の子がそれぞれ 24 リットルの水の 1/6 を飲みました。', '女の子 1 人あたり 24 x 1/6 = 4 リットルの水を飲みました']\nnew_fact = infer_new_fact(selected) # 'つまり、2 人の女の子は合計 4 x 2 = 8 リットル飲みました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、男の子が 6 リットルの水を飲みました。', 'つまり、2 人の女の子は合計 4 x 2 = 8 リットル飲みました。']\nnew_fact = infer_new_fact(selected) # 'したがって、2 人の女の子と男の子は合計 8 + 6 = 14 リットルの水を飲みました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 人の女の子がそれぞれ 24 リットルの水の 1/6 を飲みました。', '水は何リットル残りましたか？', 'したがって、2 人の女の子と男の子は合計 8 + 6 = 14 リットルの水を飲みました。']\nnew_fact = infer_new_fact(selected) # 'したがって、24 - 14 = 10 リットルの水が残りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['水は何リットル残りましたか？', 'したがって、24 - 14 = 10 リットルの水が残りました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_81_2af1562a0a", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [4, 5], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The total number of stickers is 10 + 21 + 23 = 54.; sent4 & sent5 -> int2: The number of stickers given away and used on the greeting card is 9 + 28 = 37.; int1 & int2 & sent6 -> int3: Charlie has 54 − 37 = 17 stickers left.; int3 & sent6 -> int4: The answer is 17;", "textual_logical_units": {"1": "チャーリーはステッカーを 10 枚持っていました。", "2": "彼はショッピングモールの店で 21 枚のステッカーを購入し、", "3": "彼の誕生日にステッカーを 23 枚もらいました。", "4": "それからチャーリーはステッカー 9 枚を妹に渡し、", "5": "グリーティングカードのデコレーションに 28 枚使いました。", "6": "チャーリーにはステッカーが何枚残っていますか？", "7": "ステッカーの合計数は 10 + 21 + 23 = 54 枚です。", "8": "妹に渡したステッカーとグリーティングカードに使用するステッカーの数は、9 + 28 = 37 枚です。", "9": "チャーリーのステッカーは 54 − 37 = 17 枚残っています。", "10": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = ['チャーリーはステッカーを 10 枚持っていました。', '彼はショッピングモールの店で 21 枚のステッカーを購入し、', '彼の誕生日にステッカーを 23 枚もらいました。', 'それからチャーリーはステッカー 9 枚を妹に渡し、', 'グリーティングカードのデコレーションに 28 枚使いました。']\nquestion = 'チャーリーにはステッカーが何枚残っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['チャーリーはステッカーを 10 枚持っていました。', '彼はショッピングモールの店で 21 枚のステッカーを購入し、', '彼の誕生日にステッカーを 23 枚もらいました。']\nnew_fact = infer_new_fact(selected) # 'ステッカーの合計数は 10 + 21 + 23 = 54 枚です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それからチャーリーはステッカー 9 枚を妹に渡し、', 'グリーティングカードのデコレーションに 28 枚使いました。']\nnew_fact = infer_new_fact(selected) # '妹に渡したステッカーとグリーティングカードに使用するステッカーの数は、9 + 28 = 37 枚です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チャーリーにはステッカーが何枚残っていますか？', 'ステッカーの合計数は 10 + 21 + 23 = 54 枚です。', '妹に渡したステッカーとグリーティングカードに使用するステッカーの数は、9 + 28 = 37 枚です。']\nnew_fact = infer_new_fact(selected) # 'チャーリーのステッカーは 54 − 37 = 17 枚残っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チャーリーにはステッカーが何枚残っていますか？', 'チャーリーのステッカーは 54 − 37 = 17 枚残っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_82_bb44667f8e", "context": "", "options": [], "answer": "623", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Alex weighs 125*4-2 = 498.; int1 & sent1 & sent3 -> int2: Their combined weights are 125+498 = 623 pounds.; int2 & sent3 -> int3: The answer is 623;", "textual_logical_units": {"1": "グレースの体重は 56.69 キログラムです。", "2": "アレックスの体重はグレースの体重の 4 倍より 0.9 キログラム少ないです。", "3": "それらを合わせた重量 (キログラム) はいくつですか？", "4": "アレックスの体重は 56.69 * 4 - 0.9 = 225.86 キログラムです。", "5": "それらを合わせた重量は 56.69 + 225.86 = 282.55 キログラムです。", "6": "The answer is 623"}, "human_translated": true, "code_input": "####\nfacts = ['グレースの体重は 56.69 キログラムです。', 'アレックスの体重はグレースの体重の 4 倍より 0.9 キログラム少ないです。']\nquestion = 'それらを合わせた重量 (キログラム) はいくつですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['グレースの体重は 56.69 キログラムです。', 'アレックスの体重はグレースの体重の 4 倍より 0.9 キログラム少ないです。']\nnew_fact = infer_new_fact(selected) # 'アレックスの体重は 56.69 * 4 - 0.9 = 225.86 キログラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グレースの体重は 56.69 キログラムです。', 'それらを合わせた重量 (キログラム) はいくつですか？', 'アレックスの体重は 56.69 * 4 - 0.9 = 225.86 キログラムです。']\nnew_fact = infer_new_fact(selected) # 'それらを合わせた重量は 56.69 + 225.86 = 282.55 キログラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それらを合わせた重量 (キログラム) はいくつですか？', 'それらを合わせた重量は 56.69 + 225.86 = 282.55 キログラムです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 623'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '623'"}
{"id": "GSM8K_83_b8712f4e3f", "context": "", "options": [], "answer": "600", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First find the total number of roses: 3 bushes * 25 roses/bush = 75 roses; int1 & sent3 & sent4 -> int2: Then multiply the number of roses by the number of thorns per rose: 75 roses * 8 thorns/rose = 600 thorns; int2 & sent4 -> int3: The answer is 600;", "textual_logical_units": {"1": "ダンは 3 本のバラの木を植えます。", "2": "それぞれのバラの木には 25 個のバラが咲いています。", "3": "それぞれのバラには 8 本のとげがあります。", "4": "とげは全部で何本ありますか？", "5": "まず、バラの総数を求めます。 3 本の木 * 25 個のバラ/木 = 75 個のバラ", "6": "次に、バラの数にバラ 1 本あたりのとげの数を掛けます。 75 個のバラ * 8 本のとげ/バラ = 600 本のとげ", "7": "The answer is 600"}, "human_translated": true, "code_input": "####\nfacts = ['ダンは 3 本のバラの木を植えます。', 'それぞれのバラの木には 25 個のバラが咲いています。', 'それぞれのバラには 8 本のとげがあります。']\nquestion = 'とげは全部で何本ありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ダンは 3 本のバラの木を植えます。', 'それぞれのバラの木には 25 個のバラが咲いています。']\nnew_fact = infer_new_fact(selected) # 'まず、バラの総数を求めます。 3 本の木 * 25 個のバラ/木 = 75 個のバラ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれのバラには 8 本のとげがあります。', 'とげは全部で何本ありますか？', 'まず、バラの総数を求めます。 3 本の木 * 25 個のバラ/木 = 75 個のバラ']\nnew_fact = infer_new_fact(selected) # '次に、バラの数にバラ 1 本あたりのとげの数を掛けます。 75 個のバラ * 8 本のとげ/バラ = 600 本のとげ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['とげは全部で何本ありますか？', '次に、バラの数にバラ 1 本あたりのとげの数を掛けます。 75 個のバラ * 8 本のとげ/バラ = 600 本のとげ']\nnew_fact = infer_new_fact(selected) # 'The answer is 600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '600'"}
{"id": "GSM8K_84_f8021ce9a0", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 2, 4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [1, 3, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let L be the number of losses.; int1 & sent2 -> int2: The number of wins is L + 8.; int1 & int2 & sent1 & sent2 -> int3: The team played (L+8) + L = 2L + 8 = 22 games.; int1 & int3 -> int4: So, 2L = 22 - 8 = 14; int1 & int4 -> int5: So L = 14/2 = 7 losses.; int5 & sent1 & sent3 -> int6: Therefore, the team won 22 – 7 = 15 games.; int6 & sent3 -> int7: The answer is 15;", "textual_logical_units": {"1": "サッカーチームは 22 試合を行いました。", "2": "彼らは負けた数よりも 8つ多く勝ちました。", "3": "彼らは何勝しましたか？", "4": "L を負けた数とします。", "5": "勝った数は L+8 です。", "6": "チームは (L + 8) + L = 2L + 8 = 22 ゲームをプレーしました。", "7": "つまり、2L = 22-8 = 14 です", "8": "したがって、L = 14/2 = 7 が負けた数です。", "9": "したがって、チームは 22 - 7 = 15 試合で勝利しました。", "10": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['サッカーチームは 22 試合を行いました。', '彼らは負けた数よりも 8つ多く勝ちました。']\nquestion = '彼らは何勝しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼らは負けた数よりも 8つ多く勝ちました。']\nnew_fact = infer_new_fact(selected) # 'L を負けた数とします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らは負けた数よりも 8つ多く勝ちました。', 'L を負けた数とします。']\nnew_fact = infer_new_fact(selected) # '勝った数は L+8 です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サッカーチームは 22 試合を行いました。', '彼らは負けた数よりも 8つ多く勝ちました。', 'L を負けた数とします。', '勝った数は L+8 です。']\nnew_fact = infer_new_fact(selected) # 'チームは (L + 8) + L = 2L + 8 = 22 ゲームをプレーしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L を負けた数とします。', 'チームは (L + 8) + L = 2L + 8 = 22 ゲームをプレーしました。']\nnew_fact = infer_new_fact(selected) # 'つまり、2L = 22-8 = 14 です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['L を負けた数とします。', 'つまり、2L = 22-8 = 14 です']\nnew_fact = infer_new_fact(selected) # 'したがって、L = 14/2 = 7 が負けた数です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サッカーチームは 22 試合を行いました。', '彼らは何勝しましたか？', 'したがって、L = 14/2 = 7 が負けた数です。']\nnew_fact = infer_new_fact(selected) # 'したがって、チームは 22 - 7 = 15 試合で勝利しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らは何勝しましたか？', 'したがって、チームは 22 - 7 = 15 試合で勝利しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_85_196d62fcd1", "context": "", "options": [], "answer": "44", "reasoning_graph_edges": [{"antecedents": [6, 7], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [3, 8, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent6 & sent7 -> int1: Gene has been on 34 - 23 = 11 years of vacations, so he has 11 rows of blocks.; int1 & sent5 -> int2: He goes on 4 vacations a year, so he has been on 4 * 11 = 44 vacations.; int2 & sent3 & sent8 -> int3: Gene has 1 shirt from each vacation, so he has 44 * 1 = 44 quilt blocks in all.; int3 & sent8 -> int4: The answer is 44;", "textual_logical_units": {"1": "ジーンは古いお土産の T シャツでキルトを縫っています。", "2": "彼は休暇のたびにシャツを 1 枚使いました。", "3": "それぞれのシャツは独自のキルトブロックになります。", "4": "各列は、異なる年の休暇のブロックで構成されています。", "5": "彼は年に 4 回休暇をとり、", "6": "23 歳の時から休暇をとっています。", "7": "彼は現在 34 歳です。", "8": "彼は合計で何列のキルトブロックを持っていますか？", "9": "ジーンは34 - 23年 = 11 年間休暇を取っているので、ブロックは 11 列になります。", "10": "彼は年に 4回 の休暇を取るので、4 * 11 = 44 回の休暇を取っています。", "11": "ジーンは休暇ごとに 1 枚のシャツを使うので、全部で 44 * 1 = 44 列のキルトブロックがあります。", "12": "The answer is 44"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジーンは古いお土産の T シャツでキルトを縫っています。',\n  '彼は休暇のたびにシャツを 1 枚使いました。',\n  'それぞれのシャツは独自のキルトブロックになります。',\n  '各列は、異なる年の休暇のブロックで構成されています。',\n  '彼は年に 4 回休暇をとり、',\n  '23 歳の時から休暇をとっています。',\n  '彼は現在 34 歳です。']\nquestion = '彼は合計で何列のキルトブロックを持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['23 歳の時から休暇をとっています。', '彼は現在 34 歳です。']\nnew_fact = infer_new_fact(selected) # 'ジーンは34 - 23年 = 11 年間休暇を取っているので、ブロックは 11 列になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は年に 4 回休暇をとり、', 'ジーンは34 - 23年 = 11 年間休暇を取っているので、ブロックは 11 列になります。']\nnew_fact = infer_new_fact(selected) # '彼は年に 4回 の休暇を取るので、4 * 11 = 44 回の休暇を取っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれのシャツは独自のキルトブロックになります。', '彼は合計で何列のキルトブロックを持っていますか？', '彼は年に 4回 の休暇を取るので、4 * 11 = 44 回の休暇を取っています。']\nnew_fact = infer_new_fact(selected) # 'ジーンは休暇ごとに 1 枚のシャツを使うので、全部で 44 * 1 = 44 列のキルトブロックがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は合計で何列のキルトブロックを持っていますか？', 'ジーンは休暇ごとに 1 枚のシャツを使うので、全部で 44 * 1 = 44 列のキルトブロックがあります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 44'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '44'"}
{"id": "GSM8K_86_78c9c67c0b", "context": "", "options": [], "answer": "22", "reasoning_graph_edges": [{"antecedents": [4, 5, 6], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}, {"antecedents": [4, 8, 9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 & sent6 -> int1: The second time Greg’s alarm went off, it rang three times as long as the first, so it rang 3 * 4 = 12 times the second time.; int1 & sent7 -> int2: The third time it went off, it rang half as long as the second, so it rang 12 / 2 = 6 times the third time.; int1 & int2 & sent4 & sent8 -> int3: In all, Greg’s alarm rang 4 + 12 + 6 = 22 times.; int3 & sent8 -> int4: The answer is 22;", "textual_logical_units": {"1": "グレッグは、リマインダーとして 1 日に 3 回アラームを鳴らすように設定しています。", "2": "アラームが鳴ると、", "3": "グレッグがオフにするまで鳴り続けます。", "4": "今日初めて鳴ったとき、4 回鳴りました。", "5": "2 度目に鳴った時は", "6": "1 回目よりも 3 倍多く鳴りました。", "7": "3 回目は、2 回目の半分鳴りました。", "8": "アラームは全部で何回鳴りましたか。", "9": "グレッグのアラームが 2 回目に鳴ったとき、1 回目のアラームの 3 倍多く鳴ったので、2 回目には 3 * 4 = 12 回鳴りました。", "10": "3 回目に鳴ったときは、2 回目の半分鳴ったので、3 回目には 12/2 = 6 回鳴りました。", "11": "グレッグのアラームは全部で 4 + 12 + 6 = 22 回鳴りました。", "12": "The answer is 22"}, "human_translated": true, "code_input": "####\nfacts = [ 'グレッグは、リマインダーとして 1 日に 3 回アラームを鳴らすように設定しています。',\n  'アラームが鳴ると、',\n  'グレッグがオフにするまで鳴り続けます。',\n  '今日初めて鳴ったとき、4 回鳴りました。',\n  '2 度目に鳴った時は',\n  '1 回目よりも 3 倍多く鳴りました。',\n  '3 回目は、2 回目の半分鳴りました。']\nquestion = 'アラームは全部で何回鳴りましたか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['今日初めて鳴ったとき、4 回鳴りました。', '2 度目に鳴った時は', '1 回目よりも 3 倍多く鳴りました。']\nnew_fact = infer_new_fact(selected) # 'グレッグのアラームが 2 回目に鳴ったとき、1 回目のアラームの 3 倍多く鳴ったので、2 回目には 3 * 4 = 12 回鳴りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 回目は、2 回目の半分鳴りました。', 'グレッグのアラームが 2 回目に鳴ったとき、1 回目のアラームの 3 倍多く鳴ったので、2 回目には 3 * 4 = 12 回鳴りました。']\nnew_fact = infer_new_fact(selected) # '3 回目に鳴ったときは、2 回目の半分鳴ったので、3 回目には 12/2 = 6 回鳴りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今日初めて鳴ったとき、4 回鳴りました。', 'アラームは全部で何回鳴りましたか。', 'グレッグのアラームが 2 回目に鳴ったとき、1 回目のアラームの 3 倍多く鳴ったので、2 回目には 3 * 4 = 12 回鳴りました。', '3 回目に鳴ったときは、2 回目の半分鳴ったので、3 回目には 12/2 = 6 回鳴りました。']\nnew_fact = infer_new_fact(selected) # 'グレッグのアラームは全部で 4 + 12 + 6 = 22 回鳴りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アラームは全部で何回鳴りましたか。', 'グレッグのアラームは全部で 4 + 12 + 6 = 22 回鳴りました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 22'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '22'"}
{"id": "GSM8K_87_45525e6911", "context": "", "options": [], "answer": "9360", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: In a month, Sylvie earns $600. which totals $600/month * 12 months/year = $7200 in a year.; int1 & sent2 -> int2: Sylvie earnings will increase by 10/100 * $7200/year = $720/year after 5 years.; int2 & sent4 -> int3: In three years, the total increase in her salary will be 3 years * $720/year = $2160; int1 & int3 & sent4 -> int4: After three years, Sylvie will be paid $7200 + $2160 = $9360; int4 & sent3 & sent4 -> int5: The answer is 9360;", "textual_logical_units": {"1": "会社は各従業員に毎月 600 ドルを支払います。", "2": "同社では、5 年間会社に在籍した従業員を対象に、各従業員の給与を毎年初給の 10% ずつ引き上げる方針をとっています。", "3": "シルビーが去年の 12 月に入社 5 年目を迎えたばかりなら、", "4": "勤続 3 年後の年収はいくらになりますか？", "5": "シルビーは 1 か月で 600 ドルを稼ぎます。これは、合計で月額 600 ドル * 12 か月/年= 年間 7200 ドルです。", "6": "シルビーの収入は、5 年後には 10/100 * 7200 ドル/年 = 720 ドル/年増加します。", "7": "3 年間の彼女の給与の合計増加額は、3 年間 * 720ドル/年 = 2160 ドルになります", "8": "3 年後、シルビーは 7200 ドル + 2160 ドル = 9360 ドルを受け取ります", "9": "The answer is 9360"}, "human_translated": true, "code_input": "####\nfacts = ['会社は各従業員に毎月 600 ドルを支払います。', '同社では、5 年間会社に在籍した従業員を対象に、各従業員の給与を毎年初給の 10% ずつ引き上げる方針をとっています。', 'シルビーが去年の 12 月に入社 5 年目を迎えたばかりなら、']\nquestion = '勤続 3 年後の年収はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['会社は各従業員に毎月 600 ドルを支払います。', '勤続 3 年後の年収はいくらになりますか？']\nnew_fact = infer_new_fact(selected) # 'シルビーは 1 か月で 600 ドルを稼ぎます。これは、合計で月額 600 ドル * 12 か月/年= 年間 7200 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['同社では、5 年間会社に在籍した従業員を対象に、各従業員の給与を毎年初給の 10% ずつ引き上げる方針をとっています。', 'シルビーは 1 か月で 600 ドルを稼ぎます。これは、合計で月額 600 ドル * 12 か月/年= 年間 7200 ドルです。']\nnew_fact = infer_new_fact(selected) # 'シルビーの収入は、5 年後には 10/100 * 7200 ドル/年 = 720 ドル/年増加します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['勤続 3 年後の年収はいくらになりますか？', 'シルビーの収入は、5 年後には 10/100 * 7200 ドル/年 = 720 ドル/年増加します。']\nnew_fact = infer_new_fact(selected) # '3 年間の彼女の給与の合計増加額は、3 年間 * 720ドル/年 = 2160 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['勤続 3 年後の年収はいくらになりますか？', 'シルビーは 1 か月で 600 ドルを稼ぎます。これは、合計で月額 600 ドル * 12 か月/年= 年間 7200 ドルです。', '3 年間の彼女の給与の合計増加額は、3 年間 * 720ドル/年 = 2160 ドルになります']\nnew_fact = infer_new_fact(selected) # '3 年後、シルビーは 7200 ドル + 2160 ドル = 9360 ドルを受け取ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シルビーが去年の 12 月に入社 5 年目を迎えたばかりなら、', '勤続 3 年後の年収はいくらになりますか？', '3 年後、シルビーは 7200 ドル + 2160 ドル = 9360 ドルを受け取ります']\nnew_fact = infer_new_fact(selected) # 'The answer is 9360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9360'"}
{"id": "GSM8K_88_c105a2c0e4", "context": "", "options": [], "answer": "8000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [2, 3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let m be the number of copies Marilyn sold and h be the number Harald sold. We know that m + h = 80,000 and m = 10h.; int1 -> int2: Substituting the second equation into the first, we get 10h + h = 88,000; int1 & int2 -> int3: Combining like terms, we get 11h = 88,000; int1 & int3 -> int4: Dividing both sides by 11, we get h = 8,000; int4 & sent2 & sent3 -> int5: The answer is 8000;", "textual_logical_units": {"1": "マリリンの最初のレコードは、ハラルドの 10 倍の売り上げを記録しました。", "2": "合わせて 88,000 枚売れたとしたら、", "3": "ハラルドは何部売りましたか？", "4": "m をマリリンが販売した数、h をハラルドが販売した数とします。m + h = 80,000、m = 10h であることがわかっています。", "5": "2 つ目の式を 1 つ目の式に代入すると、10h + h = 88,000 になります。", "6": "同類項を組み合わせると、11h = 88,000 になります。", "7": "両辺を 11 で割ると、h = 8,000 になります", "8": "The answer is 8000"}, "human_translated": true, "code_input": "####\nfacts = ['マリリンの最初のレコードは、ハラルドの 10 倍の売り上げを記録しました。', '合わせて 88,000 枚売れたとしたら、']\nquestion = 'ハラルドは何部売りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マリリンの最初のレコードは、ハラルドの 10 倍の売り上げを記録しました。', '合わせて 88,000 枚売れたとしたら、']\nnew_fact = infer_new_fact(selected) # 'm をマリリンが販売した数、h をハラルドが販売した数とします。m + h = 80,000、m = 10h であることがわかっています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['m をマリリンが販売した数、h をハラルドが販売した数とします。m + h = 80,000、m = 10h であることがわかっています。']\nnew_fact = infer_new_fact(selected) # '2 つ目の式を 1 つ目の式に代入すると、10h + h = 88,000 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['m をマリリンが販売した数、h をハラルドが販売した数とします。m + h = 80,000、m = 10h であることがわかっています。', '2 つ目の式を 1 つ目の式に代入すると、10h + h = 88,000 になります。']\nnew_fact = infer_new_fact(selected) # '同類項を組み合わせると、11h = 88,000 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['m をマリリンが販売した数、h をハラルドが販売した数とします。m + h = 80,000、m = 10h であることがわかっています。', '同類項を組み合わせると、11h = 88,000 になります。']\nnew_fact = infer_new_fact(selected) # '両辺を 11 で割ると、h = 8,000 になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['合わせて 88,000 枚売れたとしたら、', 'ハラルドは何部売りましたか？', '両辺を 11 で割ると、h = 8,000 になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 8000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8000'"}
{"id": "GSM8K_89_04dc96d165", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: She needs 12 gift bags because 16 x .75 = 12; int1 & sent5 & sent6 -> int2: She will spend $24 because 12 x 2 = 24; int2 & sent6 -> int3: The answer is 24;", "textual_logical_units": {"1": "クリスティーナは誕生日パーティーを計画していますが、", "2": "出席者の 1/4 が出席しないため、", "3": "招待客 1 人あたり 0.75 個のギフトバッグが必要です。", "4": "彼女は 16 人の友人を招待しました。", "5": "ギフトバッグは 1 つ 2 ドルです。", "6": "彼女はいくら使いますか？", "7": "16 x .75 = 12 なので、彼女には 12 個のギフトバッグが必要です", "8": "12 x 2 = 24 なので、彼女は 24 ドルを使うでしょう。", "9": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = ['クリスティーナは誕生日パーティーを計画していますが、', '出席者の 1/4 が出席しないため、', '招待客 1 人あたり 0.75 個のギフトバッグが必要です。', '彼女は 16 人の友人を招待しました。', 'ギフトバッグは 1 つ 2 ドルです。']\nquestion = '彼女はいくら使いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['出席者の 1/4 が出席しないため、', '彼女は 16 人の友人を招待しました。']\nnew_fact = infer_new_fact(selected) # '16 x .75 = 12 なので、彼女には 12 個のギフトバッグが必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ギフトバッグは 1 つ 2 ドルです。', '彼女はいくら使いますか？', '16 x .75 = 12 なので、彼女には 12 個のギフトバッグが必要です']\nnew_fact = infer_new_fact(selected) # '12 x 2 = 24 なので、彼女は 24 ドルを使うでしょう。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はいくら使いますか？', '12 x 2 = 24 なので、彼女は 24 ドルを使うでしょう。']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_90_88bfa82e0d", "context": "", "options": [], "answer": "225", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [6, 8, 9], "consequent": 10}, {"antecedents": [4, 5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Half of 10 pounds is 10/2=5 pounds.; sent2 & sent4 -> int2: To feed 20 dinosaur adults, he will need 20*10=200 pounds of potato salad.; int1 & sent5 -> int3: To feed 5 dinosaur children, he will need 5*5=25 pounds of potato salad.; int2 & int3 & sent6 -> int4: In total, he will need to bring 200+25=225 pounds of potato salad to the picnic.; int4 & sent4 & sent5 & sent6 -> int5: The answer is 225;", "textual_logical_units": {"1": "ティラノサウルスのテッドは、恐竜のピクニックにポテトサラダを持ってくる予定でした。", "2": "彼は大人の恐竜が 4.53 キログラムのポテトサラダを食べ、", "3": "子供は大人の半分の量を食べることを知っています。", "4": "ピクニックには大人が 20 頭、", "5": "子供が 5 頭いるとして、", "6": "テッドが全員に食べさせることができる量のポテトサラダをピクニックに持って行きたい場合、何ポンドのポテトサラダを持っていく必要がありますか？", "7": "4.53 キログラムの半分は 4.53 キログラム/2 = 2.26 キログラムです。", "8": "20 頭の恐竜の大人に食べさせるには、20 * 4.53 = 90.6 キログラムのポテトサラダが必要です。", "9": "5 頭の恐竜の子供に食べさせるには、5 * 2.26 = 11.3 キログラムのポテトサラダが必要です。", "10": "合計で、彼はピクニックに 90.6 + 11.3 = 101.9 キログラムのポテトサラダを持参する必要があります。", "11": "The answer is 225"}, "human_translated": true, "code_input": "####\nfacts = ['ティラノサウルスのテッドは、恐竜のピクニックにポテトサラダを持ってくる予定でした。', '彼は大人の恐竜が 4.53 キログラムのポテトサラダを食べ、', '子供は大人の半分の量を食べることを知っています。', 'ピクニックには大人が 20 頭、', '子供が 5 頭いるとして、']\nquestion = 'テッドが全員に食べさせることができる量のポテトサラダをピクニックに持って行きたい場合、何ポンドのポテトサラダを持っていく必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は大人の恐竜が 4.53 キログラムのポテトサラダを食べ、', '子供は大人の半分の量を食べることを知っています。']\nnew_fact = infer_new_fact(selected) # '4.53 キログラムの半分は 4.53 キログラム/2 = 2.26 キログラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は大人の恐竜が 4.53 キログラムのポテトサラダを食べ、', 'ピクニックには大人が 20 頭、']\nnew_fact = infer_new_fact(selected) # '20 頭の恐竜の大人に食べさせるには、20 * 4.53 = 90.6 キログラムのポテトサラダが必要です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['子供が 5 頭いるとして、', '4.53 キログラムの半分は 4.53 キログラム/2 = 2.26 キログラムです。']\nnew_fact = infer_new_fact(selected) # '5 頭の恐竜の子供に食べさせるには、5 * 2.26 = 11.3 キログラムのポテトサラダが必要です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['テッドが全員に食べさせることができる量のポテトサラダをピクニックに持って行きたい場合、何ポンドのポテトサラダを持っていく必要がありますか？', '20 頭の恐竜の大人に食べさせるには、20 * 4.53 = 90.6 キログラムのポテトサラダが必要です。', '5 頭の恐竜の子供に食べさせるには、5 * 2.26 = 11.3 キログラムのポテトサラダが必要です。']\nnew_fact = infer_new_fact(selected) # '合計で、彼はピクニックに 90.6 + 11.3 = 101.9 キログラムのポテトサラダを持参する必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ピクニックには大人が 20 頭、', '子供が 5 頭いるとして、', 'テッドが全員に食べさせることができる量のポテトサラダをピクニックに持って行きたい場合、何ポンドのポテトサラダを持っていく必要がありますか？', '合計で、彼はピクニックに 90.6 + 11.3 = 101.9 キログラムのポテトサラダを持参する必要があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 225'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '225'"}
{"id": "GSM8K_91_b524854316", "context": "", "options": [], "answer": "28", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Marcia has 4 + 2 = 6 pets.; int1 & sent1 -> int2: Jan has 3 * 6 = 18 pets; int1 & int2 & sent3 & sent4 -> int3: In total, the three have 4 + 6 + 18 = 28 pets.; int3 & sent3 & sent4 -> int4: The answer is 28;", "textual_logical_units": {"1": "ヤンはマルシアの 3 倍の数のペットを飼っています。", "2": "マルシアはシンディより 2 匹多いペットを飼っています。", "3": "シンディが 4 匹のペットを飼っている場合、", "4": "この 3 人は合計で何匹のペットを飼っていますか？", "5": "マルシアは 4 + 2 = 6 匹のペットを飼っています。", "6": "ヤンは 3 * 6 = 18 匹のペットを飼っています", "7": "合計で、3 人には 4匹 + 6 匹 + 18 匹 = 28匹のペットがいます。", "8": "The answer is 28"}, "human_translated": true, "code_input": "####\nfacts = ['ヤンはマルシアの 3 倍の数のペットを飼っています。', 'マルシアはシンディより 2 匹多いペットを飼っています。', 'シンディが 4 匹のペットを飼っている場合、']\nquestion = 'この 3 人は合計で何匹のペットを飼っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マルシアはシンディより 2 匹多いペットを飼っています。', 'シンディが 4 匹のペットを飼っている場合、']\nnew_fact = infer_new_fact(selected) # 'マルシアは 4 + 2 = 6 匹のペットを飼っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヤンはマルシアの 3 倍の数のペットを飼っています。', 'マルシアは 4 + 2 = 6 匹のペットを飼っています。']\nnew_fact = infer_new_fact(selected) # 'ヤンは 3 * 6 = 18 匹のペットを飼っています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シンディが 4 匹のペットを飼っている場合、', 'この 3 人は合計で何匹のペットを飼っていますか？', 'マルシアは 4 + 2 = 6 匹のペットを飼っています。', 'ヤンは 3 * 6 = 18 匹のペットを飼っています']\nnew_fact = infer_new_fact(selected) # '合計で、3 人には 4匹 + 6 匹 + 18 匹 = 28匹のペットがいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シンディが 4 匹のペットを飼っている場合、', 'この 3 人は合計で何匹のペットを飼っていますか？', '合計で、3 人には 4匹 + 6 匹 + 18 匹 = 28匹のペットがいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 28'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '28'"}
{"id": "GSM8K_92_fc740e6bf5", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [2, 5, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: James is 10 and 1 year younger than Corey, so Corey is 10 + 1 = 11 years old; int1 & sent3 -> int2: Amy is 2 years younger than Corey so is 11 - 2 = 9 years old; int2 & sent2 & sent5 -> int3: Amy is also 5 years older than Jackson, so Jackson is 9 - 5 = 4 years old; int3 & sent4 & sent5 -> int4: The answer is 4;", "textual_logical_units": {"1": "エミリーには、エイミー、ジャクソン、コーリー、ジェームズという 4 人の子供がいます。", "2": "エイミーはジャクソンより 5 歳年上で", "3": "コーリーより 2 歳年下です。", "4": "ジェームズが 10 歳で", "5": "コーリーより 1 歳年下だとすると、ジャクソンは何歳ですか？", "6": "ジェームズはコーリーより 10 歳と 1 歳年下なので、コーリーは 10 + 1 = 11 歳です。", "7": "エイミーはコーリーより 2 歳年下なので、11 - 2 = 9 歳です", "8": "エイミーはまたジャクソンより 5 歳年上なので、ジャクソンは 9-5 = 4 歳です", "9": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['エミリーには、エイミー、ジャクソン、コーリー、ジェームズという 4 人の子供がいます。', 'エイミーはジャクソンより 5 歳年上で', 'コーリーより 2 歳年下です。', 'ジェームズが 10 歳で']\nquestion = 'コーリーより 1 歳年下だとすると、ジャクソンは何歳ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジェームズが 10 歳で', 'コーリーより 1 歳年下だとすると、ジャクソンは何歳ですか？']\nnew_fact = infer_new_fact(selected) # 'ジェームズはコーリーより 10 歳と 1 歳年下なので、コーリーは 10 + 1 = 11 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['コーリーより 2 歳年下です。', 'ジェームズはコーリーより 10 歳と 1 歳年下なので、コーリーは 10 + 1 = 11 歳です。']\nnew_fact = infer_new_fact(selected) # 'エイミーはコーリーより 2 歳年下なので、11 - 2 = 9 歳です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイミーはジャクソンより 5 歳年上で', 'コーリーより 1 歳年下だとすると、ジャクソンは何歳ですか？', 'エイミーはコーリーより 2 歳年下なので、11 - 2 = 9 歳です']\nnew_fact = infer_new_fact(selected) # 'エイミーはまたジャクソンより 5 歳年上なので、ジャクソンは 9-5 = 4 歳です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェームズが 10 歳で', 'コーリーより 1 歳年下だとすると、ジャクソンは何歳ですか？', 'エイミーはまたジャクソンより 5 歳年上なので、ジャクソンは 9-5 = 4 歳です']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_93_f95fa97fba", "context": "", "options": [], "answer": "36", "reasoning_graph_edges": [{"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent4 -> int1: If Lee runs the 400-meter hurdles in 38 seconds, which was two seconds faster than Gerald used to run the 400-meter hurdles, then Gerald initially would run the 400-meter hurdles in 38+2=40 seconds.; int1 & sent3 -> int2: 10% of 40 seconds is 40*0.1=4 seconds.; int1 & int2 & sent4 -> int3: The improved diet reduced Gerald's race time to 40-4=36 seconds.; int3 & sent4 -> int4: The answer is 36;", "textual_logical_units": {"1": "リーはかつて、400 メートルのハードルをジェラルドが 400 メートルのハードルを走るよりも 2 秒速く走ることができました。", "2": "しかしジェラルドは食事を変え、", "3": "それによりスピードが 10% 向上しました。", "4": "リーが 400 メートルのハードルを 38 秒で走ったとしたら、食事を改善したジェラルドは、400 メートルのハードルを何秒速く走れるでしょうか？", "5": "リーが 400 メートルのハードルを 38 秒で走った場合、ジェラルドが 400 メートルのハードルを走ったときより 2 秒速かったので、ジェラルドは当初、38 + 2 = 40 秒で 400 メートルのハードルを走っていたことになります。", "6": "40 秒の 10% は 40 * 0.1 = 4 秒です。", "7": "食事の改善により、ジェラルドのレースタイムは 40 - 4 = 36 秒に短縮されたことになります。", "8": "The answer is 36"}, "human_translated": true, "code_input": "####\nfacts = ['リーはかつて、400 メートルのハードルをジェラルドが 400 メートルのハードルを走るよりも 2 秒速く走ることができました。', 'しかしジェラルドは食事を変え、', 'それによりスピードが 10% 向上しました。']\nquestion = 'リーが 400 メートルのハードルを 38 秒で走ったとしたら、食事を改善したジェラルドは、400 メートルのハードルを何秒速く走れるでしょうか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['リーはかつて、400 メートルのハードルをジェラルドが 400 メートルのハードルを走るよりも 2 秒速く走ることができました。', 'それによりスピードが 10% 向上しました。', 'リーが 400 メートルのハードルを 38 秒で走ったとしたら、食事を改善したジェラルドは、400 メートルのハードルを何秒速く走れるでしょうか？']\nnew_fact = infer_new_fact(selected) # 'リーが 400 メートルのハードルを 38 秒で走った場合、ジェラルドが 400 メートルのハードルを走ったときより 2 秒速かったので、ジェラルドは当初、38 + 2 = 40 秒で 400 メートルのハードルを走っていたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それによりスピードが 10% 向上しました。', 'リーが 400 メートルのハードルを 38 秒で走った場合、ジェラルドが 400 メートルのハードルを走ったときより 2 秒速かったので、ジェラルドは当初、38 + 2 = 40 秒で 400 メートルのハードルを走っていたことになります。']\nnew_fact = infer_new_fact(selected) # '40 秒の 10% は 40 * 0.1 = 4 秒です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リーが 400 メートルのハードルを 38 秒で走ったとしたら、食事を改善したジェラルドは、400 メートルのハードルを何秒速く走れるでしょうか？', 'リーが 400 メートルのハードルを 38 秒で走った場合、ジェラルドが 400 メートルのハードルを走ったときより 2 秒速かったので、ジェラルドは当初、38 + 2 = 40 秒で 400 メートルのハードルを走っていたことになります。', '40 秒の 10% は 40 * 0.1 = 4 秒です。']\nnew_fact = infer_new_fact(selected) # '食事の改善により、ジェラルドのレースタイムは 40 - 4 = 36 秒に短縮されたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リーが 400 メートルのハードルを 38 秒で走ったとしたら、食事を改善したジェラルドは、400 メートルのハードルを何秒速く走れるでしょうか？', '食事の改善により、ジェラルドのレースタイムは 40 - 4 = 36 秒に短縮されたことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 36'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '36'"}
{"id": "GSM8K_94_5639d4e1e5", "context": "", "options": [], "answer": "348", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [2, 3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If there are two cats for every dog, and the number of dogs is 60, the number of cats is 2*60 = 120; int1 -> int2: The combined number of cats and dogs is 120+60 = 180; int2 & sent1 -> int3: The number of rabbits pets is twelve less than the combined number of pet dogs and cats, a total of 180-12 = 168; int2 & int3 & sent4 -> int4: The total number of pets in the compound is 168+180 = 348; int4 & sent2 & sent3 & sent4 -> int5: The answer is 348;", "textual_logical_units": {"1": "近所では、ウサギのペットの数は、ペットの犬と猫を合わせた数より 12 匹少なくなっています。", "2": "犬 1 匹に対して猫が 2 匹いて、", "3": "犬の数が 60 匹だとすると", "4": "近所には全部で何匹のペットがいますか？", "5": "犬 1 匹に対して猫が 2 匹いて、犬の数が 60 匹の場合、猫の数は 2 * 60 = 120 匹です。", "6": "猫と犬を合わせた数は 120 + 60 = 180 匹です", "7": "ペットのウサギの数は、ペットの犬と猫を合わせた数より 12 匹少なく、合計で 180 - 12 = 168 匹です。", "8": "地区のペットの総数は 168 + 180 = 348 匹です", "9": "The answer is 348"}, "human_translated": true, "code_input": "####\nfacts = ['近所では、ウサギのペットの数は、ペットの犬と猫を合わせた数より 12 匹少なくなっています。', '犬 1 匹に対して猫が 2 匹いて、', '犬の数が 60 匹だとすると']\nquestion = '近所には全部で何匹のペットがいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['犬 1 匹に対して猫が 2 匹いて、', '犬の数が 60 匹だとすると']\nnew_fact = infer_new_fact(selected) # '犬 1 匹に対して猫が 2 匹いて、犬の数が 60 匹の場合、猫の数は 2 * 60 = 120 匹です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['犬 1 匹に対して猫が 2 匹いて、犬の数が 60 匹の場合、猫の数は 2 * 60 = 120 匹です。']\nnew_fact = infer_new_fact(selected) # '猫と犬を合わせた数は 120 + 60 = 180 匹です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['近所では、ウサギのペットの数は、ペットの犬と猫を合わせた数より 12 匹少なくなっています。', '猫と犬を合わせた数は 120 + 60 = 180 匹です']\nnew_fact = infer_new_fact(selected) # 'ペットのウサギの数は、ペットの犬と猫を合わせた数より 12 匹少なく、合計で 180 - 12 = 168 匹です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['近所には全部で何匹のペットがいますか？', '猫と犬を合わせた数は 120 + 60 = 180 匹です', 'ペットのウサギの数は、ペットの犬と猫を合わせた数より 12 匹少なく、合計で 180 - 12 = 168 匹です。']\nnew_fact = infer_new_fact(selected) # '地区のペットの総数は 168 + 180 = 348 匹です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['犬 1 匹に対して猫が 2 匹いて、', '犬の数が 60 匹だとすると', '近所には全部で何匹のペットがいますか？', '地区のペットの総数は 168 + 180 = 348 匹です']\nnew_fact = infer_new_fact(selected) # 'The answer is 348'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '348'"}
{"id": "GSM8K_95_badce6436a", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: There are 200 x 2/5 = 80 boys in Grade 5.; int1 & sent1 -> int2: So, 200 - 80 = 120 are girls.; int2 & sent2 -> int3: Out of the 120 girls, 120 x 2/3 = 80 are in the girl scout.; int2 & int3 & sent3 -> int4: Therefore, 120 - 80 = 40 girls are not in the girl scout.; int4 & sent3 -> int5: The answer is 40;", "textual_logical_units": {"1": "5 年生の 200 人のうち、2/5 は男の子で、", "2": "女の子の 2/3 はガールスカウトに参加しています。", "3": "ガールスカウトに参加していない女の子は何人いますか？", "4": "5 年生には 200 人 x 2/5 = 80 人の男の子がいます。", "5": "つまり、200 - 80 = 120 人が女の子です。", "6": "120 人の女の子のうち、120 x 2/3 = 80 人がガールスカウトに参加しています。", "7": "したがって、120 - 80 = 40 人の女の子はガールスカウトに参加していません。", "8": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = ['5 年生の 200 人のうち、2/5 は男の子で、', '女の子の 2/3 はガールスカウトに参加しています。']\nquestion = 'ガールスカウトに参加していない女の子は何人いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5 年生の 200 人のうち、2/5 は男の子で、']\nnew_fact = infer_new_fact(selected) # '5 年生には 200 人 x 2/5 = 80 人の男の子がいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 年生の 200 人のうち、2/5 は男の子で、', '5 年生には 200 人 x 2/5 = 80 人の男の子がいます。']\nnew_fact = infer_new_fact(selected) # 'つまり、200 - 80 = 120 人が女の子です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['女の子の 2/3 はガールスカウトに参加しています。', 'つまり、200 - 80 = 120 人が女の子です。']\nnew_fact = infer_new_fact(selected) # '120 人の女の子のうち、120 x 2/3 = 80 人がガールスカウトに参加しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ガールスカウトに参加していない女の子は何人いますか？', 'つまり、200 - 80 = 120 人が女の子です。', '120 人の女の子のうち、120 x 2/3 = 80 人がガールスカウトに参加しています。']\nnew_fact = infer_new_fact(selected) # 'したがって、120 - 80 = 40 人の女の子はガールスカウトに参加していません。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ガールスカウトに参加していない女の子は何人いますか？', 'したがって、120 - 80 = 40 人の女の子はガールスカウトに参加していません。']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_96_c6c1f9a616", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: James slept 9 hours * 2/3 = 6 hours.; int1 & sent1 & sent3 -> int2: So, Harry slept 9 - 6 = 3 hours more than James.; int2 & sent3 -> int3: The answer is 3;", "textual_logical_units": {"1": "ハリーは昨夜 9 時間眠りました。", "2": "彼の友人のジェームズは、ハリーが眠った時間の 2/3 しか眠りませんでした。", "3": "ハリーはジェームズより何時間長く眠りましたか？", "4": "ジェームズは 9 時間 * 2/3 = 6 時間眠りました。", "5": "つまり、ハリーはジェームズよりも 9 - 6 = 3 時間多く眠りました。", "6": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['ハリーは昨夜 9 時間眠りました。', '彼の友人のジェームズは、ハリーが眠った時間の 2/3 しか眠りませんでした。']\nquestion = 'ハリーはジェームズより何時間長く眠りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ハリーは昨夜 9 時間眠りました。', '彼の友人のジェームズは、ハリーが眠った時間の 2/3 しか眠りませんでした。']\nnew_fact = infer_new_fact(selected) # 'ジェームズは 9 時間 * 2/3 = 6 時間眠りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリーは昨夜 9 時間眠りました。', 'ハリーはジェームズより何時間長く眠りましたか？', 'ジェームズは 9 時間 * 2/3 = 6 時間眠りました。']\nnew_fact = infer_new_fact(selected) # 'つまり、ハリーはジェームズよりも 9 - 6 = 3 時間多く眠りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリーはジェームズより何時間長く眠りましたか？', 'つまり、ハリーはジェームズよりも 9 - 6 = 3 時間多く眠りました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_97_2fa0dc89f3", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [3, 5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent4 -> int1: Tomatoes lose half their volume when made into sauce, so Freda started with 32 * 2 = 64 ounces of tomatoes.; int1 & sent3 -> int2: At 16 ounces per can, she used 64 / 16 = 4 cans of tomatoes.; int2 & sent3 & sent5 -> int3: At 3 tomatoes a can, Freda used 3 * 4 = 12 tomatoes.; int3 & sent5 -> int4: The answer is 12;", "textual_logical_units": {"1": "フレダが缶詰のトマトを調理してソースにすると、", "2": "量が半分減ります。", "3": "彼女が使用する 473.17 ミリリットルのトマト缶にはそれぞれ 3 つのトマトが入っています。", "4": "フレダが最後に使ったトマトソースは 946.35 ミリリットルのソースでした。", "5": "フレダはトマトをいくつ使いましたか？", "6": "トマトはソースにすると体積が半分になるので、フレダは 946.35 * 2 = 1892.7 ミリリットルのトマトから始めました。", "7": "1 缶あたり 473.17 ミリリットルで、彼女は 1892.7/473.17 = 4 缶のトマトを使いました。", "8": "1 缶あたりトマト 3 個なので、フレダは 3 * 4 = 12 個のトマトを使いました。", "9": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = ['フレダが缶詰のトマトを調理してソースにすると、', '量が半分減ります。', '彼女が使用する 473.17 ミリリットルのトマト缶にはそれぞれ 3 つのトマトが入っています。', 'フレダが最後に使ったトマトソースは 946.35 ミリリットルのソースでした。']\nquestion = 'フレダはトマトをいくつ使いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['フレダが缶詰のトマトを調理してソースにすると、', '量が半分減ります。', 'フレダが最後に使ったトマトソースは 946.35 ミリリットルのソースでした。']\nnew_fact = infer_new_fact(selected) # 'トマトはソースにすると体積が半分になるので、フレダは 946.35 * 2 = 1892.7 ミリリットルのトマトから始めました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が使用する 473.17 ミリリットルのトマト缶にはそれぞれ 3 つのトマトが入っています。', 'トマトはソースにすると体積が半分になるので、フレダは 946.35 * 2 = 1892.7 ミリリットルのトマトから始めました。']\nnew_fact = infer_new_fact(selected) # '1 缶あたり 473.17 ミリリットルで、彼女は 1892.7/473.17 = 4 缶のトマトを使いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が使用する 473.17 ミリリットルのトマト缶にはそれぞれ 3 つのトマトが入っています。', 'フレダはトマトをいくつ使いましたか？', '1 缶あたり 473.17 ミリリットルで、彼女は 1892.7/473.17 = 4 缶のトマトを使いました。']\nnew_fact = infer_new_fact(selected) # '1 缶あたりトマト 3 個なので、フレダは 3 * 4 = 12 個のトマトを使いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['フレダはトマトをいくつ使いましたか？', '1 缶あたりトマト 3 個なので、フレダは 3 * 4 = 12 個のトマトを使いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_98_8440ead6ee", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 6, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: The cars that exited do not need to be included so there were 30 original cars – 5 cars that exited = 25 cars that drove through the traffic jam.; int1 & sent3 & sent6 -> int2: Most of the cars exited in the final 15 minutes so in the first 15 minutes, there must have been 25 total cars – 20 cars that drove through in the final 15 minutes = 5 cars that drove through the traffic jam.; int2 & sent5 & sent6 -> int3: The answer is 5;", "textual_logical_units": {"1": "高速道路には車が並んでいます。", "2": "渋滞の最初の 15 分間に数台の車が通過し、", "3": "渋滞の残りの 15 分で、さらに 20 台の車が通過します。", "4": "渋滞の列の 5 台の車は、渋滞を通過する必要がないように出口を出ます。", "5": "もし、高速道路にもともと 30 台の車があったとしたら、", "6": "最初の 15 分間に何台の車が交通渋滞を通過しましたか？", "7": "出口を出た車を含める必要はないので、元の車 30 台 - 出口を出た車 5 台 = 渋滞を通過したのは 25 台の車です。", "8": "ほとんどの車は最後の 15 分間で渋滞から出たので、最初の 15 分間には、合計 25 台の車 – 最後の 15 分間に通過した 20 台の車 = 5 台の車が交通渋滞を通過しました。", "9": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['高速道路には車が並んでいます。', '渋滞の最初の 15 分間に数台の車が通過し、', '渋滞の残りの 15 分で、さらに 20 台の車が通過します。', '渋滞の列の 5 台の車は、渋滞を通過する必要がないように出口を出ます。', 'もし、高速道路にもともと 30 台の車があったとしたら、']\nquestion = '最初の 15 分間に何台の車が交通渋滞を通過しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['渋滞の列の 5 台の車は、渋滞を通過する必要がないように出口を出ます。', 'もし、高速道路にもともと 30 台の車があったとしたら、']\nnew_fact = infer_new_fact(selected) # '出口を出た車を含める必要はないので、元の車 30 台 - 出口を出た車 5 台 = 渋滞を通過したのは 25 台の車です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['渋滞の残りの 15 分で、さらに 20 台の車が通過します。', '最初の 15 分間に何台の車が交通渋滞を通過しましたか？', '出口を出た車を含める必要はないので、元の車 30 台 - 出口を出た車 5 台 = 渋滞を通過したのは 25 台の車です。']\nnew_fact = infer_new_fact(selected) # 'ほとんどの車は最後の 15 分間で渋滞から出たので、最初の 15 分間には、合計 25 台の車 – 最後の 15 分間に通過した 20 台の車 = 5 台の車が交通渋滞を通過しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['もし、高速道路にもともと 30 台の車があったとしたら、', '最初の 15 分間に何台の車が交通渋滞を通過しましたか？', 'ほとんどの車は最後の 15 分間で渋滞から出たので、最初の 15 分間には、合計 25 台の車 – 最後の 15 分間に通過した 20 台の車 = 5 台の車が交通渋滞を通過しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_99_421aced707", "context": "", "options": [], "answer": "58", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 -> int1: Yesterday, before receiving the plants, Mary had 2*40 = 80 potted plants; int1 & sent2 -> int2: After receiving an additional 18 plants, she therefore had a total of 80 + 18 = 98 potted plants; sent3 & sent4 -> int3: Tomorrow, Mary’s plant giveaway will be 40 *1 = 40 potted plants.; int2 & int3 -> int4: She will therefore remain with 98 - 40 = 58 potted plants.; int4 & sent5 -> int5: The answer is 58;", "textual_logical_units": {"1": "メアリーは熱心な庭師です。", "2": "昨日、彼女はお気に入りの園芸店から 18 本の新しい鉢植えを受け取りました。", "3": "彼女は大きな田舎の家に 40 ある窓の棚のそれぞれに、すでに 2 つの鉢植えの植物を持っています。", "4": "寛大な気持ちになった彼女は、明日、各棚から鉢植えを 1 本ずつ友人や家族に贈ることにしました。", "5": "メアリーには何本の鉢植え残りますか？", "6": "昨日、植物を受け取る前に、メアリーは 2 * 40 = 80 本の鉢植えの植物を持っていました", "7": "さらに 18 本の植物を受け取ったので、彼女が持っているのは合計 80 + 18 = 98 本の鉢植えの植物になりました。", "8": "明日、メアリーがプレゼントする植物は 40 * 1 = 40 本の鉢植えです。", "9": "したがって、彼女には 98 - 40 = 58 本の鉢植えが残ります。", "10": "The answer is 58"}, "human_translated": true, "code_input": "####\nfacts = [ 'メアリーは熱心な庭師です。',\n  '昨日、彼女はお気に入りの園芸店から 18 本の新しい鉢植えを受け取りました。',\n  '彼女は大きな田舎の家に 40 ある窓の棚のそれぞれに、すでに 2 つの鉢植えの植物を持っています。',\n  '寛大な気持ちになった彼女は、明日、各棚から鉢植えを 1 本ずつ友人や家族に贈ることにしました。']\nquestion = 'メアリーには何本の鉢植え残りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は大きな田舎の家に 40 ある窓の棚のそれぞれに、すでに 2 つの鉢植えの植物を持っています。']\nnew_fact = infer_new_fact(selected) # '昨日、植物を受け取る前に、メアリーは 2 * 40 = 80 本の鉢植えの植物を持っていました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['昨日、彼女はお気に入りの園芸店から 18 本の新しい鉢植えを受け取りました。', '昨日、植物を受け取る前に、メアリーは 2 * 40 = 80 本の鉢植えの植物を持っていました']\nnew_fact = infer_new_fact(selected) # 'さらに 18 本の植物を受け取ったので、彼女が持っているのは合計 80 + 18 = 98 本の鉢植えの植物になりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は大きな田舎の家に 40 ある窓の棚のそれぞれに、すでに 2 つの鉢植えの植物を持っています。', '寛大な気持ちになった彼女は、明日、各棚から鉢植えを 1 本ずつ友人や家族に贈ることにしました。']\nnew_fact = infer_new_fact(selected) # '明日、メアリーがプレゼントする植物は 40 * 1 = 40 本の鉢植えです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['さらに 18 本の植物を受け取ったので、彼女が持っているのは合計 80 + 18 = 98 本の鉢植えの植物になりました。', '明日、メアリーがプレゼントする植物は 40 * 1 = 40 本の鉢植えです。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女には 98 - 40 = 58 本の鉢植えが残ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['メアリーには何本の鉢植え残りますか？', 'したがって、彼女には 98 - 40 = 58 本の鉢植えが残ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 58'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '58'"}
{"id": "GSM8K_100_37d8392682", "context": "", "options": [], "answer": "175", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [4, 5], "consequent": 10}, {"antecedents": [1, 5], "consequent": 11}, {"antecedents": [6, 9, 11], "consequent": 12}, {"antecedents": [5, 6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The second friend pressed on the doorbell 1/4 times more than Jerome's first friend, a total of 1/4*20=5 times.; int1 -> int2: Jerome's second friend pressed on the doorbell 20+5=25; int2 & sent2 -> int3: The first two friends pressed on the doorbell 25+20=45 times altogether before Jerome could open the door.; sent4 & sent5 -> int4: Jerome's third friend pressed on the doorbell 60+10=70 times before Jerome could open the door.; sent1 & sent5 -> int5: Altogether, Jerome's third and fourth friends pressed on the doorbell 70+60=130 times before Jerome could open.; int3 & int5 & sent6 -> int6: The number of doorbell rings that Jerome's friend made before Jerome could open the door is 130+45=175 times.; int6 & sent5 & sent6 -> int7: The answer is 175;", "textual_logical_units": {"1": "ジェロームには、ある日彼を訪ねてきた 4 人の友人がいました。", "2": "1 人目の友人はジェロームがドアを開けるまでにドアベルを 20回 押し、", "3": "2 人目の友人はジェロームの1 人目の友人より1/4回多くドアベルを押しました。", "4": "3 人目の友人は、4 人目の友人より 10 回多くドアベルを押しました。", "5": "4 人目の友人がドアベルを 60 回押したとしたら、", "6": "ドアベルは何回鳴ったことになりますか？", "7": "2 人目の友人は、ジェロームの1 人目の友人の 1/4 回分、合計で 1/4 * 20 = 5 回多くドアベルを押しました。", "8": "ジェロームの 2 人目の友人は、20 + 5 = 25 回ドアベルを押しました", "9": "ジェロームがドアを開ける前に、最初の 2 人の友人はドアベルを合計 25 + 20 = 45 回押しました。", "10": "ジェロームの 3 人目の友人は、ジェロームがドアを開ける前にドアベルを 60 + 10 = 70 回押しました。", "11": "ジェロームの 3 人目と 4 人目の友人は、ジェロームがドアを開けるまでにドアベルを合計 70 + 60 = 130回押しました。", "12": "ジェロームがドアを開けるまでにジェロームの友人が鳴らしたドアベルの数は、130 + 45 = 175 回です。", "13": "The answer is 175"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジェロームには、ある日彼を訪ねてきた 4 人の友人がいました。',\n  '1 人目の友人はジェロームがドアを開けるまでにドアベルを 20回 押し、',\n  '2 人目の友人はジェロームの1 人目の友人より1/4回多くドアベルを押しました。',\n  '3 人目の友人は、4 人目の友人より 10 回多くドアベルを押しました。',\n  '4 人目の友人がドアベルを 60 回押したとしたら、']\nquestion = 'ドアベルは何回鳴ったことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 人目の友人はジェロームがドアを開けるまでにドアベルを 20回 押し、', '2 人目の友人はジェロームの1 人目の友人より1/4回多くドアベルを押しました。']\nnew_fact = infer_new_fact(selected) # '2 人目の友人は、ジェロームの1 人目の友人の 1/4 回分、合計で 1/4 * 20 = 5 回多くドアベルを押しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 人目の友人は、ジェロームの1 人目の友人の 1/4 回分、合計で 1/4 * 20 = 5 回多くドアベルを押しました。']\nnew_fact = infer_new_fact(selected) # 'ジェロームの 2 人目の友人は、20 + 5 = 25 回ドアベルを押しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 人目の友人はジェロームがドアを開けるまでにドアベルを 20回 押し、', 'ジェロームの 2 人目の友人は、20 + 5 = 25 回ドアベルを押しました']\nnew_fact = infer_new_fact(selected) # 'ジェロームがドアを開ける前に、最初の 2 人の友人はドアベルを合計 25 + 20 = 45 回押しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 人目の友人は、4 人目の友人より 10 回多くドアベルを押しました。', '4 人目の友人がドアベルを 60 回押したとしたら、']\nnew_fact = infer_new_fact(selected) # 'ジェロームの 3 人目の友人は、ジェロームがドアを開ける前にドアベルを 60 + 10 = 70 回押しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェロームには、ある日彼を訪ねてきた 4 人の友人がいました。', '4 人目の友人がドアベルを 60 回押したとしたら、']\nnew_fact = infer_new_fact(selected) # 'ジェロームの 3 人目と 4 人目の友人は、ジェロームがドアを開けるまでにドアベルを合計 70 + 60 = 130回押しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ドアベルは何回鳴ったことになりますか？', 'ジェロームがドアを開ける前に、最初の 2 人の友人はドアベルを合計 25 + 20 = 45 回押しました。', 'ジェロームの 3 人目と 4 人目の友人は、ジェロームがドアを開けるまでにドアベルを合計 70 + 60 = 130回押しました。']\nnew_fact = infer_new_fact(selected) # 'ジェロームがドアを開けるまでにジェロームの友人が鳴らしたドアベルの数は、130 + 45 = 175 回です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 人目の友人がドアベルを 60 回押したとしたら、', 'ドアベルは何回鳴ったことになりますか？', 'ジェロームがドアを開けるまでにジェロームの友人が鳴らしたドアベルの数は、130 + 45 = 175 回です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 175'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '175'"}
{"id": "GSM8K_101_8fb97d4dac", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [6, 7, 9], "consequent": 10}, {"antecedents": [6, 7, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Solo has to read a total of 4 + 20 + 7 + 8 = 39 pages.; int1 & sent5 -> int2: After Monday, he had a remainder of 39 - 15 = 24 pages to read.; int2 & sent6 & sent7 -> int3: To complete his reading, he must read 24/4 = 6 pages a day.; int3 & sent6 & sent7 -> int4: The answer is 6;", "textual_logical_units": {"1": "ソロは科学の教科書を 4 ページ、", "2": "社会科の教科書を 20 ページ、", "3": "歴史教科書を 7 ページ、", "4": "地理の教科書を 8 ページ読まなければなりません。", "5": "ソロは月曜日に 15 ページ読みました。", "6": "読み終えるまであと 4 日あるとしたら、", "7": "彼は 1 日に平均何ページ読む必要がありますか？", "8": "ソロは合計で 4 + 20 + 7 + 8 = 39 ページを読む必要があります。", "9": "月曜日を過ぎると、彼は残りの 39 - 15 = 24 ページ読む必要がありました。", "10": "読書を完了するには、毎日24/4 = 6 ページを読む必要があります。", "11": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['ソロは科学の教科書を 4 ページ、', '社会科の教科書を 20 ページ、', '歴史教科書を 7 ページ、', '地理の教科書を 8 ページ読まなければなりません。', 'ソロは月曜日に 15 ページ読みました。', '読み終えるまであと 4 日あるとしたら、']\nquestion = '彼は 1 日に平均何ページ読む必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ソロは科学の教科書を 4 ページ、', '社会科の教科書を 20 ページ、', '歴史教科書を 7 ページ、', '地理の教科書を 8 ページ読まなければなりません。']\nnew_fact = infer_new_fact(selected) # 'ソロは合計で 4 + 20 + 7 + 8 = 39 ページを読む必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ソロは月曜日に 15 ページ読みました。', 'ソロは合計で 4 + 20 + 7 + 8 = 39 ページを読む必要があります。']\nnew_fact = infer_new_fact(selected) # '月曜日を過ぎると、彼は残りの 39 - 15 = 24 ページ読む必要がありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['読み終えるまであと 4 日あるとしたら、', '彼は 1 日に平均何ページ読む必要がありますか？', '月曜日を過ぎると、彼は残りの 39 - 15 = 24 ページ読む必要がありました。']\nnew_fact = infer_new_fact(selected) # '読書を完了するには、毎日24/4 = 6 ページを読む必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['読み終えるまであと 4 日あるとしたら、', '彼は 1 日に平均何ページ読む必要がありますか？', '読書を完了するには、毎日24/4 = 6 ページを読む必要があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_102_2c71e622d6", "context": "", "options": [], "answer": "26", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [0], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: John has 4 glasses of water a day on each of the 5 weekdays, for 4*5= 20 glasses.; sent0 -> int2: He has 3 glasses of water on both weekend days, for 3*2= 6 glasses of water.; int1 & int2 & sent6 -> int3: He has 20+6=26 total glasses of water in a week.; int3 & sent6 -> int4: The answer is 26;", "textual_logical_units": {"1": "ジョンは朝食、昼食、夕食にコップ 1 杯の水を飲むのが好きです。", "2": "最後に、彼は寝る前にも 1 杯飲みます。", "3": "ジョンは平日これを毎日やっていますが、", "4": "週末はくつろぎ、", "5": "夕食では代わりにソーダを飲むのが好きです。", "6": "ジョンは 1 週間に何杯の水を飲みますか。", "7": "ジョンは平日の 5 日間、毎日コップ 4 杯の水を飲んでいるので、4 * 5 = 20 杯になります。", "8": "彼は週末の両日にコップ 3 杯の水を飲んでいるので、3 * 2 = 6 杯になります。", "9": "彼は 1 週間に合計 20 + 6 = 26 杯の水を飲みます。", "10": "The answer is 26"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは朝食、昼食、夕食にコップ 1 杯の水を飲むのが好きです。', '最後に、彼は寝る前にも 1 杯飲みます。', 'ジョンは平日これを毎日やっていますが、', '週末はくつろぎ、', '夕食では代わりにソーダを飲むのが好きです。']\nquestion = 'ジョンは 1 週間に何杯の水を飲みますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは朝食、昼食、夕食にコップ 1 杯の水を飲むのが好きです。', '最後に、彼は寝る前にも 1 杯飲みます。', 'ジョンは平日これを毎日やっていますが、']\nnew_fact = infer_new_fact(selected) # 'ジョンは平日の 5 日間、毎日コップ 4 杯の水を飲んでいるので、4 * 5 = 20 杯になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '彼は週末の両日にコップ 3 杯の水を飲んでいるので、3 * 2 = 6 杯になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは 1 週間に何杯の水を飲みますか。', 'ジョンは平日の 5 日間、毎日コップ 4 杯の水を飲んでいるので、4 * 5 = 20 杯になります。', '彼は週末の両日にコップ 3 杯の水を飲んでいるので、3 * 2 = 6 杯になります。']\nnew_fact = infer_new_fact(selected) # '彼は 1 週間に合計 20 + 6 = 26 杯の水を飲みます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは 1 週間に何杯の水を飲みますか。', '彼は 1 週間に合計 20 + 6 = 26 杯の水を飲みます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 26'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '26'"}
{"id": "GSM8K_103_d2f87be191", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The city will be covered in 42 / 3 = 14 intervals of 10 minutes.; int1 -> int2: Thus, it will take 14 * 10 = 140 minutes for the fog to cover the whole city.; int2 & sent3 & sent4 -> int3: The answer is 140;", "textual_logical_units": {"1": "海から濃霧が流れ込んできて、街を覆っています。", "2": "街を 3 マイル覆うのに 10 分かかります。", "3": "街が海辺から反対側の内陸端に向かって 42 マイル離れている場合、", "4": "濃霧が街全体を覆うのに何分かかりますか？", "5": "街は 10 分間に 42/3 = 14 回の間隔で覆われます。", "6": "したがって、霧が街全体を覆うには 14 x 10 = 140 分かかります。", "7": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = ['海から濃霧が流れ込んできて、街を覆っています。', '街を 3 マイル覆うのに 10 分かかります。', '街が海辺から反対側の内陸端に向かって 42 マイル離れている場合、']\nquestion = '濃霧が街全体を覆うのに何分かかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['街を 3 マイル覆うのに 10 分かかります。', '街が海辺から反対側の内陸端に向かって 42 マイル離れている場合、']\nnew_fact = infer_new_fact(selected) # '街は 10 分間に 42/3 = 14 回の間隔で覆われます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['街は 10 分間に 42/3 = 14 回の間隔で覆われます。']\nnew_fact = infer_new_fact(selected) # 'したがって、霧が街全体を覆うには 14 x 10 = 140 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['街が海辺から反対側の内陸端に向かって 42 マイル離れている場合、', '濃霧が街全体を覆うのに何分かかりますか？', 'したがって、霧が街全体を覆うには 14 x 10 = 140 分かかります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_104_ef648a427f", "context": "", "options": [], "answer": "500", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Poppy has placed 1000 pieces / 4 = 250 pieces.; int1 & sent1 -> int2: This means there are 1000 – 250 = 750 pieces remaining.; int2 & sent3 -> int3: Her mom therefore places 750 / 3 = 250 pieces.; int2 & int3 & sent4 -> int4: This leaves a total of 750 – 250 = 500 jigsaw pieces left to be placed.; int4 & sent4 -> int5: The answer is 500;", "textual_logical_units": {"1": "ポピーは 1000 ピースのジグソーパズルを解いています。", "2": "彼女はピースの 4 分の1をボードに配置し、", "3": "それから母親が残りの 3 分の 1 のピースを配置します。", "4": "配置できるジグソーパズルのピースはいくつ残っていますか？", "5": "ポピーは 1000 ピース/4 = 250 ピースを配置しました。", "6": "つまり、1000 - 250 = 750 個のピースが残っているということです。", "7": "したがって、彼女の母親は 750/3 = 250 個のピースを配置します。", "8": "つまり、配置できるジグソーパズルのピースは合計 750 - 250 = 500 個残ります。", "9": "The answer is 500"}, "human_translated": true, "code_input": "####\nfacts = ['ポピーは 1000 ピースのジグソーパズルを解いています。', '彼女はピースの 4 分の1をボードに配置し、', 'それから母親が残りの 3 分の 1 のピースを配置します。']\nquestion = '配置できるジグソーパズルのピースはいくつ残っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ポピーは 1000 ピースのジグソーパズルを解いています。', '彼女はピースの 4 分の1をボードに配置し、']\nnew_fact = infer_new_fact(selected) # 'ポピーは 1000 ピース/4 = 250 ピースを配置しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ポピーは 1000 ピースのジグソーパズルを解いています。', 'ポピーは 1000 ピース/4 = 250 ピースを配置しました。']\nnew_fact = infer_new_fact(selected) # 'つまり、1000 - 250 = 750 個のピースが残っているということです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それから母親が残りの 3 分の 1 のピースを配置します。', 'つまり、1000 - 250 = 750 個のピースが残っているということです。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女の母親は 750/3 = 250 個のピースを配置します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['配置できるジグソーパズルのピースはいくつ残っていますか？', 'つまり、1000 - 250 = 750 個のピースが残っているということです。', 'したがって、彼女の母親は 750/3 = 250 個のピースを配置します。']\nnew_fact = infer_new_fact(selected) # 'つまり、配置できるジグソーパズルのピースは合計 750 - 250 = 500 個残ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['配置できるジグソーパズルのピースはいくつ残っていますか？', 'つまり、配置できるジグソーパズルのピースは合計 750 - 250 = 500 個残ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '500'"}
{"id": "GSM8K_105_4f596d6c52", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Cody eats 5*3 = 15 cookies.; int1 & sent2 -> int2: Cody and Amir eat 15+5 = 20 cookies together.; int2 & sent2 -> int3: The answer is 20;", "textual_logical_units": {"1": "コーディはアミールが食べる 3 倍のクッキーを食べます。", "2": "アミールがクッキーを 5 枚食べるとしたら、2 人合わせて何枚のクッキーを食べますか？", "3": "コーディは 5 * 3 = 15 枚のクッキーを食べます。", "4": "コーディとアミールは合わせて 15 + 5 = 20 枚のクッキーを食べます。", "5": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['コーディはアミールが食べる 3 倍のクッキーを食べます。']\nquestion = 'アミールがクッキーを 5 枚食べるとしたら、2 人合わせて何枚のクッキーを食べますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['コーディはアミールが食べる 3 倍のクッキーを食べます。', 'アミールがクッキーを 5 枚食べるとしたら、2 人合わせて何枚のクッキーを食べますか？']\nnew_fact = infer_new_fact(selected) # 'コーディは 5 * 3 = 15 枚のクッキーを食べます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アミールがクッキーを 5 枚食べるとしたら、2 人合わせて何枚のクッキーを食べますか？', 'コーディは 5 * 3 = 15 枚のクッキーを食べます。']\nnew_fact = infer_new_fact(selected) # 'コーディとアミールは合わせて 15 + 5 = 20 枚のクッキーを食べます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アミールがクッキーを 5 枚食べるとしたら、2 人合わせて何枚のクッキーを食べますか？', 'コーディとアミールは合わせて 15 + 5 = 20 枚のクッキーを食べます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_106_259951d654", "context": "", "options": [], "answer": "72", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [2, 5], "consequent": 7}, {"antecedents": [2, 5], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The walls subtract 2*1=2 inches from each dimension; int1 & sent2 -> int2: So each box has 5-2=3 inch width; int1 & sent2 -> int3: It also has a 6-2=4 inch height; int1 & sent2 -> int4: Finally, it has a 4-2=2 inch depth; int2 & int3 & int4 -> int5: So the inner volume of one box is 4*3*2=24 cubic inches; int5 & sent4 -> int6: So in total the inner volume of the 3 boxes is 3*24=72 cubic inches; sent1 & sent4 -> int7: The answer is 72;", "textual_logical_units": {"1": "ジョンは箱を 3 つ持っています。", "2": "1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。", "3": "壁の厚さは 2.54 センチです。", "4": "3 つの箱の合計容積はどのくらいですか？", "5": "壁の各寸法から 2 * 2.54= 5.08 センチを引きます。", "6": "つまり、1 箱の幅は 12.7 - 5.08 = 7.62 センチです", "7": "また、高さは 15.24 - 5.08 = 10.16 センチです", "8": "最後に、奥行きは 10.16 - 5.08 = 5.08 センチです", "9": "したがって、1 箱の容積は 10.16 * 7.62 * 5.08 = 393.28 ミリリットルです。", "10": "したがって、3 つの箱の容積の合計は 3 * 393.28 = 1179.84 ミリリットルです。", "11": "The answer is 72"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは箱を 3 つ持っています。', '1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。', '壁の厚さは 2.54 センチです。']\nquestion = '3 つの箱の合計容積はどのくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。', '壁の厚さは 2.54 センチです。']\nnew_fact = infer_new_fact(selected) # '壁の各寸法から 2 * 2.54= 5.08 センチを引きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。', '壁の各寸法から 2 * 2.54= 5.08 センチを引きます。']\nnew_fact = infer_new_fact(selected) # 'つまり、1 箱の幅は 12.7 - 5.08 = 7.62 センチです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。', '壁の各寸法から 2 * 2.54= 5.08 センチを引きます。']\nnew_fact = infer_new_fact(selected) # 'また、高さは 15.24 - 5.08 = 10.16 センチです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 箱は 12.7 センチ x 15.24 センチ x 10.16 センチです。', '壁の各寸法から 2 * 2.54= 5.08 センチを引きます。']\nnew_fact = infer_new_fact(selected) # '最後に、奥行きは 10.16 - 5.08 = 5.08 センチです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、1 箱の幅は 12.7 - 5.08 = 7.62 センチです', 'また、高さは 15.24 - 5.08 = 10.16 センチです', '最後に、奥行きは 10.16 - 5.08 = 5.08 センチです']\nnew_fact = infer_new_fact(selected) # 'したがって、1 箱の容積は 10.16 * 7.62 * 5.08 = 393.28 ミリリットルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 つの箱の合計容積はどのくらいですか？', 'したがって、1 箱の容積は 10.16 * 7.62 * 5.08 = 393.28 ミリリットルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、3 つの箱の容積の合計は 3 * 393.28 = 1179.84 ミリリットルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは箱を 3 つ持っています。', '3 つの箱の合計容積はどのくらいですか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 72'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '72'"}
{"id": "GSM8K_107_a891f712e3", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 10}, {"antecedents": [2, 8], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [6, 7, 13], "consequent": 14}, {"antecedents": [9], "consequent": 15}, {"antecedents": [10, 14, 15], "consequent": 16}, {"antecedents": [8, 9, 16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent3 -> int1: Let W be the number of episodes he watched on Wednesday.; sent2 & sent8 -> int2: After Monday, he had 7 - 1 = 6 hours of TV left.; int2 & sent2 -> int3: After Tuesday, he had 6 - 1 = 5 hours of TV left.; int3 & sent4 & sent5 -> int4: After Thursday, he had 5 - 1 - 1/2 = 3 1/2 hours of TV left.; int4 & sent6 & sent7 -> int5: After Friday, he had 3 1/2 - 2 = 1 1/2 hours of TV left.; sent9 -> int6: Each 30-minute episode is 1/2 hour.; int1 & int5 & int6 -> int7: Thus, W = 1 1/2 / 1/2 = 3 episodes.; int7 & sent8 & sent9 -> int8: The answer is 3;", "textual_logical_units": {"1": "フランキーは毎晩宿題を終えた後にテレビを見ます。", "2": "月曜日と火曜日には、毎晩お気に入りの番組の 1 時間のエピソードを見ました。", "3": "水曜日に、彼は 30 分の番組のいくつかのエピソードを見ました。", "4": "木曜日、彼は宿題を早く終え、", "5": "1 時間のエピソードと 30 分の番組を見ました。", "6": "金曜日、彼は週末なので夜更かしすることになりました。", "7": "そこで彼は 1 時間のエピソードを 2 つ見ました。", "8": "もし彼が全部で 7 時間テレビを見ていたとしたら", "9": "彼は水曜日に 30 分のエピソードを何回見ましたか？", "10": "彼が水曜日に見たエピソードの数を W とします。", "11": "月曜日を過ぎると、テレビの残り時間は 7 - 1 = 6 時間になりました。", "12": "火曜日を過ぎると、テレビの残り時間は 6 - 1 = 5 時間になりました。", "13": "木曜日を過ぎると、彼にはテレビの時間は 5 - 1 - 1/2 = 3 時間半残っていました。", "14": "金曜日を過ぎると、テレビの時間は3 1/2 - 2 = 1 時間半残っていました。", "15": "30 分の各エピソードは 1/2 時間です。", "16": "したがって、W = 1 1/2/ 1/2 = 3 エピソードとなります。", "17": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = [ 'フランキーは毎晩宿題を終えた後にテレビを見ます。',\n  '月曜日と火曜日には、毎晩お気に入りの番組の 1 時間のエピソードを見ました。',\n  '水曜日に、彼は 30 分の番組のいくつかのエピソードを見ました。',\n  '木曜日、彼は宿題を早く終え、',\n  '1 時間のエピソードと 30 分の番組を見ました。',\n  '金曜日、彼は週末なので夜更かしすることになりました。',\n  'そこで彼は 1 時間のエピソードを 2 つ見ました。',\n  'もし彼が全部で 7 時間テレビを見ていたとしたら']\nquestion = '彼は水曜日に 30 分のエピソードを何回見ましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['水曜日に、彼は 30 分の番組のいくつかのエピソードを見ました。']\nnew_fact = infer_new_fact(selected) # '彼が水曜日に見たエピソードの数を W とします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日と火曜日には、毎晩お気に入りの番組の 1 時間のエピソードを見ました。', 'もし彼が全部で 7 時間テレビを見ていたとしたら']\nnew_fact = infer_new_fact(selected) # '月曜日を過ぎると、テレビの残り時間は 7 - 1 = 6 時間になりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日と火曜日には、毎晩お気に入りの番組の 1 時間のエピソードを見ました。', '月曜日を過ぎると、テレビの残り時間は 7 - 1 = 6 時間になりました。']\nnew_fact = infer_new_fact(selected) # '火曜日を過ぎると、テレビの残り時間は 6 - 1 = 5 時間になりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['木曜日、彼は宿題を早く終え、', '1 時間のエピソードと 30 分の番組を見ました。', '火曜日を過ぎると、テレビの残り時間は 6 - 1 = 5 時間になりました。']\nnew_fact = infer_new_fact(selected) # '木曜日を過ぎると、彼にはテレビの時間は 5 - 1 - 1/2 = 3 時間半残っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['金曜日、彼は週末なので夜更かしすることになりました。', 'そこで彼は 1 時間のエピソードを 2 つ見ました。', '木曜日を過ぎると、彼にはテレビの時間は 5 - 1 - 1/2 = 3 時間半残っていました。']\nnew_fact = infer_new_fact(selected) # '金曜日を過ぎると、テレビの時間は3 1/2 - 2 = 1 時間半残っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は水曜日に 30 分のエピソードを何回見ましたか？']\nnew_fact = infer_new_fact(selected) # '30 分の各エピソードは 1/2 時間です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が水曜日に見たエピソードの数を W とします。', '金曜日を過ぎると、テレビの時間は3 1/2 - 2 = 1 時間半残っていました。', '30 分の各エピソードは 1/2 時間です。']\nnew_fact = infer_new_fact(selected) # 'したがって、W = 1 1/2/ 1/2 = 3 エピソードとなります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['もし彼が全部で 7 時間テレビを見ていたとしたら', '彼は水曜日に 30 分のエピソードを何回見ましたか？', 'したがって、W = 1 1/2/ 1/2 = 3 エピソードとなります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_108_2f29e0b20c", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [2, 6, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Adding the cookies Henry dropped shows he baked 110 + 5 = 115 cookies this year.; int1 & sent3 -> int2: He had cooked too many, so he must have needed 115 – 15 = 100 cookies to double last year’s amount.; int2 & sent2 & sent6 -> int3: Therefore, he must have cooked 100 / 2 = 50 cookies last year.; int3 & sent6 -> int4: The answer is 50;", "textual_logical_units": {"1": "ヘンリーは地元の菓子作りコンテストのためにクッキーを作っています。", "2": "彼は昨年の 2 倍作りたいと思っています。", "3": "彼は焼き終えると、自分が意図したよりも 15 枚多いクッキーを焼いたことに気付きました。", "4": "彼はクッキーを冷まそうとしたときに 5 枚を落とし、", "5": "クッキーは全部で 110 枚になりました。", "6": "ヘンリーは昨年、何枚のクッキーを焼きましたか？", "7": "ヘンリーが落としたクッキーを加えると、今年は 110 + 5 = 115 枚のクッキーを焼いたことがわかります。", "8": "彼はとてもたくさん作ったので、昨年の 2 倍の量に増やすには 115 - 15 = 100 枚のクッキーが必要だったに違いありません。", "9": "したがって、彼は昨年 100/ 2 = 50 枚のクッキーを作ったに違いありません。", "10": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = [ 'ヘンリーは地元の菓子作りコンテストのためにクッキーを作っています。',\n  '彼は昨年の 2 倍作りたいと思っています。',\n  '彼は焼き終えると、自分が意図したよりも 15 枚多いクッキーを焼いたことに気付きました。',\n  '彼はクッキーを冷まそうとしたときに 5 枚を落とし、',\n  'クッキーは全部で 110 枚になりました。']\nquestion = 'ヘンリーは昨年、何枚のクッキーを焼きましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼はクッキーを冷まそうとしたときに 5 枚を落とし、', 'クッキーは全部で 110 枚になりました。']\nnew_fact = infer_new_fact(selected) # 'ヘンリーが落としたクッキーを加えると、今年は 110 + 5 = 115 枚のクッキーを焼いたことがわかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は焼き終えると、自分が意図したよりも 15 枚多いクッキーを焼いたことに気付きました。', 'ヘンリーが落としたクッキーを加えると、今年は 110 + 5 = 115 枚のクッキーを焼いたことがわかります。']\nnew_fact = infer_new_fact(selected) # '彼はとてもたくさん作ったので、昨年の 2 倍の量に増やすには 115 - 15 = 100 枚のクッキーが必要だったに違いありません。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は昨年の 2 倍作りたいと思っています。', 'ヘンリーは昨年、何枚のクッキーを焼きましたか？', '彼はとてもたくさん作ったので、昨年の 2 倍の量に増やすには 115 - 15 = 100 枚のクッキーが必要だったに違いありません。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は昨年 100/ 2 = 50 枚のクッキーを作ったに違いありません。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ヘンリーは昨年、何枚のクッキーを焼きましたか？', 'したがって、彼は昨年 100/ 2 = 50 枚のクッキーを作ったに違いありません。']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_109_6cc1718b43", "context": "", "options": [], "answer": "28", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Gas is $3.00 a gallon and they buy 10 gallons of gas so that's 3*10 = $30.00; sent2 & sent3 -> int2: The app is offering $0.20 cashback per gallon and they buy 10 gallons so that's .20*10 = $2.00; int1 & int2 & sent4 -> int3: They spent $30.00 on gas and their app is offering them $2.00 cashback so they spent 30-2 = $28.00 per gallon; int3 & sent3 & sent4 -> int4: The answer is 28;", "textual_logical_units": {"1": "地元のガソリンスタンドは、1 ガロンあたり 3.00 ドルでガソリンを販売しています。", "2": "あるアプリ会社では、このスタンドで給油した場合、1 ガロンあたり 0.20 ドルのキャッシュバックを提供しています。", "3": "ある人が 10 ガロンのガソリンを買った場合、", "4": "キャッシュバックを受けた後のガソリン代はいくらになりますか？", "5": "ガソリンは 1 ガロンあたり 3.00 ドルで、10 ガロンのガソリンを購入するので、3 * 10 = 30.00ドルになります", "6": "アプリは 1 ガロンあたり 0.20 ドルのキャッシュバックを提供していて、10 ガロンを購入するので、0.20 * 10 = 2.00 ドルになります", "7": "彼らはガソリンに 30.00 ドルを費やし、アプリでは 2.00 ドルのキャッシュバックを提供していたので、30 - 2 = 1 ガロンあたり 28.00 ドルを費やしました", "8": "The answer is 28"}, "human_translated": true, "code_input": "####\nfacts = ['地元のガソリンスタンドは、1 ガロンあたり 3.00 ドルでガソリンを販売しています。', 'あるアプリ会社では、このスタンドで給油した場合、1 ガロンあたり 0.20 ドルのキャッシュバックを提供しています。', 'ある人が 10 ガロンのガソリンを買った場合、']\nquestion = 'キャッシュバックを受けた後のガソリン代はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['地元のガソリンスタンドは、1 ガロンあたり 3.00 ドルでガソリンを販売しています。', 'ある人が 10 ガロンのガソリンを買った場合、']\nnew_fact = infer_new_fact(selected) # 'ガソリンは 1 ガロンあたり 3.00 ドルで、10 ガロンのガソリンを購入するので、3 * 10 = 30.00ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['あるアプリ会社では、このスタンドで給油した場合、1 ガロンあたり 0.20 ドルのキャッシュバックを提供しています。', 'ある人が 10 ガロンのガソリンを買った場合、']\nnew_fact = infer_new_fact(selected) # 'アプリは 1 ガロンあたり 0.20 ドルのキャッシュバックを提供していて、10 ガロンを購入するので、0.20 * 10 = 2.00 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['キャッシュバックを受けた後のガソリン代はいくらになりますか？', 'ガソリンは 1 ガロンあたり 3.00 ドルで、10 ガロンのガソリンを購入するので、3 * 10 = 30.00ドルになります', 'アプリは 1 ガロンあたり 0.20 ドルのキャッシュバックを提供していて、10 ガロンを購入するので、0.20 * 10 = 2.00 ドルになります']\nnew_fact = infer_new_fact(selected) # '彼らはガソリンに 30.00 ドルを費やし、アプリでは 2.00 ドルのキャッシュバックを提供していたので、30 - 2 = 1 ガロンあたり 28.00 ドルを費やしました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ある人が 10 ガロンのガソリンを買った場合、', 'キャッシュバックを受けた後のガソリン代はいくらになりますか？', '彼らはガソリンに 30.00 ドルを費やし、アプリでは 2.00 ドルのキャッシュバックを提供していたので、30 - 2 = 1 ガロンあたり 28.00 ドルを費やしました']\nnew_fact = infer_new_fact(selected) # 'The answer is 28'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '28'"}
{"id": "GSM8K_110_ad42f9dde0", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 1], "consequent": 11}, {"antecedents": [6, 7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Beatrice ate 48 because 24 x 2 = 48.; sent5 -> int2: Marcell ate 42 because 14 x 3 = 42; int1 & int2 -> int3: In total they ate 90 because 48 + 42 = 90; sent1 & sent1 -> int4: On average they ate 45 because 90 / 2 = 45; int4 & sent6 & sent7 -> int5: The answer is 45;", "textual_logical_units": {"1": "マルセルとベアトリスは、フルーツロールアップを誰が一番多く食べられるかを競っており、", "2": "分かる限りの数を広げます。", "3": "残念ながら、誰かが間違えてしまい、", "4": "ベアトリスのものはロールアップの幅が 2 で、", "5": "ロールアップの長さが 24 だったのに対し、マルセルのロールアップは幅が 3 で、ロールアップの長さは 14 でした。", "6": "2 人が全量を食べた場合、", "7": "平均していくつ食べたことになりますか？", "8": "24 x 2 = 48 なので、ベアトリスは 48 食べました。", "9": "14 x 3 = 42 なので、マルセルは 42 食べました", "10": "48 + 42 = 90 なので、合計で 90 食べました", "11": "90/2 = 45 なので、平均して45 食べました。", "12": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = [ 'マルセルとベアトリスは、フルーツロールアップを誰が一番多く食べられるかを競っており、',\n  '分かる限りの数を広げます。',\n  '残念ながら、誰かが間違えてしまい、',\n  'ベアトリスのものはロールアップの幅が 2 で、',\n  'ロールアップの長さが 24 だったのに対し、マルセルのロールアップは幅が 3 で、ロールアップの長さは 14 でした。',\n  '2 人が全量を食べた場合、']\nquestion = '平均していくつ食べたことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ベアトリスのものはロールアップの幅が 2 で、', 'ロールアップの長さが 24 だったのに対し、マルセルのロールアップは幅が 3 で、ロールアップの長さは 14 でした。']\nnew_fact = infer_new_fact(selected) # '24 x 2 = 48 なので、ベアトリスは 48 食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロールアップの長さが 24 だったのに対し、マルセルのロールアップは幅が 3 で、ロールアップの長さは 14 でした。']\nnew_fact = infer_new_fact(selected) # '14 x 3 = 42 なので、マルセルは 42 食べました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['24 x 2 = 48 なので、ベアトリスは 48 食べました。', '14 x 3 = 42 なので、マルセルは 42 食べました']\nnew_fact = infer_new_fact(selected) # '48 + 42 = 90 なので、合計で 90 食べました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マルセルとベアトリスは、フルーツロールアップを誰が一番多く食べられるかを競っており、', 'マルセルとベアトリスは、フルーツロールアップを誰が一番多く食べられるかを競っており、']\nnew_fact = infer_new_fact(selected) # '90/2 = 45 なので、平均して45 食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 人が全量を食べた場合、', '平均していくつ食べたことになりますか？', '90/2 = 45 なので、平均して45 食べました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_111_903aa75983", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: It took Julia 64 seconds to reach shore, so it took 64 / 16 = 4 times rowing 20 feet to reach the shore.; int1 -> int2: Thus, she had to row 20 * 4 = 80 feet back to shore.; int2 & sent2 -> int3: In those 80 feet, she took on 2 liters of water 80 / 10 = 8 times.; int3 & sent2 -> int4: Thus, the boat had taken on 8 * 2 = 16 liters of water by the time Julia reached the shore.; int4 & sent5 -> int5: The answer is 16;", "textual_logical_units": {"1": "ジュリアのボートは、彼女が湖に出ているときに浸水しました。", "2": "ボートには、彼女が岸に向かって漕いで戻る 3.04 メートルごとに 2 リットルの水が入ってきました。", "3": "彼女が 6.09 メートル漕ぐのに 16 秒かかりました。", "4": "海岸までは 64 秒離れていました。", "5": "ジュリアが岸に着くまでにボートにはどれくらいの水が入ってきましたか。", "6": "ジュリアが岸に着くのに 64 秒かかったので、6.09 メートルを 64/16 ＝ 4 回漕いで岸に到着したことになります。", "7": "したがって、彼女は岸まで 6.09 * 4 = 24.36 メートル漕いで戻らなければなりませんでした。", "8": "24.38 メートルで、2 リットルの水が 24.38/3.04 = 8 回入ってきました。", "9": "したがって、ジュリアが岸に着くまでに、ボートには 8 * 2 = 16 リットルの水が入ってきました。", "10": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['ジュリアのボートは、彼女が湖に出ているときに浸水しました。', 'ボートには、彼女が岸に向かって漕いで戻る 3.04 メートルごとに 2 リットルの水が入ってきました。', '彼女が 6.09 メートル漕ぐのに 16 秒かかりました。', '海岸までは 64 秒離れていました。']\nquestion = 'ジュリアが岸に着くまでにボートにはどれくらいの水が入ってきましたか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女が 6.09 メートル漕ぐのに 16 秒かかりました。', '海岸までは 64 秒離れていました。']\nnew_fact = infer_new_fact(selected) # 'ジュリアが岸に着くのに 64 秒かかったので、6.09 メートルを 64/16 ＝ 4 回漕いで岸に到着したことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジュリアが岸に着くのに 64 秒かかったので、6.09 メートルを 64/16 ＝ 4 回漕いで岸に到着したことになります。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女は岸まで 6.09 * 4 = 24.36 メートル漕いで戻らなければなりませんでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ボートには、彼女が岸に向かって漕いで戻る 3.04 メートルごとに 2 リットルの水が入ってきました。', 'したがって、彼女は岸まで 6.09 * 4 = 24.36 メートル漕いで戻らなければなりませんでした。']\nnew_fact = infer_new_fact(selected) # '24.38 メートルで、2 リットルの水が 24.38/3.04 = 8 回入ってきました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ボートには、彼女が岸に向かって漕いで戻る 3.04 メートルごとに 2 リットルの水が入ってきました。', '24.38 メートルで、2 リットルの水が 24.38/3.04 = 8 回入ってきました。']\nnew_fact = infer_new_fact(selected) # 'したがって、ジュリアが岸に着くまでに、ボートには 8 * 2 = 16 リットルの水が入ってきました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジュリアが岸に着くまでにボートにはどれくらいの水が入ってきましたか。', 'したがって、ジュリアが岸に着くまでに、ボートには 8 * 2 = 16 リットルの水が入ってきました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_112_7855d39ca2", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: In one day, there are a total of 4 teachers * 2 lessons each = 8 lessons.; int1 & sent4 -> int2: The whiteboard is therefore cleaned 8 lessons * 3 cleans per lesson = 24 times.; int2 & sent4 & sent5 -> int3: The answer is 24;", "textual_logical_units": {"1": "教室にはホワイトボードがあり、4 人の教師が交代で教室を利用します。", "2": "各教師には 1 日 2 回のレッスンがあり、", "3": "各レッスンではホワイトボードを使用します。", "4": "ホワイトボードを 1 回のレッスンにつき 3 回クリーニングするとしたら、", "5": "ホワイトボードは 1 日に何回クリーニングされますか?", "6": "1 日に、合計 4 人の教師 * 各 2 レッスン = 8 レッスンがあります。", "7": "したがって、ホワイトボードは 8 レッスン x 1 レッスンあたり 3 回 = 24 回クリーニングされます。", "8": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = ['教室にはホワイトボードがあり、4 人の教師が交代で教室を利用します。', '各教師には 1 日 2 回のレッスンがあり、', '各レッスンではホワイトボードを使用します。', 'ホワイトボードを 1 回のレッスンにつき 3 回クリーニングするとしたら、']\nquestion = 'ホワイトボードは 1 日に何回クリーニングされますか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['教室にはホワイトボードがあり、4 人の教師が交代で教室を利用します。', '各教師には 1 日 2 回のレッスンがあり、']\nnew_fact = infer_new_fact(selected) # '1 日に、合計 4 人の教師 * 各 2 レッスン = 8 レッスンがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ホワイトボードを 1 回のレッスンにつき 3 回クリーニングするとしたら、', '1 日に、合計 4 人の教師 * 各 2 レッスン = 8 レッスンがあります。']\nnew_fact = infer_new_fact(selected) # 'したがって、ホワイトボードは 8 レッスン x 1 レッスンあたり 3 回 = 24 回クリーニングされます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ホワイトボードを 1 回のレッスンにつき 3 回クリーニングするとしたら、', 'ホワイトボードは 1 日に何回クリーニングされますか?', 'したがって、ホワイトボードは 8 レッスン x 1 レッスンあたり 3 回 = 24 回クリーニングされます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_113_717303c026", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Ryan plants 2*15=30 flowers in total.; int1 & sent2 -> int2: Given 5 plants did not grow, he has 30-5=25 flowers in his garden.; int2 & sent2 -> int3: The answer is 25;", "textual_logical_units": {"1": "ライアンは自分の庭に 1 日に 2 本の花を植えます。", "2": "15 日後に 5 本が育たなかった場合、彼は何本の花を咲かせますか？", "3": "ライアンは合計で 2 * 15 = 30 本の花を植えます。", "4": "5 つの植物が育たなかったとすると、彼の庭には 30 - 5 = 25 本の花が咲いています。", "5": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = ['ライアンは自分の庭に 1 日に 2 本の花を植えます。']\nquestion = '15 日後に 5 本が育たなかった場合、彼は何本の花を咲かせますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ライアンは自分の庭に 1 日に 2 本の花を植えます。', '15 日後に 5 本が育たなかった場合、彼は何本の花を咲かせますか？']\nnew_fact = infer_new_fact(selected) # 'ライアンは合計で 2 * 15 = 30 本の花を植えます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['15 日後に 5 本が育たなかった場合、彼は何本の花を咲かせますか？', 'ライアンは合計で 2 * 15 = 30 本の花を植えます。']\nnew_fact = infer_new_fact(selected) # '5 つの植物が育たなかったとすると、彼の庭には 30 - 5 = 25 本の花が咲いています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['15 日後に 5 本が育たなかった場合、彼は何本の花を咲かせますか？', '5 つの植物が育たなかったとすると、彼の庭には 30 - 5 = 25 本の花が咲いています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_114_3b9184bde6", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Since Jamal's phone can hold 1800 photos, which is 6 times more than Brittany's phone can hold, Brittany's phone can hold `1800/6=300 photographs.; int1 & sent2 -> int2: Since Brittany's phone can hold 50 times more photos than the number of birds in Jamal's photograph, then 300/50=6 ducks can be seen in Jamal's photograph of ducks at the zoo.; int2 & sent3 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "ジャマールの携帯電話には、ブリタニーの電話の 6 倍の写真を保存できます。", "2": "ブリタニーの携帯電話に保存できる写真の最大数は、ジャマールの動物園のアヒルの写真に写っている鳥の数の 50 倍です。", "3": "ジャマールの携帯電話に 1800 枚の写真を保存できる場合、", "4": "ジャマールが撮影した動物園のアヒルの写真には何羽のアヒルが写っていますか?", "5": "ジャマールの携帯電話には 1800 枚の写真を保存できます。これはブリタニーの携帯電話の 6 倍なので、ブリタニーの携帯電話には 1800/6 = 300 枚の写真を保存できます。", "6": "ブリタニーの携帯電話には、ジャマールの写真に写っている鳥の数の 50 倍の写真を保存できるので、ジャマールの動物園のアヒルの写真には 300/50 = 6 羽のアヒルが写っています。", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['ジャマールの携帯電話には、ブリタニーの電話の 6 倍の写真を保存できます。', 'ブリタニーの携帯電話に保存できる写真の最大数は、ジャマールの動物園のアヒルの写真に写っている鳥の数の 50 倍です。', 'ジャマールの携帯電話に 1800 枚の写真を保存できる場合、']\nquestion = 'ジャマールが撮影した動物園のアヒルの写真には何羽のアヒルが写っていますか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジャマールの携帯電話には、ブリタニーの電話の 6 倍の写真を保存できます。', 'ジャマールの携帯電話に 1800 枚の写真を保存できる場合、']\nnew_fact = infer_new_fact(selected) # 'ジャマールの携帯電話には 1800 枚の写真を保存できます。これはブリタニーの携帯電話の 6 倍なので、ブリタニーの携帯電話には 1800/6 = 300 枚の写真を保存できます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブリタニーの携帯電話に保存できる写真の最大数は、ジャマールの動物園のアヒルの写真に写っている鳥の数の 50 倍です。', 'ジャマールの携帯電話には 1800 枚の写真を保存できます。これはブリタニーの携帯電話の 6 倍なので、ブリタニーの携帯電話には 1800/6 = 300 枚の写真を保存できます。']\nnew_fact = infer_new_fact(selected) # 'ブリタニーの携帯電話には、ジャマールの写真に写っている鳥の数の 50 倍の写真を保存できるので、ジャマールの動物園のアヒルの写真には 300/50 = 6 羽のアヒルが写っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャマールの携帯電話に 1800 枚の写真を保存できる場合、', 'ジャマールが撮影した動物園のアヒルの写真には何羽のアヒルが写っていますか?', 'ブリタニーの携帯電話には、ジャマールの写真に写っている鳥の数の 50 倍の写真を保存できるので、ジャマールの動物園のアヒルの写真には 300/50 = 6 羽のアヒルが写っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_115_f0a09552a7", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: She bought the 2 x 4s for $100 because 10 x 10 = 100; sent4 -> int2: She bought the 4 x 4s for 80 because 5 x 16 = 80; int1 & int2 -> int3: She paid $180 for the lumber because 100 + 80 = 180; int3 & sent1 -> int4: The same number now sells for $270 because 180 x 1.5 = 270; int3 & sent1 -> int5: She made $90 in profit because 270 - 180 = 90; int5 & sent5 & sent6 -> int6: The answer is 90;", "textual_logical_units": {"1": "サーシャは材木を購入した後、過去数か月で材木の価格が 50% 上昇したことに気付きました。", "2": "彼女には残っている材木があるので、それを売ることにしました。", "3": "彼女には、それぞれ 10 ドルかかった 2 x 4 x 10 の板が 10 枚残っています。", "4": "彼女はまた、それぞれ 16 ドルで購入した 4 x 4 x 10 の板を 5 枚持っています。", "5": "彼女が全部売ったら、", "6": "彼女はどれくらいの利益を上げますか?", "7": "10 x 10 = 100 なので、彼女は 2 x 4 を 100 ドルで購入しました。", "8": "5 x 16 = 80 なので、彼女は 4 x 4 を 80 ドルで購入しました。", "9": "100 + 80 = 180 なので、彼女はその材木に 180 ドル払いました。", "10": "180 x 1.5 = 270 なので、同じサイズを 270 ドルで販売できます", "11": "270 - 180 = 90 なので、彼女は 90 ドルの利益を上げました", "12": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = [ 'サーシャは材木を購入した後、過去数か月で材木の価格が 50% 上昇したことに気付きました。',\n  '彼女には残っている材木があるので、それを売ることにしました。',\n  '彼女には、それぞれ 10 ドルかかった 2 x 4 x 10 の板が 10 枚残っています。',\n  '彼女はまた、それぞれ 16 ドルで購入した 4 x 4 x 10 の板を 5 枚持っています。',\n  '彼女が全部売ったら、']\nquestion = '彼女はどれくらいの利益を上げますか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女には、それぞれ 10 ドルかかった 2 x 4 x 10 の板が 10 枚残っています。']\nnew_fact = infer_new_fact(selected) # '10 x 10 = 100 なので、彼女は 2 x 4 を 100 ドルで購入しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はまた、それぞれ 16 ドルで購入した 4 x 4 x 10 の板を 5 枚持っています。']\nnew_fact = infer_new_fact(selected) # '5 x 16 = 80 なので、彼女は 4 x 4 を 80 ドルで購入しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10 x 10 = 100 なので、彼女は 2 x 4 を 100 ドルで購入しました。', '5 x 16 = 80 なので、彼女は 4 x 4 を 80 ドルで購入しました。']\nnew_fact = infer_new_fact(selected) # '100 + 80 = 180 なので、彼女はその材木に 180 ドル払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サーシャは材木を購入した後、過去数か月で材木の価格が 50% 上昇したことに気付きました。', '100 + 80 = 180 なので、彼女はその材木に 180 ドル払いました。']\nnew_fact = infer_new_fact(selected) # '180 x 1.5 = 270 なので、同じサイズを 270 ドルで販売できます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サーシャは材木を購入した後、過去数か月で材木の価格が 50% 上昇したことに気付きました。', '100 + 80 = 180 なので、彼女はその材木に 180 ドル払いました。']\nnew_fact = infer_new_fact(selected) # '270 - 180 = 90 なので、彼女は 90 ドルの利益を上げました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が全部売ったら、', '彼女はどれくらいの利益を上げますか?', '270 - 180 = 90 なので、彼女は 90 ドルの利益を上げました']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_116_00e43ffc70", "context": "", "options": [], "answer": "42", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 2, 3, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total ratio representing the ingredients she used to make the coffee is 7+13 = 20; int1 & sent1 & sent2 & sent3 -> int2: Since the fraction representing the number of teaspoons she used is 7/20, she used 7/20*120 = 42; int2 & sent3 & sent4 -> int3: The answer is 42;", "textual_logical_units": {"1": "ケイティは小さじ 1 杯の砂糖と", "2": "カップ 1 杯の水を 7:13 の割合で使ってコーヒーを作ります。", "3": "彼女が合計小さじ 120 杯の砂糖とコップ 1 杯の水を使った場合、", "4": "彼女が使用した砂糖はティースプーン何杯になるかを計算してください。", "5": "彼女がコーヒーを作るのに使った材料を表す総比率は 7 + 13 = 20 です", "6": "彼女が使用したティースプーンの数を表す分数は 7/20 なので、7/20 * 120 = 42 杯を使いました", "7": "The answer is 42"}, "human_translated": true, "code_input": "####\nfacts = ['ケイティは小さじ 1 杯の砂糖と', 'カップ 1 杯の水を 7:13 の割合で使ってコーヒーを作ります。', '彼女が合計小さじ 120 杯の砂糖とコップ 1 杯の水を使った場合、']\nquestion = '彼女が使用した砂糖はティースプーン何杯になるかを計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ケイティは小さじ 1 杯の砂糖と', 'カップ 1 杯の水を 7:13 の割合で使ってコーヒーを作ります。']\nnew_fact = infer_new_fact(selected) # '彼女がコーヒーを作るのに使った材料を表す総比率は 7 + 13 = 20 です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ケイティは小さじ 1 杯の砂糖と', 'カップ 1 杯の水を 7:13 の割合で使ってコーヒーを作ります。', '彼女が合計小さじ 120 杯の砂糖とコップ 1 杯の水を使った場合、', '彼女がコーヒーを作るのに使った材料を表す総比率は 7 + 13 = 20 です']\nnew_fact = infer_new_fact(selected) # '彼女が使用したティースプーンの数を表す分数は 7/20 なので、7/20 * 120 = 42 杯を使いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が合計小さじ 120 杯の砂糖とコップ 1 杯の水を使った場合、', '彼女が使用した砂糖はティースプーン何杯になるかを計算してください。', '彼女が使用したティースプーンの数を表す分数は 7/20 なので、7/20 * 120 = 42 杯を使いました']\nnew_fact = infer_new_fact(selected) # 'The answer is 42'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '42'"}
{"id": "GSM8K_117_ccb257452c", "context": "", "options": [], "answer": "360", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He bought 3*2=6 pairs of shoes; int1 & sent2 -> int2: So he spent 60*6=$360; int2 & sent3 -> int3: The answer is 360;", "textual_logical_units": {"1": "ジョンは 3 人の子供たちにそれぞれ 2 足の靴を買います。", "2": "価格はそれぞれ 60 ドルです。", "3": "彼はいくら払いましたか？", "4": "彼は 3 * 2 = 6 足の靴を買いました", "5": "つまり、彼は 60 * 6 = 360 ドルを費やしました", "6": "The answer is 360"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは 3 人の子供たちにそれぞれ 2 足の靴を買います。', '価格はそれぞれ 60 ドルです。']\nquestion = '彼はいくら払いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは 3 人の子供たちにそれぞれ 2 足の靴を買います。']\nnew_fact = infer_new_fact(selected) # '彼は 3 * 2 = 6 足の靴を買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['価格はそれぞれ 60 ドルです。', '彼は 3 * 2 = 6 足の靴を買いました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 60 * 6 = 360 ドルを費やしました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はいくら払いましたか？', 'つまり、彼は 60 * 6 = 360 ドルを費やしました']\nnew_fact = infer_new_fact(selected) # 'The answer is 360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '360'"}
{"id": "GSM8K_118_0b25189ffa", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [5, 6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On the first day, 2*5 = 10 vehicles were Imported,; int1 & sent4 -> int2: On the next day, the number of vehicles imported through the port is 30-10 = 20 vehicles; int2 & sent2 -> int3: If each container has 5 vehicles, the number is 20/5 = 4 containers.; int3 & sent5 & sent6 -> int4: The answer is 4;", "textual_logical_units": {"1": "海岸にある通関の主要港の税関職員は、輸入車の入ったコンテナを 2 箱カウントしました。", "2": "それぞれ内部に 5 台の車両が入っています。", "3": "翌日、さらにコンテナが運ばれてきました。", "4": "港にある車両の総数は 30 台になりました。", "5": "2 日目に輸入されたコンテナの数を計算し、", "6": "すべてのコンテナに 5 台の車両が入っていると仮定します。", "7": "初日に 2 * 5 = 10 台の車両が輸入され、", "8": "翌日、港を経由して輸入される車両の数は30 -10 = 20 台です", "9": "各コンテナに車両が 5 台入っている場合、コンテナの数は 20/5 = 4 箱です。", "10": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['海岸にある通関の主要港の税関職員は、輸入車の入ったコンテナを 2 箱カウントしました。', 'それぞれ内部に 5 台の車両が入っています。', '翌日、さらにコンテナが運ばれてきました。', '港にある車両の総数は 30 台になりました。', '2 日目に輸入されたコンテナの数を計算し、']\nquestion = 'すべてのコンテナに 5 台の車両が入っていると仮定します。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['海岸にある通関の主要港の税関職員は、輸入車の入ったコンテナを 2 箱カウントしました。', 'それぞれ内部に 5 台の車両が入っています。']\nnew_fact = infer_new_fact(selected) # '初日に 2 * 5 = 10 台の車両が輸入され、'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['港にある車両の総数は 30 台になりました。', '初日に 2 * 5 = 10 台の車両が輸入され、']\nnew_fact = infer_new_fact(selected) # '翌日、港を経由して輸入される車両の数は30 -10 = 20 台です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれ内部に 5 台の車両が入っています。', '翌日、港を経由して輸入される車両の数は30 -10 = 20 台です']\nnew_fact = infer_new_fact(selected) # '各コンテナに車両が 5 台入っている場合、コンテナの数は 20/5 = 4 箱です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 日目に輸入されたコンテナの数を計算し、', 'すべてのコンテナに 5 台の車両が入っていると仮定します。', '各コンテナに車両が 5 台入っている場合、コンテナの数は 20/5 = 4 箱です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_119_4b61230615", "context": "", "options": [], "answer": "95200", "reasoning_graph_edges": [{"antecedents": [3, 5], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}, {"antecedents": [4, 5, 6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent3 & sent5 -> int1: Since Adrien was earning $40000 four years ago and received a raise that makes him earn 40% more, he received a 40/100*$40000 = $16000 raise.; int1 & sent5 -> int2: In total, four years later, Adrien's salary is $40000+$16000 = $56000; sent1 & sent4 -> int3: If four years ago Adrien was earning $40000, and Lylah's salary was 30% less, then Lylah's salary was 30/100*$40000= $12000 less than Adrien's salary four years ago.; int3 -> int4: Four years ago, Lylah was earning $40000-$12000 =$28000; int4 & sent3 & sent4 -> int5: After receiving a 40% raise, Lylah earns 40/100*$28000 = $11200; int4 & int5 -> int6: In total, four years later, Lylah earns $28000+$11200= $39200.; int2 & int6 -> int7: The total amount of salary the two earn four years later is $39200+$56000 = $95200; int7 & sent4 & sent5 & sent6 -> int8: The answer is 95200;", "textual_logical_units": {"1": "エイドリアンの給与総額はライラの給料より 30 パーセント高い金額でした。", "2": "4 年後、彼の給料は上がり、", "3": "4 年前の収入より 40% 多く稼いでいました。", "4": "エイドリアンとライラの給料が同時に増え、", "5": "エイドリアンは 4 年前に 4 万ドルを稼いだとしたら、", "6": "2 人が 4 年後に受け取った給料の合計はいくらになりますか？", "7": "エイドリアンは 4 年前に 40,000 ドルを稼いでいて、40% 収入が増える昇給を受けたので、40/100 * 40,000 ドル = 16,000 ドルの昇給を受けたことになります。", "8": "4 年後のエイドリアンの給料の合計は、40,000 ドル + 16,000 ドル = 56,000 ドルです", "9": "4 年前のエイドリアンの収入が 40,000 ドルで、ライラの給料が 30% 少なかったとしたら、ライラの給料は 4 年前のエイドリアンの給料より 30/100 * 40,000 ドル= 12000 ドル低かったことになります。", "10": "4 年前、ライラは 40,000 ドル - 12,000ドル = 28,000ドルを稼いでいました", "11": "40% の昇給を受けた後、ライラは 40/100 * 28,000 ドル = 11,200 ドルを稼ぎます", "12": "4 年後のライラの収入の合計は、28,000 ドル + 11,200ドル = 39,200 ドルです。", "13": "2 人が 4 年後に稼ぐ給料の合計額は、39,200 ドル + 56,000 ドル = 95200 ドルです。", "14": "The answer is 95200"}, "human_translated": true, "code_input": "####\nfacts = ['エイドリアンの給与総額はライラの給料より 30 パーセント高い金額でした。', '4 年後、彼の給料は上がり、', '4 年前の収入より 40% 多く稼いでいました。', 'エイドリアンとライラの給料が同時に増え、', 'エイドリアンは 4 年前に 4 万ドルを稼いだとしたら、']\nquestion = '2 人が 4 年後に受け取った給料の合計はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['4 年前の収入より 40% 多く稼いでいました。', 'エイドリアンは 4 年前に 4 万ドルを稼いだとしたら、']\nnew_fact = infer_new_fact(selected) # 'エイドリアンは 4 年前に 40,000 ドルを稼いでいて、40% 収入が増える昇給を受けたので、40/100 * 40,000 ドル = 16,000 ドルの昇給を受けたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイドリアンは 4 年前に 4 万ドルを稼いだとしたら、', 'エイドリアンは 4 年前に 40,000 ドルを稼いでいて、40% 収入が増える昇給を受けたので、40/100 * 40,000 ドル = 16,000 ドルの昇給を受けたことになります。']\nnew_fact = infer_new_fact(selected) # '4 年後のエイドリアンの給料の合計は、40,000 ドル + 16,000 ドル = 56,000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイドリアンの給与総額はライラの給料より 30 パーセント高い金額でした。', 'エイドリアンとライラの給料が同時に増え、']\nnew_fact = infer_new_fact(selected) # '4 年前のエイドリアンの収入が 40,000 ドルで、ライラの給料が 30% 少なかったとしたら、ライラの給料は 4 年前のエイドリアンの給料より 30/100 * 40,000 ドル= 12000 ドル低かったことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 年前のエイドリアンの収入が 40,000 ドルで、ライラの給料が 30% 少なかったとしたら、ライラの給料は 4 年前のエイドリアンの給料より 30/100 * 40,000 ドル= 12000 ドル低かったことになります。']\nnew_fact = infer_new_fact(selected) # '4 年前、ライラは 40,000 ドル - 12,000ドル = 28,000ドルを稼いでいました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 年前の収入より 40% 多く稼いでいました。', 'エイドリアンとライラの給料が同時に増え、', '4 年前、ライラは 40,000 ドル - 12,000ドル = 28,000ドルを稼いでいました']\nnew_fact = infer_new_fact(selected) # '40% の昇給を受けた後、ライラは 40/100 * 28,000 ドル = 11,200 ドルを稼ぎます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 年前、ライラは 40,000 ドル - 12,000ドル = 28,000ドルを稼いでいました', '40% の昇給を受けた後、ライラは 40/100 * 28,000 ドル = 11,200 ドルを稼ぎます']\nnew_fact = infer_new_fact(selected) # '4 年後のライラの収入の合計は、28,000 ドル + 11,200ドル = 39,200 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 年後のエイドリアンの給料の合計は、40,000 ドル + 16,000 ドル = 56,000 ドルです', '4 年後のライラの収入の合計は、28,000 ドル + 11,200ドル = 39,200 ドルです。']\nnew_fact = infer_new_fact(selected) # '2 人が 4 年後に稼ぐ給料の合計額は、39,200 ドル + 56,000 ドル = 95200 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイドリアンとライラの給料が同時に増え、', 'エイドリアンは 4 年前に 4 万ドルを稼いだとしたら、', '2 人が 4 年後に受け取った給料の合計はいくらになりますか？', '2 人が 4 年後に稼ぐ給料の合計額は、39,200 ドル + 56,000 ドル = 95200 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 95200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '95200'"}
{"id": "GSM8K_120_d4bf9a05d0", "context": "", "options": [], "answer": "240", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [2, 3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Miguel uses 30 x 2 = 60 sheets of paper every week.; int1 & sent3 -> int2: Therefore, he uses 60 x 4 = 240 sheets of paper every month.; int2 & sent2 & sent3 -> int3: The answer is 240;", "textual_logical_units": {"1": "ミゲルは週に 2 枚の紙を使って絵を描いています。", "2": "1 束に 30 枚の用紙がある場合、", "3": "彼は毎月何枚の用紙を使っていますか？", "4": "ミゲルは毎週 30 x 2 = 60 枚の用紙を使います。", "5": "したがって、彼は毎月 60 x 4 = 240 枚の用紙を使用しています。", "6": "The answer is 240"}, "human_translated": true, "code_input": "####\nfacts = ['ミゲルは週に 2 枚の紙を使って絵を描いています。', '1 束に 30 枚の用紙がある場合、']\nquestion = '彼は毎月何枚の用紙を使っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ミゲルは週に 2 枚の紙を使って絵を描いています。', '1 束に 30 枚の用紙がある場合、']\nnew_fact = infer_new_fact(selected) # 'ミゲルは毎週 30 x 2 = 60 枚の用紙を使います。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は毎月何枚の用紙を使っていますか？', 'ミゲルは毎週 30 x 2 = 60 枚の用紙を使います。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は毎月 60 x 4 = 240 枚の用紙を使用しています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 束に 30 枚の用紙がある場合、', '彼は毎月何枚の用紙を使っていますか？', 'したがって、彼は毎月 60 x 4 = 240 枚の用紙を使用しています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 240'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '240'"}
{"id": "GSM8K_121_9198700887", "context": "", "options": [], "answer": "27", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 4], "consequent": 7}, {"antecedents": [2, 6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Kael brought 5 x 2 = 10 apples.; sent2 & sent4 -> int2: And he also brought 8 / 2 = 4 oranges.; int1 & int2 & sent2 -> int3: Therefore, Kael and Morisette brought 5 + 10 + 8 + 4 = 27 fruits in total.; int3 & sent5 -> int4: The answer is 27;", "textual_logical_units": {"1": "モリゼットとケールは果物を持ってくるように頼まれました。", "2": "モリゼットはリンゴ 5 個とオレンジ 8 個を買いましたが、", "3": "ケールはモリセットの 2 倍の数のリンゴと", "4": "半分の数のオレンジを持ってきました。", "5": "果物は全部でいくつありますか？", "6": "ケールは 5 x 2 = 10 個のリンゴを持ってきました。", "7": "そして、彼は 8/ 2 = 4 個のオレンジも持ってきました。", "8": "したがって、ケールとモリセットは合計で 5 + 10 + 8 + 4 = 27 個の果物を持ってきました。", "9": "The answer is 27"}, "human_translated": true, "code_input": "####\nfacts = ['モリゼットとケールは果物を持ってくるように頼まれました。', 'モリゼットはリンゴ 5 個とオレンジ 8 個を買いましたが、', 'ケールはモリセットの 2 倍の数のリンゴと', '半分の数のオレンジを持ってきました。']\nquestion = '果物は全部でいくつありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['モリゼットはリンゴ 5 個とオレンジ 8 個を買いましたが、', 'ケールはモリセットの 2 倍の数のリンゴと']\nnew_fact = infer_new_fact(selected) # 'ケールは 5 x 2 = 10 個のリンゴを持ってきました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['モリゼットはリンゴ 5 個とオレンジ 8 個を買いましたが、', '半分の数のオレンジを持ってきました。']\nnew_fact = infer_new_fact(selected) # 'そして、彼は 8/ 2 = 4 個のオレンジも持ってきました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['モリゼットはリンゴ 5 個とオレンジ 8 個を買いましたが、', 'ケールは 5 x 2 = 10 個のリンゴを持ってきました。', 'そして、彼は 8/ 2 = 4 個のオレンジも持ってきました。']\nnew_fact = infer_new_fact(selected) # 'したがって、ケールとモリセットは合計で 5 + 10 + 8 + 4 = 27 個の果物を持ってきました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['果物は全部でいくつありますか？', 'したがって、ケールとモリセットは合計で 5 + 10 + 8 + 4 = 27 個の果物を持ってきました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 27'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '27'"}
{"id": "GSM8K_122_893c2d6675", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [7, 8, 10], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: If on Monday she slept 8 hours, then she slept 8-2 = 6 hours on each of the next two days.; int1 -> int2: The total number of hours slept for the two days will be 6*2 = 12 hours.; int1 & sent5 -> int3: If she slept 1 hour more for the rest of the week each day, then each day she slept 6+1 = 7 hours.; int1 & int2 & int3 -> int4: The total for the rest of the week will be 4*7 = 28 hours.; int1 & int2 & int4 -> int5: The total number of hours slept for the whole week will be 8+12+28 = 48 hours.; int5 & sent5 & sent6 -> int6: The answer is 48;", "textual_logical_units": {"1": "セイディーは月曜日に 8 時間眠りました。", "2": "次の 2 日間、", "3": "彼女はいくつかの任務を完了しなければならなかったため、", "4": "それぞれ 2 時間短い睡眠をとりました。", "5": "その週の残りの時間を彼女がその 2 日間より 1 時間長く眠った場合、", "6": "一週間で合計何時間眠ったことになりますか？", "7": "月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。", "8": "2 日間の合計睡眠時間は 6 * 2 = 12 時間です。", "9": "その週の残りの日に毎日 1 時間以上眠ると、毎日 6 + 1 = 7 時間眠ったことになります。", "10": "その週の残りの合計は 4 * 7 = 28 時間になります。", "11": "1 週間の合計睡眠時間は 8 + 12 + 28 = 48 時間になります。", "12": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = ['セイディーは月曜日に 8 時間眠りました。', '次の 2 日間、', '彼女はいくつかの任務を完了しなければならなかったため、', 'それぞれ 2 時間短い睡眠をとりました。', 'その週の残りの時間を彼女がその 2 日間より 1 時間長く眠った場合、']\nquestion = '一週間で合計何時間眠ったことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['セイディーは月曜日に 8 時間眠りました。', '次の 2 日間、', '彼女はいくつかの任務を完了しなければならなかったため、']\nnew_fact = infer_new_fact(selected) # '月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。']\nnew_fact = infer_new_fact(selected) # '2 日間の合計睡眠時間は 6 * 2 = 12 時間です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その週の残りの時間を彼女がその 2 日間より 1 時間長く眠った場合、', '月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。']\nnew_fact = infer_new_fact(selected) # 'その週の残りの日に毎日 1 時間以上眠ると、毎日 6 + 1 = 7 時間眠ったことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。', '2 日間の合計睡眠時間は 6 * 2 = 12 時間です。', 'その週の残りの日に毎日 1 時間以上眠ると、毎日 6 + 1 = 7 時間眠ったことになります。']\nnew_fact = infer_new_fact(selected) # 'その週の残りの合計は 4 * 7 = 28 時間になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日に 8 時間眠った場合、次の 2 日間はそれぞれ 8 - 2 = 6 時間眠りました。', '2 日間の合計睡眠時間は 6 * 2 = 12 時間です。', 'その週の残りの合計は 4 * 7 = 28 時間になります。']\nnew_fact = infer_new_fact(selected) # '1 週間の合計睡眠時間は 8 + 12 + 28 = 48 時間になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その週の残りの時間を彼女がその 2 日間より 1 時間長く眠った場合、', '一週間で合計何時間眠ったことになりますか？', '1 週間の合計睡眠時間は 8 + 12 + 28 = 48 時間になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_123_9df4c02762", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: For the first 3 hours, Rosie runs 10 miles per hour, so she runs 10*3=30 miles.; sent1 & sent3 -> int2: However, she still has 7-3=4 hours left to room.; int2 & sent2 -> int3: For the next 4 hours, she runs 5 miles per hour, so she runs 5*4=20 miles.; int1 & int3 -> int4: In total she runs 30+20=50 miles.; int4 & sent3 -> int5: The answer is 50;", "textual_logical_units": {"1": "ロージーは時速 16.09 キロメートルで 3 時間走ることができます。", "2": "その後、彼女は時速 8.04 キロメートルで走ります。", "3": "彼女は 7 時間で何キロメートル走れますか？", "4": "ロージーは最初の 3 時間を時速 16.09 キロメートルで走るので、16.09 * 3 = 48.27 キロメートル走ります。", "5": "しかし、彼女が走る時間はまだ 7 - 3 = 4 時間残っています。", "6": "次の 4 時間は時速 8.04 キロメートルで走るので、8.04 * 4 = 32.16 キロメートル走ります。", "7": "彼女は合計で 48.27 + 32.16 = 80.43 キロメートル走ります。", "8": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = ['ロージーは時速 16.09 キロメートルで 3 時間走ることができます。', 'その後、彼女は時速 8.04 キロメートルで走ります。']\nquestion = '彼女は 7 時間で何キロメートル走れますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ロージーは時速 16.09 キロメートルで 3 時間走ることができます。']\nnew_fact = infer_new_fact(selected) # 'ロージーは最初の 3 時間を時速 16.09 キロメートルで走るので、16.09 * 3 = 48.27 キロメートル走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロージーは時速 16.09 キロメートルで 3 時間走ることができます。', '彼女は 7 時間で何キロメートル走れますか？']\nnew_fact = infer_new_fact(selected) # 'しかし、彼女が走る時間はまだ 7 - 3 = 4 時間残っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は時速 8.04 キロメートルで走ります。', 'しかし、彼女が走る時間はまだ 7 - 3 = 4 時間残っています。']\nnew_fact = infer_new_fact(selected) # '次の 4 時間は時速 8.04 キロメートルで走るので、8.04 * 4 = 32.16 キロメートル走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロージーは最初の 3 時間を時速 16.09 キロメートルで走るので、16.09 * 3 = 48.27 キロメートル走ります。', '次の 4 時間は時速 8.04 キロメートルで走るので、8.04 * 4 = 32.16 キロメートル走ります。']\nnew_fact = infer_new_fact(selected) # '彼女は合計で 48.27 + 32.16 = 80.43 キロメートル走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 7 時間で何キロメートル走れますか？', '彼女は合計で 48.27 + 32.16 = 80.43 キロメートル走ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_124_39f195d4f6", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [5, 6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: She stamped 60/3=20 letters.; int1 & sent5 -> int2: Then there were 30-20=10 in the already-stamped pile to begin with.; int2 & sent5 & sent6 -> int3: The answer is 10;", "textual_logical_units": {"1": "ジェニーは母のオフィスでお手伝いをしています。", "2": "彼女は切手が必要な 60 通の手紙の山と、", "3": "すでに切手が貼られた手紙の山を持っています。", "4": "彼女は切手が必要な手紙の 3 分の 1 に切手を貼っています。", "5": "すでに切手が貼られた手紙の山の中に 30 通の手紙がある場合、", "6": "ジェニーが始めたとき、その山には何通ありましたか？", "7": "彼女は 60/3 = 20 通の手紙に切手を貼りました。", "8": "ですから、最初から切手が貼られていた山には 30 - 20 = 10 通がありました。", "9": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['ジェニーは母のオフィスでお手伝いをしています。', '彼女は切手が必要な 60 通の手紙の山と、', 'すでに切手が貼られた手紙の山を持っています。', '彼女は切手が必要な手紙の 3 分の 1 に切手を貼っています。', 'すでに切手が貼られた手紙の山の中に 30 通の手紙がある場合、']\nquestion = 'ジェニーが始めたとき、その山には何通ありましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は切手が必要な 60 通の手紙の山と、', '彼女は切手が必要な手紙の 3 分の 1 に切手を貼っています。']\nnew_fact = infer_new_fact(selected) # '彼女は 60/3 = 20 通の手紙に切手を貼りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すでに切手が貼られた手紙の山の中に 30 通の手紙がある場合、', '彼女は 60/3 = 20 通の手紙に切手を貼りました。']\nnew_fact = infer_new_fact(selected) # 'ですから、最初から切手が貼られていた山には 30 - 20 = 10 通がありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すでに切手が貼られた手紙の山の中に 30 通の手紙がある場合、', 'ジェニーが始めたとき、その山には何通ありましたか？', 'ですから、最初から切手が貼られていた山には 30 - 20 = 10 通がありました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_125_21103b71c7", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [7, 9], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent7 & sent9 -> int1: The total number of spoons from Julia and her husband was 12+3=15 spoons.; int1 & sent5 -> int2: Since the husband bought a package of five spoons, then Julia's package contained 15-5=10 spoons.; int2 & sent10 -> int3: The answer is 10;", "textual_logical_units": {"1": "ジュリアは家でディナーパーティーの準備をしていて、", "2": "シチューを出すつもりです。", "3": "彼女はプラスチック製のスプーンがなくなっているのに気づき、", "4": "彼女は新しいパッケージのスプーンを買いました。", "5": "その後、彼女の夫も 5 本入りの新しいスプーンのパッケージを購入し、ジュリアに渡しました。", "6": "ジュリアがシチューを作っている間、", "7": "彼女はスプーンを 3本 使ってシチューを試食しました。", "8": "その後、彼女がテーブルのセッティングに行ったとき、", "9": "彼女は合計 12 本のスプーンを持っていました。", "10": "ジュリアが買ったパッケージには何本のスプーンが入っていましたか？", "11": "ジュリアと彼女の夫のスプーンの総数は 12 + 3 = 15 本でした。", "12": "夫が 5 本入りのスプーンのパッケージを購入したので、ジュリアのパッケージには 15 - 5 = 10 本のスプーンが入っていました。", "13": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジュリアは家でディナーパーティーの準備をしていて、',\n  'シチューを出すつもりです。',\n  '彼女はプラスチック製のスプーンがなくなっているのに気づき、',\n  '彼女は新しいパッケージのスプーンを買いました。',\n  'その後、彼女の夫も 5 本入りの新しいスプーンのパッケージを購入し、ジュリアに渡しました。',\n  'ジュリアがシチューを作っている間、',\n  '彼女はスプーンを 3本 使ってシチューを試食しました。',\n  'その後、彼女がテーブルのセッティングに行ったとき、',\n  '彼女は合計 12 本のスプーンを持っていました。']\nquestion = 'ジュリアが買ったパッケージには何本のスプーンが入っていましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女はスプーンを 3本 使ってシチューを試食しました。', '彼女は合計 12 本のスプーンを持っていました。']\nnew_fact = infer_new_fact(selected) # 'ジュリアと彼女の夫のスプーンの総数は 12 + 3 = 15 本でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女の夫も 5 本入りの新しいスプーンのパッケージを購入し、ジュリアに渡しました。', 'ジュリアと彼女の夫のスプーンの総数は 12 + 3 = 15 本でした。']\nnew_fact = infer_new_fact(selected) # '夫が 5 本入りのスプーンのパッケージを購入したので、ジュリアのパッケージには 15 - 5 = 10 本のスプーンが入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジュリアが買ったパッケージには何本のスプーンが入っていましたか？', '夫が 5 本入りのスプーンのパッケージを購入したので、ジュリアのパッケージには 15 - 5 = 10 本のスプーンが入っていました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_126_71fb9a1c41", "context": "", "options": [], "answer": "82", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: He bought 38 + 6 = 44 fish sausages.; int1 & sent3 -> int2: Dylan bought 38 + 44 = 82 sausages in all.; int2 & sent5 -> int3: The answer is 82;", "textual_logical_units": {"1": "ディランはパーティーでソーセージパンを作るため、", "2": "チキンソーセージとフィッシュソーセージが必要でした。", "3": "彼はチキンソーセージを 38 本と", "4": "フィッシュソーセージをチキンソーセージよりも 6 本多く購入しました。", "5": "ディランは全部で何本ソーセージを買いましたか？", "6": "彼は 38 + 6 = 44 本のフィッシュソーセージを買いました。", "7": "ディランは全部で 38 + 44 = 82 本のソーセージを買いました。", "8": "The answer is 82"}, "human_translated": true, "code_input": "####\nfacts = ['ディランはパーティーでソーセージパンを作るため、', 'チキンソーセージとフィッシュソーセージが必要でした。', '彼はチキンソーセージを 38 本と', 'フィッシュソーセージをチキンソーセージよりも 6 本多く購入しました。']\nquestion = 'ディランは全部で何本ソーセージを買いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼はチキンソーセージを 38 本と', 'フィッシュソーセージをチキンソーセージよりも 6 本多く購入しました。']\nnew_fact = infer_new_fact(selected) # '彼は 38 + 6 = 44 本のフィッシュソーセージを買いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はチキンソーセージを 38 本と', '彼は 38 + 6 = 44 本のフィッシュソーセージを買いました。']\nnew_fact = infer_new_fact(selected) # 'ディランは全部で 38 + 44 = 82 本のソーセージを買いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ディランは全部で何本ソーセージを買いましたか？', 'ディランは全部で 38 + 44 = 82 本のソーセージを買いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 82'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '82'"}
{"id": "GSM8K_127_e803d7dd62", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Lily made 50 friends, Amy made 50+20 =70 friends.; int1 -> int2: Together, they made 70+50 = 120 friends at the new school.; int2 & sent3 & sent4 -> int3: The answer is 120;", "textual_logical_units": {"1": "新しい学校に転校した後、", "2": "エイミーはリリーより 20 人多く友達を作りました。", "3": "リリーが 50 人の友達を作った場合、", "4": "リリーとエイミーには何人の友達がいますか？", "5": "リリーが 50 人の友達を作った場合、エイミーは 50 + 20 = 70 人の友達を作ったことになります。", "6": "新しい学校では、合計 70 + 50 = 120 人の友達ができました。", "7": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['新しい学校に転校した後、', 'エイミーはリリーより 20 人多く友達を作りました。', 'リリーが 50 人の友達を作った場合、']\nquestion = 'リリーとエイミーには何人の友達がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['エイミーはリリーより 20 人多く友達を作りました。', 'リリーが 50 人の友達を作った場合、']\nnew_fact = infer_new_fact(selected) # 'リリーが 50 人の友達を作った場合、エイミーは 50 + 20 = 70 人の友達を作ったことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リリーが 50 人の友達を作った場合、エイミーは 50 + 20 = 70 人の友達を作ったことになります。']\nnew_fact = infer_new_fact(selected) # '新しい学校では、合計 70 + 50 = 120 人の友達ができました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リリーが 50 人の友達を作った場合、', 'リリーとエイミーには何人の友達がいますか？', '新しい学校では、合計 70 + 50 = 120 人の友達ができました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_128_b995641c74", "context": "", "options": [], "answer": "880", "reasoning_graph_edges": [{"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 7], "consequent": 9}, {"antecedents": [5, 6], "consequent": 10}, {"antecedents": [5, 8], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent3 & sent6 -> int1: A watermelon costs three times what pepper costs, which is 3 * 15 = $45.; int1 & sent4 -> int2: An orange price is 45 - 5= $40.; int1 & sent5 -> int3: Dillon buys four watermelons at a total cost of 45 * 4 = $180.; sent5 & sent6 -> int4: He also purchases peppers at a total price of 20 * 15 = $300.; int2 & sent5 -> int5: The oranges cost him a total of 10 * 40 = $400.; int3 & int4 & int5 -> int6: He used a total of 400 + 300 + 180 = $880.; int6 & sent6 -> int7: The answer is 880;", "textual_logical_units": {"1": "ウェルズのお母さんは地元の店でスイカ、ピーマン、", "2": "オレンジを売っています。", "3": "スイカ 1 個の値段はピーマン 1 個の 3 倍の値段です。", "4": "オレンジはスイカよりも 5 ドル安いです。", "5": "ディロンは店にお遣いに来て、スイカ 4 個、ピーマン 20 個、オレンジ 10 個を買います。", "6": "ピーマン 1 個あたり 15 ドルかかるとしたら、彼が費やす合計金額はいくらですか？", "7": "スイカの値段はピーマンの 3 倍、つまり 3 x 15 = 45 ドルです。", "8": "オレンジの値段は 45 - 5= 40ドルです。", "9": "ディロンは合計 45 * 4 = 180 ドルでスイカを 4 個購入します。", "10": "また、ピーマンを合計 20 * 15 = 300 ドルで購入します。", "11": "オレンジは合計 10 * 40 = 400 ドルかかりました。", "12": "彼は合計 400 + 300 + 180 = 880 ドルを使いました。", "13": "The answer is 880"}, "human_translated": true, "code_input": "####\nfacts = ['ウェルズのお母さんは地元の店でスイカ、ピーマン、', 'オレンジを売っています。', 'スイカ 1 個の値段はピーマン 1 個の 3 倍の値段です。', 'オレンジはスイカよりも 5 ドル安いです。', 'ディロンは店にお遣いに来て、スイカ 4 個、ピーマン 20 個、オレンジ 10 個を買います。']\nquestion = 'ピーマン 1 個あたり 15 ドルかかるとしたら、彼が費やす合計金額はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スイカ 1 個の値段はピーマン 1 個の 3 倍の値段です。', 'ピーマン 1 個あたり 15 ドルかかるとしたら、彼が費やす合計金額はいくらですか？']\nnew_fact = infer_new_fact(selected) # 'スイカの値段はピーマンの 3 倍、つまり 3 x 15 = 45 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['オレンジはスイカよりも 5 ドル安いです。', 'スイカの値段はピーマンの 3 倍、つまり 3 x 15 = 45 ドルです。']\nnew_fact = infer_new_fact(selected) # 'オレンジの値段は 45 - 5= 40ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ディロンは店にお遣いに来て、スイカ 4 個、ピーマン 20 個、オレンジ 10 個を買います。', 'スイカの値段はピーマンの 3 倍、つまり 3 x 15 = 45 ドルです。']\nnew_fact = infer_new_fact(selected) # 'ディロンは合計 45 * 4 = 180 ドルでスイカを 4 個購入します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ディロンは店にお遣いに来て、スイカ 4 個、ピーマン 20 個、オレンジ 10 個を買います。', 'ピーマン 1 個あたり 15 ドルかかるとしたら、彼が費やす合計金額はいくらですか？']\nnew_fact = infer_new_fact(selected) # 'また、ピーマンを合計 20 * 15 = 300 ドルで購入します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ディロンは店にお遣いに来て、スイカ 4 個、ピーマン 20 個、オレンジ 10 個を買います。', 'オレンジの値段は 45 - 5= 40ドルです。']\nnew_fact = infer_new_fact(selected) # 'オレンジは合計 10 * 40 = 400 ドルかかりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ディロンは合計 45 * 4 = 180 ドルでスイカを 4 個購入します。', 'また、ピーマンを合計 20 * 15 = 300 ドルで購入します。', 'オレンジは合計 10 * 40 = 400 ドルかかりました。']\nnew_fact = infer_new_fact(selected) # '彼は合計 400 + 300 + 180 = 880 ドルを使いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ピーマン 1 個あたり 15 ドルかかるとしたら、彼が費やす合計金額はいくらですか？', '彼は合計 400 + 300 + 180 = 880 ドルを使いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 880'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '880'"}
{"id": "GSM8K_129_6cef70b898", "context": "", "options": [], "answer": "10000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [3, 4], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The hospital sees patients for 500*24=12000 minutes a day; int1 & sent4 -> int2: That means they see patients for 12000/60=200 hours a day; sent3 & sent4 -> int3: They profit 200-150=$50 per hour; int2 & int3 -> int4: So they make a profit of 200 hours * $50/hour = $10000 a day from patient visits; int4 & sent5 -> int5: The answer is 10000;", "textual_logical_units": {"1": "病院は 1 日に 500 人の患者を診察します。", "2": "各患者は平均 24 分間診察されます。", "3": "医者は病院に 1 時間あたり 150 ドルを請求し、", "4": "病院は患者に 1 時間あたり 200 ドルを請求します。", "5": "これらの診察から、病院はどのくらいの利益を得ていますか？", "6": "病院は 1 日 500 分 * 24 = 12,000 分間、患者を診察しています", "7": "つまり、1 日に 12,000/60 = 200 時間、患者を診察しているということです。", "8": "彼らは 1 時間あたり 200 - 150 = 50 ドルの利益を上げています", "9": "つまり、患者の診察で 200 時間 * 1 時間あたり 50 ドル = 1 日 1万ドルの利益を上げています", "10": "The answer is 10000"}, "human_translated": true, "code_input": "####\nfacts = ['病院は 1 日に 500 人の患者を診察します。', '各患者は平均 24 分間診察されます。', '医者は病院に 1 時間あたり 150 ドルを請求し、', '病院は患者に 1 時間あたり 200 ドルを請求します。']\nquestion = 'これらの診察から、病院はどのくらいの利益を得ていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['病院は 1 日に 500 人の患者を診察します。', '各患者は平均 24 分間診察されます。']\nnew_fact = infer_new_fact(selected) # '病院は 1 日 500 分 * 24 = 12,000 分間、患者を診察しています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['病院は患者に 1 時間あたり 200 ドルを請求します。', '病院は 1 日 500 分 * 24 = 12,000 分間、患者を診察しています']\nnew_fact = infer_new_fact(selected) # 'つまり、1 日に 12,000/60 = 200 時間、患者を診察しているということです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['医者は病院に 1 時間あたり 150 ドルを請求し、', '病院は患者に 1 時間あたり 200 ドルを請求します。']\nnew_fact = infer_new_fact(selected) # '彼らは 1 時間あたり 200 - 150 = 50 ドルの利益を上げています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、1 日に 12,000/60 = 200 時間、患者を診察しているということです。', '彼らは 1 時間あたり 200 - 150 = 50 ドルの利益を上げています']\nnew_fact = infer_new_fact(selected) # 'つまり、患者の診察で 200 時間 * 1 時間あたり 50 ドル = 1 日 1万ドルの利益を上げています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['これらの診察から、病院はどのくらいの利益を得ていますか？', 'つまり、患者の診察で 200 時間 * 1 時間あたり 50 ドル = 1 日 1万ドルの利益を上げています']\nnew_fact = infer_new_fact(selected) # 'The answer is 10000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10000'"}
{"id": "GSM8K_130_70dc9a0006", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First, divide the starting number of elves by 3 to find out how many quit after being vomited on, which is 60 elves / 3 = 20 elves.; int1 -> int2: Then subtract that number from the starting number of elves to find out how many are left: 60 elves - 20 elves = 40 elves.; int2 & sent3 -> int3: Then subtract the number of elves who quit after being kicked to find the total number who left: 40 elves - 10 elves = 30 elves.; int3 & sent4 -> int4: The answer is 30;", "textual_logical_units": {"1": "ニッサは 60 人の季節労働者を雇い、デパートのサンタビレッジでエルフを演じさせています。", "2": "エルフの 3 分の 1 は子供たちに吐かれたために辞め、", "3": "残りの10人のエルフは子供にすねを蹴られたために辞めました。", "4": "エルフは何人残っていますか？", "5": "まず、最初のエルフの数を 3 で割って、嘔吐後に何人のエルフがやめるかを求めると、60/3 = 20 人のエルフになります。", "6": "次に、最初のエルフの数からその数を引いて、残っているエルフの数を求めます。 60 人のエルフ - 20 人のエルフ = 40 人のエルフです。", "7": "次に、蹴られた後に辞めたエルフの数を引いて、辞めたエルフの総数を求めます。 40 人のエルフ - 10 人のエルフ = 30 人のエルフです。", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['ニッサは 60 人の季節労働者を雇い、デパートのサンタビレッジでエルフを演じさせています。', 'エルフの 3 分の 1 は子供たちに吐かれたために辞め、', '残りの10人のエルフは子供にすねを蹴られたために辞めました。']\nquestion = 'エルフは何人残っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ニッサは 60 人の季節労働者を雇い、デパートのサンタビレッジでエルフを演じさせています。', 'エルフの 3 分の 1 は子供たちに吐かれたために辞め、']\nnew_fact = infer_new_fact(selected) # 'まず、最初のエルフの数を 3 で割って、嘔吐後に何人のエルフがやめるかを求めると、60/3 = 20 人のエルフになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、最初のエルフの数を 3 で割って、嘔吐後に何人のエルフがやめるかを求めると、60/3 = 20 人のエルフになります。']\nnew_fact = infer_new_fact(selected) # '次に、最初のエルフの数からその数を引いて、残っているエルフの数を求めます。 60 人のエルフ - 20 人のエルフ = 40 人のエルフです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの10人のエルフは子供にすねを蹴られたために辞めました。', '次に、最初のエルフの数からその数を引いて、残っているエルフの数を求めます。 60 人のエルフ - 20 人のエルフ = 40 人のエルフです。']\nnew_fact = infer_new_fact(selected) # '次に、蹴られた後に辞めたエルフの数を引いて、辞めたエルフの総数を求めます。 40 人のエルフ - 10 人のエルフ = 30 人のエルフです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エルフは何人残っていますか？', '次に、蹴られた後に辞めたエルフの数を引いて、辞めたエルフの総数を求めます。 40 人のエルフ - 10 人のエルフ = 30 人のエルフです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_131_1ebd927d97", "context": "", "options": [], "answer": "940", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: His expenditure in June was $500 - $60 = $440.; int1 & sent1 -> int2: His total expenditure for May and June was $500 + $440 = $940.; int2 & sent3 -> int3: The answer is 940;", "textual_logical_units": {"1": "5 月のジョセフの支出は 500 ドルでした。", "2": "6 月の彼の支出は 60 ドル少なくなりました。", "3": "この 2 か月間の彼の総支出はいくらでしたか？", "4": "彼の 6 月の支出は 500 ドル - 60 ドル = 440 ドルでした。", "5": "彼の 5 月と 6 月の総支出は 500 ドル + 440 ドル= 940 ドルでした。", "6": "The answer is 940"}, "human_translated": true, "code_input": "####\nfacts = ['5 月のジョセフの支出は 500 ドルでした。', '6 月の彼の支出は 60 ドル少なくなりました。']\nquestion = 'この 2 か月間の彼の総支出はいくらでしたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5 月のジョセフの支出は 500 ドルでした。', '6 月の彼の支出は 60 ドル少なくなりました。']\nnew_fact = infer_new_fact(selected) # '彼の 6 月の支出は 500 ドル - 60 ドル = 440 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 月のジョセフの支出は 500 ドルでした。', '彼の 6 月の支出は 500 ドル - 60 ドル = 440 ドルでした。']\nnew_fact = infer_new_fact(selected) # '彼の 5 月と 6 月の総支出は 500 ドル + 440 ドル= 940 ドルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この 2 か月間の彼の総支出はいくらでしたか？', '彼の 5 月と 6 月の総支出は 500 ドル + 440 ドル= 940 ドルでした。']\nnew_fact = infer_new_fact(selected) # 'The answer is 940'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '940'"}
{"id": "GSM8K_132_ca0a223aa4", "context": "", "options": [], "answer": "60", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: The total times that they ride the roller coaster is 2+4=6 times.; sent3 -> int2: The total times that they ride the luge is 2+2=4 times.; int1 & int2 -> int3: The total times they ride that day is 6+4=10 times.; int3 & sent4 -> int4: So, Pam and Fred used 10x6=60 tickets that day.; int4 & sent4 & sent5 -> int5: The answer is 60;", "textual_logical_units": {"1": "パムとフレッドはカーニバルに行きました。", "2": "パムはジェットコースターに 2 回、フレッドは 4 回乗りました。", "3": "その後、彼らはそれぞれリュージュに 2 回乗ることにしました。", "4": "1 回の乗車に 6 枚のチケットが必要な場合、", "5": "その日はチケットを何枚使いましたか？", "6": "ジェットコースターに乗る合計回数は 2 + 4 = 6 回です。", "7": "リュージュに乗る合計回数は 2 + 2 = 4 回です。", "8": "その日の合計乗車回数は 6 + 4 = 10 回です。", "9": "つまり、パムとフレッドはその日に 10 x 6 = 60 枚のチケットを使いました。", "10": "The answer is 60"}, "human_translated": true, "code_input": "####\nfacts = ['パムとフレッドはカーニバルに行きました。', 'パムはジェットコースターに 2 回、フレッドは 4 回乗りました。', 'その後、彼らはそれぞれリュージュに 2 回乗ることにしました。', '1 回の乗車に 6 枚のチケットが必要な場合、']\nquestion = 'その日はチケットを何枚使いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['パムはジェットコースターに 2 回、フレッドは 4 回乗りました。']\nnew_fact = infer_new_fact(selected) # 'ジェットコースターに乗る合計回数は 2 + 4 = 6 回です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼らはそれぞれリュージュに 2 回乗ることにしました。']\nnew_fact = infer_new_fact(selected) # 'リュージュに乗る合計回数は 2 + 2 = 4 回です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェットコースターに乗る合計回数は 2 + 4 = 6 回です。', 'リュージュに乗る合計回数は 2 + 2 = 4 回です。']\nnew_fact = infer_new_fact(selected) # 'その日の合計乗車回数は 6 + 4 = 10 回です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 回の乗車に 6 枚のチケットが必要な場合、', 'その日の合計乗車回数は 6 + 4 = 10 回です。']\nnew_fact = infer_new_fact(selected) # 'つまり、パムとフレッドはその日に 10 x 6 = 60 枚のチケットを使いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 回の乗車に 6 枚のチケットが必要な場合、', 'その日はチケットを何枚使いましたか？', 'つまり、パムとフレッドはその日に 10 x 6 = 60 枚のチケットを使いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 60'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '60'"}
{"id": "GSM8K_133_0e693843bb", "context": "", "options": [], "answer": "13", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Walt’s Tuesday walk was 4*6 = 24 miles.; int1 & sent1 -> int2: Walt’s Monday and Tuesday walk were 4+24 = 28 miles combined.; int2 & sent3 -> int3: Walt’s Wednesday walk was 41-28 = 13 miles.; int3 & sent4 -> int4: The answer is 13;", "textual_logical_units": {"1": "月曜日、ウォルトは 6.43 キロメートル歩きました。", "2": "火曜日、彼は月曜日に歩いた距離の 6 倍の距離を歩きました。", "3": "月曜日から水曜日までの彼の総歩行距離は 65.98 キロメートルでした。", "4": "彼は水曜日に何キロメートル歩きましたか？", "5": "ウォルトが火曜日に歩いたのは、6.44 * 6 = 38.62 キロメートルでした。", "6": "ウォルトが月曜日と火曜日に歩いたのは、合計で 6.44 + 38.62 = 45.06 キロメートルでした。", "7": "ウォルトが水曜日に歩いたのは、65.98 - 45.06 = 20.92 キロメートルでした。", "8": "The answer is 13"}, "human_translated": true, "code_input": "####\nfacts = ['月曜日、ウォルトは 6.43 キロメートル歩きました。', '火曜日、彼は月曜日に歩いた距離の 6 倍の距離を歩きました。', '月曜日から水曜日までの彼の総歩行距離は 65.98 キロメートルでした。']\nquestion = '彼は水曜日に何キロメートル歩きましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['月曜日、ウォルトは 6.43 キロメートル歩きました。', '火曜日、彼は月曜日に歩いた距離の 6 倍の距離を歩きました。']\nnew_fact = infer_new_fact(selected) # 'ウォルトが火曜日に歩いたのは、6.44 * 6 = 38.62 キロメートルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日、ウォルトは 6.43 キロメートル歩きました。', 'ウォルトが火曜日に歩いたのは、6.44 * 6 = 38.62 キロメートルでした。']\nnew_fact = infer_new_fact(selected) # 'ウォルトが月曜日と火曜日に歩いたのは、合計で 6.44 + 38.62 = 45.06 キロメートルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日から水曜日までの彼の総歩行距離は 65.98 キロメートルでした。', 'ウォルトが月曜日と火曜日に歩いたのは、合計で 6.44 + 38.62 = 45.06 キロメートルでした。']\nnew_fact = infer_new_fact(selected) # 'ウォルトが水曜日に歩いたのは、65.98 - 45.06 = 20.92 キロメートルでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は水曜日に何キロメートル歩きましたか？', 'ウォルトが水曜日に歩いたのは、65.98 - 45.06 = 20.92 キロメートルでした。']\nnew_fact = infer_new_fact(selected) # 'The answer is 13'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '13'"}
{"id": "GSM8K_134_2f2ab4e371", "context": "", "options": [], "answer": "720", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He gets 4*12=48 car washes a year; int1 & sent2 -> int2: That means it cost 48*15=$720; int2 & sent2 -> int3: The answer is 720;", "textual_logical_units": {"1": "トムは月に 4 回洗車します。", "2": "1 回の洗車に 15 ドルかかるとしたら、彼は年間いくら払いますか？", "3": "彼は年間 4 * 1 2= 48 回洗車をします", "4": "つまり、48 * 15 = 720 ドルかかるということです", "5": "The answer is 720"}, "human_translated": true, "code_input": "####\nfacts = ['トムは月に 4 回洗車します。']\nquestion = '1 回の洗車に 15 ドルかかるとしたら、彼は年間いくら払いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['トムは月に 4 回洗車します。', '1 回の洗車に 15 ドルかかるとしたら、彼は年間いくら払いますか？']\nnew_fact = infer_new_fact(selected) # '彼は年間 4 * 1 2= 48 回洗車をします'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 回の洗車に 15 ドルかかるとしたら、彼は年間いくら払いますか？', '彼は年間 4 * 1 2= 48 回洗車をします']\nnew_fact = infer_new_fact(selected) # 'つまり、48 * 15 = 720 ドルかかるということです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 回の洗車に 15 ドルかかるとしたら、彼は年間いくら払いますか？', 'つまり、48 * 15 = 720 ドルかかるということです']\nnew_fact = infer_new_fact(selected) # 'The answer is 720'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '720'"}
{"id": "GSM8K_135_ea7a060d98", "context": "", "options": [], "answer": "40", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [1, 2, 4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [2, 3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: If Brian previously had 20 video games but lost 5, that means he now has 20-5=15 video games; int1 & sent1 & sent2 -> int2: Brian has 15 video games, so if Bobby has 5 fewer than 3 times as many as Brian does we must first perform 15*3=45; int2 -> int3: We then subtract 5 from the previous total for 45-5=40 games in total.; int3 & sent2 & sent3 -> int4: The answer is 40;", "textual_logical_units": {"1": "ブライアンの友人ボビーは、ブライアンが持っている数の3 倍よりも5個少ないビデオゲームを持っています。", "2": "ブライアンがビデオゲームを 20 個持っていて、比較する直前に 5 個失くした場合、", "3": "ボビーはいくつ持っていますか？", "4": "ブライアンが以前 20 個のビデオゲームを持っていて 5 個失くした場合、彼は現在 20 - 5 = 15 個のビデオゲームを持っていることになります", "5": "ブライアンは 15 個のビデオゲームを持っているので、ボビーが持っているのがブライアンの 3 倍より 5 個少ない場合、最初に 15 * 3 = 45 を実行しなければなりません", "6": "次に、前回の合計から 5 を引いて、合計 45 - 5 = 40 個のゲームになります。", "7": "The answer is 40"}, "human_translated": true, "code_input": "####\nfacts = ['ブライアンの友人ボビーは、ブライアンが持っている数の3 倍よりも5個少ないビデオゲームを持っています。', 'ブライアンがビデオゲームを 20 個持っていて、比較する直前に 5 個失くした場合、']\nquestion = 'ボビーはいくつ持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ブライアンがビデオゲームを 20 個持っていて、比較する直前に 5 個失くした場合、']\nnew_fact = infer_new_fact(selected) # 'ブライアンが以前 20 個のビデオゲームを持っていて 5 個失くした場合、彼は現在 20 - 5 = 15 個のビデオゲームを持っていることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブライアンの友人ボビーは、ブライアンが持っている数の3 倍よりも5個少ないビデオゲームを持っています。', 'ブライアンがビデオゲームを 20 個持っていて、比較する直前に 5 個失くした場合、', 'ブライアンが以前 20 個のビデオゲームを持っていて 5 個失くした場合、彼は現在 20 - 5 = 15 個のビデオゲームを持っていることになります']\nnew_fact = infer_new_fact(selected) # 'ブライアンは 15 個のビデオゲームを持っているので、ボビーが持っているのがブライアンの 3 倍より 5 個少ない場合、最初に 15 * 3 = 45 を実行しなければなりません'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブライアンは 15 個のビデオゲームを持っているので、ボビーが持っているのがブライアンの 3 倍より 5 個少ない場合、最初に 15 * 3 = 45 を実行しなければなりません']\nnew_fact = infer_new_fact(selected) # '次に、前回の合計から 5 を引いて、合計 45 - 5 = 40 個のゲームになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブライアンがビデオゲームを 20 個持っていて、比較する直前に 5 個失くした場合、', 'ボビーはいくつ持っていますか？', '次に、前回の合計から 5 を引いて、合計 45 - 5 = 40 個のゲームになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 40'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '40'"}
{"id": "GSM8K_136_d9c82cc71f", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Scottish Unicorns:27(1/3)=9; int1 & sent3 -> int2: Female:9(2/3)=6 unicorns; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "世界には 27 頭のユニコーンが残っています。", "2": "その 3 分の 1 はスコットランド高地にいます。", "3": "スコットランドのユニコーンの 3 分の 2 はメスです。", "4": "スコットランドのメスのユニコーンは何頭いますか?", "5": "スコティッシュ・ユニコーン: 27 (1/3) = 9", "6": "メス: 9 (2/3) = 6頭のユニコーン", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['世界には 27 頭のユニコーンが残っています。', 'その 3 分の 1 はスコットランド高地にいます。', 'スコットランドのユニコーンの 3 分の 2 はメスです。']\nquestion = 'スコットランドのメスのユニコーンは何頭いますか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['世界には 27 頭のユニコーンが残っています。', 'その 3 分の 1 はスコットランド高地にいます。']\nnew_fact = infer_new_fact(selected) # 'スコティッシュ・ユニコーン: 27 (1/3) = 9'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スコットランドのユニコーンの 3 分の 2 はメスです。', 'スコティッシュ・ユニコーン: 27 (1/3) = 9']\nnew_fact = infer_new_fact(selected) # 'メス: 9 (2/3) = 6頭のユニコーン'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スコットランドのメスのユニコーンは何頭いますか?', 'メス: 9 (2/3) = 6頭のユニコーン']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_137_d6ca49d1e7", "context": "", "options": [], "answer": "29", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: 2 subs are $7.50 each so that’s 2*7.50 = $15.00; sent2 -> int2: 2 bags of chips are $1.50 each so that’s 2*1.50 = $3.00; sent3 -> int3: 2 cookies are $1.00 each so that’s 2*1 = $2.00; int1 & int2 & int3 -> int4: Her delivery order will be 15+3+2= $20.00; sent1 & sent4 -> int5: There’s a 20% delivery fee on the $20.00 which adds .20*20 = $4.00 to her bill; int4 & int5 & sent5 -> int6: The delivery order is $20.00, there’s a $4.00 delivery fee and she adds a $5.00 tip for a total of 20+4+5 = $29.00; int6 & sent6 -> int7: The answer is 29;", "textual_logical_units": {"1": "ロリーは、デリバリーでサブウェイを 2 個 7.50 ドル、", "2": "チップス 2 袋 1.50 ドル、", "3": "クッキー 2 個を 1.00 ドルで注文します。", "4": "会計時に 20% の配送料が加算され、", "5": "彼女は 5 ドルのチップを追加したいと言っています。", "6": "彼女のデリバリーの注文にはいくらかかりますか？", "7": "2 つのサブウェイはそれぞれ 7.50 ドルなので、2 * 7.50 = 15.00 ドルです", "8": "2 袋のチップスはそれぞれ 1.50 ドルなので、2 * 1.50 = 3.00 ドルです", "9": "クッキー 2 個はそれぞれ 1.00 ドルなので、2 * 1 = 2.00 ドルです", "10": "彼女のデリバリーの注文は15+3+2= 20.00ドルになります", "11": "20.00 ドルには 20% の配送料がかかり、請求に.20 * 20 = 4.00 ドルが加算されます", "12": "デリバリーの注文は 20.00 ドル、配送料は 4.00 ドルで、彼女は 5 ドルのチップを追加したので、合計 20 + 4 + 5 = 29.00 ドルになります。", "13": "The answer is 29"}, "human_translated": true, "code_input": "####\nfacts = ['ロリーは、デリバリーでサブウェイを 2 個 7.50 ドル、', 'チップス 2 袋 1.50 ドル、', 'クッキー 2 個を 1.00 ドルで注文します。', '会計時に 20% の配送料が加算され、', '彼女は 5 ドルのチップを追加したいと言っています。']\nquestion = '彼女のデリバリーの注文にはいくらかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ロリーは、デリバリーでサブウェイを 2 個 7.50 ドル、']\nnew_fact = infer_new_fact(selected) # '2 つのサブウェイはそれぞれ 7.50 ドルなので、2 * 7.50 = 15.00 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チップス 2 袋 1.50 ドル、']\nnew_fact = infer_new_fact(selected) # '2 袋のチップスはそれぞれ 1.50 ドルなので、2 * 1.50 = 3.00 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クッキー 2 個を 1.00 ドルで注文します。']\nnew_fact = infer_new_fact(selected) # 'クッキー 2 個はそれぞれ 1.00 ドルなので、2 * 1 = 2.00 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 つのサブウェイはそれぞれ 7.50 ドルなので、2 * 7.50 = 15.00 ドルです', '2 袋のチップスはそれぞれ 1.50 ドルなので、2 * 1.50 = 3.00 ドルです', 'クッキー 2 個はそれぞれ 1.00 ドルなので、2 * 1 = 2.00 ドルです']\nnew_fact = infer_new_fact(selected) # '彼女のデリバリーの注文は15+3+2= 20.00ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロリーは、デリバリーでサブウェイを 2 個 7.50 ドル、', '会計時に 20% の配送料が加算され、']\nnew_fact = infer_new_fact(selected) # '20.00 ドルには 20% の配送料がかかり、請求に.20 * 20 = 4.00 ドルが加算されます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は 5 ドルのチップを追加したいと言っています。', '彼女のデリバリーの注文は15+3+2= 20.00ドルになります', '20.00 ドルには 20% の配送料がかかり、請求に.20 * 20 = 4.00 ドルが加算されます']\nnew_fact = infer_new_fact(selected) # 'デリバリーの注文は 20.00 ドル、配送料は 4.00 ドルで、彼女は 5 ドルのチップを追加したので、合計 20 + 4 + 5 = 29.00 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女のデリバリーの注文にはいくらかかりますか？', 'デリバリーの注文は 20.00 ドル、配送料は 4.00 ドルで、彼女は 5 ドルのチップを追加したので、合計 20 + 4 + 5 = 29.00 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 29'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '29'"}
{"id": "GSM8K_138_beb61b44fb", "context": "", "options": [], "answer": "105", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [2, 5], "consequent": 8}, {"antecedents": [1, 7], "consequent": 9}, {"antecedents": [3, 8], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Questions Mark completed in yesterday’s test: 5*8 = 40.; sent2 & sent5 -> int2: Questions Mark completed in today’s test: 5*6 = 30.; int1 & sent1 -> int3: Questions Mark left incomplete in yesterday’s test: 75-40 = 35; int2 & sent3 -> int4: Questions Mark left incomplete in today's test: 100-30 = 70; int3 & int4 -> int5: Missed questions in total 35+70 = 105.; int5 & sent6 -> int6: The answer is 105;", "textual_logical_units": {"1": "マークは昨日、75 問のテストを受けました。", "2": "彼は 1 時間に 5 問の速さでテストを完了しました。", "3": "今日、彼は別の 100 問のテストを同じ速さで受けました。", "4": "マークが最初のテストを完了するのに 8 時間かかった場合", "5": "2 つ目を完成させるには 6 時間かかります。", "6": "彼はいくつの問題を未完成のままにしましたか？", "7": "昨日のテストで完了した問題: 5 * 8 = 40。", "8": "今日のテストで完了した問題: 5*6 = 30。", "9": "マークが昨日のテストで不完全のままにした問題: 75 - 40 = 35", "10": "今日のテストでマークが不完全のままにした問題: 100 - 30 = 70", "11": "完了しなかった問題の合計数は 35 + 70 = 105 です。", "12": "The answer is 105"}, "human_translated": true, "code_input": "####\nfacts = ['マークは昨日、75 問のテストを受けました。', '彼は 1 時間に 5 問の速さでテストを完了しました。', '今日、彼は別の 100 問のテストを同じ速さで受けました。', 'マークが最初のテストを完了するのに 8 時間かかった場合', '2 つ目を完成させるには 6 時間かかります。']\nquestion = '彼はいくつの問題を未完成のままにしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 1 時間に 5 問の速さでテストを完了しました。', 'マークが最初のテストを完了するのに 8 時間かかった場合']\nnew_fact = infer_new_fact(selected) # '昨日のテストで完了した問題: 5 * 8 = 40。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 時間に 5 問の速さでテストを完了しました。', '2 つ目を完成させるには 6 時間かかります。']\nnew_fact = infer_new_fact(selected) # '今日のテストで完了した問題: 5*6 = 30。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは昨日、75 問のテストを受けました。', '昨日のテストで完了した問題: 5 * 8 = 40。']\nnew_fact = infer_new_fact(selected) # 'マークが昨日のテストで不完全のままにした問題: 75 - 40 = 35'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今日、彼は別の 100 問のテストを同じ速さで受けました。', '今日のテストで完了した問題: 5*6 = 30。']\nnew_fact = infer_new_fact(selected) # '今日のテストでマークが不完全のままにした問題: 100 - 30 = 70'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークが昨日のテストで不完全のままにした問題: 75 - 40 = 35', '今日のテストでマークが不完全のままにした問題: 100 - 30 = 70']\nnew_fact = infer_new_fact(selected) # '完了しなかった問題の合計数は 35 + 70 = 105 です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はいくつの問題を未完成のままにしましたか？', '完了しなかった問題の合計数は 35 + 70 = 105 です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 105'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '105'"}
{"id": "GSM8K_139_3a7530c506", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Four times the number of blue gumballs is 12*4=48 gumballs; int1 & sent1 -> int2: There are 48+22=70 pink gumballs; int2 & sent2 -> int3: The answer is 70;", "textual_logical_units": {"1": "キャンディーマシンには、ピンクのガムボールが青いガムボールの4倍より22個多くあります。", "2": "青いガムボールが 12 個あるとしたら、ピンクのガムボールはいくつありますか？", "3": "青いガムボールの 4 倍の数は、12 * 4 = 48 個のガムボールです", "4": "ピンクのガムボールは 48 個 + 22= 70 個あります", "5": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['キャンディーマシンには、ピンクのガムボールが青いガムボールの4倍より22個多くあります。']\nquestion = '青いガムボールが 12 個あるとしたら、ピンクのガムボールはいくつありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['キャンディーマシンには、ピンクのガムボールが青いガムボールの4倍より22個多くあります。', '青いガムボールが 12 個あるとしたら、ピンクのガムボールはいくつありますか？']\nnew_fact = infer_new_fact(selected) # '青いガムボールの 4 倍の数は、12 * 4 = 48 個のガムボールです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['キャンディーマシンには、ピンクのガムボールが青いガムボールの4倍より22個多くあります。', '青いガムボールの 4 倍の数は、12 * 4 = 48 個のガムボールです']\nnew_fact = infer_new_fact(selected) # 'ピンクのガムボールは 48 個 + 22= 70 個あります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['青いガムボールが 12 個あるとしたら、ピンクのガムボールはいくつありますか？', 'ピンクのガムボールは 48 個 + 22= 70 個あります']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_140_917a0fcf98", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [1, 2, 4], "consequent": 5}, {"antecedents": [1, 2, 4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: 12 + 4 = 16 cars are either automatic or manual.; int1 & sent1 & sent2 -> int2: So, 20 - 16 = 4 cars are semi-automatic.; int1 & int2 & sent1 & sent2 -> int3: Therefore, the percentage of semi-automatic cars is 4/20 x 100% = 20%.; int3 & sent3 -> int4: The answer is 20;", "textual_logical_units": {"1": "レンタル可能な 20 台のうち、12 台がオートマチック、4 台がマニュアル車、", "2": "残りはセミオートマチックです。", "3": "車の何パーセントがセミオートマチックですか？", "4": "12 + 4 = 16 台の車はオートマチックまたはマニュアルです。", "5": "つまり、20 - 16 = 4 台の車はセミオートマチックです。", "6": "したがって、セミオートマチック車の割合は 4/20 x 100% = 20% です。", "7": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['レンタル可能な 20 台のうち、12 台がオートマチック、4 台がマニュアル車、', '残りはセミオートマチックです。']\nquestion = '車の何パーセントがセミオートマチックですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['レンタル可能な 20 台のうち、12 台がオートマチック、4 台がマニュアル車、']\nnew_fact = infer_new_fact(selected) # '12 + 4 = 16 台の車はオートマチックまたはマニュアルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['レンタル可能な 20 台のうち、12 台がオートマチック、4 台がマニュアル車、', '残りはセミオートマチックです。', '12 + 4 = 16 台の車はオートマチックまたはマニュアルです。']\nnew_fact = infer_new_fact(selected) # 'つまり、20 - 16 = 4 台の車はセミオートマチックです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['レンタル可能な 20 台のうち、12 台がオートマチック、4 台がマニュアル車、', '残りはセミオートマチックです。', '12 + 4 = 16 台の車はオートマチックまたはマニュアルです。', 'つまり、20 - 16 = 4 台の車はセミオートマチックです。']\nnew_fact = infer_new_fact(selected) # 'したがって、セミオートマチック車の割合は 4/20 x 100% = 20% です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['車の何パーセントがセミオートマチックですか？', 'したがって、セミオートマチック車の割合は 4/20 x 100% = 20% です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_141_6775a1dbf9", "context": "", "options": [], "answer": "400", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3, 5, 6], "consequent": 7}, {"antecedents": [1, 5, 6, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [7, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: Let x represent the number of queens; int1 & sent3 -> int2: Babies:2x; int1 & int2 & sent2 & sent3 -> int3: Workers:2(2x)=4x; int1 & int2 & int3 & sent1 -> int4: Total:x+2x+4x=700; int4 -> int5: 7x=700; int5 -> int6: x=100 queen bees; int3 & int6 -> int7: Workers:4(100)=400 worker bees; int7 & sent4 -> int8: The answer is 400;", "textual_logical_units": {"1": "巣箱には 700 匹のミツバチがいます。", "2": "働き蜂の数は、赤ちゃんミツバチの 2 倍で、", "3": "赤ちゃんの数は、女王バチの 2 倍です。", "4": "働きバチは何匹いますか？", "5": "x は女王バチの数を表すとします。", "6": "赤ちゃん: 2 倍", "7": "働きバチ: 2 (2倍) = 4 倍", "8": "合計: x + 2x + 4x = 700", "9": "7x = 700", "10": "x=100 女王バチ", "11": "働きバチ:4 (100) = 400 匹の働きバチ", "12": "The answer is 400"}, "human_translated": true, "code_input": "####\nfacts = ['巣箱には 700 匹のミツバチがいます。', '働き蜂の数は、赤ちゃんミツバチの 2 倍で、', '赤ちゃんの数は、女王バチの 2 倍です。']\nquestion = '働きバチは何匹いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['赤ちゃんの数は、女王バチの 2 倍です。']\nnew_fact = infer_new_fact(selected) # 'x は女王バチの数を表すとします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['赤ちゃんの数は、女王バチの 2 倍です。', 'x は女王バチの数を表すとします。']\nnew_fact = infer_new_fact(selected) # '赤ちゃん: 2 倍'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['働き蜂の数は、赤ちゃんミツバチの 2 倍で、', '赤ちゃんの数は、女王バチの 2 倍です。', 'x は女王バチの数を表すとします。', '赤ちゃん: 2 倍']\nnew_fact = infer_new_fact(selected) # '働きバチ: 2 (2倍) = 4 倍'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['巣箱には 700 匹のミツバチがいます。', 'x は女王バチの数を表すとします。', '赤ちゃん: 2 倍', '働きバチ: 2 (2倍) = 4 倍']\nnew_fact = infer_new_fact(selected) # '合計: x + 2x + 4x = 700'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['合計: x + 2x + 4x = 700']\nnew_fact = infer_new_fact(selected) # '7x = 700'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['7x = 700']\nnew_fact = infer_new_fact(selected) # 'x=100 女王バチ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['働きバチ: 2 (2倍) = 4 倍', 'x=100 女王バチ']\nnew_fact = infer_new_fact(selected) # '働きバチ:4 (100) = 400 匹の働きバチ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['働きバチは何匹いますか？', '働きバチ:4 (100) = 400 匹の働きバチ']\nnew_fact = infer_new_fact(selected) # 'The answer is 400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '400'"}
{"id": "GSM8K_142_d8ba3de624", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: Jordan plays video games for 2 hours every day x 7 days in a week = 14 hours a week.; int1 & sent2 -> int2: If Jordan spent his 14 hours working instead, he would make 14 hours x $10 = $140.; int2 & sent3 -> int3: The answer is 140;", "textual_logical_units": {"1": "ジョーダンは毎日 2 時間ビデオゲームをします。", "2": "彼はパートタイムの仕事もしていて、時給 10 ドルを稼いでいます。", "3": "ジョーダンがビデオゲームの時間を代わりに仕事に費やした場合、1 週間でどれくらいのお金を稼ぐでしょうか？", "4": "ジョーダンはビデオゲームを毎日 2 時間 x 週 7 日、つまり週 14 時間プレイします。", "5": "ジョーダンが 14 時間を代わりに仕事に費やした場合、彼は 14 時間 x 10ドル = 140 ドルを稼ぐことになります。", "6": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = ['ジョーダンは毎日 2 時間ビデオゲームをします。', '彼はパートタイムの仕事もしていて、時給 10 ドルを稼いでいます。']\nquestion = 'ジョーダンがビデオゲームの時間を代わりに仕事に費やした場合、1 週間でどれくらいのお金を稼ぐでしょうか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョーダンは毎日 2 時間ビデオゲームをします。']\nnew_fact = infer_new_fact(selected) # 'ジョーダンはビデオゲームを毎日 2 時間 x 週 7 日、つまり週 14 時間プレイします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はパートタイムの仕事もしていて、時給 10 ドルを稼いでいます。', 'ジョーダンはビデオゲームを毎日 2 時間 x 週 7 日、つまり週 14 時間プレイします。']\nnew_fact = infer_new_fact(selected) # 'ジョーダンが 14 時間を代わりに仕事に費やした場合、彼は 14 時間 x 10ドル = 140 ドルを稼ぐことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョーダンがビデオゲームの時間を代わりに仕事に費やした場合、1 週間でどれくらいのお金を稼ぐでしょうか？', 'ジョーダンが 14 時間を代わりに仕事に費やした場合、彼は 14 時間 x 10ドル = 140 ドルを稼ぐことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_143_aa97c4a867", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 2, 4], "consequent": 6}, {"antecedents": [4], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: The foodstuff cost 2+3=$5; sent1 & sent2 & sent4 -> int2: The nonfood stuff comes out to 3+3+4=$10; sent4 -> int3: Tax on the nonfood stuff comes out to 10*.1=$1; int1 & int2 & int3 -> int4: So the total cost is 5+10+1=$16; int4 & sent4 -> int5: The answer is 16;", "textual_logical_units": {"1": "ジョンは牛乳を 2 ドル、卵を 3 ドル、", "2": "電球を 3 ドル、コップを 3 ドル、", "3": "ゴキブリ捕獲器を 4 ドルで買います。", "4": "すべての非食品に 10% の税金がかかるとしたら、全部でいくらかかりましたか。", "5": "食料費は 2 + 3 ドル = 5 ドルです", "6": "食品以外のものは 3 + 3 + 4 = 10 ドルになります", "7": "食品以外のものに対する税金は 10 *.1 = 1 ドルになります", "8": "つまり、合計コストは 5 + 10 + 1 = 16 ドルになります。", "9": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは牛乳を 2 ドル、卵を 3 ドル、', '電球を 3 ドル、コップを 3 ドル、', 'ゴキブリ捕獲器を 4 ドルで買います。']\nquestion = 'すべての非食品に 10% の税金がかかるとしたら、全部でいくらかかりましたか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは牛乳を 2 ドル、卵を 3 ドル、']\nnew_fact = infer_new_fact(selected) # '食料費は 2 + 3 ドル = 5 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは牛乳を 2 ドル、卵を 3 ドル、', '電球を 3 ドル、コップを 3 ドル、', 'すべての非食品に 10% の税金がかかるとしたら、全部でいくらかかりましたか。']\nnew_fact = infer_new_fact(selected) # '食品以外のものは 3 + 3 + 4 = 10 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すべての非食品に 10% の税金がかかるとしたら、全部でいくらかかりましたか。']\nnew_fact = infer_new_fact(selected) # '食品以外のものに対する税金は 10 *.1 = 1 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['食料費は 2 + 3 ドル = 5 ドルです', '食品以外のものは 3 + 3 + 4 = 10 ドルになります', '食品以外のものに対する税金は 10 *.1 = 1 ドルになります']\nnew_fact = infer_new_fact(selected) # 'つまり、合計コストは 5 + 10 + 1 = 16 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すべての非食品に 10% の税金がかかるとしたら、全部でいくらかかりましたか。', 'つまり、合計コストは 5 + 10 + 1 = 16 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_144_5f91483472", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 14}, {"antecedents": [6, 14], "consequent": 15}, {"antecedents": [7, 14], "consequent": 16}, {"antecedents": [8, 15], "consequent": 17}, {"antecedents": [9, 16], "consequent": 18}, {"antecedents": [17, 18], "consequent": 19}, {"antecedents": [11, 19], "consequent": 20}, {"antecedents": [13, 20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Lucas counts a total of 3 confirmed clients + 5 potential clients = 8 clients.; int1 & sent6 -> int2: Each week, he will need a total of 8 clients * 2 bottles of bleach per client = 16 bottles of bleach.; int1 & sent7 -> int3: Each week, he will also need a total of 8 clients * 1 pack of cloths per client = 8 packs of cloths.; int2 & sent8 -> int4: The bottles of bleach will cost him 16 bottles of bleach * $2 per bottle of bleach = $32.; int3 & sent9 -> int5: The packs of cloths will cost him 8 packs of cloths * $5 per pack of cloths = $40.; int4 & int5 -> int6: So each week, Lucas' total expenses will be $32 for bleach + $40 for packs of cloths = $72.; int6 & sent11 -> int7: His profit will therefore be $92 total income - $72 total expenses = $20.; int7 & sent13 -> int8: The answer is 20;", "textual_logical_units": {"1": "キムは自分でハウスキーピング事業を始め、", "2": "クライアントからどれだけの利益を得られるかを計算しています。", "3": "彼にはすでに3人のクライアントがいますが、", "4": "別の 5 人の潜在的なクライアントと話していて、", "5": "彼らを計算に入れられる自信があります", "6": "各クライアントの家には掃除のための漂白剤のボトルが 2 本と", "7": "クロスのパックが 1 つ必要です。", "8": "漂白剤のボトルはそれぞれ 2 ドル、", "9": "クロスのパックはそれぞれ 5 ドルかかります。", "10": "これらは彼の唯一の支出です。", "11": "彼は毎週の総収入が 9 2ドルになると計算しています。", "12": "利益は総収入と総支出の差です。それでは、ルーカスは毎週いくらの", "13": "利益をドルで得られるでしょうか？", "14": "ルーカスは、確定済みのクライアント 3 人+潜在的なクライアント 5 人= 8 人のクライアントを計算します。", "15": "毎週、彼は合計 8 人のクライアント * クライアントあたり 2 本の漂白剤 = 16 本の漂白剤を必要とします。", "16": "また、毎週、合計 8 人のクライアント * クライアントあたり1パックの布 = 8 パックのクロスが必要になります。", "17": "漂白剤のボトルには、漂白剤 16 本* 漂白剤 1 本あたり 2 ドル= 32 ドルかかります。", "18": "クロスのパックは、8 パックのクロス * 1 パックのクロス 1 パックあたり 5 ドル = 40 ドルかかります。", "19": "つまり、ルーカスの毎週の総支出は、漂白剤で 32 ドル、クロスのパックで 40 ドル = 72 ドルになります。", "20": "したがって、彼の利益は総収入 92 ドル-総支出 72 ドル = 20 ドルになります。", "21": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'キムは自分でハウスキーピング事業を始め、',\n  'クライアントからどれだけの利益を得られるかを計算しています。',\n  '彼にはすでに3人のクライアントがいますが、',\n  '別の 5 人の潜在的なクライアントと話していて、',\n  '彼らを計算に入れられる自信があります',\n  '各クライアントの家には掃除のための漂白剤のボトルが 2 本と',\n  'クロスのパックが 1 つ必要です。',\n  '漂白剤のボトルはそれぞれ 2 ドル、',\n  'クロスのパックはそれぞれ 5 ドルかかります。',\n  'これらは彼の唯一の支出です。',\n  '彼は毎週の総収入が 9 2ドルになると計算しています。',\n  '利益は総収入と総支出の差です。それでは、ルーカスは毎週いくらの']\nquestion = '利益をドルで得られるでしょうか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼にはすでに3人のクライアントがいますが、', '別の 5 人の潜在的なクライアントと話していて、']\nnew_fact = infer_new_fact(selected) # 'ルーカスは、確定済みのクライアント 3 人+潜在的なクライアント 5 人= 8 人のクライアントを計算します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各クライアントの家には掃除のための漂白剤のボトルが 2 本と', 'ルーカスは、確定済みのクライアント 3 人+潜在的なクライアント 5 人= 8 人のクライアントを計算します。']\nnew_fact = infer_new_fact(selected) # '毎週、彼は合計 8 人のクライアント * クライアントあたり 2 本の漂白剤 = 16 本の漂白剤を必要とします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クロスのパックが 1 つ必要です。', 'ルーカスは、確定済みのクライアント 3 人+潜在的なクライアント 5 人= 8 人のクライアントを計算します。']\nnew_fact = infer_new_fact(selected) # 'また、毎週、合計 8 人のクライアント * クライアントあたり1パックの布 = 8 パックのクロスが必要になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['漂白剤のボトルはそれぞれ 2 ドル、', '毎週、彼は合計 8 人のクライアント * クライアントあたり 2 本の漂白剤 = 16 本の漂白剤を必要とします。']\nnew_fact = infer_new_fact(selected) # '漂白剤のボトルには、漂白剤 16 本* 漂白剤 1 本あたり 2 ドル= 32 ドルかかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クロスのパックはそれぞれ 5 ドルかかります。', 'また、毎週、合計 8 人のクライアント * クライアントあたり1パックの布 = 8 パックのクロスが必要になります。']\nnew_fact = infer_new_fact(selected) # 'クロスのパックは、8 パックのクロス * 1 パックのクロス 1 パックあたり 5 ドル = 40 ドルかかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['漂白剤のボトルには、漂白剤 16 本* 漂白剤 1 本あたり 2 ドル= 32 ドルかかります。', 'クロスのパックは、8 パックのクロス * 1 パックのクロス 1 パックあたり 5 ドル = 40 ドルかかります。']\nnew_fact = infer_new_fact(selected) # 'つまり、ルーカスの毎週の総支出は、漂白剤で 32 ドル、クロスのパックで 40 ドル = 72 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は毎週の総収入が 9 2ドルになると計算しています。', 'つまり、ルーカスの毎週の総支出は、漂白剤で 32 ドル、クロスのパックで 40 ドル = 72 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼の利益は総収入 92 ドル-総支出 72 ドル = 20 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['利益をドルで得られるでしょうか？', 'したがって、彼の利益は総収入 92 ドル-総支出 72 ドル = 20 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_145_1a3e2b62ae", "context": "", "options": [], "answer": "4000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: John has 100 x 10= 1000 pineapples on his field.; sent3 -> int2: John can harvest his Pineapple 12 ÷ 3 = 4 times per year; int1 & int2 -> int3: Therefore John can harvest 1000 x 4 = 4000 pineapples per year.; int3 & sent4 -> int4: The answer is 4000;", "textual_logical_units": {"1": "ジョンは 10 ヘクタールのパイナップル畑を持っています。", "2": "1 ヘクタールあたり 100 個のパイナップルがあります。", "3": "ジョンは 3 ヶ月ごとにパイナップルを収穫できます。", "4": "ジョンは 1 年に何個のパイナップルを収穫できますか？", "5": "ジョンの畑には 100 x 10 = 1000 個のパイナップルがあります。", "6": "ジョンはパイナップルを年に 12 ÷ 3 = 4 回収穫できます", "7": "したがって、ジョンは 1 年に 1000 x 4 = 4000 個のパイナップルを収穫できます。", "8": "The answer is 4000"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは 10 ヘクタールのパイナップル畑を持っています。', '1 ヘクタールあたり 100 個のパイナップルがあります。', 'ジョンは 3 ヶ月ごとにパイナップルを収穫できます。']\nquestion = 'ジョンは 1 年に何個のパイナップルを収穫できますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは 10 ヘクタールのパイナップル畑を持っています。', '1 ヘクタールあたり 100 個のパイナップルがあります。']\nnew_fact = infer_new_fact(selected) # 'ジョンの畑には 100 x 10 = 1000 個のパイナップルがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは 3 ヶ月ごとにパイナップルを収穫できます。']\nnew_fact = infer_new_fact(selected) # 'ジョンはパイナップルを年に 12 ÷ 3 = 4 回収穫できます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンの畑には 100 x 10 = 1000 個のパイナップルがあります。', 'ジョンはパイナップルを年に 12 ÷ 3 = 4 回収穫できます']\nnew_fact = infer_new_fact(selected) # 'したがって、ジョンは 1 年に 1000 x 4 = 4000 個のパイナップルを収穫できます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンは 1 年に何個のパイナップルを収穫できますか？', 'したがって、ジョンは 1 年に 1000 x 4 = 4000 個のパイナップルを収穫できます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 4000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4000'"}
{"id": "GSM8K_146_285833a555", "context": "", "options": [], "answer": "2125", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [3, 4], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The first set had 500 pieces, and the second set had 3 times as many as the first set, so the second set has 500*3=1500 pieces; sent3 & sent4 -> int2: The third set had one-quarter of the 500 pieces, so that means it had 500*.25= 125 pieces; int1 & int2 -> int3: In total, that means Johnny picked up 500 + 1500+ 125= 2125 blocks; int3 & sent5 -> int4: The answer is 2,125;", "textual_logical_units": {"1": "ジョニーは自分の部屋の床にあるおもちゃを拾っています。", "2": "彼はレゴのボックスセットから 500 ピースを床に投げ、", "3": "もう 1 回は、500 ピースの 3 倍のピースで、", "4": "もう 1 回はピースの数が1/4でした。", "5": "ジョニーがレゴを全部拾ったら、何ブロック拾うことになりますか？", "6": "最初のセットは 500 ピース、2 回目のセットは最初のセットの 3 倍だったので、2 回目のセットは 500 * 3 = 1500 個です", "7": "3 回目のセットには 500 ピースの 4 分の 1 が入っていたので、500 * .25 = 125 ピースだったということです", "8": "合計すると、ジョニーは 500 + 1500 + 125 = 2125 ピースのブロックを拾ったことになります", "9": "The answer is 2,125"}, "human_translated": true, "code_input": "####\nfacts = ['ジョニーは自分の部屋の床にあるおもちゃを拾っています。', '彼はレゴのボックスセットから 500 ピースを床に投げ、', 'もう 1 回は、500 ピースの 3 倍のピースで、', 'もう 1 回はピースの数が1/4でした。']\nquestion = 'ジョニーがレゴを全部拾ったら、何ブロック拾うことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼はレゴのボックスセットから 500 ピースを床に投げ、', 'もう 1 回は、500 ピースの 3 倍のピースで、']\nnew_fact = infer_new_fact(selected) # '最初のセットは 500 ピース、2 回目のセットは最初のセットの 3 倍だったので、2 回目のセットは 500 * 3 = 1500 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['もう 1 回は、500 ピースの 3 倍のピースで、', 'もう 1 回はピースの数が1/4でした。']\nnew_fact = infer_new_fact(selected) # '3 回目のセットには 500 ピースの 4 分の 1 が入っていたので、500 * .25 = 125 ピースだったということです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初のセットは 500 ピース、2 回目のセットは最初のセットの 3 倍だったので、2 回目のセットは 500 * 3 = 1500 個です', '3 回目のセットには 500 ピースの 4 分の 1 が入っていたので、500 * .25 = 125 ピースだったということです']\nnew_fact = infer_new_fact(selected) # '合計すると、ジョニーは 500 + 1500 + 125 = 2125 ピースのブロックを拾ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョニーがレゴを全部拾ったら、何ブロック拾うことになりますか？', '合計すると、ジョニーは 500 + 1500 + 125 = 2125 ピースのブロックを拾ったことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 2,125'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2125'"}
{"id": "GSM8K_147_e799d75f02", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 8}, {"antecedents": [4, 5], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Debra first sees 30 bees leave the hive, then sees 1/2 that many return, 30 x 1/2 = 15 bees that return and 15 bees that are still away from the hive.; sent4 & sent5 -> int2: Debra sees twice as many bees as first left the hive--which was 30--fly from the hive in the next 6 hours, 30 x 2 = 60 bees that leave the hive.; int2 & sent2 -> int3: In total, 30 + 60 = 90 bees left the hive.; int1 & int2 & int3 -> int4: There were 90 bees total that left the hive - 15 bees that already returned = 75 bees that return to the hive in the last 6 hours of the day.; int4 & sent7 -> int5: The answer is 75;", "textual_logical_units": {"1": "デブラはミツバチの巣箱を監視して、一日に何匹のミツバチが出入りするかを調べています。", "2": "彼女は最初の 6 時間で 30 匹のミツバチが巣箱を離れるのを見て、", "3": "その後、次の 6 時間でその 1/2 の数のミツバチが戻ってくるのを見ています。", "4": "最初に見たミツバチの 2 倍の数のミツバチが巣箱から飛び出すのを見て、", "5": "次の 6 時間以内に巣箱を離れていくのを見ました。", "6": "その後、前に巣箱を離れ、まだ戻っていミツバチは、次の 6 時間で巣箱に戻っています。", "7": "デブラは、その日の最後の 6 時間に何匹のミツバチが巣に戻ったのを見ましたか？", "8": "デブラは最初に 30 匹のミツバチが巣箱を離れるのを見て、次にその 1/2 の数のミツバチが戻ってくるのを見ています。30 x 1/2 = 15 匹のミツバチが戻り、15 匹がまだ巣箱から離れています。", "9": "デブラは、最初に巣箱を出たミツバチの数 (30 匹) の 2 倍の数のミツバチが次の 6 時間で巣箱から離れるのを見ています。つまり、30 x 2 = 60 匹のミツバチが巣箱を離れています。", "10": "合計で、30 + 60 = 90 匹のミツバチが巣箱を離れました。", "11": "巣箱から出たミツバチは合計 90 匹でした。すでに戻ってきたミツバチ 1 5匹 = その日の最後の 6 時間に巣に戻ったミツバチは 75 匹です。", "12": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = [ 'デブラはミツバチの巣箱を監視して、一日に何匹のミツバチが出入りするかを調べています。',\n  '彼女は最初の 6 時間で 30 匹のミツバチが巣箱を離れるのを見て、',\n  'その後、次の 6 時間でその 1/2 の数のミツバチが戻ってくるのを見ています。',\n  '最初に見たミツバチの 2 倍の数のミツバチが巣箱から飛び出すのを見て、',\n  '次の 6 時間以内に巣箱を離れていくのを見ました。',\n  'その後、前に巣箱を離れ、まだ戻っていミツバチは、次の 6 時間で巣箱に戻っています。']\nquestion = 'デブラは、その日の最後の 6 時間に何匹のミツバチが巣に戻ったのを見ましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は最初の 6 時間で 30 匹のミツバチが巣箱を離れるのを見て、', 'その後、次の 6 時間でその 1/2 の数のミツバチが戻ってくるのを見ています。']\nnew_fact = infer_new_fact(selected) # 'デブラは最初に 30 匹のミツバチが巣箱を離れるのを見て、次にその 1/2 の数のミツバチが戻ってくるのを見ています。30 x 1/2 = 15 匹のミツバチが戻り、15 匹がまだ巣箱から離れています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初に見たミツバチの 2 倍の数のミツバチが巣箱から飛び出すのを見て、', '次の 6 時間以内に巣箱を離れていくのを見ました。']\nnew_fact = infer_new_fact(selected) # 'デブラは、最初に巣箱を出たミツバチの数 (30 匹) の 2 倍の数のミツバチが次の 6 時間で巣箱から離れるのを見ています。つまり、30 x 2 = 60 匹のミツバチが巣箱を離れています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は最初の 6 時間で 30 匹のミツバチが巣箱を離れるのを見て、', 'デブラは、最初に巣箱を出たミツバチの数 (30 匹) の 2 倍の数のミツバチが次の 6 時間で巣箱から離れるのを見ています。つまり、30 x 2 = 60 匹のミツバチが巣箱を離れています。']\nnew_fact = infer_new_fact(selected) # '合計で、30 + 60 = 90 匹のミツバチが巣箱を離れました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['デブラは最初に 30 匹のミツバチが巣箱を離れるのを見て、次にその 1/2 の数のミツバチが戻ってくるのを見ています。30 x 1/2 = 15 匹のミツバチが戻り、15 匹がまだ巣箱から離れています。', 'デブラは、最初に巣箱を出たミツバチの数 (30 匹) の 2 倍の数のミツバチが次の 6 時間で巣箱から離れるのを見ています。つまり、30 x 2 = 60 匹のミツバチが巣箱を離れています。', '合計で、30 + 60 = 90 匹のミツバチが巣箱を離れました。']\nnew_fact = infer_new_fact(selected) # '巣箱から出たミツバチは合計 90 匹でした。すでに戻ってきたミツバチ 1 5匹 = その日の最後の 6 時間に巣に戻ったミツバチは 75 匹です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['デブラは、その日の最後の 6 時間に何匹のミツバチが巣に戻ったのを見ましたか？', '巣箱から出たミツバチは合計 90 匹でした。すでに戻ってきたミツバチ 1 5匹 = その日の最後の 6 時間に巣に戻ったミツバチは 75 匹です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_148_7aade7d21e", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 -> int1: The total cost of the tickets is 12+10=22 dollars.; int1 & sent4 -> int2: Brittany's mom gave the cashier 22+8=30 dollars.; int2 & sent4 & sent5 -> int3: The answer is 30;", "textual_logical_units": {"1": "ブリタニーと彼女のお母さんは美術館に行きます。", "2": "入場料は大人 12 ドル、子供 10 ドルです。", "3": "ブリタニーのお母さんは、子供用チケット 1 枚と大人用チケット 1 枚のお金をレジ係に渡します。", "4": "もし彼女が8ドルの小銭を受け取った場合、", "5": "彼女はレジ係にドルでいくら渡しましたか？", "6": "チケットの合計費用は 12 + 10 = 22 ドルです。", "7": "ブリタニーのお母さんはレジ係に 22 + 8 = 30 ドルを渡しました。", "8": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['ブリタニーと彼女のお母さんは美術館に行きます。', '入場料は大人 12 ドル、子供 10 ドルです。', 'ブリタニーのお母さんは、子供用チケット 1 枚と大人用チケット 1 枚のお金をレジ係に渡します。', 'もし彼女が8ドルの小銭を受け取った場合、']\nquestion = '彼女はレジ係にドルでいくら渡しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['入場料は大人 12 ドル、子供 10 ドルです。']\nnew_fact = infer_new_fact(selected) # 'チケットの合計費用は 12 + 10 = 22 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['もし彼女が8ドルの小銭を受け取った場合、', 'チケットの合計費用は 12 + 10 = 22 ドルです。']\nnew_fact = infer_new_fact(selected) # 'ブリタニーのお母さんはレジ係に 22 + 8 = 30 ドルを渡しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['もし彼女が8ドルの小銭を受け取った場合、', '彼女はレジ係にドルでいくら渡しましたか？', 'ブリタニーのお母さんはレジ係に 22 + 8 = 30 ドルを渡しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_149_72eee8020e", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Dorothy has 12 / 3 = 4 Facebook friends.; sent1 & sent2 -> int2: James has 4 * 4 = 16 Facebook friends.; int2 & sent4 -> int3: The answer is 16;", "textual_logical_units": {"1": "チャーリーはドロシーの 3 倍の数の友達が Facebook にいます。", "2": "ジェームズはドロシーの 4 倍の数の友達が Facebook にいます。", "3": "チャーリーに 12 人の友達が Facebook にいる場合、", "4": "ジェームズには何人の友達が Facebook にいますか？", "5": "ドロシーは 12/3 = 4 人の友達が Facebook にいます。", "6": "ジェームズには 4 * 4 = 16 人の友達が Facebook にいます。", "7": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['チャーリーはドロシーの 3 倍の数の友達が Facebook にいます。', 'ジェームズはドロシーの 4 倍の数の友達が Facebook にいます。', 'チャーリーに 12 人の友達が Facebook にいる場合、']\nquestion = 'ジェームズには何人の友達が Facebook にいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['チャーリーはドロシーの 3 倍の数の友達が Facebook にいます。', 'チャーリーに 12 人の友達が Facebook にいる場合、']\nnew_fact = infer_new_fact(selected) # 'ドロシーは 12/3 = 4 人の友達が Facebook にいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チャーリーはドロシーの 3 倍の数の友達が Facebook にいます。', 'ジェームズはドロシーの 4 倍の数の友達が Facebook にいます。']\nnew_fact = infer_new_fact(selected) # 'ジェームズには 4 * 4 = 16 人の友達が Facebook にいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェームズには何人の友達が Facebook にいますか？', 'ジェームズには 4 * 4 = 16 人の友達が Facebook にいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_150_f1d3e40732", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent4 -> int1: Steve has to travel 3 miles * (5280 feet/1 mile) = 15840 feet to get home.; int1 & sent5 -> int2: It will take Steve 15840 feet / (440 feet/minute) = 36 minutes to get home.; sent6 -> int3: Tim has to travel 2 miles * (5280 feet/1 mile) = 10560 feet to get home.; int3 & sent7 -> int4: It will take Tim 10560 feet / (264 feet/minute) = 40 minutes to get home.; int2 & int4 -> int5: Steve will finish the race in 40 minutes - 36 minutes = 4 minutes less time than Tim.; int5 & sent8 -> int6: The answer is 4;", "textual_logical_units": {"1": "スティーブとティムは、誰が一番早く学校から帰れるか試してみることにしました。", "2": "スティーブはティムより遠くに住んでいるので、", "3": "自転車に乗ることを許可されています。", "4": "スティーブは学校から 4.83 キロメートル離れたところに住んでいて", "5": "毎分 134.11 メートルで自転車を漕ぐことができます。", "6": "ティムは学校から 2 マイル離れたところに住んでいます。", "7": "ティムが毎分 80.47 メートルでスケートボードに乗れるとしたら、", "8": "負けた方がレースを終えるまで、勝った方はどのくらい家で待っていますか？", "9": "スティーブは家に帰るまでに 4.83 キロメートル * (1609.34 メートル/1.61 キロメートル) = 4828.02 メートル移動する必要があります。", "10": "スティーブが家に帰るのに 4828.02 メートル/(134.11 メートル/分) = 36 分かかります。", "11": "ティムは家に帰るまでに 3.22 キロメートル * (1609.34 メートル/1.61 キロメートル) = 3218.68 メートル移動する必要があります。", "12": "ティムが家に帰るのに 3218.68 メートル/(80.46 メートル/分) = 40 分かかります。", "13": "スティーブは 40 分 - 36 分 = ティムより 4 分短い時間でレースを終えます。", "14": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = [ 'スティーブとティムは、誰が一番早く学校から帰れるか試してみることにしました。',\n  'スティーブはティムより遠くに住んでいるので、',\n  '自転車に乗ることを許可されています。',\n  'スティーブは学校から 4.83 キロメートル離れたところに住んでいて',\n  '毎分 134.11 メートルで自転車を漕ぐことができます。',\n  'ティムは学校から 2 マイル離れたところに住んでいます。',\n  'ティムが毎分 80.47 メートルでスケートボードに乗れるとしたら、']\nquestion = '負けた方がレースを終えるまで、勝った方はどのくらい家で待っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スティーブは学校から 4.83 キロメートル離れたところに住んでいて']\nnew_fact = infer_new_fact(selected) # 'スティーブは家に帰るまでに 4.83 キロメートル * (1609.34 メートル/1.61 キロメートル) = 4828.02 メートル移動する必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['毎分 134.11 メートルで自転車を漕ぐことができます。', 'スティーブは家に帰るまでに 4.83 キロメートル * (1609.34 メートル/1.61 キロメートル) = 4828.02 メートル移動する必要があります。']\nnew_fact = infer_new_fact(selected) # 'スティーブが家に帰るのに 4828.02 メートル/(134.11 メートル/分) = 36 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ティムは学校から 2 マイル離れたところに住んでいます。']\nnew_fact = infer_new_fact(selected) # 'ティムは家に帰るまでに 3.22 キロメートル * (1609.34 メートル/1.61 キロメートル) = 3218.68 メートル移動する必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ティムが毎分 80.47 メートルでスケートボードに乗れるとしたら、', 'ティムは家に帰るまでに 3.22 キロメートル * (1609.34 メートル/1.61 キロメートル) = 3218.68 メートル移動する必要があります。']\nnew_fact = infer_new_fact(selected) # 'ティムが家に帰るのに 3218.68 メートル/(80.46 メートル/分) = 40 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スティーブが家に帰るのに 4828.02 メートル/(134.11 メートル/分) = 36 分かかります。', 'ティムが家に帰るのに 3218.68 メートル/(80.46 メートル/分) = 40 分かかります。']\nnew_fact = infer_new_fact(selected) # 'スティーブは 40 分 - 36 分 = ティムより 4 分短い時間でレースを終えます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['負けた方がレースを終えるまで、勝った方はどのくらい家で待っていますか？', 'スティーブは 40 分 - 36 分 = ティムより 4 分短い時間でレースを終えます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_151_f3b92f8ee7", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 8}, {"antecedents": [5], "consequent": 9}, {"antecedents": [6], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent4 -> int1: There were 10 bike tires to fill up because 2 times 5 equals 10.; sent5 -> int2: There were 9 tricycle tires to fill up because 3 times 3 equals 9.; sent6 -> int3: There was one unicycle tire to fill up because 1 times 1 equals 1.; int1 & int2 & int3 -> int4: There were 20 total tires to fill up because 10 plus 9 plus 1 equals 20.; int4 & sent3 -> int5: She made $5 because 20 times .25 equals 5.; int5 & sent7 -> int6: The answer is 5;", "textual_logical_units": {"1": "ショーンダは、近所の子供たちに自転車の空気入れサービスを実際に利用してもらうことにしました。", "2": "彼女は、タイヤでお金を稼ぐのが最善の方法だと判断しました。", "3": "タイヤ 1 本を膨らませるのに 25 セントかかります。", "4": "初日は、自転車に乗った 5 人が両方のタイヤに空気を入れるためにやって来ました。", "5": "3 人が、三輪車のタイヤ全部に空気を入れるためにやって来ました。", "6": "最後に、なんと一輪車に乗った人がやって来ました。", "7": "その日、彼女は何ドル稼ぎましたか。", "8": "5 × 2 = 10 なので、空気を入れる自転車のタイヤは 10 本ありました。", "9": "3 × 3 = 9 なので、空気を入れる三輪車のタイヤは 9 本ありました。", "10": "1 × 1 = 1 なので、空気を入れる一輪車のタイヤは 1 本ありました。", "11": "10 + 9 + 1 = 20 なので、空気を入れるタイヤは合計 20 本ありました。", "12": "20 × 0.25 = 5 なので、彼女は 5 ドル稼ぎました。", "13": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'ショーンダは、近所の子供たちに自転車の空気入れサービスを実際に利用してもらうことにしました。',\n  '彼女は、タイヤでお金を稼ぐのが最善の方法だと判断しました。',\n  'タイヤ 1 本を膨らませるのに 25 セントかかります。',\n  '初日は、自転車に乗った 5 人が両方のタイヤに空気を入れるためにやって来ました。',\n  '3 人が、三輪車のタイヤ全部に空気を入れるためにやって来ました。',\n  '最後に、なんと一輪車に乗った人がやって来ました。']\nquestion = 'その日、彼女は何ドル稼ぎましたか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['初日は、自転車に乗った 5 人が両方のタイヤに空気を入れるためにやって来ました。']\nnew_fact = infer_new_fact(selected) # '5 × 2 = 10 なので、空気を入れる自転車のタイヤは 10 本ありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 人が、三輪車のタイヤ全部に空気を入れるためにやって来ました。']\nnew_fact = infer_new_fact(selected) # '3 × 3 = 9 なので、空気を入れる三輪車のタイヤは 9 本ありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最後に、なんと一輪車に乗った人がやって来ました。']\nnew_fact = infer_new_fact(selected) # '1 × 1 = 1 なので、空気を入れる一輪車のタイヤは 1 本ありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 × 2 = 10 なので、空気を入れる自転車のタイヤは 10 本ありました。', '3 × 3 = 9 なので、空気を入れる三輪車のタイヤは 9 本ありました。', '1 × 1 = 1 なので、空気を入れる一輪車のタイヤは 1 本ありました。']\nnew_fact = infer_new_fact(selected) # '10 + 9 + 1 = 20 なので、空気を入れるタイヤは合計 20 本ありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['タイヤ 1 本を膨らませるのに 25 セントかかります。', '10 + 9 + 1 = 20 なので、空気を入れるタイヤは合計 20 本ありました。']\nnew_fact = infer_new_fact(selected) # '20 × 0.25 = 5 なので、彼女は 5 ドル稼ぎました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その日、彼女は何ドル稼ぎましたか。', '20 × 0.25 = 5 なので、彼女は 5 ドル稼ぎました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_152_98659db184", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: A pack of cookies costs 6 x $0.10 = $0.60.; int1 & sent1 -> int2: Thus, ten packs of cookies cost 10 x $0.6 = $6.; int2 & sent4 -> int3: Therefore, Carl will receive a $10 - $6 = $4 change.; int3 & sent4 -> int4: The answer is 4;", "textual_logical_units": {"1": "カールはクッキーを 10 パック買います。", "2": "クッキーのパック 1 つには 6 つのクッキーが入っています。", "3": "各クッキーの価格は 0.10 ドルです。", "4": "カールが 10 ドル紙幣で支払った場合、いくらのおつりを受け取りますか？", "5": "クッキー 1 パックの価格は 6 x 0.10 ドル = 0.60 ドルです。", "6": "したがって、10 パックのクッキーの価格は 10 x 0.6 ドル = 6 ドルです。", "7": "したがって、カールは 10 ドル - 6 ドル = 4 ドルのおつりを受け取ります。", "8": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['カールはクッキーを 10 パック買います。', 'クッキーのパック 1 つには 6 つのクッキーが入っています。', '各クッキーの価格は 0.10 ドルです。']\nquestion = 'カールが 10 ドル紙幣で支払った場合、いくらのおつりを受け取りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['クッキーのパック 1 つには 6 つのクッキーが入っています。', '各クッキーの価格は 0.10 ドルです。']\nnew_fact = infer_new_fact(selected) # 'クッキー 1 パックの価格は 6 x 0.10 ドル = 0.60 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カールはクッキーを 10 パック買います。', 'クッキー 1 パックの価格は 6 x 0.10 ドル = 0.60 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、10 パックのクッキーの価格は 10 x 0.6 ドル = 6 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カールが 10 ドル紙幣で支払った場合、いくらのおつりを受け取りますか？', 'したがって、10 パックのクッキーの価格は 10 x 0.6 ドル = 6 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがって、カールは 10 ドル - 6 ドル = 4 ドルのおつりを受け取ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カールが 10 ドル紙幣で支払った場合、いくらのおつりを受け取りますか？', 'したがって、カールは 10 ドル - 6 ドル = 4 ドルのおつりを受け取ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_153_9c58c3ed07", "context": "", "options": [], "answer": "48", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [4, 5], "consequent": 10}, {"antecedents": [7], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}, {"antecedents": [9, 10, 11, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Dave ate 14 french fries, so the seagull ate 14 * 1/2 = 14 / 2 = 7 fries.; sent4 & sent5 -> int2: The 3 pigeons ate 3 each, so they ate 3 * 3 = 9 fries.; sent7 -> int3: The ants took one french fry, so there were 5 + 1 = 6 after the racoon took some.; int3 & sent6 -> int4: The raccoon left 1/3 behind, so there were 6 * 3 = 18 fries before the raccoon took any.; int1 & int2 & int3 & int4 -> int5: Thus, the pack had 14 + 7 + 9 + 18 = 48 fries in it when Dave bought it.; int5 & sent8 -> int6: The answer is 48;", "textual_logical_units": {"1": "デイブはフライドポテトの大きなパックを買い、", "2": "14 個食べた後、空腹のカモメが彼の手からパックを盗みました。", "3": "カモメが上陸すると、デイブが食べたフライドポテトの半分の量をむさぼり食いました。", "4": "すると 3 羽のハトがカモメをいじめて食べ物から遠ざけ、", "5": "ハトはフライドポテトを 3 つずつ食べました。", "6": "その後、アライグマが残りのフライドポテトの3分の2を盗みました。", "7": "アリは最後のフライドポテトを持ち去り、5 つ残りました。", "8": "デイブが買ったとき、パックには何個のフライドポテトが入っていましたか？", "9": "デイブは 14 個のフライドポテトを食べたので、カモメは 14 * 1/2 = 14/2 = 7 個のフライドポテトを食べました。", "10": "3 羽のハトはそれぞれ 3 個ずつ食べたので、3 × 3 = 9 個のフライドポテトを食べました。", "11": "アリはフライドポテトを 1 個持ち去ったので、アライグマが何個か取った後は 5 + 1 = 6 になりました。", "12": "アライグマは 1/3 を残したので、アライグマが何個か取る前には 6×3 = 18 個のフライドポテトがありました。", "13": "したがって、デイブが購入したとき、パックには 14 + 7 + 9 + 18 = 48 個のフライドポテトが入っていました。", "14": "The answer is 48"}, "human_translated": true, "code_input": "####\nfacts = [ 'デイブはフライドポテトの大きなパックを買い、',\n  '14 個食べた後、空腹のカモメが彼の手からパックを盗みました。',\n  'カモメが上陸すると、デイブが食べたフライドポテトの半分の量をむさぼり食いました。',\n  'すると 3 羽のハトがカモメをいじめて食べ物から遠ざけ、',\n  'ハトはフライドポテトを 3 つずつ食べました。',\n  'その後、アライグマが残りのフライドポテトの3分の2を盗みました。',\n  'アリは最後のフライドポテトを持ち去り、5 つ残りました。']\nquestion = 'デイブが買ったとき、パックには何個のフライドポテトが入っていましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['14 個食べた後、空腹のカモメが彼の手からパックを盗みました。', 'カモメが上陸すると、デイブが食べたフライドポテトの半分の量をむさぼり食いました。']\nnew_fact = infer_new_fact(selected) # 'デイブは 14 個のフライドポテトを食べたので、カモメは 14 * 1/2 = 14/2 = 7 個のフライドポテトを食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['すると 3 羽のハトがカモメをいじめて食べ物から遠ざけ、', 'ハトはフライドポテトを 3 つずつ食べました。']\nnew_fact = infer_new_fact(selected) # '3 羽のハトはそれぞれ 3 個ずつ食べたので、3 × 3 = 9 個のフライドポテトを食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アリは最後のフライドポテトを持ち去り、5 つ残りました。']\nnew_fact = infer_new_fact(selected) # 'アリはフライドポテトを 1 個持ち去ったので、アライグマが何個か取った後は 5 + 1 = 6 になりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、アライグマが残りのフライドポテトの3分の2を盗みました。', 'アリはフライドポテトを 1 個持ち去ったので、アライグマが何個か取った後は 5 + 1 = 6 になりました。']\nnew_fact = infer_new_fact(selected) # 'アライグマは 1/3 を残したので、アライグマが何個か取る前には 6×3 = 18 個のフライドポテトがありました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['デイブは 14 個のフライドポテトを食べたので、カモメは 14 * 1/2 = 14/2 = 7 個のフライドポテトを食べました。', '3 羽のハトはそれぞれ 3 個ずつ食べたので、3 × 3 = 9 個のフライドポテトを食べました。', 'アリはフライドポテトを 1 個持ち去ったので、アライグマが何個か取った後は 5 + 1 = 6 になりました。', 'アライグマは 1/3 を残したので、アライグマが何個か取る前には 6×3 = 18 個のフライドポテトがありました。']\nnew_fact = infer_new_fact(selected) # 'したがって、デイブが購入したとき、パックには 14 + 7 + 9 + 18 = 48 個のフライドポテトが入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['デイブが買ったとき、パックには何個のフライドポテトが入っていましたか？', 'したがって、デイブが購入したとき、パックには 14 + 7 + 9 + 18 = 48 個のフライドポテトが入っていました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 48'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '48'"}
{"id": "GSM8K_154_9c702ca983", "context": "", "options": [], "answer": "272", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}, {"antecedents": [5, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Kimo spends 3 x 1 = 3 hours in class on any given Monday, Wednesday or Friday.; int1 -> int2: Each week, he spends 3 x 3 = 9 hours in class on Monday, Wednesday, and Friday.; int2 & sent4 -> int3: In one semester, he spends 9 x 16 = 144 hours in class for Monday, Wednesday, and Friday.; sent3 -> int4: He spends 2 x 2 = 4 hours in class on any given Tuesday or Thursday.; int4 -> int5: Each week, he spends 4 x 2 = 8 hours in class on Tuesday and Thursday.; int4 & int5 -> int6: In one semester, he spends 8 x 16 = 128 hours in class on Tuesday and Thursday.; int3 & int6 -> int7: In total for one semester, Kimo spends 144 + 128 = 272 hours attending classes.; int7 & sent5 -> int8: The answer is 272;", "textual_logical_units": {"1": "大学生のキモは月曜日、水曜日、金曜日に", "2": "1 時間の授業を毎日 3 つ受けています。", "3": "火曜日と木曜日には、毎日 2 時間の授業を 2 つ受けています。", "4": "1 学期には 16 週間の授業があります。", "5": "1 学期、キモは授業に何時間出席しますか？", "6": "キモは、月曜日、水曜日、金曜日のいずれも、3 x 1 = 3 時間を授業に費やしています。", "7": "彼は毎週、月曜日、水曜日、金曜日に 3 x 3 = 9 時間授業を受けています。", "8": "彼は 1 学期、月曜日、水曜日、金曜日 9 x 16 = 144 時間を授業に費やしています。", "9": "彼は火曜日と木曜日のいずれも、2 x 2 = 4 時間を授業に費やします。", "10": "彼は毎週、火曜日と木曜日に4 x 2 = 8 時間を授業に費やしています。", "11": "1学期、彼は火曜日と木曜日に 8 x 16 = 128 時間を授業に費やします。", "12": "1 学期の合計で、キモは 144 時間 + 128 = 272 時間授業に出席します。", "13": "The answer is 272"}, "human_translated": true, "code_input": "####\nfacts = ['大学生のキモは月曜日、水曜日、金曜日に', '1 時間の授業を毎日 3 つ受けています。', '火曜日と木曜日には、毎日 2 時間の授業を 2 つ受けています。', '1 学期には 16 週間の授業があります。']\nquestion = '1 学期、キモは授業に何時間出席しますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['大学生のキモは月曜日、水曜日、金曜日に', '1 時間の授業を毎日 3 つ受けています。']\nnew_fact = infer_new_fact(selected) # 'キモは、月曜日、水曜日、金曜日のいずれも、3 x 1 = 3 時間を授業に費やしています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['キモは、月曜日、水曜日、金曜日のいずれも、3 x 1 = 3 時間を授業に費やしています。']\nnew_fact = infer_new_fact(selected) # '彼は毎週、月曜日、水曜日、金曜日に 3 x 3 = 9 時間授業を受けています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 学期には 16 週間の授業があります。', '彼は毎週、月曜日、水曜日、金曜日に 3 x 3 = 9 時間授業を受けています。']\nnew_fact = infer_new_fact(selected) # '彼は 1 学期、月曜日、水曜日、金曜日 9 x 16 = 144 時間を授業に費やしています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['火曜日と木曜日には、毎日 2 時間の授業を 2 つ受けています。']\nnew_fact = infer_new_fact(selected) # '彼は火曜日と木曜日のいずれも、2 x 2 = 4 時間を授業に費やします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は火曜日と木曜日のいずれも、2 x 2 = 4 時間を授業に費やします。']\nnew_fact = infer_new_fact(selected) # '彼は毎週、火曜日と木曜日に4 x 2 = 8 時間を授業に費やしています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は火曜日と木曜日のいずれも、2 x 2 = 4 時間を授業に費やします。', '彼は毎週、火曜日と木曜日に4 x 2 = 8 時間を授業に費やしています。']\nnew_fact = infer_new_fact(selected) # '1学期、彼は火曜日と木曜日に 8 x 16 = 128 時間を授業に費やします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 学期、月曜日、水曜日、金曜日 9 x 16 = 144 時間を授業に費やしています。', '1学期、彼は火曜日と木曜日に 8 x 16 = 128 時間を授業に費やします。']\nnew_fact = infer_new_fact(selected) # '1 学期の合計で、キモは 144 時間 + 128 = 272 時間授業に出席します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 学期、キモは授業に何時間出席しますか？', '1 学期の合計で、キモは 144 時間 + 128 = 272 時間授業に出席します。']\nnew_fact = infer_new_fact(selected) # 'The answer is 272'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '272'"}
{"id": "GSM8K_155_027f6a23d5", "context": "", "options": [], "answer": "280", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 5], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [7, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find the total length of the rolls: 300 rolls * 4 inches/roll = 1200 inches; sent1 & sent4 -> int2: Then find the total length of the croissants: 120 rolls * 6 inches/roll = 720 inches; int1 & int2 -> int3: Then add the length of the rolls and croissants to find the total length in inches: 1200 inches + 720 inches = 1920 inches; int3 -> int4: Then divide the total length by 12 inches per foot to find the length in feet: 1920 inches / 12 inches/foot = 160 feet; sent2 & sent5 -> int5: Then find the total length of the baguettes: 60 baguettes * 2 feet/baguette = 120 feet; int4 & int5 -> int6: Then add the length of the other baked goods in feet to find the total length: 120 feet + 160 feet = 280 feet; int6 & sent7 -> int7: The answer is 280;", "textual_logical_units": {"1": "ビルは毎日、ロールパン 300 個、チョコレートクロワッサン 120 個、", "2": "バゲット 60 個を焼きます。", "3": "ロール 1 個の長さは 4 インチ、", "4": "クロワッサン 1 個の長さは 6 インチ、", "5": "バゲット 1 個の長さは 0.6 メートルです。", "6": "ビルがすべての焼き菓子を端から端まで並べたら", "7": "インチ単位でどれくらいの長さになりますか？", "8": "まず、ロールの全長を求めます。 300 ロール * 4 インチ/ロール = 1200 インチ", "9": "次に、クロワッサンの全長を求めます。 120 ロール * 6 インチ/ロール = 720 インチ", "10": "次に、ロールパンとクロワッサンの長さを足して、全長をインチ単位で求めます。 1200 インチ + 720 インチ = 1920 インチ", "11": "次に、全長を 0.30 メートルあたり 30.48 センチメートルで割って、メートル単位の長さを求めます。 4876.8 センチメートル/30.48 センチメートル/メートル = 160 メートル", "12": "次に、バゲットの全長を求めます。 60 個のバゲット * 0.61 メートル/バゲット = 36.58 メートル", "13": "次に、他の焼き菓子の長さをメートル単位で加算して、全長を求めます。 36.58 メートル + 48.77 メートル = 85.35 メートル", "14": "The answer is 280"}, "human_translated": true, "code_input": "####\nfacts = [ 'ビルは毎日、ロールパン 300 個、チョコレートクロワッサン 120 個、',\n  'バゲット 60 個を焼きます。',\n  'ロール 1 個の長さは 4 インチ、',\n  'クロワッサン 1 個の長さは 6 インチ、',\n  'バゲット 1 個の長さは 0.6 メートルです。',\n  'ビルがすべての焼き菓子を端から端まで並べたら']\nquestion = 'インチ単位でどれくらいの長さになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ビルは毎日、ロールパン 300 個、チョコレートクロワッサン 120 個、', 'ロール 1 個の長さは 4 インチ、']\nnew_fact = infer_new_fact(selected) # 'まず、ロールの全長を求めます。 300 ロール * 4 インチ/ロール = 1200 インチ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビルは毎日、ロールパン 300 個、チョコレートクロワッサン 120 個、', 'クロワッサン 1 個の長さは 6 インチ、']\nnew_fact = infer_new_fact(selected) # '次に、クロワッサンの全長を求めます。 120 ロール * 6 インチ/ロール = 720 インチ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、ロールの全長を求めます。 300 ロール * 4 インチ/ロール = 1200 インチ', '次に、クロワッサンの全長を求めます。 120 ロール * 6 インチ/ロール = 720 インチ']\nnew_fact = infer_new_fact(selected) # '次に、ロールパンとクロワッサンの長さを足して、全長をインチ単位で求めます。 1200 インチ + 720 インチ = 1920 インチ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、ロールパンとクロワッサンの長さを足して、全長をインチ単位で求めます。 1200 インチ + 720 インチ = 1920 インチ']\nnew_fact = infer_new_fact(selected) # '次に、全長を 0.30 メートルあたり 30.48 センチメートルで割って、メートル単位の長さを求めます。 4876.8 センチメートル/30.48 センチメートル/メートル = 160 メートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バゲット 60 個を焼きます。', 'バゲット 1 個の長さは 0.6 メートルです。']\nnew_fact = infer_new_fact(selected) # '次に、バゲットの全長を求めます。 60 個のバゲット * 0.61 メートル/バゲット = 36.58 メートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、全長を 0.30 メートルあたり 30.48 センチメートルで割って、メートル単位の長さを求めます。 4876.8 センチメートル/30.48 センチメートル/メートル = 160 メートル', '次に、バゲットの全長を求めます。 60 個のバゲット * 0.61 メートル/バゲット = 36.58 メートル']\nnew_fact = infer_new_fact(selected) # '次に、他の焼き菓子の長さをメートル単位で加算して、全長を求めます。 36.58 メートル + 48.77 メートル = 85.35 メートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['インチ単位でどれくらいの長さになりますか？', '次に、他の焼き菓子の長さをメートル単位で加算して、全長を求めます。 36.58 メートル + 48.77 メートル = 85.35 メートル']\nnew_fact = infer_new_fact(selected) # 'The answer is 280'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '280'"}
{"id": "GSM8K_156_540db09172", "context": "", "options": [], "answer": "1400", "reasoning_graph_edges": [{"antecedents": [3, 4, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 & sent5 -> int1: The total number of bananas the prime apes need every month is 200+400+100= 700.; int1 & sent2 -> int2: Therefore in 2 months, the total number of bananas they need is 700x2= 1400.; int2 & sent6 -> int3: The answer is 1400;", "textual_logical_units": {"1": "飼育係は動物園のすべての猿に餌を与えます。", "2": "彼はすべてのバナナを 2 か月ごとに地元の農場に注文します。", "3": "サルに 200 本のバナナが必要な場合、", "4": "ゴリラには 400 本のバナナが必要で、", "5": "ヒヒには毎月 100 本のバナナが必要です", "6": "2 か月分では何本のバナナを注文すればいいですか？", "7": "猿が毎月必要とするバナナの総数は、200 + 400 + 100 = 700 本です。", "8": "したがって、2 か月に必要なバナナの総数は 700 x 2 = 1400 になります。", "9": "The answer is 1400"}, "human_translated": true, "code_input": "####\nfacts = ['飼育係は動物園のすべての猿に餌を与えます。', '彼はすべてのバナナを 2 か月ごとに地元の農場に注文します。', 'サルに 200 本のバナナが必要な場合、', 'ゴリラには 400 本のバナナが必要で、', 'ヒヒには毎月 100 本のバナナが必要です']\nquestion = '2 か月分では何本のバナナを注文すればいいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['サルに 200 本のバナナが必要な場合、', 'ゴリラには 400 本のバナナが必要で、', 'ヒヒには毎月 100 本のバナナが必要です']\nnew_fact = infer_new_fact(selected) # '猿が毎月必要とするバナナの総数は、200 + 400 + 100 = 700 本です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はすべてのバナナを 2 か月ごとに地元の農場に注文します。', '猿が毎月必要とするバナナの総数は、200 + 400 + 100 = 700 本です。']\nnew_fact = infer_new_fact(selected) # 'したがって、2 か月に必要なバナナの総数は 700 x 2 = 1400 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 か月分では何本のバナナを注文すればいいですか？', 'したがって、2 か月に必要なバナナの総数は 700 x 2 = 1400 になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 1400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1400'"}
{"id": "GSM8K_157_7e2d012ec1", "context": "", "options": [], "answer": "80", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 2, 4], "consequent": 11}, {"antecedents": [4, 6], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}, {"antecedents": [11, 13], "consequent": 14}, {"antecedents": [10, 14], "consequent": 15}, {"antecedents": [9, 10, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [8, 16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Blake runs 200 yards for each back and forth because 100 x 2 = 200; int1 & sent3 -> int2: He runs 3000 yards in total because 200 x 15 = 3000; sent1 & sent2 & sent4 -> int3: Kelly runs 200 yards at first because 100 x 2 = 200; sent4 & sent6 -> int4: She runs 80 yards each time she does a back and forth to the 40-yard line because 40 x 2 = 80; int4 & sent7 -> int5: She runs 2720 from these back and forth because 34 x 80 = 2720; int3 & int5 -> int6: She runs 2920 in total because 2720 + 200 = 2920; int2 & int6 -> int7: Blake won because 3000 > 2920; int1 & int2 & int3 & int4 & int5 & int6 & int7 -> int8: The winner ran 80 yards more than the loser because 3000 - 2920 = 80; int8 & sent8 -> int9: The answer is 80;", "textual_logical_units": {"1": "ブレイクとケリーは、15 分間で誰が一番走れるかを競うコンテストを開催しています。", "2": "彼らは長さ 100 ヤードのサッカー場でそれを行うことにしました。", "3": "ブレイクは 15 往復を走ります。", "4": "ケリーは 1 往復した後", "5": "ブレイクの隣は走りたくないと思い、", "6": "40 ヤードのラインまで走って戻り始めます。", "7": "彼女はこれを 34 回行います。", "8": "勝者は敗者よりどれだけ遠くまで走りますか？", "9": "100 x 2 = 200 なので、ブレイクは往復でそれぞれ 200 ヤード走ります", "10": "200 x 15 = 3000 なので、彼は合計 3000 ヤード走ります", "11": "100 x 2 = 200 なので、ケリーは最初に 200 ヤード走ります。", "12": "40 x 2 = 80 なので、彼女は 40 ヤードのラインまで往復するたびに 80 ヤード走ります。", "13": "34 x 80 = 2720 なので、彼女は往復で 2720 ヤード走ります。", "14": "2720 + 200 = 2920 なので、彼女は合計 2920 ヤード走ります。", "15": "3000 > 2920 なので、ブレイクが勝ちました", "16": "3000 - 2920 = 80 なので、勝者は敗者より 80 ヤード多く走りました", "17": "The answer is 80"}, "human_translated": true, "code_input": "####\nfacts = [ 'ブレイクとケリーは、15 分間で誰が一番走れるかを競うコンテストを開催しています。',\n  '彼らは長さ 100 ヤードのサッカー場でそれを行うことにしました。',\n  'ブレイクは 15 往復を走ります。',\n  'ケリーは 1 往復した後',\n  'ブレイクの隣は走りたくないと思い、',\n  '40 ヤードのラインまで走って戻り始めます。',\n  '彼女はこれを 34 回行います。']\nquestion = '勝者は敗者よりどれだけ遠くまで走りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼らは長さ 100 ヤードのサッカー場でそれを行うことにしました。', 'ブレイクは 15 往復を走ります。']\nnew_fact = infer_new_fact(selected) # '100 x 2 = 200 なので、ブレイクは往復でそれぞれ 200 ヤード走ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブレイクは 15 往復を走ります。', '100 x 2 = 200 なので、ブレイクは往復でそれぞれ 200 ヤード走ります']\nnew_fact = infer_new_fact(selected) # '200 x 15 = 3000 なので、彼は合計 3000 ヤード走ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブレイクとケリーは、15 分間で誰が一番走れるかを競うコンテストを開催しています。', '彼らは長さ 100 ヤードのサッカー場でそれを行うことにしました。', 'ケリーは 1 往復した後']\nnew_fact = infer_new_fact(selected) # '100 x 2 = 200 なので、ケリーは最初に 200 ヤード走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ケリーは 1 往復した後', '40 ヤードのラインまで走って戻り始めます。']\nnew_fact = infer_new_fact(selected) # '40 x 2 = 80 なので、彼女は 40 ヤードのラインまで往復するたびに 80 ヤード走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はこれを 34 回行います。', '40 x 2 = 80 なので、彼女は 40 ヤードのラインまで往復するたびに 80 ヤード走ります。']\nnew_fact = infer_new_fact(selected) # '34 x 80 = 2720 なので、彼女は往復で 2720 ヤード走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100 x 2 = 200 なので、ケリーは最初に 200 ヤード走ります。', '34 x 80 = 2720 なので、彼女は往復で 2720 ヤード走ります。']\nnew_fact = infer_new_fact(selected) # '2720 + 200 = 2920 なので、彼女は合計 2920 ヤード走ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['200 x 15 = 3000 なので、彼は合計 3000 ヤード走ります', '2720 + 200 = 2920 なので、彼女は合計 2920 ヤード走ります。']\nnew_fact = infer_new_fact(selected) # '3000 > 2920 なので、ブレイクが勝ちました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100 x 2 = 200 なので、ブレイクは往復でそれぞれ 200 ヤード走ります', '200 x 15 = 3000 なので、彼は合計 3000 ヤード走ります', '100 x 2 = 200 なので、ケリーは最初に 200 ヤード走ります。', '40 x 2 = 80 なので、彼女は 40 ヤードのラインまで往復するたびに 80 ヤード走ります。', '34 x 80 = 2720 なので、彼女は往復で 2720 ヤード走ります。', '2720 + 200 = 2920 なので、彼女は合計 2920 ヤード走ります。', '3000 > 2920 なので、ブレイクが勝ちました']\nnew_fact = infer_new_fact(selected) # '3000 - 2920 = 80 なので、勝者は敗者より 80 ヤード多く走りました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['勝者は敗者よりどれだけ遠くまで走りますか？', '3000 - 2920 = 80 なので、勝者は敗者より 80 ヤード多く走りました']\nnew_fact = infer_new_fact(selected) # 'The answer is 80'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '80'"}
{"id": "GSM8K_158_6b10c2a22f", "context": "", "options": [], "answer": "34", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 -> int1: Raphael spent 4 x $1.5 = $6 for the pens.; sent3 -> int2: He also spent 2 x $4 = $8 for the notebooks.; int1 & int2 -> int3: Therefore, Raphael spent a total of $6 + $8 + $20 = $34 for the school supplies.; int3 & sent5 -> int4: The answer is 34;", "textual_logical_units": {"1": "ラファエルは学用品を買いに行きました。", "2": "彼は 1 本 1.5 ドルのペンを 4 本、", "3": "1冊 4 ドルのノートを 2 冊、", "4": "20 ドルのボンド紙を 1 枚買いました。", "5": "ラファエルはすべてにいくら費やしましたか？", "6": "ラファエルはペンに 4 x 1.5ドル = 6ドルを費やしました。", "7": "また、彼はノートブックに 2 x 4 ドル = 8 ドルを費やしました。", "8": "したがって、ラファエルは学用品に合計 6 ドル + 8 ドル + 20 ドル = 34ドルを費やしました。", "9": "The answer is 34"}, "human_translated": true, "code_input": "####\nfacts = ['ラファエルは学用品を買いに行きました。', '彼は 1 本 1.5 ドルのペンを 4 本、', '1冊 4 ドルのノートを 2 冊、', '20 ドルのボンド紙を 1 枚買いました。']\nquestion = 'ラファエルはすべてにいくら費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 1 本 1.5 ドルのペンを 4 本、']\nnew_fact = infer_new_fact(selected) # 'ラファエルはペンに 4 x 1.5ドル = 6ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1冊 4 ドルのノートを 2 冊、']\nnew_fact = infer_new_fact(selected) # 'また、彼はノートブックに 2 x 4 ドル = 8 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラファエルはペンに 4 x 1.5ドル = 6ドルを費やしました。', 'また、彼はノートブックに 2 x 4 ドル = 8 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'したがって、ラファエルは学用品に合計 6 ドル + 8 ドル + 20 ドル = 34ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラファエルはすべてにいくら費やしましたか？', 'したがって、ラファエルは学用品に合計 6 ドル + 8 ドル + 20 ドル = 34ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 34'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '34'"}
{"id": "GSM8K_159_6d9ce7cff5", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When the hidden tadpoles come out, Finn sees 11 + 6 = 17 tadpoles swimming.; int1 & sent2 -> int2: After some of them hide under a rock, he now sees 17 - 2 = 15 tadpoles swimming.; int2 & sent3 -> int3: The answer is 15;", "textual_logical_units": {"1": "フィンは、池で泳ぐ 11 匹のオタマジャクシを見ています。", "2": "突然、6 匹がスイレンの葉の下から出てくるのを見た後、2 匹が岩の下に隠れているのを見ました。", "3": "フィンは今、池で何匹のオタマジャクシを見ることができますか？", "4": "隠れたオタマジャクシが出てくると、フィンは 11 + 6 = 17 匹のオタマジャクシが泳いでいるのを見ます。", "5": "オタマジャクシが何匹か岩の下に隠れた後、17 - 2 = 15 匹のオタマジャクシが泳いでいるのが見えました。", "6": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['フィンは、池で泳ぐ 11 匹のオタマジャクシを見ています。', '突然、6 匹がスイレンの葉の下から出てくるのを見た後、2 匹が岩の下に隠れているのを見ました。']\nquestion = 'フィンは今、池で何匹のオタマジャクシを見ることができますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['フィンは、池で泳ぐ 11 匹のオタマジャクシを見ています。', '突然、6 匹がスイレンの葉の下から出てくるのを見た後、2 匹が岩の下に隠れているのを見ました。']\nnew_fact = infer_new_fact(selected) # '隠れたオタマジャクシが出てくると、フィンは 11 + 6 = 17 匹のオタマジャクシが泳いでいるのを見ます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['突然、6 匹がスイレンの葉の下から出てくるのを見た後、2 匹が岩の下に隠れているのを見ました。', '隠れたオタマジャクシが出てくると、フィンは 11 + 6 = 17 匹のオタマジャクシが泳いでいるのを見ます。']\nnew_fact = infer_new_fact(selected) # 'オタマジャクシが何匹か岩の下に隠れた後、17 - 2 = 15 匹のオタマジャクシが泳いでいるのが見えました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['フィンは今、池で何匹のオタマジャクシを見ることができますか？', 'オタマジャクシが何匹か岩の下に隠れた後、17 - 2 = 15 匹のオタマジャクシが泳いでいるのが見えました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_160_f84b73a55d", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: On Tuesday there was 17+7 = 24 feet of water in the tank.; int1 & sent3 -> int2: 24/3 = 8. On Wednesday there was 2*8 = 16 feet of water in the tank.; int2 & sent4 -> int3: The answer is 16;", "textual_logical_units": {"1": "月曜日の水槽の深さは 5.18 メートルです。", "2": "火曜日には、タンクの水は 2.13 メートル増えていました。", "3": "水曜日の水深は火曜日の 3 分の 2 です。", "4": "水曜日のタンクの水深はどれくらいですか？", "5": "火曜日には、タンクに 5.18 + 2.13 = 7.31 メートルの水が入っていました。", "6": "24/3 = 8。水曜日には、タンクに 0.6 メートル *8 = 4.8 メートルの水が入っていました。", "7": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['月曜日の水槽の深さは 5.18 メートルです。', '火曜日には、タンクの水は 2.13 メートル増えていました。', '水曜日の水深は火曜日の 3 分の 2 です。']\nquestion = '水曜日のタンクの水深はどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['月曜日の水槽の深さは 5.18 メートルです。', '火曜日には、タンクの水は 2.13 メートル増えていました。']\nnew_fact = infer_new_fact(selected) # '火曜日には、タンクに 5.18 + 2.13 = 7.31 メートルの水が入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['水曜日の水深は火曜日の 3 分の 2 です。', '火曜日には、タンクに 5.18 + 2.13 = 7.31 メートルの水が入っていました。']\nnew_fact = infer_new_fact(selected) # '24/3 = 8。水曜日には、タンクに 0.6 メートル *8 = 4.8 メートルの水が入っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['水曜日のタンクの水深はどれくらいですか？', '24/3 = 8。水曜日には、タンクに 0.6 メートル *8 = 4.8 メートルの水が入っていました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_161_220629edef", "context": "", "options": [], "answer": "32", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [2, 4], "consequent": 9}, {"antecedents": [2, 4, 9], "consequent": 10}, {"antecedents": [2, 5], "consequent": 11}, {"antecedents": [2, 5, 11], "consequent": 12}, {"antecedents": [8, 10, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Locsin caught 10 - 5 = 5 starfishes.; int1 & sent2 -> int2: They caught 10 + 5 = 15 starfishes.; sent2 & sent4 -> int3: Locsin caught 6 - 3 = 3 seahorses; int3 & sent2 & sent4 -> int4: They caught 6 + 3 = 9 seahorses; sent2 & sent5 -> int5: Locsin caught 3 + 2 = 5 clownfish.; int5 & sent2 & sent5 -> int6: So, they caught 3 + 5 = 8 clownfish.; int2 & int4 & int6 -> int7: Therefore, Anakin and Locsin were able to catch a total of 15 + 9 + 8 = 32 fish.; int7 & sent6 -> int8: The answer is 32;", "textual_logical_units": {"1": "アナキンとロクシンは今日ビーチに行きました。", "2": "アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。", "3": "ロクシンはアナキンより 5 匹少ないヒトデ、", "4": "アナキンより 3 匹少ないタツノオトシゴ、", "5": "アナキンより 2 匹多いカクレクマノミを捕まえました。", "6": "彼らは何匹の魚を捕まえることができましたか？", "7": "ロクシンは 10 - 5 = 5 匹のヒトデを捕まえました。", "8": "彼らは10 + 5 = 15匹のヒトデを捕まえました。", "9": "ロクシンは 6 - 3 = 3 匹のタツノオトシゴを捕まえました", "10": "彼らは 6 + 3 = 9 匹のタツノオトシゴを捕まえました", "11": "ロクシンは 3  +2 = 5 匹のカクレクマノミを捕まえました。", "12": "つまり、彼らは 3 + 5 = 8 匹のカクレクマノミを捕まえました。", "13": "したがって、アナキンとロクシンは合計 15 + 9 + 8 = 32 匹の魚を捕まえることができました。", "14": "The answer is 32"}, "human_translated": true, "code_input": "####\nfacts = ['アナキンとロクシンは今日ビーチに行きました。', 'アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'ロクシンはアナキンより 5 匹少ないヒトデ、', 'アナキンより 3 匹少ないタツノオトシゴ、', 'アナキンより 2 匹多いカクレクマノミを捕まえました。']\nquestion = '彼らは何匹の魚を捕まえることができましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'ロクシンはアナキンより 5 匹少ないヒトデ、']\nnew_fact = infer_new_fact(selected) # 'ロクシンは 10 - 5 = 5 匹のヒトデを捕まえました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'ロクシンは 10 - 5 = 5 匹のヒトデを捕まえました。']\nnew_fact = infer_new_fact(selected) # '彼らは10 + 5 = 15匹のヒトデを捕まえました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'アナキンより 3 匹少ないタツノオトシゴ、']\nnew_fact = infer_new_fact(selected) # 'ロクシンは 6 - 3 = 3 匹のタツノオトシゴを捕まえました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'アナキンより 3 匹少ないタツノオトシゴ、', 'ロクシンは 6 - 3 = 3 匹のタツノオトシゴを捕まえました']\nnew_fact = infer_new_fact(selected) # '彼らは 6 + 3 = 9 匹のタツノオトシゴを捕まえました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'アナキンより 2 匹多いカクレクマノミを捕まえました。']\nnew_fact = infer_new_fact(selected) # 'ロクシンは 3  +2 = 5 匹のカクレクマノミを捕まえました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アナキンはヒトデを 10 匹、タツノオトシゴを 6 頭、カクレクマノミを 3 匹捕まえました。', 'アナキンより 2 匹多いカクレクマノミを捕まえました。', 'ロクシンは 3  +2 = 5 匹のカクレクマノミを捕まえました。']\nnew_fact = infer_new_fact(selected) # 'つまり、彼らは 3 + 5 = 8 匹のカクレクマノミを捕まえました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らは10 + 5 = 15匹のヒトデを捕まえました。', '彼らは 6 + 3 = 9 匹のタツノオトシゴを捕まえました', 'つまり、彼らは 3 + 5 = 8 匹のカクレクマノミを捕まえました。']\nnew_fact = infer_new_fact(selected) # 'したがって、アナキンとロクシンは合計 15 + 9 + 8 = 32 匹の魚を捕まえることができました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らは何匹の魚を捕まえることができましたか？', 'したがって、アナキンとロクシンは合計 15 + 9 + 8 = 32 匹の魚を捕まえることができました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 32'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '32'"}
{"id": "GSM8K_162_d76189ada6", "context": "", "options": [], "answer": "92", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [1, 3, 6], "consequent": 7}, {"antecedents": [1, 2, 3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: When the price of the bag of marble increase by 20%, the price increases by 20/100*20 = $4; int1 & sent3 -> int2: If the price increases after every two months, in 36 months, it will increase 36/2 = 18 times.; int1 & int2 -> int3: If each increase is $4, the total amount the price of the bag of marbles will have increased by after 36 months is 18*$4 = $72; int3 & sent1 & sent3 -> int4: After the total increase of the price of the bag of marbles after 36 months, the total cost will be $20+$72 = $92; int4 & sent1 & sent2 & sent3 -> int5: The answer is 92;", "textual_logical_units": {"1": "ビー玉 1 袋の価格が 20 ドルで、", "2": "2 か月ごとに元の価格の 20% ずつ値上がりした場合、", "3": "36 か月後にビー玉 1 袋の価格はいくらになりますか？", "4": "ビー玉の袋の価格が 20% 上昇すると、価格は 20/100 * 20 = 4 ドル上昇します", "5": "価格が 2 か月ごとに上昇した場合、36 か月では 36/2 = 18 回上昇します。", "6": "1 回の値上げが 4 ドルの場合、36 か月後にビー玉の袋の価格が上昇する合計金額は 18 * 4 ドル = 72ドルです", "7": "36 か月後にビー玉の袋の価格が上昇した後の合計費用は、20 ドル + 72 ドル = 92 ドルになります", "8": "The answer is 92"}, "human_translated": true, "code_input": "####\nfacts = ['ビー玉 1 袋の価格が 20 ドルで、', '2 か月ごとに元の価格の 20% ずつ値上がりした場合、']\nquestion = '36 か月後にビー玉 1 袋の価格はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ビー玉 1 袋の価格が 20 ドルで、', '2 か月ごとに元の価格の 20% ずつ値上がりした場合、']\nnew_fact = infer_new_fact(selected) # 'ビー玉の袋の価格が 20% 上昇すると、価格は 20/100 * 20 = 4 ドル上昇します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36 か月後にビー玉 1 袋の価格はいくらになりますか？', 'ビー玉の袋の価格が 20% 上昇すると、価格は 20/100 * 20 = 4 ドル上昇します']\nnew_fact = infer_new_fact(selected) # '価格が 2 か月ごとに上昇した場合、36 か月では 36/2 = 18 回上昇します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビー玉の袋の価格が 20% 上昇すると、価格は 20/100 * 20 = 4 ドル上昇します', '価格が 2 か月ごとに上昇した場合、36 か月では 36/2 = 18 回上昇します。']\nnew_fact = infer_new_fact(selected) # '1 回の値上げが 4 ドルの場合、36 か月後にビー玉の袋の価格が上昇する合計金額は 18 * 4 ドル = 72ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビー玉 1 袋の価格が 20 ドルで、', '36 か月後にビー玉 1 袋の価格はいくらになりますか？', '1 回の値上げが 4 ドルの場合、36 か月後にビー玉の袋の価格が上昇する合計金額は 18 * 4 ドル = 72ドルです']\nnew_fact = infer_new_fact(selected) # '36 か月後にビー玉の袋の価格が上昇した後の合計費用は、20 ドル + 72 ドル = 92 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビー玉 1 袋の価格が 20 ドルで、', '2 か月ごとに元の価格の 20% ずつ値上がりした場合、', '36 か月後にビー玉 1 袋の価格はいくらになりますか？', '36 か月後にビー玉の袋の価格が上昇した後の合計費用は、20 ドル + 72 ドル = 92 ドルになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 92'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '92'"}
{"id": "GSM8K_163_3e869f023b", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent5 -> int1: Three actions figures are worth 3 * 5 = $15, as much as the doll.; sent1 & sent3 -> int2: The red cars are worth 5 * 4 = $20.; int1 & int2 -> int3: So all toys are worth 20 + 15 + 15 = $50.; int3 & sent4 & sent5 -> int4: The answer is 50;", "textual_logical_units": {"1": "部屋には様々なおもちゃがあります。 赤い車が 5 つ、アクションフィギュアが 3 つ、人形 1 つです。", "2": "人形の値段はアクションフィギュア 3 個分で", "3": "赤い車は 1 つ 4 ドルです。", "4": "アクションフィギュアの値段を 5 ドルとすると、", "5": "すべてのおもちゃの値段はいくらですか？", "6": "3 つのアクションフィギュアの値段は、人形と同じ 3 x 5 = 15 ドルです。", "7": "赤い車の値段は 5 x 4 = 20 ドルです。", "8": "つまり、すべてのおもちゃの値段は 20 + 15 + 15 = 50 ドルです。", "9": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = ['部屋には様々なおもちゃがあります。 赤い車が 5 つ、アクションフィギュアが 3 つ、人形 1 つです。', '人形の値段はアクションフィギュア 3 個分で', '赤い車は 1 つ 4 ドルです。', 'アクションフィギュアの値段を 5 ドルとすると、']\nquestion = 'すべてのおもちゃの値段はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['部屋には様々なおもちゃがあります。 赤い車が 5 つ、アクションフィギュアが 3 つ、人形 1 つです。', 'すべてのおもちゃの値段はいくらですか？']\nnew_fact = infer_new_fact(selected) # '3 つのアクションフィギュアの値段は、人形と同じ 3 x 5 = 15 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['部屋には様々なおもちゃがあります。 赤い車が 5 つ、アクションフィギュアが 3 つ、人形 1 つです。', '赤い車は 1 つ 4 ドルです。']\nnew_fact = infer_new_fact(selected) # '赤い車の値段は 5 x 4 = 20 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 つのアクションフィギュアの値段は、人形と同じ 3 x 5 = 15 ドルです。', '赤い車の値段は 5 x 4 = 20 ドルです。']\nnew_fact = infer_new_fact(selected) # 'つまり、すべてのおもちゃの値段は 20 + 15 + 15 = 50 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アクションフィギュアの値段を 5 ドルとすると、', 'すべてのおもちゃの値段はいくらですか？', 'つまり、すべてのおもちゃの値段は 20 + 15 + 15 = 50 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_164_c283728116", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [6, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: First find the total lost revenue if Jackie does her taxes herself: $35/hour * 3 hours = $105; int1 & sent5 -> int2: Then subtract the accountant's charge to find how much money Janet saves: $105 - $90 = $15; int2 & sent6 -> int3: The answer is 15;", "textual_logical_units": {"1": "ジャッキーは税金を自分で払うか、会計士を雇うかを決めようとしています。", "2": "彼女が自分で税金を払えば、", "3": "フリーランスの仕事が 3 時間減り、", "4": "1 時間あたり 35 ドルの収入を失います。", "5": "会計士は 90 ドルを請求します。", "6": "彼女が会計士を雇った場合、どれくらいのお金が手に入りますか。", "7": "まず、ジャッキーが自分で税金を支払う場合の損失額の合計を求めます。1 時間あたり 35 ドル * 3 時間 = 105 ドルです。", "8": "次に、会計士の費用を差し引いて、ジャネットがどれだけのお金を節約できるかを求めます。105 ドル - 90 ドル = 15 ドルです。", "9": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['ジャッキーは税金を自分で払うか、会計士を雇うかを決めようとしています。', '彼女が自分で税金を払えば、', 'フリーランスの仕事が 3 時間減り、', '1 時間あたり 35 ドルの収入を失います。', '会計士は 90 ドルを請求します。']\nquestion = '彼女が会計士を雇った場合、どれくらいのお金が手に入りますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['フリーランスの仕事が 3 時間減り、', '1 時間あたり 35 ドルの収入を失います。']\nnew_fact = infer_new_fact(selected) # 'まず、ジャッキーが自分で税金を支払う場合の損失額の合計を求めます。1 時間あたり 35 ドル * 3 時間 = 105 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['会計士は 90 ドルを請求します。', 'まず、ジャッキーが自分で税金を支払う場合の損失額の合計を求めます。1 時間あたり 35 ドル * 3 時間 = 105 ドルです。']\nnew_fact = infer_new_fact(selected) # '次に、会計士の費用を差し引いて、ジャネットがどれだけのお金を節約できるかを求めます。105 ドル - 90 ドル = 15 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が会計士を雇った場合、どれくらいのお金が手に入りますか。', '次に、会計士の費用を差し引いて、ジャネットがどれだけのお金を節約できるかを求めます。105 ドル - 90 ドル = 15 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_165_4e0bf82a17", "context": "", "options": [], "answer": "77", "reasoning_graph_edges": [{"antecedents": [5, 6, 7], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent5 & sent6 & sent7 -> int1: First, let’s look at the total cost of computer equipment: 1090 + 157 + 74 + 102 = 1423 euros; int1 & sent2 -> int2: Let us now calculate what is left for the garment: 1500 - 1423 = 77 euros; int2 & sent8 -> int3: The answer is 77;", "textual_logical_units": {"1": "エルビラは、30歳の誕生日に、多くのアクセサリを備えた新しいコンピューターを贈り物として選びました。", "2": "彼女の予算は家族全員から贈られた 1500 ユーロで、", "3": "彼女は服を買うためのお金を少し残せると思っています。", "4": "彼女はパソコンショップに行って", "5": "スクリーン、キーボード、マウスを備えた 1090 ユーロのマシンを選択します。", "6": "彼女は、157 ユーロのスキャナー、", "7": "74 ユーロの CD ライター、102 ユーロのプリンターも購入しました。", "8": "彼女には服を買うためのお金がどれくらい残っていますか？", "9": "まず、コンピューター機器の総コストを見てみましょう。 1090 + 157 + 74 + 102 = 1423 ユーロ", "10": "次に、服のためいくらに残っているかを計算してみましょう。 1500 - 1423 = 77 ユーロ", "11": "The answer is 77"}, "human_translated": true, "code_input": "####\nfacts = [ 'エルビラは、30歳の誕生日に、多くのアクセサリを備えた新しいコンピューターを贈り物として選びました。',\n  '彼女の予算は家族全員から贈られた 1500 ユーロで、',\n  '彼女は服を買うためのお金を少し残せると思っています。',\n  '彼女はパソコンショップに行って',\n  'スクリーン、キーボード、マウスを備えた 1090 ユーロのマシンを選択します。',\n  '彼女は、157 ユーロのスキャナー、',\n  '74 ユーロの CD ライター、102 ユーロのプリンターも購入しました。']\nquestion = '彼女には服を買うためのお金がどれくらい残っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スクリーン、キーボード、マウスを備えた 1090 ユーロのマシンを選択します。', '彼女は、157 ユーロのスキャナー、', '74 ユーロの CD ライター、102 ユーロのプリンターも購入しました。']\nnew_fact = infer_new_fact(selected) # 'まず、コンピューター機器の総コストを見てみましょう。 1090 + 157 + 74 + 102 = 1423 ユーロ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の予算は家族全員から贈られた 1500 ユーロで、', 'まず、コンピューター機器の総コストを見てみましょう。 1090 + 157 + 74 + 102 = 1423 ユーロ']\nnew_fact = infer_new_fact(selected) # '次に、服のためいくらに残っているかを計算してみましょう。 1500 - 1423 = 77 ユーロ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女には服を買うためのお金がどれくらい残っていますか？', '次に、服のためいくらに残っているかを計算してみましょう。 1500 - 1423 = 77 ユーロ']\nnew_fact = infer_new_fact(selected) # 'The answer is 77'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '77'"}
{"id": "GSM8K_166_86924c2578", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Sandra needs a total of 15 x 3 = 45 eggs.; int1 & sent1 -> int2: She will have to babysit 45/9 = 5 times.; int2 & sent3 & sent4 -> int3: The answer is 5;", "textual_logical_units": {"1": "サンドラの隣人は、彼女が娘を子守りするたびに 9 個の卵が入ったバスケットを彼女に渡します。", "2": "スパニッシュフランを作るには、卵が 3 個必要です。", "3": "サンドラが学校の募金活動のためにスパニッシュフランを 15 個作るように言われた場合、", "4": "サンドラは何回子守りをする必要がありますか？", "5": "サンドラには合計 15 x 3 = 45 個の卵が必要です。", "6": "彼女は 45/9 = 5 回ベビーシッターをしなければならないでしょう。", "7": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['サンドラの隣人は、彼女が娘を子守りするたびに 9 個の卵が入ったバスケットを彼女に渡します。', 'スパニッシュフランを作るには、卵が 3 個必要です。', 'サンドラが学校の募金活動のためにスパニッシュフランを 15 個作るように言われた場合、']\nquestion = 'サンドラは何回子守りをする必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スパニッシュフランを作るには、卵が 3 個必要です。', 'サンドラが学校の募金活動のためにスパニッシュフランを 15 個作るように言われた場合、']\nnew_fact = infer_new_fact(selected) # 'サンドラには合計 15 x 3 = 45 個の卵が必要です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サンドラの隣人は、彼女が娘を子守りするたびに 9 個の卵が入ったバスケットを彼女に渡します。', 'サンドラには合計 15 x 3 = 45 個の卵が必要です。']\nnew_fact = infer_new_fact(selected) # '彼女は 45/9 = 5 回ベビーシッターをしなければならないでしょう。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サンドラが学校の募金活動のためにスパニッシュフランを 15 個作るように言われた場合、', 'サンドラは何回子守りをする必要がありますか？', '彼女は 45/9 = 5 回ベビーシッターをしなければならないでしょう。']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_167_d0c863e677", "context": "", "options": [], "answer": "16", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [4, 5, 6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: To solve this problem, we can set up an equation where x represents Brooke’s age and 2x represents Seth’s age and noting that in two years, the sum of their ages is (2x + 2) + (x + 2) = 28.; int1 -> int2: Then we add all the values together, 3x + 4 = 28.; int1 & int2 -> int3: And we subtract 4 from each side, 3x +4 - 4 = 28 – 4.; int1 & int2 & int3 -> int4: Then we divide each side by 3x/3 = 24/3.; int4 -> int5: We find that x = 8, or Brooke’s age is 8.; int1 & int5 -> int6: Seth is twice as old as Brooke, so Seth is 8 x 2 = 16.; int6 & sent3 -> int7: The answer is 16;", "textual_logical_units": {"1": "セスはブルックの 2 倍の年齢です。", "2": "2 年後には、彼らの年齢の合計は 28 歳になります。", "3": "セスは何歳ですか。", "4": "この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。", "5": "次に、3x + 4 = 28 ですべての値を合計します。", "6": "そして、各辺から 4 を引きます。3x + 4 - 4 = 28 - 4です。", "7": "次に、各辺を 3x/3 = 24/3 で割ります。", "8": "x = 8、つまりブルックの年齢は 8 歳であることがわかります。", "9": "セスはブルックの 2 倍の年齢なので、セスは 8 x 2 = 16 歳です。", "10": "The answer is 16"}, "human_translated": true, "code_input": "####\nfacts = ['セスはブルックの 2 倍の年齢です。', '2 年後には、彼らの年齢の合計は 28 歳になります。']\nquestion = 'セスは何歳ですか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['セスはブルックの 2 倍の年齢です。', '2 年後には、彼らの年齢の合計は 28 歳になります。']\nnew_fact = infer_new_fact(selected) # 'この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。']\nnew_fact = infer_new_fact(selected) # '次に、3x + 4 = 28 ですべての値を合計します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。', '次に、3x + 4 = 28 ですべての値を合計します。']\nnew_fact = infer_new_fact(selected) # 'そして、各辺から 4 を引きます。3x + 4 - 4 = 28 - 4です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。', '次に、3x + 4 = 28 ですべての値を合計します。', 'そして、各辺から 4 を引きます。3x + 4 - 4 = 28 - 4です。']\nnew_fact = infer_new_fact(selected) # '次に、各辺を 3x/3 = 24/3 で割ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、各辺を 3x/3 = 24/3 で割ります。']\nnew_fact = infer_new_fact(selected) # 'x = 8、つまりブルックの年齢は 8 歳であることがわかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この問題を解くには、x がブルックの年齢を表し、2x がセスの年齢を表し、2 年間の年齢の合計が (2x + 2) + (x + 2) = 28 になることに注目してください。', 'x = 8、つまりブルックの年齢は 8 歳であることがわかります。']\nnew_fact = infer_new_fact(selected) # 'セスはブルックの 2 倍の年齢なので、セスは 8 x 2 = 16 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['セスは何歳ですか。', 'セスはブルックの 2 倍の年齢なので、セスは 8 x 2 = 16 歳です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 16'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '16'"}
{"id": "GSM8K_168_cd681f8c28", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The total amount of money jimmy has 2*$8 = $16 more than Ethel.; int1 & sent1 -> int2: If Jimmy has $2 more than twice the money Ethel has, he has 2+16 = $18; int2 & sent2 -> int3: The answer is 18;", "textual_logical_units": {"1": "ジミーは、エセルが持っている金額の2倍以上の2ドルを持っています。", "2": "エセルが 8 ドル持っているとしたら、ジミーはどれくらいのお金を持っていますか？", "3": "ジミーの合計金額は、エセルより 2 * 8 ドル = 16 ドル多くなります。", "4": "ジミーがエセルが持っている金額の 2 倍以上の 2 ドルを持っている場合、彼は 2 + 16 = 18 ドル持っていることになります", "5": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['ジミーは、エセルが持っている金額の2倍以上の2ドルを持っています。']\nquestion = 'エセルが 8 ドル持っているとしたら、ジミーはどれくらいのお金を持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジミーは、エセルが持っている金額の2倍以上の2ドルを持っています。', 'エセルが 8 ドル持っているとしたら、ジミーはどれくらいのお金を持っていますか？']\nnew_fact = infer_new_fact(selected) # 'ジミーの合計金額は、エセルより 2 * 8 ドル = 16 ドル多くなります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジミーは、エセルが持っている金額の2倍以上の2ドルを持っています。', 'ジミーの合計金額は、エセルより 2 * 8 ドル = 16 ドル多くなります。']\nnew_fact = infer_new_fact(selected) # 'ジミーがエセルが持っている金額の 2 倍以上の 2 ドルを持っている場合、彼は 2 + 16 = 18 ドル持っていることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エセルが 8 ドル持っているとしたら、ジミーはどれくらいのお金を持っていますか？', 'ジミーがエセルが持っている金額の 2 倍以上の 2 ドルを持っている場合、彼は 2 + 16 = 18 ドル持っていることになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_169_d5adfb3479", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2], "consequent": 5}, {"antecedents": [4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He walks 100 miles during the weekdays because 5 x 20 = 100; sent2 -> int2: He walks 20 miles on the weekend because 2 x 10 = 20; int1 & int2 -> int3: He walks 120 miles total because 100 + 20 = 120; int3 & sent3 -> int4: The answer is 120;", "textual_logical_units": {"1": "パンチョは 1 日 32.18 キロメートル歩きます。", "2": "彼は週末には 16.09 キロメートル歩きます。", "3": "彼は 1 週間に何キロメートル歩きますか。", "4": "5 x 32.18 = 160.93 なので、彼は平日に 160.93 キロメートル歩きます。", "5": "2 x 16.09 = 32.18 なので、彼は週末に 32.18 キロメートル歩きます。", "6": "160.93 + 32.18 = 193.11 なので、彼は合計 193.11 キロメートル歩きます。", "7": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['パンチョは 1 日 32.18 キロメートル歩きます。', '彼は週末には 16.09 キロメートル歩きます。']\nquestion = '彼は 1 週間に何キロメートル歩きますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['パンチョは 1 日 32.18 キロメートル歩きます。', '彼は週末には 16.09 キロメートル歩きます。']\nnew_fact = infer_new_fact(selected) # '5 x 32.18 = 160.93 なので、彼は平日に 160.93 キロメートル歩きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は週末には 16.09 キロメートル歩きます。']\nnew_fact = infer_new_fact(selected) # '2 x 16.09 = 32.18 なので、彼は週末に 32.18 キロメートル歩きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 x 32.18 = 160.93 なので、彼は平日に 160.93 キロメートル歩きます。', '2 x 16.09 = 32.18 なので、彼は週末に 32.18 キロメートル歩きます。']\nnew_fact = infer_new_fact(selected) # '160.93 + 32.18 = 193.11 なので、彼は合計 193.11 キロメートル歩きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 週間に何キロメートル歩きますか。', '160.93 + 32.18 = 193.11 なので、彼は合計 193.11 キロメートル歩きます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_170_31ba335544", "context": "", "options": [], "answer": "150", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: First find the cost of the jacket: $25 * 3 = $75; int1 & sent2 -> int2: Then add the cost of the jacket and hat: $25 + $75 = $100; int2 & sent4 -> int3: Then divide that amount by 2 to find the average cost, which is the cost of the pants: $100 / 2 = $50; int2 & int3 -> int4: Then add the cost of each item of clothing to find the total cost of the uniform: $25 + $75 + $50 = $150; int4 & sent5 -> int5: The answer is 150;", "textual_logical_units": {"1": "マーチングバンドは新しいユニフォームを注文しています。", "2": "ユニフォーム 1 着には 25 ドルの帽子、", "3": "帽子の 3 倍の価格のジャケット、", "4": "帽子とジャケットの平均の価格のパンツが付いています。", "5": "ユニフォーム 1 着の合計費用はいくらですか？", "6": "まず、ジャケットの価格を求めます。25 ドル* 3 = 75 ドル", "7": "次に、ジャケットと帽子の価格を加算します。25 ドル+ 75 ドル = 100 ドル", "8": "次に、その金額を 2 で割って、平均の価格、つまりズボンの価格を求めます。100 ドル/ 2 = 50 ドル", "9": "次に、各衣料品の価格を合計して、ユニフォームの総費用を求めます。25 ドル + 75 ドル + 50 ドル = 150 ドル", "10": "The answer is 150"}, "human_translated": true, "code_input": "####\nfacts = ['マーチングバンドは新しいユニフォームを注文しています。', 'ユニフォーム 1 着には 25 ドルの帽子、', '帽子の 3 倍の価格のジャケット、', '帽子とジャケットの平均の価格のパンツが付いています。']\nquestion = 'ユニフォーム 1 着の合計費用はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ユニフォーム 1 着には 25 ドルの帽子、', '帽子の 3 倍の価格のジャケット、']\nnew_fact = infer_new_fact(selected) # 'まず、ジャケットの価格を求めます。25 ドル* 3 = 75 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ユニフォーム 1 着には 25 ドルの帽子、', 'まず、ジャケットの価格を求めます。25 ドル* 3 = 75 ドル']\nnew_fact = infer_new_fact(selected) # '次に、ジャケットと帽子の価格を加算します。25 ドル+ 75 ドル = 100 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['帽子とジャケットの平均の価格のパンツが付いています。', '次に、ジャケットと帽子の価格を加算します。25 ドル+ 75 ドル = 100 ドル']\nnew_fact = infer_new_fact(selected) # '次に、その金額を 2 で割って、平均の価格、つまりズボンの価格を求めます。100 ドル/ 2 = 50 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、ジャケットと帽子の価格を加算します。25 ドル+ 75 ドル = 100 ドル', '次に、その金額を 2 で割って、平均の価格、つまりズボンの価格を求めます。100 ドル/ 2 = 50 ドル']\nnew_fact = infer_new_fact(selected) # '次に、各衣料品の価格を合計して、ユニフォームの総費用を求めます。25 ドル + 75 ドル + 50 ドル = 150 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ユニフォーム 1 着の合計費用はいくらですか？', '次に、各衣料品の価格を合計して、ユニフォームの総費用を求めます。25 ドル + 75 ドル + 50 ドル = 150 ドル']\nnew_fact = infer_new_fact(selected) # 'The answer is 150'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '150'"}
{"id": "GSM8K_171_18a1aadbe4", "context": "", "options": [], "answer": "1210", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [4], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 -> int1: First find the total number of spider legs: 80 spiders * 8 legs/spider = 640 legs; sent3 -> int2: Then find the total number of insect legs: 90 spiders * 6 legs/spider = 540 legs; sent4 -> int3: Then find the total number of mutant invertebrate legs: 3 mutants * 10 legs/mutant = 30 legs; int1 & int2 & int3 -> int4: Then add the number of each kind of leg to find the total he saw: 640 legs + 540 legs + 30 legs = 1210 legs; int4 & sent5 -> int5: The answer is 1210;", "textual_logical_units": {"1": "ジェイクは昆虫博物館を歩いています。", "2": "彼は、それぞれ 8 本の足を持つ 80 匹のクモ、", "3": "それぞれ 6 本の足を持つ 90 匹の昆虫、", "4": "それぞれ 10 本の足を持つ 3 匹の珍しい突然変異型無脊椎動物を見ています。", "5": "ジェイクには全部で何本の足が見えていますか？", "6": "まず、クモの足の総数を求めます。 80 匹のクモ * 8 本の足/クモ = 640 本の足", "7": "次に、昆虫の足の総数を求めます。 90 匹のクモ * 6 本の脚/クモ = 540 本の足", "8": "次に、突然変異型無脊椎動物の足の総数を求めます。 突然変異型 3 体 * 10 本の足/突然変異型 = 30 本の足", "9": "次に、各種生物の足の数を足して、彼が見た合計を求めます。 640 本の足 + 540 本の足 + 30 本の足 = 1210 本の足", "10": "The answer is 1210"}, "human_translated": true, "code_input": "####\nfacts = ['ジェイクは昆虫博物館を歩いています。', '彼は、それぞれ 8 本の足を持つ 80 匹のクモ、', 'それぞれ 6 本の足を持つ 90 匹の昆虫、', 'それぞれ 10 本の足を持つ 3 匹の珍しい突然変異型無脊椎動物を見ています。']\nquestion = 'ジェイクには全部で何本の足が見えていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は、それぞれ 8 本の足を持つ 80 匹のクモ、']\nnew_fact = infer_new_fact(selected) # 'まず、クモの足の総数を求めます。 80 匹のクモ * 8 本の足/クモ = 640 本の足'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれ 6 本の足を持つ 90 匹の昆虫、']\nnew_fact = infer_new_fact(selected) # '次に、昆虫の足の総数を求めます。 90 匹のクモ * 6 本の脚/クモ = 540 本の足'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それぞれ 10 本の足を持つ 3 匹の珍しい突然変異型無脊椎動物を見ています。']\nnew_fact = infer_new_fact(selected) # '次に、突然変異型無脊椎動物の足の総数を求めます。 突然変異型 3 体 * 10 本の足/突然変異型 = 30 本の足'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、クモの足の総数を求めます。 80 匹のクモ * 8 本の足/クモ = 640 本の足', '次に、昆虫の足の総数を求めます。 90 匹のクモ * 6 本の脚/クモ = 540 本の足', '次に、突然変異型無脊椎動物の足の総数を求めます。 突然変異型 3 体 * 10 本の足/突然変異型 = 30 本の足']\nnew_fact = infer_new_fact(selected) # '次に、各種生物の足の数を足して、彼が見た合計を求めます。 640 本の足 + 540 本の足 + 30 本の足 = 1210 本の足'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェイクには全部で何本の足が見えていますか？', '次に、各種生物の足の数を足して、彼が見た合計を求めます。 640 本の足 + 540 本の足 + 30 本の足 = 1210 本の足']\nnew_fact = infer_new_fact(selected) # 'The answer is 1210'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1210'"}
{"id": "GSM8K_172_62220e1b28", "context": "", "options": [], "answer": "51", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [2, 8], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: If Sally Thirtytwo is 8 years old, same as Sally four, their total age 8+8 = 16 years.; int1 & sent3 -> int2: Granny red is two times as old as Sally four, meaning Granny red is 2*8 = 16 years old.; sent0 -> int3: Sally Thirtytwo, Sally four, and Sally red are 16+16 = 32 years old.; int2 & sent2 -> int4: Sally two is three years older than Granny red, meaning Sally two is 16+3= 19 years old.; int3 & int4 -> int5: The four birds have a total age of 32+19 = 51 years old.; int5 & sent6 -> int6: The answer is 51;", "textual_logical_units": {"1": "車掌車には 4 羽の鳥がいます。", "2": "サリー・ツーはグラニー・レッドより 3 歳年上です。", "3": "グラニー・レッドはサリー・フォーの 2 倍の年齢です。", "4": "サリー・フォーがサリー・サーティツーと同じ年齢で、", "5": "サリー・サーティツーが 8 歳だとすると、", "6": "4 羽の鳥の合計年齢は何歳ですか？", "7": "サリー・サーティツーがサリー・フォーと同じ 8 歳の場合、合計年齢は 8 + 8 = 16 歳です。", "8": "グラニーレッドはサリーフォーの 2 倍の年齢です。つまり、グラニーレッドは 2 * 8 = 16 歳です。", "9": "サリー・サーティツー、サリー・フォー、サリー・レッドは 16 + 16 = 32 歳です。", "10": "サリー・ツーはグラニー・レッドより 3 歳年上です。つまり、サリー・ツーは 16 + 3 = 19 歳です。", "11": "4 羽の鳥の合計年齢は 32 + 19 = 51 歳です。", "12": "The answer is 51"}, "human_translated": true, "code_input": "####\nfacts = ['車掌車には 4 羽の鳥がいます。', 'サリー・ツーはグラニー・レッドより 3 歳年上です。', 'グラニー・レッドはサリー・フォーの 2 倍の年齢です。', 'サリー・フォーがサリー・サーティツーと同じ年齢で、', 'サリー・サーティツーが 8 歳だとすると、']\nquestion = '4 羽の鳥の合計年齢は何歳ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['サリー・フォーがサリー・サーティツーと同じ年齢で、', 'サリー・サーティツーが 8 歳だとすると、']\nnew_fact = infer_new_fact(selected) # 'サリー・サーティツーがサリー・フォーと同じ 8 歳の場合、合計年齢は 8 + 8 = 16 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グラニー・レッドはサリー・フォーの 2 倍の年齢です。', 'サリー・サーティツーがサリー・フォーと同じ 8 歳の場合、合計年齢は 8 + 8 = 16 歳です。']\nnew_fact = infer_new_fact(selected) # 'グラニーレッドはサリーフォーの 2 倍の年齢です。つまり、グラニーレッドは 2 * 8 = 16 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'サリー・サーティツー、サリー・フォー、サリー・レッドは 16 + 16 = 32 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サリー・ツーはグラニー・レッドより 3 歳年上です。', 'グラニーレッドはサリーフォーの 2 倍の年齢です。つまり、グラニーレッドは 2 * 8 = 16 歳です。']\nnew_fact = infer_new_fact(selected) # 'サリー・ツーはグラニー・レッドより 3 歳年上です。つまり、サリー・ツーは 16 + 3 = 19 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サリー・サーティツー、サリー・フォー、サリー・レッドは 16 + 16 = 32 歳です。', 'サリー・ツーはグラニー・レッドより 3 歳年上です。つまり、サリー・ツーは 16 + 3 = 19 歳です。']\nnew_fact = infer_new_fact(selected) # '4 羽の鳥の合計年齢は 32 + 19 = 51 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4 羽の鳥の合計年齢は何歳ですか？', '4 羽の鳥の合計年齢は 32 + 19 = 51 歳です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 51'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '51'"}
{"id": "GSM8K_173_6554d106fe", "context": "", "options": [], "answer": "18000", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: First find the total minimum payment each month: $300/month + $200/month + $500/month = $1000/month; int1 & sent5 -> int2: Then multiply that number by 50% to find how much extra Jessica pays each month: $1000/month * .5 = $500/month; int1 & int2 -> int3: Add that number to the total minimum payment to find how much Jessica pays per month: $1000/month + $500/month = $1500/month; int3 & sent6 -> int4: Now multiply that number by the number of months in a year to find Jessica's annual payment: $1500/month * 12 months/year = $18,000/year; int4 & sent5 & sent6 -> int5: The answer is 18000;", "textual_logical_units": {"1": "ジェシカは毎月の借金をいくら返済すべきかを考えています。", "2": "彼女の学生ローンの最低支払い額は月額 300 ドル、", "3": "クレジットカードの最低額は月額 200 ドル、", "4": "住宅ローンの最低額は月額 500 ドルです。", "5": "ジェシカが最低額より 50% 高い金額を支払いたい場合、", "6": "彼女は一年にいくら払いますか？", "7": "まず、毎月の最低支払い額の合計を求めます。月額 300 ドル + 200 ドル/月 + 500 ドル/月 = 1,000 ドル/月", "8": "次に、その数値に 50% を掛けて、ジェシカが毎月支払う追加金額を求めます。1,000 ドル/月 * .5 = 500 ドル/月", "9": "その数字を最低支払額の合計に加算すると、ジェシカが 1 か月あたりに支払う金額がわかります。1,000 ドル/月 + 500 ドル/月 = 1,500 ドル/月", "10": "次に、その数値に 1 年の月数を掛けると、ジェシカの年間支払い額を求めることができます。1,500 ドル/月 * 12 か月/年 = 18,000 ドル/年", "11": "The answer is 18000"}, "human_translated": true, "code_input": "####\nfacts = ['ジェシカは毎月の借金をいくら返済すべきかを考えています。', '彼女の学生ローンの最低支払い額は月額 300 ドル、', 'クレジットカードの最低額は月額 200 ドル、', '住宅ローンの最低額は月額 500 ドルです。', 'ジェシカが最低額より 50% 高い金額を支払いたい場合、']\nquestion = '彼女は一年にいくら払いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女の学生ローンの最低支払い額は月額 300 ドル、', 'クレジットカードの最低額は月額 200 ドル、', '住宅ローンの最低額は月額 500 ドルです。']\nnew_fact = infer_new_fact(selected) # 'まず、毎月の最低支払い額の合計を求めます。月額 300 ドル + 200 ドル/月 + 500 ドル/月 = 1,000 ドル/月'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェシカが最低額より 50% 高い金額を支払いたい場合、', 'まず、毎月の最低支払い額の合計を求めます。月額 300 ドル + 200 ドル/月 + 500 ドル/月 = 1,000 ドル/月']\nnew_fact = infer_new_fact(selected) # '次に、その数値に 50% を掛けて、ジェシカが毎月支払う追加金額を求めます。1,000 ドル/月 * .5 = 500 ドル/月'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、毎月の最低支払い額の合計を求めます。月額 300 ドル + 200 ドル/月 + 500 ドル/月 = 1,000 ドル/月', '次に、その数値に 50% を掛けて、ジェシカが毎月支払う追加金額を求めます。1,000 ドル/月 * .5 = 500 ドル/月']\nnew_fact = infer_new_fact(selected) # 'その数字を最低支払額の合計に加算すると、ジェシカが 1 か月あたりに支払う金額がわかります。1,000 ドル/月 + 500 ドル/月 = 1,500 ドル/月'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は一年にいくら払いますか？', 'その数字を最低支払額の合計に加算すると、ジェシカが 1 か月あたりに支払う金額がわかります。1,000 ドル/月 + 500 ドル/月 = 1,500 ドル/月']\nnew_fact = infer_new_fact(selected) # '次に、その数値に 1 年の月数を掛けると、ジェシカの年間支払い額を求めることができます。1,500 ドル/月 * 12 か月/年 = 18,000 ドル/年'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェシカが最低額より 50% 高い金額を支払いたい場合、', '彼女は一年にいくら払いますか？', '次に、その数値に 1 年の月数を掛けると、ジェシカの年間支払い額を求めることができます。1,500 ドル/月 * 12 か月/年 = 18,000 ドル/年']\nnew_fact = infer_new_fact(selected) # 'The answer is 18000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18000'"}
{"id": "GSM8K_174_50c69e769b", "context": "", "options": [], "answer": "95", "reasoning_graph_edges": [{"antecedents": [2, 5, 6], "consequent": 9}, {"antecedents": [2, 7], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [8, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent5 & sent6 -> int1: There are 60 potatoes, and Billy takes a minute and a half to peel each one, or 60 potatoes * 1.5 minutes per potato = 90 minutes.; sent2 & sent7 -> int2: Billy only takes 5 seconds to cut the potatoes, so it takes 5 seconds * 60 potatoes / 60 seconds per minute = 5 minutes to cut the potatoes.; int1 & int2 -> int3: So it will take him a total of 90 minutes peeling + 5 minutes cutting = 95 minutes total prepping the potatoes.; int3 & sent8 -> int4: The answer is 95;", "textual_logical_units": {"1": "ビリーは、大家族が再会するバーベキュー用のポテトサラダを作る準備として、ジャガイモの皮をむいて切っています。", "2": "これは大きなイベントなので、彼は 60 個のジャガイモを処理しなければなりません。", "3": "じゃがいもはだいたい同じ大きさなので、", "4": "皮をむいて切るのにかかる時間はほぼ同じです。", "5": "ビリーはジャガイモの皮をむくのに", "6": "約 1 分半かかりますが、", "7": "切るのは 5 秒ほどしかかかりません。", "8": "ビリーがじゃがいもの準備を終えるのにどれくらい時間がかかりますか？", "9": "じゃがいもは 60 個あり、ビリーはそれぞれ皮をむくのに 1 分半かかります。つまり、じゃがいも 60 個 × じゃがいも 1 個あたり 1.5 分 = 90 分かかります。", "10": "ビリーはじゃがいもを切るのに 5 秒しかかからないので、じゃがいもを切るのに 5 秒 × 60 個のじゃがいも/1 分あたり 60 秒 = 5 分かかります。", "11": "つまり、皮をむくのに合計 90 分+切るのに 5 分 = じゃがいもの準備に合計 95 分かかります。", "12": "The answer is 95"}, "human_translated": true, "code_input": "####\nfacts = [ 'ビリーは、大家族が再会するバーベキュー用のポテトサラダを作る準備として、ジャガイモの皮をむいて切っています。',\n  'これは大きなイベントなので、彼は 60 個のジャガイモを処理しなければなりません。',\n  'じゃがいもはだいたい同じ大きさなので、',\n  '皮をむいて切るのにかかる時間はほぼ同じです。',\n  'ビリーはジャガイモの皮をむくのに',\n  '約 1 分半かかりますが、',\n  '切るのは 5 秒ほどしかかかりません。']\nquestion = 'ビリーがじゃがいもの準備を終えるのにどれくらい時間がかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['これは大きなイベントなので、彼は 60 個のジャガイモを処理しなければなりません。', 'ビリーはジャガイモの皮をむくのに', '約 1 分半かかりますが、']\nnew_fact = infer_new_fact(selected) # 'じゃがいもは 60 個あり、ビリーはそれぞれ皮をむくのに 1 分半かかります。つまり、じゃがいも 60 個 × じゃがいも 1 個あたり 1.5 分 = 90 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['これは大きなイベントなので、彼は 60 個のジャガイモを処理しなければなりません。', '切るのは 5 秒ほどしかかかりません。']\nnew_fact = infer_new_fact(selected) # 'ビリーはじゃがいもを切るのに 5 秒しかかからないので、じゃがいもを切るのに 5 秒 × 60 個のじゃがいも/1 分あたり 60 秒 = 5 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['じゃがいもは 60 個あり、ビリーはそれぞれ皮をむくのに 1 分半かかります。つまり、じゃがいも 60 個 × じゃがいも 1 個あたり 1.5 分 = 90 分かかります。', 'ビリーはじゃがいもを切るのに 5 秒しかかからないので、じゃがいもを切るのに 5 秒 × 60 個のじゃがいも/1 分あたり 60 秒 = 5 分かかります。']\nnew_fact = infer_new_fact(selected) # 'つまり、皮をむくのに合計 90 分+切るのに 5 分 = じゃがいもの準備に合計 95 分かかります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビリーがじゃがいもの準備を終えるのにどれくらい時間がかかりますか？', 'つまり、皮をむくのに合計 90 分+切るのに 5 分 = じゃがいもの準備に合計 95 分かかります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 95'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '95'"}
{"id": "GSM8K_175_48fc080fa9", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 7}, {"antecedents": [2], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [5, 6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Each gallon sells for a total of $10 because 20 x .5 = 10; sent2 -> int2: Each gallon costs $5 to make because 3 + 2 = 5; int1 & int2 -> int3: They make $5 off each gallon because 10 - 5 = 5; int3 & sent5 -> int4: They made and sold 5 gallons because 25 / 5 = 5; int4 & sent2 -> int5: They spent $15 on lemons because 5 x 3 = 15; int5 & sent5 & sent6 -> int6: The answer is 15;", "textual_logical_units": {"1": "フアンと弟のカルロスはレモネードを売っています。", "2": "彼らが作る 4.55 リットルにつき、レモンに 3 ドル、砂糖に 2 ドルかかります。", "3": "グラス 1 杯は 0.50 ドルで販売されており、", "4": "4.55 リットルあたり 20 杯分を作れます。", "5": "彼らが 25 ドルの利益を上げた場合、", "6": "レモンにいくら費やしましたか？", "7": "20 x .5 = 10 なので、4.55 リットルあたり合計 10 ドルで販売されます", "8": "3 + 2 = 5 なので、4.55 リットルの製造には 5 ドルかかります", "9": "10 - 5 = 5 なので、4.55 リットルあたり 5 ドルが残ります", "10": "25/5 = 5 なので、彼らは 22.73 リットルを製造して売りました", "11": "5 x 3 = 15 なので、彼らはレモンに 15 ドルを費やしました。", "12": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['フアンと弟のカルロスはレモネードを売っています。', '彼らが作る 4.55 リットルにつき、レモンに 3 ドル、砂糖に 2 ドルかかります。', 'グラス 1 杯は 0.50 ドルで販売されており、', '4.55 リットルあたり 20 杯分を作れます。', '彼らが 25 ドルの利益を上げた場合、']\nquestion = 'レモンにいくら費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['グラス 1 杯は 0.50 ドルで販売されており、', '4.55 リットルあたり 20 杯分を作れます。']\nnew_fact = infer_new_fact(selected) # '20 x .5 = 10 なので、4.55 リットルあたり合計 10 ドルで販売されます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らが作る 4.55 リットルにつき、レモンに 3 ドル、砂糖に 2 ドルかかります。']\nnew_fact = infer_new_fact(selected) # '3 + 2 = 5 なので、4.55 リットルの製造には 5 ドルかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 x .5 = 10 なので、4.55 リットルあたり合計 10 ドルで販売されます', '3 + 2 = 5 なので、4.55 リットルの製造には 5 ドルかかります']\nnew_fact = infer_new_fact(selected) # '10 - 5 = 5 なので、4.55 リットルあたり 5 ドルが残ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らが 25 ドルの利益を上げた場合、', '10 - 5 = 5 なので、4.55 リットルあたり 5 ドルが残ります']\nnew_fact = infer_new_fact(selected) # '25/5 = 5 なので、彼らは 22.73 リットルを製造して売りました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らが作る 4.55 リットルにつき、レモンに 3 ドル、砂糖に 2 ドルかかります。', '25/5 = 5 なので、彼らは 22.73 リットルを製造して売りました']\nnew_fact = infer_new_fact(selected) # '5 x 3 = 15 なので、彼らはレモンに 15 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らが 25 ドルの利益を上げた場合、', 'レモンにいくら費やしましたか？', '5 x 3 = 15 なので、彼らはレモンに 15 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_176_4492f48909", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If there were 80 Japanese, the number of Chinese was 240-80=160.; int1 & sent3 -> int2: Since there were 60 boys in the Chinese team, there were 160-60 = 100 girls in the Chinese team.; int2 & sent4 -> int3: The answer is 100;", "textual_logical_units": {"1": "240 人のアジア人が参加したレースでは、80 人が日本人で、", "2": "残りは中国人でした。", "3": "中国人チームの男子が 60 人だった場合、", "4": "中国人チームには何人の女子がいましたか？", "5": "日本人が 80 人いたとすると、中国人の数は 240 - 80 = 160 人になります。", "6": "中国人チームには 60 人の男子がいたので、中国人チームには 160 - 60 = 100 人の女子がいたことになります。", "7": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = ['240 人のアジア人が参加したレースでは、80 人が日本人で、', '残りは中国人でした。', '中国人チームの男子が 60 人だった場合、']\nquestion = '中国人チームには何人の女子がいましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['240 人のアジア人が参加したレースでは、80 人が日本人で、', '残りは中国人でした。']\nnew_fact = infer_new_fact(selected) # '日本人が 80 人いたとすると、中国人の数は 240 - 80 = 160 人になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['中国人チームの男子が 60 人だった場合、', '日本人が 80 人いたとすると、中国人の数は 240 - 80 = 160 人になります。']\nnew_fact = infer_new_fact(selected) # '中国人チームには 60 人の男子がいたので、中国人チームには 160 - 60 = 100 人の女子がいたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['中国人チームには何人の女子がいましたか？', '中国人チームには 60 人の男子がいたので、中国人チームには 160 - 60 = 100 人の女子がいたことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_177_1f3cd00881", "context": "", "options": [], "answer": "350", "reasoning_graph_edges": [{"antecedents": [1, 6], "consequent": 8}, {"antecedents": [2, 6], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [4, 5], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [6, 7, 14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent6 -> int1: When Zaid spend 1/4 of his salary on rent, he parts with 1/4*$6000 = $1500; sent2 & sent6 -> int2: Car fuel costs him 1/3*$6000 = $2000; int1 & int2 -> int3: Total expenses amount to $2000+$1500 = $3500; int3 & sent6 -> int4: The total amount of money he remains with is $6000-$3500 = $2500; int4 & sent3 -> int5: He donates half of the remaining amount, which is 1/2*$2500 = $1250; sent4 & sent5 -> int6: The total amount of money given to his wife and daughter is $200+$700 = $900; int5 & int6 -> int7: After the amount that he gave the wife and daughter, the total amount remaining is $1250-$900 = $350; int7 & sent6 & sent7 -> int8: The answer is 350;", "textual_logical_units": {"1": "ザイドは給料の 4 分の 1 を家賃に、", "2": "3 分の 1 を車の燃料に費やし、", "3": "残りの金額の半分を彼のお気に入りの慈善団体に寄付します。", "4": "彼は娘に毎週使う費用として 200 ドルを渡し、", "5": "妻には食料品やその他の家庭用品の予算として 700 ドルを渡しています。", "6": "ザイドが月に 6000 ドル稼いだ場合、", "7": "これらの出費と寄付を差し引くと、彼にはどれくらいのお金が残りますか？", "8": "ザイドが給料の 4 分の 1 を家賃に費やすと、1/4 * 6,000ドル = 1,500 ドルを手放すことになります", "9": "車の燃料費は 1/3 * 6000 ドル = 2000 ドルです", "10": "費用の合計は 2,000 ドル + 1,500 ドル = 3,500 ドルです", "11": "彼に残っているお金の総額は 6,000 ドル - 3,500 ドル = 2,500 ドルです", "12": "彼は残りの金額の半分、つまり 1/2 * 2,500 ドル = 1,250 ドルを寄付します", "13": "彼の妻と娘に与えられたお金の合計額は 200 ドル + 700 ドル = 900 ドルです", "14": "彼が妻と娘に渡した金額を差し引くと、残りの合計金額は 1,250 ドル - 900 ドル = 350 ドルになります", "15": "The answer is 350"}, "human_translated": true, "code_input": "####\nfacts = [ 'ザイドは給料の 4 分の 1 を家賃に、',\n  '3 分の 1 を車の燃料に費やし、',\n  '残りの金額の半分を彼のお気に入りの慈善団体に寄付します。',\n  '彼は娘に毎週使う費用として 200 ドルを渡し、',\n  '妻には食料品やその他の家庭用品の予算として 700 ドルを渡しています。',\n  'ザイドが月に 6000 ドル稼いだ場合、']\nquestion = 'これらの出費と寄付を差し引くと、彼にはどれくらいのお金が残りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ザイドは給料の 4 分の 1 を家賃に、', 'ザイドが月に 6000 ドル稼いだ場合、']\nnew_fact = infer_new_fact(selected) # 'ザイドが給料の 4 分の 1 を家賃に費やすと、1/4 * 6,000ドル = 1,500 ドルを手放すことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 分の 1 を車の燃料に費やし、', 'ザイドが月に 6000 ドル稼いだ場合、']\nnew_fact = infer_new_fact(selected) # '車の燃料費は 1/3 * 6000 ドル = 2000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ザイドが給料の 4 分の 1 を家賃に費やすと、1/4 * 6,000ドル = 1,500 ドルを手放すことになります', '車の燃料費は 1/3 * 6000 ドル = 2000 ドルです']\nnew_fact = infer_new_fact(selected) # '費用の合計は 2,000 ドル + 1,500 ドル = 3,500 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ザイドが月に 6000 ドル稼いだ場合、', '費用の合計は 2,000 ドル + 1,500 ドル = 3,500 ドルです']\nnew_fact = infer_new_fact(selected) # '彼に残っているお金の総額は 6,000 ドル - 3,500 ドル = 2,500 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの金額の半分を彼のお気に入りの慈善団体に寄付します。', '彼に残っているお金の総額は 6,000 ドル - 3,500 ドル = 2,500 ドルです']\nnew_fact = infer_new_fact(selected) # '彼は残りの金額の半分、つまり 1/2 * 2,500 ドル = 1,250 ドルを寄付します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は娘に毎週使う費用として 200 ドルを渡し、', '妻には食料品やその他の家庭用品の予算として 700 ドルを渡しています。']\nnew_fact = infer_new_fact(selected) # '彼の妻と娘に与えられたお金の合計額は 200 ドル + 700 ドル = 900 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は残りの金額の半分、つまり 1/2 * 2,500 ドル = 1,250 ドルを寄付します', '彼の妻と娘に与えられたお金の合計額は 200 ドル + 700 ドル = 900 ドルです']\nnew_fact = infer_new_fact(selected) # '彼が妻と娘に渡した金額を差し引くと、残りの合計金額は 1,250 ドル - 900 ドル = 350 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ザイドが月に 6000 ドル稼いだ場合、', 'これらの出費と寄付を差し引くと、彼にはどれくらいのお金が残りますか？', '彼が妻と娘に渡した金額を差し引くと、残りの合計金額は 1,250 ドル - 900 ドル = 350 ドルになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 350'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '350'"}
{"id": "GSM8K_178_9d25237f21", "context": "", "options": [], "answer": "122", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: If Bo has 40 crabs, then Monic, who has 4 fewer crabs than Bo, has 40-4 = 36 crabs.; int1 -> int2: Bo and Monic have a total of 36+40 = 76 crabs.; int1 & sent1 -> int3: Since Monic has 36 crabs, Rani's number of crabs is 36+ 10 = 46.; int2 & int3 -> int4: Together, the three have 76+46 = 122 crabs.; int4 & sent3 & sent4 -> int5: The answer is 122;", "textual_logical_units": {"1": "ラニはモニックより 10 匹多いカニを飼っており、", "2": "モニックはボーより 4 匹少ないカニを飼っています。", "3": "ボーがカニを 40 匹飼っている場合の、", "4": "3 人のカニの総数を計算してください。", "5": "ボーがカニを 40 匹飼っている場合、ボーより 4 匹少ないカニを飼っているモニックは、40 - 4 = 36 匹のカニを飼っていることになります。", "6": "ボーとモニックは合計 36 + 40 = 76 匹のカニを飼っています。", "7": "モニックは 36 匹のカニを飼っているので、ラニのカニの数は 36 匹 + 10 = 46 匹です。", "8": "合計すると、3 人は 76 + 46 = 122 匹のカニを飼っています。", "9": "The answer is 122"}, "human_translated": true, "code_input": "####\nfacts = ['ラニはモニックより 10 匹多いカニを飼っており、', 'モニックはボーより 4 匹少ないカニを飼っています。', 'ボーがカニを 40 匹飼っている場合の、']\nquestion = '3 人のカニの総数を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ラニはモニックより 10 匹多いカニを飼っており、', 'モニックはボーより 4 匹少ないカニを飼っています。', 'ボーがカニを 40 匹飼っている場合の、']\nnew_fact = infer_new_fact(selected) # 'ボーがカニを 40 匹飼っている場合、ボーより 4 匹少ないカニを飼っているモニックは、40 - 4 = 36 匹のカニを飼っていることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ボーがカニを 40 匹飼っている場合、ボーより 4 匹少ないカニを飼っているモニックは、40 - 4 = 36 匹のカニを飼っていることになります。']\nnew_fact = infer_new_fact(selected) # 'ボーとモニックは合計 36 + 40 = 76 匹のカニを飼っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラニはモニックより 10 匹多いカニを飼っており、', 'ボーがカニを 40 匹飼っている場合、ボーより 4 匹少ないカニを飼っているモニックは、40 - 4 = 36 匹のカニを飼っていることになります。']\nnew_fact = infer_new_fact(selected) # 'モニックは 36 匹のカニを飼っているので、ラニのカニの数は 36 匹 + 10 = 46 匹です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ボーとモニックは合計 36 + 40 = 76 匹のカニを飼っています。', 'モニックは 36 匹のカニを飼っているので、ラニのカニの数は 36 匹 + 10 = 46 匹です。']\nnew_fact = infer_new_fact(selected) # '合計すると、3 人は 76 + 46 = 122 匹のカニを飼っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ボーがカニを 40 匹飼っている場合の、', '3 人のカニの総数を計算してください。', '合計すると、3 人は 76 + 46 = 122 匹のカニを飼っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 122'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '122'"}
{"id": "GSM8K_179_13ab58e3d6", "context": "", "options": [], "answer": "130", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 5], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Lloyd tutored 5 + 8 = 13 hours for the first two weeks.; int1 & sent1 -> int2: Therefore, he earned 13 x $10 = $130 for the first two weeks.; int1 & sent4 -> int3: The answer is 130;", "textual_logical_units": {"1": "ロイドは数学の個別指導で時給 10 ドルを稼いでいます。", "2": "彼は最初の週に 5 時間、", "3": "2 週目は 8 時間の個別指導を行いました。", "4": "彼は最初の 2 週間でいくら稼ぎましたか？", "5": "ロイドは最初の 2 週間で 5 + 8 = 13 時間の個別指導を行いました。", "6": "したがって、彼は最初の 2 週間で 13 x 10ドル = 130 ドルを稼ぎました。", "7": "The answer is 130"}, "human_translated": true, "code_input": "####\nfacts = ['ロイドは数学の個別指導で時給 10 ドルを稼いでいます。', '彼は最初の週に 5 時間、', '2 週目は 8 時間の個別指導を行いました。']\nquestion = '彼は最初の 2 週間でいくら稼ぎましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は最初の週に 5 時間、', '2 週目は 8 時間の個別指導を行いました。']\nnew_fact = infer_new_fact(selected) # 'ロイドは最初の 2 週間で 5 + 8 = 13 時間の個別指導を行いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロイドは数学の個別指導で時給 10 ドルを稼いでいます。', 'ロイドは最初の 2 週間で 5 + 8 = 13 時間の個別指導を行いました。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は最初の 2 週間で 13 x 10ドル = 130 ドルを稼ぎました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は最初の 2 週間でいくら稼ぎましたか？', 'ロイドは最初の 2 週間で 5 + 8 = 13 時間の個別指導を行いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 130'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '130'"}
{"id": "GSM8K_180_8ee2b98692", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3, 4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The winner got 3/4*80 = 60 votes.; int1 & sent3 -> int2: The loser got 80-60 = 20 votes.; int2 & sent2 & sent3 & sent4 -> int3: The answer is 20;", "textual_logical_units": {"1": "2 人の候補者がサライの学校のクラス代表に立候補しています。", "2": "勝者が 3/4 の票を獲得し、", "3": "クラスで投票した学生の総数が 80 人だった場合の", "4": "敗者が獲得した票数を計算してください。", "5": "勝者は 3/4 * 80 = 60 票を獲得しました。", "6": "敗者は 80 - 60 = 20 票を獲得しました。", "7": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = ['2 人の候補者がサライの学校のクラス代表に立候補しています。', '勝者が 3/4 の票を獲得し、', 'クラスで投票した学生の総数が 80 人だった場合の']\nquestion = '敗者が獲得した票数を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['勝者が 3/4 の票を獲得し、', 'クラスで投票した学生の総数が 80 人だった場合の']\nnew_fact = infer_new_fact(selected) # '勝者は 3/4 * 80 = 60 票を獲得しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クラスで投票した学生の総数が 80 人だった場合の', '勝者は 3/4 * 80 = 60 票を獲得しました。']\nnew_fact = infer_new_fact(selected) # '敗者は 80 - 60 = 20 票を獲得しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['勝者が 3/4 の票を獲得し、', 'クラスで投票した学生の総数が 80 人だった場合の', '敗者が獲得した票数を計算してください。', '敗者は 80 - 60 = 20 票を獲得しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_181_2970bf0efc", "context": "", "options": [], "answer": "160", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 8}, {"antecedents": [3, 5, 8], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: Sandra ordered 200 pink calla lilies / 5 = 40 white carnations.; int1 & sent3 & sent5 -> int2: Sandra therefore ordered 4 * 40 = 160 red roses.; int2 & sent7 -> int3: The answer is 160;", "textual_logical_units": {"1": "角を曲がったところにある花屋のサンドラは、", "2": "フレッドに注文した商品の配送が終わらないことに非常に不満を抱いています。", "3": "サンドラは白いカーネーションの 4 倍の数の赤いバラを注文しました。", "4": "ピンクのオランダカイウも 200 本注文しましたが、", "5": "これは白いカーネーションの 5 倍の数でした", "6": "サンドラは、不足している赤いバラが午後 5 時までに配達されない場合、サプライヤーを切り替えなければなりません。", "7": "サンドラが仕事を続けるためには、フレッドは午後 5 時までに何本の赤いバラを届けなければならないですか？", "8": "サンドラは、ピンクのオランダカイウ 200 本/5 = 40 本の白いカーネーションを注文しました。", "9": "したがって、サンドラは 4 * 40 = 160 本の赤いバラを注文しました。", "10": "The answer is 160"}, "human_translated": true, "code_input": "####\nfacts = [ '角を曲がったところにある花屋のサンドラは、',\n  'フレッドに注文した商品の配送が終わらないことに非常に不満を抱いています。',\n  'サンドラは白いカーネーションの 4 倍の数の赤いバラを注文しました。',\n  'ピンクのオランダカイウも 200 本注文しましたが、',\n  'これは白いカーネーションの 5 倍の数でした',\n  'サンドラは、不足している赤いバラが午後 5 時までに配達されない場合、サプライヤーを切り替えなければなりません。']\nquestion = 'サンドラが仕事を続けるためには、フレッドは午後 5 時までに何本の赤いバラを届けなければならないですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ピンクのオランダカイウも 200 本注文しましたが、', 'これは白いカーネーションの 5 倍の数でした']\nnew_fact = infer_new_fact(selected) # 'サンドラは、ピンクのオランダカイウ 200 本/5 = 40 本の白いカーネーションを注文しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サンドラは白いカーネーションの 4 倍の数の赤いバラを注文しました。', 'これは白いカーネーションの 5 倍の数でした', 'サンドラは、ピンクのオランダカイウ 200 本/5 = 40 本の白いカーネーションを注文しました。']\nnew_fact = infer_new_fact(selected) # 'したがって、サンドラは 4 * 40 = 160 本の赤いバラを注文しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サンドラが仕事を続けるためには、フレッドは午後 5 時までに何本の赤いバラを届けなければならないですか？', 'したがって、サンドラは 4 * 40 = 160 本の赤いバラを注文しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 160'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '160'"}
{"id": "GSM8K_182_2654bdac99", "context": "", "options": [], "answer": "23", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 4}, {"antecedents": [2, 3, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: 2 years ago Jan was 30-2=28 years old; int1 & sent2 & sent3 -> int2: So Marks age two years ago was 5+28/2=19 years old; int2 & sent1 -> int3: Mark is now 19+2=21 years old; int3 & sent1 -> int4: So Jean is 21+2=23 years old; int4 & sent3 -> int5: The answer is 23;", "textual_logical_units": {"1": "ジーンはマークより 2 歳年上です。", "2": "2 年前、マークはヤンの半分の年齢より 5 歳年上でした。", "3": "ジャンが 30 歳の場合、ジーンは何歳ですか？", "4": "2 年前、ヤンは 30 - 2 = 28 歳でした", "5": "つまり、2 年前のマークの年齢は 5 + 28/2 = 19 歳でした", "6": "マークは現在 19 歳 + 2 = 21 歳です", "7": "つまり、ジーンは 21 + 2 = 23 歳です", "8": "The answer is 23"}, "human_translated": true, "code_input": "####\nfacts = ['ジーンはマークより 2 歳年上です。', '2 年前、マークはヤンの半分の年齢より 5 歳年上でした。']\nquestion = 'ジャンが 30 歳の場合、ジーンは何歳ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['2 年前、マークはヤンの半分の年齢より 5 歳年上でした。', 'ジャンが 30 歳の場合、ジーンは何歳ですか？']\nnew_fact = infer_new_fact(selected) # '2 年前、ヤンは 30 - 2 = 28 歳でした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 年前、マークはヤンの半分の年齢より 5 歳年上でした。', 'ジャンが 30 歳の場合、ジーンは何歳ですか？', '2 年前、ヤンは 30 - 2 = 28 歳でした']\nnew_fact = infer_new_fact(selected) # 'つまり、2 年前のマークの年齢は 5 + 28/2 = 19 歳でした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジーンはマークより 2 歳年上です。', 'つまり、2 年前のマークの年齢は 5 + 28/2 = 19 歳でした']\nnew_fact = infer_new_fact(selected) # 'マークは現在 19 歳 + 2 = 21 歳です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジーンはマークより 2 歳年上です。', 'マークは現在 19 歳 + 2 = 21 歳です']\nnew_fact = infer_new_fact(selected) # 'つまり、ジーンは 21 + 2 = 23 歳です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャンが 30 歳の場合、ジーンは何歳ですか？', 'つまり、ジーンは 21 + 2 = 23 歳です']\nnew_fact = infer_new_fact(selected) # 'The answer is 23'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '23'"}
{"id": "GSM8K_183_33fc9ff0f7", "context": "", "options": [], "answer": "2", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 7}, {"antecedents": [4, 5], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [7, 9], "consequent": 10}, {"antecedents": [6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: The first team will finish the relay in 4*55 = 220 seconds.; sent4 & sent5 -> int2: On the second team we must determine each runner's individual pace. We know the first runner will complete their leg in 60 seconds, so the second runner will take 60 - 3 = 57 seconds, then the third will take 57 - 3 = 54 seconds, and the fourth will take 54 - 3 = 51 seconds.; int2 & sent4 & sent5 -> int3: Thus, the second team will finish the relay in 60 + 57 + 54 + 51 = 222 seconds.; int1 & int3 -> int4: Therefore, the first team will finish 222 - 220 = 2 seconds faster than the second team.; int4 & sent6 -> int5: The answer is 2;", "textual_logical_units": {"1": "2 つの陸上チームが 4 × 400 メートルのリレーで競い合います。これは、競い合う各チームが 4 人のメンバーで構成され、それぞれが標準トラックを 400 メートル、つまり 1 周走るレースです。", "2": "2 つのチームのうちの 1 つは非常にバランスが取れており、", "3": "メンバーはそれぞれ 400 メートルの区間を 55 秒ジャストで走ります。", "4": "相手のチームはあまりバランスが取れていません。最初のランナーは 400 メートルを 60 秒で走り、", "5": "後続の各ランナーは、前のランナーよりも 3 秒速く走ります。", "6": "この情報を用いると、速いチームは何秒差で勝ちますか？", "7": "最初のチームは 4 * 55 = 220 秒でリレーを完走します。", "8": "2 つ目のチームでは、各ランナーのペースを決める必要があります。最初のランナーは 60 秒で走り終えることがわかっているので、2 番目のランナーは 60-3 = 57 秒、3 番目のランナーは 57-3 = 54 秒、4 番目のランナーは 54-3 = 51 秒かかることになります。", "9": "したがって、2 つ目のチームは 60 + 57 + 54 + 51 = 222 秒でリレーを完走します。", "10": "したがって、最初のチームは 2 つ目のチームよりも 222 - 220 = 2 秒速く完走します。", "11": "The answer is 2"}, "human_translated": true, "code_input": "####\nfacts = [ '2 つの陸上チームが 4 × 400 メートルのリレーで競い合います。これは、競い合う各チームが 4 人のメンバーで構成され、それぞれが標準トラックを 400 メートル、つまり 1 周走るレースです。',\n  '2 つのチームのうちの 1 つは非常にバランスが取れており、',\n  'メンバーはそれぞれ 400 メートルの区間を 55 秒ジャストで走ります。',\n  '相手のチームはあまりバランスが取れていません。最初のランナーは 400 メートルを 60 秒で走り、',\n  '後続の各ランナーは、前のランナーよりも 3 秒速く走ります。']\nquestion = 'この情報を用いると、速いチームは何秒差で勝ちますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['メンバーはそれぞれ 400 メートルの区間を 55 秒ジャストで走ります。']\nnew_fact = infer_new_fact(selected) # '最初のチームは 4 * 55 = 220 秒でリレーを完走します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['相手のチームはあまりバランスが取れていません。最初のランナーは 400 メートルを 60 秒で走り、', '後続の各ランナーは、前のランナーよりも 3 秒速く走ります。']\nnew_fact = infer_new_fact(selected) # '2 つ目のチームでは、各ランナーのペースを決める必要があります。最初のランナーは 60 秒で走り終えることがわかっているので、2 番目のランナーは 60-3 = 57 秒、3 番目のランナーは 57-3 = 54 秒、4 番目のランナーは 54-3 = 51 秒かかることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['相手のチームはあまりバランスが取れていません。最初のランナーは 400 メートルを 60 秒で走り、', '後続の各ランナーは、前のランナーよりも 3 秒速く走ります。', '2 つ目のチームでは、各ランナーのペースを決める必要があります。最初のランナーは 60 秒で走り終えることがわかっているので、2 番目のランナーは 60-3 = 57 秒、3 番目のランナーは 57-3 = 54 秒、4 番目のランナーは 54-3 = 51 秒かかることになります。']\nnew_fact = infer_new_fact(selected) # 'したがって、2 つ目のチームは 60 + 57 + 54 + 51 = 222 秒でリレーを完走します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初のチームは 4 * 55 = 220 秒でリレーを完走します。', 'したがって、2 つ目のチームは 60 + 57 + 54 + 51 = 222 秒でリレーを完走します。']\nnew_fact = infer_new_fact(selected) # 'したがって、最初のチームは 2 つ目のチームよりも 222 - 220 = 2 秒速く完走します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この情報を用いると、速いチームは何秒差で勝ちますか？', 'したがって、最初のチームは 2 つ目のチームよりも 222 - 220 = 2 秒速く完走します。']\nnew_fact = infer_new_fact(selected) # 'The answer is 2'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2'"}
{"id": "GSM8K_184_4de5e61d39", "context": "", "options": [], "answer": "25", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 3 numbers greater than 3 on the dice, so the chances of rolling one of them are 3 / 6 = 50%.; int1 & sent2 -> int2: The chance of rolling one even number is 50%, so the chance of rolling two in a row is 50% * 50% = 25%.; int1 & int2 -> int3: The difference between these two probabilities is 50% - 25% = 25%.; int3 & sent2 -> int4: The answer is 25;", "textual_logical_units": {"1": "ジェリーは 6 面体のサイコロを振っています。", "2": "彼が 3 より大きい数字を転がす確率は、連続して 2 つの偶数を転がす可能性よりも (パーセントで) どれくらい高いですか？", "3": "サイコロには 3 より大きい数字が 3 つあるので、そのうちの 1 つを振る確率は 3/6 = 50% です。", "4": "偶数が 1 つ出る確率は 50% なので、2 つ続けて出る確率は 50% * 50% = 25% です。", "5": "これら 2 つの確率の差は 50% - 25% = 25% です。", "6": "The answer is 25"}, "human_translated": true, "code_input": "####\nfacts = ['ジェリーは 6 面体のサイコロを振っています。']\nquestion = '彼が 3 より大きい数字を転がす確率は、連続して 2 つの偶数を転がす可能性よりも (パーセントで) どれくらい高いですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジェリーは 6 面体のサイコロを振っています。', '彼が 3 より大きい数字を転がす確率は、連続して 2 つの偶数を転がす可能性よりも (パーセントで) どれくらい高いですか？']\nnew_fact = infer_new_fact(selected) # 'サイコロには 3 より大きい数字が 3 つあるので、そのうちの 1 つを振る確率は 3/6 = 50% です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が 3 より大きい数字を転がす確率は、連続して 2 つの偶数を転がす可能性よりも (パーセントで) どれくらい高いですか？', 'サイコロには 3 より大きい数字が 3 つあるので、そのうちの 1 つを振る確率は 3/6 = 50% です。']\nnew_fact = infer_new_fact(selected) # '偶数が 1 つ出る確率は 50% なので、2 つ続けて出る確率は 50% * 50% = 25% です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サイコロには 3 より大きい数字が 3 つあるので、そのうちの 1 つを振る確率は 3/6 = 50% です。', '偶数が 1 つ出る確率は 50% なので、2 つ続けて出る確率は 50% * 50% = 25% です。']\nnew_fact = infer_new_fact(selected) # 'これら 2 つの確率の差は 50% - 25% = 25% です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が 3 より大きい数字を転がす確率は、連続して 2 つの偶数を転がす可能性よりも (パーセントで) どれくらい高いですか？', 'これら 2 つの確率の差は 50% - 25% = 25% です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 25'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '25'"}
{"id": "GSM8K_185_19ebf2310f", "context": "", "options": [], "answer": "30", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If Jenna got half as many apples as her mom, then she got 1/2 * 20 apples = 10 apples; int1 & sent3 -> int2: Together, they had 10 apples + 20 apples = 30 apples; int2 & sent4 -> int3: The answer is 30;", "textual_logical_units": {"1": "ジェナと彼女の母親は、リンゴ農園でリンゴを摘みました。", "2": "ジェナは母親の半分の量のリンゴを摘みました。", "3": "母親がリンゴを20個摘み取った場合、", "4": "2 人で何個のりんごを摘みましたか？", "5": "ジェナが母親の半分の量のリンゴを摘み取った場合、彼女は 1/2 * 20 個のリンゴ = 10 個のリンゴを摘み取ったことになります", "6": "それらを合わせると、10 個のリンゴ + 20 個のリンゴ = 30 個のリンゴを手に入れたことになります", "7": "The answer is 30"}, "human_translated": true, "code_input": "####\nfacts = ['ジェナと彼女の母親は、リンゴ農園でリンゴを摘みました。', 'ジェナは母親の半分の量のリンゴを摘みました。', '母親がリンゴを20個摘み取った場合、']\nquestion = '2 人で何個のりんごを摘みましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジェナは母親の半分の量のリンゴを摘みました。', '母親がリンゴを20個摘み取った場合、']\nnew_fact = infer_new_fact(selected) # 'ジェナが母親の半分の量のリンゴを摘み取った場合、彼女は 1/2 * 20 個のリンゴ = 10 個のリンゴを摘み取ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['母親がリンゴを20個摘み取った場合、', 'ジェナが母親の半分の量のリンゴを摘み取った場合、彼女は 1/2 * 20 個のリンゴ = 10 個のリンゴを摘み取ったことになります']\nnew_fact = infer_new_fact(selected) # 'それらを合わせると、10 個のリンゴ + 20 個のリンゴ = 30 個のリンゴを手に入れたことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 人で何個のりんごを摘みましたか？', 'それらを合わせると、10 個のリンゴ + 20 個のリンゴ = 30 個のリンゴを手に入れたことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 30'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '30'"}
{"id": "GSM8K_186_3482d126f8", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [5, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [9, 12], "consequent": 13}, {"antecedents": [3, 13], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [9, 10, 15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent5 & sent6 -> int1: In the hamster cages, there are 10 cages * 5 pieces of straw per hamster cage = 50 pieces of straw.; int1 & sent7 -> int2: Between the rabbits and the hamsters, there are 50 pieces of straw for hamsters + 20 pieces of straw for rabbits = 70 pieces of straw.; int2 & sent9 -> int3: As the remaining straw is for the rats, the rats have a total of 160 used pieces of straw – 70 pieces of straw for the hamsters and rabbits = 90 pieces of straws.; int3 & sent3 -> int4: So in each cage, there are 90 pieces of straw / 3 cages = 30 pieces of straw.; int4 & sent4 -> int5: This means that each cage has 30 pieces of straw / 6 pieces of straw per rat = 5 rats.; int5 & sent10 & sent9 -> int6: The answer is 5;", "textual_logical_units": {"1": "ラッセルはペットショップで働いており、", "2": "げっ歯類にわらを配っています。", "3": "ラットは同じ数のグループに分かれて 3 つのケージで飼育され、", "4": "ラット 1 匹には 6 本のわらが与えられます。", "5": "1 匹ずつ入っているハムスターのケージが 10 個あり、", "6": "ハムスター 1 匹には 5 本のわらが与えられます。", "7": "うさぎの檻もあり、そこには 20 本のわらが配られています。", "8": "店内の他の場所ではわらは使用されていません。", "9": "小さなげっ歯類に 160 本のわらが配られた場合、", "10": "1 つのケージには何匹のラットがいますか？", "11": "ハムスターのケージには、10 個のケージ x ハムスターのケージあたり 5 本のわら = 50 本のわらがあります。", "12": "ウサギとハムスターには、ハムスター用のわら 50 本、ウサギ用のわら 20 本 = 70 本のわらがあります。", "13": "残りのわらはラット用なので、ラットに使用するわら合計 160 本 - ハムスターとウサギ用のわら 70 本 = 90 本のわらです。", "14": "つまり、1 つのケージには 90 本のわら/3 つのケージ = 30 本のわらがあります。", "15": "つまり、1 つのケージには 30 本のわら/1 匹あたり 6 本のわら = 5匹のラットがいます。", "16": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = [ 'ラッセルはペットショップで働いており、',\n  'げっ歯類にわらを配っています。',\n  'ラットは同じ数のグループに分かれて 3 つのケージで飼育され、',\n  'ラット 1 匹には 6 本のわらが与えられます。',\n  '1 匹ずつ入っているハムスターのケージが 10 個あり、',\n  'ハムスター 1 匹には 5 本のわらが与えられます。',\n  'うさぎの檻もあり、そこには 20 本のわらが配られています。',\n  '店内の他の場所ではわらは使用されていません。',\n  '小さなげっ歯類に 160 本のわらが配られた場合、']\nquestion = '1 つのケージには何匹のラットがいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 匹ずつ入っているハムスターのケージが 10 個あり、', 'ハムスター 1 匹には 5 本のわらが与えられます。']\nnew_fact = infer_new_fact(selected) # 'ハムスターのケージには、10 個のケージ x ハムスターのケージあたり 5 本のわら = 50 本のわらがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['うさぎの檻もあり、そこには 20 本のわらが配られています。', 'ハムスターのケージには、10 個のケージ x ハムスターのケージあたり 5 本のわら = 50 本のわらがあります。']\nnew_fact = infer_new_fact(selected) # 'ウサギとハムスターには、ハムスター用のわら 50 本、ウサギ用のわら 20 本 = 70 本のわらがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['小さなげっ歯類に 160 本のわらが配られた場合、', 'ウサギとハムスターには、ハムスター用のわら 50 本、ウサギ用のわら 20 本 = 70 本のわらがあります。']\nnew_fact = infer_new_fact(selected) # '残りのわらはラット用なので、ラットに使用するわら合計 160 本 - ハムスターとウサギ用のわら 70 本 = 90 本のわらです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラットは同じ数のグループに分かれて 3 つのケージで飼育され、', '残りのわらはラット用なので、ラットに使用するわら合計 160 本 - ハムスターとウサギ用のわら 70 本 = 90 本のわらです。']\nnew_fact = infer_new_fact(selected) # 'つまり、1 つのケージには 90 本のわら/3 つのケージ = 30 本のわらがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ラット 1 匹には 6 本のわらが与えられます。', 'つまり、1 つのケージには 90 本のわら/3 つのケージ = 30 本のわらがあります。']\nnew_fact = infer_new_fact(selected) # 'つまり、1 つのケージには 30 本のわら/1 匹あたり 6 本のわら = 5匹のラットがいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['小さなげっ歯類に 160 本のわらが配られた場合、', '1 つのケージには何匹のラットがいますか？', 'つまり、1 つのケージには 30 本のわら/1 匹あたり 6 本のわら = 5匹のラットがいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_187_2b65c2a463", "context": "", "options": [], "answer": "106", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The monthly interest is $100 x 2/100 = $2.; int1 & sent3 -> int2: After 3 months, the total interest amount to $2 x 3 = $6.; int2 & sent1 -> int3: Therefore, Mandy should give Benedict a total of $100 + $6 = $106.; int3 & sent3 & sent4 -> int4: The answer is 106;", "textual_logical_units": {"1": "マンディはベネディクトに 100 ドル借りています。", "2": "彼らは毎月の利息を 2% にすることに同意しました。", "3": "マンディが 3 か月後に支払うことができる場合、", "4": "彼女はベネディクトにいくら支払う必要がありますか？", "5": "毎月の利息は 100 ドル x 2/100 = 2 ドルです。", "6": "3 か月後、利息の合計額は 2 ドル × 3 = 6 ドルになります。", "7": "したがって、マンディはベネディクトに合計 100 ドル + 6 ドル = 106 ドルを支払う必要があります。", "8": "The answer is 106"}, "human_translated": true, "code_input": "####\nfacts = ['マンディはベネディクトに 100 ドル借りています。', '彼らは毎月の利息を 2% にすることに同意しました。', 'マンディが 3 か月後に支払うことができる場合、']\nquestion = '彼女はベネディクトにいくら支払う必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マンディはベネディクトに 100 ドル借りています。', '彼らは毎月の利息を 2% にすることに同意しました。']\nnew_fact = infer_new_fact(selected) # '毎月の利息は 100 ドル x 2/100 = 2 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マンディが 3 か月後に支払うことができる場合、', '毎月の利息は 100 ドル x 2/100 = 2 ドルです。']\nnew_fact = infer_new_fact(selected) # '3 か月後、利息の合計額は 2 ドル × 3 = 6 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マンディはベネディクトに 100 ドル借りています。', '3 か月後、利息の合計額は 2 ドル × 3 = 6 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'したがって、マンディはベネディクトに合計 100 ドル + 6 ドル = 106 ドルを支払う必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マンディが 3 か月後に支払うことができる場合、', '彼女はベネディクトにいくら支払う必要がありますか？', 'したがって、マンディはベネディクトに合計 100 ドル + 6 ドル = 106 ドルを支払う必要があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 106'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '106'"}
{"id": "GSM8K_188_98bdc7be82", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [2, 3, 4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Each bag of wheat cost the trader $20+$2=$22 (taking transportation costs into account); int1 & sent3 -> int2: Each bag of wheat was sold for $30 each giving a profit of $30-$22=$8 on each bag; int1 & int2 & sent3 -> int3: Since a total of $400 profit was made, the total number of bags sold is $400/$8=50 bags; int3 & sent2 & sent3 & sent4 -> int4: The answer is 50;", "textual_logical_units": {"1": "あるトレーダーは、1 袋あたり 20 ドルのレートで農家から小麦の袋を購入しています。", "2": "1 袋を農場から倉庫まで運ぶのに 2 ドルかかり、", "3": "トレーダーがすべての袋をそれぞれ 30 ドルのレートで売り、合計 400 ドルの利益を上げた場合、", "4": "彼は袋をいくつ売りましたか？", "5": "小麦 1 袋につきトレーダーにかかる費用は 20 ドル + 2 ドル = 22 ドルです (輸送費を考慮に入れます)", "6": "小麦の袋はそれぞれ 30 ドルで販売され、1 袋あたり 30 ドル - 22 ドル = 8 ドルの利益が得られました。", "7": "合計 400 ドルの利益が得られたので、販売された袋の総数は 40 0ドル/ 8ドル= 50 袋です", "8": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = ['あるトレーダーは、1 袋あたり 20 ドルのレートで農家から小麦の袋を購入しています。', '1 袋を農場から倉庫まで運ぶのに 2 ドルかかり、', 'トレーダーがすべての袋をそれぞれ 30 ドルのレートで売り、合計 400 ドルの利益を上げた場合、']\nquestion = '彼は袋をいくつ売りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['あるトレーダーは、1 袋あたり 20 ドルのレートで農家から小麦の袋を購入しています。', '1 袋を農場から倉庫まで運ぶのに 2 ドルかかり、']\nnew_fact = infer_new_fact(selected) # '小麦 1 袋につきトレーダーにかかる費用は 20 ドル + 2 ドル = 22 ドルです (輸送費を考慮に入れます)'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トレーダーがすべての袋をそれぞれ 30 ドルのレートで売り、合計 400 ドルの利益を上げた場合、', '小麦 1 袋につきトレーダーにかかる費用は 20 ドル + 2 ドル = 22 ドルです (輸送費を考慮に入れます)']\nnew_fact = infer_new_fact(selected) # '小麦の袋はそれぞれ 30 ドルで販売され、1 袋あたり 30 ドル - 22 ドル = 8 ドルの利益が得られました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トレーダーがすべての袋をそれぞれ 30 ドルのレートで売り、合計 400 ドルの利益を上げた場合、', '小麦 1 袋につきトレーダーにかかる費用は 20 ドル + 2 ドル = 22 ドルです (輸送費を考慮に入れます)', '小麦の袋はそれぞれ 30 ドルで販売され、1 袋あたり 30 ドル - 22 ドル = 8 ドルの利益が得られました。']\nnew_fact = infer_new_fact(selected) # '合計 400 ドルの利益が得られたので、販売された袋の総数は 40 0ドル/ 8ドル= 50 袋です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 袋を農場から倉庫まで運ぶのに 2 ドルかかり、', 'トレーダーがすべての袋をそれぞれ 30 ドルのレートで売り、合計 400 ドルの利益を上げた場合、', '彼は袋をいくつ売りましたか？', '合計 400 ドルの利益が得られたので、販売された袋の総数は 40 0ドル/ 8ドル= 50 袋です']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_189_c0068c460f", "context": "", "options": [], "answer": "34", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3], "consequent": 7}, {"antecedents": [1, 6, 7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [4, 5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: They spent $20.25 - $4.50 = $15.75 on food.; sent3 -> int2: They spent $33 x 2 = $66 for the rides.; int1 & int2 & sent1 -> int3: They spent a total of $20.25 + $15.75 + $66 = $102.; int3 & sent1 -> int4: So each of them paid $102/3 = $34.; int4 & sent4 & sent5 -> int5: The answer is 34;", "textual_logical_units": {"1": "3 人の友人がフェアのチケット 3 枚に 20.25 ドルを費やしました。", "2": "また、食事代はチケット代よりも 4.50 ドル安価でした。", "3": "彼らはまた、1 回の乗車につき 33 ドルかかる 2 つの異なる乗り物に乗りました。", "4": "彼らがすべての費用を均等に分割することに合意した場合、", "5": "1 人あたりいくら支払いましたか？", "6": "彼らは食事に 20.25 ドル - 4.50 ドル = 15.75 ドルを費やしました。", "7": "彼らは乗り物に 33 ドル x 2 = 66 ドルを費やしました。", "8": "彼らは合計 20.25 ドル + 15.75 ドル + 66 ドル = 102 ドルを費やしました。", "9": "つまり、1 人あたり 102/3 ドル = 34 ドルを支払いました。", "10": "The answer is 34"}, "human_translated": true, "code_input": "####\nfacts = ['3 人の友人がフェアのチケット 3 枚に 20.25 ドルを費やしました。', 'また、食事代はチケット代よりも 4.50 ドル安価でした。', '彼らはまた、1 回の乗車につき 33 ドルかかる 2 つの異なる乗り物に乗りました。', '彼らがすべての費用を均等に分割することに合意した場合、']\nquestion = '1 人あたりいくら支払いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['3 人の友人がフェアのチケット 3 枚に 20.25 ドルを費やしました。', 'また、食事代はチケット代よりも 4.50 ドル安価でした。']\nnew_fact = infer_new_fact(selected) # '彼らは食事に 20.25 ドル - 4.50 ドル = 15.75 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らはまた、1 回の乗車につき 33 ドルかかる 2 つの異なる乗り物に乗りました。']\nnew_fact = infer_new_fact(selected) # '彼らは乗り物に 33 ドル x 2 = 66 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 人の友人がフェアのチケット 3 枚に 20.25 ドルを費やしました。', '彼らは食事に 20.25 ドル - 4.50 ドル = 15.75 ドルを費やしました。', '彼らは乗り物に 33 ドル x 2 = 66 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # '彼らは合計 20.25 ドル + 15.75 ドル + 66 ドル = 102 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 人の友人がフェアのチケット 3 枚に 20.25 ドルを費やしました。', '彼らは合計 20.25 ドル + 15.75 ドル + 66 ドル = 102 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'つまり、1 人あたり 102/3 ドル = 34 ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らがすべての費用を均等に分割することに合意した場合、', '1 人あたりいくら支払いましたか？', 'つまり、1 人あたり 102/3 ドル = 34 ドルを支払いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 34'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '34'"}
{"id": "GSM8K_190_4137f91436", "context": "", "options": [], "answer": "360", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: He is collecting peaches for 3*60=180 minutes; int1 & sent2 -> int2: So he can collect 180 * 2 = 360 peaches; int2 & sent3 -> int3: The answer is 360;", "textual_logical_units": {"1": "ジョンは 3 時間かけて桃を収穫します。", "2": "彼は 1 分間に 2 個の桃を収穫することができます。", "3": "彼は桃をいくつ収穫しましたか？", "4": "彼は 3 * 6 0= 180 分間、桃を収穫しています", "5": "つまり、彼は 180* 2 = 360 個の桃を収穫することができます", "6": "The answer is 360"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは 3 時間かけて桃を収穫します。', '彼は 1 分間に 2 個の桃を収穫することができます。']\nquestion = '彼は桃をいくつ収穫しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンは 3 時間かけて桃を収穫します。']\nnew_fact = infer_new_fact(selected) # '彼は 3 * 6 0= 180 分間、桃を収穫しています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 分間に 2 個の桃を収穫することができます。', '彼は 3 * 6 0= 180 分間、桃を収穫しています']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 180* 2 = 360 個の桃を収穫することができます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は桃をいくつ収穫しましたか？', 'つまり、彼は 180* 2 = 360 個の桃を収穫することができます']\nnew_fact = infer_new_fact(selected) # 'The answer is 360'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '360'"}
{"id": "GSM8K_191_127e4a8214", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [2, 3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The flock needs 35 pounds per week because 10 x 3.5 = 35; int1 & sent1 -> int2: They need 5 pounds per day because 35 / 7 = 5; int2 & sent2 & sent3 -> int3: The answer is 5;", "textual_logical_units": {"1": "アヒルは生きるために毎週 1.59 キログラムの昆虫を食べる必要があります。", "2": "アヒルの群れが 10 羽いる場合、", "3": "一日に何キログラムの昆虫が必要ですか？", "4": "10 x 1.59 = 15.9 なので、群れは 1 週間に 15.9 キログラムを必要とします", "5": "15.9/7 = 2.27 なので、1 日あたり 2.27 キログラム必要です", "6": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['アヒルは生きるために毎週 1.59 キログラムの昆虫を食べる必要があります。', 'アヒルの群れが 10 羽いる場合、']\nquestion = '一日に何キログラムの昆虫が必要ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['アヒルは生きるために毎週 1.59 キログラムの昆虫を食べる必要があります。', 'アヒルの群れが 10 羽いる場合、']\nnew_fact = infer_new_fact(selected) # '10 x 1.59 = 15.9 なので、群れは 1 週間に 15.9 キログラムを必要とします'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アヒルは生きるために毎週 1.59 キログラムの昆虫を食べる必要があります。', '10 x 1.59 = 15.9 なので、群れは 1 週間に 15.9 キログラムを必要とします']\nnew_fact = infer_new_fact(selected) # '15.9/7 = 2.27 なので、1 日あたり 2.27 キログラム必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アヒルの群れが 10 羽いる場合、', '一日に何キログラムの昆虫が必要ですか？', '15.9/7 = 2.27 なので、1 日あたり 2.27 キログラム必要です']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_192_8c741df1ea", "context": "", "options": [], "answer": "91", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He gets 10-2=8 new trees a year; int1 & sent1 -> int2: After 10 years he has 8*10=80 new trees; int2 & sent3 -> int3: So he had 80+50=130 trees; int3 & sent4 -> int4: He lost 130*.3=39 trees; int3 & int4 -> int5: That means he had 130-39=91 trees; int5 & sent5 -> int6: The answer is 91;", "textual_logical_units": {"1": "トムは年に 10 本の木を植えます。", "2": "また、彼は毎年 2 本の木を切り倒します。", "3": "最初は 50 本の木があります。", "4": "10 年後、30% の木が枯れます。", "5": "彼には何本の木が残っていますか。", "6": "彼は年に 10 - 2 = 8 本の新しい木を手に入れます", "7": "10 年後、彼は 8 * 10 = 80 本の新しい木を手に入れます", "8": "つまり、彼は 80 + 50 = 130 本の木を手に入れたことになります", "9": "彼は 130 *.3 = 39 本の木を失いました", "10": "つまり、彼には 130 - 39 = 91 本の木が残ったことになります", "11": "The answer is 91"}, "human_translated": true, "code_input": "####\nfacts = ['トムは年に 10 本の木を植えます。', 'また、彼は毎年 2 本の木を切り倒します。', '最初は 50 本の木があります。', '10 年後、30% の木が枯れます。']\nquestion = '彼には何本の木が残っていますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['トムは年に 10 本の木を植えます。', 'また、彼は毎年 2 本の木を切り倒します。']\nnew_fact = infer_new_fact(selected) # '彼は年に 10 - 2 = 8 本の新しい木を手に入れます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['トムは年に 10 本の木を植えます。', '彼は年に 10 - 2 = 8 本の新しい木を手に入れます']\nnew_fact = infer_new_fact(selected) # '10 年後、彼は 8 * 10 = 80 本の新しい木を手に入れます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初は 50 本の木があります。', '10 年後、彼は 8 * 10 = 80 本の新しい木を手に入れます']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は 80 + 50 = 130 本の木を手に入れたことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10 年後、30% の木が枯れます。', 'つまり、彼は 80 + 50 = 130 本の木を手に入れたことになります']\nnew_fact = infer_new_fact(selected) # '彼は 130 *.3 = 39 本の木を失いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、彼は 80 + 50 = 130 本の木を手に入れたことになります', '彼は 130 *.3 = 39 本の木を失いました']\nnew_fact = infer_new_fact(selected) # 'つまり、彼には 130 - 39 = 91 本の木が残ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼には何本の木が残っていますか。', 'つまり、彼には 130 - 39 = 91 本の木が残ったことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 91'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '91'"}
{"id": "GSM8K_193_bdd6ee8d04", "context": "", "options": [], "answer": "24", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [6, 8, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: On Saturday, one third of the original 18 pink flamingos were removed and painted white: 18*1/3=6 white flamingos.; int1 -> int2: This left 18 pink - 6 = 12 pink flamingos.; int1 & int2 & sent6 -> int3: On Sunday, 18 more pink flamingos were added, for a total of 12 + 18 = 30 pink flamingos on the front lawn.; int1 & int2 & int3 -> int4: Altogether, there were 30 pink and 6 white flamingos on the lawn, so there were 30 pink - 6 white =24 more pink flamingos.; int4 & sent7 -> int5: The answer is 24;", "textual_logical_units": {"1": "スーは楽しい地域に住んでいます。", "2": "ある週末、近所の人たちはスーにいたずらをすることにしました。", "3": "金曜日の朝、近所の人たちはスーの家の前庭に 18 匹のピンクのプラスチックのフラミンゴを置きました。", "4": "土曜日の朝、近所の人たちはフラミンゴの 3 分の 1 を持ち帰って白く塗り、", "5": "新しく塗った白いフラミンゴをスーの家の前庭に戻しました。", "6": "そして、日曜日の朝に、さらに 18 個のピンクのプラスチックのフラミンゴをコレクションに追加しました。", "7": "日曜日の正午に置かれていたピンクのプラスチックのフラミンゴは、白いプラスチックフラミンゴより何匹多かったでしょうか？", "8": "土曜日に、元の 18 匹のピンクのフラミンゴの 3 分の 1 が取り去られ、白く塗られました。 18 * 1/3 = 6 個の白いフラミンゴ。", "9": "これで、ピンク 18 個 -6 = 12 個のピンクのフラミンゴが残りました。", "10": "日曜日には、さらに 18 個のピンクのフラミンゴが追加され、前庭の芝生には合計 12 + 18 = 30 個のピンクのフラミンゴが置かれました。", "11": "芝生には全部で 30 個のピンクのフラミンゴと 6 個の白いフラミンゴがあったので、ピンク 30 個 - 白 6個 = ピンクのフラミンゴが 24 個多くなりました。", "12": "The answer is 24"}, "human_translated": true, "code_input": "####\nfacts = [ 'スーは楽しい地域に住んでいます。',\n  'ある週末、近所の人たちはスーにいたずらをすることにしました。',\n  '金曜日の朝、近所の人たちはスーの家の前庭に 18 匹のピンクのプラスチックのフラミンゴを置きました。',\n  '土曜日の朝、近所の人たちはフラミンゴの 3 分の 1 を持ち帰って白く塗り、',\n  '新しく塗った白いフラミンゴをスーの家の前庭に戻しました。',\n  'そして、日曜日の朝に、さらに 18 個のピンクのプラスチックのフラミンゴをコレクションに追加しました。']\nquestion = '日曜日の正午に置かれていたピンクのプラスチックのフラミンゴは、白いプラスチックフラミンゴより何匹多かったでしょうか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['金曜日の朝、近所の人たちはスーの家の前庭に 18 匹のピンクのプラスチックのフラミンゴを置きました。', '土曜日の朝、近所の人たちはフラミンゴの 3 分の 1 を持ち帰って白く塗り、']\nnew_fact = infer_new_fact(selected) # '土曜日に、元の 18 匹のピンクのフラミンゴの 3 分の 1 が取り去られ、白く塗られました。 18 * 1/3 = 6 個の白いフラミンゴ。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['土曜日に、元の 18 匹のピンクのフラミンゴの 3 分の 1 が取り去られ、白く塗られました。 18 * 1/3 = 6 個の白いフラミンゴ。']\nnew_fact = infer_new_fact(selected) # 'これで、ピンク 18 個 -6 = 12 個のピンクのフラミンゴが残りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['そして、日曜日の朝に、さらに 18 個のピンクのプラスチックのフラミンゴをコレクションに追加しました。', '土曜日に、元の 18 匹のピンクのフラミンゴの 3 分の 1 が取り去られ、白く塗られました。 18 * 1/3 = 6 個の白いフラミンゴ。', 'これで、ピンク 18 個 -6 = 12 個のピンクのフラミンゴが残りました。']\nnew_fact = infer_new_fact(selected) # '日曜日には、さらに 18 個のピンクのフラミンゴが追加され、前庭の芝生には合計 12 + 18 = 30 個のピンクのフラミンゴが置かれました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['土曜日に、元の 18 匹のピンクのフラミンゴの 3 分の 1 が取り去られ、白く塗られました。 18 * 1/3 = 6 個の白いフラミンゴ。', 'これで、ピンク 18 個 -6 = 12 個のピンクのフラミンゴが残りました。', '日曜日には、さらに 18 個のピンクのフラミンゴが追加され、前庭の芝生には合計 12 + 18 = 30 個のピンクのフラミンゴが置かれました。']\nnew_fact = infer_new_fact(selected) # '芝生には全部で 30 個のピンクのフラミンゴと 6 個の白いフラミンゴがあったので、ピンク 30 個 - 白 6個 = ピンクのフラミンゴが 24 個多くなりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['日曜日の正午に置かれていたピンクのプラスチックのフラミンゴは、白いプラスチックフラミンゴより何匹多かったでしょうか？', '芝生には全部で 30 個のピンクのフラミンゴと 6 個の白いフラミンゴがあったので、ピンク 30 個 - 白 6個 = ピンクのフラミンゴが 24 個多くなりました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 24'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '24'"}
{"id": "GSM8K_194_18825f334d", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Violetta is going to pay 5 * 2 = $10 for the crayons she wants.; int1 & sent3 -> int2: If she pays $20, she will get 20 - 10 = $10 of change.; int2 & sent5 -> int3: The answer is 10;", "textual_logical_units": {"1": "ヴィオレッタは新しいクレヨンを買いたがっています。", "2": "彼女には 5 種類の色が必要で", "3": "購入のために 20 ドルを用意しました。", "4": "クレヨンは 1 本 2 ドルです。", "5": "彼女はお釣りをいくら受け取りますか？", "6": "ヴィオレッタは、欲しいクレヨンに 5 x 2 = 10 ドルを支払う予定です。", "7": "彼女が 20 ドルを支払った場合、20 - 10 = 10 ドルのお釣りを受け取ります。", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['ヴィオレッタは新しいクレヨンを買いたがっています。', '彼女には 5 種類の色が必要で', '購入のために 20 ドルを用意しました。', 'クレヨンは 1 本 2 ドルです。']\nquestion = '彼女はお釣りをいくら受け取りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女には 5 種類の色が必要で', 'クレヨンは 1 本 2 ドルです。']\nnew_fact = infer_new_fact(selected) # 'ヴィオレッタは、欲しいクレヨンに 5 x 2 = 10 ドルを支払う予定です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['購入のために 20 ドルを用意しました。', 'ヴィオレッタは、欲しいクレヨンに 5 x 2 = 10 ドルを支払う予定です。']\nnew_fact = infer_new_fact(selected) # '彼女が 20 ドルを支払った場合、20 - 10 = 10 ドルのお釣りを受け取ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はお釣りをいくら受け取りますか？', '彼女が 20 ドルを支払った場合、20 - 10 = 10 ドルのお釣りを受け取ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_195_98efe060af", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [3, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A pen costs $1.20 + $0.30 = $1.50.; int1 & sent3 -> int2: So, 8 pens cost $1.50 x 8 = $12.; int2 & sent3 -> int3: The answer is 12;", "textual_logical_units": {"1": "ペンの価格は、鉛筆と消しゴムを合わせたものと同じくらいです。", "2": "鉛筆は 1.20 ドル、消しゴムは 0.30 ドルです。", "3": "ペン 8 本でいくらかかりますか？", "4": "1 本のペンの価格は 1.20 ドル + 0.30 ドル = 1.50 ドルです。", "5": "つまり、8 本のペンの価格は 1.50 ドル x 8 = 12 ドルです。", "6": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = ['ペンの価格は、鉛筆と消しゴムを合わせたものと同じくらいです。', '鉛筆は 1.20 ドル、消しゴムは 0.30 ドルです。']\nquestion = 'ペン 8 本でいくらかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ペンの価格は、鉛筆と消しゴムを合わせたものと同じくらいです。', '鉛筆は 1.20 ドル、消しゴムは 0.30 ドルです。']\nnew_fact = infer_new_fact(selected) # '1 本のペンの価格は 1.20 ドル + 0.30 ドル = 1.50 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ペン 8 本でいくらかかりますか？', '1 本のペンの価格は 1.20 ドル + 0.30 ドル = 1.50 ドルです。']\nnew_fact = infer_new_fact(selected) # 'つまり、8 本のペンの価格は 1.50 ドル x 8 = 12 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ペン 8 本でいくらかかりますか？', 'つまり、8 本のペンの価格は 1.50 ドル x 8 = 12 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_196_23d1fe5901", "context": "", "options": [], "answer": "120", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The restaurants need 40 * 2 = 80 lbs. of carrots.; int1 & sent1 -> int2: So 200 - 80 = 120 lbs. of carrots will not be used.; int2 & sent3 -> int3: The answer is 120;", "textual_logical_units": {"1": "ある都市で、40 のレストランに 90.72 キログラムのニンジンが配られることになっています。", "2": "各レストランには 0.91 キログラムのニンジンが配られます。", "3": "何キログラムのニンジンが余りますか？", "4": "レストランには 40 * 0.91 = 36.29 キログラムのニンジンが必要です。", "5": "したがって、90.72 - 36.29 = 54.43 キログラムのニンジンが余ります。", "6": "The answer is 120"}, "human_translated": true, "code_input": "####\nfacts = ['ある都市で、40 のレストランに 90.72 キログラムのニンジンが配られることになっています。', '各レストランには 0.91 キログラムのニンジンが配られます。']\nquestion = '何キログラムのニンジンが余りますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ある都市で、40 のレストランに 90.72 キログラムのニンジンが配られることになっています。', '各レストランには 0.91 キログラムのニンジンが配られます。']\nnew_fact = infer_new_fact(selected) # 'レストランには 40 * 0.91 = 36.29 キログラムのニンジンが必要です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ある都市で、40 のレストランに 90.72 キログラムのニンジンが配られることになっています。', 'レストランには 40 * 0.91 = 36.29 キログラムのニンジンが必要です。']\nnew_fact = infer_new_fact(selected) # 'したがって、90.72 - 36.29 = 54.43 キログラムのニンジンが余ります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['何キログラムのニンジンが余りますか？', 'したがって、90.72 - 36.29 = 54.43 キログラムのニンジンが余ります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 120'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '120'"}
{"id": "GSM8K_197_9b62a1e506", "context": "", "options": [], "answer": "6277", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent3 -> int1: The total number of adults is 8417 + 9092 = 17509; int1 & sent2 -> int2: Thus the number of children is 23786 - 17509 = 6277; int2 & sent5 -> int3: The answer is 6277;", "textual_logical_units": {"1": "ソーダ市には、", "2": "正確には 23786 人の住民がいます。", "3": "これには 8417 人の男性と 9,092 人の女性が含まれています。", "4": "残りの人口は子供で構成されています。", "5": "ソーダには何人の子供がいますか？", "6": "大人の総数は 8,417 + 9,092 = 17,509 人です", "7": "したがって、子供の数は 23,786 - 17,509 = 6,277 人になります", "8": "The answer is 6277"}, "human_translated": true, "code_input": "####\nfacts = ['ソーダ市には、', '正確には 23786 人の住民がいます。', 'これには 8417 人の男性と 9,092 人の女性が含まれています。', '残りの人口は子供で構成されています。']\nquestion = 'ソーダには何人の子供がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['これには 8417 人の男性と 9,092 人の女性が含まれています。']\nnew_fact = infer_new_fact(selected) # '大人の総数は 8,417 + 9,092 = 17,509 人です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['正確には 23786 人の住民がいます。', '大人の総数は 8,417 + 9,092 = 17,509 人です']\nnew_fact = infer_new_fact(selected) # 'したがって、子供の数は 23,786 - 17,509 = 6,277 人になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ソーダには何人の子供がいますか？', 'したがって、子供の数は 23,786 - 17,509 = 6,277 人になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 6277'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6277'"}
{"id": "GSM8K_198_0524c63e39", "context": "", "options": [], "answer": "320", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 6, 7, 8], "consequent": 9}, {"antecedents": [1, 6, 7, 8, 9], "consequent": 10}, {"antecedents": [5, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: In the first month, Elaine collected 3*20= 60 pokemon cards.; int1 & sent3 -> int2: In the second month, she collected 60-20 = 40 cards.; int1 & int2 -> int3: After the two months, the new pokemon cards she'd collected is 40+60 = 100; int1 & int2 & int3 & sent4 -> int4: The number of cards in the third month is twice the combined number in the first and second month, which totals 2*100 = 200 pokemon cards.; int1 & int2 & int3 & int4 & sent1 -> int5: In total, Elaine has 20 cards she initially had+100 cards collected in the first and second month +200 cards collected in the third month = 320 cards; int5 & sent5 -> int6: The answer is 320;", "textual_logical_units": {"1": "エレインは当初、20 枚のポケモンカードを持っていました。", "2": "1 か月後、彼女はその 3 倍の数を集めました。", "3": "2 か月目には、1 か月目に集めたカードよりも 20 枚少ないカードを集めました。", "4": "3 か月目には、1 か月目と 2 か月目に集めたポケモンカードを合わせた数の 2 倍を集めました。", "5": "彼女は今全部で何枚のポケモンカードを持っていますか？", "6": "最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。", "7": "2 か月目に、彼女は 60 - 20 = 40 枚のカードを集めました。", "8": "2 か月後、彼女が集めた新しいポケモンカードは 40 + 60 = 100 枚になりました", "9": "3 か月目のカードの数は、1 か月目と 2 か月目を合わせた数の 2 倍で、合計で 2 * 100 = 200 枚のポケモンカードになります。", "10": "合計すると、エレインは最初に持っていたカード 20 枚 + 1 か月目と 2 か月目に集めたカード 100 枚 + 3 か月目に集めたカード 200 枚 = 320 枚のカードを持っています。", "11": "The answer is 320"}, "human_translated": true, "code_input": "####\nfacts = ['エレインは当初、20 枚のポケモンカードを持っていました。', '1 か月後、彼女はその 3 倍の数を集めました。', '2 か月目には、1 か月目に集めたカードよりも 20 枚少ないカードを集めました。', '3 か月目には、1 か月目と 2 か月目に集めたポケモンカードを合わせた数の 2 倍を集めました。']\nquestion = '彼女は今全部で何枚のポケモンカードを持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['エレインは当初、20 枚のポケモンカードを持っていました。', '1 か月後、彼女はその 3 倍の数を集めました。']\nnew_fact = infer_new_fact(selected) # '最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 か月目には、1 か月目に集めたカードよりも 20 枚少ないカードを集めました。', '最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。']\nnew_fact = infer_new_fact(selected) # '2 か月目に、彼女は 60 - 20 = 40 枚のカードを集めました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。', '2 か月目に、彼女は 60 - 20 = 40 枚のカードを集めました。']\nnew_fact = infer_new_fact(selected) # '2 か月後、彼女が集めた新しいポケモンカードは 40 + 60 = 100 枚になりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 か月目には、1 か月目と 2 か月目に集めたポケモンカードを合わせた数の 2 倍を集めました。', '最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。', '2 か月目に、彼女は 60 - 20 = 40 枚のカードを集めました。', '2 か月後、彼女が集めた新しいポケモンカードは 40 + 60 = 100 枚になりました']\nnew_fact = infer_new_fact(selected) # '3 か月目のカードの数は、1 か月目と 2 か月目を合わせた数の 2 倍で、合計で 2 * 100 = 200 枚のポケモンカードになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エレインは当初、20 枚のポケモンカードを持っていました。', '最初の月に、エレインは 3 * 20 = 60 枚のポケモンカードを集めました。', '2 か月目に、彼女は 60 - 20 = 40 枚のカードを集めました。', '2 か月後、彼女が集めた新しいポケモンカードは 40 + 60 = 100 枚になりました', '3 か月目のカードの数は、1 か月目と 2 か月目を合わせた数の 2 倍で、合計で 2 * 100 = 200 枚のポケモンカードになります。']\nnew_fact = infer_new_fact(selected) # '合計すると、エレインは最初に持っていたカード 20 枚 + 1 か月目と 2 か月目に集めたカード 100 枚 + 3 か月目に集めたカード 200 枚 = 320 枚のカードを持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は今全部で何枚のポケモンカードを持っていますか？', '合計すると、エレインは最初に持っていたカード 20 枚 + 1 か月目と 2 か月目に集めたカード 100 枚 + 3 か月目に集めたカード 200 枚 = 320 枚のカードを持っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 320'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '320'"}
{"id": "GSM8K_199_d34b138877", "context": "", "options": [], "answer": "7500", "reasoning_graph_edges": [{"antecedents": [2, 5], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [4, 6], "consequent": 10}, {"antecedents": [8, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent5 -> int1: Since Mark edits an equal number of sentences for each publisher, he edits 1000 / 2 = 500 sentences for each of them.; int1 & sent5 -> int2: From Publisher A, he earns 5 cents per sentence * 500 sentences = 2500 cents.; sent4 & sent6 -> int3: Since Publisher B pays Mark twice as much, he earns 5 * 2 = 10 cents per sentence from Publisher B.; int1 & int3 -> int4: Thus, he earns 10 cents per sentence * 500 sentences = 5000 cents from publisher B.; int2 & int4 -> int5: Thus, he earns 2500 + 5000 = 7500 cents in total.; int5 & sent7 -> int6: The answer is 7500;", "textual_logical_units": {"1": "マークはコピーエディターです。", "2": "彼は毎週同じ数の文章を 2 つの異なる出版社で編集し、", "3": "それぞれの出版社から一文ごとに異なる報酬が支払われます。", "4": "出版社 B は、出版社A が支払う金額の 2 倍をマークに支払います。", "5": "マークは毎週、合計 1000 の文章を編集し、", "6": "出版社 A は彼に 1 文あたり 5 セントを支払います。", "7": "マークは 1 週間に (セント単位で) いくら稼いでいますか？", "8": "マークは各出版社で同じ数の文章を編集するので、各出版社で 1,000/2 = 500 の文章を編集します。", "9": "彼は出版社 A から、1 文 あたり 5 セント * 500 文 = 2,500 セントを受け取っています。", "10": "出版社 B はマークに 2 倍の金額を支払うので、彼は出版社 B から 1 文あたり 5 * 2 = 10 セントを受け取っています。", "11": "したがって、彼は出版社 B から1 文あたり 10 セント * 500文 = 5,000 セントを受け取っています。", "12": "したがって、彼は合計で 2,500 + 5,000 = 7,500 セントを稼いでいます。", "13": "The answer is 7500"}, "human_translated": true, "code_input": "####\nfacts = [ 'マークはコピーエディターです。',\n  '彼は毎週同じ数の文章を 2 つの異なる出版社で編集し、',\n  'それぞれの出版社から一文ごとに異なる報酬が支払われます。',\n  '出版社 B は、出版社A が支払う金額の 2 倍をマークに支払います。',\n  'マークは毎週、合計 1000 の文章を編集し、',\n  '出版社 A は彼に 1 文あたり 5 セントを支払います。']\nquestion = 'マークは 1 週間に (セント単位で) いくら稼いでいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は毎週同じ数の文章を 2 つの異なる出版社で編集し、', 'マークは毎週、合計 1000 の文章を編集し、']\nnew_fact = infer_new_fact(selected) # 'マークは各出版社で同じ数の文章を編集するので、各出版社で 1,000/2 = 500 の文章を編集します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは毎週、合計 1000 の文章を編集し、', 'マークは各出版社で同じ数の文章を編集するので、各出版社で 1,000/2 = 500 の文章を編集します。']\nnew_fact = infer_new_fact(selected) # '彼は出版社 A から、1 文 あたり 5 セント * 500 文 = 2,500 セントを受け取っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['出版社 B は、出版社A が支払う金額の 2 倍をマークに支払います。', '出版社 A は彼に 1 文あたり 5 セントを支払います。']\nnew_fact = infer_new_fact(selected) # '出版社 B はマークに 2 倍の金額を支払うので、彼は出版社 B から 1 文あたり 5 * 2 = 10 セントを受け取っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは各出版社で同じ数の文章を編集するので、各出版社で 1,000/2 = 500 の文章を編集します。', '出版社 B はマークに 2 倍の金額を支払うので、彼は出版社 B から 1 文あたり 5 * 2 = 10 セントを受け取っています。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は出版社 B から1 文あたり 10 セント * 500文 = 5,000 セントを受け取っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は出版社 A から、1 文 あたり 5 セント * 500 文 = 2,500 セントを受け取っています。', 'したがって、彼は出版社 B から1 文あたり 10 セント * 500文 = 5,000 セントを受け取っています。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は合計で 2,500 + 5,000 = 7,500 セントを稼いでいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは 1 週間に (セント単位で) いくら稼いでいますか？', 'したがって、彼は合計で 2,500 + 5,000 = 7,500 セントを稼いでいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 7500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7500'"}
{"id": "GSM8K_200_141aaef0a6", "context": "", "options": [], "answer": "55", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 6}, {"antecedents": [3, 4], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Baldur gets 5 x 5 = 25 liters of water in the morning.; sent3 & sent4 -> int2: He gets 6 x 5 = 30 liters of water in the afternoon.; int1 & int2 -> int3: Therefore, the total liters of water he gets every day is 30 + 25 = 55.; int3 & sent4 & sent5 -> int4: The answer is 55;", "textual_logical_units": {"1": "バルダーは井戸から水を汲みます。", "2": "彼は毎朝バケツ 5 杯、", "3": "毎日午後にバケツ 6杯 の水を汲みます。", "4": "1 つのバケツに 5 リットルの水が入っている場合、", "5": "彼は毎日何リットルの水を汲んでいますか?", "6": "バルダーは朝に 5 x 5 = 25 リットルの水を汲みます。", "7": "彼は午後に 6 x 5 = 30 リットルの水を汲みます。", "8": "したがって、彼が毎日汲む水の総量は 30 + 25 = 55 リットルです。", "9": "The answer is 55"}, "human_translated": true, "code_input": "####\nfacts = ['バルダーは井戸から水を汲みます。', '彼は毎朝バケツ 5 杯、', '毎日午後にバケツ 6杯 の水を汲みます。', '1 つのバケツに 5 リットルの水が入っている場合、']\nquestion = '彼は毎日何リットルの水を汲んでいますか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は毎朝バケツ 5 杯、', '1 つのバケツに 5 リットルの水が入っている場合、']\nnew_fact = infer_new_fact(selected) # 'バルダーは朝に 5 x 5 = 25 リットルの水を汲みます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['毎日午後にバケツ 6杯 の水を汲みます。', '1 つのバケツに 5 リットルの水が入っている場合、']\nnew_fact = infer_new_fact(selected) # '彼は午後に 6 x 5 = 30 リットルの水を汲みます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バルダーは朝に 5 x 5 = 25 リットルの水を汲みます。', '彼は午後に 6 x 5 = 30 リットルの水を汲みます。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼が毎日汲む水の総量は 30 + 25 = 55 リットルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 つのバケツに 5 リットルの水が入っている場合、', '彼は毎日何リットルの水を汲んでいますか?', 'したがって、彼が毎日汲む水の総量は 30 + 25 = 55 リットルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 55'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '55'"}
{"id": "GSM8K_201_3e73cccbdc", "context": "", "options": [], "answer": "114200", "reasoning_graph_edges": [{"antecedents": [4, 5], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [4, 5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent4 & sent5 -> int1: He makes 2000*52=$104,000 a year; int1 & sent3 -> int2: So the raise is worth .05*104,000=$5200; int1 & int2 -> int3: So he makes 104,000+5200=$109,200 from his salary; int3 & sent2 -> int4: So in total he made 109,200+5,000=$114,200; int4 & sent4 & sent5 & sent6 -> int5: The answer is 114,200;", "textual_logical_units": {"1": "ジョンは仕事で賞をもらいました。", "2": "この賞では 1 回限り 5,000 ドルの金銭的報酬と", "3": "5% の昇給が与えられます。", "4": "彼が 1 年の間に毎週 2,000 ドルを稼いでいて、", "5": "その年の初日に賞をもらった場合、", "6": "その年に彼はいくら稼いだでしょうか?", "7": "彼は 1 年に 2,000 * 52 = 10 万 4,000 ドルを稼いでいます", "8": "したがって、昇給額は 0.05 * 10 万 4,000 = 5,200 ドルです。", "9": "つまり、彼は給料として 10 万 4,000 + 5,200 = 10 万 9,200 ドルを受け取っています", "10": "つまり、合計で 10 万 9,200 + 5,000 = 11 万 4,200 ドルを稼いだことになります", "11": "The answer is 114,200"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは仕事で賞をもらいました。', 'この賞では 1 回限り 5,000 ドルの金銭的報酬と', '5% の昇給が与えられます。', '彼が 1 年の間に毎週 2,000 ドルを稼いでいて、', 'その年の初日に賞をもらった場合、']\nquestion = 'その年に彼はいくら稼いだでしょうか?'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼が 1 年の間に毎週 2,000 ドルを稼いでいて、', 'その年の初日に賞をもらった場合、']\nnew_fact = infer_new_fact(selected) # '彼は 1 年に 2,000 * 52 = 10 万 4,000 ドルを稼いでいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5% の昇給が与えられます。', '彼は 1 年に 2,000 * 52 = 10 万 4,000 ドルを稼いでいます']\nnew_fact = infer_new_fact(selected) # 'したがって、昇給額は 0.05 * 10 万 4,000 = 5,200 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 年に 2,000 * 52 = 10 万 4,000 ドルを稼いでいます', 'したがって、昇給額は 0.05 * 10 万 4,000 = 5,200 ドルです。']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は給料として 10 万 4,000 + 5,200 = 10 万 9,200 ドルを受け取っています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['この賞では 1 回限り 5,000 ドルの金銭的報酬と', 'つまり、彼は給料として 10 万 4,000 + 5,200 = 10 万 9,200 ドルを受け取っています']\nnew_fact = infer_new_fact(selected) # 'つまり、合計で 10 万 9,200 + 5,000 = 11 万 4,200 ドルを稼いだことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が 1 年の間に毎週 2,000 ドルを稼いでいて、', 'その年の初日に賞をもらった場合、', 'その年に彼はいくら稼いだでしょうか?', 'つまり、合計で 10 万 9,200 + 5,000 = 11 万 4,200 ドルを稼いだことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 114,200'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '114200'"}
{"id": "GSM8K_202_60e1a5ff24", "context": "", "options": [], "answer": "100", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If each acre produces 5 tons of grapes per year, then her ten-acre farm produces 10*5=50 tons of grapes per year.; int1 & sent3 -> int2: If each ton of grapes makes 2 barrels of wine, then 50 tons makes 2*50=100 barrels of wine per year.; int2 & sent4 -> int3: The answer is 100;", "textual_logical_units": {"1": "ジョシーは 10 エーカーの農場でブドウを栽培しています。", "2": "1 エーカーあたり年間 5 トンのブドウが生産され、", "3": "ブドウ 1 トンにつき 2 バレルのワインが造られます", "4": "彼女の農場では年間何バレルのワインが生産されていますか？", "5": "1 エーカーあたり年間 5 トンのブドウが生産される場合、彼女の 10 エーカーの農場では年間 10 * 5 = 50 トンのブドウが生産されます。", "6": "ぶどう 1 トンにつき 2 バレルのワインが造られるとすると、50 トンで年間 2 * 50 = 100 バレルのワインが造られます。", "7": "The answer is 100"}, "human_translated": true, "code_input": "####\nfacts = ['ジョシーは 10 エーカーの農場でブドウを栽培しています。', '1 エーカーあたり年間 5 トンのブドウが生産され、', 'ブドウ 1 トンにつき 2 バレルのワインが造られます']\nquestion = '彼女の農場では年間何バレルのワインが生産されていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョシーは 10 エーカーの農場でブドウを栽培しています。', '1 エーカーあたり年間 5 トンのブドウが生産され、']\nnew_fact = infer_new_fact(selected) # '1 エーカーあたり年間 5 トンのブドウが生産される場合、彼女の 10 エーカーの農場では年間 10 * 5 = 50 トンのブドウが生産されます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブドウ 1 トンにつき 2 バレルのワインが造られます', '1 エーカーあたり年間 5 トンのブドウが生産される場合、彼女の 10 エーカーの農場では年間 10 * 5 = 50 トンのブドウが生産されます。']\nnew_fact = infer_new_fact(selected) # 'ぶどう 1 トンにつき 2 バレルのワインが造られるとすると、50 トンで年間 2 * 50 = 100 バレルのワインが造られます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の農場では年間何バレルのワインが生産されていますか？', 'ぶどう 1 トンにつき 2 バレルのワインが造られるとすると、50 トンで年間 2 * 50 = 100 バレルのワインが造られます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 100'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '100'"}
{"id": "GSM8K_203_fe330c480f", "context": "", "options": [], "answer": "31", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [7, 9, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: His 2-slice sandwiches used 2 * 7 = 14 slices of cheese for all 7 days of the week.; sent3 & sent4 -> int2: His cheese and egg omelets used one more slice than his sandwiches, so they used 2 + 1 = 3 slices of cheese each.; int2 & sent4 -> int3: He made 3 omelets, so they used 3 * 3 = 9 slices of cheese.; int1 & int3 & sent7 -> int4: Carl’s sandwiches, omelets, and macaroni used 14 + 9 + 8 = 31 slices of cheese in all.; int4 & sent8 -> int5: The answer is 31;", "textual_logical_units": {"1": "カールの好きな食べ物はチーズです。", "2": "彼は今週、毎日のランチでサンドイッチを食べ", "3": "サンドイッチ 1 切れに 2 枚のチーズを使いました。", "4": "彼は週に 3 日、朝食にチーズと卵のオムレツを食べました。オムレツ 1 つには、サンドイッチ 1 切れあたりの枚数よりも 1 枚多いチーズを使いました。", "5": "彼は一週間に何回か夕食で食べられるように", "6": "マカロニとチーズを大皿に盛り、", "7": "その中に 8 枚のチーズを使いました。", "8": "彼はチーズを何枚使いましたか？", "9": "2 切れのサンドイッチには、週 7 日間毎日 2 x 7 = 14 枚のチーズが使用されました。", "10": "チーズと卵のオムレツには、サンドイッチよりも 1 枚多く使ったので、それぞれ 2 + 1 = 3 枚のチーズを使ったことになります。", "11": "彼はオムレツを 3 つ作ったので、 3 * 3 = 9 枚のチーズを使いました。", "12": "カールのサンドイッチ、オムレツ、マカロニには、全部で 14 + 9 + 8 = 31 枚のチーズが使用されました。", "13": "The answer is 31"}, "human_translated": true, "code_input": "####\nfacts = [ 'カールの好きな食べ物はチーズです。',\n  '彼は今週、毎日のランチでサンドイッチを食べ',\n  'サンドイッチ 1 切れに 2 枚のチーズを使いました。',\n  '彼は週に 3 日、朝食にチーズと卵のオムレツを食べました。オムレツ 1 つには、サンドイッチ 1 切れあたりの枚数よりも 1 枚多いチーズを使いました。',\n  '彼は一週間に何回か夕食で食べられるように',\n  'マカロニとチーズを大皿に盛り、',\n  'その中に 8 枚のチーズを使いました。']\nquestion = '彼はチーズを何枚使いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は今週、毎日のランチでサンドイッチを食べ', 'サンドイッチ 1 切れに 2 枚のチーズを使いました。']\nnew_fact = infer_new_fact(selected) # '2 切れのサンドイッチには、週 7 日間毎日 2 x 7 = 14 枚のチーズが使用されました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サンドイッチ 1 切れに 2 枚のチーズを使いました。', '彼は週に 3 日、朝食にチーズと卵のオムレツを食べました。オムレツ 1 つには、サンドイッチ 1 切れあたりの枚数よりも 1 枚多いチーズを使いました。']\nnew_fact = infer_new_fact(selected) # 'チーズと卵のオムレツには、サンドイッチよりも 1 枚多く使ったので、それぞれ 2 + 1 = 3 枚のチーズを使ったことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は週に 3 日、朝食にチーズと卵のオムレツを食べました。オムレツ 1 つには、サンドイッチ 1 切れあたりの枚数よりも 1 枚多いチーズを使いました。', 'チーズと卵のオムレツには、サンドイッチよりも 1 枚多く使ったので、それぞれ 2 + 1 = 3 枚のチーズを使ったことになります。']\nnew_fact = infer_new_fact(selected) # '彼はオムレツを 3 つ作ったので、 3 * 3 = 9 枚のチーズを使いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その中に 8 枚のチーズを使いました。', '2 切れのサンドイッチには、週 7 日間毎日 2 x 7 = 14 枚のチーズが使用されました。', '彼はオムレツを 3 つ作ったので、 3 * 3 = 9 枚のチーズを使いました。']\nnew_fact = infer_new_fact(selected) # 'カールのサンドイッチ、オムレツ、マカロニには、全部で 14 + 9 + 8 = 31 枚のチーズが使用されました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はチーズを何枚使いましたか？', 'カールのサンドイッチ、オムレツ、マカロニには、全部で 14 + 9 + 8 = 31 枚のチーズが使用されました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 31'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '31'"}
{"id": "GSM8K_204_2355a6acd6", "context": "", "options": [], "answer": "98", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [3, 4], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: Janet previously had 22 + 10 = 32 pens.; sent2 & sent4 -> int2: The number of blue pens is 6 × 9 = 54.; sent3 & sent4 -> int3: The number of red pens is 2 × 6 = 12.; int1 & int2 & int3 -> int4: Janet has 32 + 54 + 12 = 98 pens now.; sent1 & sent6 -> int5: The answer is 98;", "textual_logical_units": {"1": "ジャネットは緑のペンを 22 本と黄色のペンを 10 本持っていました。", "2": "その後、彼女は青いペンを 6 袋と", "3": "赤いペンを 2 袋買いました。", "4": "青い袋にはそれぞれ 9 本のペンが入っていて、", "5": "赤い袋にはそれぞれ 6 本のペンが入っています。", "6": "ジャネットは今何本のペンを持っていますか？", "7": "ジャネットは以前、22 + 10 = 32 本のペンを持っていました。", "8": "青いペンの数は 6 × 9 = 54 本です。", "9": "赤いペンの数は 2 × 6 = 12 本です。", "10": "ジャネットは現在、32 + 54 + 12 = 98 本のペンを持っています。", "11": "The answer is 98"}, "human_translated": true, "code_input": "####\nfacts = ['ジャネットは緑のペンを 22 本と黄色のペンを 10 本持っていました。', 'その後、彼女は青いペンを 6 袋と', '赤いペンを 2 袋買いました。', '青い袋にはそれぞれ 9 本のペンが入っていて、', '赤い袋にはそれぞれ 6 本のペンが入っています。']\nquestion = 'ジャネットは今何本のペンを持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジャネットは緑のペンを 22 本と黄色のペンを 10 本持っていました。']\nnew_fact = infer_new_fact(selected) # 'ジャネットは以前、22 + 10 = 32 本のペンを持っていました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は青いペンを 6 袋と', '青い袋にはそれぞれ 9 本のペンが入っていて、']\nnew_fact = infer_new_fact(selected) # '青いペンの数は 6 × 9 = 54 本です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['赤いペンを 2 袋買いました。', '青い袋にはそれぞれ 9 本のペンが入っていて、']\nnew_fact = infer_new_fact(selected) # '赤いペンの数は 2 × 6 = 12 本です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャネットは以前、22 + 10 = 32 本のペンを持っていました。', '青いペンの数は 6 × 9 = 54 本です。', '赤いペンの数は 2 × 6 = 12 本です。']\nnew_fact = infer_new_fact(selected) # 'ジャネットは現在、32 + 54 + 12 = 98 本のペンを持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャネットは緑のペンを 22 本と黄色のペンを 10 本持っていました。', 'ジャネットは今何本のペンを持っていますか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 98'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '98'"}
{"id": "GSM8K_205_bd32892fb0", "context": "", "options": [], "answer": "98", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 9}, {"antecedents": [8], "consequent": 10}, {"antecedents": [7, 8], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [8, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent6 -> int1: First, identify the lowest score, which is 71, and remove it.; sent8 -> int2: Since Brinley wants a score of 93, we know her total score needs to be 93 (average) * 5 (tests) = 465 points; sent7 & sent8 -> int3: So far, Brinley has earned 89 + 92 +100 + 86 = 367 points; int2 & int3 -> int4: The final test must be 465 - 367 = 98 points.; int4 & sent8 -> int5: The answer is 98;", "textual_logical_units": {"1": "ブリンリーはバート先生の", "2": "数学の授業を受けています。", "3": "バート先生は", "4": "各学期に 6 つのテストを行います。", "5": "彼は各学期の平均から最も低い点数を削除することを学生に許可しています。", "6": "ブリンリーの点数が 89 点、71 点、92 点、100 点で", "7": "最初の 5 回のテストが 86 点の場合、", "8": "6 回目のテストで平均を 93 点にするには何点必要ですか？", "9": "まず、最も低い点数である 71 を特定し、それを削除します。", "10": "ブリンリーには 93 点が必要なので、彼女の合計スコアは 93 (平均) * 5 (テスト) = 465 点必要であることがわかります", "11": "これまでのところ、ブリンリーは 89 + 92 +100 + 86 = 367 点を獲得しています", "12": "最終テストでは 465 - 367 = 98 点が必要になります。", "13": "The answer is 98"}, "human_translated": true, "code_input": "####\nfacts = [ 'ブリンリーはバート先生の',\n  '数学の授業を受けています。',\n  'バート先生は',\n  '各学期に 6 つのテストを行います。',\n  '彼は各学期の平均から最も低い点数を削除することを学生に許可しています。',\n  'ブリンリーの点数が 89 点、71 点、92 点、100 点で',\n  '最初の 5 回のテストが 86 点の場合、']\nquestion = '6 回目のテストで平均を 93 点にするには何点必要ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ブリンリーの点数が 89 点、71 点、92 点、100 点で']\nnew_fact = infer_new_fact(selected) # 'まず、最も低い点数である 71 を特定し、それを削除します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6 回目のテストで平均を 93 点にするには何点必要ですか？']\nnew_fact = infer_new_fact(selected) # 'ブリンリーには 93 点が必要なので、彼女の合計スコアは 93 (平均) * 5 (テスト) = 465 点必要であることがわかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最初の 5 回のテストが 86 点の場合、', '6 回目のテストで平均を 93 点にするには何点必要ですか？']\nnew_fact = infer_new_fact(selected) # 'これまでのところ、ブリンリーは 89 + 92 +100 + 86 = 367 点を獲得しています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブリンリーには 93 点が必要なので、彼女の合計スコアは 93 (平均) * 5 (テスト) = 465 点必要であることがわかります', 'これまでのところ、ブリンリーは 89 + 92 +100 + 86 = 367 点を獲得しています']\nnew_fact = infer_new_fact(selected) # '最終テストでは 465 - 367 = 98 点が必要になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6 回目のテストで平均を 93 点にするには何点必要ですか？', '最終テストでは 465 - 367 = 98 点が必要になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 98'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '98'"}
{"id": "GSM8K_206_099f3278a8", "context": "", "options": [], "answer": "860", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}, {"antecedents": [5, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [8, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: In the first part, Micheal did 5 * 25 = 125 kilometers every week.; int1 & sent4 -> int2: He did that for four weeks, which means he made during that time 125 * 4 = 500 kilometers.; sent5 & sent6 -> int3: After that, he made 2 * 60 = 120 kilometers a week.; int3 & sent7 -> int4: And Micheal did that for three weeks, so he rode 120 * 3 = 360 kilometers during that time.; int2 & int4 -> int5: In total Micheal did 500 + 360 = 860 kilometers.; int5 & sent8 -> int6: The answer is 860;", "textual_logical_units": {"1": "マイケルは自転車に乗るのが大好きです。", "2": "彼は少なくとも週に 5 回は自転車に乗り、", "3": "毎回 25 キロ走ります。", "4": "彼はそれを 4 週間続けた後、", "5": "週に 2 回だけ", "6": "毎回 60 キロメートル自転車に乗ることに決め、", "7": "それを 3 週間続けました。", "8": "マイケルは合計で何キロ走りましたか？", "9": "最初の段階では、マイケルは毎週 5 * 25 = 125 キロメートルを走りました。", "10": "彼はそれを 4 週間続けました。つまり、その間に 125 * 4 = 500 キロメートルを走ったということです。", "11": "その後、彼は週に 2 * 60 = 120 キロメートルを走りました。", "12": "マイケルはそれを 3 週間続けたので、その間に 120 * 3 = 360 キロメートルを走りました。", "13": "マイケルは合計で 500 + 360 = 860 キロメートルを走りました。", "14": "The answer is 860"}, "human_translated": true, "code_input": "####\nfacts = ['マイケルは自転車に乗るのが大好きです。', '彼は少なくとも週に 5 回は自転車に乗り、', '毎回 25 キロ走ります。', '彼はそれを 4 週間続けた後、', '週に 2 回だけ', '毎回 60 キロメートル自転車に乗ることに決め、', 'それを 3 週間続けました。']\nquestion = 'マイケルは合計で何キロ走りましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は少なくとも週に 5 回は自転車に乗り、', '毎回 25 キロ走ります。']\nnew_fact = infer_new_fact(selected) # '最初の段階では、マイケルは毎週 5 * 25 = 125 キロメートルを走りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はそれを 4 週間続けた後、', '最初の段階では、マイケルは毎週 5 * 25 = 125 キロメートルを走りました。']\nnew_fact = infer_new_fact(selected) # '彼はそれを 4 週間続けました。つまり、その間に 125 * 4 = 500 キロメートルを走ったということです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['週に 2 回だけ', '毎回 60 キロメートル自転車に乗ることに決め、']\nnew_fact = infer_new_fact(selected) # 'その後、彼は週に 2 * 60 = 120 キロメートルを走りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['それを 3 週間続けました。', 'その後、彼は週に 2 * 60 = 120 キロメートルを走りました。']\nnew_fact = infer_new_fact(selected) # 'マイケルはそれを 3 週間続けたので、その間に 120 * 3 = 360 キロメートルを走りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はそれを 4 週間続けました。つまり、その間に 125 * 4 = 500 キロメートルを走ったということです。', 'マイケルはそれを 3 週間続けたので、その間に 120 * 3 = 360 キロメートルを走りました。']\nnew_fact = infer_new_fact(selected) # 'マイケルは合計で 500 + 360 = 860 キロメートルを走りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マイケルは合計で何キロ走りましたか？', 'マイケルは合計で 500 + 360 = 860 キロメートルを走りました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 860'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '860'"}
{"id": "GSM8K_207_52479bc41c", "context": "", "options": [], "answer": "2600", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [1, 5], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The candied apples weigh 40/2=20 grams each.; sent1 & sent3 -> int2: The chocolate bars weigh 40*25=1000 grams in total.; int1 & sent1 -> int3: The candied apples weigh 20*80=1600 grams in total.; int2 & int3 -> int4: Joe's bag weighs 1000+1600=2600 grams.; int4 & sent4 -> int5: The answer is 2600;", "textual_logical_units": {"1": "ジョーのハロウィンキャンディーの袋には、25 本のチョコレートバーと 80 個の砂糖漬けのリンゴが入っています。", "2": "チョコレートバー 1 本の重さは、砂糖漬けのリンゴの 2 倍です。", "3": "チョコレートバー 1 本の重さが 40g の場合、", "4": "ジョーのキャンディーバッグの重さはグラムでどれくらいですか？", "5": "砂糖漬けのリンゴの重さは 1 つ 40/2 = 20 グラムです。", "6": "チョコレートバーの重さは合計で 40 * 25 = 1,000 グラムです。", "7": "砂糖漬けのリンゴの重さは合計で 20 * 80 = 1,600 グラムです。", "8": "ジョーのバッグの重さは 1,000 + 1,600 = 2,600 グラムです。", "9": "The answer is 2600"}, "human_translated": true, "code_input": "####\nfacts = ['ジョーのハロウィンキャンディーの袋には、25 本のチョコレートバーと 80 個の砂糖漬けのリンゴが入っています。', 'チョコレートバー 1 本の重さは、砂糖漬けのリンゴの 2 倍です。', 'チョコレートバー 1 本の重さが 40g の場合、']\nquestion = 'ジョーのキャンディーバッグの重さはグラムでどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['チョコレートバー 1 本の重さは、砂糖漬けのリンゴの 2 倍です。', 'チョコレートバー 1 本の重さが 40g の場合、']\nnew_fact = infer_new_fact(selected) # '砂糖漬けのリンゴの重さは 1 つ 40/2 = 20 グラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョーのハロウィンキャンディーの袋には、25 本のチョコレートバーと 80 個の砂糖漬けのリンゴが入っています。', 'チョコレートバー 1 本の重さが 40g の場合、']\nnew_fact = infer_new_fact(selected) # 'チョコレートバーの重さは合計で 40 * 25 = 1,000 グラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョーのハロウィンキャンディーの袋には、25 本のチョコレートバーと 80 個の砂糖漬けのリンゴが入っています。', '砂糖漬けのリンゴの重さは 1 つ 40/2 = 20 グラムです。']\nnew_fact = infer_new_fact(selected) # '砂糖漬けのリンゴの重さは合計で 20 * 80 = 1,600 グラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チョコレートバーの重さは合計で 40 * 25 = 1,000 グラムです。', '砂糖漬けのリンゴの重さは合計で 20 * 80 = 1,600 グラムです。']\nnew_fact = infer_new_fact(selected) # 'ジョーのバッグの重さは 1,000 + 1,600 = 2,600 グラムです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョーのキャンディーバッグの重さはグラムでどれくらいですか？', 'ジョーのバッグの重さは 1,000 + 1,600 = 2,600 グラムです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 2600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '2600'"}
{"id": "GSM8K_208_55aedda100", "context": "", "options": [], "answer": "76", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [2, 3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [7, 8, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: On Monday she bought 4 cakes; int1 & sent2 & sent3 -> int2: On Tuesday she bought 4*3=12 cakes; int2 & sent4 & sent5 -> int3: On Wednesday she bought 12*5=60 cakes; int1 & int2 & int3 -> int4: Rose bought a total of 4+12+60= 76 cakes during the three days; sent1 & sent6 -> int5: The answer is 76;", "textual_logical_units": {"1": "ローズは月曜日に店に行き、ケーキを 4 つ買いました。", "2": "火曜日、彼女は別の店に行き、", "3": "その 3 倍の数のケーキを買いました。", "4": "水曜日、彼女は別の店に行き、", "5": "火曜日に買ったケーキの 5 倍の数のケーキを買いました。", "6": "彼女は 3 日間でケーキを何個買いましたか？", "7": "月曜日、彼女はケーキを 4 個買いました。", "8": "火曜日、彼女は 4 * 3 = 12 個のケーキを買いました", "9": "水曜日、彼女は 12 * 5 = 60 個のケーキを買いました", "10": "ローズは 3 日間で合計 4 + 12 + 60 = 76 個のケーキを買いました", "11": "The answer is 76"}, "human_translated": true, "code_input": "####\nfacts = ['ローズは月曜日に店に行き、ケーキを 4 つ買いました。', '火曜日、彼女は別の店に行き、', 'その 3 倍の数のケーキを買いました。', '水曜日、彼女は別の店に行き、', '火曜日に買ったケーキの 5 倍の数のケーキを買いました。']\nquestion = '彼女は 3 日間でケーキを何個買いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ローズは月曜日に店に行き、ケーキを 4 つ買いました。']\nnew_fact = infer_new_fact(selected) # '月曜日、彼女はケーキを 4 個買いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['火曜日、彼女は別の店に行き、', 'その 3 倍の数のケーキを買いました。', '月曜日、彼女はケーキを 4 個買いました。']\nnew_fact = infer_new_fact(selected) # '火曜日、彼女は 4 * 3 = 12 個のケーキを買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['水曜日、彼女は別の店に行き、', '火曜日に買ったケーキの 5 倍の数のケーキを買いました。', '火曜日、彼女は 4 * 3 = 12 個のケーキを買いました']\nnew_fact = infer_new_fact(selected) # '水曜日、彼女は 12 * 5 = 60 個のケーキを買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日、彼女はケーキを 4 個買いました。', '火曜日、彼女は 4 * 3 = 12 個のケーキを買いました', '水曜日、彼女は 12 * 5 = 60 個のケーキを買いました']\nnew_fact = infer_new_fact(selected) # 'ローズは 3 日間で合計 4 + 12 + 60 = 76 個のケーキを買いました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ローズは月曜日に店に行き、ケーキを 4 つ買いました。', '彼女は 3 日間でケーキを何個買いましたか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 76'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '76'"}
{"id": "GSM8K_209_59d74b32a3", "context": "", "options": [], "answer": "145", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 3}, {"antecedents": [1, 3], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Since a dozen has 12 items, half a dozen plates are 12/2 = 6; int1 & sent1 -> int2: Half a dozen plates sold at $6000 each cost 6*$6000 = $36000; int2 & sent1 -> int3: Twenty dozen cups cost $1200 less than the total cost of half a dozen plates, meaning the twenty dozen cups cost a total of $36000-$1200 = 34800; int1 -> int4: Since a dozen has 12 items, twenty dozen cups are 20*12 = 240 cups.; int3 & int4 -> int5: If the twenty dozen cups cost $34800, each cup costs $34800/240=$145; int5 & sent2 -> int6: The answer is 145;", "textual_logical_units": {"1": "20 ダースのカップの価格は、それぞれ 6,000 ドルで販売された 6 ダースのプレートの合計価格よりも 1,200 ドル安価です。", "2": "カップ 1 つを購入する際の合計価格を計算してください。", "3": "1 ダースには 12 個の商品が入っているので、半ダースのプレートの枚数は 12/2 = 6 枚になります", "4": "1枚 6,000 ドルで販売されている半ダースのプレートは、6 * 6,000 ドル = 3,6000 ドルです", "5": "20 ダースのカップの価格は、6 ダースのプレートの合計価格よりも 1,200 ドル安くなります。つまり、20 ダースのカップの価格は合計 3,6000 ドル - 1,200 ドル = 34,800 ドルです。", "6": "1 ダースには 12 個の商品が入っているので、20 ダースのカップは 20 * 12 = 240 カップになります。", "7": "20 ダースのカップの価格が 34,800 ドルの場合、カップ 1 つの価格は 34,800 ドル/240 ドル = 145 ドルです", "8": "The answer is 145"}, "human_translated": true, "code_input": "####\nfacts = ['20 ダースのカップの価格は、それぞれ 6,000 ドルで販売された 6 ダースのプレートの合計価格よりも 1,200 ドル安価です。']\nquestion = 'カップ 1 つを購入する際の合計価格を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['20 ダースのカップの価格は、それぞれ 6,000 ドルで販売された 6 ダースのプレートの合計価格よりも 1,200 ドル安価です。']\nnew_fact = infer_new_fact(selected) # '1 ダースには 12 個の商品が入っているので、半ダースのプレートの枚数は 12/2 = 6 枚になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 ダースのカップの価格は、それぞれ 6,000 ドルで販売された 6 ダースのプレートの合計価格よりも 1,200 ドル安価です。', '1 ダースには 12 個の商品が入っているので、半ダースのプレートの枚数は 12/2 = 6 枚になります']\nnew_fact = infer_new_fact(selected) # '1枚 6,000 ドルで販売されている半ダースのプレートは、6 * 6,000 ドル = 3,6000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 ダースのカップの価格は、それぞれ 6,000 ドルで販売された 6 ダースのプレートの合計価格よりも 1,200 ドル安価です。', '1枚 6,000 ドルで販売されている半ダースのプレートは、6 * 6,000 ドル = 3,6000 ドルです']\nnew_fact = infer_new_fact(selected) # '20 ダースのカップの価格は、6 ダースのプレートの合計価格よりも 1,200 ドル安くなります。つまり、20 ダースのカップの価格は合計 3,6000 ドル - 1,200 ドル = 34,800 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ダースには 12 個の商品が入っているので、半ダースのプレートの枚数は 12/2 = 6 枚になります']\nnew_fact = infer_new_fact(selected) # '1 ダースには 12 個の商品が入っているので、20 ダースのカップは 20 * 12 = 240 カップになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 ダースのカップの価格は、6 ダースのプレートの合計価格よりも 1,200 ドル安くなります。つまり、20 ダースのカップの価格は合計 3,6000 ドル - 1,200 ドル = 34,800 ドルです。', '1 ダースには 12 個の商品が入っているので、20 ダースのカップは 20 * 12 = 240 カップになります。']\nnew_fact = infer_new_fact(selected) # '20 ダースのカップの価格が 34,800 ドルの場合、カップ 1 つの価格は 34,800 ドル/240 ドル = 145 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カップ 1 つを購入する際の合計価格を計算してください。', '20 ダースのカップの価格が 34,800 ドルの場合、カップ 1 つの価格は 34,800 ドル/240 ドル = 145 ドルです']\nnew_fact = infer_new_fact(selected) # 'The answer is 145'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '145'"}
{"id": "GSM8K_210_67f7bd36f7", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [4, 5], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}, {"antecedents": [8, 14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Both pairs of shoes will cost a total of 2 * $20 = $40.; int1 & sent2 -> int2: Sara will need to save a total of $30 + $40 = $70 to buy everything that she wants.; sent4 & sent5 -> int3: Sara has earned 4 * $5 = $20 from babysitting.; int3 & sent7 -> int4: Between her savings and the babysitting, Sara has already saved $10 + $20 = $30.; int2 & int4 -> int5: Sara needs to earn an additional $70 - $30 = $40 from mowing the lawn to afford her clothes.; int5 & sent6 -> int6: Sara must mow the lawn $40 / $4 = 10 times to afford to buy the jacket and shoes.; int6 & sent8 -> int7: The answer is 10;", "textual_logical_units": {"1": "サラは新しいジャケットと靴を 2 足買いたいと思っています。", "2": "彼女が欲しいジャケットは 30 ドルで", "3": "靴 1 足は 20 ドルです。", "4": "サラは近所の子供たちのベビーシッターを 4 回行っています。", "5": "1 回のベビーシッターで 5 ドル稼いでいます。", "6": "彼女の両親は、彼女が芝刈りをするたびに彼女に 4 ドル払います。", "7": "サラがベビーシッターを始める前にすでに 10 ドル貯金していた場合、", "8": "ジャケットと靴を買えるようになるまでに何回芝刈りをする必要がありますか？", "9": "2 足の靴の合計価格は 2 * 20 ドル = 40 ドルです。", "10": "サラが欲しいものをすべて購入するには、合計 30 ドル + 40 ドル = 70 ドル貯める必要があります。", "11": "サラはベビーシッターで 4 * 5 ドル = 20 ドルを稼いでいます。", "12": "貯金とベビーシッターで、サラはすでに 10 ドル + 20 ドル = 30 ドル貯めています。", "13": "サラは服を買うために、芝刈りをすることでさらに 70 ドル - 30 ドル = 40 ドルを稼ぐ必要があります。", "14": "サラはジャケットと靴を買うために 40 ドル/4 ドル = 10 回芝刈りをする必要があります。", "15": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = [ 'サラは新しいジャケットと靴を 2 足買いたいと思っています。',\n  '彼女が欲しいジャケットは 30 ドルで',\n  '靴 1 足は 20 ドルです。',\n  'サラは近所の子供たちのベビーシッターを 4 回行っています。',\n  '1 回のベビーシッターで 5 ドル稼いでいます。',\n  '彼女の両親は、彼女が芝刈りをするたびに彼女に 4 ドル払います。',\n  'サラがベビーシッターを始める前にすでに 10 ドル貯金していた場合、']\nquestion = 'ジャケットと靴を買えるようになるまでに何回芝刈りをする必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['サラは新しいジャケットと靴を 2 足買いたいと思っています。', '靴 1 足は 20 ドルです。']\nnew_fact = infer_new_fact(selected) # '2 足の靴の合計価格は 2 * 20 ドル = 40 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が欲しいジャケットは 30 ドルで', '2 足の靴の合計価格は 2 * 20 ドル = 40 ドルです。']\nnew_fact = infer_new_fact(selected) # 'サラが欲しいものをすべて購入するには、合計 30 ドル + 40 ドル = 70 ドル貯める必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サラは近所の子供たちのベビーシッターを 4 回行っています。', '1 回のベビーシッターで 5 ドル稼いでいます。']\nnew_fact = infer_new_fact(selected) # 'サラはベビーシッターで 4 * 5 ドル = 20 ドルを稼いでいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サラがベビーシッターを始める前にすでに 10 ドル貯金していた場合、', 'サラはベビーシッターで 4 * 5 ドル = 20 ドルを稼いでいます。']\nnew_fact = infer_new_fact(selected) # '貯金とベビーシッターで、サラはすでに 10 ドル + 20 ドル = 30 ドル貯めています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['サラが欲しいものをすべて購入するには、合計 30 ドル + 40 ドル = 70 ドル貯める必要があります。', '貯金とベビーシッターで、サラはすでに 10 ドル + 20 ドル = 30 ドル貯めています。']\nnew_fact = infer_new_fact(selected) # 'サラは服を買うために、芝刈りをすることでさらに 70 ドル - 30 ドル = 40 ドルを稼ぐ必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の両親は、彼女が芝刈りをするたびに彼女に 4 ドル払います。', 'サラは服を買うために、芝刈りをすることでさらに 70 ドル - 30 ドル = 40 ドルを稼ぐ必要があります。']\nnew_fact = infer_new_fact(selected) # 'サラはジャケットと靴を買うために 40 ドル/4 ドル = 10 回芝刈りをする必要があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャケットと靴を買えるようになるまでに何回芝刈りをする必要がありますか？', 'サラはジャケットと靴を買うために 40 ドル/4 ドル = 10 回芝刈りをする必要があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_211_768dd956ae", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [6, 13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: First, set up the equation for the number of eggs the chickens lay each day: 3r + 5w = 42, where r is the number of red chickens and w is the number of white chickens.; int1 -> int2: Then, express r in terms of w based on the information in the problem: w = r + 2; int1 & int2 -> int3: Now substitute r + 2 for w in the equation for the number of eggs: 3r + 5(r + 2) = 42; int3 & sent3 -> int4: Now multiply 5 through the parentheses: 3r + 5r + 10 = 42; int4 -> int5: Now add like terms to get 8r + 10 = 42; int5 -> int6: Now subtract 10 from both sides of the equation: 8r = 32; int6 -> int7: Finally, divide both sides of the equation by 8 to get r = 4; int7 & sent6 -> int8: The answer is 4;", "textual_logical_units": {"1": "ジェリーはニワトリの群れを飼っています。", "2": "赤いニワトリは 1 日に 3 個の卵を産みます。", "3": "白いニワトリは 1 日に 5 個の卵を産みます。", "4": "ジェリーは毎日 42 個の卵を収穫します。", "5": "彼が赤いニワトリより白いニワトリを 2 羽多く飼っている場合、", "6": "彼は赤いニワトリを何羽飼っていますか？", "7": "まず、ニワトリが毎日産む卵の数を表す方程式を設定します。 3r + 5w = 42 です。r は赤いニワトリの数、w は白いニワトリの数です。", "8": "次に、問題の情報に基づいて r を w で表します。w = r + 2", "9": "次に、卵の数を表す方程式の w に r + 2 を代入します。 3r + 5 (r + 2) = 42", "10": "次に、括弧内の数に 5 を掛けます。 3r + 5r + 10 = 42", "11": "次に、同類項を追加すると 8r + 10 = 42 になります", "12": "次に、方程式の両辺から 10 を引きます。 8r = 32", "13": "最後に、方程式の両辺を 8 で割って r = 4 にします。", "14": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['ジェリーはニワトリの群れを飼っています。', '赤いニワトリは 1 日に 3 個の卵を産みます。', '白いニワトリは 1 日に 5 個の卵を産みます。', 'ジェリーは毎日 42 個の卵を収穫します。', '彼が赤いニワトリより白いニワトリを 2 羽多く飼っている場合、']\nquestion = '彼は赤いニワトリを何羽飼っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['赤いニワトリは 1 日に 3 個の卵を産みます。', '白いニワトリは 1 日に 5 個の卵を産みます。', 'ジェリーは毎日 42 個の卵を収穫します。']\nnew_fact = infer_new_fact(selected) # 'まず、ニワトリが毎日産む卵の数を表す方程式を設定します。 3r + 5w = 42 です。r は赤いニワトリの数、w は白いニワトリの数です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、ニワトリが毎日産む卵の数を表す方程式を設定します。 3r + 5w = 42 です。r は赤いニワトリの数、w は白いニワトリの数です。']\nnew_fact = infer_new_fact(selected) # '次に、問題の情報に基づいて r を w で表します。w = r + 2'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、ニワトリが毎日産む卵の数を表す方程式を設定します。 3r + 5w = 42 です。r は赤いニワトリの数、w は白いニワトリの数です。', '次に、問題の情報に基づいて r を w で表します。w = r + 2']\nnew_fact = infer_new_fact(selected) # '次に、卵の数を表す方程式の w に r + 2 を代入します。 3r + 5 (r + 2) = 42'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['白いニワトリは 1 日に 5 個の卵を産みます。', '次に、卵の数を表す方程式の w に r + 2 を代入します。 3r + 5 (r + 2) = 42']\nnew_fact = infer_new_fact(selected) # '次に、括弧内の数に 5 を掛けます。 3r + 5r + 10 = 42'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、括弧内の数に 5 を掛けます。 3r + 5r + 10 = 42']\nnew_fact = infer_new_fact(selected) # '次に、同類項を追加すると 8r + 10 = 42 になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、同類項を追加すると 8r + 10 = 42 になります']\nnew_fact = infer_new_fact(selected) # '次に、方程式の両辺から 10 を引きます。 8r = 32'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、方程式の両辺から 10 を引きます。 8r = 32']\nnew_fact = infer_new_fact(selected) # '最後に、方程式の両辺を 8 で割って r = 4 にします。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は赤いニワトリを何羽飼っていますか？', '最後に、方程式の両辺を 8 で割って r = 4 にします。']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
{"id": "GSM8K_212_cf4e9f2382", "context": "", "options": [], "answer": "5", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 -> int1: First find the length of the two long sides of the park: 6 miles * 2 = 12 miles; sent2 -> int2: Then find the length of the two short sides of the park: 1.5 miles * 2 = 3 miles; int1 & int2 -> int3: Then add those two lengthes to find the total distance around the park: 12 miles + 3 miles = 15 miles; int3 & sent3 -> int4: Then divide the total length by Gary's speed to find how long he spends walking: 15 miles / 3 miles/hour = 5 hours; int4 & sent4 -> int5: The answer is 5;", "textual_logical_units": {"1": "ゲイリーは地元の公園の外周を歩くのが好きです。", "2": "公園の外周は 2.41 キロメートル × 9.66 キロメートルの長方形になっています。", "3": "彼が時速 4.83 キロメートルで歩く場合、", "4": "何時間歩くことになりますか？", "5": "まず、公園の 2 つの長辺の長さを求めます。 9.66 キロメートル * 2 = 19.32 キロメートル", "6": "次に、公園の 2 つの短辺の長さを求めます。 2.41 キロメートル * 2 = 4.82 キロメートル", "7": "次に、これら 2 つの長さを足して、公園の外周の合計距離を求めます。 19.32 キロメートル + 4.82 キロメートル = 24.14 キロメートル", "8": "次に、全長をゲイリーの歩く速度で割って、彼が歩く時間を求めます。 24.14 キロメートル/4.82 キロメートル/時間 = 5 時間", "9": "The answer is 5"}, "human_translated": true, "code_input": "####\nfacts = ['ゲイリーは地元の公園の外周を歩くのが好きです。', '公園の外周は 2.41 キロメートル × 9.66 キロメートルの長方形になっています。', '彼が時速 4.83 キロメートルで歩く場合、']\nquestion = '何時間歩くことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['公園の外周は 2.41 キロメートル × 9.66 キロメートルの長方形になっています。']\nnew_fact = infer_new_fact(selected) # 'まず、公園の 2 つの長辺の長さを求めます。 9.66 キロメートル * 2 = 19.32 キロメートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['公園の外周は 2.41 キロメートル × 9.66 キロメートルの長方形になっています。']\nnew_fact = infer_new_fact(selected) # '次に、公園の 2 つの短辺の長さを求めます。 2.41 キロメートル * 2 = 4.82 キロメートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['まず、公園の 2 つの長辺の長さを求めます。 9.66 キロメートル * 2 = 19.32 キロメートル', '次に、公園の 2 つの短辺の長さを求めます。 2.41 キロメートル * 2 = 4.82 キロメートル']\nnew_fact = infer_new_fact(selected) # '次に、これら 2 つの長さを足して、公園の外周の合計距離を求めます。 19.32 キロメートル + 4.82 キロメートル = 24.14 キロメートル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が時速 4.83 キロメートルで歩く場合、', '次に、これら 2 つの長さを足して、公園の外周の合計距離を求めます。 19.32 キロメートル + 4.82 キロメートル = 24.14 キロメートル']\nnew_fact = infer_new_fact(selected) # '次に、全長をゲイリーの歩く速度で割って、彼が歩く時間を求めます。 24.14 キロメートル/4.82 キロメートル/時間 = 5 時間'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['何時間歩くことになりますか？', '次に、全長をゲイリーの歩く速度で割って、彼が歩く時間を求めます。 24.14 キロメートル/4.82 キロメートル/時間 = 5 時間']\nnew_fact = infer_new_fact(selected) # 'The answer is 5'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5'"}
{"id": "GSM8K_213_1624cd3d64", "context": "", "options": [], "answer": "250", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: On the second day, she counted 100+50 = 150 customers.; int1 & sent2 -> int2: The total for the first two days is 150+100 = 250 customers.; int2 & sent4 -> int3: If the total count for three days was 500, she counted 500-250 = 250 customers on the third day.; int3 & sent5 -> int4: The answer is 250;", "textual_logical_units": {"1": "ディスカウントストアにいる間、", "2": "スローンは 100 人の客が店に入るのを数えました。", "3": "翌日、彼女は初日よりも 50 人多い客を数えました。", "4": "3 日目までの客の総数が 500 人だった場合、", "5": "3 日目には何人の客を数えましたか？", "6": "2 日目に、彼女は 100  +50 = 150 人の客を数えました。", "7": "最初の 2 日間の合計は、150+100 = 250 人の客です。", "8": "3 日間の合計数が 500 人の場合、3 日目には 500-250 = 250 人の客を数えたことになります。", "9": "The answer is 250"}, "human_translated": true, "code_input": "####\nfacts = ['ディスカウントストアにいる間、', 'スローンは 100 人の客が店に入るのを数えました。', '翌日、彼女は初日よりも 50 人多い客を数えました。', '3 日目までの客の総数が 500 人だった場合、']\nquestion = '3 日目には何人の客を数えましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['スローンは 100 人の客が店に入るのを数えました。', '翌日、彼女は初日よりも 50 人多い客を数えました。']\nnew_fact = infer_new_fact(selected) # '2 日目に、彼女は 100  +50 = 150 人の客を数えました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スローンは 100 人の客が店に入るのを数えました。', '2 日目に、彼女は 100  +50 = 150 人の客を数えました。']\nnew_fact = infer_new_fact(selected) # '最初の 2 日間の合計は、150+100 = 250 人の客です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 日目までの客の総数が 500 人だった場合、', '最初の 2 日間の合計は、150+100 = 250 人の客です。']\nnew_fact = infer_new_fact(selected) # '3 日間の合計数が 500 人の場合、3 日目には 500-250 = 250 人の客を数えたことになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 日目には何人の客を数えましたか？', '3 日間の合計数が 500 人の場合、3 日目には 500-250 = 250 人の客を数えたことになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 250'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '250'"}
{"id": "GSM8K_214_b58697d1c3", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [3, 4, 5], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: First find how many gallons of water flow out of the pools in 4 minutes: 4 gallons/minute * 4 minutes = 16 gallons; int1 & sent3 & sent4 -> int2: Let b be the amount of water the big pool has now and s be the amount of water the small pool has. We know that b = 4s, and b + 16 = 2(s + 16); int2 -> int3: Substituting the first equation into the second equation, we get 4s + 16 = 2(s + 16); int3 -> int4: Multiplying through the parentheses, we get 4s + 16 = 2s + 32; int4 -> int5: Subtracting 2s from both sides, we get 2s + 16 = 32; int5 -> int6: Subtracting 16 from both sides, we get 2s = 16; int6 -> int7: Dividing both sides by 2, we get s = 8; int7 & sent4 -> int8: The answer is 8;", "textual_logical_units": {"1": "ジェリーはプールを 2 つ持っていますが、どちらも水漏れがあり、1 分間に 18.18 リットルずつ漏れていきます。", "2": "4 分前、大きなプールには小さなプールの 2 倍の水が入っていました。", "3": "現在、大きなプールには小さなプールの 4 倍の水が入っています。", "4": "小さなプールには現在どのくらいの水が入っていますか？", "5": "まず、4 分間にプールから何リットルの水が流れ出るかを求めます。 18.18 リットル/分 * 4 分 = 72.73 リットル", "6": "b を大きなプールに入っている水の量、s を小さなプールに入っている水の量とします。b = 4s、b + 72.72 = 2 (s + 72.72) であることがわかります", "7": "1 つ目の方程式を 2 つ目の方程式に代入すると、4s + 72.73 = 2 (s + 72.73) になります。", "8": "括弧を掛けると、4s + 72.73 = 2s + 72.73 になります", "9": "両辺から 2s を引くと、2s + 72.73 = 145.46 になります。", "10": "両辺から 72.73 を引くと、2s = 72.73 になります。", "11": "両辺を 2 で割ると、s = 36.36 になります。", "12": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['ジェリーはプールを 2 つ持っていますが、どちらも水漏れがあり、1 分間に 18.18 リットルずつ漏れていきます。', '4 分前、大きなプールには小さなプールの 2 倍の水が入っていました。', '現在、大きなプールには小さなプールの 4 倍の水が入っています。']\nquestion = '小さなプールには現在どのくらいの水が入っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジェリーはプールを 2 つ持っていますが、どちらも水漏れがあり、1 分間に 18.18 リットルずつ漏れていきます。']\nnew_fact = infer_new_fact(selected) # 'まず、4 分間にプールから何リットルの水が流れ出るかを求めます。 18.18 リットル/分 * 4 分 = 72.73 リットル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['現在、大きなプールには小さなプールの 4 倍の水が入っています。', '小さなプールには現在どのくらいの水が入っていますか？', 'まず、4 分間にプールから何リットルの水が流れ出るかを求めます。 18.18 リットル/分 * 4 分 = 72.73 リットル']\nnew_fact = infer_new_fact(selected) # 'b を大きなプールに入っている水の量、s を小さなプールに入っている水の量とします。b = 4s、b + 72.72 = 2 (s + 72.72) であることがわかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['b を大きなプールに入っている水の量、s を小さなプールに入っている水の量とします。b = 4s、b + 72.72 = 2 (s + 72.72) であることがわかります']\nnew_fact = infer_new_fact(selected) # '1 つ目の方程式を 2 つ目の方程式に代入すると、4s + 72.73 = 2 (s + 72.73) になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 つ目の方程式を 2 つ目の方程式に代入すると、4s + 72.73 = 2 (s + 72.73) になります。']\nnew_fact = infer_new_fact(selected) # '括弧を掛けると、4s + 72.73 = 2s + 72.73 になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['括弧を掛けると、4s + 72.73 = 2s + 72.73 になります']\nnew_fact = infer_new_fact(selected) # '両辺から 2s を引くと、2s + 72.73 = 145.46 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['両辺から 2s を引くと、2s + 72.73 = 145.46 になります。']\nnew_fact = infer_new_fact(selected) # '両辺から 72.73 を引くと、2s = 72.73 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['両辺から 72.73 を引くと、2s = 72.73 になります。']\nnew_fact = infer_new_fact(selected) # '両辺を 2 で割ると、s = 36.36 になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['小さなプールには現在どのくらいの水が入っていますか？', '両辺を 2 で割ると、s = 36.36 になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_215_92bce8e84c", "context": "", "options": [], "answer": "44", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: She wants to buy a pair of shoes for $320.00 and a belt for $32.00 for a total of 320+32 = $352.00; int1 & sent3 -> int2: Her purchase will total $352.00 and she makes $8.00 at her part-time job so she'll have to work 352/8 = 44 hours; int2 & sent4 -> int3: The answer is 44;", "textual_logical_units": {"1": "ロリは 320.00 ドルの靴と", "2": "それに合う 32.00 ドルのベルトを買いたいと思っています。", "3": "彼女のアルバイトの時給は 8.00 ドルです。", "4": "彼女は購入できるようになるまでに何時間働く必要がありますか？", "5": "彼女は靴を 320.00 ドル、ベルトを 32.00 ドル、合計 320 + 32 = 352.00 ドルで購入したいと考えています", "6": "購入額の合計は 352.00 ドルで、アルバイトで時給 8.00 ドルを稼いでいるので、352/8 = 44 時間働く必要があります", "7": "The answer is 44"}, "human_translated": true, "code_input": "####\nfacts = ['ロリは 320.00 ドルの靴と', 'それに合う 32.00 ドルのベルトを買いたいと思っています。', '彼女のアルバイトの時給は 8.00 ドルです。']\nquestion = '彼女は購入できるようになるまでに何時間働く必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ロリは 320.00 ドルの靴と', 'それに合う 32.00 ドルのベルトを買いたいと思っています。']\nnew_fact = infer_new_fact(selected) # '彼女は靴を 320.00 ドル、ベルトを 32.00 ドル、合計 320 + 32 = 352.00 ドルで購入したいと考えています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女のアルバイトの時給は 8.00 ドルです。', '彼女は靴を 320.00 ドル、ベルトを 32.00 ドル、合計 320 + 32 = 352.00 ドルで購入したいと考えています']\nnew_fact = infer_new_fact(selected) # '購入額の合計は 352.00 ドルで、アルバイトで時給 8.00 ドルを稼いでいるので、352/8 = 44 時間働く必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は購入できるようになるまでに何時間働く必要がありますか？', '購入額の合計は 352.00 ドルで、アルバイトで時給 8.00 ドルを稼いでいるので、352/8 = 44 時間働く必要があります']\nnew_fact = infer_new_fact(selected) # 'The answer is 44'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '44'"}
{"id": "GSM8K_216_126c1ae606", "context": "", "options": [], "answer": "220", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [3, 5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 -> int1: Janeth will pay an additional $2000x 10/100 =$200.; int1 -> int2: So she is going to pay off a total of $2000 + $200 = $2200.; sent2 -> int3: Janeth will be able to pay off $165 x 12 = $1980 in 12 months.; int2 & int3 & sent3 -> int4: Hence, her remaining balance by then will be $2200 - $1980 = $220.; int4 & sent3 -> int5: The answer is 220;", "textual_logical_units": {"1": "ジャネスは 2,000 ドルを借り、その金額の 10% を追加して返すと約束しました。", "2": "彼女が月 165 ドルを 12 か月間支払う場合、", "3": "その時点でにジャネスの借入残高はいくらになりますか？", "4": "ジャネスは 2,000 ドル x 10/100 = 200 ドルを追加で支払います。", "5": "つまり、彼女は合計 2,000 ドル + 200 ドル= 2,200 ドルを完済することになります。", "6": "ジャネスは 12 か月で 165 ドル x 12 = 1,980 ドルを完済できる予定です。", "7": "したがって、その時点での借入残高は 2,200 ドル - 1,980 ドル= 220 ドルになります。", "8": "The answer is 220"}, "human_translated": true, "code_input": "####\nfacts = ['ジャネスは 2,000 ドルを借り、その金額の 10% を追加して返すと約束しました。', '彼女が月 165 ドルを 12 か月間支払う場合、']\nquestion = 'その時点でにジャネスの借入残高はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジャネスは 2,000 ドルを借り、その金額の 10% を追加して返すと約束しました。']\nnew_fact = infer_new_fact(selected) # 'ジャネスは 2,000 ドル x 10/100 = 200 ドルを追加で支払います。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャネスは 2,000 ドル x 10/100 = 200 ドルを追加で支払います。']\nnew_fact = infer_new_fact(selected) # 'つまり、彼女は合計 2,000 ドル + 200 ドル= 2,200 ドルを完済することになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女が月 165 ドルを 12 か月間支払う場合、']\nnew_fact = infer_new_fact(selected) # 'ジャネスは 12 か月で 165 ドル x 12 = 1,980 ドルを完済できる予定です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その時点でにジャネスの借入残高はいくらになりますか？', 'つまり、彼女は合計 2,000 ドル + 200 ドル= 2,200 ドルを完済することになります。', 'ジャネスは 12 か月で 165 ドル x 12 = 1,980 ドルを完済できる予定です。']\nnew_fact = infer_new_fact(selected) # 'したがって、その時点での借入残高は 2,200 ドル - 1,980 ドル= 220 ドルになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その時点でにジャネスの借入残高はいくらになりますか？', 'したがって、その時点での借入残高は 2,200 ドル - 1,980 ドル= 220 ドルになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 220'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '220'"}
{"id": "GSM8K_217_a40ee07fbd", "context": "", "options": [], "answer": "15", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 4 + 7 = 11 dahlias in the vase.; int1 -> int2: In total there are 4 + 11 = 15 flowers in the vase.; int2 & sent3 -> int3: The answer is 15;", "textual_logical_units": {"1": "花瓶に 4 本のバラがあります。", "2": "花瓶にはバラよりも 7 本多いダリアがあります。", "3": "花瓶には全部で何本の花がありますか？", "4": "花瓶には 4 + 7 = 11 本のダリアが入っています。", "5": "花瓶には全部で 4 + 11 = 15 本の花があります。", "6": "The answer is 15"}, "human_translated": true, "code_input": "####\nfacts = ['花瓶に 4 本のバラがあります。', '花瓶にはバラよりも 7 本多いダリアがあります。']\nquestion = '花瓶には全部で何本の花がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['花瓶に 4 本のバラがあります。', '花瓶にはバラよりも 7 本多いダリアがあります。']\nnew_fact = infer_new_fact(selected) # '花瓶には 4 + 7 = 11 本のダリアが入っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['花瓶には 4 + 7 = 11 本のダリアが入っています。']\nnew_fact = infer_new_fact(selected) # '花瓶には全部で 4 + 11 = 15 本の花があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['花瓶には全部で何本の花がありますか？', '花瓶には全部で 4 + 11 = 15 本の花があります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 15'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '15'"}
{"id": "GSM8K_218_6ed8827b09", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 4}, {"antecedents": [1, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 4, 6, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 3], "consequent": 11}], "metadata": [], "linearized_output_en": "sent3 -> int1: In three years, Harriet will be 21+3 = 24 years old.; sent1 & sent3 -> int2: Since Adrian's age is three times that of Harriet, Adrian is 3*21 = 63 years old.; int2 & sent3 -> int3: In three years, he will be 63+3 =66 years old.; sent2 & sent3 -> int4: If Harriet is half times the age of Zack, Zack is 21*2 = 42 years old.; int4 & sent3 -> int5: In three years, he will be 42+3 = 45 years old.; int1 & int3 & int5 & sent3 -> int6: The combined age of the three in 3 years will be 45+66+24 = 135 years.; int6 & sent3 -> int7: The average age for the in three years will be 135/3 =45 years; sent1 & sent3 -> int8: The answer is 45;", "textual_logical_units": {"1": "エイドリアンはハリエットの 3 倍の年齢で、", "2": "ハリエットはザックの半分の年齢です。", "3": "ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。", "4": "3 年後、ハリエットは 21 + 3 = 24 歳になります。", "5": "エイドリアンの年齢はハリエットの 3 倍なので、エイドリアンは 3 * 21 = 63 歳です。", "6": "3 年後、彼は63 + 3 = 66 歳になります。", "7": "ハリエットがザックの半分の年齢の場合、ザックは 21 * 2 = 42 歳です。", "8": "3 年後には、彼は 42 + 3 = 45 歳になります。", "9": "3 年後の 3 人の年齢を合計すると、45 + 66 + 24 = 135 歳になります。", "10": "3 年後の平均年齢は 135/3 = 45 歳になります", "11": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = ['エイドリアンはハリエットの 3 倍の年齢で、', 'ハリエットはザックの半分の年齢です。']\nquestion = 'ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。']\nnew_fact = infer_new_fact(selected) # '3 年後、ハリエットは 21 + 3 = 24 歳になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイドリアンはハリエットの 3 倍の年齢で、', 'ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。']\nnew_fact = infer_new_fact(selected) # 'エイドリアンの年齢はハリエットの 3 倍なので、エイドリアンは 3 * 21 = 63 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。', 'エイドリアンの年齢はハリエットの 3 倍なので、エイドリアンは 3 * 21 = 63 歳です。']\nnew_fact = infer_new_fact(selected) # '3 年後、彼は63 + 3 = 66 歳になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリエットはザックの半分の年齢です。', 'ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。']\nnew_fact = infer_new_fact(selected) # 'ハリエットがザックの半分の年齢の場合、ザックは 21 * 2 = 42 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。', 'ハリエットがザックの半分の年齢の場合、ザックは 21 * 2 = 42 歳です。']\nnew_fact = infer_new_fact(selected) # '3 年後には、彼は 42 + 3 = 45 歳になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。', '3 年後、ハリエットは 21 + 3 = 24 歳になります。', '3 年後、彼は63 + 3 = 66 歳になります。', '3 年後には、彼は 42 + 3 = 45 歳になります。']\nnew_fact = infer_new_fact(selected) # '3 年後の 3 人の年齢を合計すると、45 + 66 + 24 = 135 歳になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。', '3 年後の 3 人の年齢を合計すると、45 + 66 + 24 = 135 歳になります。']\nnew_fact = infer_new_fact(selected) # '3 年後の平均年齢は 135/3 = 45 歳になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['エイドリアンはハリエットの 3 倍の年齢で、', 'ハリエットの現在の年齢を 21 歳として、3 年後の 3 人の平均年齢を計算してください。']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_219_4e84897434", "context": "", "options": [], "answer": "54", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 6], "consequent": 8}, {"antecedents": [6, 7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: Naomi scored 68 points.; int1 & sent3 -> int2: Yuri scored 1/2 (68) + 10 = 44 points; int1 & sent4 -> int3: Brianna scored 68 + 17 = 85 points; int1 & int2 & int3 -> int4: Naomi, Yuri + Brianna scored = 68 + 44 + 85 = 197 points; int4 & sent5 -> int5: Jojo scored the rest 251 - 197 = 54 points; int5 -> int6: Jojo scored 54 points.; int6 & sent5 -> int7: The answer is 54;", "textual_logical_units": {"1": "4 人の学生がボードゲームで合計 251 ポイントを獲得しました。", "2": "ナオミは 68 ポイントを獲得しました。", "3": "ユーリはナオミの半分より10ポイント多い得点を獲得し、", "4": "ブリアナはナオミより 17 ポイント多く獲得しました。", "5": "ジョジョはポイントを獲得しましたか？", "6": "ナオミは 68 ポイントを獲得しました。", "7": "ユーリは 1/2 (68) + 10 = 44 ポイントを獲得しました。", "8": "ブリアナは 68 + 17 = 85 ポイントを獲得しました。", "9": "ナオミ、ユーリ + ブリアナの得点 = 68 + 44 + 85 = 197 ポイント", "10": "ジョジョは残りの 251 - 197 = 54 ポイントを獲得しました", "11": "ジョジョは 54 ポイントを獲得しました", "12": "The answer is 54"}, "human_translated": true, "code_input": "####\nfacts = ['4 人の学生がボードゲームで合計 251 ポイントを獲得しました。', 'ナオミは 68 ポイントを獲得しました。', 'ユーリはナオミの半分より10ポイント多い得点を獲得し、', 'ブリアナはナオミより 17 ポイント多く獲得しました。']\nquestion = 'ジョジョはポイントを獲得しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ナオミは 68 ポイントを獲得しました。']\nnew_fact = infer_new_fact(selected) # 'ナオミは 68 ポイントを獲得しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ユーリはナオミの半分より10ポイント多い得点を獲得し、', 'ナオミは 68 ポイントを獲得しました。']\nnew_fact = infer_new_fact(selected) # 'ユーリは 1/2 (68) + 10 = 44 ポイントを獲得しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブリアナはナオミより 17 ポイント多く獲得しました。', 'ナオミは 68 ポイントを獲得しました。']\nnew_fact = infer_new_fact(selected) # 'ブリアナは 68 + 17 = 85 ポイントを獲得しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ナオミは 68 ポイントを獲得しました。', 'ユーリは 1/2 (68) + 10 = 44 ポイントを獲得しました。', 'ブリアナは 68 + 17 = 85 ポイントを獲得しました。']\nnew_fact = infer_new_fact(selected) # 'ナオミ、ユーリ + ブリアナの得点 = 68 + 44 + 85 = 197 ポイント'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョジョはポイントを獲得しましたか？', 'ナオミ、ユーリ + ブリアナの得点 = 68 + 44 + 85 = 197 ポイント']\nnew_fact = infer_new_fact(selected) # 'ジョジョは残りの 251 - 197 = 54 ポイントを獲得しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョジョは残りの 251 - 197 = 54 ポイントを獲得しました']\nnew_fact = infer_new_fact(selected) # 'ジョジョは 54 ポイントを獲得しました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョジョはポイントを獲得しましたか？', 'ジョジョは 54 ポイントを獲得しました']\nnew_fact = infer_new_fact(selected) # 'The answer is 54'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '54'"}
{"id": "GSM8K_220_d42c6be462", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: It takes 10 minutes to complete a crossword puzzle and she completed 3 for a total of 10*3 = 30 minutes; sent2 & sent3 -> int2: It takes 5 minutes to complete a sudoku puzzle and she completed 8 for a total of 5*8 = 40 minutes; int1 & int2 -> int3: She spent 30 minutes on crosswords and 40 minutes on sudoku for a total of 30+40 = 70 minutes; int3 & sent4 -> int4: The answer is 70;", "textual_logical_units": {"1": "カルメンはクロスワードパズル 1 つを完成させるのに 10 分かかり、", "2": "数独パズル 1 つを完成させるのに 5 分かかります。", "3": "週末に彼女は 3 つのクロスワードパズルと 8 つの数独パズルを解きました。", "4": "彼女はこれらのゲームにどれくらいの時間を費やしましたか？", "5": "クロスワードパズル 1 つを完成させるのに 10 分かかり、彼女は 3 つ完成させたので、合計で 10 * 3 = 30 分かかりました", "6": "数独パズル 1 つを完成させるのは 5 分かかるので、合計で 5 * 8 = 40 分かかりました。", "7": "彼女はクロスワードパズルに 30 分、数独に 40 分を費やし、合計で 30 + 40 = 70 分を費やしました", "8": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['カルメンはクロスワードパズル 1 つを完成させるのに 10 分かかり、', '数独パズル 1 つを完成させるのに 5 分かかります。', '週末に彼女は 3 つのクロスワードパズルと 8 つの数独パズルを解きました。']\nquestion = '彼女はこれらのゲームにどれくらいの時間を費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カルメンはクロスワードパズル 1 つを完成させるのに 10 分かかり、', '週末に彼女は 3 つのクロスワードパズルと 8 つの数独パズルを解きました。']\nnew_fact = infer_new_fact(selected) # 'クロスワードパズル 1 つを完成させるのに 10 分かかり、彼女は 3 つ完成させたので、合計で 10 * 3 = 30 分かかりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['数独パズル 1 つを完成させるのに 5 分かかります。', '週末に彼女は 3 つのクロスワードパズルと 8 つの数独パズルを解きました。']\nnew_fact = infer_new_fact(selected) # '数独パズル 1 つを完成させるのは 5 分かかるので、合計で 5 * 8 = 40 分かかりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クロスワードパズル 1 つを完成させるのに 10 分かかり、彼女は 3 つ完成させたので、合計で 10 * 3 = 30 分かかりました', '数独パズル 1 つを完成させるのは 5 分かかるので、合計で 5 * 8 = 40 分かかりました。']\nnew_fact = infer_new_fact(selected) # '彼女はクロスワードパズルに 30 分、数独に 40 分を費やし、合計で 30 + 40 = 70 分を費やしました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はこれらのゲームにどれくらいの時間を費やしましたか？', '彼女はクロスワードパズルに 30 分、数独に 40 分を費やし、合計で 30 + 40 = 70 分を費やしました']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_221_be07c6fc3b", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: After watering Celine's garden, 120 - 90 = 30 liters of water were left in the tank.; int1 & sent3 -> int2: Celine was able to collect 30 x 2 = 60 liters of rainwater.; int1 & int2 -> int3: Thus, there are 30 + 60 = 90 liters of water in the tank.; int3 & sent3 -> int4: The answer is 90;", "textual_logical_units": {"1": "ウォータータンクには 120 リットルの水で満たされています。", "2": "セリーヌはタンクの 90 リットルの水を小さな庭の水やりに使いました。", "3": "その後、彼女は残った雨水の 2 倍の雨水を集めることができました。", "4": "現在、タンクには何リットルの水が入っていますか？", "5": "セリーヌの庭に水をやった後、タンクには 120 - 90 = 30 リットルの水が残りました。", "6": "セリーヌは 30 x 2 = 60 リットルの雨水を集めることができました。", "7": "したがって、タンクには 30 + 60 = 90 リットルの水が入っています。", "8": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = ['ウォータータンクには 120 リットルの水で満たされています。', 'セリーヌはタンクの 90 リットルの水を小さな庭の水やりに使いました。', 'その後、彼女は残った雨水の 2 倍の雨水を集めることができました。']\nquestion = '現在、タンクには何リットルの水が入っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ウォータータンクには 120 リットルの水で満たされています。', 'セリーヌはタンクの 90 リットルの水を小さな庭の水やりに使いました。']\nnew_fact = infer_new_fact(selected) # 'セリーヌの庭に水をやった後、タンクには 120 - 90 = 30 リットルの水が残りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は残った雨水の 2 倍の雨水を集めることができました。', 'セリーヌの庭に水をやった後、タンクには 120 - 90 = 30 リットルの水が残りました。']\nnew_fact = infer_new_fact(selected) # 'セリーヌは 30 x 2 = 60 リットルの雨水を集めることができました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['セリーヌの庭に水をやった後、タンクには 120 - 90 = 30 リットルの水が残りました。', 'セリーヌは 30 x 2 = 60 リットルの雨水を集めることができました。']\nnew_fact = infer_new_fact(selected) # 'したがって、タンクには 30 + 60 = 90 リットルの水が入っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は残った雨水の 2 倍の雨水を集めることができました。', 'したがって、タンクには 30 + 60 = 90 リットルの水が入っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_222_d91f050b29", "context": "", "options": [], "answer": "140", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First find the number of petunias Andy plants: 90 flowers - 40 = 50 flowers; int1 & sent1 -> int2: Then add the number of each kind of flower he plants to find the total number: 50 flowers + 90 flowers = 140 flowers; int2 & sent3 -> int3: The answer is 140;", "textual_logical_units": {"1": "アンディは 90 本のゼラニウムと", "2": "ゼラニウムより40少ないペチュニアを植えます。", "3": "彼は全部で何本の花を植えますか？", "4": "まず、アンディが植えるペチュニアの数を求めます。 90 本 - 40 = 50 本", "5": "次に、彼が植える各種の花の数を足して、総数を求めます。 50 本 + 90 本 = 140 本", "6": "The answer is 140"}, "human_translated": true, "code_input": "####\nfacts = ['アンディは 90 本のゼラニウムと', 'ゼラニウムより40少ないペチュニアを植えます。']\nquestion = '彼は全部で何本の花を植えますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['アンディは 90 本のゼラニウムと', 'ゼラニウムより40少ないペチュニアを植えます。']\nnew_fact = infer_new_fact(selected) # 'まず、アンディが植えるペチュニアの数を求めます。 90 本 - 40 = 50 本'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アンディは 90 本のゼラニウムと', 'まず、アンディが植えるペチュニアの数を求めます。 90 本 - 40 = 50 本']\nnew_fact = infer_new_fact(selected) # '次に、彼が植える各種の花の数を足して、総数を求めます。 50 本 + 90 本 = 140 本'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は全部で何本の花を植えますか？', '次に、彼が植える各種の花の数を足して、総数を求めます。 50 本 + 90 本 = 140 本']\nnew_fact = infer_new_fact(selected) # 'The answer is 140'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '140'"}
{"id": "GSM8K_223_3290e1a204", "context": "", "options": [], "answer": "20000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [1, 2, 3], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 15000/3 = 5,000 is spent on advertisement in the second year.; int1 & sent1 & sent2 -> int2: The total on advertisement for the two years is 15000+5000 = 20000 dollars.; int2 & sent2 -> int3: The answer is 20000;", "textual_logical_units": {"1": "ある会社は 1 年間に 15,000 ドルを広告に費やし、", "2": "その金額の 3 分の 1 を翌年の広告に費やします。  同社が 2 年間に広告に費やした総額はいくらですか？", "3": "15,000/3 = 2 年目には 5,000 ドルが広告に費やされます。", "4": "2 年間の広告費の合計は、15,000 + 5,000 = 20,000 ドルです。", "5": "The answer is 20000"}, "human_translated": true, "code_input": "####\nfacts = ['ある会社は 1 年間に 15,000 ドルを広告に費やし、']\nquestion = 'その金額の 3 分の 1 を翌年の広告に費やします。\\xa0 同社が 2 年間に広告に費やした総額はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ある会社は 1 年間に 15,000 ドルを広告に費やし、', 'その金額の 3 分の 1 を翌年の広告に費やします。\\xa0 同社が 2 年間に広告に費やした総額はいくらですか？']\nnew_fact = infer_new_fact(selected) # '15,000/3 = 2 年目には 5,000 ドルが広告に費やされます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ある会社は 1 年間に 15,000 ドルを広告に費やし、', 'その金額の 3 分の 1 を翌年の広告に費やします。\\xa0 同社が 2 年間に広告に費やした総額はいくらですか？', '15,000/3 = 2 年目には 5,000 ドルが広告に費やされます。']\nnew_fact = infer_new_fact(selected) # '2 年間の広告費の合計は、15,000 + 5,000 = 20,000 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その金額の 3 分の 1 を翌年の広告に費やします。\\xa0 同社が 2 年間に広告に費やした総額はいくらですか？', '2 年間の広告費の合計は、15,000 + 5,000 = 20,000 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 20000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20000'"}
{"id": "GSM8K_224_34806f09cd", "context": "", "options": [], "answer": "180", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 7}, {"antecedents": [3, 5], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: Carlos would have to pay $30 x 3 = $90; sent3 & sent5 -> int2: Benji would have to pay $18 x 5 = $90; int1 & int2 -> int3: All together, Carlos and Benji will have to pay $90 + $90 = $180; int3 & sent6 -> int4: The answer is 180;", "textual_logical_units": {"1": "カルロスとベンジーはビーチにいます。", "2": "カルロスは 1 時間 30 ドルでカヌーをレンタルし、", "3": "ベンジーはバナナボートを 1 時間 18 ドルでレンタルします。", "4": "カルロスがボートを 3 時間使用し、", "5": "ベンジーがバナナボートを 5 時間使用した場合、", "6": "レンタル料は全部でいくらになりますか？", "7": "カルロスは 30 ドル x 3 = 90 ドルを支払う必要があります", "8": "ベンジーは 18 ドル x 5 = 90 ドルを支払う必要があります", "9": "カルロスとベンジーは合わせて 90 ドル + 90 ドル= 180 ドルを支払う必要があります", "10": "The answer is 180"}, "human_translated": true, "code_input": "####\nfacts = ['カルロスとベンジーはビーチにいます。', 'カルロスは 1 時間 30 ドルでカヌーをレンタルし、', 'ベンジーはバナナボートを 1 時間 18 ドルでレンタルします。', 'カルロスがボートを 3 時間使用し、', 'ベンジーがバナナボートを 5 時間使用した場合、']\nquestion = 'レンタル料は全部でいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カルロスは 1 時間 30 ドルでカヌーをレンタルし、', 'カルロスがボートを 3 時間使用し、']\nnew_fact = infer_new_fact(selected) # 'カルロスは 30 ドル x 3 = 90 ドルを支払う必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ベンジーはバナナボートを 1 時間 18 ドルでレンタルします。', 'ベンジーがバナナボートを 5 時間使用した場合、']\nnew_fact = infer_new_fact(selected) # 'ベンジーは 18 ドル x 5 = 90 ドルを支払う必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カルロスは 30 ドル x 3 = 90 ドルを支払う必要があります', 'ベンジーは 18 ドル x 5 = 90 ドルを支払う必要があります']\nnew_fact = infer_new_fact(selected) # 'カルロスとベンジーは合わせて 90 ドル + 90 ドル= 180 ドルを支払う必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['レンタル料は全部でいくらになりますか？', 'カルロスとベンジーは合わせて 90 ドル + 90 ドル= 180 ドルを支払う必要があります']\nnew_fact = infer_new_fact(selected) # 'The answer is 180'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '180'"}
{"id": "GSM8K_225_4b7a00fa22", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: The number of days to travel by car are 6/2 = 3 days.; int1 & sent2 -> int2: The total number of days for the whole trip is 6 + 3 = 9 days.; int2 & sent4 & sent5 -> int3: The answer is 9;", "textual_logical_units": {"1": "アンドリューはニュージャージーからロチェスターまでのドライブ旅行を計画しています。", "2": "ニュージャージーからロチェスターまではバスで移動すると 6 日かかり、", "3": "車で移動するとその半分の日数がかかります。", "4": "バスでロチェスターまで行き、ロチェスターからは車で戻る場合、", "5": "彼は何日間旅行することになりますか？", "6": "車で移動する日数は 6/2 = 3 日です。", "7": "旅行全体の合計日数は 6 + 3 = 9 日です。", "8": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = ['アンドリューはニュージャージーからロチェスターまでのドライブ旅行を計画しています。', 'ニュージャージーからロチェスターまではバスで移動すると 6 日かかり、', '車で移動するとその半分の日数がかかります。', 'バスでロチェスターまで行き、ロチェスターからは車で戻る場合、']\nquestion = '彼は何日間旅行することになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ニュージャージーからロチェスターまではバスで移動すると 6 日かかり、', '車で移動するとその半分の日数がかかります。']\nnew_fact = infer_new_fact(selected) # '車で移動する日数は 6/2 = 3 日です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ニュージャージーからロチェスターまではバスで移動すると 6 日かかり、', '車で移動する日数は 6/2 = 3 日です。']\nnew_fact = infer_new_fact(selected) # '旅行全体の合計日数は 6 + 3 = 9 日です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['バスでロチェスターまで行き、ロチェスターからは車で戻る場合、', '彼は何日間旅行することになりますか？', '旅行全体の合計日数は 6 + 3 = 9 日です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_226_197541af27", "context": "", "options": [], "answer": "33", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 5, 6], "consequent": 7}, {"antecedents": [4, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: First find the final number of grass type Pokemon: 20 grass type + 14 grass type = 34 grass type; sent2 & sent3 -> int2: Then find the final number of water type Pokemon: 40 water type - 8 water type = 32 water type; int1 & int2 & sent2 -> int3: Then add the number of each type of Pokemon to find the total number: 34 Pokemon + 32 Pokemon + 30 Pokemon = 96 Pokemon; int2 & int3 & sent4 -> int4: Then divide the number of water type Pokemon by the total number of Pokemon and multiply by 100% to express the answer as a percentage: 32 water type / 96 Pokemon * 100% = 33.333...%, which rounds down to 33%; int4 & sent4 -> int5: The answer is 33;", "textual_logical_units": {"1": "ジェームズはポケモンカードを数えています。", "2": "炎タイプが 30 種類、草タイプが 20 種類、水タイプが 40 種類あります。", "3": "彼が水タイプの 8 種類をなくし、14 種類の草タイプを購入した場合、", "4": "ランダムに選ばれたカードが水タイプになる確率はどれくらいですか (最も近い整数に四捨五入)？", "5": "まず、草タイプのポケモンの最終的な数を求めます。 20 の草タイプ + 14 の草タイプ = 34 の草タイプ", "6": "次に、水タイプのポケモンの最終的な数を求めます。 40 の水タイプ - 8 の水タイプ = 32 の水タイプ", "7": "次に、各タイプのポケモンの数を足して合計数を求めます。 34 ポケモン + 32 ポケモン + 30 ポケモン = 96 ポケモン", "8": "次に、水タイプのポケモンの数をポケモンの総数で割り、100% を掛けて答えをパーセントで表します。 32 の水タイプ/96 ポケモン * 100% = 33.333...%、切り捨てると 33% になります", "9": "The answer is 33"}, "human_translated": true, "code_input": "####\nfacts = ['ジェームズはポケモンカードを数えています。', '炎タイプが 30 種類、草タイプが 20 種類、水タイプが 40 種類あります。', '彼が水タイプの 8 種類をなくし、14 種類の草タイプを購入した場合、']\nquestion = 'ランダムに選ばれたカードが水タイプになる確率はどれくらいですか (最も近い整数に四捨五入)？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['炎タイプが 30 種類、草タイプが 20 種類、水タイプが 40 種類あります。', '彼が水タイプの 8 種類をなくし、14 種類の草タイプを購入した場合、']\nnew_fact = infer_new_fact(selected) # 'まず、草タイプのポケモンの最終的な数を求めます。 20 の草タイプ + 14 の草タイプ = 34 の草タイプ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['炎タイプが 30 種類、草タイプが 20 種類、水タイプが 40 種類あります。', '彼が水タイプの 8 種類をなくし、14 種類の草タイプを購入した場合、']\nnew_fact = infer_new_fact(selected) # '次に、水タイプのポケモンの最終的な数を求めます。 40 の水タイプ - 8 の水タイプ = 32 の水タイプ'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['炎タイプが 30 種類、草タイプが 20 種類、水タイプが 40 種類あります。', 'まず、草タイプのポケモンの最終的な数を求めます。 20 の草タイプ + 14 の草タイプ = 34 の草タイプ', '次に、水タイプのポケモンの最終的な数を求めます。 40 の水タイプ - 8 の水タイプ = 32 の水タイプ']\nnew_fact = infer_new_fact(selected) # '次に、各タイプのポケモンの数を足して合計数を求めます。 34 ポケモン + 32 ポケモン + 30 ポケモン = 96 ポケモン'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ランダムに選ばれたカードが水タイプになる確率はどれくらいですか (最も近い整数に四捨五入)？', '次に、水タイプのポケモンの最終的な数を求めます。 40 の水タイプ - 8 の水タイプ = 32 の水タイプ', '次に、各タイプのポケモンの数を足して合計数を求めます。 34 ポケモン + 32 ポケモン + 30 ポケモン = 96 ポケモン']\nnew_fact = infer_new_fact(selected) # '次に、水タイプのポケモンの数をポケモンの総数で割り、100% を掛けて答えをパーセントで表します。 32 の水タイプ/96 ポケモン * 100% = 33.333...%、切り捨てると 33% になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ランダムに選ばれたカードが水タイプになる確率はどれくらいですか (最も近い整数に四捨五入)？', '次に、水タイプのポケモンの数をポケモンの総数で割り、100% を掛けて答えをパーセントで表します。 32 の水タイプ/96 ポケモン * 100% = 33.333...%、切り捨てると 33% になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 33'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '33'"}
{"id": "GSM8K_227_b64de3691a", "context": "", "options": [], "answer": "9", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent4 -> int1: He orders 2 sauces at $0.25 each so 2*.25 = $0.50 for sauce; int1 & sent3 -> int2: He orders extra meat for $2.00, extra cheese for $1.00, avocado for $1.00 and $0.50 for sauce for a total of 2+1+1+.50 = $4.50 in extras; int2 & sent2 & sent5 -> int3: His burrito cost $6.50 and he adds $4.50 in extras and upgrades his meal for $3.00 so now he owes, 6.50+4.50+3 = $14.00; sent1 & sent6 -> int4: He has a $5.00 gift card and his current bill is $14.00 so he will owe 14-5 = $9.00; int4 & sent7 -> int5: The answer is 9;", "textual_logical_units": {"1": "チャドはランチに自分で作るブリトーを注文しました。", "2": "ベースになるブリトーは 6.50 ドルです。", "3": "彼は 2.00 ドルの追加の肉、1.00 ドルの追加のチーズ、1.00 ドルのアボカド、", "4": "1 つ 0.25 ドルのソースを 2 つ追加します。", "5": "彼は、チップスとドリンクを 3.00 ドルで追加し、食事をアップグレードすることにしました。", "6": "彼は会計時に使用する 5.00 ドルのギフトカードを持っています。", "7": "彼はいくら支払う必要がありますか？", "8": "彼は 1 つ 0.25 ドルのソースをで 2 つ注文するので、ソースは 2 * .25 = 0.50 ドルになります", "9": "彼は追加の肉を 2.00 ドル、追加のチーズを 1.00 ドル、アボカドを 1.00 ドル、ソースを 0.50 ドルで注文し、合計 2 + 1 + 1 + .50 = 4.50 ドル分を追加注文します", "10": "ブリトーは 6.50 ドルで、追加注文で 4.50 ドルを追加し、3.00 ドルで食事をアップグレードしたので、現在支払う必要があるのは 6.50 + 4.50 + 3 = 14.00 ドルです", "11": "彼は 5.00 ドルのギフトカードを持っていて、現在の請求額は 14.00 ドルなので、14 - 5 = 9.00 ドルを支払う必要があります", "12": "The answer is 9"}, "human_translated": true, "code_input": "####\nfacts = [ 'チャドはランチに自分で作るブリトーを注文しました。',\n  'ベースになるブリトーは 6.50 ドルです。',\n  '彼は 2.00 ドルの追加の肉、1.00 ドルの追加のチーズ、1.00 ドルのアボカド、',\n  '1 つ 0.25 ドルのソースを 2 つ追加します。',\n  '彼は、チップスとドリンクを 3.00 ドルで追加し、食事をアップグレードすることにしました。',\n  '彼は会計時に使用する 5.00 ドルのギフトカードを持っています。']\nquestion = '彼はいくら支払う必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 つ 0.25 ドルのソースを 2 つ追加します。']\nnew_fact = infer_new_fact(selected) # '彼は 1 つ 0.25 ドルのソースをで 2 つ注文するので、ソースは 2 * .25 = 0.50 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 2.00 ドルの追加の肉、1.00 ドルの追加のチーズ、1.00 ドルのアボカド、', '彼は 1 つ 0.25 ドルのソースをで 2 つ注文するので、ソースは 2 * .25 = 0.50 ドルになります']\nnew_fact = infer_new_fact(selected) # '彼は追加の肉を 2.00 ドル、追加のチーズを 1.00 ドル、アボカドを 1.00 ドル、ソースを 0.50 ドルで注文し、合計 2 + 1 + 1 + .50 = 4.50 ドル分を追加注文します'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ベースになるブリトーは 6.50 ドルです。', '彼は、チップスとドリンクを 3.00 ドルで追加し、食事をアップグレードすることにしました。', '彼は追加の肉を 2.00 ドル、追加のチーズを 1.00 ドル、アボカドを 1.00 ドル、ソースを 0.50 ドルで注文し、合計 2 + 1 + 1 + .50 = 4.50 ドル分を追加注文します']\nnew_fact = infer_new_fact(selected) # 'ブリトーは 6.50 ドルで、追加注文で 4.50 ドルを追加し、3.00 ドルで食事をアップグレードしたので、現在支払う必要があるのは 6.50 + 4.50 + 3 = 14.00 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['チャドはランチに自分で作るブリトーを注文しました。', '彼は会計時に使用する 5.00 ドルのギフトカードを持っています。']\nnew_fact = infer_new_fact(selected) # '彼は 5.00 ドルのギフトカードを持っていて、現在の請求額は 14.00 ドルなので、14 - 5 = 9.00 ドルを支払う必要があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はいくら支払う必要がありますか？', '彼は 5.00 ドルのギフトカードを持っていて、現在の請求額は 14.00 ドルなので、14 - 5 = 9.00 ドルを支払う必要があります']\nnew_fact = infer_new_fact(selected) # 'The answer is 9'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9'"}
{"id": "GSM8K_228_0a1e116105", "context": "", "options": [], "answer": "1", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Her mom places 2 pieces per minute because 4 / 2 = 2; int1 & sent2 -> int2: On average they get in 6 pieces per minute because 4 + 2 = 6; int2 & sent1 -> int3: It will take 60 minutes to complete the puzzle because 360 / 6 = 60; int3 & sent4 -> int4: It will take one hour because 60 / 60 = 1; int4 & sent4 -> int5: The answer is 1;", "textual_logical_units": {"1": "カリンダはお母さんと一緒に 360 ピースのパズルに取り組んでいます。", "2": "カリンダは通常、1 分間に 4 ピースを追加できます。", "3": "彼女のお母さんは通常、1 分間にカリンダの半分のピースを置くことができます。", "4": "このパズルを完成させるのに何時間かかりますか？", "5": "4/2 = 2 なので、彼女のお母さんは 1 分間に 2 ピースを置きます。", "6": "4 + 2 = 6 なので、平均で 1 分間に 6 ピースになります。", "7": "360/ 6 = 60 なので、パズルを完成させるのには 60 分かかります", "8": "60/60 = 1 なので、1 時間かかることになります", "9": "The answer is 1"}, "human_translated": true, "code_input": "####\nfacts = ['カリンダはお母さんと一緒に 360 ピースのパズルに取り組んでいます。', 'カリンダは通常、1 分間に 4 ピースを追加できます。', '彼女のお母さんは通常、1 分間にカリンダの半分のピースを置くことができます。']\nquestion = 'このパズルを完成させるのに何時間かかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カリンダは通常、1 分間に 4 ピースを追加できます。', '彼女のお母さんは通常、1 分間にカリンダの半分のピースを置くことができます。']\nnew_fact = infer_new_fact(selected) # '4/2 = 2 なので、彼女のお母さんは 1 分間に 2 ピースを置きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カリンダは通常、1 分間に 4 ピースを追加できます。', '4/2 = 2 なので、彼女のお母さんは 1 分間に 2 ピースを置きます。']\nnew_fact = infer_new_fact(selected) # '4 + 2 = 6 なので、平均で 1 分間に 6 ピースになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カリンダはお母さんと一緒に 360 ピースのパズルに取り組んでいます。', '4 + 2 = 6 なので、平均で 1 分間に 6 ピースになります。']\nnew_fact = infer_new_fact(selected) # '360/ 6 = 60 なので、パズルを完成させるのには 60 分かかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['このパズルを完成させるのに何時間かかりますか？', '360/ 6 = 60 なので、パズルを完成させるのには 60 分かかります']\nnew_fact = infer_new_fact(selected) # '60/60 = 1 なので、1 時間かかることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['このパズルを完成させるのに何時間かかりますか？', '60/60 = 1 なので、1 時間かかることになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 1'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1'"}
{"id": "GSM8K_229_b451177ace", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [5, 6, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: When Ashlyn found out that 30% of the melons were ready, she took home 30/100 *120 = 36 watermelons.; int1 & sent1 -> int2: The number of watermelons remaining on the farm is 120-36 =84; int2 & sent5 & sent6 -> int3: When she returned two weeks later, she found that 3/4*84 = 63 were ready for harvest,; int2 & sent1 -> int4: The number of watermelons that were not ready is 84-63 =21; int4 & sent7 -> int5: The answer is 21;", "textual_logical_units": {"1": "あるスイカ農園では、120 個の赤ちゃんスイカが生産されました。", "2": "アシュリンが 2 か月後に農場に行くと、", "3": "30% のスイカが収穫できる状態であることに気付き、", "4": "彼女はそれらを家に持ち帰りました。", "5": "2 週間後に彼女が戻ってくると、", "6": "残りのスイカの 3/4 が収穫できる状態だったので、彼女はそれらを収穫しました。", "7": "2 週間後に収穫できる状態になっていなかったスイカはいくつありましたか？", "8": "アシュリンは 30% のスイカが収穫できる状態であることに気付き、30/100 *120 = 36 個のスイカを持ち帰りました。", "9": "農場に残っているスイカの数は 120 - 36 = 84 個です", "10": "2 週間後に戻ってみると、3/4 * 84 = 63 個が収穫できる状態であることがわかりました。", "11": "収穫できる状態になっていなかったスイカの数は 84 - 63 = 21 個です", "12": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = [ 'あるスイカ農園では、120 個の赤ちゃんスイカが生産されました。',\n  'アシュリンが 2 か月後に農場に行くと、',\n  '30% のスイカが収穫できる状態であることに気付き、',\n  '彼女はそれらを家に持ち帰りました。',\n  '2 週間後に彼女が戻ってくると、',\n  '残りのスイカの 3/4 が収穫できる状態だったので、彼女はそれらを収穫しました。']\nquestion = '2 週間後に収穫できる状態になっていなかったスイカはいくつありましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['あるスイカ農園では、120 個の赤ちゃんスイカが生産されました。', '30% のスイカが収穫できる状態であることに気付き、']\nnew_fact = infer_new_fact(selected) # 'アシュリンは 30% のスイカが収穫できる状態であることに気付き、30/100 *120 = 36 個のスイカを持ち帰りました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['あるスイカ農園では、120 個の赤ちゃんスイカが生産されました。', 'アシュリンは 30% のスイカが収穫できる状態であることに気付き、30/100 *120 = 36 個のスイカを持ち帰りました。']\nnew_fact = infer_new_fact(selected) # '農場に残っているスイカの数は 120 - 36 = 84 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 週間後に彼女が戻ってくると、', '残りのスイカの 3/4 が収穫できる状態だったので、彼女はそれらを収穫しました。', '農場に残っているスイカの数は 120 - 36 = 84 個です']\nnew_fact = infer_new_fact(selected) # '2 週間後に戻ってみると、3/4 * 84 = 63 個が収穫できる状態であることがわかりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['あるスイカ農園では、120 個の赤ちゃんスイカが生産されました。', '農場に残っているスイカの数は 120 - 36 = 84 個です']\nnew_fact = infer_new_fact(selected) # '収穫できる状態になっていなかったスイカの数は 84 - 63 = 21 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 週間後に収穫できる状態になっていなかったスイカはいくつありましたか？', '収穫できる状態になっていなかったスイカの数は 84 - 63 = 21 個です']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_230_341cf3f089", "context": "", "options": [], "answer": "276000", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [1, 4], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 5], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The cars cost 20000*12=$240,000; int1 & sent3 -> int2: So the tax came out to 240,000*.1=$24,000; int1 & int2 -> int3: So the cars cost 240,000+24,000=$264,000; sent1 & sent4 -> int4: Registration cost another 12*1000=12,000; int3 & int4 -> int5: So his total cost is 264,000+12,000=$276,000; sent1 & sent5 -> int6: The answer is 276,000;", "textual_logical_units": {"1": "マークは会社のために 12 台の車を購入します。", "2": "車 1 台は 2 万ドルで売られています。", "3": "彼は車に 10% の税金を払い、", "4": "それぞれの登録にさらに 1,000 ドルを払います。", "5": "彼は全部でいくら払いますか？", "6": "車の価格は 20,000 * 12 = 24 万ドルです", "7": "税金は 24 万 * .1 = 24,000 ドルになります", "8": "つまり、車の価格は 24 万 + 2 万 4,000 = 26 万 4,000 ドルです", "9": "登録にはさらに 12 * 1000 = 12,000 ドルかかります", "10": "したがって、総費用は 26 万 4,000 + 12,000 = 27 万 6,000 ドルです", "11": "The answer is 276,000"}, "human_translated": true, "code_input": "####\nfacts = ['マークは会社のために 12 台の車を購入します。', '車 1 台は 2 万ドルで売られています。', '彼は車に 10% の税金を払い、', 'それぞれの登録にさらに 1,000 ドルを払います。']\nquestion = '彼は全部でいくら払いますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マークは会社のために 12 台の車を購入します。', '車 1 台は 2 万ドルで売られています。']\nnew_fact = infer_new_fact(selected) # '車の価格は 20,000 * 12 = 24 万ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は車に 10% の税金を払い、', '車の価格は 20,000 * 12 = 24 万ドルです']\nnew_fact = infer_new_fact(selected) # '税金は 24 万 * .1 = 24,000 ドルになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['車の価格は 20,000 * 12 = 24 万ドルです', '税金は 24 万 * .1 = 24,000 ドルになります']\nnew_fact = infer_new_fact(selected) # 'つまり、車の価格は 24 万 + 2 万 4,000 = 26 万 4,000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは会社のために 12 台の車を購入します。', 'それぞれの登録にさらに 1,000 ドルを払います。']\nnew_fact = infer_new_fact(selected) # '登録にはさらに 12 * 1000 = 12,000 ドルかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、車の価格は 24 万 + 2 万 4,000 = 26 万 4,000 ドルです', '登録にはさらに 12 * 1000 = 12,000 ドルかかります']\nnew_fact = infer_new_fact(selected) # 'したがって、総費用は 26 万 4,000 + 12,000 = 27 万 6,000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['マークは会社のために 12 台の車を購入します。', '彼は全部でいくら払いますか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 276,000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '276000'"}
{"id": "GSM8K_231_dfc5dc70ec", "context": "", "options": [], "answer": "50", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: On Monday, Kylie collects 20 + 5 = 25 shells; sent3 -> int2: On Tuesday, Kylie collects 25 * 2 = 50 shells; int2 & sent4 -> int3: The answer is 50;", "textual_logical_units": {"1": "カイリーとロバートは、貝殻を集めるためにビーチに行くのを楽しんでいます。", "2": "月曜日、カイリーは 20 個の貝殻を集めるロバートよりも 5 個多く貝殻を集めます。", "3": "火曜日、カイリーは月曜日の 2 倍の貝殻を集めます。", "4": "カイリーは火曜日に何個の貝殻を集めますか？", "5": "月曜日、カイリーは 20 + 5 = 25 個の貝殻を集めます", "6": "火曜日、カイリーは 25 * 2 = 50 個の貝殻を集めます", "7": "The answer is 50"}, "human_translated": true, "code_input": "####\nfacts = ['カイリーとロバートは、貝殻を集めるためにビーチに行くのを楽しんでいます。', '月曜日、カイリーは 20 個の貝殻を集めるロバートよりも 5 個多く貝殻を集めます。', '火曜日、カイリーは月曜日の 2 倍の貝殻を集めます。']\nquestion = 'カイリーは火曜日に何個の貝殻を集めますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['月曜日、カイリーは 20 個の貝殻を集めるロバートよりも 5 個多く貝殻を集めます。']\nnew_fact = infer_new_fact(selected) # '月曜日、カイリーは 20 + 5 = 25 個の貝殻を集めます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['火曜日、カイリーは月曜日の 2 倍の貝殻を集めます。']\nnew_fact = infer_new_fact(selected) # '火曜日、カイリーは 25 * 2 = 50 個の貝殻を集めます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カイリーは火曜日に何個の貝殻を集めますか？', '火曜日、カイリーは 25 * 2 = 50 個の貝殻を集めます']\nnew_fact = infer_new_fact(selected) # 'The answer is 50'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '50'"}
{"id": "GSM8K_232_0687e50a8c", "context": "", "options": [], "answer": "75", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If there were 50 ants, the total number of bugs in the garden is 1 bug/2 ants * 50 ants = 25 bugs; int1 & sent3 -> int2: The total number of insects in the garden is 25 bugs + 50 ants = 75 insects; int2 & sent4 -> int3: The answer is 75;", "textual_logical_units": {"1": "ダックスは農場にリンゴを摘みに行き、", "2": "庭でアリの半分の数の昆虫を見つけました。", "3": "アリが 50 匹いた場合の、", "4": "庭にいた昆虫の総数を計算してください。", "5": "アリが 50 匹いた場合、庭にいた昆虫の総数は昆虫 1 匹/アリ 2 匹* アリ 50 匹 = 昆虫 25 匹です。", "6": "庭の昆虫の総数は、25 匹の昆虫 + 50 匹のアリ = 75 匹の昆虫です。", "7": "The answer is 75"}, "human_translated": true, "code_input": "####\nfacts = ['ダックスは農場にリンゴを摘みに行き、', '庭でアリの半分の数の昆虫を見つけました。', 'アリが 50 匹いた場合の、']\nquestion = '庭にいた昆虫の総数を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['庭でアリの半分の数の昆虫を見つけました。', 'アリが 50 匹いた場合の、']\nnew_fact = infer_new_fact(selected) # 'アリが 50 匹いた場合、庭にいた昆虫の総数は昆虫 1 匹/アリ 2 匹* アリ 50 匹 = 昆虫 25 匹です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アリが 50 匹いた場合の、', 'アリが 50 匹いた場合、庭にいた昆虫の総数は昆虫 1 匹/アリ 2 匹* アリ 50 匹 = 昆虫 25 匹です。']\nnew_fact = infer_new_fact(selected) # '庭の昆虫の総数は、25 匹の昆虫 + 50 匹のアリ = 75 匹の昆虫です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['庭にいた昆虫の総数を計算してください。', '庭の昆虫の総数は、25 匹の昆虫 + 50 匹のアリ = 75 匹の昆虫です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 75'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '75'"}
{"id": "GSM8K_233_2021bf8148", "context": "", "options": [], "answer": "12", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: This many penguins are swimming: 36/3 = 12 penguins.; sent1 & sent3 -> int2: This many penguins are eating their dinner: 36/3 = 12 penguins.; int1 & int2 -> int3: This many penguins are not sunbathing: 12 + 12 = 24.; int3 & sent1 -> int4: This many penguins are still sunbathing: 36 - 24 = 12 penguins.; int4 & sent4 -> int5: The answer is 12;", "textual_logical_units": {"1": "36 匹のペンギンが雪の中で日光浴をしています。", "2": "ペンギンの 3 分の 1 は海に飛び込んで泳ぎます。", "3": "別の 3 分の 1 は夕食を食べに洞窟の中に入ります。", "4": "何匹のペンギンがまだ日光浴をしていますか？", "5": "これだけの数のペンギンが泳いでいます。 36/3 = 12 匹のペンギン。", "6": "これだけの数のペンギンが夕食を食べています。 36/3 = 12 匹のペンギン。", "7": "これだけの数のペンギンが日光浴をしていません。 12 + 12 = 24。", "8": "これだけの数のペンギンがまだ日光浴をしています。 36 - 24 = 12 匹のペンギン。", "9": "The answer is 12"}, "human_translated": true, "code_input": "####\nfacts = ['36 匹のペンギンが雪の中で日光浴をしています。', 'ペンギンの 3 分の 1 は海に飛び込んで泳ぎます。', '別の 3 分の 1 は夕食を食べに洞窟の中に入ります。']\nquestion = '何匹のペンギンがまだ日光浴をしていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['36 匹のペンギンが雪の中で日光浴をしています。', 'ペンギンの 3 分の 1 は海に飛び込んで泳ぎます。']\nnew_fact = infer_new_fact(selected) # 'これだけの数のペンギンが泳いでいます。 36/3 = 12 匹のペンギン。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36 匹のペンギンが雪の中で日光浴をしています。', '別の 3 分の 1 は夕食を食べに洞窟の中に入ります。']\nnew_fact = infer_new_fact(selected) # 'これだけの数のペンギンが夕食を食べています。 36/3 = 12 匹のペンギン。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['これだけの数のペンギンが泳いでいます。 36/3 = 12 匹のペンギン。', 'これだけの数のペンギンが夕食を食べています。 36/3 = 12 匹のペンギン。']\nnew_fact = infer_new_fact(selected) # 'これだけの数のペンギンが日光浴をしていません。 12 + 12 = 24。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36 匹のペンギンが雪の中で日光浴をしています。', 'これだけの数のペンギンが日光浴をしていません。 12 + 12 = 24。']\nnew_fact = infer_new_fact(selected) # 'これだけの数のペンギンがまだ日光浴をしています。 36 - 24 = 12 匹のペンギン。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['何匹のペンギンがまだ日光浴をしていますか？', 'これだけの数のペンギンがまだ日光浴をしています。 36 - 24 = 12 匹のペンギン。']\nnew_fact = infer_new_fact(selected) # 'The answer is 12'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '12'"}
{"id": "GSM8K_234_a8e9df9d49", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: His girlfriend eats 6/2=3 tomatoes per day; int1 & sent4 -> int2: So together they eat 6+3=9 tomatoes a day; int2 & sent5 -> int3: That means they eat 9*7=63 tomatoes a day; int3 & sent5 -> int4: So he needs 63/3=21 tomato vines; int4 & sent5 -> int5: The answer is 21;", "textual_logical_units": {"1": "スティーブはもっとトマトを食べようと決心し、", "2": "自分でチェリートマトを栽培することにしました。", "3": "彼はガールフレンドの 2 倍の量を食べます。", "4": "彼は 1 日 6 個食べます。", "5": "1 本の茎に週に 3 個のトマトがなるとしたら、彼には何本の茎が必要ですか？", "6": "彼のガールフレンドは 1 日に 6/2 = 3 個のトマトを食べます", "7": "つまり、彼らは 1 日に合わせて 6 + 3 = 9 個のトマトを食べます", "8": "つまり、1 週間に 9 * 7 = 63 個のトマトを食べることになります", "9": "つまり、彼には 63/3 = 21 本のトマトの茎が必要です", "10": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = ['スティーブはもっとトマトを食べようと決心し、', '自分でチェリートマトを栽培することにしました。', '彼はガールフレンドの 2 倍の量を食べます。', '彼は 1 日 6 個食べます。']\nquestion = '1 本の茎に週に 3 個のトマトがなるとしたら、彼には何本の茎が必要ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼はガールフレンドの 2 倍の量を食べます。', '彼は 1 日 6 個食べます。']\nnew_fact = infer_new_fact(selected) # '彼のガールフレンドは 1 日に 6/2 = 3 個のトマトを食べます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 日 6 個食べます。', '彼のガールフレンドは 1 日に 6/2 = 3 個のトマトを食べます']\nnew_fact = infer_new_fact(selected) # 'つまり、彼らは 1 日に合わせて 6 + 3 = 9 個のトマトを食べます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 本の茎に週に 3 個のトマトがなるとしたら、彼には何本の茎が必要ですか？', 'つまり、彼らは 1 日に合わせて 6 + 3 = 9 個のトマトを食べます']\nnew_fact = infer_new_fact(selected) # 'つまり、1 週間に 9 * 7 = 63 個のトマトを食べることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 本の茎に週に 3 個のトマトがなるとしたら、彼には何本の茎が必要ですか？', 'つまり、1 週間に 9 * 7 = 63 個のトマトを食べることになります']\nnew_fact = infer_new_fact(selected) # 'つまり、彼には 63/3 = 21 本のトマトの茎が必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 本の茎に週に 3 個のトマトがなるとしたら、彼には何本の茎が必要ですか？', 'つまり、彼には 63/3 = 21 本のトマトの茎が必要です']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_235_ab136ec39d", "context": "", "options": [], "answer": "10", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: John's 20 friends each need 4 slices, so that means 4*20= 80 slices are needed; int1 & sent4 -> int2: Each pizza has 8 slices, so to get 80 slices in total 80/8= 10 pizzas are needed; int2 & sent5 -> int3: The answer is 10;", "textual_logical_units": {"1": "ジョンは友達とシェアするためにピザを注文します。", "2": "友達は全部で 20 人いて、", "3": "ジョンは 1 人 4 枚ずつ食べられるようにしたいと思っています。", "4": "ピザは 8 枚切りのみで販売されています。", "5": "ジョンはピザを何枚注文する必要がありますか？", "6": "ジョンの 20 人の友達にそれぞれ 4 枚が必要です。つまり、4 * 20 = 80 枚が必要です", "7": "1 枚のピザは 8 枚切りなので、合計で 80 枚を食べるには 80/8 = 10 枚のピザが必要です", "8": "The answer is 10"}, "human_translated": true, "code_input": "####\nfacts = ['ジョンは友達とシェアするためにピザを注文します。', '友達は全部で 20 人いて、', 'ジョンは 1 人 4 枚ずつ食べられるようにしたいと思っています。', 'ピザは 8 枚切りのみで販売されています。']\nquestion = 'ジョンはピザを何枚注文する必要がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['友達は全部で 20 人いて、', 'ジョンは 1 人 4 枚ずつ食べられるようにしたいと思っています。']\nnew_fact = infer_new_fact(selected) # 'ジョンの 20 人の友達にそれぞれ 4 枚が必要です。つまり、4 * 20 = 80 枚が必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ピザは 8 枚切りのみで販売されています。', 'ジョンの 20 人の友達にそれぞれ 4 枚が必要です。つまり、4 * 20 = 80 枚が必要です']\nnew_fact = infer_new_fact(selected) # '1 枚のピザは 8 枚切りなので、合計で 80 枚を食べるには 80/8 = 10 枚のピザが必要です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンはピザを何枚注文する必要がありますか？', '1 枚のピザは 8 枚切りなので、合計で 80 枚を食べるには 80/8 = 10 枚のピザが必要です']\nnew_fact = infer_new_fact(selected) # 'The answer is 10'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '10'"}
{"id": "GSM8K_236_efdf40916f", "context": "", "options": [], "answer": "31", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 6}, {"antecedents": [6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: He can make 5 pens when the 25 run low because 25 / 5 = 5; int1 -> int2: He can make 1 pen when the ink in the re-made pens runs low because 5 / 1 = 5; int1 & int2 -> int3: He will have 31 total pens because 25 + 5 + 1 = 31; int3 & sent5 -> int4: The answer is 31;", "textual_logical_units": {"1": "ラムはたくさんのペンを使います。", "2": "彼は、5 本の空のペンのインクを混ぜ、インクの詰まったペンを 1 本作ることでお金を節約できることを発見しました。", "3": "彼が 25 本のペンを購入し、", "4": "インクが少なくなったときにそれらを使用して新しいペンを作った場合、", "5": "合計で何本のペンを持っていることになりますか？", "6": "25/5 = 5 なので、25 本のペンのインクが少なくなったとき、ペンを 5 本作ることができます", "7": "5/ 1 = 5 なので、作り直したペンのインクが少なくなったとき、ペンを 1 本作ることができます", "8": "25 + 5 + 1 = 31 なので、彼は合計 31 本のペンを持っていることになります", "9": "The answer is 31"}, "human_translated": true, "code_input": "####\nfacts = ['ラムはたくさんのペンを使います。', '彼は、5 本の空のペンのインクを混ぜ、インクの詰まったペンを 1 本作ることでお金を節約できることを発見しました。', '彼が 25 本のペンを購入し、', 'インクが少なくなったときにそれらを使用して新しいペンを作った場合、']\nquestion = '合計で何本のペンを持っていることになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は、5 本の空のペンのインクを混ぜ、インクの詰まったペンを 1 本作ることでお金を節約できることを発見しました。', '彼が 25 本のペンを購入し、', 'インクが少なくなったときにそれらを使用して新しいペンを作った場合、']\nnew_fact = infer_new_fact(selected) # '25/5 = 5 なので、25 本のペンのインクが少なくなったとき、ペンを 5 本作ることができます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25/5 = 5 なので、25 本のペンのインクが少なくなったとき、ペンを 5 本作ることができます']\nnew_fact = infer_new_fact(selected) # '5/ 1 = 5 なので、作り直したペンのインクが少なくなったとき、ペンを 1 本作ることができます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25/5 = 5 なので、25 本のペンのインクが少なくなったとき、ペンを 5 本作ることができます', '5/ 1 = 5 なので、作り直したペンのインクが少なくなったとき、ペンを 1 本作ることができます']\nnew_fact = infer_new_fact(selected) # '25 + 5 + 1 = 31 なので、彼は合計 31 本のペンを持っていることになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['合計で何本のペンを持っていることになりますか？', '25 + 5 + 1 = 31 なので、彼は合計 31 本のペンを持っていることになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 31'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '31'"}
{"id": "GSM8K_237_dd4ed51c58", "context": "", "options": [], "answer": "90", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Johnny invested twenty and ten dollars for a total of 20+10=30 dollars invested; int1 & sent4 -> int2: Johnny tripled this amount of money over the year, for a total of 30*=90 dollars; int2 & sent5 -> int3: The answer is 90;", "textual_logical_units": {"1": "ジョニーは 20 ドルのお小遣いをもらって", "2": "さらに 10 ドル追加しました。", "3": "その後、彼がこの金額を投資したところ、", "4": "1 年で 3 倍になりました", "5": "彼は 1 年後にどれくらいのお金を持っていましたか？", "6": "ジョニーは 20 ドルと 10 ドルを投資したので、合計 20 + 10 = 30 ドルを投資しました。", "7": "ジョニーはこの金額を 1 年間で 3 倍に増やしたので、合計で 30 * = 90 ドルになりました", "8": "The answer is 90"}, "human_translated": true, "code_input": "####\nfacts = ['ジョニーは 20 ドルのお小遣いをもらって', 'さらに 10 ドル追加しました。', 'その後、彼がこの金額を投資したところ、', '1 年で 3 倍になりました']\nquestion = '彼は 1 年後にどれくらいのお金を持っていましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョニーは 20 ドルのお小遣いをもらって', 'さらに 10 ドル追加しました。']\nnew_fact = infer_new_fact(selected) # 'ジョニーは 20 ドルと 10 ドルを投資したので、合計 20 + 10 = 30 ドルを投資しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 年で 3 倍になりました', 'ジョニーは 20 ドルと 10 ドルを投資したので、合計 20 + 10 = 30 ドルを投資しました。']\nnew_fact = infer_new_fact(selected) # 'ジョニーはこの金額を 1 年間で 3 倍に増やしたので、合計で 30 * = 90 ドルになりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 年後にどれくらいのお金を持っていましたか？', 'ジョニーはこの金額を 1 年間で 3 倍に増やしたので、合計で 30 * = 90 ドルになりました']\nnew_fact = infer_new_fact(selected) # 'The answer is 90'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '90'"}
{"id": "GSM8K_238_adba7edfd8", "context": "", "options": [], "answer": "68", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Joan is 20 + 5 = 25 years old.; int1 & sent1 -> int2: Mary is 25 – 2 = 23 years old.; int1 & int2 & sent3 & sent4 -> int3: Therefore, the sum of their ages is 20 + 25 + 23 = 68.; int3 & sent4 -> int4: The answer is 68;", "textual_logical_units": {"1": "メアリーはジョアンより 2 歳年下で、", "2": "ジョアンはジェッサより 5 歳年上です。", "3": "ジェッサが 20 歳の場合、", "4": "3人の女性の年齢の合計は何歳になりますか？", "5": "ジョーンは 20 歳 + 5 = 25 歳です。", "6": "メアリーは 25 歳 - 2歳 = 23 歳です。", "7": "したがって、彼女たちの年齢の合計は 20 + 25 + 23 = 68 歳です。", "8": "The answer is 68"}, "human_translated": true, "code_input": "####\nfacts = ['メアリーはジョアンより 2 歳年下で、', 'ジョアンはジェッサより 5 歳年上です。', 'ジェッサが 20 歳の場合、']\nquestion = '3人の女性の年齢の合計は何歳になりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョアンはジェッサより 5 歳年上です。', 'ジェッサが 20 歳の場合、']\nnew_fact = infer_new_fact(selected) # 'ジョーンは 20 歳 + 5 = 25 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['メアリーはジョアンより 2 歳年下で、', 'ジョーンは 20 歳 + 5 = 25 歳です。']\nnew_fact = infer_new_fact(selected) # 'メアリーは 25 歳 - 2歳 = 23 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェッサが 20 歳の場合、', '3人の女性の年齢の合計は何歳になりますか？', 'ジョーンは 20 歳 + 5 = 25 歳です。', 'メアリーは 25 歳 - 2歳 = 23 歳です。']\nnew_fact = infer_new_fact(selected) # 'したがって、彼女たちの年齢の合計は 20 + 25 + 23 = 68 歳です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3人の女性の年齢の合計は何歳になりますか？', 'したがって、彼女たちの年齢の合計は 20 + 25 + 23 = 68 歳です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 68'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '68'"}
{"id": "GSM8K_239_ffde322075", "context": "", "options": [], "answer": "280", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: The number of students who went out through exit A is 30/100%1000 = 300 students.; int1 -> int2: The number of students who didn't use exit A is 1000-300 = 700; int2 & sent5 -> int3: 3/5 of the students used exit B, a total of 3/5*700 = 420 students.; sent1 & sent6 -> int4: If 420 of the remaining students who didn't use exit A used exit B, the number who used exit C is 700-420 = 280 students.; int4 & sent7 -> int5: The answer is 280;", "textual_logical_units": {"1": "校舎にいる学生の数は 1,000 人でした。", "2": "ホールには出口としても機能する A、B、C の", "3": "3 つの入り口がありました。", "4": "ミーティング後、30% の学生が A の出口から建物を出て行き、", "5": "残りの 3/5 が B の出口から出て行き、", "6": "残りが C の出口から出て行った場合の、", "7": "C の出口から出て行った学生の数を計算してください。", "8": "A の出口から出て行った学生の数は、30/100%1,000 = 300 人です。", "9": "A の出口を利用しなかった学生の数は、1,000 - 300 = 700 人です", "10": "学生の 3/5 は B の出口を利用し、合計で 3/5 * 700 = 420 人でした。", "11": "A の出口を利用しなかった残りの学生のうち、420 人が B の出口を利用した場合、C の出口を利用した学生の数は、700 - 420 = 280人になります。", "12": "The answer is 280"}, "human_translated": true, "code_input": "####\nfacts = ['校舎にいる学生の数は 1,000 人でした。', 'ホールには出口としても機能する A、B、C の', '3 つの入り口がありました。', 'ミーティング後、30% の学生が A の出口から建物を出て行き、', '残りの 3/5 が B の出口から出て行き、', '残りが C の出口から出て行った場合の、']\nquestion = 'C の出口から出て行った学生の数を計算してください。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['校舎にいる学生の数は 1,000 人でした。', 'ミーティング後、30% の学生が A の出口から建物を出て行き、']\nnew_fact = infer_new_fact(selected) # 'A の出口から出て行った学生の数は、30/100%1,000 = 300 人です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A の出口から出て行った学生の数は、30/100%1,000 = 300 人です。']\nnew_fact = infer_new_fact(selected) # 'A の出口を利用しなかった学生の数は、1,000 - 300 = 700 人です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['残りの 3/5 が B の出口から出て行き、', 'A の出口を利用しなかった学生の数は、1,000 - 300 = 700 人です']\nnew_fact = infer_new_fact(selected) # '学生の 3/5 は B の出口を利用し、合計で 3/5 * 700 = 420 人でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['校舎にいる学生の数は 1,000 人でした。', '残りが C の出口から出て行った場合の、']\nnew_fact = infer_new_fact(selected) # 'A の出口を利用しなかった残りの学生のうち、420 人が B の出口を利用した場合、C の出口を利用した学生の数は、700 - 420 = 280人になります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['C の出口から出て行った学生の数を計算してください。', 'A の出口を利用しなかった残りの学生のうち、420 人が B の出口を利用した場合、C の出口を利用した学生の数は、700 - 420 = 280人になります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 280'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '280'"}
{"id": "GSM8K_240_270aee8e9a", "context": "", "options": [], "answer": "21", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 4, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Robert has 54/2 = 27 candies.; int1 & sent1 -> int2: James has 27+6 = 33 candies.; int2 & sent3 & sent4 -> int3: John has 54-33= 21 more candies than James.; int3 & sent4 -> int4: The answer is 21;", "textual_logical_units": {"1": "ジェームズはロバートより 6 個多いキャンディーを持っています。", "2": "ジョンはロバートの 2 倍のキャンディーを持っています。", "3": "ジョンがキャンディーを 54 個持っている場合、", "4": "ジョンはジェームズより何個多いキャンディーを持っていますか？", "5": "ロバートは 54/2 = 27 個のキャンディーを持っています。", "6": "ジェームズは 27 + 6 = 33 個のキャンディーを持っています。", "7": "ジョンはジェームズより 54 - 33 = 21 個多いキャンディーを持っています。", "8": "The answer is 21"}, "human_translated": true, "code_input": "####\nfacts = ['ジェームズはロバートより 6 個多いキャンディーを持っています。', 'ジョンはロバートの 2 倍のキャンディーを持っています。', 'ジョンがキャンディーを 54 個持っている場合、']\nquestion = 'ジョンはジェームズより何個多いキャンディーを持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジョンはロバートの 2 倍のキャンディーを持っています。', 'ジョンがキャンディーを 54 個持っている場合、']\nnew_fact = infer_new_fact(selected) # 'ロバートは 54/2 = 27 個のキャンディーを持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェームズはロバートより 6 個多いキャンディーを持っています。', 'ロバートは 54/2 = 27 個のキャンディーを持っています。']\nnew_fact = infer_new_fact(selected) # 'ジェームズは 27 + 6 = 33 個のキャンディーを持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンがキャンディーを 54 個持っている場合、', 'ジョンはジェームズより何個多いキャンディーを持っていますか？', 'ジェームズは 27 + 6 = 33 個のキャンディーを持っています。']\nnew_fact = infer_new_fact(selected) # 'ジョンはジェームズより 54 - 33 = 21 個多いキャンディーを持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジョンはジェームズより何個多いキャンディーを持っていますか？', 'ジョンはジェームズより 54 - 33 = 21 個多いキャンディーを持っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 21'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '21'"}
{"id": "GSM8K_241_11576e8b3a", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: There are 2 + 1 = 3 books in total.; int1 & sent3 -> int2: Dolly and Pandora both read all 3 books, so 3 books/person x 2 people = 6 books total; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "ドリーは本を 2 冊持っています。", "2": "パンドラは 1 冊持っています。", "3": "ドリーとパンドラが自分の本だけでなくお互いの本も読んだ場合、", "4": "最終的には全部で何冊の本を読むことになりますか？", "5": "合計で 2 + 1 = 3 冊の本があります。", "6": "ドリーとパンドラはどちらも 3 冊の本をすべて読むので、1 人 3 冊 × 2 人 = 合計 6 冊になります", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['ドリーは本を 2 冊持っています。', 'パンドラは 1 冊持っています。', 'ドリーとパンドラが自分の本だけでなくお互いの本も読んだ場合、']\nquestion = '最終的には全部で何冊の本を読むことになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ドリーは本を 2 冊持っています。', 'パンドラは 1 冊持っています。']\nnew_fact = infer_new_fact(selected) # '合計で 2 + 1 = 3 冊の本があります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ドリーとパンドラが自分の本だけでなくお互いの本も読んだ場合、', '合計で 2 + 1 = 3 冊の本があります。']\nnew_fact = infer_new_fact(selected) # 'ドリーとパンドラはどちらも 3 冊の本をすべて読むので、1 人 3 冊 × 2 人 = 合計 6 冊になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['最終的には全部で何冊の本を読むことになりますか？', 'ドリーとパンドラはどちらも 3 冊の本をすべて読むので、1 人 3 冊 × 2 人 = 合計 6 冊になります']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_242_6407ca527a", "context": "", "options": [], "answer": "3", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [3, 4, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [6, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He is penpals with 5-2=3 people; int1 & sent3 -> int2: Thus he gets 3*2=6 letters a week; int2 & sent3 & sent4 -> int3: So he writes 6*5=30 pages a week; int3 & sent5 -> int4: So he writes for 30*6=180 minutes a week; int4 -> int5: So he writes 180/60=3 hours a week; int5 & sent6 -> int6: The answer is 3;", "textual_logical_units": {"1": "マイクは 5 人と文通をしています。", "2": "彼はそのうちの 2 人とペンパルでいるのをやめました。", "3": "彼らはそれぞれ 5 ページの長さの手紙を週に 2 通送ります。", "4": "彼は親切に返事を書きます。", "5": "彼は 6 分ごとに 1 ページ書くことができます。", "6": "彼は 1 週間に何時間、手紙を書くことに費やしていますか。", "7": "彼は 5 - 2 = 3 人と文通をしています", "8": "したがって、彼は週に 3 * 2 = 6 通の手紙を受け取ります", "9": "つまり、彼は週に 6 * 5 = 30 ページ書くことになります", "10": "つまり、彼は週に 30 * 6 = 180 分手紙を書きます", "11": "つまり、彼は週に 180/60 = 3 時手紙を書きます", "12": "The answer is 3"}, "human_translated": true, "code_input": "####\nfacts = ['マイクは 5 人と文通をしています。', '彼はそのうちの 2 人とペンパルでいるのをやめました。', '彼らはそれぞれ 5 ページの長さの手紙を週に 2 通送ります。', '彼は親切に返事を書きます。', '彼は 6 分ごとに 1 ページ書くことができます。']\nquestion = '彼は 1 週間に何時間、手紙を書くことに費やしていますか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マイクは 5 人と文通をしています。', '彼はそのうちの 2 人とペンパルでいるのをやめました。']\nnew_fact = infer_new_fact(selected) # '彼は 5 - 2 = 3 人と文通をしています'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らはそれぞれ 5 ページの長さの手紙を週に 2 通送ります。', '彼は 5 - 2 = 3 人と文通をしています']\nnew_fact = infer_new_fact(selected) # 'したがって、彼は週に 3 * 2 = 6 通の手紙を受け取ります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼らはそれぞれ 5 ページの長さの手紙を週に 2 通送ります。', '彼は親切に返事を書きます。', 'したがって、彼は週に 3 * 2 = 6 通の手紙を受け取ります']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 6 * 5 = 30 ページ書くことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 6 分ごとに 1 ページ書くことができます。', 'つまり、彼は週に 6 * 5 = 30 ページ書くことになります']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 30 * 6 = 180 分手紙を書きます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、彼は週に 30 * 6 = 180 分手紙を書きます']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 180/60 = 3 時手紙を書きます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 1 週間に何時間、手紙を書くことに費やしていますか。', 'つまり、彼は週に 180/60 = 3 時手紙を書きます']\nnew_fact = infer_new_fact(selected) # 'The answer is 3'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '3'"}
{"id": "GSM8K_243_d43ec45285", "context": "", "options": [], "answer": "250", "reasoning_graph_edges": [{"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent4 -> int1: First find the total time Jason spends calling his boss: 15 minutes/call * 30 calls/month = 450 minutes; int1 & sent1 & sent3 -> int2: Then subtract the minutes Jason has already used to find how many he has left: 1000 minutes - 450 minutes - 300 minutes = 250 minutes; int2 & sent4 -> int3: The answer is 250;", "textual_logical_units": {"1": "ジェイソンの電話のプランは 1 か月 1,000 分です。", "2": "彼は毎日、上司と 15 分間の通話をしますが、", "3": "今月はさらに 300 分間、他の人と通話しました。", "4": "今月が30日ある場合、ジェイソンの残りの通話時間は何分ですか？", "5": "まず、ジェイソンが上司に電話をかける合計時間を求めます。 15 分/通話 * 30 回の通話/月 = 450 分", "6": "次に、ジェイソンがすでに使用した時間を引いて、残りの時間を求めます。 1,000 分 - 450 分 - 300 分 = 250 分", "7": "The answer is 250"}, "human_translated": true, "code_input": "####\nfacts = ['ジェイソンの電話のプランは 1 か月 1,000 分です。', '彼は毎日、上司と 15 分間の通話をしますが、', '今月はさらに 300 分間、他の人と通話しました。']\nquestion = '今月が30日ある場合、ジェイソンの残りの通話時間は何分ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は毎日、上司と 15 分間の通話をしますが、', '今月が30日ある場合、ジェイソンの残りの通話時間は何分ですか？']\nnew_fact = infer_new_fact(selected) # 'まず、ジェイソンが上司に電話をかける合計時間を求めます。 15 分/通話 * 30 回の通話/月 = 450 分'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジェイソンの電話のプランは 1 か月 1,000 分です。', '今月はさらに 300 分間、他の人と通話しました。', 'まず、ジェイソンが上司に電話をかける合計時間を求めます。 15 分/通話 * 30 回の通話/月 = 450 分']\nnew_fact = infer_new_fact(selected) # '次に、ジェイソンがすでに使用した時間を引いて、残りの時間を求めます。 1,000 分 - 450 分 - 300 分 = 250 分'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今月が30日ある場合、ジェイソンの残りの通話時間は何分ですか？', '次に、ジェイソンがすでに使用した時間を引いて、残りの時間を求めます。 1,000 分 - 450 分 - 300 分 = 250 分']\nnew_fact = infer_new_fact(selected) # 'The answer is 250'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '250'"}
{"id": "GSM8K_244_6be47fa721", "context": "", "options": [], "answer": "20", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [3, 8], "consequent": 9}, {"antecedents": [5, 8], "consequent": 10}, {"antecedents": [6, 8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Griffin had 24 french fries, but Kyle took 5 of them.; int1 & sent3 -> int2: Billy took twice as many as Kyle, removing 2*5=10 fries.; int1 & sent5 -> int3: Colby took 3 less than the number of fries that Kyle had taken, removing 5-3=2 fries.; int1 & int2 & int3 & sent6 -> int4: If we let X be the number of fries given to Griffin by Ginger, then 24-5-10-2+x=27; int4 -> int5: Thus, Ginger had given Griffin x=20 fries; int5 & sent7 -> int6: The answer is 20;", "textual_logical_units": {"1": "グリフィンはフライドポテトを 24 個持っていましたが、", "2": "カイルがそのうち 5 個をもらいました。", "3": "ビリーはカイルの 2 倍の数をもらいました。", "4": "ジンジャーはグリフィンに一握りのフライドポテトを渡し、", "5": "コルビーはカイルがもらったフライドポテトの数よりも 3 個少ない数をグリフィンからもらいました。", "6": "グリフィンが最終的にフライドポテトを 27 個食べた場合、", "7": "ジンジャーはグリフィンに何個のフライドポテトをあげましたか？", "8": "グリフィンはフライドポテトを 24 個食べ、カイルは 5 個食べました。", "9": "ビリーはカイルの 2 倍の数をもらったので、2 * 5 = 10 個のフライドポテトがなくなりました。", "10": "コルビーはカイルがもらったフライの数より 3 個少ない数をもらったので、5 - 3 = 2 個のフライドポテトがなくなりました。", "11": "ジンジャーがグリフィンにあげたフライの数を x とすると、24 - 5 - 10 - 2 + x = 27 になります", "12": "したがって、ジンジャーはグリフィンに x = 20 個のフライドポテトをあげました", "13": "The answer is 20"}, "human_translated": true, "code_input": "####\nfacts = [ 'グリフィンはフライドポテトを 24 個持っていましたが、',\n  'カイルがそのうち 5 個をもらいました。',\n  'ビリーはカイルの 2 倍の数をもらいました。',\n  'ジンジャーはグリフィンに一握りのフライドポテトを渡し、',\n  'コルビーはカイルがもらったフライドポテトの数よりも 3 個少ない数をグリフィンからもらいました。',\n  'グリフィンが最終的にフライドポテトを 27 個食べた場合、']\nquestion = 'ジンジャーはグリフィンに何個のフライドポテトをあげましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['グリフィンはフライドポテトを 24 個持っていましたが、', 'カイルがそのうち 5 個をもらいました。']\nnew_fact = infer_new_fact(selected) # 'グリフィンはフライドポテトを 24 個食べ、カイルは 5 個食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビリーはカイルの 2 倍の数をもらいました。', 'グリフィンはフライドポテトを 24 個食べ、カイルは 5 個食べました。']\nnew_fact = infer_new_fact(selected) # 'ビリーはカイルの 2 倍の数をもらったので、2 * 5 = 10 個のフライドポテトがなくなりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['コルビーはカイルがもらったフライドポテトの数よりも 3 個少ない数をグリフィンからもらいました。', 'グリフィンはフライドポテトを 24 個食べ、カイルは 5 個食べました。']\nnew_fact = infer_new_fact(selected) # 'コルビーはカイルがもらったフライの数より 3 個少ない数をもらったので、5 - 3 = 2 個のフライドポテトがなくなりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['グリフィンが最終的にフライドポテトを 27 個食べた場合、', 'グリフィンはフライドポテトを 24 個食べ、カイルは 5 個食べました。', 'ビリーはカイルの 2 倍の数をもらったので、2 * 5 = 10 個のフライドポテトがなくなりました。', 'コルビーはカイルがもらったフライの数より 3 個少ない数をもらったので、5 - 3 = 2 個のフライドポテトがなくなりました。']\nnew_fact = infer_new_fact(selected) # 'ジンジャーがグリフィンにあげたフライの数を x とすると、24 - 5 - 10 - 2 + x = 27 になります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジンジャーがグリフィンにあげたフライの数を x とすると、24 - 5 - 10 - 2 + x = 27 になります']\nnew_fact = infer_new_fact(selected) # 'したがって、ジンジャーはグリフィンに x = 20 個のフライドポテトをあげました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジンジャーはグリフィンに何個のフライドポテトをあげましたか？', 'したがって、ジンジャーはグリフィンに x = 20 個のフライドポテトをあげました']\nnew_fact = infer_new_fact(selected) # 'The answer is 20'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '20'"}
{"id": "GSM8K_245_6805733f9a", "context": "", "options": [], "answer": "7", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The difference between the number of snails is 32 - 4 = 28 snails.; int1 & sent3 -> int2: There are 28/2 = 14 fish in both aquariums.; int2 & sent4 -> int3: There are 14/2 = 7 fish in each aquarium.; int3 & sent5 -> int4: The answer is 7;", "textual_logical_units": {"1": "1 つの水槽に 4 匹のカタツムリがいて、", "2": "別の水槽には 32 匹のカタツムリがいます。", "3": "2 つの水槽のカタツムリの数の差は、両方の水槽の魚の量の 2 倍です。", "4": "両方の水槽に同じ数の魚がいる場合、", "5": "1 つの水槽には何匹の魚がいますか？", "6": "カタツムリの数の差は、32 - 4 = 28 匹のカタツムリです。", "7": "どちらの水槽にも 28/2 = 14 匹の魚がいます。", "8": "1 つの水槽には 14/2 = 7 匹の魚がいます。", "9": "The answer is 7"}, "human_translated": true, "code_input": "####\nfacts = ['1 つの水槽に 4 匹のカタツムリがいて、', '別の水槽には 32 匹のカタツムリがいます。', '2 つの水槽のカタツムリの数の差は、両方の水槽の魚の量の 2 倍です。', '両方の水槽に同じ数の魚がいる場合、']\nquestion = '1 つの水槽には何匹の魚がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 つの水槽に 4 匹のカタツムリがいて、', '別の水槽には 32 匹のカタツムリがいます。']\nnew_fact = infer_new_fact(selected) # 'カタツムリの数の差は、32 - 4 = 28 匹のカタツムリです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 つの水槽のカタツムリの数の差は、両方の水槽の魚の量の 2 倍です。', 'カタツムリの数の差は、32 - 4 = 28 匹のカタツムリです。']\nnew_fact = infer_new_fact(selected) # 'どちらの水槽にも 28/2 = 14 匹の魚がいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['両方の水槽に同じ数の魚がいる場合、', 'どちらの水槽にも 28/2 = 14 匹の魚がいます。']\nnew_fact = infer_new_fact(selected) # '1 つの水槽には 14/2 = 7 匹の魚がいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 つの水槽には何匹の魚がいますか？', '1 つの水槽には 14/2 = 7 匹の魚がいます。']\nnew_fact = infer_new_fact(selected) # 'The answer is 7'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '7'"}
{"id": "GSM8K_246_5ad129280b", "context": "", "options": [], "answer": "27000", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [7, 12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Jean pays 250*6=$1500 a day; int1 & sent4 -> int2: So he pays 1500*4=$6000 a week; int2 & sent5 -> int3: So the work cost 6000*5=$30,000; sent1 & sent6 -> int4: They give a discount of 30,000*.1=$3000; int3 & int4 -> int5: So the total cost paid is 30,000-3000=$27,000; int5 & sent7 -> int6: The answer is 27000;", "textual_logical_units": {"1": "ジーンズのメイクアップアーティストは彼女に 1 時間あたり 250 ドルを請求します。", "2": "彼女は出演している映画のために非常に高価な化粧品を必要とし、", "3": "毎日 6 時間かかるメイクを", "4": "週に 4 回行う必要があります。", "5": "映画は完成するまでに 5 週間かかります。", "6": "映画が完成した後、メイクアップアーティストは仕事の量に応じて 10% の割引をジーンに提供します。", "7": "ジーンはいくら払いましたか？", "8": "ジーンは 1 日あたり 250 * 6 = 1,500 ドルを支払います", "9": "つまり、彼は週に 1,500 * 4 = 6,000 ドルを支払います", "10": "つまり、この仕事では 6,000 * 5 = 30,000 ドルの費用がかかりました", "11": "彼らは 30,000* .1 = 3,000 ドルの割引をします", "12": "したがって、支払われる総費用は 30,000 - 3,000 = 27,000 ドルです", "13": "The answer is 27000"}, "human_translated": true, "code_input": "####\nfacts = [ 'ジーンズのメイクアップアーティストは彼女に 1 時間あたり 250 ドルを請求します。',\n  '彼女は出演している映画のために非常に高価な化粧品を必要とし、',\n  '毎日 6 時間かかるメイクを',\n  '週に 4 回行う必要があります。',\n  '映画は完成するまでに 5 週間かかります。',\n  '映画が完成した後、メイクアップアーティストは仕事の量に応じて 10% の割引をジーンに提供します。']\nquestion = 'ジーンはいくら払いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジーンズのメイクアップアーティストは彼女に 1 時間あたり 250 ドルを請求します。', '毎日 6 時間かかるメイクを']\nnew_fact = infer_new_fact(selected) # 'ジーンは 1 日あたり 250 * 6 = 1,500 ドルを支払います'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['週に 4 回行う必要があります。', 'ジーンは 1 日あたり 250 * 6 = 1,500 ドルを支払います']\nnew_fact = infer_new_fact(selected) # 'つまり、彼は週に 1,500 * 4 = 6,000 ドルを支払います'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['映画は完成するまでに 5 週間かかります。', 'つまり、彼は週に 1,500 * 4 = 6,000 ドルを支払います']\nnew_fact = infer_new_fact(selected) # 'つまり、この仕事では 6,000 * 5 = 30,000 ドルの費用がかかりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジーンズのメイクアップアーティストは彼女に 1 時間あたり 250 ドルを請求します。', '映画が完成した後、メイクアップアーティストは仕事の量に応じて 10% の割引をジーンに提供します。']\nnew_fact = infer_new_fact(selected) # '彼らは 30,000* .1 = 3,000 ドルの割引をします'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、この仕事では 6,000 * 5 = 30,000 ドルの費用がかかりました', '彼らは 30,000* .1 = 3,000 ドルの割引をします']\nnew_fact = infer_new_fact(selected) # 'したがって、支払われる総費用は 30,000 - 3,000 = 27,000 ドルです'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジーンはいくら払いましたか？', 'したがって、支払われる総費用は 30,000 - 3,000 = 27,000 ドルです']\nnew_fact = infer_new_fact(selected) # 'The answer is 27000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '27000'"}
{"id": "GSM8K_247_5e46618d7e", "context": "", "options": [], "answer": "32", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}, {"antecedents": [5, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Isabelle spent 12 + 43 + 15 + 4 + 22 = $96 on party supplies.; int1 & sent4 -> int2: The cost was evenly split 3 ways, so each person paid 96 / 3 = $32.; int2 & sent5 -> int3: The answer is 32;", "textual_logical_units": {"1": "イザベルは妹の誕生日パーティーのためにパーティー用品を買いました。", "2": "彼女はケーキの材料に 12 ドル、誕生日プレゼントに 43 ドル、デコレーションに 15 ドル、招待状に 4 ドル、", "3": "パーティーのゲスト用のお楽しみ袋に 22 ドルを費やしました。", "4": "彼女はその費用を両親と 3 等分しました。", "5": "1 人何ドル払いましたか？", "6": "イザベルはパーティー用品に 12 + 43 + 15 + 4 + 22 = 96 ドルを費やしました。", "7": "費用は 3 等分されたため、1 人あたり 96/3 = 32 ドルを支払いました。", "8": "The answer is 32"}, "human_translated": true, "code_input": "####\nfacts = ['イザベルは妹の誕生日パーティーのためにパーティー用品を買いました。', '彼女はケーキの材料に 12 ドル、誕生日プレゼントに 43 ドル、デコレーションに 15 ドル、招待状に 4 ドル、', 'パーティーのゲスト用のお楽しみ袋に 22 ドルを費やしました。', '彼女はその費用を両親と 3 等分しました。']\nquestion = '1 人何ドル払いましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女はケーキの材料に 12 ドル、誕生日プレゼントに 43 ドル、デコレーションに 15 ドル、招待状に 4 ドル、', 'パーティーのゲスト用のお楽しみ袋に 22 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'イザベルはパーティー用品に 12 + 43 + 15 + 4 + 22 = 96 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女はその費用を両親と 3 等分しました。', 'イザベルはパーティー用品に 12 + 43 + 15 + 4 + 22 = 96 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # '費用は 3 等分されたため、1 人あたり 96/3 = 32 ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 人何ドル払いましたか？', '費用は 3 等分されたため、1 人あたり 96/3 = 32 ドルを支払いました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 32'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '32'"}
{"id": "GSM8K_248_fee350ec70", "context": "", "options": [], "answer": "300", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: A bag of onions cost $1.50 x 50 = $75.; int1 & sent1 -> int2: Therefore, the chef spent $75 x 4 = $300 for the four bags of onions.; int2 & sent4 -> int3: The answer is 300;", "textual_logical_units": {"1": "シェフが玉ねぎを 4 袋買いました。", "2": "1 袋の重量は 22.68 キログラムです。", "3": "玉ねぎ 0.45 キログラムは 1.50 ドルです。", "4": "シェフはいくら費やしましたか？", "5": "玉ねぎ 1 袋の価格は 1.50 ドル x 50 = 75 ドルです。", "6": "したがった、シェフは玉ねぎ 4 袋に 75 ドル x 4 = 300 ドルを費やしました。", "7": "The answer is 300"}, "human_translated": true, "code_input": "####\nfacts = ['シェフが玉ねぎを 4 袋買いました。', '1 袋の重量は 22.68 キログラムです。', '玉ねぎ 0.45 キログラムは 1.50 ドルです。']\nquestion = 'シェフはいくら費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['1 袋の重量は 22.68 キログラムです。', '玉ねぎ 0.45 キログラムは 1.50 ドルです。']\nnew_fact = infer_new_fact(selected) # '玉ねぎ 1 袋の価格は 1.50 ドル x 50 = 75 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シェフが玉ねぎを 4 袋買いました。', '玉ねぎ 1 袋の価格は 1.50 ドル x 50 = 75 ドルです。']\nnew_fact = infer_new_fact(selected) # 'したがった、シェフは玉ねぎ 4 袋に 75 ドル x 4 = 300 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シェフはいくら費やしましたか？', 'したがった、シェフは玉ねぎ 4 袋に 75 ドル x 4 = 300 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 300'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '300'"}
{"id": "GSM8K_249_aa8699a929", "context": "", "options": [], "answer": "5600", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 6}, {"antecedents": [2, 3], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [3], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Sue’s Monday cookie intake is 4*5 = 20.; sent2 & sent3 -> int2: Sue’s Tuesday cookie intake is 2*13 = 26.; int1 & int2 -> int3: Total cookies Sue consumed is 20+26 = 46.; sent3 -> int4: Sue’s sister ate a total of 5+13 = 18 cookies.; int3 & int4 -> int5: Sue ate 46-18=28 more cookies.; sent1 & sent4 -> int6: Sue consumed 28*200=5,600 more calories.; int6 & sent5 -> int7: The answer is 5,600;", "textual_logical_units": {"1": "月曜日、スーは妹の 4 倍の数のクッキーを食べました。", "2": "火曜日には、彼女は妹の 2 倍の数のクッキーを食べました。", "3": "彼女の妹は月曜日にクッキーを 5 個、翌日に 13 個のクッキーを食べました。", "4": "クッキー 1 個が 200 キロカロリーだった場合、", "5": "スーは妹より何キロカロリー多く摂取しましたか？", "6": "スーが月曜日に食べたクッキーの数は、4 * 5 = 20 個です。", "7": "スーが火曜日に食べたクッキーの数は、2 * 13 = 26 個です。", "8": "スーが食べたクッキーの合計は、20 + 26 = 46 個です。", "9": "スーの妹は合計 5 + 13 = 18 個のクッキーを食べました。", "10": "スーはさらに 46 - 18 = 28 個のクッキーを食べました。", "11": "スーは 28 * 200 = 5,600 キロカロリー多く摂取しました。", "12": "The answer is 5,600"}, "human_translated": true, "code_input": "####\nfacts = ['月曜日、スーは妹の 4 倍の数のクッキーを食べました。', '火曜日には、彼女は妹の 2 倍の数のクッキーを食べました。', '彼女の妹は月曜日にクッキーを 5 個、翌日に 13 個のクッキーを食べました。', 'クッキー 1 個が 200 キロカロリーだった場合、']\nquestion = 'スーは妹より何キロカロリー多く摂取しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['月曜日、スーは妹の 4 倍の数のクッキーを食べました。', '彼女の妹は月曜日にクッキーを 5 個、翌日に 13 個のクッキーを食べました。']\nnew_fact = infer_new_fact(selected) # 'スーが月曜日に食べたクッキーの数は、4 * 5 = 20 個です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['火曜日には、彼女は妹の 2 倍の数のクッキーを食べました。', '彼女の妹は月曜日にクッキーを 5 個、翌日に 13 個のクッキーを食べました。']\nnew_fact = infer_new_fact(selected) # 'スーが火曜日に食べたクッキーの数は、2 * 13 = 26 個です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スーが月曜日に食べたクッキーの数は、4 * 5 = 20 個です。', 'スーが火曜日に食べたクッキーの数は、2 * 13 = 26 個です。']\nnew_fact = infer_new_fact(selected) # 'スーが食べたクッキーの合計は、20 + 26 = 46 個です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女の妹は月曜日にクッキーを 5 個、翌日に 13 個のクッキーを食べました。']\nnew_fact = infer_new_fact(selected) # 'スーの妹は合計 5 + 13 = 18 個のクッキーを食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スーが食べたクッキーの合計は、20 + 26 = 46 個です。', 'スーの妹は合計 5 + 13 = 18 個のクッキーを食べました。']\nnew_fact = infer_new_fact(selected) # 'スーはさらに 46 - 18 = 28 個のクッキーを食べました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['月曜日、スーは妹の 4 倍の数のクッキーを食べました。', 'クッキー 1 個が 200 キロカロリーだった場合、']\nnew_fact = infer_new_fact(selected) # 'スーは 28 * 200 = 5,600 キロカロリー多く摂取しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['スーは妹より何キロカロリー多く摂取しましたか？', 'スーは 28 * 200 = 5,600 キロカロリー多く摂取しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 5,600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5600'"}
{"id": "GSM8K_250_19fab02dec", "context": "", "options": [], "answer": "17", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 7}, {"antecedents": [3, 7], "consequent": 8}, {"antecedents": [4, 5, 8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 6], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The school has 60 students because 3 x 20 = 60; int1 & sent3 -> int2: The school has 30 girls because 60 x .5 = 30; int2 & sent4 & sent5 -> int3: The third class has 3 girls because 30 - 15 - 12 = 3; int3 & sent1 -> int4: The third class has 17 boys because 20 - 3 = 17; sent1 & sent6 -> int5: The answer is 17;", "textual_logical_units": {"1": "学校の 1 クラスには 20 人の生徒がいます。", "2": "クラスは 3 つあります。", "3": "学校全体で、男子が 50%、女子が 50% です。", "4": "1 組には 15 人の女子がいます。", "5": "2 組のクラスには 12 人の女子がいます。", "6": "3 組には何人の男子がいますか？", "7": "3 x 20 = 60 なので、学校には 60 人の生徒がいます", "8": "60 x .5 = 30 なので、学校には 30 人の女子がいます", "9": "30-15-12 = 3 なので、3 組には女子が 3 人います。", "10": "20-3 = 17 なので、3 組のクラスには 17 人の男の子がいます。", "11": "The answer is 17"}, "human_translated": true, "code_input": "####\nfacts = ['学校の 1 クラスには 20 人の生徒がいます。', 'クラスは 3 つあります。', '学校全体で、男子が 50%、女子が 50% です。', '1 組には 15 人の女子がいます。', '2 組のクラスには 12 人の女子がいます。']\nquestion = '3 組には何人の男子がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['学校の 1 クラスには 20 人の生徒がいます。', 'クラスは 3 つあります。']\nnew_fact = infer_new_fact(selected) # '3 x 20 = 60 なので、学校には 60 人の生徒がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['学校全体で、男子が 50%、女子が 50% です。', '3 x 20 = 60 なので、学校には 60 人の生徒がいます']\nnew_fact = infer_new_fact(selected) # '60 x .5 = 30 なので、学校には 30 人の女子がいます'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 組には 15 人の女子がいます。', '2 組のクラスには 12 人の女子がいます。', '60 x .5 = 30 なので、学校には 30 人の女子がいます']\nnew_fact = infer_new_fact(selected) # '30-15-12 = 3 なので、3 組には女子が 3 人います。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['学校の 1 クラスには 20 人の生徒がいます。', '30-15-12 = 3 なので、3 組には女子が 3 人います。']\nnew_fact = infer_new_fact(selected) # '20-3 = 17 なので、3 組のクラスには 17 人の男の子がいます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['学校の 1 クラスには 20 人の生徒がいます。', '3 組には何人の男子がいますか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 17'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '17'"}
{"id": "GSM8K_251_a9450aed84", "context": "", "options": [], "answer": "70", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Travis had 61 - 9 = 52 apps after deleting the ones he didn't use.; int1 & sent2 -> int2: After downloading some more he now has 52 + 18 = 70 apps on his tablet.; int2 & sent3 -> int3: The answer is 70;", "textual_logical_units": {"1": "トラビスのタブレットには 61 個のアプリがありました。", "2": "彼は使わなくなったアプリを 9 つ削除し、追加で 18個 をダウンロードしました。", "3": "彼のタブレットには現在いくつのアプリがありますか？", "4": "トラビスは、使用していないアプリを削除した後、61 -9 = 52 個のアプリを使用していました。", "5": "追加でダウンロードした後、彼のタブレットには 52 + 18 = 70 個のアプリがあります。", "6": "The answer is 70"}, "human_translated": true, "code_input": "####\nfacts = ['トラビスのタブレットには 61 個のアプリがありました。', '彼は使わなくなったアプリを 9 つ削除し、追加で 18個 をダウンロードしました。']\nquestion = '彼のタブレットには現在いくつのアプリがありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['トラビスのタブレットには 61 個のアプリがありました。', '彼は使わなくなったアプリを 9 つ削除し、追加で 18個 をダウンロードしました。']\nnew_fact = infer_new_fact(selected) # 'トラビスは、使用していないアプリを削除した後、61 -9 = 52 個のアプリを使用していました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は使わなくなったアプリを 9 つ削除し、追加で 18個 をダウンロードしました。', 'トラビスは、使用していないアプリを削除した後、61 -9 = 52 個のアプリを使用していました。']\nnew_fact = infer_new_fact(selected) # '追加でダウンロードした後、彼のタブレットには 52 + 18 = 70 個のアプリがあります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼のタブレットには現在いくつのアプリがありますか？', '追加でダウンロードした後、彼のタブレットには 52 + 18 = 70 個のアプリがあります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 70'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '70'"}
{"id": "GSM8K_252_58daff43f0", "context": "", "options": [], "answer": "73", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 5}, {"antecedents": [1, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [6, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: The total number of animals that Rick killed while hunting yesterday is 15+10 = 25; sent1 & sent3 -> int2: Today, Rick killed three fewer cougars than the previous night, a total of 15-3 = 12 cougars.; int2 & sent2 -> int3: He also killed three times as many wolves as cougars today, a total of 3*12 = 36 wolves.; int2 & int3 -> int4: Together, his hunt today yielded 36+12 = 48 animals.; int1 & int4 -> int5: In total, he has 48+25 = 73 animals from the hunt.; int5 & sent4 -> int6: The answer is 73;", "textual_logical_units": {"1": "昨夜、リックは狩猟中にオオカミ 10 頭とクーガー 15 頭を殺しました。", "2": "今日、リックはクーガーの 3 倍の数のオオカミを殺し、", "3": "前の晩よりクーガーの数は 3 頭減りました。", "4": "リックは何匹の動物を殺しましたか？", "5": "リックが昨日の狩猟中に殺した動物の総数は 15 + 10 = 25 頭です", "6": "今日、リックが殺したクーガーは前日の夜より3 頭少なく、合計で 15 - 3 = 12 頭のクーガーでした。", "7": "また、彼は今日、クーガーの 3 倍の数のオオカミを殺したので、合計で 3 * 12 = 36 頭のオオカミになります。", "8": "今日の狩猟では、合計 36+12 = 48 頭の動物が捕獲されました。", "9": "合計で、彼は 48 + 25 = 73 頭の動物を捕獲しました。", "10": "The answer is 73"}, "human_translated": true, "code_input": "####\nfacts = ['昨夜、リックは狩猟中にオオカミ 10 頭とクーガー 15 頭を殺しました。', '今日、リックはクーガーの 3 倍の数のオオカミを殺し、', '前の晩よりクーガーの数は 3 頭減りました。']\nquestion = 'リックは何匹の動物を殺しましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['昨夜、リックは狩猟中にオオカミ 10 頭とクーガー 15 頭を殺しました。']\nnew_fact = infer_new_fact(selected) # 'リックが昨日の狩猟中に殺した動物の総数は 15 + 10 = 25 頭です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['昨夜、リックは狩猟中にオオカミ 10 頭とクーガー 15 頭を殺しました。', '前の晩よりクーガーの数は 3 頭減りました。']\nnew_fact = infer_new_fact(selected) # '今日、リックが殺したクーガーは前日の夜より3 頭少なく、合計で 15 - 3 = 12 頭のクーガーでした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今日、リックはクーガーの 3 倍の数のオオカミを殺し、', '今日、リックが殺したクーガーは前日の夜より3 頭少なく、合計で 15 - 3 = 12 頭のクーガーでした。']\nnew_fact = infer_new_fact(selected) # 'また、彼は今日、クーガーの 3 倍の数のオオカミを殺したので、合計で 3 * 12 = 36 頭のオオカミになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今日、リックが殺したクーガーは前日の夜より3 頭少なく、合計で 15 - 3 = 12 頭のクーガーでした。', 'また、彼は今日、クーガーの 3 倍の数のオオカミを殺したので、合計で 3 * 12 = 36 頭のオオカミになります。']\nnew_fact = infer_new_fact(selected) # '今日の狩猟では、合計 36+12 = 48 頭の動物が捕獲されました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リックが昨日の狩猟中に殺した動物の総数は 15 + 10 = 25 頭です', '今日の狩猟では、合計 36+12 = 48 頭の動物が捕獲されました。']\nnew_fact = infer_new_fact(selected) # '合計で、彼は 48 + 25 = 73 頭の動物を捕獲しました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['リックは何匹の動物を殺しましたか？', '合計で、彼は 48 + 25 = 73 頭の動物を捕獲しました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 73'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '73'"}
{"id": "GSM8K_253_1faf68b44c", "context": "", "options": [], "answer": "18", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: First multiply Bill's starting floor number by 4: 3 * 4 = 12; int1 & sent2 -> int2: Then add six to find the ending floor Bill is on: 12 + 6 = 18; int2 & sent3 -> int3: The answer is 18;", "textual_logical_units": {"1": "ビルは 3 階からスタートします。", "2": "彼はエレベーターに乗って、スタートした階の 4 倍に 6 を加えた階まで上がります。", "3": "ビルは今何階にいますか？", "4": "まず、ビルがスタートした階数に 4 を掛けます。 3 * 4 = 12", "5": "そこに 6 を足すと、最終的にビルがいる階がわかります。 12 + 6 = 18 階です", "6": "The answer is 18"}, "human_translated": true, "code_input": "####\nfacts = ['ビルは 3 階からスタートします。', '彼はエレベーターに乗って、スタートした階の 4 倍に 6 を加えた階まで上がります。']\nquestion = 'ビルは今何階にいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ビルは 3 階からスタートします。', '彼はエレベーターに乗って、スタートした階の 4 倍に 6 を加えた階まで上がります。']\nnew_fact = infer_new_fact(selected) # 'まず、ビルがスタートした階数に 4 を掛けます。 3 * 4 = 12'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼はエレベーターに乗って、スタートした階の 4 倍に 6 を加えた階まで上がります。', 'まず、ビルがスタートした階数に 4 を掛けます。 3 * 4 = 12']\nnew_fact = infer_new_fact(selected) # 'そこに 6 を足すと、最終的にビルがいる階がわかります。 12 + 6 = 18 階です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ビルは今何階にいますか？', 'そこに 6 を足すと、最終的にビルがいる階がわかります。 12 + 6 = 18 階です']\nnew_fact = infer_new_fact(selected) # 'The answer is 18'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '18'"}
{"id": "GSM8K_254_ef307513f1", "context": "", "options": [], "answer": "84", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [5, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Anne went down the slide 30% less than Mitchel who went down 30 times so that's .30*30 = 9 times less; int1 & sent2 -> int2: Mitchel went down 30 times and Anne went down 9 times less than him for a total of 30-9 = 21 times; int2 & sent4 -> int3: Robert went down the slide 4 times as much as Anne, who went down 21 times so Robert went down the slide 4*21 = 84 times; int3 & sent5 -> int4: The answer is 84;", "textual_logical_units": {"1": "シェリーの 3 人の子供たちは一日中ウォーターパークで過ごしました。", "2": "ミッチェルはウォータースライダーを 30 回滑りました。", "3": "アンはミッチェルよりもスライダーを 30% 少なく滑り、", "4": "ロバートはアンの 4 倍の回数を滑りました。", "5": "ロバートは何回ウォータースライダーを滑りましたか。", "6": "アンは 30 回スライダーを滑ったミッチェルよりも 30% 少ない回数を滑ったので、0.30 * 30 = 9 回少なかったことになります", "7": "ミッチェルは 30 回滑り、アンは彼より 9 回少なかったので、合計で 30 - 9 = 21 回滑ったことになります", "8": "ロバートは 21 回スライダーを滑ったアンの 4 倍の回数を滑ったので、ロバートは 4 * 21 = 84 回ライダーを滑ったことになります", "9": "The answer is 84"}, "human_translated": true, "code_input": "####\nfacts = ['シェリーの 3 人の子供たちは一日中ウォーターパークで過ごしました。', 'ミッチェルはウォータースライダーを 30 回滑りました。', 'アンはミッチェルよりもスライダーを 30% 少なく滑り、', 'ロバートはアンの 4 倍の回数を滑りました。']\nquestion = 'ロバートは何回ウォータースライダーを滑りましたか。'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ミッチェルはウォータースライダーを 30 回滑りました。', 'アンはミッチェルよりもスライダーを 30% 少なく滑り、']\nnew_fact = infer_new_fact(selected) # 'アンは 30 回スライダーを滑ったミッチェルよりも 30% 少ない回数を滑ったので、0.30 * 30 = 9 回少なかったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ミッチェルはウォータースライダーを 30 回滑りました。', 'アンは 30 回スライダーを滑ったミッチェルよりも 30% 少ない回数を滑ったので、0.30 * 30 = 9 回少なかったことになります']\nnew_fact = infer_new_fact(selected) # 'ミッチェルは 30 回滑り、アンは彼より 9 回少なかったので、合計で 30 - 9 = 21 回滑ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロバートはアンの 4 倍の回数を滑りました。', 'ミッチェルは 30 回滑り、アンは彼より 9 回少なかったので、合計で 30 - 9 = 21 回滑ったことになります']\nnew_fact = infer_new_fact(selected) # 'ロバートは 21 回スライダーを滑ったアンの 4 倍の回数を滑ったので、ロバートは 4 * 21 = 84 回ライダーを滑ったことになります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ロバートは何回ウォータースライダーを滑りましたか。', 'ロバートは 21 回スライダーを滑ったアンの 4 倍の回数を滑ったので、ロバートは 4 * 21 = 84 回ライダーを滑ったことになります']\nnew_fact = infer_new_fact(selected) # 'The answer is 84'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '84'"}
{"id": "GSM8K_255_f3d4779ee4", "context": "", "options": [], "answer": "192", "reasoning_graph_edges": [{"antecedents": [1, 3, 4], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [1, 5], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [5, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent4 -> int1: When Mr. Sylas puts an equal number of the cows he bought into the stalls, each stall gets 40/10 = 4 new cows.; int1 & sent5 -> int2: Each of the stalls gets four cows, meaning a total of 8*4 = 32 cows are placed into eight of the stalls.; sent1 & sent5 -> int3: Since each stall had 20 cows before Mr. Sylas added four into each of the stalls, the total number of cows in eight of the stalls was 8*20= 160 cows.; int2 & int3 -> int4: There are 160+32 = 192 cows in eight stalls after Mr. Sylas adds four into each of the stalls.; int4 & sent5 -> int5: The answer is 192;", "textual_logical_units": {"1": "10 棟の牛舎にはそれぞれ 20 頭の牛がいます。", "2": "サイラスさんは", "3": "牛を 40 頭購入して均等に分け、", "4": "20 棟の牛舎にそれぞれ同じ数の新しい牛を入れます。", "5": "8 棟の牛舎には何頭の牛がいますか？", "6": "サイラスさんが買った牛を同じ数ずつ牛舎に入れる場合、1 棟の牛舎には 40/10 = 4 頭の新しい牛が入れられます。", "7": "各牛舎には 4 頭の牛が入れられます。つまり、合計 8 *4 = 32 頭の牛が 8 棟の牛舎に入れられます。", "8": "サイラスさんがそれぞれの牛舎に 4 頭追加する前、それぞれの牛舎には 20 頭の牛がいたため、8 つの牛舎の牛の総数は 8 * 20 = 160 頭の牛でした。", "9": "サイラスさんがそれぞれの牛舎に 4 頭ずつ加えると、8 つの牛舎には 160 + 32 = 192 頭の牛がいることになります。", "10": "The answer is 192"}, "human_translated": true, "code_input": "####\nfacts = ['10 棟の牛舎にはそれぞれ 20 頭の牛がいます。', 'サイラスさんは', '牛を 40 頭購入して均等に分け、', '20 棟の牛舎にそれぞれ同じ数の新しい牛を入れます。']\nquestion = '8 棟の牛舎には何頭の牛がいますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['10 棟の牛舎にはそれぞれ 20 頭の牛がいます。', '牛を 40 頭購入して均等に分け、', '20 棟の牛舎にそれぞれ同じ数の新しい牛を入れます。']\nnew_fact = infer_new_fact(selected) # 'サイラスさんが買った牛を同じ数ずつ牛舎に入れる場合、1 棟の牛舎には 40/10 = 4 頭の新しい牛が入れられます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8 棟の牛舎には何頭の牛がいますか？', 'サイラスさんが買った牛を同じ数ずつ牛舎に入れる場合、1 棟の牛舎には 40/10 = 4 頭の新しい牛が入れられます。']\nnew_fact = infer_new_fact(selected) # '各牛舎には 4 頭の牛が入れられます。つまり、合計 8 *4 = 32 頭の牛が 8 棟の牛舎に入れられます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10 棟の牛舎にはそれぞれ 20 頭の牛がいます。', '8 棟の牛舎には何頭の牛がいますか？']\nnew_fact = infer_new_fact(selected) # 'サイラスさんがそれぞれの牛舎に 4 頭追加する前、それぞれの牛舎には 20 頭の牛がいたため、8 つの牛舎の牛の総数は 8 * 20 = 160 頭の牛でした。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['各牛舎には 4 頭の牛が入れられます。つまり、合計 8 *4 = 32 頭の牛が 8 棟の牛舎に入れられます。', 'サイラスさんがそれぞれの牛舎に 4 頭追加する前、それぞれの牛舎には 20 頭の牛がいたため、8 つの牛舎の牛の総数は 8 * 20 = 160 頭の牛でした。']\nnew_fact = infer_new_fact(selected) # 'サイラスさんがそれぞれの牛舎に 4 頭ずつ加えると、8 つの牛舎には 160 + 32 = 192 頭の牛がいることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8 棟の牛舎には何頭の牛がいますか？', 'サイラスさんがそれぞれの牛舎に 4 頭ずつ加えると、8 つの牛舎には 160 + 32 = 192 頭の牛がいることになります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 192'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '192'"}
{"id": "GSM8K_256_7b552d5cd5", "context": "", "options": [], "answer": "45", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [2], "consequent": 6}, {"antecedents": [2], "consequent": 7}, {"antecedents": [5, 6, 7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 -> int1: Since a penny is 1 cent, then 100 pennies is equal to 100 x 1 cent = 100 cents.; sent2 -> int2: Since nickel is 5 cents, then 40 nickels is equal to 40 x 5 = 200 cents.; sent2 -> int3: Since a dime is equal to 10 cents, then 20 dimes are equal to 20 x 10 = 200 cents.; int1 & int2 & int3 -> int4: So, Brady has a total of 100 + 200 + 200 = 500 cents.; int4 & sent4 -> int5: Since a dollar is equal to 100 cents, then 500 cents is equal to 500/100 = 5 dollars.; int5 & sent3 -> int6: Thus, Brady has a total of $40 + $5 = $45 in his piggy bank.; sent1 & sent4 -> int7: The answer is 45;", "textual_logical_units": {"1": "ブレイディは貯金箱のお金を数えています。", "2": "彼は 100 ペニー、40 ニッケル、20 ダイム、", "3": "40 枚のドル紙幣を持っています。", "4": "ブレイディの貯金箱にはドルでいくら入っていますか？", "5": "1 ペニーは 1 セントなので、100 ペニーは 100 x 1 セント = 100 セントに相当します。", "6": "ニッケルは 5 セントなので、40 ニッケルは 40 x 5 = 200 セントに相当します。", "7": "ダイムは 10 セントに相当するので、20 ダイムは 20 x 10 = 200 セントに相当します。", "8": "つまり、ブレイディの持っている合計額は 100 + 200 + 200 = 500 セントです。", "9": "1 ドルは 100 セントに相当するので、500 セントは 500/100 = 5 ドルに相当します。", "10": "したがって、ブレイディの貯金箱には合計 40 ドル + 5 ドル = 45 ドルが入っています。", "11": "The answer is 45"}, "human_translated": true, "code_input": "####\nfacts = ['ブレイディは貯金箱のお金を数えています。', '彼は 100 ペニー、40 ニッケル、20 ダイム、', '40 枚のドル紙幣を持っています。']\nquestion = 'ブレイディの貯金箱にはドルでいくら入っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼は 100 ペニー、40 ニッケル、20 ダイム、']\nnew_fact = infer_new_fact(selected) # '1 ペニーは 1 セントなので、100 ペニーは 100 x 1 セント = 100 セントに相当します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 100 ペニー、40 ニッケル、20 ダイム、']\nnew_fact = infer_new_fact(selected) # 'ニッケルは 5 セントなので、40 ニッケルは 40 x 5 = 200 セントに相当します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は 100 ペニー、40 ニッケル、20 ダイム、']\nnew_fact = infer_new_fact(selected) # 'ダイムは 10 セントに相当するので、20 ダイムは 20 x 10 = 200 セントに相当します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ペニーは 1 セントなので、100 ペニーは 100 x 1 セント = 100 セントに相当します。', 'ニッケルは 5 セントなので、40 ニッケルは 40 x 5 = 200 セントに相当します。', 'ダイムは 10 セントに相当するので、20 ダイムは 20 x 10 = 200 セントに相当します。']\nnew_fact = infer_new_fact(selected) # 'つまり、ブレイディの持っている合計額は 100 + 200 + 200 = 500 セントです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブレイディの貯金箱にはドルでいくら入っていますか？', 'つまり、ブレイディの持っている合計額は 100 + 200 + 200 = 500 セントです。']\nnew_fact = infer_new_fact(selected) # '1 ドルは 100 セントに相当するので、500 セントは 500/100 = 5 ドルに相当します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40 枚のドル紙幣を持っています。', '1 ドルは 100 セントに相当するので、500 セントは 500/100 = 5 ドルに相当します。']\nnew_fact = infer_new_fact(selected) # 'したがって、ブレイディの貯金箱には合計 40 ドル + 5 ドル = 45 ドルが入っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ブレイディは貯金箱のお金を数えています。', 'ブレイディの貯金箱にはドルでいくら入っていますか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 45'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '45'"}
{"id": "GSM8K_257_14b15c1a0f", "context": "", "options": [], "answer": "5600", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [2, 6], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [4, 8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: First find how many 10-foot sections are in the redwood: 200 feet / 10 feet/section = 20 sections; int1 & sent1 -> int2: Then multiply the number of sections by the weight of each section to find the total weight of the redwood: 20 sections * 400 pounds/section = 8000 pounds; int2 & sent2 -> int3: Then find the amount of the wood the termites ate: 8000 pounds * 30% = 2400 pounds; int3 -> int4: Then subtract that amount from the total weight of the wood: 8000 pounds - 2400 pounds = 5600 pounds; int4 & sent4 -> int5: The answer is 5600;", "textual_logical_units": {"1": "セコイアの木にある 3.05 メートルの固い節は、1 つ 181.44 キログラムです。", "2": "シロアリはこのセコイアの木の 30% を食べました。", "3": "セコイアの高さを 60.96 メートルとすると、", "4": "重さはどれくらいですか？", "5": "まず、セコイアに 3.05 メートルの節がいくつあるかを求めます。 60.96 メートル/3.05 メートル/節 = 20 の節", "6": "次に、節の数に 1 つの節の重量を掛けて、セコイアの総重量を求めます。 節 20 個 * 181.44 キログラム/節 = 3,628.8 キログラム", "7": "次に、シロアリが食べた木の量を求めます。 3628.8 キログラム * 30% = 1088.64 キログラム", "8": "次に、その量を木材の総重量から引きます。 3,628.8 キログラム - 1088.64 キログラム = 2540.16 キログラム", "9": "The answer is 5600"}, "human_translated": true, "code_input": "####\nfacts = ['セコイアの木にある 3.05 メートルの固い節は、1 つ 181.44 キログラムです。', 'シロアリはこのセコイアの木の 30% を食べました。', 'セコイアの高さを 60.96 メートルとすると、']\nquestion = '重さはどれくらいですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['セコイアの木にある 3.05 メートルの固い節は、1 つ 181.44 キログラムです。', 'セコイアの高さを 60.96 メートルとすると、']\nnew_fact = infer_new_fact(selected) # 'まず、セコイアに 3.05 メートルの節がいくつあるかを求めます。 60.96 メートル/3.05 メートル/節 = 20 の節'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['セコイアの木にある 3.05 メートルの固い節は、1 つ 181.44 キログラムです。', 'まず、セコイアに 3.05 メートルの節がいくつあるかを求めます。 60.96 メートル/3.05 メートル/節 = 20 の節']\nnew_fact = infer_new_fact(selected) # '次に、節の数に 1 つの節の重量を掛けて、セコイアの総重量を求めます。 節 20 個 * 181.44 キログラム/節 = 3,628.8 キログラム'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['シロアリはこのセコイアの木の 30% を食べました。', '次に、節の数に 1 つの節の重量を掛けて、セコイアの総重量を求めます。 節 20 個 * 181.44 キログラム/節 = 3,628.8 キログラム']\nnew_fact = infer_new_fact(selected) # '次に、シロアリが食べた木の量を求めます。 3628.8 キログラム * 30% = 1088.64 キログラム'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['次に、シロアリが食べた木の量を求めます。 3628.8 キログラム * 30% = 1088.64 キログラム']\nnew_fact = infer_new_fact(selected) # '次に、その量を木材の総重量から引きます。 3,628.8 キログラム - 1088.64 キログラム = 2540.16 キログラム'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['重さはどれくらいですか？', '次に、その量を木材の総重量から引きます。 3,628.8 キログラム - 1088.64 キログラム = 2540.16 キログラム']\nnew_fact = infer_new_fact(selected) # 'The answer is 5600'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '5600'"}
{"id": "GSM8K_258_6adcaec483", "context": "", "options": [], "answer": "6", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: First multiply the late fee per book by the number of books: $0.50/book * 8 books = $4.00; int1 & sent3 -> int2: Then add the \"more than a week overdue\" fee to the answer from the previous step to find the total: $4.00 + $2.00 = $6.00; int2 & sent4 -> int3: The answer is 6;", "textual_logical_units": {"1": "ナンシーは期限を過ぎた本を図書館に返却しています。", "2": "彼女は 8冊 の本にそれぞれ 0.50 セントの料金を払い、", "3": "1 週間以上延滞している本を 1 冊以上持っている場合は、一律 2.00 ドルの手数料が加算されます。", "4": "彼女は合計でいくら払わなければなりませんか？", "5": "まず、本 1 冊あたりの延滞料に本の本数を掛けます。1 冊あたり 0.50 ドル * 8冊 = 4.00 ドル", "6": "次に、前のステップの答えに「1 週間以上延滞した」手数料を加えて、合計を求めます。4.00 ドル + 2.00 ドル = 6.00 ドル", "7": "The answer is 6"}, "human_translated": true, "code_input": "####\nfacts = ['ナンシーは期限を過ぎた本を図書館に返却しています。', '彼女は 8冊 の本にそれぞれ 0.50 セントの料金を払い、', '1 週間以上延滞している本を 1 冊以上持っている場合は、一律 2.00 ドルの手数料が加算されます。']\nquestion = '彼女は合計でいくら払わなければなりませんか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は 8冊 の本にそれぞれ 0.50 セントの料金を払い、']\nnew_fact = infer_new_fact(selected) # 'まず、本 1 冊あたりの延滞料に本の本数を掛けます。1 冊あたり 0.50 ドル * 8冊 = 4.00 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 週間以上延滞している本を 1 冊以上持っている場合は、一律 2.00 ドルの手数料が加算されます。', 'まず、本 1 冊あたりの延滞料に本の本数を掛けます。1 冊あたり 0.50 ドル * 8冊 = 4.00 ドル']\nnew_fact = infer_new_fact(selected) # '次に、前のステップの答えに「1 週間以上延滞した」手数料を加えて、合計を求めます。4.00 ドル + 2.00 ドル = 6.00 ドル'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は合計でいくら払わなければなりませんか？', '次に、前のステップの答えに「1 週間以上延滞した」手数料を加えて、合計を求めます。4.00 ドル + 2.00 ドル = 6.00 ドル']\nnew_fact = infer_new_fact(selected) # 'The answer is 6'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '6'"}
{"id": "GSM8K_259_fdf8ed1f57", "context": "", "options": [], "answer": "168", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [3, 5], "consequent": 7}, {"antecedents": [2, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [6, 9], "consequent": 10}, {"antecedents": [1, 4], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: Since Andrea has 8 more apples than Jamal, if Andrea has 52 apples, Jamal has 52-8 = 44 apples.; int1 -> int2: The total number of apples is 44+52 = 96; int1 & sent3 -> int3: Jamal has 4 more bananas than apples, meaning he has 44+4 = 48 bananas.; int3 & sent2 -> int4: Andrea has half as many bananas as Jamal, which totals 48/2 = 24 bananas.; int3 & int4 -> int5: There are a total of 48+24 = 72 bananas.; int2 & int5 -> int6: Altogether, there are 96 apples + 72 bananas = 168 fruits; sent1 & sent4 -> int7: The answer is 168;", "textual_logical_units": {"1": "アンドレアはジャマールより 8 個多いリンゴと、", "2": "ジャマールの半分の量のバナナを持っています。", "3": "ジャマールはリンゴより 4 本多いバナナを持っています。", "4": "アンドレアがリンゴを 52 個持っている場合、果物はいくつありますか？", "5": "アンドレアはジャマールより 8 個多いリンゴを持っているため、アンドレアがリンゴを 52 個持っている場合、ジャマールは 52 - 8 = 44 個のリンゴを持っていることになります。", "6": "りんごの総数は 44 + 52 = 96 個です", "7": "ジャマールはリンゴより 4 本多いバナナを持っています。つまり、44 + 4 = 48 本のバナナを持っているということです。", "8": "アンドレアはジャマールの半分の数バナナを持っているので、合計で 48/2 = 24 本のバナナです。", "9": "バナナは全部で 48 + 24 = 72 本あります。", "10": "全部で、96 個のリンゴ+ 72 本のバナナ = 168 個の果物があります", "11": "The answer is 168"}, "human_translated": true, "code_input": "####\nfacts = ['アンドレアはジャマールより 8 個多いリンゴと、', 'ジャマールの半分の量のバナナを持っています。', 'ジャマールはリンゴより 4 本多いバナナを持っています。']\nquestion = 'アンドレアがリンゴを 52 個持っている場合、果物はいくつありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['アンドレアはジャマールより 8 個多いリンゴと、', 'アンドレアがリンゴを 52 個持っている場合、果物はいくつありますか？']\nnew_fact = infer_new_fact(selected) # 'アンドレアはジャマールより 8 個多いリンゴを持っているため、アンドレアがリンゴを 52 個持っている場合、ジャマールは 52 - 8 = 44 個のリンゴを持っていることになります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アンドレアはジャマールより 8 個多いリンゴを持っているため、アンドレアがリンゴを 52 個持っている場合、ジャマールは 52 - 8 = 44 個のリンゴを持っていることになります。']\nnew_fact = infer_new_fact(selected) # 'りんごの総数は 44 + 52 = 96 個です'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャマールはリンゴより 4 本多いバナナを持っています。', 'アンドレアはジャマールより 8 個多いリンゴを持っているため、アンドレアがリンゴを 52 個持っている場合、ジャマールは 52 - 8 = 44 個のリンゴを持っていることになります。']\nnew_fact = infer_new_fact(selected) # 'ジャマールはリンゴより 4 本多いバナナを持っています。つまり、44 + 4 = 48 本のバナナを持っているということです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャマールの半分の量のバナナを持っています。', 'ジャマールはリンゴより 4 本多いバナナを持っています。つまり、44 + 4 = 48 本のバナナを持っているということです。']\nnew_fact = infer_new_fact(selected) # 'アンドレアはジャマールの半分の数バナナを持っているので、合計で 48/2 = 24 本のバナナです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ジャマールはリンゴより 4 本多いバナナを持っています。つまり、44 + 4 = 48 本のバナナを持っているということです。', 'アンドレアはジャマールの半分の数バナナを持っているので、合計で 48/2 = 24 本のバナナです。']\nnew_fact = infer_new_fact(selected) # 'バナナは全部で 48 + 24 = 72 本あります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['りんごの総数は 44 + 52 = 96 個です', 'バナナは全部で 48 + 24 = 72 本あります。']\nnew_fact = infer_new_fact(selected) # '全部で、96 個のリンゴ+ 72 本のバナナ = 168 個の果物があります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['アンドレアはジャマールより 8 個多いリンゴと、', 'アンドレアがリンゴを 52 個持っている場合、果物はいくつありますか？']\nnew_fact = infer_new_fact(selected) # 'The answer is 168'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '168'"}
{"id": "GSM8K_260_d1c764238f", "context": "", "options": [], "answer": "11", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 4}, {"antecedents": [1, 4], "consequent": 5}, {"antecedents": [1, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent2 -> int1: Carla will bake a total of 36 + 30 = 66 cookies.; int1 & sent1 -> int2: Since 1 dozen is equal to 12, then 66 cookies are equal to 66/12 = 5.5 dozens.; int2 & sent1 -> int3: Hence, Carla will need 5.5 x 2 = 11 cups of flour.; int3 & sent3 -> int4: The answer is 11;", "textual_logical_units": {"1": "1 ダースのクッキーを作るには 2 カップの小麦粉が必要です。", "2": "カーラは今日 36 個のクッキーを作り、明日は 30 個のクッキーを作ります。", "3": "今日と明日、カーラはクッキーを焼くのに何カップの小麦粉が必要ですか？", "4": "カーラは合計 36 + 30 = 66 個のクッキーを焼きます。", "5": "1ダースは 12 個なので、66 個のクッキーは 66/12 = 5.5 ダースに相当します。", "6": "したがって、カーラには 5.5 x 2 = 11 カップの小麦粉が必要です。", "7": "The answer is 11"}, "human_translated": true, "code_input": "####\nfacts = ['1 ダースのクッキーを作るには 2 カップの小麦粉が必要です。', 'カーラは今日 36 個のクッキーを作り、明日は 30 個のクッキーを作ります。']\nquestion = '今日と明日、カーラはクッキーを焼くのに何カップの小麦粉が必要ですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カーラは今日 36 個のクッキーを作り、明日は 30 個のクッキーを作ります。']\nnew_fact = infer_new_fact(selected) # 'カーラは合計 36 + 30 = 66 個のクッキーを焼きます。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ダースのクッキーを作るには 2 カップの小麦粉が必要です。', 'カーラは合計 36 + 30 = 66 個のクッキーを焼きます。']\nnew_fact = infer_new_fact(selected) # '1ダースは 12 個なので、66 個のクッキーは 66/12 = 5.5 ダースに相当します。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 ダースのクッキーを作るには 2 カップの小麦粉が必要です。', '1ダースは 12 個なので、66 個のクッキーは 66/12 = 5.5 ダースに相当します。']\nnew_fact = infer_new_fact(selected) # 'したがって、カーラには 5.5 x 2 = 11 カップの小麦粉が必要です。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['今日と明日、カーラはクッキーを焼くのに何カップの小麦粉が必要ですか？', 'したがって、カーラには 5.5 x 2 = 11 カップの小麦粉が必要です。']\nnew_fact = infer_new_fact(selected) # 'The answer is 11'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '11'"}
{"id": "GSM8K_261_b200c99def", "context": "", "options": [], "answer": "62", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 3}, {"antecedents": [2, 3], "consequent": 4}, {"antecedents": [4], "consequent": 5}, {"antecedents": [2, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: A third of the pennies in a cup is 9,300/3 = 3,100.; int1 & sent2 -> int2: Number of pennies in the stack is 3,100*2 = 6,200.; int2 -> int3: Total dollar amount in the stack is 6,200/100 = 62.; int3 & sent2 -> int4: The answer is 62;", "textual_logical_units": {"1": "カップには 9,300 ペニーが入っています。", "2": "カップに入っているペニーの 3 分の 2 が入っている箱の合計金額は何ドルですか？", "3": "カップに入っているペニーの 3 分の 1 は 9,300/3 = 3,100 ペニーです。", "4": "箱の中のペニーの数は 3,100 * 2 = 6,200 ペニーです。", "5": "箱の中にある合計金額は 6,200/100 = 62 ドルです。", "6": "The answer is 62"}, "human_translated": true, "code_input": "####\nfacts = ['カップには 9,300 ペニーが入っています。']\nquestion = 'カップに入っているペニーの 3 分の 2 が入っている箱の合計金額は何ドルですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カップには 9,300 ペニーが入っています。', 'カップに入っているペニーの 3 分の 2 が入っている箱の合計金額は何ドルですか？']\nnew_fact = infer_new_fact(selected) # 'カップに入っているペニーの 3 分の 1 は 9,300/3 = 3,100 ペニーです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カップに入っているペニーの 3 分の 2 が入っている箱の合計金額は何ドルですか？', 'カップに入っているペニーの 3 分の 1 は 9,300/3 = 3,100 ペニーです。']\nnew_fact = infer_new_fact(selected) # '箱の中のペニーの数は 3,100 * 2 = 6,200 ペニーです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['箱の中のペニーの数は 3,100 * 2 = 6,200 ペニーです。']\nnew_fact = infer_new_fact(selected) # '箱の中にある合計金額は 6,200/100 = 62 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カップに入っているペニーの 3 分の 2 が入っている箱の合計金額は何ドルですか？', '箱の中にある合計金額は 6,200/100 = 62 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 62'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '62'"}
{"id": "GSM8K_262_49eb131d8e", "context": "", "options": [], "answer": "270", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}], "metadata": [], "linearized_output_en": "sent1 -> int1: Maddison has 5 x 50 = 250 marbles from her boxes.; int1 & sent2 -> int2: So she has a total of 250 + 20 = 270 marbles now.; int2 & sent3 -> int3: The answer is 270;", "textual_logical_units": {"1": "マディソンは 5 つの箱を持っており、1 つの箱には 50 個のビー玉が入っています。", "2": "その後、彼女は友人から 20 個のビー玉をもらいます。", "3": "彼女は今ビー玉をいくつ持っていますか？", "4": "マディソンの箱には 5 x 50 = 250 個のビー玉が入っています。", "5": "つまり、彼女は今、合計 250 + 20 = 270 個のビー玉を持っています。", "6": "The answer is 270"}, "human_translated": true, "code_input": "####\nfacts = ['マディソンは 5 つの箱を持っており、1 つの箱には 50 個のビー玉が入っています。', 'その後、彼女は友人から 20 個のビー玉をもらいます。']\nquestion = '彼女は今ビー玉をいくつ持っていますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['マディソンは 5 つの箱を持っており、1 つの箱には 50 個のビー玉が入っています。']\nnew_fact = infer_new_fact(selected) # 'マディソンの箱には 5 x 50 = 250 個のビー玉が入っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['その後、彼女は友人から 20 個のビー玉をもらいます。', 'マディソンの箱には 5 x 50 = 250 個のビー玉が入っています。']\nnew_fact = infer_new_fact(selected) # 'つまり、彼女は今、合計 250 + 20 = 270 個のビー玉を持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は今ビー玉をいくつ持っていますか？', 'つまり、彼女は今、合計 250 + 20 = 270 個のビー玉を持っています。']\nnew_fact = infer_new_fact(selected) # 'The answer is 270'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '270'"}
{"id": "GSM8K_263_763de04a2c", "context": "", "options": [], "answer": "8", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Ferdinand:6/2=3 trees; int1 & sent3 -> int2: Harry:5+2(3)=5+6=11 trees; int1 & int2 -> int3: 11-3=8 trees; int3 & sent4 -> int4: The answer is 8;", "textual_logical_units": {"1": "クリスの庭には 6 本の木があります。", "2": "フェルディナンドが持っている木の数はクリスの半分です。", "3": "ハリーはフェルディナンドの 2 倍以上である 5 本の木を持っています。", "4": "ハリーの庭にはフェルディナンドの庭より何本多い木がありますか？", "5": "フェルディナンド: 6/2 = 3 本の木", "6": "ハリー: 5 + 2 (3) = 5 + 6 = 11 本の木", "7": "11 - 3 = 8 本の木", "8": "The answer is 8"}, "human_translated": true, "code_input": "####\nfacts = ['クリスの庭には 6 本の木があります。', 'フェルディナンドが持っている木の数はクリスの半分です。', 'ハリーはフェルディナンドの 2 倍以上である 5 本の木を持っています。']\nquestion = 'ハリーの庭にはフェルディナンドの庭より何本多い木がありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['クリスの庭には 6 本の木があります。', 'フェルディナンドが持っている木の数はクリスの半分です。']\nnew_fact = infer_new_fact(selected) # 'フェルディナンド: 6/2 = 3 本の木'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリーはフェルディナンドの 2 倍以上である 5 本の木を持っています。', 'フェルディナンド: 6/2 = 3 本の木']\nnew_fact = infer_new_fact(selected) # 'ハリー: 5 + 2 (3) = 5 + 6 = 11 本の木'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['フェルディナンド: 6/2 = 3 本の木', 'ハリー: 5 + 2 (3) = 5 + 6 = 11 本の木']\nnew_fact = infer_new_fact(selected) # '11 - 3 = 8 本の木'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ハリーの庭にはフェルディナンドの庭より何本多い木がありますか？', '11 - 3 = 8 本の木']\nnew_fact = infer_new_fact(selected) # 'The answer is 8'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '8'"}
{"id": "GSM8K_264_743e854af1", "context": "", "options": [], "answer": "400", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 4}, {"antecedents": [2, 4], "consequent": 5}, {"antecedents": [1, 4, 5], "consequent": 6}, {"antecedents": [3, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 -> int1: Samantha has $100+$25 = $125.; int1 & sent2 -> int2: Daisy has $125+$50 = $175.; int1 & int2 & sent1 -> int3: The total amount of money that the three girls have is $175+$125+$100 = $400.; int3 & sent3 -> int4: The answer is 400;", "textual_logical_units": {"1": "カルメンは 100 ドル持っています。サマンサはカルメンより 25 ドル多く持っており、", "2": "デイジーはサマンサより 50 ドル多く持っています。", "3": "3 人の女の子全員が持っているお金の合計はいくらですか？", "4": "サマンサは 100 ドル + 25 ドル = 125 ドル持っています。", "5": "デイジーは 125 ドル + 50 ドル = 175 ドル持っています。", "6": "3 人の女の子が持っているお金の総額は、175 ドル + 125 ドル + 100 ドル= 400 ドルです。", "7": "The answer is 400"}, "human_translated": true, "code_input": "####\nfacts = ['カルメンは 100 ドル持っています。サマンサはカルメンより 25 ドル多く持っており、', 'デイジーはサマンサより 50 ドル多く持っています。']\nquestion = '3 人の女の子全員が持っているお金の合計はいくらですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['カルメンは 100 ドル持っています。サマンサはカルメンより 25 ドル多く持っており、']\nnew_fact = infer_new_fact(selected) # 'サマンサは 100 ドル + 25 ドル = 125 ドル持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['デイジーはサマンサより 50 ドル多く持っています。', 'サマンサは 100 ドル + 25 ドル = 125 ドル持っています。']\nnew_fact = infer_new_fact(selected) # 'デイジーは 125 ドル + 50 ドル = 175 ドル持っています。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['カルメンは 100 ドル持っています。サマンサはカルメンより 25 ドル多く持っており、', 'サマンサは 100 ドル + 25 ドル = 125 ドル持っています。', 'デイジーは 125 ドル + 50 ドル = 175 ドル持っています。']\nnew_fact = infer_new_fact(selected) # '3 人の女の子が持っているお金の総額は、175 ドル + 125 ドル + 100 ドル= 400 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 人の女の子全員が持っているお金の合計はいくらですか？', '3 人の女の子が持っているお金の総額は、175 ドル + 125 ドル + 100 ドル= 400 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 400'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '400'"}
{"id": "GSM8K_265_27a7504bc5", "context": "", "options": [], "answer": "9500", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 8}, {"antecedents": [3, 5], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [6, 7, 11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: The brokerage fee is $350 000 x 5/100 = $17500.; sent3 & sent5 -> int2: The transfer fee is $350 000 x 12/100 = $42000.; int1 & int2 -> int3: The total price of the house is $350 000 + $17500 + $42000 = $409 500.; sent1 & sent2 -> int4: So, it is $409 500 - $400 000 = $9500 more than Mrs. Cruz's budget.; int4 & sent6 & sent7 -> int5: The answer is 9500;", "textual_logical_units": {"1": "クルーズ夫人は、", "2": "40 万ドルの予算を超えない家を探しています。", "3": "彼女は販売価格が 35 万ドルの物件を見つけました。", "4": "それに加えて、買い手は販売価格の 5% の仲介手数料と、", "5": "また、販売価格の 12% の振込手数料を支払わなければなりません。", "6": "家の総額はクルーズ夫人の予算より", "7": "どれくらい高いですか？", "8": "仲介手数料は 35 万ドル x 5/100 = 1 万 7,500 ドルです。", "9": "振込手数料は 35 万ドル x 12/100 = 42,000 ドルです。", "10": "家の総額は、35 万ドル + 17,500ドル + 42,000 ドル = 40 万 9,500 ドルです。", "11": "つまり、クルーズ夫人の予算よりも 40 万 9,500 ドル - 40 万ドル = 9,500 ドル高くなります。", "12": "The answer is 9500"}, "human_translated": true, "code_input": "####\nfacts = ['クルーズ夫人は、', '40 万ドルの予算を超えない家を探しています。', '彼女は販売価格が 35 万ドルの物件を見つけました。', 'それに加えて、買い手は販売価格の 5% の仲介手数料と、', 'また、販売価格の 12% の振込手数料を支払わなければなりません。', '家の総額はクルーズ夫人の予算より']\nquestion = 'どれくらい高いですか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['彼女は販売価格が 35 万ドルの物件を見つけました。', 'それに加えて、買い手は販売価格の 5% の仲介手数料と、']\nnew_fact = infer_new_fact(selected) # '仲介手数料は 35 万ドル x 5/100 = 1 万 7,500 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼女は販売価格が 35 万ドルの物件を見つけました。', 'また、販売価格の 12% の振込手数料を支払わなければなりません。']\nnew_fact = infer_new_fact(selected) # '振込手数料は 35 万ドル x 12/100 = 42,000 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['仲介手数料は 35 万ドル x 5/100 = 1 万 7,500 ドルです。', '振込手数料は 35 万ドル x 12/100 = 42,000 ドルです。']\nnew_fact = infer_new_fact(selected) # '家の総額は、35 万ドル + 17,500ドル + 42,000 ドル = 40 万 9,500 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['クルーズ夫人は、', '40 万ドルの予算を超えない家を探しています。']\nnew_fact = infer_new_fact(selected) # 'つまり、クルーズ夫人の予算よりも 40 万 9,500 ドル - 40 万ドル = 9,500 ドル高くなります。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['家の総額はクルーズ夫人の予算より', 'どれくらい高いですか？', 'つまり、クルーズ夫人の予算よりも 40 万 9,500 ドル - 40 万ドル = 9,500 ドル高くなります。']\nnew_fact = infer_new_fact(selected) # 'The answer is 9500'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '9500'"}
{"id": "GSM8K_266_822c7f0af0", "context": "", "options": [], "answer": "118000", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 7}, {"antecedents": [2, 4], "consequent": 8}, {"antecedents": [5, 7, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [5, 6, 10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Mr. Tan paid $400 000 x 3/100 = $12 000 for the transfer fees.; sent2 & sent4 -> int2: He paid $400 000 x 5/100 = $20 000 for the brokerage fee.; int1 & int2 & sent5 -> int3: So, Mr. Tan paid a total of $12 000 + $20 000 + $250 000 = $282 000 for the transfer, brokerage, and loan fees.; int3 & sent2 -> int4: Hence, Mr. Tan's net proceeds is $400 000 - $282 000 = $118 000.; int4 & sent5 & sent6 -> int5: The answer is 118000;", "textual_logical_units": {"1": "サイラスさんは", "2": "家を 40 万ドルで売りました。", "3": "彼は売却価格の 3% に相当する振込手数料と、", "4": "売却価格の 5% の仲介手数料を支払いました。", "5": "彼が家のローンの残金として 25 万ドルを支払った場合、", "6": "タンさんが家を売って得た純利益はいくらになりますか？", "7": "タンさんは振込手数料として 40 万ドル x 3/100 = 12,000 ドルを支払いました。", "8": "彼は仲介手数料として 40 万ドル x 5/100 = 2 万ドルを支払いました。", "9": "つまり、タンさんは振込、仲介、ローンの手数料として合計 12,000 ドル+ 20,000 + 25 万ドル = 28 万 2,000 ドルを支払いました。", "10": "したがって、タンさんの純利益は 40 万ドル - 28 万 2,000 ドル = 11 万 8,000 ドルです。", "11": "The answer is 118000"}, "human_translated": true, "code_input": "####\nfacts = ['サイラスさんは', '家を 40 万ドルで売りました。', '彼は売却価格の 3% に相当する振込手数料と、', '売却価格の 5% の仲介手数料を支払いました。', '彼が家のローンの残金として 25 万ドルを支払った場合、']\nquestion = 'タンさんが家を売って得た純利益はいくらになりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['家を 40 万ドルで売りました。', '彼は売却価格の 3% に相当する振込手数料と、']\nnew_fact = infer_new_fact(selected) # 'タンさんは振込手数料として 40 万ドル x 3/100 = 12,000 ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['家を 40 万ドルで売りました。', '売却価格の 5% の仲介手数料を支払いました。']\nnew_fact = infer_new_fact(selected) # '彼は仲介手数料として 40 万ドル x 5/100 = 2 万ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が家のローンの残金として 25 万ドルを支払った場合、', 'タンさんは振込手数料として 40 万ドル x 3/100 = 12,000 ドルを支払いました。', '彼は仲介手数料として 40 万ドル x 5/100 = 2 万ドルを支払いました。']\nnew_fact = infer_new_fact(selected) # 'つまり、タンさんは振込、仲介、ローンの手数料として合計 12,000 ドル+ 20,000 + 25 万ドル = 28 万 2,000 ドルを支払いました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['家を 40 万ドルで売りました。', 'つまり、タンさんは振込、仲介、ローンの手数料として合計 12,000 ドル+ 20,000 + 25 万ドル = 28 万 2,000 ドルを支払いました。']\nnew_fact = infer_new_fact(selected) # 'したがって、タンさんの純利益は 40 万ドル - 28 万 2,000 ドル = 11 万 8,000 ドルです。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼が家のローンの残金として 25 万ドルを支払った場合、', 'タンさんが家を売って得た純利益はいくらになりますか？', 'したがって、タンさんの純利益は 40 万ドル - 28 万 2,000 ドル = 11 万 8,000 ドルです。']\nnew_fact = infer_new_fact(selected) # 'The answer is 118000'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '118000'"}
{"id": "GSM8K_267_9ca7796fed", "context": "", "options": [], "answer": "91", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [5], "consequent": 6}, {"antecedents": [1, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}, {"antecedents": [7, 8], "consequent": 9}, {"antecedents": [4, 9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: It takes 20*.4=8 more minutes to go from 300 to 400 degrees than from room temperature to 300; int1 -> int2: So it takes 20+8=28 minutes to warm up; int2 & sent1 -> int3: So the total warming time was 28+20=48 minutes; int3 & sent4 -> int4: So it took 48-5=43 minutes to cook the chicken; int3 & int4 -> int5: So it took 48+43=91 minutes to make the chicken.; int5 & sent4 -> int6: The answer is 91;", "textual_logical_units": {"1": "油が 300 度まで加熱されるのに 20 分かかります。", "2": "その後、オイルが希望の温度である 400 度まで加熱されるまで、さらに 40% の時間がかかります。", "3": "油を温めた後は、油を温めるのにかかる時間よりも調理にかかる時間は 5 分短くなります。", "4": "油を注ぎ始めてから鶏肉を調理するまでにどれくらいの時間がかかりますか？", "5": "300 度から 400 度になるには、室温から 300 度になるよりも 20 * .4 = 8 分長くかかります", "6": "つまり、加熱には 20 + 8 = 28 分かかります", "7": "つまり、加熱時間の合計は 28 + 20 = 48 分でした", "8": "つまり、鶏肉を調理するのに 48 - 5 = 43 分かかりました", "9": "つまり、鶏肉料理を作るのに 48 + 43 = 91 分かかりました。", "10": "The answer is 91"}, "human_translated": true, "code_input": "####\nfacts = ['油が 300 度まで加熱されるのに 20 分かかります。', 'その後、オイルが希望の温度である 400 度まで加熱されるまで、さらに 40% の時間がかかります。', '油を温めた後は、油を温めるのにかかる時間よりも調理にかかる時間は 5 分短くなります。']\nquestion = '油を注ぎ始めてから鶏肉を調理するまでにどれくらいの時間がかかりますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['油が 300 度まで加熱されるのに 20 分かかります。', 'その後、オイルが希望の温度である 400 度まで加熱されるまで、さらに 40% の時間がかかります。']\nnew_fact = infer_new_fact(selected) # '300 度から 400 度になるには、室温から 300 度になるよりも 20 * .4 = 8 分長くかかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['300 度から 400 度になるには、室温から 300 度になるよりも 20 * .4 = 8 分長くかかります']\nnew_fact = infer_new_fact(selected) # 'つまり、加熱には 20 + 8 = 28 分かかります'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['油が 300 度まで加熱されるのに 20 分かかります。', 'つまり、加熱には 20 + 8 = 28 分かかります']\nnew_fact = infer_new_fact(selected) # 'つまり、加熱時間の合計は 28 + 20 = 48 分でした'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['油を注ぎ始めてから鶏肉を調理するまでにどれくらいの時間がかかりますか？', 'つまり、加熱時間の合計は 28 + 20 = 48 分でした']\nnew_fact = infer_new_fact(selected) # 'つまり、鶏肉を調理するのに 48 - 5 = 43 分かかりました'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['つまり、加熱時間の合計は 28 + 20 = 48 分でした', 'つまり、鶏肉を調理するのに 48 - 5 = 43 分かかりました']\nnew_fact = infer_new_fact(selected) # 'つまり、鶏肉料理を作るのに 48 + 43 = 91 分かかりました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['油を注ぎ始めてから鶏肉を調理するまでにどれくらいの時間がかかりますか？', 'つまり、鶏肉料理を作るのに 48 + 43 = 91 分かかりました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 91'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '91'"}
{"id": "GSM8K_268_015248df44", "context": "", "options": [], "answer": "1375", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 5}, {"antecedents": [2, 3], "consequent": 6}, {"antecedents": [5, 6], "consequent": 7}, {"antecedents": [4, 7], "consequent": 8}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: He spent a total of $5 x 50 = $250 for the newspaper ads.; sent2 & sent3 -> int2: He spent a total of $75 x 15 = $1125 for the television ads.; int1 & int2 -> int3: Therefore, the real estate agent spent $250 + $1125 = $1375 on buying all the ads.; int3 & sent4 -> int4: The answer is 1375;", "textual_logical_units": {"1": "不動産業者は 1 つの新聞広告に 5 ドルを費やし、", "2": "1 つのテレビ広告に 75 ドルを費やしました。", "3": "彼は 50 の新聞広告と 15 のテレビ広告を購入しました。", "4": "不動産業者はすべての広告の購入にいくら費やしましたか？", "5": "彼は新聞広告に合計 5 ドル x 50 = 250 ドルを費やしました。", "6": "彼はテレビ広告に合計 75 ドル x 15 = 1125 ドルを費やしました。", "7": "したがって、不動産業者はすべての広告の購入に 250 ドル + 1125 ドル= 1375 ドルを費やしました。", "8": "The answer is 1375"}, "human_translated": true, "code_input": "####\nfacts = ['不動産業者は 1 つの新聞広告に 5 ドルを費やし、', '1 つのテレビ広告に 75 ドルを費やしました。', '彼は 50 の新聞広告と 15 のテレビ広告を購入しました。']\nquestion = '不動産業者はすべての広告の購入にいくら費やしましたか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['不動産業者は 1 つの新聞広告に 5 ドルを費やし、', '彼は 50 の新聞広告と 15 のテレビ広告を購入しました。']\nnew_fact = infer_new_fact(selected) # '彼は新聞広告に合計 5 ドル x 50 = 250 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 つのテレビ広告に 75 ドルを費やしました。', '彼は 50 の新聞広告と 15 のテレビ広告を購入しました。']\nnew_fact = infer_new_fact(selected) # '彼はテレビ広告に合計 75 ドル x 15 = 1125 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['彼は新聞広告に合計 5 ドル x 50 = 250 ドルを費やしました。', '彼はテレビ広告に合計 75 ドル x 15 = 1125 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'したがって、不動産業者はすべての広告の購入に 250 ドル + 1125 ドル= 1375 ドルを費やしました。'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['不動産業者はすべての広告の購入にいくら費やしましたか？', 'したがって、不動産業者はすべての広告の購入に 250 ドル + 1125 ドル= 1375 ドルを費やしました。']\nnew_fact = infer_new_fact(selected) # 'The answer is 1375'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '1375'"}
{"id": "GSM8K_269_5e020deff1", "context": "", "options": [], "answer": "4", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 5}, {"antecedents": [3, 5], "consequent": 6}, {"antecedents": [4, 6], "consequent": 7}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Golf Balls:16/2=8; int1 & sent3 -> int2: Blue Golf Balls:8/2=4 balls; int2 & sent4 -> int3: The answer is 4;", "textual_logical_units": {"1": "ジャグラーは 16 個のボールをジャグリングできます。", "2": "ボールの半分はゴルフボールで、", "3": "ゴルフボールの半分は青いボールです。", "4": "青いゴルフボールはいくつありますか？", "5": "ゴルフボール: 16/2 = 8", "6": "青いゴルフボール: 8/ 2= 4 つのボール", "7": "The answer is 4"}, "human_translated": true, "code_input": "####\nfacts = ['ジャグラーは 16 個のボールをジャグリングできます。', 'ボールの半分はゴルフボールで、', 'ゴルフボールの半分は青いボールです。']\nquestion = '青いゴルフボールはいくつありますか？'\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ジャグラーは 16 個のボールをジャグリングできます。', 'ボールの半分はゴルフボールで、']\nnew_fact = infer_new_fact(selected) # 'ゴルフボール: 16/2 = 8'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ゴルフボールの半分は青いボールです。', 'ゴルフボール: 16/2 = 8']\nnew_fact = infer_new_fact(selected) # '青いゴルフボール: 8/ 2= 4 つのボール'\nis_solved(new_fact, question) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['青いゴルフボールはいくつありますか？', '青いゴルフボール: 8/ 2= 4 つのボール']\nnew_fact = infer_new_fact(selected) # 'The answer is 4'\nis_solved(new_fact, question) # True\nanswer = extract_answer(new_fact) # '4'"}
