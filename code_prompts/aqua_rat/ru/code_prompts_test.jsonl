{"id": "AQUA-RAT_0_c26d838338", "context": "", "options": ["A)5(√3 + 1)", "B)6(√3 + √2)", "C)7(√3 – 1)", "D)8(√3 – 2)", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [1, 3, 4, 5], "consequent": 13}, {"antecedents": [5], "consequent": 14}, {"antecedents": [5, 13, 14], "consequent": 15}, {"antecedents": [5, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [16, 17, 18], "consequent": 19}, {"antecedents": [16, 17, 18, 19], "consequent": 20}, {"antecedents": [16, 17, 18, 19, 20], "consequent": 21}, {"antecedents": [6, 16, 17, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [6, 7, 14, 15, 16, 17, 19, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent0 -> int1: Explanation :; sent1 & sent3 & sent4 & sent5 -> int2: Let the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).; sent5 -> int3: Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.; int2 & int3 & sent5 -> int4: tan 60 = h/x x = h/√3; int2 & int3 & int4 & sent5 -> int5: So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.; int5 -> int6: 10 minutes = h *( 1 – 1√3); int5 & int6 -> int7: h can be travelled in 10 / (1 – 1√3).; int5 & int6 & int7 -> int8: To travel a distance of x, which is h/√3, it takes :; int5 & int6 & int7 & int8 -> int9: h = 10 / (1 – 1/√3); int5 & int6 & int7 & int8 & int9 -> int10: h / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3); int10 & int5 & int6 & int7 & int8 & int9 & sent6 -> int11: So, it takes 5(1 + √3) minutes to reach the base of the tower.; int10 & int11 & int3 & int4 & int5 & int6 & int8 & sent6 & sent7 -> int12: Answer : A; int12 -> int13: The answer is A);", "textual_logical_units": {"1": "Автомобиль движется", "2": "по прямой с одинаковой скоростью", "3": "по направлению к основанию вертикальной башни.", "4": "Из автомобиля видно верхнюю часть башни, и по мере его движения", "5": "угол возвышения изменяется с 45° до 60° за 10 минут.", "6": "Через сколько времени этот автомобиль доберется до основания башни?", "7": "A) 5(√3 + 1)", "8": "B) 6(√3 + √2)", "9": "C) 7(√3 - 1)", "10": "D) 8(√3 - 2)", "11": "E) Ничего из вышеперечисленного", "12": "Объяснение:", "13": "Пусть высота здания равна h. Первоначально угол возвышения составлял 45°. tan 45° = h/расстояние между автомобилем и башней. h = расстояние между автомобилем и башней (поскольку tan 45° = 1).", "14": "Спустя 10 минут, он преодолел определенное расстояние, а угол изменился до 60°.", "15": "tan 60° = h/x x = h/√3", "16": "Таким образом, за 10 минут автомобиль проехал расстояние h - x = h - h/√3.", "17": "10 минут = h*(1 - 1√3)", "18": "Расстояние h можно преодолеть за 10/(1 - 1√3).", "19": "Чтобы преодолеть расстояние x, равное h/√3, потребуется:", "20": "h = 10/(1 - 1/√3)", "21": "h/√3 = 10/√3*(1 - 1/√3) Умножьте числитель и знаменатель на 1 + √3(угол, сопряженный с 1 - √3). Получаем x = h/√3 = 10(1 + √3)/2 = 5*(1 + √3)", "22": "Таким образом, чтобы добраться до основания башни, потребуется 5(1 + √3) минут.", "23": "Ответ: A", "24": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Автомобиль движется',\n  'по прямой с одинаковой скоростью',\n  'по направлению к основанию вертикальной башни.',\n  'Из автомобиля видно верхнюю часть башни, и по мере его движения',\n  'угол возвышения изменяется с 45° до 60° за 10\\xa0минут.']\nquestion = 'Через сколько времени этот автомобиль доберется до основания башни?'\nchoices = {'A': '5(√3\\xa0+\\xa01)', 'B': '6(√3\\xa0+\\xa0√2)', 'C': '7(√3\\xa0-\\xa01)', 'D': '8(√3\\xa0-\\xa02)', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Объяснение:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Автомобиль движется', 'по направлению к основанию вертикальной башни.', 'Из автомобиля видно верхнюю часть башни, и по мере его движения', 'угол возвышения изменяется с 45° до 60° за 10\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Пусть высота здания равна h. Первоначально угол возвышения составлял 45°. tan\\xa045°\\xa0=\\xa0h/расстояние между автомобилем и башней. h\\xa0=\\xa0расстояние между автомобилем и башней (поскольку tan\\xa045°\\xa0=\\xa01).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['угол возвышения изменяется с 45° до 60° за 10\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Спустя 10\\xa0минут, он преодолел определенное расстояние, а угол изменился до 60°.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['угол возвышения изменяется с 45° до 60° за 10\\xa0минут.', 'Пусть высота здания равна h. Первоначально угол возвышения составлял 45°. tan\\xa045°\\xa0=\\xa0h/расстояние между автомобилем и башней. h\\xa0=\\xa0расстояние между автомобилем и башней (поскольку tan\\xa045°\\xa0=\\xa01).', 'Спустя 10\\xa0минут, он преодолел определенное расстояние, а угол изменился до 60°.']\nnew_fact = infer_new_fact(selected) # 'tan\\xa060°\\xa0=\\xa0h/x x\\xa0=\\xa0h/√3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['угол возвышения изменяется с 45° до 60° за 10\\xa0минут.', 'Пусть высота здания равна h. Первоначально угол возвышения составлял 45°. tan\\xa045°\\xa0=\\xa0h/расстояние между автомобилем и башней. h\\xa0=\\xa0расстояние между автомобилем и башней (поскольку tan\\xa045°\\xa0=\\xa01).', 'Спустя 10\\xa0минут, он преодолел определенное расстояние, а угол изменился до 60°.', 'tan\\xa060°\\xa0=\\xa0h/x x\\xa0=\\xa0h/√3']\nnew_fact = infer_new_fact(selected) # 'Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.']\nnew_fact = infer_new_fact(selected) # '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)']\nnew_fact = infer_new_fact(selected) # 'Расстояние h можно преодолеть за 10/(1\\xa0-\\xa01√3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)', 'Расстояние h можно преодолеть за 10/(1\\xa0-\\xa01√3).']\nnew_fact = infer_new_fact(selected) # 'Чтобы преодолеть расстояние x, равное h/√3, потребуется:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)', 'Расстояние h можно преодолеть за 10/(1\\xa0-\\xa01√3).', 'Чтобы преодолеть расстояние x, равное h/√3, потребуется:']\nnew_fact = infer_new_fact(selected) # 'h\\xa0=\\xa010/(1\\xa0-\\xa01/√3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)', 'Расстояние h можно преодолеть за 10/(1\\xa0-\\xa01√3).', 'Чтобы преодолеть расстояние x, равное h/√3, потребуется:', 'h\\xa0=\\xa010/(1\\xa0-\\xa01/√3)']\nnew_fact = infer_new_fact(selected) # 'h/√3\\xa0=\\xa010/√3*(1\\xa0-\\xa01/√3) Умножьте числитель и знаменатель на 1\\xa0+\\xa0√3(угол, сопряженный с 1\\xa0-\\xa0√3). Получаем x\\xa0=\\xa0h/√3\\xa0=\\xa010(1\\xa0+\\xa0√3)/2\\xa0=\\xa05*(1\\xa0+\\xa0√3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько времени этот автомобиль доберется до основания башни?', 'Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)', 'Расстояние h можно преодолеть за 10/(1\\xa0-\\xa01√3).', 'Чтобы преодолеть расстояние x, равное h/√3, потребуется:', 'h\\xa0=\\xa010/(1\\xa0-\\xa01/√3)', 'h/√3\\xa0=\\xa010/√3*(1\\xa0-\\xa01/√3) Умножьте числитель и знаменатель на 1\\xa0+\\xa0√3(угол, сопряженный с 1\\xa0-\\xa0√3). Получаем x\\xa0=\\xa0h/√3\\xa0=\\xa010(1\\xa0+\\xa0√3)/2\\xa0=\\xa05*(1\\xa0+\\xa0√3)']\nnew_fact = infer_new_fact(selected) # 'Таким образом, чтобы добраться до основания башни, потребуется 5(1\\xa0+\\xa0√3)\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько времени этот автомобиль доберется до основания башни?', 'A) 5(√3\\xa0+\\xa01)', 'Спустя 10\\xa0минут, он преодолел определенное расстояние, а угол изменился до 60°.', 'tan\\xa060°\\xa0=\\xa0h/x x\\xa0=\\xa0h/√3', 'Таким образом, за 10\\xa0минут автомобиль проехал расстояние h\\xa0-\\xa0x\\xa0=\\xa0h\\xa0-\\xa0h/√3.', '10\\xa0минут\\xa0=\\xa0h*(1\\xa0-\\xa01√3)', 'Чтобы преодолеть расстояние x, равное h/√3, потребуется:', 'h/√3\\xa0=\\xa010/√3*(1\\xa0-\\xa01/√3) Умножьте числитель и знаменатель на 1\\xa0+\\xa0√3(угол, сопряженный с 1\\xa0-\\xa0√3). Получаем x\\xa0=\\xa0h/√3\\xa0=\\xa010(1\\xa0+\\xa0√3)/2\\xa0=\\xa05*(1\\xa0+\\xa0√3)', 'Таким образом, чтобы добраться до основания башни, потребуется 5(1\\xa0+\\xa0√3)\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_1_3212b6047a", "context": "", "options": ["A)$61", "B)$65", "C)$67.40", "D)$70", "E)$78.20"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [1, 2, 13], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [1, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [6, 11, 12, 14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let x be the original price of the item; sent1 -> int2: Discounted price = 0.78x; int2 & sent1 & sent2 -> int3: Payment made by the customer after using the $20 coupon = 0.78x - 20; int1 & int2 & int3 -> int4: 0.78x - 20 = x/2 + 1.9; int1 & int2 & int3 & int4 & sent1 -> int5: x = 78.20; int1 & int3 & int4 & int5 & sent11 & sent6 -> int6: Answer: E; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "Первоначальная цена товара снижена на 22%.", "2": "Покупатель приобретает товар по этой сниженной цене, используя купон на скидку 20 долл. США.", "3": "Налог на товар отсутствует,", "4": "и это единственный товар, который приобрел покупатель.", "5": "Если покупатель заплатил на 1,90 долл. США больше половины от первоначальной цены товара,", "6": "какой была первоначальная цена?", "7": "A) 61 долл. США", "8": "B) 65 долл. США", "9": "C) 67,40 долл. США", "10": "D) 70 долл. США", "11": "E) 78,20 долл. США", "12": "Пусть x будет первоначальной ценой товара", "13": "Сниженная цена = 0,78x", "14": "Оплата, произведенная покупателем после использования купона на 20 долл. США = 0,78x - 20", "15": "0,78х - 20 = х/2 + 1,9", "16": "x = 78,20", "17": "Ответ: E", "18": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Первоначальная цена товара снижена на 22%.',\n  'Покупатель приобретает товар по этой сниженной цене, используя купон на скидку 20\\xa0долл. США.',\n  'Налог на товар отсутствует,',\n  'и это единственный товар, который приобрел покупатель.',\n  'Если покупатель заплатил на 1,90\\xa0долл. США больше половины от первоначальной цены товара,']\nquestion = 'какой была первоначальная цена?'\nchoices = {'A': '61\\xa0долл. США', 'B': '65\\xa0долл. США', 'C': '67,40\\xa0долл. США', 'D': '70\\xa0долл. США', 'E': '78,20\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Первоначальная цена товара снижена на 22%.']\nnew_fact = infer_new_fact(selected) # 'Пусть x будет первоначальной ценой товара'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первоначальная цена товара снижена на 22%.']\nnew_fact = infer_new_fact(selected) # 'Сниженная цена\\xa0=\\xa00,78x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первоначальная цена товара снижена на 22%.', 'Покупатель приобретает товар по этой сниженной цене, используя купон на скидку 20\\xa0долл. США.', 'Сниженная цена\\xa0=\\xa00,78x']\nnew_fact = infer_new_fact(selected) # 'Оплата, произведенная покупателем после использования купона на 20\\xa0долл. США\\xa0=\\xa00,78x\\xa0-\\xa020'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x будет первоначальной ценой товара', 'Сниженная цена\\xa0=\\xa00,78x', 'Оплата, произведенная покупателем после использования купона на 20\\xa0долл. США\\xa0=\\xa00,78x\\xa0-\\xa020']\nnew_fact = infer_new_fact(selected) # '0,78х\\xa0-\\xa020\\xa0=\\xa0х/2\\xa0+\\xa01,9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первоначальная цена товара снижена на 22%.', 'Пусть x будет первоначальной ценой товара', 'Сниженная цена\\xa0=\\xa00,78x', 'Оплата, произведенная покупателем после использования купона на 20\\xa0долл. США\\xa0=\\xa00,78x\\xa0-\\xa020', '0,78х\\xa0-\\xa020\\xa0=\\xa0х/2\\xa0+\\xa01,9']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa078,20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой была первоначальная цена?', 'E) 78,20\\xa0долл. США', 'Пусть x будет первоначальной ценой товара', 'Оплата, произведенная покупателем после использования купона на 20\\xa0долл. США\\xa0=\\xa00,78x\\xa0-\\xa020', '0,78х\\xa0-\\xa020\\xa0=\\xa0х/2\\xa0+\\xa01,9', 'x\\xa0=\\xa078,20']\nnew_fact = infer_new_fact(selected) # 'Ответ: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_2_e4b0e641cc", "context": "", "options": ["A)36", "B)15", "C)17", "D)5", "E)7"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [2, 3, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 10, 11], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 -> int1: 9=3*3; sent2 -> int2: 12=3*4; int1 & int2 & sent2 -> int3: The number should definitely have these factors 3*3*4; int3 & sent2 & sent3 -> int4: 36 is the number that has these factors; int3 & int4 & sent2 & sent3 -> int5: So, 36 is the multiple of X; int3 & int4 & sent2 & sent3 -> int6: Answer is A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Какое из следующих значений кратно X,", "2": "если оно делится на 9 и 12?", "3": "A) 36", "4": "B) 15", "5": "C) 17", "6": "D) 5", "7": "E) 7", "8": "9 = 3*3", "9": "12 = 3*4", "10": "В числе обязательно должны быть множители 3*3*4", "11": "Число, которое содержит эти множители — 36", "12": "Поэтому 36 кратно X", "13": "Ответ — A", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Какое из следующих значений кратно X,']\nquestion = 'если оно делится на 9 и 12?'\nchoices = {'A': '36', 'B': '15', 'C': '17', 'D': '5', 'E': '7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['если оно делится на 9 и 12?']\nnew_fact = infer_new_fact(selected) # '9\\xa0=\\xa03*3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если оно делится на 9 и 12?']\nnew_fact = infer_new_fact(selected) # '12\\xa0=\\xa03*4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если оно делится на 9 и 12?', '9\\xa0=\\xa03*3', '12\\xa0=\\xa03*4']\nnew_fact = infer_new_fact(selected) # 'В числе обязательно должны быть множители 3*3*4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если оно делится на 9 и 12?', 'A) 36', 'В числе обязательно должны быть множители 3*3*4']\nnew_fact = infer_new_fact(selected) # 'Число, которое содержит эти множители\\xa0— 36'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если оно делится на 9 и 12?', 'A) 36', 'В числе обязательно должны быть множители 3*3*4', 'Число, которое содержит эти множители\\xa0— 36']\nnew_fact = infer_new_fact(selected) # 'Поэтому 36 кратно X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если оно делится на 9 и 12?', 'A) 36', 'В числе обязательно должны быть множители 3*3*4', 'Число, которое содержит эти множители\\xa0— 36']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_3_64073821d2", "context": "", "options": ["A)0.22", "B)0.26", "C)0.37", "D)0.46", "E)0.63"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The probability that stock A does not increase is 0.44, and the probability that stock B does not increase is 0.26. Now, how can the probability that both do not increase be more than individual probability of not increasing for each? So the probability that both do not increase can not be more than 0.26. Basically the probability that both do not increase is between 0 and 0.26.; int1 -> int2: The answer is B);", "textual_logical_units": {"1": "Если вероятность того, что в следующем месяце акции A вырастут в цене, составляет 0,56,", "2": "а вероятность того, что акции B в следующем месяце вырастут в цене, составляет 0,74,", "3": "каково наибольшее значение вероятности того, что ни одного из этих двух событий не произойдет?", "4": "A) 0,22", "5": "B) 0,26", "6": "C) 0,37", "7": "D) 0,46", "8": "E) 0,63", "9": "Вероятность того, что акции A не вырастут в цене, равна 0,44, а вероятность того, что акции B не вырастут в цене, равна 0,26. Как вероятность того, что ни одни акции не вырастут в цене, может быть выше, чем единичная вероятность того, что не вырастут в цене какие-либо из них? Таким образом, вероятность того, что ни одни акции не вырастут в цене, не может быть выше 0,26. Поэтому вероятность того, что ни одни акции не вырастут в цене, составляет от 0 до 0,26.", "10": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Если вероятность того, что в следующем месяце акции A вырастут в цене, составляет 0,56,',\n  'а вероятность того, что акции B в следующем месяце вырастут в цене, составляет 0,74,']\nquestion = 'каково наибольшее значение вероятности того, что ни одного из этих двух событий не произойдет?'\nchoices = {'A': '0,22', 'B': '0,26', 'C': '0,37', 'D': '0,46', 'E': '0,63'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если вероятность того, что в следующем месяце акции A вырастут в цене, составляет 0,56,', 'а вероятность того, что акции B в следующем месяце вырастут в цене, составляет 0,74,', 'каково наибольшее значение вероятности того, что ни одного из этих двух событий не произойдет?']\nnew_fact = infer_new_fact(selected) # 'Вероятность того, что акции A не вырастут в цене, равна 0,44, а вероятность того, что акции B не вырастут в цене, равна 0,26. Как вероятность того, что ни одни акции не вырастут в цене, может быть выше, чем единичная вероятность того, что не вырастут в цене какие-либо из них? Таким образом, вероятность того, что ни одни акции не вырастут в цене, не может быть выше 0,26. Поэтому вероятность того, что ни одни акции не вырастут в цене, составляет от 0 до 0,26.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вероятность того, что акции A не вырастут в цене, равна 0,44, а вероятность того, что акции B не вырастут в цене, равна 0,26. Как вероятность того, что ни одни акции не вырастут в цене, может быть выше, чем единичная вероятность того, что не вырастут в цене какие-либо из них? Таким образом, вероятность того, что ни одни акции не вырастут в цене, не может быть выше 0,26. Поэтому вероятность того, что ни одни акции не вырастут в цене, составляет от 0 до 0,26.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_4_5c76f60df8", "context": "", "options": ["A)270", "B)300", "C)280", "D)320", "E)315"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 4, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Cost Price = Selling Price / (100+Profit%) × 100 => 360 / (100+20) × 100 => 360 / 120 × 100 = Rs.300; int1 & sent2 & sent4 -> int2: Option B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Торговец продал товар за 360 рупий, получив прибыль 20%.", "2": "Какова закупочная цена товара?", "3": "A) 270", "4": "B) 300", "5": "C) 280", "6": "D) 320", "7": "E) 315", "8": "Закупочная цена = прейскурантная цена/(100 + % прибыли) × 100 => 360/(100+20) × 100 => 360/120 × 100 = 300 рупий", "9": "Вариант Б", "10": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Торговец продал товар за 360\\xa0рупий, получив прибыль 20%.']\nquestion = 'Какова закупочная цена товара?'\nchoices = {'A': '270', 'B': '300', 'C': '280', 'D': '320', 'E': '315'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Торговец продал товар за 360\\xa0рупий, получив прибыль 20%.', 'Какова закупочная цена товара?']\nnew_fact = infer_new_fact(selected) # 'Закупочная цена\\xa0=\\xa0прейскурантная цена/(100\\xa0+\\xa0%\\xa0прибыли)\\xa0×\\xa0100\\xa0=>\\xa0360/(100+20)\\xa0×\\xa0100\\xa0=>\\xa0360/120\\xa0×\\xa0100\\xa0=\\xa0300\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова закупочная цена товара?', 'B) 300', 'Закупочная цена\\xa0=\\xa0прейскурантная цена/(100\\xa0+\\xa0%\\xa0прибыли)\\xa0×\\xa0100\\xa0=>\\xa0360/(100+20)\\xa0×\\xa0100\\xa0=>\\xa0360/120\\xa0×\\xa0100\\xa0=\\xa0300\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_5_ceb01d1888", "context": "", "options": ["A)40", "B)200", "C)380", "D)400", "E)3200"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 & sent6 -> int1: We know that there are 20 black marbles in the bag and this number represent 1/20 th of the number of all marbles in the bag, thus there are total Q of 20*20=400 marbles.; int1 & sent10 & sent6 -> int2: Answer: D.; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Из мешка, в котором были только белые шарики, вытащили 20 шариков, покрасили их в черный цвет, а затем положили обратно.", "2": "Затем вытащили еще 20 шариков,", "3": "1 из которых был черным,", "4": "после чего их все вернули в мешок.", "5": "Если процент черных шариков, вытащенных во второй раз, соответствует их процентному содержанию в мешке,", "6": "сколько всего шариков сейчас находится в мешке?", "7": "A) 40", "8": "B) 200", "9": "C) 380", "10": "D) 400", "11": "E) 3200", "12": "Мы знаем, что в мешке 20 черных шариков, и это число составляет 1/20 от количества всех шариков в мешке, поэтому общее количество шариков в мешке составляет 20*20 = 400 шариков.", "13": "Ответ: Г.", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Из мешка, в котором были только белые шарики, вытащили 20\\xa0шариков, покрасили их в черный цвет, а затем положили обратно.',\n  'Затем вытащили еще 20\\xa0шариков,',\n  '1 из которых был черным,',\n  'после чего их все вернули в мешок.',\n  'Если процент черных шариков, вытащенных во второй раз, соответствует их процентному содержанию в мешке,']\nquestion = 'сколько всего шариков сейчас находится в мешке?'\nchoices = {'A': '40', 'B': '200', 'C': '380', 'D': '400', 'E': '3200'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Из мешка, в котором были только белые шарики, вытащили 20\\xa0шариков, покрасили их в черный цвет, а затем положили обратно.', 'Затем вытащили еще 20\\xa0шариков,', '1 из которых был черным,', 'после чего их все вернули в мешок.', 'Если процент черных шариков, вытащенных во второй раз, соответствует их процентному содержанию в мешке,', 'сколько всего шариков сейчас находится в мешке?']\nnew_fact = infer_new_fact(selected) # 'Мы знаем, что в мешке 20\\xa0черных шариков, и это число составляет 1/20 от количества всех шариков в мешке, поэтому общее количество шариков в мешке составляет 20*20\\xa0=\\xa0400\\xa0шариков.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько всего шариков сейчас находится в мешке?', 'D) 400', 'Мы знаем, что в мешке 20\\xa0черных шариков, и это число составляет 1/20 от количества всех шариков в мешке, поэтому общее количество шариков в мешке составляет 20*20\\xa0=\\xa0400\\xa0шариков.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_6_ce283204aa", "context": "", "options": ["A)74453", "B)64543", "C)74325", "D)65000", "E)97656"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Out of 26 alphabets two distinct letters can be chosen in 26P2 ways. Coming to the numbers part, there are 10 ways to choose the first digit and similarly, there are another 10 ways to choose the second digit. Hence, there are in total 10X10 = 100 ways.; int1 -> int2: Combined with letters there are 6P2 X 100 ways = 65000 ways to choose vehicle numbers.; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Найдите общее количество", "2": "разных велосипедных номеров, которые можно сформировать из 2 букв английского алфавита, за которыми следуют 2 цифры.", "3": "Сколько букв нужно, чтобы номера были разными?", "4": "A) 74453", "5": "B) 64543", "6": "C) 74325", "7": "D) 65000", "8": "E) 97656", "9": "Из 26 букв английского алфавита две разные буквы можно выбрать 26P2 способами. Что касается цифр, есть 10 вариантов выбора первой и, аналогично, еще 10 вариантов выбора второй. Следовательно, всего существует 10X10 = 100 вариантов.", "10": "В сочетании с буквами существует 6P2 X 100 вариантов = 65000 вариантов выбора номеров транспортных средств.", "11": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Найдите общее количество', 'разных велосипедных номеров, которые можно сформировать из 2\\xa0букв английского алфавита, за которыми следуют 2\\xa0цифры.']\nquestion = 'Сколько букв нужно, чтобы номера были разными?'\nchoices = {'A': '74453', 'B': '64543', 'C': '74325', 'D': '65000', 'E': '97656'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Найдите общее количество', 'разных велосипедных номеров, которые можно сформировать из 2\\xa0букв английского алфавита, за которыми следуют 2\\xa0цифры.', 'Сколько букв нужно, чтобы номера были разными?']\nnew_fact = infer_new_fact(selected) # 'Из 26\\xa0букв английского алфавита две разные буквы можно выбрать 26P2\\xa0способами. Что касается цифр, есть 10\\xa0вариантов выбора первой и, аналогично, еще 10\\xa0вариантов выбора второй. Следовательно, всего существует 10X10\\xa0=\\xa0100\\xa0вариантов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 26\\xa0букв английского алфавита две разные буквы можно выбрать 26P2\\xa0способами. Что касается цифр, есть 10\\xa0вариантов выбора первой и, аналогично, еще 10\\xa0вариантов выбора второй. Следовательно, всего существует 10X10\\xa0=\\xa0100\\xa0вариантов.']\nnew_fact = infer_new_fact(selected) # 'В сочетании с буквами существует 6P2\\xa0X\\xa0100\\xa0вариантов\\xa0=\\xa065000\\xa0вариантов выбора номеров транспортных средств.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В сочетании с буквами существует 6P2\\xa0X\\xa0100\\xa0вариантов\\xa0=\\xa065000\\xa0вариантов выбора номеров транспортных средств.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_7_7b2a7e0e97", "context": "", "options": ["A)10", "B)11.5", "C)12.5", "D)13.5", "E)15"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [4, 12], "consequent": 14}, {"antecedents": [2, 5, 11, 12, 13, 14], "consequent": 15}, {"antecedents": [5, 8, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Distance to destination = 100 X 10 = 1000 miles.; int1 & sent3 -> int2: Distance remaining when it starts to rain = 1000 - 250 = 750 miles.; sent4 -> int3: Speed for remaining distance = 75 miles / hour.; int2 & sent4 -> int4: Time taken to cover remaining distance = 750 / 75 = 10 hours.; int1 & int2 & int3 & int4 & sent2 & sent5 -> int5: Total duration of the journey = 2.5 + 10 = 12.5 hours.; int1 & int2 & int3 & int4 & int5 & sent5 & sent8 -> int6: The correct option is C.; int6 -> int7: The answer is C);", "textual_logical_units": {"1": "Поезд, движущийся со скоростью 100 миль в час,", "2": "добирается до пункта назначения за 10 часов.", "3": "Когда поезд проходит четверть расстояния, начинается дождь, и", "4": "поезду приходится замедлиться до скорости 75 миль в час.", "5": "Какова общая продолжительность поездки?", "6": "A) 10", "7": "B) 11,5", "8": "C) 12,5", "9": "D) 13,5", "10": "E) 15", "11": "Расстояние до пункта назначения = 100 X 10 = 1000 миль.", "12": "Расстояние, оставшееся на момент начала дождя = 1000 - 250 = 750 миль.", "13": "Скорость на оставшемся расстоянии = 75 миль в час.", "14": "Время, необходимое для преодоления оставшегося расстояния = 750/75 = 10 часов.", "15": "Общая продолжительность поездки = 2,5 + 10 = 12,5 часов.", "16": "Правильный вариант — В.", "17": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Поезд, движущийся со скоростью 100\\xa0миль в час,',\n  'добирается до пункта назначения за 10\\xa0часов.',\n  'Когда поезд проходит четверть расстояния, начинается дождь, и',\n  'поезду приходится замедлиться до скорости 75\\xa0миль в час.']\nquestion = 'Какова общая продолжительность поездки?'\nchoices = {'A': '10', 'B': '11,5', 'C': '12,5', 'D': '13,5', 'E': '15'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Поезд, движущийся со скоростью 100\\xa0миль в час,', 'добирается до пункта назначения за 10\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Расстояние до пункта назначения\\xa0=\\xa0100\\xa0X\\xa010\\xa0=\\xa01000\\xa0миль.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда поезд проходит четверть расстояния, начинается дождь, и', 'Расстояние до пункта назначения\\xa0=\\xa0100\\xa0X\\xa010\\xa0=\\xa01000\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Расстояние, оставшееся на момент начала дождя\\xa0=\\xa01000\\xa0-\\xa0250\\xa0=\\xa0750\\xa0миль.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['поезду приходится замедлиться до скорости 75\\xa0миль в час.']\nnew_fact = infer_new_fact(selected) # 'Скорость на оставшемся расстоянии\\xa0=\\xa075\\xa0миль в час.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['поезду приходится замедлиться до скорости 75\\xa0миль в час.', 'Расстояние, оставшееся на момент начала дождя\\xa0=\\xa01000\\xa0-\\xa0250\\xa0=\\xa0750\\xa0миль.']\nnew_fact = infer_new_fact(selected) # 'Время, необходимое для преодоления оставшегося расстояния\\xa0=\\xa0750/75\\xa0=\\xa010\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['добирается до пункта назначения за 10\\xa0часов.', 'Какова общая продолжительность поездки?', 'Расстояние до пункта назначения\\xa0=\\xa0100\\xa0X\\xa010\\xa0=\\xa01000\\xa0миль.', 'Расстояние, оставшееся на момент начала дождя\\xa0=\\xa01000\\xa0-\\xa0250\\xa0=\\xa0750\\xa0миль.', 'Скорость на оставшемся расстоянии\\xa0=\\xa075\\xa0миль в час.', 'Время, необходимое для преодоления оставшегося расстояния\\xa0=\\xa0750/75\\xa0=\\xa010\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Общая продолжительность поездки\\xa0=\\xa02,5\\xa0+\\xa010\\xa0=\\xa012,5\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова общая продолжительность поездки?', 'C) 12,5', 'Расстояние до пункта назначения\\xa0=\\xa0100\\xa0X\\xa010\\xa0=\\xa01000\\xa0миль.', 'Расстояние, оставшееся на момент начала дождя\\xa0=\\xa01000\\xa0-\\xa0250\\xa0=\\xa0750\\xa0миль.', 'Скорость на оставшемся расстоянии\\xa0=\\xa075\\xa0миль в час.', 'Время, необходимое для преодоления оставшегося расстояния\\xa0=\\xa0750/75\\xa0=\\xa010\\xa0часов.', 'Общая продолжительность поездки\\xa0=\\xa02,5\\xa0+\\xa010\\xa0=\\xa012,5\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_8_7038df8427", "context": "", "options": ["A)27", "B)81", "C)90", "D)99", "E)110"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [1, 2, 3, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 11, 12], "consequent": 13}, {"antecedents": [4, 9, 11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: To maximize the number of students who did neither, we should minimize the number of students who debated or attended the prom.; sent1 & sent2 & sent3 -> int2: Let's assume that all 35% of students who debated also attended the prom.; int2 & sent1 & sent2 & sent3 -> int3: Then 35% did both, 10% only attended prom, and 55% did neither.; int2 & int3 & sent1 & sent2 & sent3 -> int4: 0.55*200 = 110; int2 & int3 & int4 & sent4 & sent9 -> int5: The answer is E.; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Из 200 учеников школы", "2": "не менее 45% присутствовали на выпускном вечере, и", "3": "не менее 35% приняли участие в дебатах.", "4": "Каково максимальное количество учеников, которые могли не присутствовать ни на выпускном вечере, ни на дебатах?", "5": "A) 27", "6": "B) 81", "7": "C) 90", "8": "D) 99", "9": "E) 110", "10": "Чтобы максимально увеличить количество учеников, которые не присутствовали ни там, ни там, следует свести к минимуму количество учеников, которые участвовали в дебатах или присутствовали на выпускном вечере.", "11": "Предположим, что все 35% учеников, участвовавших в дебатах, также присутствовали на выпускном вечере.", "12": "Тогда 35% присутствовали и там, и там, 10% присутствовали только на выпускном вечере, а 55% не присутствовали ни там, ни там.", "13": "0,55*200 = 110", "14": "Ответ — Д.", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Из 200\\xa0учеников школы', 'не менее 45% присутствовали на выпускном вечере, и', 'не менее 35% приняли участие в дебатах.']\nquestion = 'Каково максимальное количество учеников, которые могли не присутствовать ни на выпускном вечере, ни на дебатах?'\nchoices = {'A': '27', 'B': '81', 'C': '90', 'D': '99', 'E': '110'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['не менее 45% присутствовали на выпускном вечере, и', 'не менее 35% приняли участие в дебатах.', 'Каково максимальное количество учеников, которые могли не присутствовать ни на выпускном вечере, ни на дебатах?']\nnew_fact = infer_new_fact(selected) # 'Чтобы максимально увеличить количество учеников, которые не присутствовали ни там, ни там, следует свести к минимуму количество учеников, которые участвовали в дебатах или присутствовали на выпускном вечере.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 200\\xa0учеников школы', 'не менее 45% присутствовали на выпускном вечере, и', 'не менее 35% приняли участие в дебатах.']\nnew_fact = infer_new_fact(selected) # 'Предположим, что все 35%\\xa0учеников, участвовавших в дебатах, также присутствовали на выпускном вечере.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 200\\xa0учеников школы', 'не менее 45% присутствовали на выпускном вечере, и', 'не менее 35% приняли участие в дебатах.', 'Предположим, что все 35%\\xa0учеников, участвовавших в дебатах, также присутствовали на выпускном вечере.']\nnew_fact = infer_new_fact(selected) # 'Тогда 35% присутствовали и там, и там, 10% присутствовали только на выпускном вечере, а 55% не присутствовали ни там, ни там.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Из 200\\xa0учеников школы', 'не менее 45% присутствовали на выпускном вечере, и', 'не менее 35% приняли участие в дебатах.', 'Предположим, что все 35%\\xa0учеников, участвовавших в дебатах, также присутствовали на выпускном вечере.', 'Тогда 35% присутствовали и там, и там, 10% присутствовали только на выпускном вечере, а 55% не присутствовали ни там, ни там.']\nnew_fact = infer_new_fact(selected) # '0,55*200\\xa0=\\xa0110'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково максимальное количество учеников, которые могли не присутствовать ни на выпускном вечере, ни на дебатах?', 'E) 110', 'Предположим, что все 35%\\xa0учеников, участвовавших в дебатах, также присутствовали на выпускном вечере.', 'Тогда 35% присутствовали и там, и там, 10% присутствовали только на выпускном вечере, а 55% не присутствовали ни там, ни там.', '0,55*200\\xa0=\\xa0110']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_9_0a80e5d8db", "context": "", "options": ["A)15", "B)24", "C)25", "D)40", "E)52"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 10% of 250 = 25.; sent2 -> int2: Total salary required = 1000; sent1 -> int3: Earning from single sale = 25; sent1 & sent2 -> int4: # of sales = 1000/25 =40; int3 & int4 & sent1 & sent2 -> int5: So 40 sales; int4 & int5 & sent1 & sent2 & sent6 -> int6: D is the correct choice; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Продавец получает комиссию в размере 10% от каждой продажи.", "2": "Сколько продаж по 250 долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000 долл. США?", "3": "A) 15", "4": "B) 24", "5": "C) 25", "6": "D) 40", "7": "E) 52", "8": "10% от 250 = 25.", "9": "Требуемая общая зарплата = 1000", "10": "Доход от одной продажи = 25", "11": "Количество продаж = 1000/25 = 40", "12": "Необходимо 40 продаж", "13": "Правильный вариант — Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Продавец получает комиссию в размере 10% от каждой продажи.']\nquestion = 'Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?'\nchoices = {'A': '15', 'B': '24', 'C': '25', 'D': '40', 'E': '52'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Продавец получает комиссию в размере 10% от каждой продажи.', 'Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?']\nnew_fact = infer_new_fact(selected) # '10% от 250\\xa0=\\xa025.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?']\nnew_fact = infer_new_fact(selected) # 'Требуемая общая зарплата\\xa0=\\xa01000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продавец получает комиссию в размере 10% от каждой продажи.']\nnew_fact = infer_new_fact(selected) # 'Доход от одной продажи\\xa0=\\xa025'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продавец получает комиссию в размере 10% от каждой продажи.', 'Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?']\nnew_fact = infer_new_fact(selected) # 'Количество продаж\\xa0=\\xa01000/25\\xa0=\\xa040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продавец получает комиссию в размере 10% от каждой продажи.', 'Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?', 'Доход от одной продажи\\xa0=\\xa025', 'Количество продаж\\xa0=\\xa01000/25\\xa0=\\xa040']\nnew_fact = infer_new_fact(selected) # 'Необходимо 40\\xa0продаж'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продавец получает комиссию в размере 10% от каждой продажи.', 'Сколько продаж по 250\\xa0долл. США ему необходимо совершить, чтобы получить зарплату не менее 1000\\xa0долл. США?', 'D) 40', 'Количество продаж\\xa0=\\xa01000/25\\xa0=\\xa040', 'Необходимо 40\\xa0продаж']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_10_52ac39f127", "context": "", "options": ["A)226", "B)230", "C)240", "D)260", "E)280"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [1, 2, 10], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [0], "consequent": 14}, {"antecedents": [6, 11, 12, 13], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 450*12(x-110)=626400; int1 & sent1 & sent2 -> int2: where x is a selling cost of one item; int1 & sent1 & sent2 -> int3: x-110, is a profit from one item; sent1 -> int4: 450 - number of items produced and sold per month; sent0 -> int5: 12 - is a number of month in a year; int2 & int3 & int4 & sent6 -> int6: Simplifying the equation will lead to x-110=116, then x = 230; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Компания ежемесячно производит 420 единиц определенных компьютерных компонентов", "2": "при стоимости производства 110 долл. США за компонент", "3": "и к концу каждого месяца продает все компоненты.", "4": "Какова минимальная прейскурантная цена каждого компонента, гарантирующая, что годовой доход (выручка от продаж минус производственные расходы) составит не менее 626400 долл. США?", "5": "A) 226", "6": "B) 230", "7": "C) 240", "8": "D) 260", "9": "E) 280", "10": "450*12(х - 110) = 626400", "11": "где x — прейскурантная цена одного компонента", "12": "x - 110 — прибыль от продажи одного компонента", "13": "450 — количество произведенных и проданных компонентов в месяц", "14": "12 — количество месяцев в году", "15": "Упростив уравнение, получим: x - 110 = 116, x = 230", "16": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Компания ежемесячно производит 420\\xa0единиц определенных компьютерных компонентов',\n  'при стоимости производства 110\\xa0долл. США за компонент',\n  'и к концу каждого месяца продает все компоненты.']\nquestion = ('Какова минимальная прейскурантная цена каждого компонента, гарантирующая, что годовой доход (выручка от продаж минус производственные расходы) составит не '\n 'менее 626400\\xa0долл. США?')\nchoices = {'A': '226', 'B': '230', 'C': '240', 'D': '260', 'E': '280'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Компания ежемесячно производит 420\\xa0единиц определенных компьютерных компонентов', 'при стоимости производства 110\\xa0долл. США за компонент']\nnew_fact = infer_new_fact(selected) # '450*12(х\\xa0-\\xa0110)\\xa0=\\xa0626400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания ежемесячно производит 420\\xa0единиц определенных компьютерных компонентов', 'при стоимости производства 110\\xa0долл. США за компонент', '450*12(х\\xa0-\\xa0110)\\xa0=\\xa0626400']\nnew_fact = infer_new_fact(selected) # 'где x\\xa0— прейскурантная цена одного компонента'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания ежемесячно производит 420\\xa0единиц определенных компьютерных компонентов', 'при стоимости производства 110\\xa0долл. США за компонент', '450*12(х\\xa0-\\xa0110)\\xa0=\\xa0626400']\nnew_fact = infer_new_fact(selected) # 'x\\xa0-\\xa0110\\xa0— прибыль от продажи одного компонента'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания ежемесячно производит 420\\xa0единиц определенных компьютерных компонентов']\nnew_fact = infer_new_fact(selected) # '450\\xa0— количество произведенных и проданных компонентов в месяц'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '12\\xa0— количество месяцев в году'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B) 230', 'где x\\xa0— прейскурантная цена одного компонента', 'x\\xa0-\\xa0110\\xa0— прибыль от продажи одного компонента', '450\\xa0— количество произведенных и проданных компонентов в месяц']\nnew_fact = infer_new_fact(selected) # 'Упростив уравнение, получим: x\\xa0-\\xa0110\\xa0=\\xa0116, x\\xa0=\\xa0230'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Упростив уравнение, получим: x\\xa0-\\xa0110\\xa0=\\xa0116, x\\xa0=\\xa0230']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_11_8ead2e6ea4", "context": "", "options": ["A)4,000", "B)4,200", "C)4,500", "D)4,800", "E)5,000"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [2, 3], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [14, 15], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent1 -> int1: We're told that 10% of staplers in a factory are defective.; sent0 -> int2: X = Total staplers; int2 & sent1 -> int3: 0.1X = defective staplers; int2 & int3 -> int4: 0.9X = normal staplers; sent2 & sent3 -> int5: Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.; int3 & int4 & int5 -> int6: 0.9X(0.02) = 72; int5 & int6 -> int7: 0.018X = 72; int5 & int6 & int7 -> int8: 18X = 72,000; int8 -> int9: X = 4,000; sent0 -> int10: Final Answer:; int10 -> int11: The answer is A);", "textual_logical_units": {"1": "На одном заводе 10 процентов степлеров, произведенных в понедельник, оказались дефектными, а", "2": "2 процента недефектных степлеров были забракованы по ошибке.", "3": "Если было забраковано 72 недефектных степлера,", "4": "какое количество степлеров было произведено в этот день?", "5": "A) 4 000", "6": "B) 4 200", "7": "C) 4 500", "8": "D) 4 800", "9": "E) 5 000", "10": "Известно, что 10% степлеров на заводе оказались дефектными.", "11": "X = общее количество степлеров", "12": "0,1X = количество дефектных степлеров", "13": "0,9X = исправные степлеры", "14": "Далее говорится, что 2% исправных степлеров были забракованы по ошибке, а это = 72 степлера.", "15": "0,9Х(0,02) = 72", "16": "0,018X = 72", "17": "18X = 72 000", "18": "X = 4 000", "19": "Окончательный ответ:", "20": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'На одном заводе 10\\xa0процентов степлеров, произведенных в понедельник, оказались дефектными, а',\n  '2\\xa0процента недефектных степлеров были забракованы по ошибке.',\n  'Если было забраковано 72\\xa0недефектных степлера,']\nquestion = 'какое количество степлеров было произведено в этот день?'\nchoices = {'A': '4\\xa0000', 'B': '4\\xa0200', 'C': '4\\xa0500', 'D': '4\\xa0800', 'E': '5\\xa0000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На одном заводе 10\\xa0процентов степлеров, произведенных в понедельник, оказались дефектными, а']\nnew_fact = infer_new_fact(selected) # 'Известно, что 10%\\xa0степлеров на заводе оказались дефектными.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa0общее количество степлеров'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На одном заводе 10\\xa0процентов степлеров, произведенных в понедельник, оказались дефектными, а', 'X\\xa0=\\xa0общее количество степлеров']\nnew_fact = infer_new_fact(selected) # '0,1X\\xa0=\\xa0количество дефектных степлеров'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X\\xa0=\\xa0общее количество степлеров', '0,1X\\xa0=\\xa0количество дефектных степлеров']\nnew_fact = infer_new_fact(selected) # '0,9X\\xa0=\\xa0исправные степлеры'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0процента недефектных степлеров были забракованы по ошибке.', 'Если было забраковано 72\\xa0недефектных степлера,']\nnew_fact = infer_new_fact(selected) # 'Далее говорится, что 2%\\xa0исправных степлеров были забракованы по ошибке, а это\\xa0=\\xa072\\xa0степлера.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['0,1X\\xa0=\\xa0количество дефектных степлеров', '0,9X\\xa0=\\xa0исправные степлеры', 'Далее говорится, что 2%\\xa0исправных степлеров были забракованы по ошибке, а это\\xa0=\\xa072\\xa0степлера.']\nnew_fact = infer_new_fact(selected) # '0,9Х(0,02)\\xa0=\\xa072'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Далее говорится, что 2%\\xa0исправных степлеров были забракованы по ошибке, а это\\xa0=\\xa072\\xa0степлера.', '0,9Х(0,02)\\xa0=\\xa072']\nnew_fact = infer_new_fact(selected) # '0,018X\\xa0=\\xa072'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Далее говорится, что 2%\\xa0исправных степлеров были забракованы по ошибке, а это\\xa0=\\xa072\\xa0степлера.', '0,9Х(0,02)\\xa0=\\xa072', '0,018X\\xa0=\\xa072']\nnew_fact = infer_new_fact(selected) # '18X\\xa0=\\xa072\\xa0000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['18X\\xa0=\\xa072\\xa0000']\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa04\\xa0000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Окончательный ответ:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Окончательный ответ:']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_12_bef6d5ea84", "context": "", "options": ["A)24 minutes", "B)32 minutes", "C)36 minutes", "D)64 minutes", "E)72 minutes"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: A's speed = 3 yo-yos every 18 minutes; sent2 -> int2: B's speed = 2 yo-yos every 18 minutes; int1 & int2 -> int3: A + B's speed = 3 + 2 = 5 yo-yos every 18 minutes; int3 & sent3 -> int4: both together will finish 10 yo-yos in 36 minutes; int3 & int4 & sent3 & sent6 -> int5: correct option is C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Устройство А выпускает по одной игрушке йо-йо каждые 6 минут.", "2": "Устройство B выпускает по одной игрушке йо-йо каждые 9 минут.", "3": "Через сколько минут они произведут 10 игрушек йо-йо?", "4": "A) 24 минуты", "5": "B) 32 минуты", "6": "C) 36 минут", "7": "D) 64 минуты", "8": "E) 72 минуты", "9": "Скорость устройства A = 3 игрушки йо-йо каждые 18 минут", "10": "Скорость устройства B = 2 игрушки йо-йо каждые 18 минут", "11": "Скорость устройств A + B = 3 + 2 = 5 игрушек йо-йо каждые 18 минут", "12": "Оба устройства вместе произведут 10 игрушек йо-йо за 36 минут", "13": "Правильный вариант — В", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Устройство\\xa0А выпускает по одной игрушке йо-йо каждые 6\\xa0минут.', 'Устройство\\xa0B выпускает по одной игрушке йо-йо каждые 9\\xa0минут.']\nquestion = 'Через сколько минут они произведут 10\\xa0игрушек йо-йо?'\nchoices = {'A': '24\\xa0минуты', 'B': '32\\xa0минуты', 'C': '36\\xa0минут', 'D': '64\\xa0минуты', 'E': '72\\xa0минуты'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Устройство\\xa0А выпускает по одной игрушке йо-йо каждые 6\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Скорость устройства\\xa0A\\xa0=\\xa03\\xa0игрушки йо-йо каждые 18\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Устройство\\xa0B выпускает по одной игрушке йо-йо каждые 9\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Скорость устройства\\xa0B\\xa0=\\xa02\\xa0игрушки йо-йо каждые 18\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скорость устройства\\xa0A\\xa0=\\xa03\\xa0игрушки йо-йо каждые 18\\xa0минут', 'Скорость устройства\\xa0B\\xa0=\\xa02\\xa0игрушки йо-йо каждые 18\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Скорость устройств\\xa0A\\xa0+\\xa0B\\xa0=\\xa03\\xa0+\\xa02\\xa0=\\xa05\\xa0игрушек йо-йо каждые 18\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько минут они произведут 10\\xa0игрушек йо-йо?', 'Скорость устройств\\xa0A\\xa0+\\xa0B\\xa0=\\xa03\\xa0+\\xa02\\xa0=\\xa05\\xa0игрушек йо-йо каждые 18\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Оба устройства вместе произведут 10\\xa0игрушек йо-йо за 36\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько минут они произведут 10\\xa0игрушек йо-йо?', 'C) 36\\xa0минут', 'Скорость устройств\\xa0A\\xa0+\\xa0B\\xa0=\\xa03\\xa0+\\xa02\\xa0=\\xa05\\xa0игрушек йо-йо каждые 18\\xa0минут', 'Оба устройства вместе произведут 10\\xa0игрушек йо-йо за 36\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_13_fa5f492924", "context": "", "options": ["A)-30", "B)+30", "C)0", "D)15", "E)-15"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 5, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: 45 - 30 = 15; int1 & sent1 & sent5 -> int2: ANSWER : D; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Сложите: +45 и -30", "2": "A) -30", "3": "B) +30", "4": "C) 0", "5": "D) 15", "6": "E) -15", "7": "45 - 30 = 15", "8": "ОТВЕТ: D", "9": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Сложите: +45 и -30'\nchoices = {'A': '-30', 'B': '+30', 'C': '0', 'D': '15', 'E': '-15'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сложите: +45 и -30']\nnew_fact = infer_new_fact(selected) # '45\\xa0-\\xa030\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сложите: +45 и -30', 'D) 15', '45\\xa0-\\xa030\\xa0=\\xa015']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_14_9e29d7b287", "context": "", "options": ["A)2!", "B)3!", "C)7!", "D)8!", "E)9!"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [1, 8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: There are seven positions to be filled.; sent1 -> int2: The first position can be filled using any of the 7 letters contained in PROBLEM.; int2 & sent1 -> int3: The second position can be filled by the remaining 6 letters as the letters should not repeat.; int2 & int3 & sent1 -> int4: The third position can be filled by the remaining 5 letters only and so on.; int2 & int3 & int4 & sent1 -> int5: Therefore, the total number of ways of rearranging the 7 letter word = 7*6*5*4*3*2*1 = 7! Ways.; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7 букв, в которых ни одна буква не повторяется?", "2": "A) 2!", "3": "B) 3!", "4": "C) 7!", "5": "D) 8!", "6": "E) 9!", "7": "Необходимо заполнить семь позиций.", "8": "Первую позицию можно заполнить любой из 7 букв, содержащихся в слове PROBLEM.", "9": "Вторую позицию можно заполнить одной из оставшихся 6 букв, так как буквы не должны повторяться.", "10": "Третью позицию можно заполнить только одной из оставшихся 5 букв и т.д.", "11": "Следовательно, общее количество способов перестановки букв в 7-буквенном слове = 7*6*5*4*3*2*1 = 7! способов.", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?'\nchoices = {'A': '2!', 'B': '3!', 'C': '7!', 'D': '8!', 'E': '9!'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?']\nnew_fact = infer_new_fact(selected) # 'Необходимо заполнить семь позиций.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?']\nnew_fact = infer_new_fact(selected) # 'Первую позицию можно заполнить любой из 7\\xa0букв, содержащихся в слове PROBLEM.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?', 'Первую позицию можно заполнить любой из 7\\xa0букв, содержащихся в слове PROBLEM.']\nnew_fact = infer_new_fact(selected) # 'Вторую позицию можно заполнить одной из оставшихся 6\\xa0букв, так как буквы не должны повторяться.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?', 'Первую позицию можно заполнить любой из 7\\xa0букв, содержащихся в слове PROBLEM.', 'Вторую позицию можно заполнить одной из оставшихся 6\\xa0букв, так как буквы не должны повторяться.']\nnew_fact = infer_new_fact(selected) # 'Третью позицию можно заполнить только одной из оставшихся 5\\xa0букв и т.д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно переставить буквы в слове «PROBLEM» так, чтобы получились слова из 7\\xa0букв, в которых ни одна буква не повторяется?', 'Первую позицию можно заполнить любой из 7\\xa0букв, содержащихся в слове PROBLEM.', 'Вторую позицию можно заполнить одной из оставшихся 6\\xa0букв, так как буквы не должны повторяться.', 'Третью позицию можно заполнить только одной из оставшихся 5\\xa0букв и т.д.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, общее количество способов перестановки букв в 7-буквенном слове\\xa0=\\xa07*6*5*4*3*2*1\\xa0=\\xa07! способов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, общее количество способов перестановки букв в 7-буквенном слове\\xa0=\\xa07*6*5*4*3*2*1\\xa0=\\xa07! способов.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_15_d9ec1ce954", "context": "", "options": ["A)0.2", "B)0.4", "C)0.6", "D)1.2", "E)1.5"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: P(A/B) = P (A n B)/P(B); int1 & sent2 -> int2: Here, P (A n B) = 0.16; int1 & int2 & sent2 -> int3: P(A/B) = 0.16/0.8 = 0.2; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Пусть A и B — независимые события, где P(A) = 0,2 и P(B) = 0,8.", "2": "Найдите P(A/B)?", "3": "A) 0,2", "4": "B) 0,4", "5": "C) 0,6", "6": "D) 1,2", "7": "E) 1,5", "8": "P(A/B) = P(A n B)/P(B)", "9": "Здесь P(A n B) = 0,16", "10": "P(A/B) = 0,16/0,8 = 0,2", "11": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Пусть A и B\\xa0— независимые события, где P(A)\\xa0=\\xa00,2 и P(B)\\xa0=\\xa00,8.']\nquestion = 'Найдите P(A/B)?'\nchoices = {'A': '0,2', 'B': '0,4', 'C': '0,6', 'D': '1,2', 'E': '1,5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Пусть A и B\\xa0— независимые события, где P(A)\\xa0=\\xa00,2 и P(B)\\xa0=\\xa00,8.', 'Найдите P(A/B)?']\nnew_fact = infer_new_fact(selected) # 'P(A/B)\\xa0=\\xa0P(A\\xa0n\\xa0B)/P(B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите P(A/B)?', 'P(A/B)\\xa0=\\xa0P(A\\xa0n\\xa0B)/P(B)']\nnew_fact = infer_new_fact(selected) # 'Здесь P(A\\xa0n\\xa0B)\\xa0=\\xa00,16'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите P(A/B)?', 'P(A/B)\\xa0=\\xa0P(A\\xa0n\\xa0B)/P(B)', 'Здесь P(A\\xa0n\\xa0B)\\xa0=\\xa00,16']\nnew_fact = infer_new_fact(selected) # 'P(A/B)\\xa0=\\xa00,16/0,8\\xa0=\\xa00,2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P(A/B)\\xa0=\\xa00,16/0,8\\xa0=\\xa00,2']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_16_f2f221930f", "context": "", "options": ["A)1 step/minute", "B)2 step/minute", "C)3 step/minute", "D)4 step/minute", "E)None of the above"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 6], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [4, 5, 6], "consequent": 15}, {"antecedents": [12, 15], "consequent": 16}, {"antecedents": [14, 16], "consequent": 17}, {"antecedents": [14, 16], "consequent": 18}, {"antecedents": [16, 18], "consequent": 19}, {"antecedents": [6, 7, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let total number of steps in the elevator be n and let the speed be e; sent2 & sent3 & sent6 -> int2: Elevator covered n-20 steps in 10 mins; int1 & int2 -> int3: (n-20)/e=10.................1; sent4 & sent5 & sent6 -> int4: Elevator covered n-10 steps in 20 mins; int1 & int4 -> int5: (n-10)/e=20......................2; int3 & int5 -> int6: From (1) and (2); int3 & int5 -> int7: n=30; int5 & int7 -> int8: e=1 step/min; int8 & sent6 & sent7 -> int9: Hence (A) is correct answer.; int9 -> int10: The answer is A);", "textual_logical_units": {"1": "Представьте, что вы спускаетесь вниз на эскалаторе.", "2": "Если вы пройдете 20 шагов и остановитесь,", "3": "то вы достигнете нижней площадки за 10 минут.", "4": "Если вы пройдете 10 шагов и остановитесь,", "5": "вы достигнете нижней площадки за 20 минут.", "6": "Какова скорость эскалатора?", "7": "A) 1 шаг в минуту", "8": "B) 2 шага в минуту", "9": "C) 3 шага в минуту", "10": "D) 4 шага в минуту", "11": "E) Ничего из вышеперечисленного", "12": "Пусть n — общее количество ступеней на эскалаторе, а e — его скорость", "13": "Эскалатор преодолевает n - 20 ступеней за 10 минут", "14": "(n - 20)/e = 10.................1", "15": "Эскалатор преодолевает n - 10 ступеней за 20 минут", "16": "(n - 10)/e = 20......................2", "17": "От (1) до (2)", "18": "n = 30", "19": "e = 1 шаг в минуту", "20": "Следовательно, правильный ответ — (A).", "21": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Представьте, что вы спускаетесь вниз на эскалаторе.',\n  'Если вы пройдете 20\\xa0шагов и остановитесь,',\n  'то вы достигнете нижней площадки за 10\\xa0минут.',\n  'Если вы пройдете 10\\xa0шагов и остановитесь,',\n  'вы достигнете нижней площадки за 20\\xa0минут.']\nquestion = 'Какова скорость эскалатора?'\nchoices = {'A': '1\\xa0шаг в минуту', 'B': '2\\xa0шага в минуту', 'C': '3\\xa0шага в минуту', 'D': '4\\xa0шага в минуту', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть n\\xa0— общее количество ступеней на эскалаторе, а e\\xa0— его скорость'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если вы пройдете 20\\xa0шагов и остановитесь,', 'то вы достигнете нижней площадки за 10\\xa0минут.', 'Какова скорость эскалатора?']\nnew_fact = infer_new_fact(selected) # 'Эскалатор преодолевает n\\xa0-\\xa020\\xa0ступеней за 10\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть n\\xa0— общее количество ступеней на эскалаторе, а e\\xa0— его скорость', 'Эскалатор преодолевает n\\xa0-\\xa020\\xa0ступеней за 10\\xa0минут']\nnew_fact = infer_new_fact(selected) # '(n\\xa0-\\xa020)/e\\xa0=\\xa010.................1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если вы пройдете 10\\xa0шагов и остановитесь,', 'вы достигнете нижней площадки за 20\\xa0минут.', 'Какова скорость эскалатора?']\nnew_fact = infer_new_fact(selected) # 'Эскалатор преодолевает n\\xa0-\\xa010\\xa0ступеней за 20\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть n\\xa0— общее количество ступеней на эскалаторе, а e\\xa0— его скорость', 'Эскалатор преодолевает n\\xa0-\\xa010\\xa0ступеней за 20\\xa0минут']\nnew_fact = infer_new_fact(selected) # '(n\\xa0-\\xa010)/e\\xa0=\\xa020......................2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n\\xa0-\\xa020)/e\\xa0=\\xa010.................1', '(n\\xa0-\\xa010)/e\\xa0=\\xa020......................2']\nnew_fact = infer_new_fact(selected) # 'От (1) до (2)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n\\xa0-\\xa020)/e\\xa0=\\xa010.................1', '(n\\xa0-\\xa010)/e\\xa0=\\xa020......................2']\nnew_fact = infer_new_fact(selected) # 'n\\xa0=\\xa030'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n\\xa0-\\xa010)/e\\xa0=\\xa020......................2', 'n\\xa0=\\xa030']\nnew_fact = infer_new_fact(selected) # 'e\\xa0=\\xa01\\xa0шаг в минуту'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова скорость эскалатора?', 'A) 1\\xa0шаг в минуту', 'e\\xa0=\\xa01\\xa0шаг в минуту']\nnew_fact = infer_new_fact(selected) # 'Следовательно, правильный ответ\\xa0— (A).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, правильный ответ\\xa0— (A).']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_17_9bdab6d83f", "context": "", "options": ["A)21", "B)30", "C)31", "D)32", "E)None of the above"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 7, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: 42×12+20×10 /12+10=504+200/22=704/22=32; int1 & sent3 & sent7 -> int2: Answer D; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "В прошлом году магазин бытовой техники продавал в среднем (среднее арифметическое значение) по 42 микроволновых печи в месяц.", "2": "В течение первых 10 месяцев этого года магазин продавал в среднем (среднее арифметическое значение) только по 20 микроволновых печей в месяц.", "3": "Каково среднее количество продаж микроволновых печей в месяц за все 22 месяца?", "4": "A) 21", "5": "B) 30", "6": "C) 31", "7": "D) 32", "8": "E) Ничего из вышеперечисленного", "9": "42×12+20×10/12+10=504+200/22=704/22=32", "10": "Ответ: Г", "11": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В прошлом году магазин бытовой техники продавал в среднем (среднее арифметическое значение) по 42\\xa0микроволновых печи в месяц.',\n  'В течение первых 10\\xa0месяцев этого года магазин продавал в среднем (среднее арифметическое значение) только по 20\\xa0микроволновых печей в месяц.']\nquestion = 'Каково среднее количество продаж микроволновых печей в месяц за все 22\\xa0месяца?'\nchoices = {'A': '21', 'B': '30', 'C': '31', 'D': '32', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В прошлом году магазин бытовой техники продавал в среднем (среднее арифметическое значение) по 42\\xa0микроволновых печи в месяц.', 'В течение первых 10\\xa0месяцев этого года магазин продавал в среднем (среднее арифметическое значение) только по 20\\xa0микроволновых печей в месяц.', 'Каково среднее количество продаж микроволновых печей в месяц за все 22\\xa0месяца?']\nnew_fact = infer_new_fact(selected) # '42×12+20×10/12+10=504+200/22=704/22=32'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково среднее количество продаж микроволновых печей в месяц за все 22\\xa0месяца?', 'D) 32', '42×12+20×10/12+10=504+200/22=704/22=32']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_18_730a0696d9", "context": "", "options": ["A)(zy – 2x)/z", "B)(zy – 2)/z", "C)(zx – y)/(z – 2)", "D)(zy – 2x)/(z -2)", "E)(zy – x)/(z + 2)"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 13}, {"antecedents": [0], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [7, 15], "consequent": 16}, {"antecedents": [4, 5, 7], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [17, 18], "consequent": 19}, {"antecedents": [7, 11, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent0 -> int1: Highest: H; sent0 -> int2: Lowest: L; sent0 -> int3: Number of students in the class: Z; int3 & sent7 -> int4: Number of students in the class excluding the highest and lowest : Z-2; sent4 & sent5 & sent7 -> int5: Average of Highest and Lowest: (H + L)/2=X => H+L=2X; int4 & int5 -> int6: Average of Entire Class : (H+L+Others)/Z=Y => Others= ZY-2X; int5 & int6 -> int7: Average of the others in the class: (ZY-2X)/(Z-2); int7 & sent11 & sent7 -> int8: Answer: D; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "В одном классе ученики сдали экзамен.", "2": "Среднее (среднее арифметическое) значение наибольшего и", "3": "наименьшего количества баллов равно x.", "4": "Если средний балл по всему классу равен y и", "5": "в классе z учеников, где z > 5,", "6": "с точки зрения x, y и z", "7": "каков средний балл по классу, исключая учеников, набравших наибольшее и наименьшее количество баллов?", "8": "A) (zy - 2x)/z", "9": "C) (zy - 2)/z", "10": "C) (zx - y)/(z - 2)", "11": "D) (zy - 2x)/(z - 2)", "12": "E) (zy - x)/(z + 2)", "13": "Наибольшее количество баллов: H", "14": "Наименьшее количество баллов: L", "15": "Количество учеников в классе: Z", "16": "Количество учеников в классе, исключая набравших наибольшее и наименьшее количество баллов: Z-2", "17": "Среднее количество набравших наибольшее и наименьшее количество баллов: (H + L)/2 = X => H + L = 2X", "18": "Средний балл по всему классу: (H + L + другие)/Z = Y => другие = ZY - 2X", "19": "Среднее количество учеников в классе, набравших другое количество баллов: (ZY - 2X)/(Z - 2)", "20": "Ответ: D", "21": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В одном классе ученики сдали экзамен.',\n  'Среднее (среднее арифметическое) значение наибольшего и',\n  'наименьшего количества баллов равно x.',\n  'Если средний балл по всему классу равен y и',\n  'в классе z\\xa0учеников, где z\\xa0>\\xa05,',\n  'с точки зрения x, y и z']\nquestion = 'каков средний балл по классу, исключая учеников, набравших наибольшее и наименьшее количество баллов?'\nchoices = {'A': '(zy\\xa0-\\xa02x)/z', 'C': '(zx\\xa0-\\xa0y)/(z\\xa0-\\xa02)', 'D': '(zy\\xa0-\\xa02x)/(z\\xa0-\\xa02)', 'E': '(zy\\xa0-\\xa0x)/(z\\xa0+\\xa02)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Наибольшее количество баллов: H'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Наименьшее количество баллов: L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Количество учеников в классе: Z'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каков средний балл по классу, исключая учеников, набравших наибольшее и наименьшее количество баллов?', 'Количество учеников в классе: Z']\nnew_fact = infer_new_fact(selected) # 'Количество учеников в классе, исключая набравших наибольшее и наименьшее количество баллов: Z-2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если средний балл по всему классу равен y и', 'в классе z\\xa0учеников, где z\\xa0>\\xa05,', 'каков средний балл по классу, исключая учеников, набравших наибольшее и наименьшее количество баллов?']\nnew_fact = infer_new_fact(selected) # 'Среднее количество набравших наибольшее и наименьшее количество баллов: (H\\xa0+\\xa0L)/2\\xa0=\\xa0X\\xa0=>\\xa0H\\xa0+\\xa0L\\xa0=\\xa02X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество учеников в классе, исключая набравших наибольшее и наименьшее количество баллов: Z-2', 'Среднее количество набравших наибольшее и наименьшее количество баллов: (H\\xa0+\\xa0L)/2\\xa0=\\xa0X\\xa0=>\\xa0H\\xa0+\\xa0L\\xa0=\\xa02X']\nnew_fact = infer_new_fact(selected) # 'Средний балл по всему классу: (H\\xa0+\\xa0L\\xa0+\\xa0другие)/Z\\xa0=\\xa0Y\\xa0=>\\xa0другие\\xa0=\\xa0ZY\\xa0-\\xa02X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Среднее количество набравших наибольшее и наименьшее количество баллов: (H\\xa0+\\xa0L)/2\\xa0=\\xa0X\\xa0=>\\xa0H\\xa0+\\xa0L\\xa0=\\xa02X', 'Средний балл по всему классу: (H\\xa0+\\xa0L\\xa0+\\xa0другие)/Z\\xa0=\\xa0Y\\xa0=>\\xa0другие\\xa0=\\xa0ZY\\xa0-\\xa02X']\nnew_fact = infer_new_fact(selected) # 'Среднее количество учеников в классе, набравших другое количество баллов: (ZY\\xa0-\\xa02X)/(Z\\xa0-\\xa02)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каков средний балл по классу, исключая учеников, набравших наибольшее и наименьшее количество баллов?', 'D) (zy\\xa0-\\xa02x)/(z\\xa0-\\xa02)', 'Среднее количество учеников в классе, набравших другое количество баллов: (ZY\\xa0-\\xa02X)/(Z\\xa0-\\xa02)']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_19_8b5fd5c560", "context": "", "options": ["A)4", "B)4.5", "C)5", "D)5.5", "E)6.5"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 2, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: (? × 19 - 17)/(169 - 156) = 6; int1 -> int2: => ? × 19 - 17 = 13 × 6 = 76; int2 -> int3: => ? × 19 = 78 + 17 = 95; int3 -> int4: ? = 95/19 = 5; int4 & sent1 & sent2 & sent5 -> int5: Answer: Option C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "[5 + ?", "2": "× 19 - 15 - 7]/[13 × 13 - 156] = 6", "3": "A) 4", "4": "B) 4,5", "5": "C) 5", "6": "D) 5,5", "7": "E) 6,5", "8": "(? × 19 - 17)/(169 - 156) = 6", "9": "=> ? × 19 - 17 = 13 × 6 = 76", "10": "=> ? × 19 = 78 + 17 = 95", "11": "? = 95/19 = 5", "12": "Ответ: Вариант В", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['[5\\xa0+\\xa0?']\nquestion = '×\\xa019\\xa0-\\xa015\\xa0-\\xa07]/[13\\xa0×\\xa013\\xa0-\\xa0156]\\xa0=\\xa06'\nchoices = {'A': '4', 'B': '4,5', 'C': '5', 'D': '5,5', 'E': '6,5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['[5\\xa0+\\xa0?', '×\\xa019\\xa0-\\xa015\\xa0-\\xa07]/[13\\xa0×\\xa013\\xa0-\\xa0156]\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # '(?\\xa0×\\xa019\\xa0-\\xa017)/(169\\xa0-\\xa0156)\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(?\\xa0×\\xa019\\xa0-\\xa017)/(169\\xa0-\\xa0156)\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # '=>\\xa0?\\xa0×\\xa019\\xa0-\\xa017\\xa0=\\xa013\\xa0×\\xa06\\xa0=\\xa076'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0?\\xa0×\\xa019\\xa0-\\xa017\\xa0=\\xa013\\xa0×\\xa06\\xa0=\\xa076']\nnew_fact = infer_new_fact(selected) # '=>\\xa0?\\xa0×\\xa019\\xa0=\\xa078\\xa0+\\xa017\\xa0=\\xa095'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0?\\xa0×\\xa019\\xa0=\\xa078\\xa0+\\xa017\\xa0=\\xa095']\nnew_fact = infer_new_fact(selected) # '?\\xa0=\\xa095/19\\xa0=\\xa05'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['[5\\xa0+\\xa0?', '×\\xa019\\xa0-\\xa015\\xa0-\\xa07]/[13\\xa0×\\xa013\\xa0-\\xa0156]\\xa0=\\xa06', 'C) 5', '?\\xa0=\\xa095/19\\xa0=\\xa05']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_20_b4acff8929", "context": "", "options": ["A)12", "B)16", "C)24", "D)30", "E)40"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Profit on one bag: 100*1.25= 125; int1 & sent2 & sent3 -> int2: Number of bags sold = 3000/125 = 24; int2 & sent3 & sent6 -> int3: Answer is C.; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Бакалейщик получает 25% прибыли от прейскурантной цены на каждый проданный мешок муки.", "2": "Если он продавал каждый мешок за 100 долл. США и получил прибыль 3000 долл. США,", "3": "сколько мешков он продал?", "4": "A) 12", "5": "B) 16", "6": "C) 24", "7": "D) 30", "8": "E) 40", "9": "Прибыль за один мешок: 100*1,25 = 125", "10": "Количество проданных мешков = 3000/125 = 24", "11": "Ответ — В.", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Бакалейщик получает 25%\\xa0прибыли от прейскурантной цены на каждый проданный мешок муки.',\n  'Если он продавал каждый мешок за 100\\xa0долл. США и получил прибыль 3000\\xa0долл. США,']\nquestion = 'сколько мешков он продал?'\nchoices = {'A': '12', 'B': '16', 'C': '24', 'D': '30', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Бакалейщик получает 25%\\xa0прибыли от прейскурантной цены на каждый проданный мешок муки.', 'Если он продавал каждый мешок за 100\\xa0долл. США и получил прибыль 3000\\xa0долл. США,']\nnew_fact = infer_new_fact(selected) # 'Прибыль за один мешок: 100*1,25\\xa0=\\xa0125'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он продавал каждый мешок за 100\\xa0долл. США и получил прибыль 3000\\xa0долл. США,', 'сколько мешков он продал?', 'Прибыль за один мешок: 100*1,25\\xa0=\\xa0125']\nnew_fact = infer_new_fact(selected) # 'Количество проданных мешков\\xa0=\\xa03000/125\\xa0=\\xa024'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько мешков он продал?', 'C) 24', 'Количество проданных мешков\\xa0=\\xa03000/125\\xa0=\\xa024']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_21_01e9ecab11", "context": "", "options": ["A)15", "B)16", "C)17", "D)18", "E)19"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5], "consequent": 11}, {"antecedents": [2, 3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [0], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [16, 17], "consequent": 19}, {"antecedents": [16, 17], "consequent": 20}, {"antecedents": [16, 17], "consequent": 21}, {"antecedents": [5, 20], "consequent": 22}, {"antecedents": [5, 6, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 & sent5 -> int1: Lets say Alex has worked for x hrs., and Jacob has worked for y hrs. So, number of toys prepared by Alex is x/7, and Jacob is y/9. Since total number of toys prepared by both of them is 35.; int1 & sent2 & sent3 & sent5 -> int2: => x/7 + y/9 = 35.; int2 -> int3: => 9x + 7y = (35)(63); int3 -> int4: => 7y = (35)(63) - 9x; int4 -> int5: => y = (5)(63) - (9/7)x; int5 -> int6: => y = 315 - (9/7)x; sent0 -> int7: => x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,; int6 & int7 -> int8: x = 126, y = 315 - (9/7)126 = 153; int6 & int7 -> int9: x = 133, y = 315 - (9/7)133 = 144; int6 & int7 -> int10: x = 140, y = 315 - (9/7)140 = 135; int6 & int7 -> int11: x = 147, y = 315 - (9/7)147 = 126; int10 & sent5 -> int12: As we can see minimum difference between x and y is when x is 140 hrs. and y is 135 hrs. Thus total toys created by Jacob = y/9 = 135/9 = 15.; int12 & sent5 & sent6 -> int13: Answer: A; int13 -> int14: The answer is A);", "textual_logical_units": {"1": "Александр и Яков работают в магазине игрушек, где занимаются из изготовлением.", "2": "У Александра на изготовление игрушки уходит 7 часов,", "3": "а у Якова — 9 часов.", "4": "В течение месяца они оба в общей сложности изготавливают 35 игрушек.", "5": "Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?", "6": "A) 15", "7": "B) 16", "8": "C) 17", "9": "D) 18", "10": "E) 19", "11": "Допустим, Александр проработал x часов, а Яков — y часов. Количество игрушек, изготовленных Александром, равно x/7, а Яковом — y/9. Поскольку общее количество игрушек, изготовленных ими обоими, составляет 35.", "12": "=> x/7 + y/9 = 35.", "13": "=> 9 x + 7 лет = (35)(63)", "14": "=> 7y = (35)(63) - 9x", "15": "=> y = (5)(63) - (9/7)x", "16": "=> y = 315 - (9/7)x", "17": "=> значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:", "18": "х = 126, у = 315 - (9/7)126 = 153", "19": "х = 133, у = 315 - (9/7)133 = 144", "20": "х = 140, у = 315 - (9/7)140 = 135", "21": "х = 147, у = 315 - (9/7)147 = 126", "22": "Как видно, разница между x и y минимальна, когда значение x равно 140 часам, а y — 135 часам. Таким образом, общее количество игрушек, изготовленных Яковом = y/9 = 135/9 = 15.", "23": "Ответ: A", "24": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Александр и Яков работают в магазине игрушек, где занимаются из изготовлением.',\n  'У Александра на изготовление игрушки уходит 7\\xa0часов,',\n  'а у Якова\\xa0— 9\\xa0часов.',\n  'В течение месяца они оба в общей сложности изготавливают 35\\xa0игрушек.']\nquestion = 'Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?'\nchoices = {'A': '15', 'B': '16', 'C': '17', 'D': '18', 'E': '19'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Александра на изготовление игрушки уходит 7\\xa0часов,', 'а у Якова\\xa0— 9\\xa0часов.', 'В течение месяца они оба в общей сложности изготавливают 35\\xa0игрушек.', 'Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?']\nnew_fact = infer_new_fact(selected) # 'Допустим, Александр проработал x\\xa0часов, а Яков\\xa0— y\\xa0часов. Количество игрушек, изготовленных Александром, равно x/7, а Яковом\\xa0— y/9. Поскольку общее количество игрушек, изготовленных ими обоими, составляет 35.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Александра на изготовление игрушки уходит 7\\xa0часов,', 'а у Якова\\xa0— 9\\xa0часов.', 'Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?', 'Допустим, Александр проработал x\\xa0часов, а Яков\\xa0— y\\xa0часов. Количество игрушек, изготовленных Александром, равно x/7, а Яковом\\xa0— y/9. Поскольку общее количество игрушек, изготовленных ими обоими, составляет 35.']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x/7\\xa0+\\xa0y/9\\xa0=\\xa035.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0x/7\\xa0+\\xa0y/9\\xa0=\\xa035.']\nnew_fact = infer_new_fact(selected) # '=>\\xa09 x\\xa0+\\xa07 лет\\xa0=\\xa0(35)(63)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa09 x\\xa0+\\xa07 лет\\xa0=\\xa0(35)(63)']\nnew_fact = infer_new_fact(selected) # '=>\\xa07y\\xa0=\\xa0(35)(63)\\xa0-\\xa09x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa07y\\xa0=\\xa0(35)(63)\\xa0-\\xa09x']\nnew_fact = infer_new_fact(selected) # '=>\\xa0y\\xa0=\\xa0(5)(63)\\xa0-\\xa0(9/7)x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0y\\xa0=\\xa0(5)(63)\\xa0-\\xa0(9/7)x']\nnew_fact = infer_new_fact(selected) # '=>\\xa0y\\xa0=\\xa0315\\xa0-\\xa0(9/7)x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '=>\\xa0значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0y\\xa0=\\xa0315\\xa0-\\xa0(9/7)x', '=>\\xa0значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:']\nnew_fact = infer_new_fact(selected) # 'х\\xa0=\\xa0126, у\\xa0=\\xa0315\\xa0-\\xa0(9/7)126\\xa0=\\xa0153'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0y\\xa0=\\xa0315\\xa0-\\xa0(9/7)x', '=>\\xa0значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:']\nnew_fact = infer_new_fact(selected) # 'х\\xa0=\\xa0133, у\\xa0=\\xa0315\\xa0-\\xa0(9/7)133\\xa0=\\xa0144'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0y\\xa0=\\xa0315\\xa0-\\xa0(9/7)x', '=>\\xa0значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:']\nnew_fact = infer_new_fact(selected) # 'х\\xa0=\\xa0140, у\\xa0=\\xa0315\\xa0-\\xa0(9/7)140\\xa0=\\xa0135'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0y\\xa0=\\xa0315\\xa0-\\xa0(9/7)x', '=>\\xa0значение x должно быть кратно 7. Кроме того, необходимо минимизировать разницу между x и y. Несколько возможных значений:']\nnew_fact = infer_new_fact(selected) # 'х\\xa0=\\xa0147, у\\xa0=\\xa0315\\xa0-\\xa0(9/7)147\\xa0=\\xa0126'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?', 'х\\xa0=\\xa0140, у\\xa0=\\xa0315\\xa0-\\xa0(9/7)140\\xa0=\\xa0135']\nnew_fact = infer_new_fact(selected) # 'Как видно, разница между x и y минимальна, когда значение x равно 140\\xa0часам, а y\\xa0— 135\\xa0часам. Таким образом, общее количество игрушек, изготовленных Яковом\\xa0=\\xa0y/9\\xa0=\\xa0135/9\\xa0=\\xa015.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если они оба работали почти одинаковое количество часов, сколько игрушек изготовил Яков?', 'A) 15', 'Как видно, разница между x и y минимальна, когда значение x равно 140\\xa0часам, а y\\xa0— 135\\xa0часам. Таким образом, общее количество игрушек, изготовленных Яковом\\xa0=\\xa0y/9\\xa0=\\xa0135/9\\xa0=\\xa015.']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_22_3bc8c8f2e3", "context": "", "options": ["A)15.38%", "B)42%", "C)39.86%", "D)22.35%", "E)32.51%"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Imagine starting out with 100 ml of 50% milk tea.; sent3 -> int2: In step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.; int1 & int2 -> int3: Finally, 10% of this solution is replaced with milk again. So, the final concentration of tea is 36.125*0.9%; int2 & int3 -> int4: This equals 32.51% of tea solution.; int4 & sent4 & sent9 -> int5: Answer: E; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Иван каждый вечер пьет легкий ароматизированный чай.", "2": "Он наливает чай с молоком крепостью 50%", "3": "и дважды заменяет 15% чая молоком.", "4": "Затем он заменяет молоком еще 10% полученного раствора.\nКакова окончательная концентрация чая, который пьет Иван?", "5": "A) 15,38%", "6": "B) 42%", "7": "C) 39,86%", "8": "D) 22,35%", "9": "E) 32,51%", "10": "Представим, что в начале было 100 мл чая с молоком крепостью 50%.", "11": "В 1 шаге 15% чая заменяется молоком. Таким образом, остается 85% от исходного чая. Поскольку это делается дважды, концентрация чая составляет 50x0,85x0,85% (= 36,125%).", "12": "Наконец, 10% этого раствора снова заменяется молоком. Окончательная концентрация чая составляет 36,125*0,9%", "13": "Она равна 32,51% чая.", "14": "Ответ: E", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Иван каждый вечер пьет легкий ароматизированный чай.', 'Он наливает чай с молоком крепостью 50%', 'и дважды заменяет 15%\\xa0чая молоком.']\nquestion = 'Затем он заменяет молоком еще 10%\\xa0полученного раствора.\\nКакова окончательная концентрация чая, который пьет Иван?'\nchoices = {'A': '15,38%', 'B': '42%', 'C': '39,86%', 'D': '22,35%', 'E': '32,51%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он наливает чай с молоком крепостью 50%', 'и дважды заменяет 15%\\xa0чая молоком.']\nnew_fact = infer_new_fact(selected) # 'Представим, что в начале было 100\\xa0мл чая с молоком крепостью 50%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и дважды заменяет 15%\\xa0чая молоком.']\nnew_fact = infer_new_fact(selected) # 'В 1\\xa0шаге 15%\\xa0чая заменяется молоком. Таким образом, остается 85%\\xa0от исходного чая. Поскольку это делается дважды, концентрация чая составляет 50x0,85x0,85% (=\\xa036,125%).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Представим, что в начале было 100\\xa0мл чая с молоком крепостью 50%.', 'В 1\\xa0шаге 15%\\xa0чая заменяется молоком. Таким образом, остается 85%\\xa0от исходного чая. Поскольку это делается дважды, концентрация чая составляет 50x0,85x0,85% (=\\xa036,125%).']\nnew_fact = infer_new_fact(selected) # 'Наконец, 10%\\xa0этого раствора снова заменяется молоком. Окончательная концентрация чая составляет 36,125*0,9%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1\\xa0шаге 15%\\xa0чая заменяется молоком. Таким образом, остается 85%\\xa0от исходного чая. Поскольку это делается дважды, концентрация чая составляет 50x0,85x0,85% (=\\xa036,125%).', 'Наконец, 10%\\xa0этого раствора снова заменяется молоком. Окончательная концентрация чая составляет 36,125*0,9%']\nnew_fact = infer_new_fact(selected) # 'Она равна 32,51%\\xa0чая.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Затем он заменяет молоком еще 10%\\xa0полученного раствора.\\nКакова окончательная концентрация чая, который пьет Иван?', 'E) 32,51%', 'Она равна 32,51%\\xa0чая.']\nnew_fact = infer_new_fact(selected) # 'Ответ: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_23_ed74754d3a", "context": "", "options": ["A)8880", "B)8870", "C)8890", "D)7890", "E)6780"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 5, 11], "consequent": 12}, {"antecedents": [4, 5, 11], "consequent": 13}, {"antecedents": [5, 12, 13], "consequent": 14}, {"antecedents": [5, 6, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: LCM of 16,10,8 = 80; int1 & sent4 & sent5 -> int2: the largest 4 digit number divisible by 80 = 9920; int1 & sent4 & sent5 -> int3: The smallest 4 digit number divisible by 80 = 1040; int2 & int3 & sent5 -> int4: So, required difference = 9920-1040= 8880; int4 & sent5 & sent6 -> int5: ANSWER:A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "В школе 1/16 часть учеников изучают математику,", "2": "1/10 часть учеников — биологию,", "3": "1/8 часть учеников — английский язык.", "4": "Общее количество учеников является 4-значным числом.", "5": "Найдите разницу между максимальным и минимальным количеством учеников.", "6": "A) 8880", "7": "B) 8870", "8": "C) 8890", "9": "D) 7890", "10": "E) 6780", "11": "Наименьшее общее кратное 16,10,8 = 80", "12": "Наибольшее 4-значное число, которое делится на 80 = 9920", "13": "Наименьшее 4-значное число, которое делится на 80 = 1040", "14": "Требуемая разница = 9920 - 1040 = 8880", "15": "ОТВЕТ: А", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'В школе 1/16\\xa0часть учеников изучают математику,',\n  '1/10\\xa0часть учеников\\xa0— биологию,',\n  '1/8\\xa0часть учеников\\xa0— английский язык.',\n  'Общее количество учеников является 4-значным числом.']\nquestion = 'Найдите разницу между максимальным и минимальным количеством учеников.'\nchoices = {'A': '8880', 'B': '8870', 'C': '8890', 'D': '7890', 'E': '6780'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В школе 1/16\\xa0часть учеников изучают математику,', '1/10\\xa0часть учеников\\xa0— биологию,', '1/8\\xa0часть учеников\\xa0— английский язык.']\nnew_fact = infer_new_fact(selected) # 'Наименьшее общее кратное 16,10,8\\xa0=\\xa080'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее количество учеников является 4-значным числом.', 'Найдите разницу между максимальным и минимальным количеством учеников.', 'Наименьшее общее кратное 16,10,8\\xa0=\\xa080']\nnew_fact = infer_new_fact(selected) # 'Наибольшее 4-значное число, которое делится на 80\\xa0=\\xa09920'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее количество учеников является 4-значным числом.', 'Найдите разницу между максимальным и минимальным количеством учеников.', 'Наименьшее общее кратное 16,10,8\\xa0=\\xa080']\nnew_fact = infer_new_fact(selected) # 'Наименьшее 4-значное число, которое делится на 80\\xa0=\\xa01040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите разницу между максимальным и минимальным количеством учеников.', 'Наибольшее 4-значное число, которое делится на 80\\xa0=\\xa09920', 'Наименьшее 4-значное число, которое делится на 80\\xa0=\\xa01040']\nnew_fact = infer_new_fact(selected) # 'Требуемая разница\\xa0=\\xa09920\\xa0-\\xa01040\\xa0=\\xa08880'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите разницу между максимальным и минимальным количеством учеников.', 'A) 8880', 'Требуемая разница\\xa0=\\xa09920\\xa0-\\xa01040\\xa0=\\xa08880']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_24_1448333a24", "context": "", "options": ["A)2 miles", "B)2.25 miles", "C)3.25 miles", "D)3.85 miles", "E)2.85 miles"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 15 mph - 4 mph= 11 mph; int1 & sent3 -> int2: 11 mph x (21/60)= 3.85 miles; int2 & sent3 & sent8 -> int3: Answer D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "В обычный день Билл едет на велосипеде со средней скоростью около 15 миль в час.", "2": "В ветреный день его скорость снижается на 4 мили в час.", "3": "Как далеко Билл сможет проехать в ветреный день за 21 минуту?", "4": "Округлите до ближайшей сотой доли.", "5": "A) 2 мили", "6": "B) 2,25 мили", "7": "C) 3,25 мили", "8": "D) 3,85 мили", "9": "E) 2,85 мили", "10": "15 миль в час - 4 мили в час = 11 миль в час", "11": "11 миль в час x (21/60) = 3,85 мили", "12": "Ответ: Г", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В обычный день Билл едет на велосипеде со средней скоростью около 15\\xa0миль в час.',\n  'В ветреный день его скорость снижается на 4\\xa0мили в час.',\n  'Как далеко Билл сможет проехать в ветреный день за 21\\xa0минуту?']\nquestion = 'Округлите до ближайшей сотой доли.'\nchoices = {'A': '2\\xa0мили', 'B': '2,25\\xa0мили', 'C': '3,25\\xa0мили', 'D': '3,85\\xa0мили', 'E': '2,85\\xa0мили'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В обычный день Билл едет на велосипеде со средней скоростью около 15\\xa0миль в час.', 'В ветреный день его скорость снижается на 4\\xa0мили в час.']\nnew_fact = infer_new_fact(selected) # '15\\xa0миль в час\\xa0-\\xa04\\xa0мили в час\\xa0=\\xa011\\xa0миль в час'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как далеко Билл сможет проехать в ветреный день за 21\\xa0минуту?', '15\\xa0миль в час\\xa0-\\xa04\\xa0мили в час\\xa0=\\xa011\\xa0миль в час']\nnew_fact = infer_new_fact(selected) # '11\\xa0миль в час\\xa0x\\xa0(21/60)\\xa0=\\xa03,85\\xa0мили'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как далеко Билл сможет проехать в ветреный день за 21\\xa0минуту?', 'D) 3,85\\xa0мили', '11\\xa0миль в час\\xa0x\\xa0(21/60)\\xa0=\\xa03,85\\xa0мили']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_25_c9d653baa8", "context": "", "options": ["A)$27.30", "B)$51.00", "C)$63.00", "D)$70.00", "E)$91.00"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [3, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let the cost be A. Then the selling price is A+0.4*A.; sent2 -> int2: So the profit is 0.4 * A.; int2 & sent2 -> int3: 0.4*A=20  =>  A=50.; int1 & int3 -> int4: So the selling price is 50+20=70.; int4 & sent3 & sent7 -> int5: The answer is (D).; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Розничный торговец продал прибор по цене на 40 процентов выше обычной,", "2": "и получил валовую прибыль в размере 20 долл. США.", "3": "По какой цене розничный торговец продал прибор?", "4": "A) 27,30 долл. США", "5": "B) 51,00 долл. США", "6": "C) 63,00 долл. США", "7": "D) 70,00 долл. США", "8": "E) 91,00 долл. США", "9": "Пусть A — цена. Тогда прейскурантная цена равна A + 0,4*A.", "10": "Таким образом, прибыль составила 0,4*А.", "11": "0,4*А = 20 ---> А = 50.", "12": "Таким образом, прейскурантная цена равна 50+20 = 70.", "13": "Ответ — (D).", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Розничный торговец продал прибор по цене на 40\\xa0процентов выше обычной,', 'и получил валовую прибыль в размере 20\\xa0долл. США.']\nquestion = 'По какой цене розничный торговец продал прибор?'\nchoices = {'A': '27,30\\xa0долл. США', 'B': '51,00\\xa0долл. США', 'C': '63,00\\xa0долл. США', 'D': '70,00\\xa0долл. США', 'E': '91,00\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Розничный торговец продал прибор по цене на 40\\xa0процентов выше обычной,']\nnew_fact = infer_new_fact(selected) # 'Пусть A\\xa0— цена. Тогда прейскурантная цена равна A\\xa0+\\xa00,4*A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и получил валовую прибыль в размере 20\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, прибыль составила 0,4*А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и получил валовую прибыль в размере 20\\xa0долл. США.', 'Таким образом, прибыль составила 0,4*А.']\nnew_fact = infer_new_fact(selected) # '0,4*А\\xa0=\\xa020\\xa0--->\\xa0А\\xa0=\\xa050.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть A\\xa0— цена. Тогда прейскурантная цена равна A\\xa0+\\xa00,4*A.', '0,4*А\\xa0=\\xa020\\xa0--->\\xa0А\\xa0=\\xa050.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, прейскурантная цена равна 50+20\\xa0=\\xa070.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По какой цене розничный торговец продал прибор?', 'D) 70,00\\xa0долл. США', 'Таким образом, прейскурантная цена равна 50+20\\xa0=\\xa070.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— (D).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— (D).']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_26_18d32fd426", "context": "", "options": ["A)750", "B)700", "C)620", "D)600", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: We need to calculate the total amount to be paid by him after 4 years, so it will be Principal + simple interest.; sent1 & sent2 & sent3 -> int2: =>500+500∗6∗4 /100=>Rs.620; int2 & sent3 & sent6 -> int3: Option C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Рахул взял кредит под простой процент 6% годовых в размере", "2": "500", "3": "рупий. Какую сумму он заплатит, чтобы погасить кредит через 4 года?", "4": "A) 750", "5": "B) 700", "6": "C) 620", "7": "D) 600", "8": "E) Ничего из вышеперечисленного", "9": "Необходимо рассчитать общую сумму, которую он должен будет выплатить за 4 года, — это основная сумма + простые проценты.", "10": "=> 500 + 500*6∗4/100 => 620 рупий", "11": "Вариант В", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Рахул взял кредит под простой процент 6%\\xa0годовых в размере', '500']\nquestion = 'рупий. Какую сумму он заплатит, чтобы погасить кредит через 4\\xa0года?'\nchoices = {'A': '750', 'B': '700', 'C': '620', 'D': '600', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['рупий. Какую сумму он заплатит, чтобы погасить кредит через 4\\xa0года?']\nnew_fact = infer_new_fact(selected) # 'Необходимо рассчитать общую сумму, которую он должен будет выплатить за 4\\xa0года,\\xa0— это основная сумма\\xa0+\\xa0простые проценты.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рахул взял кредит под простой процент 6%\\xa0годовых в размере', '500', 'рупий. Какую сумму он заплатит, чтобы погасить кредит через 4\\xa0года?']\nnew_fact = infer_new_fact(selected) # '=>\\xa0500\\xa0+\\xa0500*6∗4/100\\xa0=>\\xa0620\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рупий. Какую сумму он заплатит, чтобы погасить кредит через 4\\xa0года?', 'C) 620', '=>\\xa0500\\xa0+\\xa0500*6∗4/100\\xa0=>\\xa0620\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Вариант В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_27_b4358d9423", "context": "", "options": ["A)(99,10)", "B)(85,9)", "C)(50,7)", "D)(1,1)", "E)(1,0)"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 9}, {"antecedents": [1, 2, 4], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: 99 is generated; sent1 & sent2 & sent4 -> int2: We don't know what the square root of 99 is because we would need a calculator, but we know the square root of 100 is 10, so the square root of 99 has to be less than 10.; int2 & sent3 & sent4 -> int3: ANSWER:A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Разработана компьютерная программа для генерации двух чисел (x,y), первое из которых представляет собой случайное число от 0 до 100 включительно,", "2": "а второе меньше или равно квадратному корню из первого.", "3": "Условиям программы удовлетворяет каждая из следующих пар, за исключением", "4": "A) (99,10)", "5": "B) (85,9)", "6": "C) (50,7)", "7": "D) (1,1)", "8": "E) (1,0)", "9": "Допустим, сгенерировано число 99", "10": "Квадратный корень из 99 нам неизвестен, поскольку для его расчета нужен калькулятор, но известно, что квадратный корень из 100 равен 10, поэтому квадратный корень из 99 должен быть меньше 10.", "11": "ОТВЕТ: А", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Разработана компьютерная программа для генерации двух чисел (x,y), первое из которых представляет собой случайное число от 0 до 100 включительно,',\n  'а второе меньше или равно квадратному корню из первого.']\nquestion = 'Условиям программы удовлетворяет каждая из следующих пар, за исключением'\nchoices = {'A': '(99,10)', 'B': '(85,9)', 'C': '(50,7)', 'D': '(1,1)', 'E': '(1,0)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Разработана компьютерная программа для генерации двух чисел (x,y), первое из которых представляет собой случайное число от 0 до 100 включительно,', 'A) (99,10)']\nnew_fact = infer_new_fact(selected) # 'Допустим, сгенерировано число 99'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Разработана компьютерная программа для генерации двух чисел (x,y), первое из которых представляет собой случайное число от 0 до 100 включительно,', 'а второе меньше или равно квадратному корню из первого.', 'A) (99,10)']\nnew_fact = infer_new_fact(selected) # 'Квадратный корень из 99 нам неизвестен, поскольку для его расчета нужен калькулятор, но известно, что квадратный корень из 100 равен 10, поэтому квадратный корень из 99 должен быть меньше 10.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Условиям программы удовлетворяет каждая из следующих пар, за исключением', 'A) (99,10)', 'Квадратный корень из 99 нам неизвестен, поскольку для его расчета нужен калькулятор, но известно, что квадратный корень из 100 равен 10, поэтому квадратный корень из 99 должен быть меньше 10.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_28_210a95d646", "context": "", "options": ["A)126km", "B)144km", "C)127km", "D)228km", "E)128km"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let 'x' be the distance and 'y' be the speed of the forward journey. Then, we have 6v=d and 4(v+12)=d; int1 & sent3 -> int2: => v=d/6 and v=d/4 - 12; int2 -> int3: => d/6 = d/4 - 12; int3 -> int4: => d/12 = 12; int4 -> int5: => d=144; int5 & sent3 & sent5 -> int6: Answer: B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Двигаясь вперед, джип преодолел определенное расстояние за 6 часов.", "2": "На обратном пути он увеличил скорость на 12 км/ч и, путь занял 4 часа.", "3": "Какое расстояние проехал джип?", "4": "A) 126 км", "5": "B) 144 км", "6": "C) 127 км", "7": "D) 228 км", "8": "E) 128 км", "9": "Пусть x — расстояние, а y — скорость движения вперед. Тогда получается 6v = d и 4(v + 12) = d", "10": "=> v = d/6 и v = d/4 - 12", "11": "=> d/6 = d/4 - 12", "12": "=> d/12 = 12", "13": "=> d = 144", "14": "Ответ: Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Двигаясь вперед, джип преодолел определенное расстояние за 6\\xa0часов.', 'На обратном пути он увеличил скорость на 12\\xa0км/ч и, путь занял 4\\xa0часа.']\nquestion = 'Какое расстояние проехал джип?'\nchoices = {'A': '126\\xa0км', 'B': '144\\xa0км', 'C': '127\\xa0км', 'D': '228\\xa0км', 'E': '128\\xa0км'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Двигаясь вперед, джип преодолел определенное расстояние за 6\\xa0часов.', 'На обратном пути он увеличил скорость на 12\\xa0км/ч и, путь занял 4\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— расстояние, а y\\xa0— скорость движения вперед. Тогда получается 6v\\xa0=\\xa0d и 4(v\\xa0+\\xa012)\\xa0=\\xa0d'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние проехал джип?', 'Пусть x\\xa0— расстояние, а y\\xa0— скорость движения вперед. Тогда получается 6v\\xa0=\\xa0d и 4(v\\xa0+\\xa012)\\xa0=\\xa0d']\nnew_fact = infer_new_fact(selected) # '=>\\xa0v\\xa0=\\xa0d/6 и v\\xa0=\\xa0d/4\\xa0-\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0v\\xa0=\\xa0d/6 и v\\xa0=\\xa0d/4\\xa0-\\xa012']\nnew_fact = infer_new_fact(selected) # '=>\\xa0d/6\\xa0=\\xa0d/4\\xa0-\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0d/6\\xa0=\\xa0d/4\\xa0-\\xa012']\nnew_fact = infer_new_fact(selected) # '=>\\xa0d/12\\xa0=\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0d/12\\xa0=\\xa012']\nnew_fact = infer_new_fact(selected) # '=>\\xa0d\\xa0=\\xa0144'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние проехал джип?', 'B) 144\\xa0км', '=>\\xa0d\\xa0=\\xa0144']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_29_dee79bf008", "context": "", "options": ["A)A)59", "B)B)69", "C)C)79", "D)D)89", "E)E)99"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Half of 2 is 1. =>2+58=60 =>  1+58=59; int1 & sent4 -> int2: Answer A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Когда мне было 2 года,", "2": "мой брат был в два раза младше меня.", "3": "Сейчас мне 60 лет,", "4": "сколько лет моему брату?", "5": "A) 59", "6": "B) 69", "7": "C) 79", "8": "D) 89", "9": "E) 99", "10": "Половина от 2 равна 1. => 2 + 58 = 60 -> 1 + 58 = 59", "11": "Ответ — А", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Когда мне было 2\\xa0года,', 'мой брат был в два раза младше меня.', 'Сейчас мне 60\\xa0лет,']\nquestion = 'сколько лет моему брату?'\nchoices = {'A': '59', 'B': '69', 'C': '79', 'D': '89', 'E': '99'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Когда мне было 2\\xa0года,', 'мой брат был в два раза младше меня.', 'Сейчас мне 60\\xa0лет,', 'сколько лет моему брату?']\nnew_fact = infer_new_fact(selected) # 'Половина от 2 равна 1. =>\\xa02\\xa0+\\xa058\\xa0=\\xa060\\xa0->\\xa01\\xa0+\\xa058\\xa0=\\xa059'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько лет моему брату?', 'Половина от 2 равна 1. =>\\xa02\\xa0+\\xa058\\xa0=\\xa060\\xa0->\\xa01\\xa0+\\xa058\\xa0=\\xa059']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_30_cd02a80751", "context": "", "options": ["A)20%", "B)28%", "C)36%", "D)40%", "E)42%"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: wholesale cost = 100;; int1 & sent1 -> int2: original price = 100*1.6 = 160;; int2 & sent2 & sent3 -> int3: actual price = 160*0.8 = 128.; int3 & sent3 & sent5 -> int4: Answer: B.; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Первоначальная розничная цена прибора была на 60 процентов выше оптовой.", "2": "Если прибор был продан по цене на 20 процентов ниже первоначальной розничной,", "3": "то на сколько процентов дороже оптовой цены был продан прибор?", "4": "A) 20%", "5": "B) 28%", "6": "C) 36%", "7": "D) 40%", "8": "E) 42%", "9": "Оптовая цена = 100;", "10": "Первоначальная цена = 100*1,6 = 160;", "11": "Фактическая цена = 160*0,8 = 128;", "12": "Ответ: Б.", "13": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Первоначальная розничная цена прибора была на 60\\xa0процентов выше оптовой.',\n  'Если прибор был продан по цене на 20\\xa0процентов ниже первоначальной розничной,']\nquestion = 'то на сколько процентов дороже оптовой цены был продан прибор?'\nchoices = {'A': '20%', 'B': '28%', 'C': '36%', 'D': '40%', 'E': '42%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Оптовая цена\\xa0=\\xa0100;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Первоначальная розничная цена прибора была на 60\\xa0процентов выше оптовой.', 'Оптовая цена\\xa0=\\xa0100;']\nnew_fact = infer_new_fact(selected) # 'Первоначальная цена\\xa0=\\xa0100*1,6\\xa0=\\xa0160;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если прибор был продан по цене на 20\\xa0процентов ниже первоначальной розничной,', 'то на сколько процентов дороже оптовой цены был продан прибор?', 'Первоначальная цена\\xa0=\\xa0100*1,6\\xa0=\\xa0160;']\nnew_fact = infer_new_fact(selected) # 'Фактическая цена\\xa0=\\xa0160*0,8\\xa0=\\xa0128;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то на сколько процентов дороже оптовой цены был продан прибор?', 'B) 28%', 'Фактическая цена\\xa0=\\xa0160*0,8\\xa0=\\xa0128;']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_31_a97ee01399", "context": "", "options": ["A)800", "B)720", "C)960", "D)1140", "E)1160"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Here we are given a ratio: 1/4 inch on the map = 10 miles, so 1 inch on the map = 40 miles. If the map-distance between the towns is 20 inches, then the actual distance must be 20 x 40 = 800; int1 & sent3 & sent4 -> int2: Answer: A.; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "На карте длина дороги от города А до города Б составляет 20 дюймов.", "2": "На этой карте 1/4 дюйма соответствует фактическому расстоянию в 10 миль.", "3": "Каково фактическое расстояние в милях", "4": "от города А до города Б по этой дороге?", "5": "A) 800", "6": "B) 720", "7": "C) 960", "8": "D) 1140", "9": "E) 1160", "10": "В условии дано соотношение: 1/4 дюйма на карте = 10 миль, поэтому 1 дюйм на карте = 40 миль. Если расстояние между городами на карте составляет 20 дюймов, то фактическое расстояние должно быть 20 x 40 = 800", "11": "Ответ: А.", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'На карте длина дороги от города\\xa0А до города\\xa0Б составляет 20\\xa0дюймов.',\n  'На этой карте 1/4\\xa0дюйма соответствует фактическому расстоянию в 10\\xa0миль.',\n  'Каково фактическое расстояние в милях']\nquestion = 'от города\\xa0А до города\\xa0Б по этой дороге?'\nchoices = {'A': '800', 'B': '720', 'C': '960', 'D': '1140', 'E': '1160'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На карте длина дороги от города\\xa0А до города\\xa0Б составляет 20\\xa0дюймов.', 'На этой карте 1/4\\xa0дюйма соответствует фактическому расстоянию в 10\\xa0миль.', 'Каково фактическое расстояние в милях', 'от города\\xa0А до города\\xa0Б по этой дороге?']\nnew_fact = infer_new_fact(selected) # 'В условии дано соотношение: 1/4\\xa0дюйма на карте\\xa0=\\xa010\\xa0миль, поэтому 1\\xa0дюйм на карте\\xa0=\\xa040 миль. Если расстояние между городами на карте составляет 20\\xa0дюймов, то фактическое расстояние должно быть 20\\xa0x\\xa040\\xa0=\\xa0800'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково фактическое расстояние в милях', 'от города\\xa0А до города\\xa0Б по этой дороге?', 'В условии дано соотношение: 1/4\\xa0дюйма на карте\\xa0=\\xa010\\xa0миль, поэтому 1\\xa0дюйм на карте\\xa0=\\xa040 миль. Если расстояние между городами на карте составляет 20\\xa0дюймов, то фактическое расстояние должно быть 20\\xa0x\\xa040\\xa0=\\xa0800']\nnew_fact = infer_new_fact(selected) # 'Ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_32_7d1086ac2b", "context": "", "options": ["A)1584", "B)1120", "C)792", "D)1320", "E)1200"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [3, 14, 15], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let the sheet be folded along its breadth and its perimeter = 48cm; int1 & sent1 & sent2 & sent3 -> int2: Therefore, (l/2 + b) = 48 ... (i); sent2 -> int3: Now, let the sheet be folded along its length, and the perimeter = 66cm; int2 & int3 -> int4: (l + b/2)= 66 …... (ii); int2 & int4 -> int5: Solving (i) and (ii), we get,; int2 & int4 & int5 -> int6: l = 56cm, b = 20cm; int6 & sent3 -> int7: Area = l*b; int6 & int7 & sent3 -> int8: Area = 1120 cm2; int8 & sent3 -> int9: ANSWER IS B; int9 -> int10: The answer is B);", "textual_logical_units": {"1": "Прямоугольный лист, сложенный на две равные половины, имеет периметр 48 см, если сложить его по одной стороне, и", "2": "66 см, если сложить по другой стороне.", "3": "Найдите площадь листа.", "4": "A) 1584", "5": "B) 1120", "6": "C) 792", "7": "D) 1320", "8": "E) 1200", "9": "Допустим, лист сложен по ширине, и его периметр = 48 см", "10": "Тогда (l/2 + b) = 48... (i)", "11": "Теперь допустим, что лист сложен по длине, и его периметр = 66 см", "12": "(l + b/2) = 66 …... (ii)", "13": "Решая уравнения (i) и (ii), получаем", "14": "l = 56 см, b = 20 см", "15": "Площадь = l*b", "16": "Площадь = 1120 см2", "17": "ОТВЕТ — Б", "18": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Прямоугольный лист, сложенный на две равные половины, имеет периметр 48\\xa0см, если сложить его по одной стороне, и',\n  '66\\xa0см, если сложить по другой стороне.']\nquestion = 'Найдите площадь листа.'\nchoices = {'A': '1584', 'B': '1120', 'C': '792', 'D': '1320', 'E': '1200'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прямоугольный лист, сложенный на две равные половины, имеет периметр 48\\xa0см, если сложить его по одной стороне, и']\nnew_fact = infer_new_fact(selected) # 'Допустим, лист сложен по ширине, и его периметр\\xa0=\\xa048 см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольный лист, сложенный на две равные половины, имеет периметр 48\\xa0см, если сложить его по одной стороне, и', '66\\xa0см, если сложить по другой стороне.', 'Найдите площадь листа.', 'Допустим, лист сложен по ширине, и его периметр\\xa0=\\xa048 см']\nnew_fact = infer_new_fact(selected) # 'Тогда (l/2\\xa0+\\xa0b)\\xa0=\\xa048... (i)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['66\\xa0см, если сложить по другой стороне.']\nnew_fact = infer_new_fact(selected) # 'Теперь допустим, что лист сложен по длине, и его периметр\\xa0=\\xa066\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда (l/2\\xa0+\\xa0b)\\xa0=\\xa048... (i)', 'Теперь допустим, что лист сложен по длине, и его периметр\\xa0=\\xa066\\xa0см']\nnew_fact = infer_new_fact(selected) # '(l\\xa0+\\xa0b/2)\\xa0=\\xa066 …... (ii)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда (l/2\\xa0+\\xa0b)\\xa0=\\xa048... (i)', '(l\\xa0+\\xa0b/2)\\xa0=\\xa066 …... (ii)']\nnew_fact = infer_new_fact(selected) # 'Решая уравнения (i) и (ii), получаем'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда (l/2\\xa0+\\xa0b)\\xa0=\\xa048... (i)', '(l\\xa0+\\xa0b/2)\\xa0=\\xa066 …... (ii)', 'Решая уравнения (i) и (ii), получаем']\nnew_fact = infer_new_fact(selected) # 'l\\xa0=\\xa056\\xa0см, b\\xa0=\\xa020\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите площадь листа.', 'l\\xa0=\\xa056\\xa0см, b\\xa0=\\xa020\\xa0см']\nnew_fact = infer_new_fact(selected) # 'Площадь\\xa0=\\xa0l*b'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите площадь листа.', 'l\\xa0=\\xa056\\xa0см, b\\xa0=\\xa020\\xa0см', 'Площадь\\xa0=\\xa0l*b']\nnew_fact = infer_new_fact(selected) # 'Площадь\\xa0=\\xa01120\\xa0см2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите площадь листа.', 'Площадь\\xa0=\\xa01120\\xa0см2']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_33_42a583f37d", "context": "", "options": ["A)24", "B)36", "C)72", "D)84", "E)None"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: The bus from M to N can be selected in 3 ways. The bus from N to O can be selected in 4 ways. The bus from O to P can be selected in 1 way. The bus from P to Q can be selected in 3 ways. So, by the General Counting Principle, one can travel from M to Q in 3*4*1*3= 36 ways; int1 & sent5 -> int2: Answer B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Предположим, что из пункта M в пункт N можно добраться на трех автобусах,", "2": "из пункта N в пункт O — на 4 автобусах,", "3": "из пункта O в пункт P — на 1 автобусе и", "4": "из пункта P в пункт Q — на 3 автобусах,", "5": "Сколькими способами можно добраться из пункта M в пункт Q?", "6": "A) 24", "7": "B) 36", "8": "C) 72", "9": "D) 84", "10": "E) Ничего из вышеперечисленного", "11": "Автобус из пункта M в пункт N можно выбрать 3 способами. Автобус из пункта N в пункт O можно выбрать 4 способами. Автобус из пункта O в пункт P можно выбрать 1 способом. Автобус из пункта P в пункт Q можно выбрать 3 способами. Согласно общему принципу расчета, из пункта M в пункт Q можно добраться 3*4*1*3 = 36 способами", "12": "Ответ — Б", "13": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Предположим, что из пункта M в пункт N можно добраться на трех автобусах,',\n  'из пункта N в пункт O\\xa0— на 4\\xa0автобусах,',\n  'из пункта O в пункт P\\xa0— на 1\\xa0автобусе и',\n  'из пункта P в пункт Q\\xa0— на 3\\xa0автобусах,']\nquestion = 'Сколькими способами можно добраться из пункта\\xa0M в пункт\\xa0Q?'\nchoices = {'A': '24', 'B': '36', 'C': '72', 'D': '84', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Предположим, что из пункта M в пункт N можно добраться на трех автобусах,', 'из пункта N в пункт O\\xa0— на 4\\xa0автобусах,', 'из пункта O в пункт P\\xa0— на 1\\xa0автобусе и', 'из пункта P в пункт Q\\xa0— на 3\\xa0автобусах,', 'Сколькими способами можно добраться из пункта\\xa0M в пункт\\xa0Q?']\nnew_fact = infer_new_fact(selected) # 'Автобус из пункта M в пункт N можно выбрать 3\\xa0способами. Автобус из пункта N в пункт O можно выбрать 4\\xa0способами. Автобус из пункта O в пункт P можно выбрать 1\\xa0способом. Автобус из пункта P в пункт Q можно выбрать 3\\xa0способами. Согласно общему принципу расчета, из пункта\\xa0M в пункт Q можно добраться 3*4*1*3\\xa0=\\xa036\\xa0способами'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно добраться из пункта\\xa0M в пункт\\xa0Q?', 'Автобус из пункта M в пункт N можно выбрать 3\\xa0способами. Автобус из пункта N в пункт O можно выбрать 4\\xa0способами. Автобус из пункта O в пункт P можно выбрать 1\\xa0способом. Автобус из пункта P в пункт Q можно выбрать 3\\xa0способами. Согласно общему принципу расчета, из пункта\\xa0M в пункт Q можно добраться 3*4*1*3\\xa0=\\xa036\\xa0способами']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_34_a7e1c3952b", "context": "", "options": ["A) 13.3542", "B) 15.8113", "C) 18.3451", "D) 19.5667", "E) 20.8888"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.; int1 & sent1 -> int2: According to the Pythagoras theorem, sides 3, 4 give diagonal as 5 ==> with 5 and 15, we get 5sqrt(10).; int1 & int2 & sent4 -> int3: 5sqrt(10) or 15.8113 is the diameter of the sphere.; int3 & sent4 -> int4: answer = B; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Тело с прямоугольными гранями размером 3 x 4 x 15", "2": "вписано в сферу", "3": "таким образом, что все восемь вершин находятся на сфере.", "4": "Каков диаметр сферы?", "5": "A) 13,3542", "6": "B) 15,8113", "7": "C) 18,3451", "8": "D) 19,5667", "9": "E) 20,8888", "10": "Во вписанном в сферу прямоугольнике диаметром является линия, соединяющая противоположные вершины.", "11": "Согласно теореме Пифагора, стороны 3 и 4 дают диагональ 5 ==> с диагональю 5 и стороной 15 получаем 5√(10).", "12": "5√(10) или 15,8113 — диаметр сферы.", "13": "Ответ = Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Тело с прямоугольными гранями размером 3\\xa0x\\xa04\\xa0x\\xa015', 'вписано в сферу', 'таким образом, что все восемь вершин находятся на сфере.']\nquestion = 'Каков диаметр сферы?'\nchoices = {'A': '13,3542', 'B': '15,8113', 'C': '18,3451', 'D': '19,5667', 'E': '20,8888'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Тело с прямоугольными гранями размером 3\\xa0x\\xa04\\xa0x\\xa015', 'вписано в сферу', 'таким образом, что все восемь вершин находятся на сфере.']\nnew_fact = infer_new_fact(selected) # 'Во вписанном в сферу прямоугольнике диаметром является линия, соединяющая противоположные вершины.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тело с прямоугольными гранями размером 3\\xa0x\\xa04\\xa0x\\xa015', 'Во вписанном в сферу прямоугольнике диаметром является линия, соединяющая противоположные вершины.']\nnew_fact = infer_new_fact(selected) # 'Согласно теореме Пифагора, стороны 3 и 4 дают диагональ 5\\xa0==>\\xa0с диагональю 5 и стороной 15 получаем 5√(10).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков диаметр сферы?', 'Во вписанном в сферу прямоугольнике диаметром является линия, соединяющая противоположные вершины.', 'Согласно теореме Пифагора, стороны 3 и 4 дают диагональ 5\\xa0==>\\xa0с диагональю 5 и стороной 15 получаем 5√(10).']\nnew_fact = infer_new_fact(selected) # '5√(10) или 15,8113\\xa0— диаметр сферы.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков диаметр сферы?', '5√(10) или 15,8113\\xa0— диаметр сферы.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0=\\xa0Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0=\\xa0Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_35_19ac2e818a", "context": "", "options": ["A)3km", "B)2km", "C)4km", "D)5km", "E)6km"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 11}, {"antecedents": [2, 4, 11], "consequent": 12}, {"antecedents": [1, 3, 12], "consequent": 13}, {"antecedents": [5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: 3s,5e,3n,2w; int1 & sent2 & sent4 -> int2: 5-2=3e; int2 & sent1 & sent3 -> int3: 3-3=0; int3 & sent5 -> int4: ANSWER:A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "A движется сначала 3 км на юг,", "2": "затем — 5 км на восток,", "3": "снова 3 км на север", "4": "и, наконец, 2 км на запад.", "5": "Как далеко от дома окажется А в конце?", "6": "A) 3 км", "7": "B) 2 км", "8": "C) 4 км", "9": "D) 5 км", "10": "E) 6 км", "11": "3s,5e,3n,2w", "12": "5 - 2 = 3e", "13": "3 - 3 = 0", "14": "ОТВЕТ: А", "15": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['A движется сначала 3\\xa0км на юг,', 'затем\\xa0— 5\\xa0км на восток,', 'снова 3\\xa0км на север', 'и, наконец, 2\\xa0км на запад.']\nquestion = 'Как далеко от дома окажется А в конце?'\nchoices = {'A': '3\\xa0км', 'B': '2\\xa0км', 'C': '4\\xa0км', 'D': '5\\xa0км', 'E': '6\\xa0км'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A движется сначала 3\\xa0км на юг,', 'затем\\xa0— 5\\xa0км на восток,', 'снова 3\\xa0км на север', 'и, наконец, 2\\xa0км на запад.']\nnew_fact = infer_new_fact(selected) # '3s,5e,3n,2w'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['затем\\xa0— 5\\xa0км на восток,', 'и, наконец, 2\\xa0км на запад.', '3s,5e,3n,2w']\nnew_fact = infer_new_fact(selected) # '5\\xa0-\\xa02\\xa0=\\xa03e'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A движется сначала 3\\xa0км на юг,', 'снова 3\\xa0км на север', '5\\xa0-\\xa02\\xa0=\\xa03e']\nnew_fact = infer_new_fact(selected) # '3\\xa0-\\xa03\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Как далеко от дома окажется А в конце?', '3\\xa0-\\xa03\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_36_c791abbc16", "context": "", "options": ["A)Rs. 697.50", "B)Rs. 712.50", "C)Rs. 787.50", "D)Rs. 750", "E)Rs. 780"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.; int1 -> int2: .02x = 15; int1 & int2 & sent4 -> int3: x = 750 marked price; int3 & sent4 -> int4: ANSWER:D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Продавая часы, владелец магазина дает скидку в размере 5%.", "2": "Давая скидку в размере 7%, он получает прибыль на", "3": "15 рупий меньше.", "4": "Обозначенная цена часов:", "5": "A) руп. 697,50", "6": "B) руп. 712,50", "7": "C) руп. 787,50", "8": "D) руп. 750", "9": "E) руп. 780", "10": "Если он увеличивает скидку на 2%, то его прибыль уменьшается на 15. Пусть X — обозначенная цена.", "11": "0,02x = 15", "12": "x = 750 — обозначенная цена", "13": "ОТВЕТ: Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Продавая часы, владелец магазина дает скидку в размере 5%.', 'Давая скидку в размере 7%, он получает прибыль на', '15\\xa0рупий меньше.']\nquestion = 'Обозначенная цена часов:'\nchoices = {'A': 'руп. 697,50', 'B': 'руп. 712,50', 'C': 'руп. 787,50', 'D': 'руп. 750', 'E': 'руп. 780'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Продавая часы, владелец магазина дает скидку в размере 5%.', 'Давая скидку в размере 7%, он получает прибыль на', '15\\xa0рупий меньше.', 'Обозначенная цена часов:']\nnew_fact = infer_new_fact(selected) # 'Если он увеличивает скидку на 2%, то его прибыль уменьшается на 15. Пусть X\\xa0— обозначенная цена.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он увеличивает скидку на 2%, то его прибыль уменьшается на 15. Пусть X\\xa0— обозначенная цена.']\nnew_fact = infer_new_fact(selected) # '0,02x\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обозначенная цена часов:', 'Если он увеличивает скидку на 2%, то его прибыль уменьшается на 15. Пусть X\\xa0— обозначенная цена.', '0,02x\\xa0=\\xa015']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0750\\xa0— обозначенная цена'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Обозначенная цена часов:', 'x\\xa0=\\xa0750\\xa0— обозначенная цена']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_37_0010181b68", "context": "", "options": ["A)1584", "B)2520", "C)1728", "D)1656", "E)None"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [3, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: According to the question,; sent1 & sent2 & sent3 -> int2: => [7/8 - 7/18 ]x = 770; int2 -> int3: => 7*10*x /18*8 = 770; int3 -> int4: => x = 11*18*8; int4 & sent3 -> int5: => 1584.; int5 & sent3 & sent4 -> int6: Answer : A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Ученик вместо того, чтобы найти значение 7/8 числа,", "2": "нашел значение 7/18 числа.", "3": "Если его ответ отличается от фактического на 770, найдите это число.", "4": "A) 1584", "5": "B) 2520", "6": "C) 1728", "7": "D) 1656", "8": "E) Ничего из вышеперечисленного", "9": "Согласно вопросу,", "10": "=> [7/8 - 7/18]x = 770", "11": "=> 7*10*х/18*8) = 770", "12": "=> x = 11*18*8", "13": "=> 1584.", "14": "Ответ: A", "15": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Ученик вместо того, чтобы найти значение 7/8\\xa0числа,', 'нашел значение 7/18\\xa0числа.']\nquestion = 'Если его ответ отличается от фактического на 770, найдите это число.'\nchoices = {'A': '1584', 'B': '2520', 'C': '1728', 'D': '1656', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Согласно вопросу,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ученик вместо того, чтобы найти значение 7/8\\xa0числа,', 'нашел значение 7/18\\xa0числа.', 'Если его ответ отличается от фактического на 770, найдите это число.']\nnew_fact = infer_new_fact(selected) # '=>\\xa0[7/8\\xa0-\\xa07/18]x\\xa0=\\xa0770'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0[7/8\\xa0-\\xa07/18]x\\xa0=\\xa0770']\nnew_fact = infer_new_fact(selected) # '=>\\xa07*10*х/18*8)\\xa0=\\xa0770'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa07*10*х/18*8)\\xa0=\\xa0770']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa011*18*8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если его ответ отличается от фактического на 770, найдите это число.', '=>\\xa0x\\xa0=\\xa011*18*8']\nnew_fact = infer_new_fact(selected) # '=>\\xa01584.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если его ответ отличается от фактического на 770, найдите это число.', 'A) 1584', '=>\\xa01584.']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_38_66d49d0db4", "context": "", "options": ["A)$50000", "B)$40000", "C)$30000", "D)$20000", "E)None of these"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [2, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [6, 11, 12], "consequent": 13}, {"antecedents": [2, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let S be the total monthly salary and x be the monthly sales, hence; int1 & sent1 & sent2 -> int2: S = 500 + 5% * x; int1 & int2 -> int3: Find sales x so that S = 1500, hence; int2 & int3 & sent2 -> int4: 1500 = 500 + 5% * x = 500 + 0.05 x; int4 -> int5: Solve for x; int4 & int5 & sent6 -> int6: x = (1500 - 500) / 0.05 = $20000; int6 & sent2 -> int7: Answer D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Ежемесячная зарплата S продавщицы представляет собой сумму фиксированного оклада в размере 500 долл. США плюс 5% от всех ежемесячных продаж.", "2": "Какими должны быть ежемесячные продажи, чтобы ее ежемесячная зарплата достигла 1500 долл. США?", "3": "A) 50 000 долл. США", "4": "B) 40 000 долл. США", "5": "C) 30 000 долл. США", "6": "D) 20 000 долл. США", "7": "E) Ничего из вышеперечисленного", "8": "Пусть S — общая ежемесячная зарплата, а x — ежемесячные продажи, тогда", "9": "S = 500 + 5%*x", "10": "Нужно найти продажи x так, чтобы S = 1500, следовательно", "11": "1500 = 500 + 5%*х = 500 + 0,05х", "12": "Находим x", "13": "x = (1500 - 500)/0,05 = 20000 долл. США", "14": "Ответ: Г", "15": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Ежемесячная зарплата S продавщицы представляет собой сумму фиксированного оклада в размере 500\\xa0долл. США плюс 5% от всех ежемесячных продаж.']\nquestion = 'Какими должны быть ежемесячные продажи, чтобы ее ежемесячная зарплата достигла 1500\\xa0долл. США?'\nchoices = { 'A': '50\\xa0000\\xa0долл. США',\n  'B': '40\\xa0000\\xa0долл. США',\n  'C': '30\\xa0000\\xa0долл. США',\n  'D': '20\\xa0000\\xa0долл. США',\n  'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ежемесячная зарплата S продавщицы представляет собой сумму фиксированного оклада в размере 500\\xa0долл. США плюс 5% от всех ежемесячных продаж.']\nnew_fact = infer_new_fact(selected) # 'Пусть S\\xa0— общая ежемесячная зарплата, а x\\xa0— ежемесячные продажи, тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ежемесячная зарплата S продавщицы представляет собой сумму фиксированного оклада в размере 500\\xa0долл. США плюс 5% от всех ежемесячных продаж.', 'Какими должны быть ежемесячные продажи, чтобы ее ежемесячная зарплата достигла 1500\\xa0долл. США?', 'Пусть S\\xa0— общая ежемесячная зарплата, а x\\xa0— ежемесячные продажи, тогда']\nnew_fact = infer_new_fact(selected) # 'S\\xa0=\\xa0500\\xa0+\\xa05%*x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть S\\xa0— общая ежемесячная зарплата, а x\\xa0— ежемесячные продажи, тогда', 'S\\xa0=\\xa0500\\xa0+\\xa05%*x']\nnew_fact = infer_new_fact(selected) # 'Нужно найти продажи x так, чтобы S\\xa0=\\xa01500, следовательно'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какими должны быть ежемесячные продажи, чтобы ее ежемесячная зарплата достигла 1500\\xa0долл. США?', 'S\\xa0=\\xa0500\\xa0+\\xa05%*x', 'Нужно найти продажи x так, чтобы S\\xa0=\\xa01500, следовательно']\nnew_fact = infer_new_fact(selected) # '1500\\xa0=\\xa0500\\xa0+\\xa05%*х\\xa0=\\xa0500\\xa0+\\xa00,05х'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1500\\xa0=\\xa0500\\xa0+\\xa05%*х\\xa0=\\xa0500\\xa0+\\xa00,05х']\nnew_fact = infer_new_fact(selected) # 'Находим x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D) 20\\xa0000\\xa0долл. США', '1500\\xa0=\\xa0500\\xa0+\\xa05%*х\\xa0=\\xa0500\\xa0+\\xa00,05х', 'Находим x']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0(1500\\xa0-\\xa0500)/0,05\\xa0=\\xa020000\\xa0долл. США'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какими должны быть ежемесячные продажи, чтобы ее ежемесячная зарплата достигла 1500\\xa0долл. США?', 'x\\xa0=\\xa0(1500\\xa0-\\xa0500)/0,05\\xa0=\\xa020000\\xa0долл. США']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_39_0704c77c00", "context": "", "options": ["A)384", "B)562", "C)458", "D)156", "E)452"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let the each side of the square is x km; sent1 -> int2: average speed of plane is y km/hr; int1 & int2 & sent1 -> int3: (x/200)+(x/400)+(x/600)+(x/800) = 4x/y; int3 -> int4: 25x/2400 = 4x/y; int4 & sent3 -> int5: y= 384 km/hr; int5 & sent2 -> int6: Answer is A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Самолет летит вдоль четырех сторон квадратного поля со скоростью 200, 400, 600 и 800 км/ч.", "2": "Найдите среднюю скорость полета вокруг поля.", "3": "A) 384", "4": "B) 562", "5": "C) 458", "6": "D) 156", "7": "E) 452", "8": "Пусть каждая сторона квадратного поля равна x км", "9": "Средняя скорость самолета составляет y км/ч", "10": "(x/200) + (x/400) + (x/600) + (x/800) = 4x/y", "11": "25x/2400 = 4x/y", "12": "y = 384 км/ч", "13": "Ответ — A", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Самолет летит вдоль четырех сторон квадратного поля со скоростью 200, 400, 600 и 800\\xa0км/ч.']\nquestion = 'Найдите среднюю скорость полета вокруг поля.'\nchoices = {'A': '384', 'B': '562', 'C': '458', 'D': '156', 'E': '452'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Самолет летит вдоль четырех сторон квадратного поля со скоростью 200, 400, 600 и 800\\xa0км/ч.']\nnew_fact = infer_new_fact(selected) # 'Пусть каждая сторона квадратного поля равна x\\xa0км'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Самолет летит вдоль четырех сторон квадратного поля со скоростью 200, 400, 600 и 800\\xa0км/ч.']\nnew_fact = infer_new_fact(selected) # 'Средняя скорость самолета составляет y\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Самолет летит вдоль четырех сторон квадратного поля со скоростью 200, 400, 600 и 800\\xa0км/ч.', 'Пусть каждая сторона квадратного поля равна x\\xa0км', 'Средняя скорость самолета составляет y\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # '(x/200)\\xa0+\\xa0(x/400)\\xa0+\\xa0(x/600)\\xa0+\\xa0(x/800)\\xa0=\\xa04x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(x/200)\\xa0+\\xa0(x/400)\\xa0+\\xa0(x/600)\\xa0+\\xa0(x/800)\\xa0=\\xa04x/y']\nnew_fact = infer_new_fact(selected) # '25x/2400\\xa0=\\xa04x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) 384', '25x/2400\\xa0=\\xa04x/y']\nnew_fact = infer_new_fact(selected) # 'y\\xa0=\\xa0384\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите среднюю скорость полета вокруг поля.', 'y\\xa0=\\xa0384\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_40_801f21ad8b", "context": "", "options": ["A)10,8", "B)9,8", "C)7,8", "D)5,6", "E)11,12"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [3], "consequent": 13}, {"antecedents": [1, 2, 3], "consequent": 14}, {"antecedents": [1, 2, 3, 14], "consequent": 15}, {"antecedents": [3], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [3, 15, 16, 17], "consequent": 18}, {"antecedents": [14, 15, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}, {"antecedents": [20], "consequent": 21}, {"antecedents": [4, 15], "consequent": 22}, {"antecedents": [5, 14], "consequent": 23}, {"antecedents": [5, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Total cost=100; sent1 -> int2: number of sharp=18; sent3 -> int3: cost of white=cost of brown+1; sent1 & sent2 & sent3 -> int4: 100/18=5.5...-(1); int4 & sent1 & sent2 & sent3 -> int5: also 100%18=10...-(2); sent3 -> int6: as cost of white is 1 more than that of brown; int4 & int5 & int6 -> int7: from 1 int. value will be 5; int5 & int6 & int7 & sent3 -> int8: now remainder is 10 so 10 sharp. will be of cost (5+1); int4 & int5 & int6 & int7 & int8 -> int9: => 10*(5+1)+8*5; int9 -> int10: =>10*6+8*5; int10 -> int11: =60+40; int5 & sent4 -> int12: white=10; int4 & sent5 -> int13: brown=8; int12 & int13 & sent5 -> int14: ANSWER:A; int14 -> int15: The answer is A);", "textual_logical_units": {"1": "Джек купил 18 точилок (белых и коричневых) за", "2": "100", "3": "рупий. За каждую белую точилку он заплатил на 1 рупию больше, чем за коричневую.", "4": "Сколько белых и", "5": "сколько коричневых точилок он купил?", "6": "A) 10,8", "7": "B) 9,8", "8": "C) 7,8", "9": "D) 5,6", "10": "E) 11,12", "11": "Общая стоимость = 100", "12": "Количество точилок = 18", "13": "Стоимость белых = стоимость коричневых + 1", "14": "100/18 = 5,5...-(1)", "15": "Также 100%18 = 10...-(2)", "16": "поскольку стоимость белых на 1 больше, чем стоимость коричневых", "17": "В 1 примере целое значение равно 5", "18": "Оставшееся значение равно 10, поэтому 10 точилок будут стоить (5+1)", "19": "=> 10*(5 + 1) + 8*5", "20": "=> 10*6 + 8*5", "21": "100", "22": "Белых = 10", "23": "Коричневых = 8", "24": "ОТВЕТ: А", "25": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Джек купил 18\\xa0точилок (белых и коричневых) за',\n  '100',\n  'рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.',\n  'Сколько белых и']\nquestion = 'сколько коричневых точилок он купил?'\nchoices = {'A': '10,8', 'B': '9,8', 'C': '7,8', 'D': '5,6', 'E': '11,12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джек купил 18\\xa0точилок (белых и коричневых) за', '100']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джек купил 18\\xa0точилок (белых и коричневых) за']\nnew_fact = infer_new_fact(selected) # 'Количество точилок\\xa0=\\xa018'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.']\nnew_fact = infer_new_fact(selected) # 'Стоимость белых\\xa0=\\xa0стоимость коричневых\\xa0+\\xa01'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джек купил 18\\xa0точилок (белых и коричневых) за', '100', 'рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.']\nnew_fact = infer_new_fact(selected) # '100/18\\xa0=\\xa05,5...-(1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Джек купил 18\\xa0точилок (белых и коричневых) за', '100', 'рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.', '100/18\\xa0=\\xa05,5...-(1)']\nnew_fact = infer_new_fact(selected) # 'Также 100%18\\xa0=\\xa010...-(2)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.']\nnew_fact = infer_new_fact(selected) # 'поскольку стоимость белых на 1 больше, чем стоимость коричневых'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100/18\\xa0=\\xa05,5...-(1)', 'Также 100%18\\xa0=\\xa010...-(2)', 'поскольку стоимость белых на 1 больше, чем стоимость коричневых']\nnew_fact = infer_new_fact(selected) # 'В 1\\xa0примере целое значение равно 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рупий. За каждую белую точилку он заплатил на 1\\xa0рупию больше, чем за коричневую.', 'Также 100%18\\xa0=\\xa010...-(2)', 'поскольку стоимость белых на 1 больше, чем стоимость коричневых', 'В 1\\xa0примере целое значение равно 5']\nnew_fact = infer_new_fact(selected) # 'Оставшееся значение равно 10, поэтому 10\\xa0точилок будут стоить (5+1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100/18\\xa0=\\xa05,5...-(1)', 'Также 100%18\\xa0=\\xa010...-(2)', 'поскольку стоимость белых на 1 больше, чем стоимость коричневых', 'В 1\\xa0примере целое значение равно 5', 'Оставшееся значение равно 10, поэтому 10\\xa0точилок будут стоить (5+1)']\nnew_fact = infer_new_fact(selected) # '=>\\xa010*(5\\xa0+\\xa01)\\xa0+\\xa08*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa010*(5\\xa0+\\xa01)\\xa0+\\xa08*5']\nnew_fact = infer_new_fact(selected) # '=>\\xa010*6\\xa0+\\xa08*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa010*6\\xa0+\\xa08*5']\nnew_fact = infer_new_fact(selected) # '100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько белых и', 'Также 100%18\\xa0=\\xa010...-(2)']\nnew_fact = infer_new_fact(selected) # 'Белых\\xa0=\\xa010'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько коричневых точилок он купил?', '100/18\\xa0=\\xa05,5...-(1)']\nnew_fact = infer_new_fact(selected) # 'Коричневых\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько коричневых точилок он купил?', 'Белых\\xa0=\\xa010', 'Коричневых\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_41_867f99627d", "context": "", "options": ["A)8", "B)15", "C)12", "D)6", "E)3"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 & sent6 -> int1: Since hose A can fill the pool in 8 hours, then in 2 + 3 = 5 hours it will fill 5/8th of the pool. Thus the remaining 3/8th is filled by hose B in 3 hours. This means that hose B,working alone, to fill the entire pool will need 3*8/3 = 8 hours.; int1 & sent6 -> int2: Answer: A.; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Шланги A и B отводят воду с разной постоянной скоростью,", "2": "при этом шланг A может заполнить определенный бассейн за 8 часов.", "3": "Шланг A заполнял бассейн в одиночку в течение первых двух часов, а затем оба шланга, работая вместе,", "4": "закончили заполнение бассейна еще через 3 часа.", "5": "Сколько часов потребовалось бы шлангу B, чтобы в одиночку", "6": "заполнить весь бассейн?", "7": "A) 8", "8": "B) 15", "9": "C) 12", "10": "D) 6", "11": "E) 3", "12": "Поскольку шланг A может заполнить бассейн за 8 часов, через 2 + 3 = 5 часов он заполнит 5/8 бассейна. Таким образом, оставшиеся 3/8 заполняются шлангом B за 3 часа. Это означает, что шлангу B, работающему в одиночку, для заполнения всего бассейна потребуется 3*8/3 = 8 часов.", "13": "Ответ: А.", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Шланги A и B отводят воду с разной постоянной скоростью,',\n  'при этом шланг A может заполнить определенный бассейн за 8\\xa0часов.',\n  'Шланг A заполнял бассейн в одиночку в течение первых двух часов, а затем оба шланга, работая вместе,',\n  'закончили заполнение бассейна еще через 3\\xa0часа.',\n  'Сколько часов потребовалось бы шлангу B, чтобы в одиночку']\nquestion = 'заполнить весь бассейн?'\nchoices = {'A': '8', 'B': '15', 'C': '12', 'D': '6', 'E': '3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Шланги A и B отводят воду с разной постоянной скоростью,', 'при этом шланг A может заполнить определенный бассейн за 8\\xa0часов.', 'Шланг A заполнял бассейн в одиночку в течение первых двух часов, а затем оба шланга, работая вместе,', 'закончили заполнение бассейна еще через 3\\xa0часа.', 'Сколько часов потребовалось бы шлангу B, чтобы в одиночку', 'заполнить весь бассейн?']\nnew_fact = infer_new_fact(selected) # 'Поскольку шланг A может заполнить бассейн за 8\\xa0часов, через 2\\xa0+\\xa03\\xa0=\\xa05\\xa0часов он заполнит 5/8\\xa0бассейна. Таким образом, оставшиеся 3/8 заполняются шлангом B за 3\\xa0часа. Это означает, что шлангу B, работающему в одиночку, для заполнения всего бассейна потребуется 3*8/3\\xa0=\\xa08\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['заполнить весь бассейн?', 'Поскольку шланг A может заполнить бассейн за 8\\xa0часов, через 2\\xa0+\\xa03\\xa0=\\xa05\\xa0часов он заполнит 5/8\\xa0бассейна. Таким образом, оставшиеся 3/8 заполняются шлангом B за 3\\xa0часа. Это означает, что шлангу B, работающему в одиночку, для заполнения всего бассейна потребуется 3*8/3\\xa0=\\xa08\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_42_cb64991099", "context": "", "options": ["A)30%", "B)40%", "C)20%", "D)10%", "E)5%"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: reduction = 120 – 96 = 24; int1 & sent1 & sent2 -> int2: ∴ Reduction percent = (24/120)×100% =20%; int2 & sent2 -> int3: Answer:C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Если число 120 уменьшить до 96,", "2": "каким будет процент уменьшения?", "3": "A) 30%", "4": "B) 40%", "5": "C) 20%", "6": "D) 10%", "7": "E) 5%", "8": "Уменьшение = 120 - 96 = 24", "9": "∴ Процент уменьшения = (24/120) × 100% = 20%", "10": "Ответ: В", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Если число 120 уменьшить до 96,']\nquestion = 'каким будет процент уменьшения?'\nchoices = {'A': '30%', 'B': '40%', 'C': '20%', 'D': '10%', 'E': '5%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если число 120 уменьшить до 96,']\nnew_fact = infer_new_fact(selected) # 'Уменьшение\\xa0=\\xa0120\\xa0-\\xa096\\xa0=\\xa024'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если число 120 уменьшить до 96,', 'каким будет процент уменьшения?', 'Уменьшение\\xa0=\\xa0120\\xa0-\\xa096\\xa0=\\xa024']\nnew_fact = infer_new_fact(selected) # '∴ Процент уменьшения\\xa0=\\xa0(24/120)\\xa0×\\xa0100%\\xa0=\\xa020%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет процент уменьшения?', '∴ Процент уменьшения\\xa0=\\xa0(24/120)\\xa0×\\xa0100%\\xa0=\\xa020%']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_43_c7b0ea000b", "context": "", "options": ["A)42857", "B)32456", "C)76523", "D)24567", "E)43566"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let the number be x; int1 & sent1 & sent2 -> int2: 10x +1 = 3(100,000 + x); int2 -> int3: => x = 42857.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Я знаю 5-значное число, имеющее следующее свойство: если после него стоит цифра 1,", "2": "оно в три раза больше, чем если бы цифра 1 стояла перед ним.\nЧто это за число?", "3": "A) 42857", "4": "B) 32456", "5": "C) 76523", "6": "D) 24567", "7": "E) 43566", "8": "Пусть x — требуемое число", "9": "10x + 1 = 3(100000 + x)", "10": "=> x = 42857.", "11": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Я знаю 5-значное число, имеющее следующее свойство: если после него стоит цифра\\xa01,']\nquestion = 'оно в три раза больше, чем если бы цифра 1 стояла перед ним.\\nЧто это за число?'\nchoices = {'A': '42857', 'B': '32456', 'C': '76523', 'D': '24567', 'E': '43566'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Я знаю 5-значное число, имеющее следующее свойство: если после него стоит цифра\\xa01,', 'оно в три раза больше, чем если бы цифра 1 стояла перед ним.\\nЧто это за число?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— требуемое число'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Я знаю 5-значное число, имеющее следующее свойство: если после него стоит цифра\\xa01,', 'оно в три раза больше, чем если бы цифра 1 стояла перед ним.\\nЧто это за число?', 'Пусть x\\xa0— требуемое число']\nnew_fact = infer_new_fact(selected) # '10x\\xa0+\\xa01\\xa0=\\xa03(100000\\xa0+\\xa0x)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10x\\xa0+\\xa01\\xa0=\\xa03(100000\\xa0+\\xa0x)']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa042857.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0x\\xa0=\\xa042857.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_44_93c5f8ea08", "context": "", "options": ["A)20%", "B)30%", "C)40%", "D)50%", "E)60%"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:; int1 -> int2: 24+0.2S=S  =>  S=30.; int1 & int2 & sent3 -> int3: Answer: B.; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "В университете Дайфу 24% от всех студентов являются членами шахматного клуба и участниками команды по плаванию.", "2": "Если 20% участников команды по плаванию не являются членами шахматного клуба,", "3": "сколько процентов всех студентов Дайфу являются участниками команды по плаванию?", "4": "A) 20%", "5": "B) 30%", "6": "C) 40%", "7": "D) 50%", "8": "E) 60%", "9": "Предположим, что всего в университете 100 студентов. 24 студента являются членами обоих клубов. Известно, что: 20% участников команды по плаванию не являются членами шахматного клуба, поэтому, если S — количество участников команды по плаванию, то 0,2S — количество участников только команды по плаванию:", "10": "24 + 0,2S = S --> S = 30.", "11": "Ответ: Б.", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'В университете Дайфу 24%\\xa0от всех студентов являются членами шахматного клуба и участниками команды по плаванию.',\n  'Если 20%\\xa0участников команды по плаванию не являются членами шахматного клуба,']\nquestion = 'сколько процентов всех студентов Дайфу являются участниками команды по плаванию?'\nchoices = {'A': '20%', 'B': '30%', 'C': '40%', 'D': '50%', 'E': '60%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В университете Дайфу 24%\\xa0от всех студентов являются членами шахматного клуба и участниками команды по плаванию.', 'Если 20%\\xa0участников команды по плаванию не являются членами шахматного клуба,', 'сколько процентов всех студентов Дайфу являются участниками команды по плаванию?']\nnew_fact = infer_new_fact(selected) # 'Предположим, что всего в университете 100\\xa0студентов. 24\\xa0студента являются членами обоих клубов. Известно, что: 20%\\xa0участников команды по плаванию не являются членами шахматного клуба, поэтому, если S\\xa0— количество участников команды по плаванию, то 0,2S\\xa0— количество участников только команды по плаванию:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, что всего в университете 100\\xa0студентов. 24\\xa0студента являются членами обоих клубов. Известно, что: 20%\\xa0участников команды по плаванию не являются членами шахматного клуба, поэтому, если S\\xa0— количество участников команды по плаванию, то 0,2S\\xa0— количество участников только команды по плаванию:']\nnew_fact = infer_new_fact(selected) # '24\\xa0+\\xa00,2S\\xa0=\\xa0S --> S\\xa0=\\xa030.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько процентов всех студентов Дайфу являются участниками команды по плаванию?', 'Предположим, что всего в университете 100\\xa0студентов. 24\\xa0студента являются членами обоих клубов. Известно, что: 20%\\xa0участников команды по плаванию не являются членами шахматного клуба, поэтому, если S\\xa0— количество участников команды по плаванию, то 0,2S\\xa0— количество участников только команды по плаванию:', '24\\xa0+\\xa00,2S\\xa0=\\xa0S --> S\\xa0=\\xa030.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_45_f82950ebff", "context": "", "options": ["A)81900", "B)85995", "C)85800", "D)90000", "E)None of these"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The % change in population of city in two years time is 1.05*1.05 = 1.1025 = 10.25%; int1 & sent1 & sent2 -> int2: Therefore, after 2 years the population of the city will be 1.1025 * 78000 = 85995; int2 & sent2 -> int3: ANSWER B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Если население города ежегодно увеличивается на 5 процентов,", "2": "каким будет население города через 2 года, если его нынешнее население составляет 78000 человек?", "3": "A) 81900", "4": "B) 85995", "5": "C) 85800", "6": "D) 90000", "7": "E) Ничего из вышеперечисленного", "8": "Изменение численности населения города в % за два года составит 1,05*1,05 = 1,1025 = 10,25%", "9": "Таким образом, через 2 года население города составит 1,1025*78 000 = 85995", "10": "ОТВЕТ — Б", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Если население города ежегодно увеличивается на 5\\xa0процентов,']\nquestion = 'каким будет население города через 2\\xa0года, если его нынешнее население составляет 78000\\xa0человек?'\nchoices = {'A': '81900', 'B': '85995', 'C': '85800', 'D': '90000', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если население города ежегодно увеличивается на 5\\xa0процентов,', 'каким будет население города через 2\\xa0года, если его нынешнее население составляет 78000\\xa0человек?']\nnew_fact = infer_new_fact(selected) # 'Изменение численности населения города в % за два года составит 1,05*1,05\\xa0=\\xa01,1025\\xa0=\\xa010,25%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если население города ежегодно увеличивается на 5\\xa0процентов,', 'каким будет население города через 2\\xa0года, если его нынешнее население составляет 78000\\xa0человек?', 'Изменение численности населения города в % за два года составит 1,05*1,05\\xa0=\\xa01,1025\\xa0=\\xa010,25%']\nnew_fact = infer_new_fact(selected) # 'Таким образом, через 2\\xa0года население города составит 1,1025*78\\xa0000\\xa0=\\xa085995'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет население города через 2\\xa0года, если его нынешнее население составляет 78000\\xa0человек?', 'Таким образом, через 2\\xa0года население города составит 1,1025*78\\xa0000\\xa0=\\xa085995']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_46_31974df077", "context": "", "options": ["A) 1", "B) 1.25", "C) 1.50", "D) 1.75", "E) 2"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Time they will meet = total distance/ relative speed= 50/12+13 = 50/25 = 2; int1 & sent4 -> int2: Answer is E; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "Два автомобиля одновременно отправляются в путь с противоположных концов шоссе длиной 50 миль.", "2": "Один автомобиль движется со скоростью 12 миль в час, а", "3": "второй — со скоростью 13 миль в час.", "4": "Через какое время после отправления они встретятся?", "5": "A) 1", "6": "B) 1,25", "7": "C) 1,50", "8": "D) 1,75", "9": "E) 2", "10": "Время их встречи = общее расстояние/относительная скорость = 50/12 + 13 = 50/25 = 2", "11": "Ответ — Д", "12": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два автомобиля одновременно отправляются в путь с противоположных концов шоссе длиной 50\\xa0миль.',\n  'Один автомобиль движется со скоростью 12\\xa0миль в час, а',\n  'второй\\xa0— со скоростью 13\\xa0миль в час.']\nquestion = 'Через какое время после отправления они встретятся?'\nchoices = {'A': '1', 'B': '1,25', 'C': '1,50', 'D': '1,75', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Два автомобиля одновременно отправляются в путь с противоположных концов шоссе длиной 50\\xa0миль.', 'Один автомобиль движется со скоростью 12\\xa0миль в час, а', 'второй\\xa0— со скоростью 13\\xa0миль в час.', 'Через какое время после отправления они встретятся?']\nnew_fact = infer_new_fact(selected) # 'Время их встречи\\xa0=\\xa0общее расстояние/относительная скорость\\xa0=\\xa050/12\\xa0+\\xa013\\xa0=\\xa050/25\\xa0=\\xa02'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через какое время после отправления они встретятся?', 'Время их встречи\\xa0=\\xa0общее расстояние/относительная скорость\\xa0=\\xa050/12\\xa0+\\xa013\\xa0=\\xa050/25\\xa0=\\xa02']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_47_92b73539ff", "context": "", "options": ["A)30000", "B)415000", "C)31500", "D)50000", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Servant’s commission amount; sent1 & sent2 & sent3 -> int2: = 6000 – 1500 = 4500; int2 & sent2 -> int3: i.e.,15% = 4500; int2 & int3 -> int4: or,100% = 4500⁄15 × 100 = 30000; int4 & sent3 -> int5: Answer A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Владелец магазина нанял служащего с ежемесячной зарплатой 1500 рупий.", "2": "Кроме того, он согласился выплачивать ему комиссию в размере 15% от ежемесячных продаж.", "3": "Какой объем продаж в рупиях необходимо совершать служащему, если он хочет, чтобы его ежемесячный доход составлял 6000 рупий?", "4": "A) 30000", "5": "B) 415000", "6": "C) 31500", "7": "D) 50000", "8": "E) Ничего из вышеперечисленного", "9": "Размер комиссии служащего", "10": "TRUE", "11": "т.е. 15% = 4500", "12": "или 100% = 4500⁄15 × 100 = 30000", "13": "Ответ — А", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Владелец магазина нанял служащего с ежемесячной зарплатой 1500\\xa0рупий.',\n  'Кроме того, он согласился выплачивать ему комиссию в размере 15%\\xa0от ежемесячных продаж.']\nquestion = 'Какой объем продаж в рупиях необходимо совершать служащему, если он хочет, чтобы его ежемесячный доход составлял 6000\\xa0рупий?'\nchoices = {'A': '30000', 'B': '415000', 'C': '31500', 'D': '50000', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Владелец магазина нанял служащего с ежемесячной зарплатой 1500\\xa0рупий.', 'Кроме того, он согласился выплачивать ему комиссию в размере 15%\\xa0от ежемесячных продаж.']\nnew_fact = infer_new_fact(selected) # 'Размер комиссии служащего'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Владелец магазина нанял служащего с ежемесячной зарплатой 1500\\xa0рупий.', 'Кроме того, он согласился выплачивать ему комиссию в размере 15%\\xa0от ежемесячных продаж.', 'Какой объем продаж в рупиях необходимо совершать служащему, если он хочет, чтобы его ежемесячный доход составлял 6000\\xa0рупий?']\nnew_fact = infer_new_fact(selected) # 'TRUE'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, он согласился выплачивать ему комиссию в размере 15%\\xa0от ежемесячных продаж.', 'TRUE']\nnew_fact = infer_new_fact(selected) # 'т.е. 15%\\xa0=\\xa04500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['TRUE', 'т.е. 15%\\xa0=\\xa04500']\nnew_fact = infer_new_fact(selected) # 'или 100%\\xa0=\\xa04500⁄15\\xa0×\\xa0100\\xa0=\\xa030000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой объем продаж в рупиях необходимо совершать служащему, если он хочет, чтобы его ежемесячный доход составлял 6000\\xa0рупий?', 'или 100%\\xa0=\\xa04500⁄15\\xa0×\\xa0100\\xa0=\\xa030000']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_48_f72fcdf393", "context": "", "options": ["A)1.5%", "B)4.5%", "C)10%", "D)5%", "E)12%"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Instead of paying monthly 360/12 = 30Rs, the man pays 31.50Rs. Therefore, the interest rate is 1.5/30 = 0.5/10 = 5/100 = 5%.; int1 & sent2 -> int2: Answer D; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Человек берет кредит в размере 360 рупий. Если он выплачивает его в течение 12 месяцев, и ежемесячный платеж составляет 31,50 рупии,", "2": "какова его процентная ставка?", "3": "A) 1,5%", "4": "B) 4,5%", "5": "C) 10%", "6": "D) 5%", "7": "E) 12%", "8": "Вместо того, чтобы платить в месяц 360/12 = 30 рупий, человек платит 31,50 рупии. Таким образом, процентная ставка равна 1,5/30 = 0,5/10 = 5/100 = 5%.", "9": "Ответ: Г", "10": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Человек берет кредит в размере 360\\xa0рупий. Если он выплачивает его в течение 12\\xa0месяцев, и ежемесячный платеж составляет 31,50\\xa0рупии,']\nquestion = 'какова его процентная ставка?'\nchoices = {'A': '1,5%', 'B': '4,5%', 'C': '10%', 'D': '5%', 'E': '12%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Человек берет кредит в размере 360\\xa0рупий. Если он выплачивает его в течение 12\\xa0месяцев, и ежемесячный платеж составляет 31,50\\xa0рупии,', 'какова его процентная ставка?']\nnew_fact = infer_new_fact(selected) # 'Вместо того, чтобы платить в месяц 360/12\\xa0=\\xa030\\xa0рупий, человек платит 31,50\\xa0рупии. Таким образом, процентная ставка равна 1,5/30\\xa0=\\xa00,5/10\\xa0=\\xa05/100\\xa0=\\xa05%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова его процентная ставка?', 'Вместо того, чтобы платить в месяц 360/12\\xa0=\\xa030\\xa0рупий, человек платит 31,50\\xa0рупии. Таким образом, процентная ставка равна 1,5/30\\xa0=\\xa00,5/10\\xa0=\\xa05/100\\xa0=\\xa05%.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_49_7f006157a5", "context": "", "options": ["A)41.86%", "B)42.86%", "C)43.86%", "D)44.86%", "E)45.86%"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If initial price is Rs 100 and reduced price is Rs 70.; int1 & sent1 & sent2 -> int2: Then, to make it 100 again, price should increase by 100*30/70= 300/7 % or 42.86% approx; int2 & sent2 -> int3: ANSWER:B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Цена продукта снижена на 30%.", "2": "На какой процент ее нужно увеличить, чтобы довести до 100%?", "3": "A) 41,86%", "4": "B) 42,86%", "5": "C) 43,86%", "6": "D) 44,86%", "7": "E) 45,86%", "8": "Если первоначальная цена составляет 100 рупий, а сниженная — 70 рупий,", "9": "то, чтобы снова достичь 100, цена должна вырасти на 100*30/70 = 300/7% или примерно на 42,86%", "10": "ОТВЕТ: Б", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Цена продукта снижена на 30%.']\nquestion = 'На какой процент ее нужно увеличить, чтобы довести до 100%?'\nchoices = {'A': '41,86%', 'B': '42,86%', 'C': '43,86%', 'D': '44,86%', 'E': '45,86%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Цена продукта снижена на 30%.', 'На какой процент ее нужно увеличить, чтобы довести до 100%?']\nnew_fact = infer_new_fact(selected) # 'Если первоначальная цена составляет 100\\xa0рупий, а сниженная\\xa0— 70\\xa0рупий,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Цена продукта снижена на 30%.', 'На какой процент ее нужно увеличить, чтобы довести до 100%?', 'Если первоначальная цена составляет 100\\xa0рупий, а сниженная\\xa0— 70\\xa0рупий,']\nnew_fact = infer_new_fact(selected) # 'то, чтобы снова достичь 100, цена должна вырасти на 100*30/70\\xa0=\\xa0300/7% или примерно на 42,86%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На какой процент ее нужно увеличить, чтобы довести до 100%?', 'то, чтобы снова достичь 100, цена должна вырасти на 100*30/70\\xa0=\\xa0300/7% или примерно на 42,86%']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_50_39d1b4c764", "context": "", "options": ["A)453", "B)651", "C)400", "D)487", "E)286"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: 25 paise + 50 paise + 100 paise = 175 paise and Rs. 700 = 70,000 paise; int1 -> int2: 70,000/175 = 400; int2 -> int3: The answer is C);", "textual_logical_units": {"1": "В моем кошельке находится", "2": "700", "3": "рупий, среди них равное количество монет номиналом 25 пайс, 50 пайс и", "4": "одна рупия.\nСколько монет каждого номинала в кошельке?", "5": "A) 453", "6": "B) 651", "7": "C) 400", "8": "D) 487", "9": "E) 286", "10": "25 пайс + 50 пайс + 100 пайс = 175 пайс, а 700 рупий = 70000 пайс", "11": "70000/175 = 400", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['В моем кошельке находится', '700', 'рупий, среди них равное количество монет номиналом 25\\xa0пайс, 50\\xa0пайс и']\nquestion = 'одна рупия.\\nСколько монет каждого номинала в кошельке?'\nchoices = {'A': '453', 'B': '651', 'C': '400', 'D': '487', 'E': '286'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В моем кошельке находится', '700', 'рупий, среди них равное количество монет номиналом 25\\xa0пайс, 50\\xa0пайс и', 'одна рупия.\\nСколько монет каждого номинала в кошельке?']\nnew_fact = infer_new_fact(selected) # '25\\xa0пайс\\xa0+\\xa050\\xa0пайс\\xa0+\\xa0100\\xa0пайс\\xa0=\\xa0175\\xa0пайс, а 700\\xa0рупий\\xa0=\\xa070000\\xa0пайс'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25\\xa0пайс\\xa0+\\xa050\\xa0пайс\\xa0+\\xa0100\\xa0пайс\\xa0=\\xa0175\\xa0пайс, а 700\\xa0рупий\\xa0=\\xa070000\\xa0пайс']\nnew_fact = infer_new_fact(selected) # '70000/175\\xa0=\\xa0400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['70000/175\\xa0=\\xa0400']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_51_d81ed899cc", "context": "", "options": ["A)Rs. 4400", "B)Rs. 4270", "C)Rs. 4000", "D)Rs. 3937.50", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: 87 1/2% of P = 3500; int1 -> int2: ⇒ {(175/2) x P} / 100 = 3500; int2 -> int3: ∵ P = (3500 x 2 x 100) / 175 = 4000; int3 & sent3 -> int4: Correct Option: C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Человек тратит по", "2": "3500 рупий в месяц и экономит 12 1/2% от своего дохода.", "3": "Каков его ежемесячный доход?", "4": "A) руп. 4400", "5": "B) руп. 4270", "6": "C) руп. 4000", "7": "D) руп. 3937,50", "8": "E) Ничего из вышеперечисленного", "9": "87 1/2% от P = 3500", "10": "=> {(175/2) х P}/100) = 3500", "11": "∵ P = (3500 x 2 x 100)/175 = 4000", "12": "Правильный вариант: В", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Человек тратит по', '3500\\xa0рупий в месяц и экономит 12\\xa01/2%\\xa0от своего дохода.']\nquestion = 'Каков его ежемесячный доход?'\nchoices = {'A': 'руп. 4400', 'B': 'руп. 4270', 'C': 'руп. 4000', 'D': 'руп. 3937,50', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Человек тратит по', '3500\\xa0рупий в месяц и экономит 12\\xa01/2%\\xa0от своего дохода.', 'Каков его ежемесячный доход?']\nnew_fact = infer_new_fact(selected) # '87\\xa01/2% от P\\xa0=\\xa03500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['87\\xa01/2% от P\\xa0=\\xa03500']\nnew_fact = infer_new_fact(selected) # '=>\\xa0{(175/2)\\xa0х\\xa0P}/100)\\xa0=\\xa03500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0{(175/2)\\xa0х\\xa0P}/100)\\xa0=\\xa03500']\nnew_fact = infer_new_fact(selected) # '∵ P\\xa0=\\xa0(3500\\xa0x\\xa02\\xa0x\\xa0100)/175\\xa0=\\xa04000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков его ежемесячный доход?', '∵ P\\xa0=\\xa0(3500\\xa0x\\xa02\\xa0x\\xa0100)/175\\xa0=\\xa04000']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_52_72035b63e2", "context": "", "options": ["A)4", "B)5", "C)7", "D)6", "E)8"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: Five dozen = 5 x 12 = 60; int1 & sent1 -> int2: ⇒ No of toys can be kept in 1 box = 60; int2 & sent2 -> int3: ∴ No of toys can be kept in 98 boxes = 60 x 98 = 5880; int3 & sent3 -> int4: ∴ 29400 toys can be lifted by = 29400 / 5880 = 5 tempos; int4 & sent3 -> int5: Option: B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "В одну коробку упакованы пять дюжин игрушек, и", "2": "на одном подъемнике помещается 98 коробок.", "3": "Сколько подъемников смогут поднять 29400 игрушек за один раз?", "4": "A) 4", "5": "B) 5", "6": "C) 7", "7": "D) 6", "8": "E) 8", "9": "Пять дюжин = 5 x 12 = 60", "10": "⇒ Количество игрушек, которые помещаются в 1 коробке = 60", "11": "∴ Количество игрушек, которые помещаются в 98 коробках = 60 x 98 = 5880", "12": "∴ 29 400 игрушек могут поднять = 29 400/5880 = 5 подъемников", "13": "Вариант: Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['В одну коробку упакованы пять дюжин игрушек, и', 'на одном подъемнике помещается 98\\xa0коробок.']\nquestion = 'Сколько подъемников смогут поднять 29400\\xa0игрушек за один раз?'\nchoices = {'A': '4', 'B': '5', 'C': '7', 'D': '6', 'E': '8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В одну коробку упакованы пять дюжин игрушек, и']\nnew_fact = infer_new_fact(selected) # 'Пять дюжин\\xa0=\\xa05\\xa0x\\xa012\\xa0=\\xa060'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В одну коробку упакованы пять дюжин игрушек, и', 'Пять дюжин\\xa0=\\xa05\\xa0x\\xa012\\xa0=\\xa060']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0Количество игрушек, которые помещаются в 1\\xa0коробке\\xa0=\\xa060'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на одном подъемнике помещается 98\\xa0коробок.', '⇒\\xa0Количество игрушек, которые помещаются в 1\\xa0коробке\\xa0=\\xa060']\nnew_fact = infer_new_fact(selected) # '∴ Количество игрушек, которые помещаются в 98\\xa0коробках\\xa0=\\xa060\\xa0x\\xa098\\xa0=\\xa05880'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько подъемников смогут поднять 29400\\xa0игрушек за один раз?', '∴ Количество игрушек, которые помещаются в 98\\xa0коробках\\xa0=\\xa060\\xa0x\\xa098\\xa0=\\xa05880']\nnew_fact = infer_new_fact(selected) # '∴ 29\\xa0400\\xa0игрушек могут поднять\\xa0=\\xa029\\xa0400/5880\\xa0=\\xa05\\xa0подъемников'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько подъемников смогут поднять 29400\\xa0игрушек за один раз?', '∴ 29\\xa0400\\xa0игрушек могут поднять\\xa0=\\xa029\\xa0400/5880\\xa0=\\xa05\\xa0подъемников']\nnew_fact = infer_new_fact(selected) # 'Вариант: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_53_408d4e0231", "context": "", "options": ["A)45", "B)90", "C)120", "D)150", "E)180"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Required number of ways = 10C2 = 10*9/2 = 45; int1 & sent2 & sent3 -> int2: Answer is A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "В корзине 10 апельсинов.", "2": "Найдите количество", "3": "способов, которыми можно выбрать 2 апельсина из корзины.", "4": "A) 45", "5": "B) 90", "6": "C) 120", "7": "D) 150", "8": "E) 180", "9": "Требуемое количество способов = 10C2 = 10*9/2 = 45", "10": "Ответ — A", "11": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['В корзине 10\\xa0апельсинов.', 'Найдите количество']\nquestion = 'способов, которыми можно выбрать 2\\xa0апельсина из корзины.'\nchoices = {'A': '45', 'B': '90', 'C': '120', 'D': '150', 'E': '180'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В корзине 10\\xa0апельсинов.', 'Найдите количество', 'способов, которыми можно выбрать 2\\xa0апельсина из корзины.']\nnew_fact = infer_new_fact(selected) # 'Требуемое количество способов\\xa0=\\xa010C2\\xa0=\\xa010*9/2\\xa0=\\xa045'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите количество', 'способов, которыми можно выбрать 2\\xa0апельсина из корзины.', 'Требуемое количество способов\\xa0=\\xa010C2\\xa0=\\xa010*9/2\\xa0=\\xa045']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_54_202e547a97", "context": "", "options": ["A)7", "B)8", "C)10", "D)11", "E)12"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [2, 3, 4, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 11, 12], "consequent": 13}, {"antecedents": [1, 11], "consequent": 14}, {"antecedents": [11, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [5, 16, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent1 -> int1: let x is amount of work to be done to paint one house.; int1 & sent2 & sent3 & sent4 -> int2: So Brown's one day work is x/6, black's can do x/8 work in; int1 & int2 & sent2 & sent3 & sent4 -> int3: one day and blue is x/12.; int1 & sent1 -> int4: Total houses is 3, so tatal work to be done is 3x.; int1 & int2 & int3 & int4 -> int5: 3x= 8*(x/6) + 6*(x/8) + y*(x/12); int5 -> int6: finally y = 11.; int6 -> int7: blue will complete the remaining work in 11 days.; int6 & int7 & sent5 -> int8: ANSWER:D; int8 -> int9: The answer is D);", "textual_logical_units": {"1": "Компания заключает контракт на покраску 3 домов.", "2": "Маляр Белов может покрасить дом за 6 дней, Чернов — за 8 дней, а Краснов — за 12 дней.", "3": "Через 8 дней Белов отправляется в отпуск, а", "4": "Чернов приступает к работе и выполняет ее в течение 6 дней.", "5": "Сколько дней потребуется Краснову на завершение контракта?", "6": "A) 7", "7": "B) 8", "8": "C) 10", "9": "D) 11", "10": "E) 12", "11": "Пусть x — объем работы, которую нужно выполнить, чтобы покрасить один дом.", "12": "Таким образом, однодневная работа Белова составляет x/6, Чернова — x/8 за", "13": "один день, а Краснова — x/12.", "14": "Всего домов 3, поэтому общий объем работ, которые необходимо выполнить, равен 3x.", "15": "3x = 8*(x/6) + 6*(x/8) + y*(x/12)", "16": "Наконец, y = 11.", "17": "Краснов выполнит оставшуюся работу за 11 дней.", "18": "ОТВЕТ: Г", "19": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Компания заключает контракт на покраску 3\\xa0домов.',\n  'Маляр Белов может покрасить дом за 6\\xa0дней, Чернов\\xa0— за 8\\xa0дней, а Краснов\\xa0— за 12\\xa0дней.',\n  'Через 8\\xa0дней Белов отправляется в отпуск, а',\n  'Чернов приступает к работе и выполняет ее в течение 6\\xa0дней.']\nquestion = 'Сколько дней потребуется Краснову на завершение контракта?'\nchoices = {'A': '7', 'B': '8', 'C': '10', 'D': '11', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Компания заключает контракт на покраску 3\\xa0домов.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— объем работы, которую нужно выполнить, чтобы покрасить один дом.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Маляр Белов может покрасить дом за 6\\xa0дней, Чернов\\xa0— за 8\\xa0дней, а Краснов\\xa0— за 12\\xa0дней.', 'Через 8\\xa0дней Белов отправляется в отпуск, а', 'Чернов приступает к работе и выполняет ее в течение 6\\xa0дней.', 'Пусть x\\xa0— объем работы, которую нужно выполнить, чтобы покрасить один дом.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, однодневная работа Белова составляет x/6, Чернова\\xa0— x/8 за'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Маляр Белов может покрасить дом за 6\\xa0дней, Чернов\\xa0— за 8\\xa0дней, а Краснов\\xa0— за 12\\xa0дней.', 'Через 8\\xa0дней Белов отправляется в отпуск, а', 'Чернов приступает к работе и выполняет ее в течение 6\\xa0дней.', 'Пусть x\\xa0— объем работы, которую нужно выполнить, чтобы покрасить один дом.', 'Таким образом, однодневная работа Белова составляет x/6, Чернова\\xa0— x/8 за']\nnew_fact = infer_new_fact(selected) # 'один день, а Краснова\\xa0— x/12.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания заключает контракт на покраску 3\\xa0домов.', 'Пусть x\\xa0— объем работы, которую нужно выполнить, чтобы покрасить один дом.']\nnew_fact = infer_new_fact(selected) # 'Всего домов 3, поэтому общий объем работ, которые необходимо выполнить, равен 3x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— объем работы, которую нужно выполнить, чтобы покрасить один дом.', 'Таким образом, однодневная работа Белова составляет x/6, Чернова\\xa0— x/8 за', 'один день, а Краснова\\xa0— x/12.', 'Всего домов 3, поэтому общий объем работ, которые необходимо выполнить, равен 3x.']\nnew_fact = infer_new_fact(selected) # '3x\\xa0=\\xa08*(x/6)\\xa0+\\xa06*(x/8)\\xa0+\\xa0y*(x/12)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x\\xa0=\\xa08*(x/6)\\xa0+\\xa06*(x/8)\\xa0+\\xa0y*(x/12)']\nnew_fact = infer_new_fact(selected) # 'Наконец, y\\xa0=\\xa011.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Наконец, y\\xa0=\\xa011.']\nnew_fact = infer_new_fact(selected) # 'Краснов выполнит оставшуюся работу за 11\\xa0дней.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько дней потребуется Краснову на завершение контракта?', 'Наконец, y\\xa0=\\xa011.', 'Краснов выполнит оставшуюся работу за 11\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_55_9be1fb5899", "context": "", "options": ["A)272 minutes", "B)304 minutes", "C)190 minutes", "D)70 minutes", "E)35 minutes"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: We have to find the LCM:; sent1 & sent2 -> int2: 17 is a prime number which means the LCM of 16 and 17 has to be 16*17=272; int2 & sent4 -> int3: Correct answer is A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Поезд А отправляется со станции каждые 16 минут, а", "2": "Поезд B — каждые 17 минут.", "3": "Если оба поезда отправились со станции одновременно,", "4": "сколько времени пройдет, прежде чем они сделают это снова?", "5": "A) 272 минуты", "6": "B) 304 минуты", "7": "C) 190 минут", "8": "D) 70 минуты", "9": "E) 35 минуты", "10": "Необходимо найти наименьшее общее кратное:", "11": "17 — простое число. Это означает, что наименьшее общее кратное чисел 16 и 17 должно быть равно 16*17 = 272", "12": "Правильный ответ — A.", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Поезд А отправляется со станции каждые 16\\xa0минут, а', 'Поезд B\\xa0— каждые 17\\xa0минут.', 'Если оба поезда отправились со станции одновременно,']\nquestion = 'сколько времени пройдет, прежде чем они сделают это снова?'\nchoices = {'A': '272\\xa0минуты', 'B': '304\\xa0минуты', 'C': '190\\xa0минут', 'D': '70\\xa0минуты', 'E': '35\\xa0минуты'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Необходимо найти наименьшее общее кратное:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд А отправляется со станции каждые 16\\xa0минут, а', 'Поезд B\\xa0— каждые 17\\xa0минут.']\nnew_fact = infer_new_fact(selected) # '17\\xa0— простое число. Это означает, что наименьшее общее кратное чисел 16 и 17 должно быть равно 16*17\\xa0=\\xa0272'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько времени пройдет, прежде чем они сделают это снова?', '17\\xa0— простое число. Это означает, что наименьшее общее кратное чисел 16 и 17 должно быть равно 16*17\\xa0=\\xa0272']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_56_065372bad1", "context": "", "options": ["A)438", "B)550", "C)500", "D)450", "E)498"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 2], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [3], "consequent": 15}, {"antecedents": [3, 14, 15], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [1], "consequent": 18}, {"antecedents": [2], "consequent": 19}, {"antecedents": [18, 19], "consequent": 20}, {"antecedents": [17, 18, 19, 20], "consequent": 21}, {"antecedents": [16, 17, 18, 20, 21], "consequent": 22}, {"antecedents": [3, 4, 9, 12, 16, 17, 18, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "linearized_output_en": "sent1 -> int1: Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3; sent1 & sent2 -> int2: Size of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm; int2 -> int3: Volume of hollow cube = 3*3*3 = 27 cm3; int1 & int2 & int3 -> int4: So Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube; int4 -> int5: = 125 - 27; int5 -> int6: = 98 cm3; sent3 -> int7: Volume of 1 small cube = 1*1*1 = 1 cm3; int6 & int7 & sent3 -> int8: Total number of small cubes in the larger cube = 98 / 1 = 98; int6 & int7 & int8 -> int9: and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces; sent1 -> int10: Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2; sent2 -> int11: Surface area of one face of small cube = 1*1 = 1cm2; int10 & int11 -> int12: Number of faces of small cube painted = 150/1 = 150 faces; int10 & int11 & int12 & int9 -> int13: Hence number of faces of the smaller cubes remain unpainted= 588-150; int10 & int12 & int13 & int8 & int9 -> int14: = 438; int1 & int10 & int12 & int13 & int14 & int4 & int8 & int9 & sent3 & sent4 -> int15: answer.A; int15 -> int16: The answer is A);", "textual_logical_units": {"1": "Возьмем полый куб с ребрами длиной 5 см,", "2": "толщина куба — 1 см.", "3": "Он сделан из небольших кубиков размером 1 см. Если окрасить внешнюю поверхность куба, сколько граней небольших кубиков останутся неокрашенными?", "4": "A) 438", "5": "B) 550", "6": "C) 500", "7": "D) 450", "8": "E) 498", "9": "Объем большого куба, при условии, что он не полый = L3 = 5*5*5 = 125 см3", "10": "Длина ребра внутренней части куба (учитывая толщину 1 см на двух гранях большого кубA) = 5 - 2 = 3 см", "11": "Объем внутренней части куба = 3*3*3 = 27 см3", "12": "Поэтому общий объем, заполненный небольшими кубиками = объем большого куба - объем внутренней части куба", "13": "98", "14": "= 98 см3", "15": "Объем 1 маленького кубика = 1*1*1 = 1 см3", "16": "Общее количество маленьких кубиков в большом кубе = 98/1 = 98,", "17": "а количество граней 98 маленьких кубиков (по 6 граней у каждого) = 98*6 = 588 граней", "18": "Общая площадь поверхности 6 граней окрашенного большого куба = 6*L2 = 6*5*5 = 150 см2", "19": "Площадь поверхности одной грани маленького кубика = 1*1 = 1 см2", "20": "Количество окрашенных граней маленьких кубиков = 150/1 = 150 граней", "21": "Следовательно, количество граней небольших кубиков, оставшихся неокрашенными = 588 - 150", "22": "438", "23": "Ответ — А", "24": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Возьмем полый куб с ребрами длиной 5\\xa0см,', 'толщина куба\\xa0— 1\\xa0см.']\nquestion = 'Он сделан из небольших кубиков размером 1\\xa0см. Если окрасить внешнюю поверхность куба, сколько граней небольших кубиков останутся неокрашенными?'\nchoices = {'A': '438', 'B': '550', 'C': '500', 'D': '450', 'E': '498'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Возьмем полый куб с ребрами длиной 5\\xa0см,']\nnew_fact = infer_new_fact(selected) # 'Объем большого куба, при условии, что он не полый\\xa0=\\xa0L3\\xa0=\\xa05*5*5\\xa0=\\xa0125\\xa0см3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Возьмем полый куб с ребрами длиной 5\\xa0см,', 'толщина куба\\xa0— 1\\xa0см.']\nnew_fact = infer_new_fact(selected) # 'Длина ребра внутренней части куба (учитывая толщину 1\\xa0см на двух гранях большого кубA)\\xa0=\\xa05\\xa0-\\xa02\\xa0=\\xa03\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Длина ребра внутренней части куба (учитывая толщину 1\\xa0см на двух гранях большого кубA)\\xa0=\\xa05\\xa0-\\xa02\\xa0=\\xa03\\xa0см']\nnew_fact = infer_new_fact(selected) # 'Объем внутренней части куба\\xa0=\\xa03*3*3\\xa0=\\xa027\\xa0см3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Объем большого куба, при условии, что он не полый\\xa0=\\xa0L3\\xa0=\\xa05*5*5\\xa0=\\xa0125\\xa0см3', 'Длина ребра внутренней части куба (учитывая толщину 1\\xa0см на двух гранях большого кубA)\\xa0=\\xa05\\xa0-\\xa02\\xa0=\\xa03\\xa0см', 'Объем внутренней части куба\\xa0=\\xa03*3*3\\xa0=\\xa027\\xa0см3']\nnew_fact = infer_new_fact(selected) # 'Поэтому общий объем, заполненный небольшими кубиками\\xa0=\\xa0объем большого куба\\xa0-\\xa0объем внутренней части куба'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поэтому общий объем, заполненный небольшими кубиками\\xa0=\\xa0объем большого куба\\xa0-\\xa0объем внутренней части куба']\nnew_fact = infer_new_fact(selected) # '98'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['98']\nnew_fact = infer_new_fact(selected) # '=\\xa098\\xa0см3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он сделан из небольших кубиков размером 1\\xa0см. Если окрасить внешнюю поверхность куба, сколько граней небольших кубиков останутся неокрашенными?']\nnew_fact = infer_new_fact(selected) # 'Объем 1\\xa0маленького кубика\\xa0=\\xa01*1*1\\xa0=\\xa01\\xa0см3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он сделан из небольших кубиков размером 1\\xa0см. Если окрасить внешнюю поверхность куба, сколько граней небольших кубиков останутся неокрашенными?', '=\\xa098\\xa0см3', 'Объем 1\\xa0маленького кубика\\xa0=\\xa01*1*1\\xa0=\\xa01\\xa0см3']\nnew_fact = infer_new_fact(selected) # 'Общее количество маленьких кубиков в большом кубе\\xa0=\\xa098/1\\xa0=\\xa098,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa098\\xa0см3', 'Объем 1\\xa0маленького кубика\\xa0=\\xa01*1*1\\xa0=\\xa01\\xa0см3', 'Общее количество маленьких кубиков в большом кубе\\xa0=\\xa098/1\\xa0=\\xa098,']\nnew_fact = infer_new_fact(selected) # 'а количество граней 98\\xa0маленьких кубиков (по 6\\xa0граней у каждого)\\xa0=\\xa098*6\\xa0=\\xa0588\\xa0граней'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Возьмем полый куб с ребрами длиной 5\\xa0см,']\nnew_fact = infer_new_fact(selected) # 'Общая площадь поверхности 6\\xa0граней окрашенного большого куба\\xa0=\\xa06*L2\\xa0=\\xa06*5*5\\xa0=\\xa0150\\xa0см2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['толщина куба\\xa0— 1\\xa0см.']\nnew_fact = infer_new_fact(selected) # 'Площадь поверхности одной грани маленького кубика\\xa0=\\xa01*1\\xa0=\\xa01\\xa0см2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая площадь поверхности 6\\xa0граней окрашенного большого куба\\xa0=\\xa06*L2\\xa0=\\xa06*5*5\\xa0=\\xa0150\\xa0см2', 'Площадь поверхности одной грани маленького кубика\\xa0=\\xa01*1\\xa0=\\xa01\\xa0см2']\nnew_fact = infer_new_fact(selected) # 'Количество окрашенных граней маленьких кубиков\\xa0=\\xa0150/1\\xa0=\\xa0150\\xa0граней'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а количество граней 98\\xa0маленьких кубиков (по 6\\xa0граней у каждого)\\xa0=\\xa098*6\\xa0=\\xa0588\\xa0граней', 'Общая площадь поверхности 6\\xa0граней окрашенного большого куба\\xa0=\\xa06*L2\\xa0=\\xa06*5*5\\xa0=\\xa0150\\xa0см2', 'Площадь поверхности одной грани маленького кубика\\xa0=\\xa01*1\\xa0=\\xa01\\xa0см2', 'Количество окрашенных граней маленьких кубиков\\xa0=\\xa0150/1\\xa0=\\xa0150\\xa0граней']\nnew_fact = infer_new_fact(selected) # 'Следовательно, количество граней небольших кубиков, оставшихся неокрашенными\\xa0=\\xa0588\\xa0-\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее количество маленьких кубиков в большом кубе\\xa0=\\xa098/1\\xa0=\\xa098,', 'а количество граней 98\\xa0маленьких кубиков (по 6\\xa0граней у каждого)\\xa0=\\xa098*6\\xa0=\\xa0588\\xa0граней', 'Общая площадь поверхности 6\\xa0граней окрашенного большого куба\\xa0=\\xa06*L2\\xa0=\\xa06*5*5\\xa0=\\xa0150\\xa0см2', 'Количество окрашенных граней маленьких кубиков\\xa0=\\xa0150/1\\xa0=\\xa0150\\xa0граней', 'Следовательно, количество граней небольших кубиков, оставшихся неокрашенными\\xa0=\\xa0588\\xa0-\\xa0150']\nnew_fact = infer_new_fact(selected) # '438'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он сделан из небольших кубиков размером 1\\xa0см. Если окрасить внешнюю поверхность куба, сколько граней небольших кубиков останутся неокрашенными?', 'A) 438', 'Объем большого куба, при условии, что он не полый\\xa0=\\xa0L3\\xa0=\\xa05*5*5\\xa0=\\xa0125\\xa0см3', 'Поэтому общий объем, заполненный небольшими кубиками\\xa0=\\xa0объем большого куба\\xa0-\\xa0объем внутренней части куба', 'Общее количество маленьких кубиков в большом кубе\\xa0=\\xa098/1\\xa0=\\xa098,', 'а количество граней 98\\xa0маленьких кубиков (по 6\\xa0граней у каждого)\\xa0=\\xa098*6\\xa0=\\xa0588\\xa0граней', 'Общая площадь поверхности 6\\xa0граней окрашенного большого куба\\xa0=\\xa06*L2\\xa0=\\xa06*5*5\\xa0=\\xa0150\\xa0см2', 'Количество окрашенных граней маленьких кубиков\\xa0=\\xa0150/1\\xa0=\\xa0150\\xa0граней', 'Следовательно, количество граней небольших кубиков, оставшихся неокрашенными\\xa0=\\xa0588\\xa0-\\xa0150', '438']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_57_b946bedacd", "context": "", "options": ["A)1%", "B)2%", "C)5%", "D)9%", "E)10%"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 8, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.; int1 & sent3 -> int2: 90% of 90% are squashed, i.e. 81% are squashed.; int1 & int2 & sent4 -> int3: Vanilla flavored and non squashed= 90-81= 9%; int1 & int2 & int3 & sent4 & sent8 -> int4: D is the answer; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "В кондитерской все шоколадные конфеты имеют только вкус ванили или какао.", "2": "10% шоколадных конфет со вкусом какао,", "3": "90% остальных раздавлены.", "4": "Какой процент шоколадных конфет имеет вкус ванили и не раздавлен?", "5": "A) 1%", "6": "B) 2%", "7": "C) 5%", "8": "D) 9%", "9": "E) 10%", "10": "Если 10% конфет имеют вкус какао, то 90% — со вкусом ванили.", "11": "90% из 90%, то есть 81%, раздавлены.", "12": "Со вкусом ванили и не раздавлены = 90-81 = 9%", "13": "Ответ — Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['В кондитерской все шоколадные конфеты имеют только вкус ванили или какао.', '10%\\xa0шоколадных конфет со вкусом какао,', '90%\\xa0остальных раздавлены.']\nquestion = 'Какой процент шоколадных конфет имеет вкус ванили и не раздавлен?'\nchoices = {'A': '1%', 'B': '2%', 'C': '5%', 'D': '9%', 'E': '10%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В кондитерской все шоколадные конфеты имеют только вкус ванили или какао.', '10%\\xa0шоколадных конфет со вкусом какао,']\nnew_fact = infer_new_fact(selected) # 'Если 10%\\xa0конфет имеют вкус какао, то 90%\\xa0— со вкусом ванили.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['90%\\xa0остальных раздавлены.', 'Если 10%\\xa0конфет имеют вкус какао, то 90%\\xa0— со вкусом ванили.']\nnew_fact = infer_new_fact(selected) # '90% из 90%, то есть 81%, раздавлены.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой процент шоколадных конфет имеет вкус ванили и не раздавлен?', 'Если 10%\\xa0конфет имеют вкус какао, то 90%\\xa0— со вкусом ванили.', '90% из 90%, то есть 81%, раздавлены.']\nnew_fact = infer_new_fact(selected) # 'Со вкусом ванили и не раздавлены\\xa0=\\xa090-81\\xa0=\\xa09%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой процент шоколадных конфет имеет вкус ванили и не раздавлен?', 'D) 9%', 'Если 10%\\xa0конфет имеют вкус какао, то 90%\\xa0— со вкусом ванили.', '90% из 90%, то есть 81%, раздавлены.', 'Со вкусом ванили и не раздавлены\\xa0=\\xa090-81\\xa0=\\xa09%']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_58_e95d3ac20b", "context": "", "options": ["A)25 days", "B)26 days", "C)27 days", "D)28 days", "E)29 days"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [5, 9, 11, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: frog jumps 3 m up day & falls back 2 m down at night; int1 & sent3 & sent4 -> int2: so,frog will be 3-2=1 m up in a day.; int1 & int2 -> int3: Thus, in 27 days it will be 27 m up; int1 & int2 & int3 -> int4: on 28 th day it will be at top i.e 27+3 = 30 m & will not fall down.; int1 & int3 & int4 & sent5 & sent9 -> int5: ANSWER:D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "На дне колодца глубиной 30 м", "2": "находится лягушка.", "3": "Она прыгает на 3 м вверх в день и", "4": "в тот же день падает на 2 м вниз.", "5": "Через сколько дней лягушка выберется из колодца?", "6": "A) 25 дней", "7": "B) 26 дней", "8": "C) 27 дней", "9": "D) 28 дней", "10": "E) 29 дней", "11": "Лягушка прыгает на 3 м вверх днем и падает на 2 м вниз ночью,", "12": "поэтому за день лягушка поднимается на высоту 3 - 2 = 1 м.", "13": "Таким образом, через 27 дней она поднимется на 27 метров", "14": "На 28-й день она окажется наверху (27+3 = 30 м) и не упадет вниз.", "15": "ОТВЕТ: Г", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['На дне колодца глубиной 30\\xa0м', 'находится лягушка.', 'Она прыгает на 3\\xa0м вверх в день и', 'в тот же день падает на 2\\xa0м вниз.']\nquestion = 'Через сколько дней лягушка выберется из колодца?'\nchoices = {'A': '25\\xa0дней', 'B': '26\\xa0дней', 'C': '27\\xa0дней', 'D': '28\\xa0дней', 'E': '29\\xa0дней'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Она прыгает на 3\\xa0м вверх в день и', 'в тот же день падает на 2\\xa0м вниз.']\nnew_fact = infer_new_fact(selected) # 'Лягушка прыгает на 3\\xa0м вверх днем и падает на 2\\xa0м вниз ночью,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она прыгает на 3\\xa0м вверх в день и', 'в тот же день падает на 2\\xa0м вниз.', 'Лягушка прыгает на 3\\xa0м вверх днем и падает на 2\\xa0м вниз ночью,']\nnew_fact = infer_new_fact(selected) # 'поэтому за день лягушка поднимается на высоту 3\\xa0-\\xa02\\xa0=\\xa01\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Лягушка прыгает на 3\\xa0м вверх днем и падает на 2\\xa0м вниз ночью,', 'поэтому за день лягушка поднимается на высоту 3\\xa0-\\xa02\\xa0=\\xa01\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, через 27\\xa0дней она поднимется на 27\\xa0метров'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Лягушка прыгает на 3\\xa0м вверх днем и падает на 2\\xa0м вниз ночью,', 'поэтому за день лягушка поднимается на высоту 3\\xa0-\\xa02\\xa0=\\xa01\\xa0м.', 'Таким образом, через 27\\xa0дней она поднимется на 27\\xa0метров']\nnew_fact = infer_new_fact(selected) # 'На 28-й день она окажется наверху (27+3\\xa0=\\xa030\\xa0м) и не упадет вниз.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько дней лягушка выберется из колодца?', 'D) 28\\xa0дней', 'Лягушка прыгает на 3\\xa0м вверх днем и падает на 2\\xa0м вниз ночью,', 'Таким образом, через 27\\xa0дней она поднимется на 27\\xa0метров', 'На 28-й день она окажется наверху (27+3\\xa0=\\xa030\\xa0м) и не упадет вниз.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_59_f79174751b", "context": "", "options": ["A)47", "B)91", "C)41", "D)67", "E)44"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [2, 9, 11], "consequent": 12}, {"antecedents": [2, 9, 11], "consequent": 13}, {"antecedents": [2, 9, 11], "consequent": 14}, {"antecedents": [1, 2, 5, 9, 11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: perfect square:- 1,4,9,16,25,36; int1 & sent1 -> int2: sum=square*10=10,40,90,160,250,360; int1 & int2 & sent1 -> int3: sum of 4 odd consecutive numbers is multiple of 4; int1 & int2 & int3 -> int4: so the only number left are 40,160,360; int2 & int4 & sent2 -> int5: sum/4=40/4=10 is not possible; int2 & int4 & sent2 -> int6: sum/4=360/4=90 is not possible; int2 & int4 & sent2 -> int7: sum/4=160/4=40 is the only option available i.e 41; int2 & int4 & int7 & sent1 & sent2 & sent5 -> int8: ANSWER:C; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "Сумма 5 последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,", "2": "какое из следующих чисел может быть одним из этих 5?", "3": "A) 47", "4": "B) 91", "5": "C) 41", "6": "D) 67", "7": "E) 44", "8": "Идеальный квадрат: 1, 4, 9, 16, 25, 36", "9": "Сумма = квадрат*10 = 10, 40, 90, 160, 250, 360", "10": "Сумма 4 нечетных последовательных чисел кратна 4,", "11": "поэтому остаются только числа 40, 160, 360", "12": "Сумма/4 = 40/4 = 10 — невозможно", "13": "Сумма/4 = 360/4 = 90 — невозможно", "14": "Сумма/4 = 160/4 = 40 — единственный доступный вариант, т.е. 41", "15": "ОТВЕТ: В", "16": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Сумма 5\\xa0последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,']\nquestion = 'какое из следующих чисел может быть одним из этих 5?'\nchoices = {'A': '47', 'B': '91', 'C': '41', 'D': '67', 'E': '44'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сумма 5\\xa0последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,']\nnew_fact = infer_new_fact(selected) # 'Идеальный квадрат: 1, 4, 9, 16, 25, 36'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сумма 5\\xa0последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,', 'Идеальный квадрат: 1, 4, 9, 16, 25, 36']\nnew_fact = infer_new_fact(selected) # 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сумма 5\\xa0последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,', 'Идеальный квадрат: 1, 4, 9, 16, 25, 36', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360']\nnew_fact = infer_new_fact(selected) # 'Сумма 4\\xa0нечетных последовательных чисел кратна 4,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Идеальный квадрат: 1, 4, 9, 16, 25, 36', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360', 'Сумма 4\\xa0нечетных последовательных чисел кратна 4,']\nnew_fact = infer_new_fact(selected) # 'поэтому остаются только числа 40, 160, 360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое из следующих чисел может быть одним из этих 5?', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360', 'поэтому остаются только числа 40, 160, 360']\nnew_fact = infer_new_fact(selected) # 'Сумма/4\\xa0=\\xa040/4\\xa0=\\xa010\\xa0— невозможно'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое из следующих чисел может быть одним из этих 5?', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360', 'поэтому остаются только числа 40, 160, 360']\nnew_fact = infer_new_fact(selected) # 'Сумма/4\\xa0=\\xa0360/4\\xa0=\\xa090\\xa0— невозможно'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое из следующих чисел может быть одним из этих 5?', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360', 'поэтому остаются только числа 40, 160, 360']\nnew_fact = infer_new_fact(selected) # 'Сумма/4\\xa0=\\xa0160/4\\xa0=\\xa040\\xa0— единственный доступный вариант, т.е. 41'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сумма 5\\xa0последовательных двухзначных нечетных чисел при делении на 10 становится идеальным квадратом,', 'какое из следующих чисел может быть одним из этих 5?', 'C) 41', 'Сумма\\xa0=\\xa0квадрат*10\\xa0=\\xa010, 40, 90, 160, 250, 360', 'поэтому остаются только числа 40, 160, 360', 'Сумма/4\\xa0=\\xa0160/4\\xa0=\\xa040\\xa0— единственный доступный вариант, т.е. 41']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_60_62e480d22b", "context": "", "options": ["A)850", "B)800", "C)900", "D)950", "E)1000"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [12], "consequent": 14}, {"antecedents": [5, 10, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let x is total no. of students; sent1 & sent2 & sent3 & sent4 & sent5 & sent6 -> int2: 8x/100+4x/5+10x/100+20=x; sent0 -> int3: By solving this; int2 -> int4: x=1000; int2 & int4 & sent10 & sent5 -> int5: ANSWER:E; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "В классе 8% от общего числа учеников интересуются футболом.", "2": "4/5 от общего числа учеников интересуются крикетом.", "3": "10% от общего числа учеников интересуются баскетболом, а", "4": "оставшиеся 20 учеников не интересуются никакими играми.", "5": "Сколько учеников в классе?", "6": "A) 850", "7": "B) 800", "8": "C) 900", "9": "D) 950", "10": "E) 1000", "11": "Пусть x — общее количество учеников", "12": "8x/100 + 4x/5 + 10x/100 + 20 = x", "13": "Решая это уравнение, получаем", "14": "x = 1000", "15": "ОТВЕТ: Д", "16": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'В классе 8%\\xa0от общего числа учеников интересуются футболом.',\n  '4/5\\xa0от общего числа учеников интересуются крикетом.',\n  '10%\\xa0от общего числа учеников интересуются баскетболом, а',\n  'оставшиеся 20\\xa0учеников не интересуются никакими играми.']\nquestion = 'Сколько учеников в классе?'\nchoices = {'A': '850', 'B': '800', 'C': '900', 'D': '950', 'E': '1000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В классе 8%\\xa0от общего числа учеников интересуются футболом.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— общее количество учеников'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В классе 8%\\xa0от общего числа учеников интересуются футболом.', '4/5\\xa0от общего числа учеников интересуются крикетом.', '10%\\xa0от общего числа учеников интересуются баскетболом, а', 'оставшиеся 20\\xa0учеников не интересуются никакими играми.', 'Сколько учеников в классе?', 'A) 850']\nnew_fact = infer_new_fact(selected) # '8x/100\\xa0+\\xa04x/5\\xa0+\\xa010x/100\\xa0+\\xa020\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Решая это уравнение, получаем'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8x/100\\xa0+\\xa04x/5\\xa0+\\xa010x/100\\xa0+\\xa020\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa01000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько учеников в классе?', 'E) 1000', '8x/100\\xa0+\\xa04x/5\\xa0+\\xa010x/100\\xa0+\\xa020\\xa0=\\xa0x', 'x\\xa0=\\xa01000']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_61_d4a00a0c42", "context": "", "options": ["A)22", "B)27", "C)29", "D)Cannot be determined", "E)None of the above"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 9, 10], "consequent": 11}, {"antecedents": [3, 9, 10, 11], "consequent": 12}, {"antecedents": [3, 7, 9, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: R - Q = R - T; int1 -> int2: Q = T.; int1 & int2 & sent2 -> int3: Also R + T = 50; R + Q = 50; int1 & int2 & int3 & sent3 -> int4: So, (R - Q) cannot be determined.; int1 & int3 & int4 & sent3 & sent7 -> int5: Answer:D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Q настолько же моложе R, насколько старше T.", "2": "Если сумма возрастов R и T равна 50 годам,", "3": "какая разница в возрасте точно будет у R и Q?", "4": "A) 22", "5": "B) 27", "6": "C) 29", "7": "D) Невозможно определить", "8": "E) Ничего из вышеперечисленного", "9": "R - Q = R - T", "10": "Q = T.", "11": "Также R + T = 50; R + Q = 50", "12": "Таким образом, (R - Q) невозможно определить.", "13": "Ответ: Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Q настолько же моложе R, насколько старше T.', 'Если сумма возрастов R и T равна 50\\xa0годам,']\nquestion = 'какая разница в возрасте точно будет у R и Q?'\nchoices = {'A': '22', 'B': '27', 'C': '29', 'D': 'Невозможно определить', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Q настолько же моложе R, насколько старше T.']\nnew_fact = infer_new_fact(selected) # 'R\\xa0-\\xa0Q\\xa0=\\xa0R\\xa0-\\xa0T'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R\\xa0-\\xa0Q\\xa0=\\xa0R\\xa0-\\xa0T']\nnew_fact = infer_new_fact(selected) # 'Q\\xa0=\\xa0T.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если сумма возрастов R и T равна 50\\xa0годам,', 'R\\xa0-\\xa0Q\\xa0=\\xa0R\\xa0-\\xa0T', 'Q\\xa0=\\xa0T.']\nnew_fact = infer_new_fact(selected) # 'Также R\\xa0+\\xa0T\\xa0=\\xa050; R\\xa0+\\xa0Q\\xa0=\\xa050'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какая разница в возрасте точно будет у R и Q?', 'R\\xa0-\\xa0Q\\xa0=\\xa0R\\xa0-\\xa0T', 'Q\\xa0=\\xa0T.', 'Также R\\xa0+\\xa0T\\xa0=\\xa050; R\\xa0+\\xa0Q\\xa0=\\xa050']\nnew_fact = infer_new_fact(selected) # 'Таким образом, (R\\xa0-\\xa0Q) невозможно определить.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какая разница в возрасте точно будет у R и Q?', 'D) Невозможно определить', 'R\\xa0-\\xa0Q\\xa0=\\xa0R\\xa0-\\xa0T', 'Также R\\xa0+\\xa0T\\xa0=\\xa050; R\\xa0+\\xa0Q\\xa0=\\xa050', 'Таким образом, (R\\xa0-\\xa0Q) невозможно определить.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_62_c7e94f926f", "context": "", "options": ["A)11.75 miles", "B)12.75 miles", "C)17.75 miles", "D)14.75 miles", "E)10.75 miles"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 2, 4, 9, 10], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: Subtract the fee for te first quarter mile $8.50 - $3.50 = $5; sent1 & sent2 -> int2: Calculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles; int1 & int2 -> int3: Total distance is 12.5 miles + 1/4 (first quarter mile); int3 -> int4: 12.75 miles; int2 & int3 & sent1 & sent2 & sent4 -> int5: Answer: B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Рассчитайте максимальное расстояние, которое можно проехать, потратив 8,50 долл. США на такси, которое стоит 3,50 долл. США за первую четверть мили и", "2": "10 центов за каждую следующую четверть мили.", "3": "A) 11,75 мили", "4": "B) 12,75 мили", "5": "C) 17,75 мили", "6": "D) 14,75 мили", "7": "E) 10,75 мили", "8": "Вычитаем плату за первую четверть мили: 8,50 - 3,50 долл. США = 5 долл. США", "9": "Рассчитываем количество следующих четвертей мили — 5/10 центов => 50 четвертей мили => 12,5 мили", "10": "Общее расстояние составляет 12,5 мили + 1/4 (первая четверть мили)", "11": "12,75 мили", "12": "Ответ: Б", "13": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Рассчитайте максимальное расстояние, которое можно проехать, потратив 8,50\\xa0долл. США на такси, которое стоит 3,50\\xa0долл. США за первую четверть мили и']\nquestion = '10\\xa0центов за каждую следующую четверть мили.'\nchoices = {'A': '11,75\\xa0мили', 'B': '12,75\\xa0мили', 'C': '17,75\\xa0мили', 'D': '14,75\\xa0мили', 'E': '10,75\\xa0мили'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рассчитайте максимальное расстояние, которое можно проехать, потратив 8,50\\xa0долл. США на такси, которое стоит 3,50\\xa0долл. США за первую четверть мили и']\nnew_fact = infer_new_fact(selected) # 'Вычитаем плату за первую четверть мили: 8,50\\xa0-\\xa03,50\\xa0долл. США\\xa0=\\xa05\\xa0долл. США'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте максимальное расстояние, которое можно проехать, потратив 8,50\\xa0долл. США на такси, которое стоит 3,50\\xa0долл. США за первую четверть мили и', '10\\xa0центов за каждую следующую четверть мили.']\nnew_fact = infer_new_fact(selected) # 'Рассчитываем количество следующих четвертей мили\\xa0— 5/10\\xa0центов\\xa0=>\\xa050\\xa0четвертей мили\\xa0=>\\xa012,5\\xa0мили'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вычитаем плату за первую четверть мили: 8,50\\xa0-\\xa03,50\\xa0долл. США\\xa0=\\xa05\\xa0долл. США', 'Рассчитываем количество следующих четвертей мили\\xa0— 5/10\\xa0центов\\xa0=>\\xa050\\xa0четвертей мили\\xa0=>\\xa012,5\\xa0мили']\nnew_fact = infer_new_fact(selected) # 'Общее расстояние составляет 12,5\\xa0мили\\xa0+\\xa01/4 (первая четверть мили)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее расстояние составляет 12,5\\xa0мили\\xa0+\\xa01/4 (первая четверть мили)']\nnew_fact = infer_new_fact(selected) # '12,75\\xa0мили'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте максимальное расстояние, которое можно проехать, потратив 8,50\\xa0долл. США на такси, которое стоит 3,50\\xa0долл. США за первую четверть мили и', '10\\xa0центов за каждую следующую четверть мили.', 'B) 12,75\\xa0мили', 'Рассчитываем количество следующих четвертей мили\\xa0— 5/10\\xa0центов\\xa0=>\\xa050\\xa0четвертей мили\\xa0=>\\xa012,5\\xa0мили', 'Общее расстояние составляет 12,5\\xa0мили\\xa0+\\xa01/4 (первая четверть мили)']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_63_051a2064eb", "context": "", "options": ["A)6", "B)8", "C)9", "D)10", "E)11"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [1, 10], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [2, 3, 10, 11, 12], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 7, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent4 -> int1: Let total number of matches = x; int1 & sent3 -> int2: then, total runs 54*x; int1 & sent1 -> int3: total runs before final = 51*(x-1); sent0 -> int4: runs in the final match; int1 & int2 & int3 & sent2 & sent3 -> int5: 54*x - 51*(x-1) = 78; int5 -> int6: x= 9; int2 & int3 & int4 & int5 & int6 & sent4 & sent7 -> int7: ANSWER:C; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "В сезоне IPL общий уровень достижений Сачина составил 51.", "2": "В финале он заработал 78 ранов,", "3": "и его общий уровень достижений поднялся до 54.", "4": "Найдите общее количество матчей, сыгранных Сачином в этом сезоне.", "5": "A) 6", "6": "B) 8", "7": "C) 9", "8": "D) 10", "9": "E) 11", "10": "Пусть общее количество матчей = x,", "11": "тогда общее количество ранов 54*x", "12": "общее количество ранов до финала = 51*(x - 1)", "13": "количество ранов в финальном матче", "14": "54*х - 51*(х - 1) = 78", "15": "x = 9", "16": "ОТВЕТ: В", "17": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['В сезоне IPL общий уровень достижений Сачина составил 51.', 'В финале он заработал 78\\xa0ранов,', 'и его общий уровень достижений поднялся до 54.']\nquestion = 'Найдите общее количество матчей, сыгранных Сачином в этом сезоне.'\nchoices = {'A': '6', 'B': '8', 'C': '9', 'D': '10', 'E': '11'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Найдите общее количество матчей, сыгранных Сачином в этом сезоне.']\nnew_fact = infer_new_fact(selected) # 'Пусть общее количество матчей\\xa0=\\xa0x,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['и его общий уровень достижений поднялся до 54.', 'Пусть общее количество матчей\\xa0=\\xa0x,']\nnew_fact = infer_new_fact(selected) # 'тогда общее количество ранов 54*x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В сезоне IPL общий уровень достижений Сачина составил 51.', 'Пусть общее количество матчей\\xa0=\\xa0x,']\nnew_fact = infer_new_fact(selected) # 'общее количество ранов до финала\\xa0=\\xa051*(x\\xa0-\\xa01)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'количество ранов в финальном матче'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В финале он заработал 78\\xa0ранов,', 'и его общий уровень достижений поднялся до 54.', 'Пусть общее количество матчей\\xa0=\\xa0x,', 'тогда общее количество ранов 54*x', 'общее количество ранов до финала\\xa0=\\xa051*(x\\xa0-\\xa01)']\nnew_fact = infer_new_fact(selected) # '54*х\\xa0-\\xa051*(х\\xa0-\\xa01)\\xa0=\\xa078'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['54*х\\xa0-\\xa051*(х\\xa0-\\xa01)\\xa0=\\xa078']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa09'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите общее количество матчей, сыгранных Сачином в этом сезоне.', 'C) 9', 'тогда общее количество ранов 54*x', 'общее количество ранов до финала\\xa0=\\xa051*(x\\xa0-\\xa01)', 'количество ранов в финальном матче', '54*х\\xa0-\\xa051*(х\\xa0-\\xa01)\\xa0=\\xa078', 'x\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_64_4f418b3ca7", "context": "", "options": ["A)3", "B)4", "C)5", "D)10", "E)20"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 5], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [5, 8, 12, 13, 14], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent5 -> int1: The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).; int1 -> int2: At this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.; int1 & int2 -> int3: Looking at the answer choices, you can eliminate 10 and 20, so you can quickly narrow down the values you need to test. (i.e. (10 – n) suggests n can not be less than 10.); sent0 -> int4: As a general rule, whenever you're asked for the smallest value that satisfies a condition, start by testing the smallest number in the answers. Conversely, if you're asked for the largest value, start with the greatest answer.; int1 & int2 & int3 & sent5 & sent8 -> int5: Plug-in n=4 to (n + nC2) = (4 + 4C2) = 4 + (4x3 /2) = (4 + 6) = 10 ANS:D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Анна систематизирует свою библиотеку и", "2": "обнаруживает, что у нее 10 разных типов книг.", "3": "Затем она кодирует каждую книгу, используя одну букву или пару разных букв.", "4": "Если каждый тип книг уникально представлен одной буквой или парой букв,", "5": "какое наименьшее количество букв потребуется Анне, чтобы создать коды для всех 10 типов книг?", "6": "(Допустим, что порядок букв в паре не имеет значения).", "7": "A) 3", "8": "B) 4", "9": "C) 5", "10": "D) 10", "11": "E) 20", "12": "В задаче требуется найти такое наименьшее значение n, чтобы (n + nC2) = 10 (где n — количество букв. В этом уравнении значение n само по себе представляет однобуквенные коды, а nC2 — двухбуквенные).", "13": "На этом этапе придется выбирать числа, поскольку нет простого способа решить уравнение nC2 = (10 - n) без калькулятора.", "14": "Рассматривая варианты ответов, можно сразу исключить 10 и 20, чтобы быстро уменьшить количество проверяемых значений (поскольку (10 - n) предполагает, что n не может быть меньше 10).", "15": "Как правило, каждый раз, когда требуется указать наименьшее значение, удовлетворяющее условию, следует начинать с проверки наименьшего числа в ответах. И наоборот, если требуется указать наибольшее значение, следует начинать с наибольшего ответа.", "16": "Подставим n = 4 в (n + nC2) = (4 + 4C2) = 4 + (4x3/2) = (4 + 6) = 10 ОТВЕТ: Г", "17": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Анна систематизирует свою библиотеку и',\n  'обнаруживает, что у нее 10\\xa0разных типов книг.',\n  'Затем она кодирует каждую книгу, используя одну букву или пару разных букв.',\n  'Если каждый тип книг уникально представлен одной буквой или парой букв,',\n  'какое наименьшее количество букв потребуется Анне, чтобы создать коды для всех 10\\xa0типов книг?']\nquestion = '(Допустим, что порядок букв в паре не имеет значения).'\nchoices = {'A': '3', 'B': '4', 'C': '5', 'D': '10', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Анна систематизирует свою библиотеку и', 'обнаруживает, что у нее 10\\xa0разных типов книг.', 'Затем она кодирует каждую книгу, используя одну букву или пару разных букв.', 'какое наименьшее количество букв потребуется Анне, чтобы создать коды для всех 10\\xa0типов книг?']\nnew_fact = infer_new_fact(selected) # 'В задаче требуется найти такое наименьшее значение n, чтобы (n\\xa0+\\xa0nC2)\\xa0=\\xa010 (где n\\xa0— количество букв. В этом уравнении значение n само по себе представляет однобуквенные коды, а nC2\\xa0— двухбуквенные).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В задаче требуется найти такое наименьшее значение n, чтобы (n\\xa0+\\xa0nC2)\\xa0=\\xa010 (где n\\xa0— количество букв. В этом уравнении значение n само по себе представляет однобуквенные коды, а nC2\\xa0— двухбуквенные).']\nnew_fact = infer_new_fact(selected) # 'На этом этапе придется выбирать числа, поскольку нет простого способа решить уравнение nC2\\xa0=\\xa0(10\\xa0-\\xa0n) без калькулятора.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В задаче требуется найти такое наименьшее значение n, чтобы (n\\xa0+\\xa0nC2)\\xa0=\\xa010 (где n\\xa0— количество букв. В этом уравнении значение n само по себе представляет однобуквенные коды, а nC2\\xa0— двухбуквенные).', 'На этом этапе придется выбирать числа, поскольку нет простого способа решить уравнение nC2\\xa0=\\xa0(10\\xa0-\\xa0n) без калькулятора.']\nnew_fact = infer_new_fact(selected) # 'Рассматривая варианты ответов, можно сразу исключить 10 и 20, чтобы быстро уменьшить количество проверяемых значений (поскольку (10\\xa0-\\xa0n) предполагает, что n не может быть меньше 10).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Как правило, каждый раз, когда требуется указать наименьшее значение, удовлетворяющее условию, следует начинать с проверки наименьшего числа в ответах. И наоборот, если требуется указать наибольшее значение, следует начинать с наибольшего ответа.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое наименьшее количество букв потребуется Анне, чтобы создать коды для всех 10\\xa0типов книг?', 'B) 4', 'В задаче требуется найти такое наименьшее значение n, чтобы (n\\xa0+\\xa0nC2)\\xa0=\\xa010 (где n\\xa0— количество букв. В этом уравнении значение n само по себе представляет однобуквенные коды, а nC2\\xa0— двухбуквенные).', 'На этом этапе придется выбирать числа, поскольку нет простого способа решить уравнение nC2\\xa0=\\xa0(10\\xa0-\\xa0n) без калькулятора.', 'Рассматривая варианты ответов, можно сразу исключить 10 и 20, чтобы быстро уменьшить количество проверяемых значений (поскольку (10\\xa0-\\xa0n) предполагает, что n не может быть меньше 10).']\nnew_fact = infer_new_fact(selected) # 'Подставим n\\xa0=\\xa04 в (n\\xa0+\\xa0nC2)\\xa0=\\xa0(4\\xa0+\\xa04C2)\\xa0=\\xa04\\xa0+\\xa0(4x3/2)\\xa0=\\xa0(4\\xa0+\\xa06)\\xa0=\\xa010 ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Подставим n\\xa0=\\xa04 в (n\\xa0+\\xa0nC2)\\xa0=\\xa0(4\\xa0+\\xa04C2)\\xa0=\\xa04\\xa0+\\xa0(4x3/2)\\xa0=\\xa0(4\\xa0+\\xa06)\\xa0=\\xa010 ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_65_5cd4d77293", "context": "", "options": ["A)60 m", "B)61 m", "C)62 m", "D)63 m", "E)64 m"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [1, 8, 9], "consequent": 11}, {"antecedents": [1, 8, 9, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [1, 9, 11, 14], "consequent": 15}, {"antecedents": [1, 9, 11, 14, 15], "consequent": 16}, {"antecedents": [2, 9, 11, 13, 14, 15, 16], "consequent": 17}, {"antecedents": [1, 8], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [1, 18], "consequent": 20}, {"antecedents": [1, 2, 18, 20], "consequent": 21}, {"antecedents": [1, 2, 18, 20, 21], "consequent": 22}, {"antecedents": [21, 22], "consequent": 23}, {"antecedents": [1, 2, 18, 20, 21, 23], "consequent": 24}, {"antecedents": [1, 2, 18, 20, 21, 23, 24], "consequent": 25}, {"antecedents": [1, 2, 18, 22, 23, 24, 25], "consequent": 26}, {"antecedents": [1, 24, 25, 26], "consequent": 27}, {"antecedents": [27], "consequent": 28}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let its breadth be = x m.; int1 & sent1 -> int2: So length will be = (4x+1) m.; sent0 -> int3: Now,; int1 & int2 & sent1 -> int4: x * (4x+1) = 150; int1 & int2 & int4 & sent1 -> int5: or, 4x^2+x-150 = 0; int5 -> int6: or, (4x+25)(x-6) = 0; int6 -> int7: Either 4x = -25 or x = 6; int2 & int4 & int7 & sent1 -> int8: As breadth can not take negetive value so x = 6; int2 & int4 & int7 & int8 & sent1 -> int9: So its length is 4*6+1 = 25; int2 & int4 & int6 & int7 & int8 & int9 & sent2 -> int10: So perimeter will be 2*(25+6)=62 mLet its breadth be = x m.; int1 & sent1 -> int11: So length will be = (4x+1) m.; sent0 -> int12: Now,; int11 & sent1 -> int13: x * (4x+1) = 150; int11 & int13 & sent1 & sent2 -> int14: or, 4x^2+x-150 = 0; int11 & int13 & int14 & sent1 & sent2 -> int15: or, (4x+25)(x-6) = 0; int14 & int15 -> int16: Either 4x = -25 or x = 6; int11 & int13 & int14 & int16 & sent1 & sent2 -> int17: As breadth can not take negetive value so x = 6; int11 & int13 & int14 & int16 & int17 & sent1 & sent2 -> int18: So its length is 4*6+1 = 25; int11 & int15 & int16 & int17 & int18 & sent1 & sent2 -> int19: So perimeter will be 2*(25+6)=62 m; int17 & int18 & int19 & sent1 -> int20: ANSWER:C; int20 -> int21: The answer is C);", "textual_logical_units": {"1": "Прямоугольная деталь площадью 150 кв. м имеет длину, которая на 1 м больше значения ширины, увеличенного в 4 раза.", "2": "Каков периметр детали?", "3": "A) 60 м", "4": "B) 61 м", "5": "C) 62 м", "6": "D) 63 м", "7": "E) 64 м", "8": "Пусть ширина = x м.", "9": "Тогда длина = (4x + 1) м.", "10": "Теперь,", "11": "х*(4х + 1) = 150", "12": "или 4x^2 + x - 150 = 0", "13": "или (4x + 25)(x - 6) = 0", "14": "Либо 4x = -25, либо x = 6", "15": "Поскольку значение ширины не может быть отрицательным, x = 6", "16": "Таким образом, длина равна 4*6 + 1 = 25", "17": "Поэтому периметр равен 2*(25 + 6) = 62 м. Пусть ширина = x м.", "18": "Тогда длина = (4x + 1) м.", "19": "Теперь,", "20": "х*(4х + 1) = 150", "21": "или 4x^2 + x - 150 = 0", "22": "или (4x + 25)(x - 6) = 0", "23": "Либо 4x = -25, либо x = 6", "24": "Поскольку значение ширины не может быть отрицательным, x = 6", "25": "Таким образом, длина равна 4*6 + 1 = 25", "26": "Поэтому периметр равен 2*(25 + 6) = 62 м", "27": "ОТВЕТ: В", "28": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.']\nquestion = 'Каков периметр детали?'\nchoices = {'A': '60\\xa0м', 'B': '61\\xa0м', 'C': '62\\xa0м', 'D': '63\\xa0м', 'E': '64\\xa0м'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.']\nnew_fact = infer_new_fact(selected) # 'Пусть ширина\\xa0=\\xa0x\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Пусть ширина\\xa0=\\xa0x\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Теперь,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Пусть ширина\\xa0=\\xa0x\\xa0м.', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Пусть ширина\\xa0=\\xa0x\\xa0м.', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150']\nnew_fact = infer_new_fact(selected) # 'или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # 'или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06', 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'Таким образом, длина равна 4*6\\xa0+\\xa01\\xa0=\\xa025'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06', 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06', 'Таким образом, длина равна 4*6\\xa0+\\xa01\\xa0=\\xa025']\nnew_fact = infer_new_fact(selected) # 'Поэтому периметр равен 2*(25\\xa0+\\xa06)\\xa0=\\xa062\\xa0м. Пусть ширина\\xa0=\\xa0x\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Пусть ширина\\xa0=\\xa0x\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Теперь,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150']\nnew_fact = infer_new_fact(selected) # 'или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # 'или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00', 'или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'х*(4х\\xa0+\\xa01)\\xa0=\\xa0150', 'или 4x^2\\xa0+\\xa0x\\xa0-\\xa0150\\xa0=\\xa00', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06', 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'Таким образом, длина равна 4*6\\xa0+\\xa01\\xa0=\\xa025'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Каков периметр детали?', 'Тогда длина\\xa0=\\xa0(4x\\xa0+\\xa01)\\xa0м.', 'или (4x\\xa0+\\xa025)(x\\xa0-\\xa06)\\xa0=\\xa00', 'Либо 4x\\xa0=\\xa0-25, либо x\\xa0=\\xa06', 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06', 'Таким образом, длина равна 4*6\\xa0+\\xa01\\xa0=\\xa025']\nnew_fact = infer_new_fact(selected) # 'Поэтому периметр равен 2*(25\\xa0+\\xa06)\\xa0=\\xa062\\xa0м'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямоугольная деталь площадью 150\\xa0кв.\\xa0м имеет длину, которая на 1\\xa0м больше значения ширины, увеличенного в 4\\xa0раза.', 'Поскольку значение ширины не может быть отрицательным, x\\xa0=\\xa06', 'Таким образом, длина равна 4*6\\xa0+\\xa01\\xa0=\\xa025', 'Поэтому периметр равен 2*(25\\xa0+\\xa06)\\xa0=\\xa062\\xa0м']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_66_7d6631e23e", "context": "", "options": ["A)8.5", "B)10.5", "C)12.5", "D)14.5", "E)16.5"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3, 4, 7, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 100% / 8% = 12.5; sent1 & sent2 -> int2: 12.5 grams of the health food provides 12.5(8%) = 100% of the vitamin A requirement and more than 100% of the vitamin E requirement.; int1 & int2 & sent3 & sent4 & sent7 -> int3: The answer is C.; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Один грамм диетического продукта содержит 9 процентов минимальной суточной нормы витамина Е и", "2": "8 процентов минимальной суточной нормы витамина А.", "3": "Если не получать витамины E и A из других источников,", "4": "сколько граммов этого диетического продукта необходимо употреблять в день, чтобы получить хотя бы минимальную суточную норму обоих витаминов?", "5": "A) 8,5", "6": "B) 10,5", "7": "C) 12,5", "8": "D) 14,5", "9": "E) 16,5", "10": "100%/8% = 12,5", "11": "12,5 г диетического продукта содержат 12,5(8%) = 100% суточной нормы витамина А и более 100% суточной нормы витамина Е.", "12": "Ответ — В.", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Один грамм диетического продукта содержит 9\\xa0процентов минимальной суточной нормы витамина Е и',\n  '8\\xa0процентов минимальной суточной нормы витамина А.',\n  'Если не получать витамины E и A из других источников,']\nquestion = 'сколько граммов этого диетического продукта необходимо употреблять в день, чтобы получить хотя бы минимальную суточную норму обоих витаминов?'\nchoices = {'A': '8,5', 'B': '10,5', 'C': '12,5', 'D': '14,5', 'E': '16,5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Один грамм диетического продукта содержит 9\\xa0процентов минимальной суточной нормы витамина Е и', '8\\xa0процентов минимальной суточной нормы витамина А.']\nnew_fact = infer_new_fact(selected) # '100%/8%\\xa0=\\xa012,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один грамм диетического продукта содержит 9\\xa0процентов минимальной суточной нормы витамина Е и', '8\\xa0процентов минимальной суточной нормы витамина А.']\nnew_fact = infer_new_fact(selected) # '12,5\\xa0г диетического продукта содержат 12,5(8%)\\xa0=\\xa0100%\\xa0суточной нормы витамина А и более 100%\\xa0суточной нормы витамина Е.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если не получать витамины E и A из других источников,', 'сколько граммов этого диетического продукта необходимо употреблять в день, чтобы получить хотя бы минимальную суточную норму обоих витаминов?', 'C) 12,5', '100%/8%\\xa0=\\xa012,5', '12,5\\xa0г диетического продукта содержат 12,5(8%)\\xa0=\\xa0100%\\xa0суточной нормы витамина А и более 100%\\xa0суточной нормы витамина Е.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_67_62161df8ad", "context": "", "options": ["A)8", "B)10", "C)12", "D)15", "E)19"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: 20 large cakes will require the equivalent of 10 helpers working for one hour. 700 small cakes will require the equivalent of 20 helpers working for one hour. This means if only one hour were available we would need 30 helpers. But since three hours are available we can use 10 helpers.; int1 -> int2: The answer is B);", "textual_logical_units": {"1": "Для подготовки к празднику нужны помощники.", "2": "Каждый помощник может приготовить 2 торта или 35 пирожных в час.", "3": "Кухня доступна в течение 3 часов, и", "4": "нужно приготовить 20 тортов и 700 пирожных.", "5": "Сколько требуется помощников?", "6": "A) 8", "7": "B) 10", "8": "C) 12", "9": "D) 15", "10": "E) 19", "11": "Для приготовления 20 тортов требуется 10 помощников, работающих в течение одного часа. Для приготовления 700 пирожных требуется 20 помощников, работающих в течение одного часа. Это означает, что если бы в запасе был всего один час, потребовалось бы 30 помощников. Но поскольку доступно три часа, достаточно 10 помощников.", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Для подготовки к празднику нужны помощники.',\n  'Каждый помощник может приготовить 2\\xa0торта или 35\\xa0пирожных в час.',\n  'Кухня доступна в течение 3\\xa0часов, и',\n  'нужно приготовить 20\\xa0тортов и 700\\xa0пирожных.']\nquestion = 'Сколько требуется помощников?'\nchoices = {'A': '8', 'B': '10', 'C': '12', 'D': '15', 'E': '19'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый помощник может приготовить 2\\xa0торта или 35\\xa0пирожных в час.', 'Кухня доступна в течение 3\\xa0часов, и', 'нужно приготовить 20\\xa0тортов и 700\\xa0пирожных.']\nnew_fact = infer_new_fact(selected) # 'Для приготовления 20\\xa0тортов требуется 10\\xa0помощников, работающих в течение одного часа. Для приготовления 700\\xa0пирожных требуется 20\\xa0помощников, работающих в течение одного часа. Это означает, что если бы в запасе был всего один час, потребовалось бы 30\\xa0помощников. Но поскольку доступно три часа, достаточно 10\\xa0помощников.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для приготовления 20\\xa0тортов требуется 10\\xa0помощников, работающих в течение одного часа. Для приготовления 700\\xa0пирожных требуется 20\\xa0помощников, работающих в течение одного часа. Это означает, что если бы в запасе был всего один час, потребовалось бы 30\\xa0помощников. Но поскольку доступно три часа, достаточно 10\\xa0помощников.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_68_5d74e8eb0e", "context": "", "options": ["A)6", "B)7", "C)8", "D)9", "E)10"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 5, 10, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Since SR + RT = 22 = ST, then R is somewhere between S and T.; int1 & sent1 & sent2 & sent3 -> int2: Since ST is 22, then SU is 11 because U is the midpoint of ST.; int1 & int2 & sent1 & sent2 & sent3 -> int3: Since SR < SU, then R is somewhere between S and U.; int1 & int2 & int3 & sent1 & sent2 & sent3 -> int4: Then SR + RU = SU.; int1 & int2 & int3 & int4 & sent3 -> int5: 5 + RU = 11; int5 -> int6: RU = 6; int1 & int2 & int3 & int4 & int5 & int6 & sent4 & sent5 -> int7: The answer is A.; int7 -> int8: The answer is A);", "textual_logical_units": {"1": "R, S, T и U — точки на прямой,", "2": "и U — средняя точка отрезка ST.", "3": "Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,", "4": "какова длина отрезка RU?", "5": "A) 6", "6": "B) 7", "7": "C) 8", "8": "D) 9", "9": "E) 10", "10": "Поскольку SR + RT = 22 = ST, точка R находится где-то между S и T.", "11": "Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.", "12": "Поскольку SR < SU, точка R находится где-то между S и U.", "13": "Тогда SR + RU = SU.", "14": "5 + RU = 11", "15": "RU = 6", "16": "Ответ — А.", "17": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['R, S, T и U\\xa0— точки на прямой,', 'и U\\xa0— средняя точка отрезка ST.', 'Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,']\nquestion = 'какова длина отрезка RU?'\nchoices = {'A': '6', 'B': '7', 'C': '8', 'D': '9', 'E': '10'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['R, S, T и U\\xa0— точки на прямой,', 'и U\\xa0— средняя точка отрезка ST.', 'Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,']\nnew_fact = infer_new_fact(selected) # 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T и U\\xa0— точки на прямой,', 'и U\\xa0— средняя точка отрезка ST.', 'Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,', 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.']\nnew_fact = infer_new_fact(selected) # 'Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T и U\\xa0— точки на прямой,', 'и U\\xa0— средняя точка отрезка ST.', 'Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,', 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.', 'Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.']\nnew_fact = infer_new_fact(selected) # 'Поскольку SR\\xa0<\\xa0SU, точка R находится где-то между S и U.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T и U\\xa0— точки на прямой,', 'и U\\xa0— средняя точка отрезка ST.', 'Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,', 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.', 'Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.', 'Поскольку SR\\xa0<\\xa0SU, точка R находится где-то между S и U.']\nnew_fact = infer_new_fact(selected) # 'Тогда SR\\xa0+\\xa0RU\\xa0=\\xa0SU.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если длины отрезков RS, RT и ST равны 5, 17 и 22 соответственно,', 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.', 'Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.', 'Поскольку SR\\xa0<\\xa0SU, точка R находится где-то между S и U.', 'Тогда SR\\xa0+\\xa0RU\\xa0=\\xa0SU.']\nnew_fact = infer_new_fact(selected) # '5\\xa0+\\xa0RU\\xa0=\\xa011'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5\\xa0+\\xa0RU\\xa0=\\xa011']\nnew_fact = infer_new_fact(selected) # 'RU\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова длина отрезка RU?', 'A) 6', 'Поскольку SR\\xa0+\\xa0RT\\xa0=\\xa022\\xa0=\\xa0ST, точка R находится где-то между S и T.', 'Поскольку длина отрезка ST равна 22, длина отрезка SU равна 11, так как точка U является средней точкой отрезка ST.', 'Поскольку SR\\xa0<\\xa0SU, точка R находится где-то между S и U.', 'Тогда SR\\xa0+\\xa0RU\\xa0=\\xa0SU.', '5\\xa0+\\xa0RU\\xa0=\\xa011', 'RU\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_69_c8628446b3", "context": "", "options": ["A)12/25", "B)3/2", "C)3", "D)2", "E)25/3"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [9, 10], "consequent": 12}, {"antecedents": [1, 3], "consequent": 13}, {"antecedents": [1, 2, 3, 12, 13], "consequent": 14}, {"antecedents": [1, 2, 3, 9, 10, 12, 13], "consequent": 15}, {"antecedents": [3, 6, 12, 13, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 -> int1: 6P = 2R; sent2 -> int2: 3R = 5B; sent3 -> int3: 2B = ?P; int1 & int2 -> int4: Thus, P : R : B = 18 : 6 : 12; sent1 & sent3 -> int5: P : B = 18 : 12; int4 & int5 & sent1 & sent2 & sent3 -> int6: = 3 : 2; int1 & int2 & int4 & int5 & sent1 & sent2 & sent3 -> int7: Thus P = 3; int4 & int5 & int7 & sent3 & sent6 -> int8: Answer : C; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "В шести питах столько же фалафеля, сколько и в двух роллах.", "2": "В трех роллах столько же фалафеля, сколько и в пяти багетах.", "3": "Во скольких питах фалафеля столько же, сколько и в двух багетах?", "4": "A) 12/25", "5": "B) 3/2", "6": "C) 3", "7": "D) 2", "8": "E) 25/3", "9": "6P = 2R", "10": "3R = 5B", "11": "2B = ?P", "12": "Таким образом, P: R: B = 18: 6: 12", "13": "P: B = 18: 12", "14": " = 3 : 2", "15": "Таким образом, P = 3", "16": "Ответ: В", "17": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['В шести питах столько же фалафеля, сколько и в двух роллах.', 'В трех роллах столько же фалафеля, сколько и в пяти багетах.']\nquestion = 'Во скольких питах фалафеля столько же, сколько и в двух багетах?'\nchoices = {'A': '12/25', 'B': '3/2', 'C': '3', 'D': '2', 'E': '25/3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В шести питах столько же фалафеля, сколько и в двух роллах.']\nnew_fact = infer_new_fact(selected) # '6P\\xa0=\\xa02R'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В трех роллах столько же фалафеля, сколько и в пяти багетах.']\nnew_fact = infer_new_fact(selected) # '3R\\xa0=\\xa05B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во скольких питах фалафеля столько же, сколько и в двух багетах?']\nnew_fact = infer_new_fact(selected) # '2B\\xa0=\\xa0?P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6P\\xa0=\\xa02R', '3R\\xa0=\\xa05B']\nnew_fact = infer_new_fact(selected) # 'Таким образом, P: R: B\\xa0=\\xa018: 6: 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В шести питах столько же фалафеля, сколько и в двух роллах.', 'Во скольких питах фалафеля столько же, сколько и в двух багетах?']\nnew_fact = infer_new_fact(selected) # 'P: B\\xa0=\\xa018: 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В шести питах столько же фалафеля, сколько и в двух роллах.', 'В трех роллах столько же фалафеля, сколько и в пяти багетах.', 'Во скольких питах фалафеля столько же, сколько и в двух багетах?', 'Таким образом, P: R: B\\xa0=\\xa018: 6: 12', 'P: B\\xa0=\\xa018: 12']\nnew_fact = infer_new_fact(selected) # ' = 3 : 2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В шести питах столько же фалафеля, сколько и в двух роллах.', 'В трех роллах столько же фалафеля, сколько и в пяти багетах.', 'Во скольких питах фалафеля столько же, сколько и в двух багетах?', '6P\\xa0=\\xa02R', '3R\\xa0=\\xa05B', 'Таким образом, P: R: B\\xa0=\\xa018: 6: 12', 'P: B\\xa0=\\xa018: 12']\nnew_fact = infer_new_fact(selected) # 'Таким образом, P\\xa0=\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во скольких питах фалафеля столько же, сколько и в двух багетах?', 'C) 3', 'Таким образом, P: R: B\\xa0=\\xa018: 6: 12', 'P: B\\xa0=\\xa018: 12', 'Таким образом, P\\xa0=\\xa03']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_70_f06391efa2", "context": "", "options": ["A)21%", "B)20%", "C)25%", "D)33%", "E)18%"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Suppose every item is priced at $100. On 20% discount, the price will become $80. Now he must add $20 to each item for original price which is 25% of $80.; int1 -> int2: The answer is C);", "textual_logical_units": {"1": "Для рекламы своего нового магазина владелец сделал скидку в размере 20% на все товары в течение одного дня.", "2": "На следующий день ему нужно будет продавать вещи по их первоначальной цене.", "3": "На какой процент он должен увеличить цену до первоначальной?", "4": "A) 21%", "5": "B) 20%", "6": "C) 25%", "7": "D) 33%", "8": "E) 18%", "9": "Предположим, что каждый товар стоит 100 долл. США. Со скидкой 20% цена будет равна 80 долл. США. Теперь ему необходимо добавить 20 долл. США к каждому товару для достижения первоначальной цены, — это 25% от 80 долл. США.", "10": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Для рекламы своего нового магазина владелец сделал скидку в размере 20% на все товары в течение одного дня.',\n  'На следующий день ему нужно будет продавать вещи по их первоначальной цене.']\nquestion = 'На какой процент он должен увеличить цену до первоначальной?'\nchoices = {'A': '21%', 'B': '20%', 'C': '25%', 'D': '33%', 'E': '18%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Для рекламы своего нового магазина владелец сделал скидку в размере 20% на все товары в течение одного дня.', 'На следующий день ему нужно будет продавать вещи по их первоначальной цене.']\nnew_fact = infer_new_fact(selected) # 'Предположим, что каждый товар стоит 100\\xa0долл. США. Со скидкой\\xa020% цена будет равна 80\\xa0долл. США. Теперь ему необходимо добавить 20\\xa0долл. США к каждому товару для достижения первоначальной цены,\\xa0— это 25% от 80\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, что каждый товар стоит 100\\xa0долл. США. Со скидкой\\xa020% цена будет равна 80\\xa0долл. США. Теперь ему необходимо добавить 20\\xa0долл. США к каждому товару для достижения первоначальной цены,\\xa0— это 25% от 80\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_71_f50fb26d17", "context": "", "options": ["A)126", "B)77", "C)88", "D)66", "E)54"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 5], "consequent": 11}, {"antecedents": [1, 2, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 11, 12], "consequent": 13}, {"antecedents": [2, 3, 4, 11, 12, 13], "consequent": 14}, {"antecedents": [5, 6, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent5 -> int1: Let the train fare between the two places for one person be Rs.t; int1 & sent1 & sent2 -> int2: Bus fare between the two places for two persons Rs.4/3 t; int1 & int2 & sent2 & sent3 & sent4 -> int3: => 6/2 (4/3 t) + 8(t) = 1512; int1 & int2 & int3 & sent2 & sent3 & sent4 -> int4: => 12t = 1512 => t = 126.; int2 & int3 & int4 & sent5 & sent6 -> int5: Answer:A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Стоимость проезда на автобусе из Агры в Алигарх", "2": "для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.", "3": "Общая стоимость проезда между этими двумя городами, оплаченная 6 пассажирами", "4": "автобуса и 8 пассажирами поезда, составила 1512 рупий.", "5": "Найдите стоимость проезда на поезде между двумя городами для одного человека.", "6": "A) 126", "7": "B) 77", "8": "C) 88", "9": "D) 66", "10": "E) 54", "11": "Пусть стоимость проезда на поезде между двумя городами для одного человека равна t рупий", "12": "Стоимость проезда на автобусе между двумя городами для двух человек равна 4/3t рупий", "13": "=> 6/2(4/3t) + 8(t) = 1512", "14": "=> 12t = 1512 => t = 126.", "15": "Ответ: А", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Стоимость проезда на автобусе из Агры в Алигарх',\n  'для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.',\n  'Общая стоимость проезда между этими двумя городами, оплаченная 6\\xa0пассажирами',\n  'автобуса и 8\\xa0пассажирами поезда, составила 1512\\xa0рупий.']\nquestion = 'Найдите стоимость проезда на поезде между двумя городами для одного человека.'\nchoices = {'A': '126', 'B': '77', 'C': '88', 'D': '66', 'E': '54'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Стоимость проезда на автобусе из Агры в Алигарх', 'для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.', 'Найдите стоимость проезда на поезде между двумя городами для одного человека.']\nnew_fact = infer_new_fact(selected) # 'Пусть стоимость проезда на поезде между двумя городами для одного человека равна t\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Стоимость проезда на автобусе из Агры в Алигарх', 'для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.', 'Пусть стоимость проезда на поезде между двумя городами для одного человека равна t\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Стоимость проезда на автобусе между двумя городами для двух человек равна 4/3t\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.', 'Общая стоимость проезда между этими двумя городами, оплаченная 6\\xa0пассажирами', 'автобуса и 8\\xa0пассажирами поезда, составила 1512\\xa0рупий.', 'Пусть стоимость проезда на поезде между двумя городами для одного человека равна t\\xa0рупий', 'Стоимость проезда на автобусе между двумя городами для двух человек равна 4/3t\\xa0рупий']\nnew_fact = infer_new_fact(selected) # '=>\\xa06/2(4/3t)\\xa0+\\xa08(t)\\xa0=\\xa01512'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['для двух человек на четыре трети меньше стоимости проезда на поезде между этими же городами для одного человека.', 'Общая стоимость проезда между этими двумя городами, оплаченная 6\\xa0пассажирами', 'автобуса и 8\\xa0пассажирами поезда, составила 1512\\xa0рупий.', 'Пусть стоимость проезда на поезде между двумя городами для одного человека равна t\\xa0рупий', 'Стоимость проезда на автобусе между двумя городами для двух человек равна 4/3t\\xa0рупий', '=>\\xa06/2(4/3t)\\xa0+\\xa08(t)\\xa0=\\xa01512']\nnew_fact = infer_new_fact(selected) # '=>\\xa012t\\xa0=\\xa01512\\xa0=>\\xa0t\\xa0=\\xa0126.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите стоимость проезда на поезде между двумя городами для одного человека.', 'A) 126', 'Стоимость проезда на автобусе между двумя городами для двух человек равна 4/3t\\xa0рупий', '=>\\xa06/2(4/3t)\\xa0+\\xa08(t)\\xa0=\\xa01512', '=>\\xa012t\\xa0=\\xa01512\\xa0=>\\xa0t\\xa0=\\xa0126.']\nnew_fact = infer_new_fact(selected) # 'Ответ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_72_879e38cfd3", "context": "", "options": ["A)18cm", "B)22cm", "C)20cm", "D)30cm", "E)28cm"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Perimeter = 2(8 cm) + 2(3 cm) = 16 cm + 6 cm = 22 cm; int1 & sent3 & sent5 -> int2: answer:B.; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Прямоугольник имеет длину 8 сантиметров и", "2": "ширину 3 сантиметра.", "3": "Найдите периметр.", "4": "A) 18 см", "5": "B) 22 см", "6": "C) 20 см", "7": "D) 30 см", "8": "E) 28 см", "9": "Периметр = 2(8 см) + 2(3 см) = 16 см + 6 см = 22 см", "10": "Ответ: Б.", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Прямоугольник имеет длину 8\\xa0сантиметров и', 'ширину 3\\xa0сантиметра.']\nquestion = 'Найдите периметр.'\nchoices = {'A': '18\\xa0см', 'B': '22\\xa0см', 'C': '20\\xa0см', 'D': '30\\xa0см', 'E': '28\\xa0см'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прямоугольник имеет длину 8\\xa0сантиметров и', 'ширину 3\\xa0сантиметра.', 'Найдите периметр.']\nnew_fact = infer_new_fact(selected) # 'Периметр\\xa0=\\xa02(8\\xa0см)\\xa0+\\xa02(3\\xa0см)\\xa0=\\xa016\\xa0см\\xa0+\\xa06\\xa0см\\xa0=\\xa022\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите периметр.', 'B) 22\\xa0см', 'Периметр\\xa0=\\xa02(8\\xa0см)\\xa0+\\xa02(3\\xa0см)\\xa0=\\xa016\\xa0см\\xa0+\\xa06\\xa0см\\xa0=\\xa022\\xa0см']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_73_7112b82c0f", "context": "", "options": ["A)520", "B)720", "C)920", "D)None", "E)Cannot be determined"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: We have to arrange 6 books. The number of permutations is 6*5*4*3*2*1= 720; int1 & sent3 & sent5 -> int2: Answer : B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Предположим, вы хотите систематизировать учебники английского, русского, математики, истории, географии и", "2": "естественных наук на полке.", "3": "Сколькими способами можно это сделать?", "4": "A) 520", "5": "B) 720", "6": "C) 920", "7": "D) Ничего из вышеперечисленного", "8": "E) Невозможно определить", "9": "Необходимо систематизировать 6 учебников. Количество возможных перестановок: 6*5*4*3*2*1 = 720", "10": "Ответ: Б", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Предположим, вы хотите систематизировать учебники английского, русского, математики, истории, географии и', 'естественных наук на полке.']\nquestion = 'Сколькими способами можно это сделать?'\nchoices = {'A': '520', 'B': '720', 'C': '920', 'D': 'Ничего из вышеперечисленного', 'E': 'Невозможно определить'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Предположим, вы хотите систематизировать учебники английского, русского, математики, истории, географии и', 'естественных наук на полке.', 'Сколькими способами можно это сделать?']\nnew_fact = infer_new_fact(selected) # 'Необходимо систематизировать 6\\xa0учебников. Количество возможных перестановок: 6*5*4*3*2*1\\xa0=\\xa0720'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно это сделать?', 'B) 720', 'Необходимо систематизировать 6\\xa0учебников. Количество возможных перестановок: 6*5*4*3*2*1\\xa0=\\xa0720']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_74_962eac421e", "context": "", "options": ["A)13x/2", "B)13x/2 - 6", "C)13x/24", "D)(13x+1)/24", "E)(13x-12)/24"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [1], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [2], "consequent": 13}, {"antecedents": [1, 2, 11, 12], "consequent": 14}, {"antecedents": [1, 2, 11, 12, 14], "consequent": 15}, {"antecedents": [1, 2, 11, 12, 15], "consequent": 16}, {"antecedents": [1, 2, 3, 8, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: Number of pickets = x; sent1 -> int2: Size of pickets = 1/2; sent1 -> int3: length of pickets = 1/2x; sent1 -> int4: If there are x pickets, it implies that there are x -1 spaces between the picket; sent2 -> int5: Length of space = 6; int3 & int4 & sent1 & sent2 -> int6: total number of length = 1/2 x + 6(x-1) in inches; int3 & int4 & int6 & sent1 & sent2 -> int7: total length in feet =( 1/2 x + 6(x-1))/12; int3 & int4 & int7 & sent1 & sent2 -> int8: Simplify to get (13X-12)/24; int7 & int8 & sent1 & sent2 & sent3 & sent8 -> int9: ANSWER:E; int9 -> int10: The answer is E);", "textual_logical_units": {"1": "Прямой штакетник состоит из x реек, каждая из которых имеет ширину 1/2 дюйма.", "2": "Если между каждой парой реек имеется зазор 6 дюймов,", "3": "что из перечисленного соответствует длине ограждения в футах?", "4": "A) 13x/2", "5": "B) 13x/2 - 6", "6": "C) 13x/24", "7": "D) (13x + 1)/24", "8": "E) (13x - 12)/24", "9": "Количество реек = x", "10": "Ширина реек = 1/2", "11": "Длина штакетника без зазоров = 1/2x", "12": "Если в ограждении x реек, значит, между ними x - 1 зазоров", "13": "Ширина зазора = 6", "14": "Общая длина = 1/2x + 6(x - 1) в дюймах", "15": "Общая длина в футах = (1/2x + 6(x - 1))/12", "16": "Упрощаем и получаем (13x - 12)/24", "17": "ОТВЕТ: Д", "18": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.', 'Если между каждой парой реек имеется зазор 6\\xa0дюймов,']\nquestion = 'что из перечисленного соответствует длине ограждения в футах?'\nchoices = {'A': '13x/2', 'B': '13x/2\\xa0-\\xa06', 'C': '13x/24', 'D': '(13x\\xa0+\\xa01)/24', 'E': '(13x\\xa0-\\xa012)/24'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.']\nnew_fact = infer_new_fact(selected) # 'Количество реек\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.']\nnew_fact = infer_new_fact(selected) # 'Ширина реек\\xa0=\\xa01/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.']\nnew_fact = infer_new_fact(selected) # 'Длина штакетника без зазоров\\xa0=\\xa01/2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.']\nnew_fact = infer_new_fact(selected) # 'Если в ограждении x\\xa0реек, значит, между ними x\\xa0-\\xa01\\xa0зазоров'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если между каждой парой реек имеется зазор 6\\xa0дюймов,']\nnew_fact = infer_new_fact(selected) # 'Ширина зазора\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.', 'Если между каждой парой реек имеется зазор 6\\xa0дюймов,', 'Длина штакетника без зазоров\\xa0=\\xa01/2x', 'Если в ограждении x\\xa0реек, значит, между ними x\\xa0-\\xa01\\xa0зазоров']\nnew_fact = infer_new_fact(selected) # 'Общая длина\\xa0=\\xa01/2x\\xa0+\\xa06(x\\xa0-\\xa01) в дюймах'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.', 'Если между каждой парой реек имеется зазор 6\\xa0дюймов,', 'Длина штакетника без зазоров\\xa0=\\xa01/2x', 'Если в ограждении x\\xa0реек, значит, между ними x\\xa0-\\xa01\\xa0зазоров', 'Общая длина\\xa0=\\xa01/2x\\xa0+\\xa06(x\\xa0-\\xa01) в дюймах']\nnew_fact = infer_new_fact(selected) # 'Общая длина в футах\\xa0=\\xa0(1/2x\\xa0+\\xa06(x\\xa0-\\xa01))/12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.', 'Если между каждой парой реек имеется зазор 6\\xa0дюймов,', 'Длина штакетника без зазоров\\xa0=\\xa01/2x', 'Если в ограждении x\\xa0реек, значит, между ними x\\xa0-\\xa01\\xa0зазоров', 'Общая длина в футах\\xa0=\\xa0(1/2x\\xa0+\\xa06(x\\xa0-\\xa01))/12']\nnew_fact = infer_new_fact(selected) # 'Упрощаем и получаем (13x\\xa0-\\xa012)/24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Прямой штакетник состоит из x\\xa0реек, каждая из которых имеет ширину 1/2\\xa0дюйма.', 'Если между каждой парой реек имеется зазор 6\\xa0дюймов,', 'что из перечисленного соответствует длине ограждения в футах?', 'E) (13x\\xa0-\\xa012)/24', 'Общая длина в футах\\xa0=\\xa0(1/2x\\xa0+\\xa06(x\\xa0-\\xa01))/12', 'Упрощаем и получаем (13x\\xa0-\\xa012)/24']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_75_9db165235d", "context": "", "options": ["A)238", "B)289", "C)200", "D)287", "E)187"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [1, 2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [1, 2, 3, 9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [3, 6, 11, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship; int1 & sent1 & sent2 -> int2: Then, m×t is the distance ship traveled after plane started; int1 & int2 & sent1 & sent2 -> int3: So we have, mt + 180 = 10mt; int3 -> int4: ⇒ 9mt = 180; int1 & int2 & int3 & int4 & sent1 & sent2 & sent3 -> int5: ⇒ mt = 20; int1 & int2 & int3 & int4 & int5 & sent1 & sent2 & sent3 -> int6: Hence distance = 180 + 20 = 200 miles; int3 & int4 & int5 & int6 & sent3 & sent6 -> int7: Answer:C; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "Корабль отправился в плавание.", "2": "Когда он прошел 180 миль, взлетел самолет со скоростью, в 10 раз превышающей скорость корабля.", "3": "Найдите расстояние от начальной точки до места их встречи.", "4": "A) 238", "5": "B) 289", "6": "C) 200", "7": "D) 287", "8": "E) 187", "9": "Пусть скорость корабля = m миль в час, а самолету потребовалось t часов, чтобы догнать корабль", "10": "Тогда m × t — расстояние, пройденное кораблем после взлета самолета", "11": "Получаем mt + 180 = 10mt", "12": "⇒ 0,9mt = 180", "13": "⇒ mt = 20", "14": "Следовательно, расстояние = 180 + 20 = 200 миль", "15": "Ответ: В", "16": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.']\nquestion = 'Найдите расстояние от начальной точки до места их встречи.'\nchoices = {'A': '238', 'B': '289', 'C': '200', 'D': '287', 'E': '187'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.']\nnew_fact = infer_new_fact(selected) # 'Пусть скорость корабля\\xa0=\\xa0m\\xa0миль в час, а самолету потребовалось t\\xa0часов, чтобы догнать корабль'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.', 'Пусть скорость корабля\\xa0=\\xa0m\\xa0миль в час, а самолету потребовалось t\\xa0часов, чтобы догнать корабль']\nnew_fact = infer_new_fact(selected) # 'Тогда m\\xa0×\\xa0t\\xa0— расстояние, пройденное кораблем после взлета самолета'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.', 'Пусть скорость корабля\\xa0=\\xa0m\\xa0миль в час, а самолету потребовалось t\\xa0часов, чтобы догнать корабль', 'Тогда m\\xa0×\\xa0t\\xa0— расстояние, пройденное кораблем после взлета самолета']\nnew_fact = infer_new_fact(selected) # 'Получаем mt\\xa0+\\xa0180\\xa0=\\xa010mt'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Получаем mt\\xa0+\\xa0180\\xa0=\\xa010mt']\nnew_fact = infer_new_fact(selected) # '⇒\\xa00,9mt\\xa0=\\xa0180'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.', 'Найдите расстояние от начальной точки до места их встречи.', 'Пусть скорость корабля\\xa0=\\xa0m\\xa0миль в час, а самолету потребовалось t\\xa0часов, чтобы догнать корабль', 'Тогда m\\xa0×\\xa0t\\xa0— расстояние, пройденное кораблем после взлета самолета', 'Получаем mt\\xa0+\\xa0180\\xa0=\\xa010mt', '⇒\\xa00,9mt\\xa0=\\xa0180']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0mt\\xa0=\\xa020'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Корабль отправился в плавание.', 'Когда он прошел 180\\xa0миль, взлетел самолет со скоростью, в 10\\xa0раз превышающей скорость корабля.', 'Найдите расстояние от начальной точки до места их встречи.', 'Пусть скорость корабля\\xa0=\\xa0m\\xa0миль в час, а самолету потребовалось t\\xa0часов, чтобы догнать корабль', 'Тогда m\\xa0×\\xa0t\\xa0— расстояние, пройденное кораблем после взлета самолета', 'Получаем mt\\xa0+\\xa0180\\xa0=\\xa010mt', '⇒\\xa00,9mt\\xa0=\\xa0180', '⇒\\xa0mt\\xa0=\\xa020']\nnew_fact = infer_new_fact(selected) # 'Следовательно, расстояние\\xa0=\\xa0180\\xa0+\\xa020\\xa0=\\xa0200\\xa0миль'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите расстояние от начальной точки до места их встречи.', 'C) 200', 'Получаем mt\\xa0+\\xa0180\\xa0=\\xa010mt', '⇒\\xa00,9mt\\xa0=\\xa0180', '⇒\\xa0mt\\xa0=\\xa020', 'Следовательно, расстояние\\xa0=\\xa0180\\xa0+\\xa020\\xa0=\\xa0200\\xa0миль']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_76_ca174602ed", "context": "", "options": ["A)300", "B)500", "C)5000", "D)6000", "E)7500"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [6], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [2, 3], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [0], "consequent": 16}, {"antecedents": [12, 13, 14, 15], "consequent": 17}, {"antecedents": [12, 13, 14, 15, 17], "consequent": 18}, {"antecedents": [12, 13, 14, 15, 17], "consequent": 19}, {"antecedents": [6, 11, 13, 14, 17, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "linearized_output_en": "sent6 -> int1: Let N = the total number of deer in the forest.; sent1 -> int2: During the first year, the percent of deer in the entire population with tags was: 300/N; sent2 & sent3 -> int3: 20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.; sent0 -> int4: Equating these two percents:; sent0 -> int5: Sample = Population; int1 & int2 & int3 & int4 -> int6: (20/500)=(300/N); int1 & int2 & int3 & int4 & int6 -> int7: N = (300/1)*(500/20); int1 & int2 & int3 & int4 & int6 -> int8: N=7500; int2 & int3 & int6 & int8 & sent11 & sent6 -> int9: Answer E; int9 -> int10: The answer is E);", "textual_logical_units": {"1": "В 2001 году в большом лесу было поймано, помечено бирками и выпущено на волю 300 оленей.", "2": "В 2002 году случайным образом было поймано 500 оленей,", "3": "из которых только 20 имели бирки с предыдущего года.", "4": "Если процент оленей в лесу, у которых были бирки в течение второго года и", "5": "которые были пойманы среди 500, соответствует проценту от общей популяции оленей с бирками в лесу,", "6": "какова общая популяция оленей в лесу (при условии, что в период с 2001 по 2002 год численность популяции не изменилась)?", "7": "A) 300", "8": "B) 500", "9": "C) 5000", "10": "D) 6000", "11": "E) 7500", "12": "Пусть N = общее количество оленей в лесу.", "13": "В течение первого года процент оленей с бирками во всей популяции составил: 300/N", "14": "20/500 — это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.", "15": "Приравниваем эти два процента:", "16": "Выборка = популяция", "17": "(20/500) = (300/N)", "18": "N = (300/1)*(500/20)", "19": "N = 7500", "20": "Ответ — Д", "21": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'В 2001\\xa0году в большом лесу было поймано, помечено бирками и выпущено на волю 300\\xa0оленей.',\n  'В 2002\\xa0году случайным образом было поймано 500\\xa0оленей,',\n  'из которых только 20\\xa0имели бирки с предыдущего года.',\n  'Если процент оленей в лесу, у которых были бирки в течение второго года и',\n  'которые были пойманы среди 500, соответствует проценту от общей популяции оленей с бирками в лесу,']\nquestion = 'какова общая популяция оленей в лесу (при условии, что в период с 2001 по 2002\\xa0год численность популяции не изменилась)?'\nchoices = {'A': '300', 'B': '500', 'C': '5000', 'D': '6000', 'E': '7500'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['какова общая популяция оленей в лесу (при условии, что в период с 2001 по 2002\\xa0год численность популяции не изменилась)?']\nnew_fact = infer_new_fact(selected) # 'Пусть N\\xa0=\\xa0общее количество оленей в лесу.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 2001\\xa0году в большом лесу было поймано, помечено бирками и выпущено на волю 300\\xa0оленей.']\nnew_fact = infer_new_fact(selected) # 'В течение первого года процент оленей с бирками во всей популяции составил: 300/N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 2002\\xa0году случайным образом было поймано 500\\xa0оленей,', 'из которых только 20\\xa0имели бирки с предыдущего года.']\nnew_fact = infer_new_fact(selected) # '20/500\\xa0— это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Приравниваем эти два процента:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Выборка\\xa0=\\xa0популяция'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть N\\xa0=\\xa0общее количество оленей в лесу.', 'В течение первого года процент оленей с бирками во всей популяции составил: 300/N', '20/500\\xa0— это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.', 'Приравниваем эти два процента:']\nnew_fact = infer_new_fact(selected) # '(20/500)\\xa0=\\xa0(300/N)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть N\\xa0=\\xa0общее количество оленей в лесу.', 'В течение первого года процент оленей с бирками во всей популяции составил: 300/N', '20/500\\xa0— это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.', 'Приравниваем эти два процента:', '(20/500)\\xa0=\\xa0(300/N)']\nnew_fact = infer_new_fact(selected) # 'N\\xa0=\\xa0(300/1)*(500/20)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть N\\xa0=\\xa0общее количество оленей в лесу.', 'В течение первого года процент оленей с бирками во всей популяции составил: 300/N', '20/500\\xa0— это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.', 'Приравниваем эти два процента:', '(20/500)\\xa0=\\xa0(300/N)']\nnew_fact = infer_new_fact(selected) # 'N\\xa0=\\xa07500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова общая популяция оленей в лесу (при условии, что в период с 2001 по 2002\\xa0год численность популяции не изменилась)?', 'E) 7500', 'В течение первого года процент оленей с бирками во всей популяции составил: 300/N', '20/500\\xa0— это процент оленей с бирками, пойманных в течение второго года. Поскольку этот процент соответствует проценту во всей популяции (т.е. общему количеству помеченных оленей, поделенному на общее количество оленей), эти два соотношения равны.', '(20/500)\\xa0=\\xa0(300/N)', 'N\\xa0=\\xa07500']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_77_12643ded8e", "context": "", "options": ["A)0.9", "B)0.8", "C)0.6", "D)0.65", "E)1.5"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 4, 5, 6], "consequent": 14}, {"antecedents": [2, 3, 14], "consequent": 15}, {"antecedents": [8, 10, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent4 & sent5 & sent6 -> int1: For each 10 min interval, if man comes in first 2 min, he'll catch the 1st train, if he comes in next 8 min, he'll catch the 2nd train.; int1 & sent2 & sent3 -> int2: Hence, for harbor line = (2/10) = 0.2 and for main line 0.8.; int2 & sent10 & sent8 -> int3: Answer:B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "На железнодорожную станцию прибывают два поезда.", "2": "Один прибывает на линию гавани, а", "3": "другой — на магистральную линию", "4": "с периодичностью 10 минут каждый.", "5": "Движение по магистральной линии начинается в 05:00, а", "6": "по линии гавани — в 05:02.", "7": "Человек каждый день приходит на станцию, чтобы успеть на первый прибывший поезд.", "8": "Какова вероятность того, что этот человек сядет на первый поезд?", "9": "A) 0,9", "10": "B) 0,8", "11": "C) 0,6", "12": "D) 0,65", "13": "E) 1,5", "14": "В течение каждых 10 минут, если человек придет в первые 2 минуты, то он сядет на первый поезд, а если в следующие 8 минут, то на второй.", "15": "Следовательно, для линии гавани вероятность = (2/10) = 0,2, а для магистральной линии — 0,8.", "16": "Ответ: Б", "17": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'На железнодорожную станцию прибывают два поезда.',\n  'Один прибывает на линию гавани, а',\n  'другой\\xa0— на магистральную линию',\n  'с периодичностью 10\\xa0минут каждый.',\n  'Движение по магистральной линии начинается в 05:00, а',\n  'по линии гавани\\xa0— в 05:02.',\n  'Человек каждый день приходит на станцию, чтобы успеть на первый прибывший поезд.']\nquestion = 'Какова вероятность того, что этот человек сядет на первый поезд?'\nchoices = {'A': '0,9', 'B': '0,8', 'C': '0,6', 'D': '0,65', 'E': '1,5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На железнодорожную станцию прибывают два поезда.', 'с периодичностью 10\\xa0минут каждый.', 'Движение по магистральной линии начинается в 05:00, а', 'по линии гавани\\xa0— в 05:02.']\nnew_fact = infer_new_fact(selected) # 'В течение каждых 10\\xa0минут, если человек придет в первые 2\\xa0минуты, то он сядет на первый поезд, а если в следующие 8\\xa0минут, то на второй.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один прибывает на линию гавани, а', 'другой\\xa0— на магистральную линию', 'В течение каждых 10\\xa0минут, если человек придет в первые 2\\xa0минуты, то он сядет на первый поезд, а если в следующие 8\\xa0минут, то на второй.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, для линии гавани вероятность\\xa0=\\xa0(2/10)\\xa0=\\xa00,2, а для магистральной линии\\xa0— 0,8.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова вероятность того, что этот человек сядет на первый поезд?', 'B) 0,8', 'Следовательно, для линии гавани вероятность\\xa0=\\xa0(2/10)\\xa0=\\xa00,2, а для магистральной линии\\xa0— 0,8.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_78_ed720d2dae", "context": "", "options": ["A)40.8", "B)41.6", "C)42.2", "D)43.5", "E)44.8"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [1, 2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The new average is 14.8 tons.; sent1 & sent2 -> int2: On average, the ten trucks are 2.6 tons below the average for a total weighting of 26 tons.; int1 & int2 -> int3: Therefore, the added truck must be 14.8 + 26 = 40.8 tons; int3 & sent3 & sent4 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Среднее (среднее арифметическое) значение массы 10 транспортных средств составляет 12,2 тонны.", "2": "После добавление к группе транспортных средств нового тяжелого грузовика средняя масса группы увеличилась на 2,6 тонны.", "3": "Какова масса тяжелого грузовика в тоннах?", "4": "A) 40,8", "5": "B) 41,6", "6": "C) 42,2", "7": "D) 43,5", "8": "E) 44,8", "9": "Новая средняя масса составляет 14,8 тонны.", "10": "В среднем масса десяти грузовиков на 2,6 тонны ниже среднего значения при общей массе 26 тонн.", "11": "Следовательно, добавленный грузовик должен весить 14,8 + 26 = 40,8 тонн", "12": "Ответ — А.", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Среднее (среднее арифметическое) значение массы 10\\xa0транспортных средств составляет 12,2\\xa0тонны.',\n  'После добавление к группе транспортных средств нового тяжелого грузовика средняя масса группы увеличилась на 2,6\\xa0тонны.']\nquestion = 'Какова масса тяжелого грузовика в тоннах?'\nchoices = {'A': '40,8', 'B': '41,6', 'C': '42,2', 'D': '43,5', 'E': '44,8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Среднее (среднее арифметическое) значение массы 10\\xa0транспортных средств составляет 12,2\\xa0тонны.', 'После добавление к группе транспортных средств нового тяжелого грузовика средняя масса группы увеличилась на 2,6\\xa0тонны.', 'Какова масса тяжелого грузовика в тоннах?']\nnew_fact = infer_new_fact(selected) # 'Новая средняя масса составляет 14,8\\xa0тонны.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Среднее (среднее арифметическое) значение массы 10\\xa0транспортных средств составляет 12,2\\xa0тонны.', 'После добавление к группе транспортных средств нового тяжелого грузовика средняя масса группы увеличилась на 2,6\\xa0тонны.']\nnew_fact = infer_new_fact(selected) # 'В среднем масса десяти грузовиков на 2,6\\xa0тонны ниже среднего значения при общей массе 26\\xa0тонн.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Новая средняя масса составляет 14,8\\xa0тонны.', 'В среднем масса десяти грузовиков на 2,6\\xa0тонны ниже среднего значения при общей массе 26\\xa0тонн.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, добавленный грузовик должен весить 14,8\\xa0+\\xa026\\xa0=\\xa040,8\\xa0тонн'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова масса тяжелого грузовика в тоннах?', 'A) 40,8', 'Следовательно, добавленный грузовик должен весить 14,8\\xa0+\\xa026\\xa0=\\xa040,8\\xa0тонн']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_79_cae495cfe5", "context": "", "options": ["A)20%", "B)40%", "C)50%", "D)65%", "E)75%"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [4, 10, 13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent0 -> int1: Population now - 100;; int1 & sent3 -> int2: Population one year from now - 110;; int2 & sent1 -> int3: Population two years from now - 121;; int3 & sent3 -> int4: Since the population two years from now (121) is exactly double the population one year ago then the population one year ago was 121/2=60.5.; int1 & int4 & sent4 -> int5: Now, the question asks about the population increase over the last year, so from 60.5 (last year) to 100 (now): percent increase=difference/original*100=(100-60.5)/60.5*100=39.5/60.5*100=~2/3*100=~65%.; int5 & sent4 & sent8 -> int6: Answer: D.; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Планировщики быстро развивающегося города прогнозируют, что в течение следующих двух лет население города будет увеличиваться на 10% в год.", "2": "Если этот прогноз сбудется,", "3": "через два года численность населения будет ровно в два раза больше, чем в прошлом году.", "4": "Какой из перечисленных вариантов ближе всего к процентному приросту населения в городе за последний год?", "5": "A) 20%", "6": "B) 40%", "7": "C) 50%", "8": "D) 65%", "9": "E) 75%", "10": "Численность населения в настоящее время — 100;", "11": "Численность населения через год — 110;", "12": "Численность населения через два года — 121;", "13": "Поскольку через два года численность населения (121) ровно вдвое превысит численность населения год назад, то год назад численность населения составляла 121/2 = 60,5.", "14": "Теперь возникает вопрос об увеличении численности населения за последний год, то есть с 60,5 (в прошлом году) до 100 (сейчас): процентное увеличение = разница/исходное*100 = (100 - 60,5)/60,5*100 = 39,5/60,5*100 = ~2/3*100 = ~65%.", "15": "Ответ: Г.", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Планировщики быстро развивающегося города прогнозируют, что в течение следующих двух лет население города будет увеличиваться на 10% в год.',\n  'Если этот прогноз сбудется,',\n  'через два года численность населения будет ровно в два раза больше, чем в прошлом году.']\nquestion = 'Какой из перечисленных вариантов ближе всего к процентному приросту населения в городе за последний год?'\nchoices = {'A': '20%', 'B': '40%', 'C': '50%', 'D': '65%', 'E': '75%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Численность населения в настоящее время\\xa0— 100;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['через два года численность населения будет ровно в два раза больше, чем в прошлом году.', 'Численность населения в настоящее время\\xa0— 100;']\nnew_fact = infer_new_fact(selected) # 'Численность населения через год\\xa0— 110;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Планировщики быстро развивающегося города прогнозируют, что в течение следующих двух лет население города будет увеличиваться на 10% в год.', 'Численность населения через год\\xa0— 110;']\nnew_fact = infer_new_fact(selected) # 'Численность населения через два года\\xa0— 121;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['через два года численность населения будет ровно в два раза больше, чем в прошлом году.', 'Численность населения через два года\\xa0— 121;']\nnew_fact = infer_new_fact(selected) # 'Поскольку через два года численность населения (121) ровно вдвое превысит численность населения год назад, то год назад численность населения составляла 121/2\\xa0=\\xa060,5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой из перечисленных вариантов ближе всего к процентному приросту населения в городе за последний год?', 'Численность населения в настоящее время\\xa0— 100;', 'Поскольку через два года численность населения (121) ровно вдвое превысит численность населения год назад, то год назад численность населения составляла 121/2\\xa0=\\xa060,5.']\nnew_fact = infer_new_fact(selected) # 'Теперь возникает вопрос об увеличении численности населения за последний год, то есть с 60,5 (в прошлом году) до 100 (сейчас): процентное увеличение\\xa0=\\xa0разница/исходное*100\\xa0=\\xa0(100\\xa0-\\xa060,5)/60,5*100\\xa0=\\xa039,5/60,5*100\\xa0=\\xa0~2/3*100\\xa0=\\xa0~65%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой из перечисленных вариантов ближе всего к процентному приросту населения в городе за последний год?', 'D) 65%', 'Теперь возникает вопрос об увеличении численности населения за последний год, то есть с 60,5 (в прошлом году) до 100 (сейчас): процентное увеличение\\xa0=\\xa0разница/исходное*100\\xa0=\\xa0(100\\xa0-\\xa060,5)/60,5*100\\xa0=\\xa039,5/60,5*100\\xa0=\\xa0~2/3*100\\xa0=\\xa0~65%.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_80_d74cb41016", "context": "", "options": ["A)62, 35", "B)62, 34", "C)34, 62", "D)42, 62", "E)62, 42"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 6, 12], "consequent": 13}, {"antecedents": [4, 5, 6, 12], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [6, 12, 15], "consequent": 16}, {"antecedents": [6, 8, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent0 -> int1: Suppose Arun has $X and Sajal has $Y. then,; int1 & sent2 & sent3 & sent6 -> int2: 2(x-30)= y+30 => 2x-y =90 …(i); int1 & sent4 & sent5 & sent6 -> int3: and x +10 =3(y-10) => x-3y = - 40 …(ii); int2 & int3 -> int4: Solving (i) and (ii), we get x =62 and y =34.; int1 & int4 & sent6 -> int5: Arun has $62 and Sajal has $34.; int5 & sent6 & sent8 -> int6: Answer B.; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Арджун и Саджал — друзья, и у каждого из них есть некоторое количество денег.", "2": "Если Арджун даст Саджалу 30 долл. США,", "3": "У Саджала будет в два раза больше денег, чем у Арджуна.", "4": "Но если Саджал даст Арджуну 10 долл. США,", "5": "У Арджуна будет в три раза больше денег, чем у Саджала.", "6": "Сколько денег у каждого из них?", "7": "A) 62, 35", "8": "B) 62, 34", "9": "C) 34, 62", "10": "D) 42, 62", "11": "E) 62, 42", "12": "Предположим, что у Арджуна X долл. США, а у Саджала Y долл. США. Тогда", "13": "2(x - 30) = y + 30 => 2x - y = 90...(i)", "14": "и x + 10 = 3(y - 10) => x - 3y = -40...(ii)", "15": "Решая уравнения (i) и (ii), получаем x = 62 и y = 34.", "16": "У Арджуна 62 долл. США, а у Саджала — 34 долл. США.", "17": "Ответ — Б.", "18": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Арджун и Саджал\\xa0— друзья, и у каждого из них есть некоторое количество денег.',\n  'Если Арджун даст Саджалу 30\\xa0долл. США,',\n  'У Саджала будет в два раза больше денег, чем у Арджуна.',\n  'Но если Саджал даст Арджуну 10\\xa0долл. США,',\n  'У Арджуна будет в три раза больше денег, чем у Саджала.']\nquestion = 'Сколько денег у каждого из них?'\nchoices = {'A': '62, 35', 'B': '62, 34', 'C': '34, 62', 'D': '42, 62', 'E': '62, 42'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Предположим, что у Арджуна X\\xa0долл. США, а у Саджала Y\\xa0долл. США. Тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Арджун даст Саджалу 30\\xa0долл. США,', 'У Саджала будет в два раза больше денег, чем у Арджуна.', 'Сколько денег у каждого из них?', 'Предположим, что у Арджуна X\\xa0долл. США, а у Саджала Y\\xa0долл. США. Тогда']\nnew_fact = infer_new_fact(selected) # '2(x\\xa0-\\xa030)\\xa0=\\xa0y\\xa0+\\xa030\\xa0=>\\xa02x\\xa0-\\xa0y\\xa0=\\xa090...(i)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Но если Саджал даст Арджуну 10\\xa0долл. США,', 'У Арджуна будет в три раза больше денег, чем у Саджала.', 'Сколько денег у каждого из них?', 'Предположим, что у Арджуна X\\xa0долл. США, а у Саджала Y\\xa0долл. США. Тогда']\nnew_fact = infer_new_fact(selected) # 'и x\\xa0+\\xa010\\xa0=\\xa03(y\\xa0-\\xa010)\\xa0=>\\xa0x\\xa0-\\xa03y\\xa0=\\xa0-40...(ii)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2(x\\xa0-\\xa030)\\xa0=\\xa0y\\xa0+\\xa030\\xa0=>\\xa02x\\xa0-\\xa0y\\xa0=\\xa090...(i)', 'и x\\xa0+\\xa010\\xa0=\\xa03(y\\xa0-\\xa010)\\xa0=>\\xa0x\\xa0-\\xa03y\\xa0=\\xa0-40...(ii)']\nnew_fact = infer_new_fact(selected) # 'Решая уравнения (i) и (ii), получаем x\\xa0=\\xa062 и y\\xa0=\\xa034.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег у каждого из них?', 'Предположим, что у Арджуна X\\xa0долл. США, а у Саджала Y\\xa0долл. США. Тогда', 'Решая уравнения (i) и (ii), получаем x\\xa0=\\xa062 и y\\xa0=\\xa034.']\nnew_fact = infer_new_fact(selected) # 'У Арджуна 62\\xa0долл. США, а у Саджала\\xa0— 34\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег у каждого из них?', 'B) 62, 34', 'У Арджуна 62\\xa0долл. США, а у Саджала\\xa0— 34\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_81_9c4f114daa", "context": "", "options": ["A)30 feet", "B)20 feet", "C)10 feet", "D)50 feet", "E)60 feet"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Area = length x width. Divide area by width to find the missing side.; int1 & sent2 & sent3 -> int2: 3000 ÷100 = 30; int2 & sent4 -> int3: The other side is 30 feet.; int3 & sent4 & sent5 -> int4: Correct answer A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Двор Джулии прямоугольный.", "2": "Одна сторона двора имеет ширину 100 футов.", "3": "Общая площадь двора составляет 3000 кв. футов.", "4": "Какова длина другой стороны двора?", "5": "A) 30 футов", "6": "B) 20 футов", "7": "C) 10 футов", "8": "D) 50 футов", "9": "E) 60 футов", "10": "Площадь = длина x ширина. Разделите площадь на ширину, чтобы найти недостающую сторону.", "11": "3000 ÷ 100 = 30", "12": "Длина другой стороны — 30 футов.", "13": "Правильный ответ — A", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Двор Джулии прямоугольный.', 'Одна сторона двора имеет ширину 100\\xa0футов.', 'Общая площадь двора составляет 3000\\xa0кв.\\xa0футов.']\nquestion = 'Какова длина другой стороны двора?'\nchoices = {'A': '30\\xa0футов', 'B': '20\\xa0футов', 'C': '10\\xa0футов', 'D': '50\\xa0футов', 'E': '60\\xa0футов'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Общая площадь двора составляет 3000\\xa0кв.\\xa0футов.', 'Какова длина другой стороны двора?']\nnew_fact = infer_new_fact(selected) # 'Площадь\\xa0=\\xa0длина\\xa0x\\xa0ширина. Разделите площадь на ширину, чтобы найти недостающую сторону.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Одна сторона двора имеет ширину 100\\xa0футов.', 'Общая площадь двора составляет 3000\\xa0кв.\\xa0футов.', 'Площадь\\xa0=\\xa0длина\\xa0x\\xa0ширина. Разделите площадь на ширину, чтобы найти недостающую сторону.']\nnew_fact = infer_new_fact(selected) # '3000\\xa0÷\\xa0100\\xa0=\\xa030'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова длина другой стороны двора?', '3000\\xa0÷\\xa0100\\xa0=\\xa030']\nnew_fact = infer_new_fact(selected) # 'Длина другой стороны\\xa0— 30\\xa0футов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова длина другой стороны двора?', 'A) 30\\xa0футов', 'Длина другой стороны\\xa0— 30\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_82_f598d04123", "context": "", "options": ["A)242", "B)308", "C)352", "D)412", "E)456"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: GCF*LCM = product of 2 numbers; int1 & sent1 & sent2 -> int2: 11*7700 = product of 2 numbers; int2 & sent3 -> int3: other number = 11*7700/350 = 242; int3 & sent3 & sent4 -> int4: Answer is A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Наибольший общий делитель двух натуральных чисел равен 11.", "2": "Наименьшее общее кратное этих двух целых чисел равно 7700.", "3": "Если одно из целых чисел — 350, какое второе?", "4": "A) 242", "5": "B) 308", "6": "C) 352", "7": "D) 412", "8": "E) 456", "9": "Наибольший общий делитель*наименьшее общее кратное = произведение 2 чисел", "10": "11*7700 = произведение 2 чисел", "11": "Второе число = 11*7700/350 = 242", "12": "Ответ — A", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Наибольший общий делитель двух натуральных чисел равен 11.', 'Наименьшее общее кратное этих двух целых чисел равно 7700.']\nquestion = 'Если одно из целых чисел\\xa0— 350, какое второе?'\nchoices = {'A': '242', 'B': '308', 'C': '352', 'D': '412', 'E': '456'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Наибольший общий делитель*наименьшее общее кратное\\xa0=\\xa0произведение 2\\xa0чисел'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Наибольший общий делитель двух натуральных чисел равен 11.', 'Наименьшее общее кратное этих двух целых чисел равно 7700.', 'Наибольший общий делитель*наименьшее общее кратное\\xa0=\\xa0произведение 2\\xa0чисел']\nnew_fact = infer_new_fact(selected) # '11*7700\\xa0=\\xa0произведение 2\\xa0чисел'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одно из целых чисел\\xa0— 350, какое второе?', '11*7700\\xa0=\\xa0произведение 2\\xa0чисел']\nnew_fact = infer_new_fact(selected) # 'Второе число\\xa0=\\xa011*7700/350\\xa0=\\xa0242'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одно из целых чисел\\xa0— 350, какое второе?', 'A) 242', 'Второе число\\xa0=\\xa011*7700/350\\xa0=\\xa0242']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_83_4e928f6f2a", "context": "", "options": ["A)56", "B)58", "C)60", "D)62", "E)64"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [4, 11, 12], "consequent": 13}, {"antecedents": [4, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let x be the length of one side of the original square.; int1 & sent1 & sent2 & sent3 -> int2: The area of the rectangle is x(x-4)=140.; int1 & int2 -> int3: x=14.; int2 & int3 & sent4 -> int4: The perimeter of the square was 4*14=56 feet.; int4 & sent4 & sent5 -> int5: The answer is A.; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Квадратный кусок ткани обрезали на 4 фута по одному краю. Получился прямоугольный кусок, который затем", "2": "разрезали по диагонали пополам на два треугольника.", "3": "Если площадь каждого треугольника равна 70 кв. футов,", "4": "каким был периметр (в футах) исходного квадратного куска ткани?", "5": "A) 56", "6": "B) 58", "7": "C) 60", "8": "D) 62", "9": "E) 64", "10": "Пусть x — длина одной стороны исходного квадрата.", "11": "Площадь прямоугольника равна x (x - 4) = 140.", "12": "x = 14.", "13": "Периметр квадрата был равен 4*14 = 56 футов.", "14": "Ответ — А.", "15": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Квадратный кусок ткани обрезали на 4\\xa0фута по одному краю. Получился прямоугольный кусок, который затем',\n  'разрезали по диагонали пополам на два треугольника.',\n  'Если площадь каждого треугольника равна 70\\xa0кв.\\xa0футов,']\nquestion = 'каким был периметр (в футах) исходного квадратного куска ткани?'\nchoices = {'A': '56', 'B': '58', 'C': '60', 'D': '62', 'E': '64'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— длина одной стороны исходного квадрата.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Квадратный кусок ткани обрезали на 4\\xa0фута по одному краю. Получился прямоугольный кусок, который затем', 'разрезали по диагонали пополам на два треугольника.', 'Если площадь каждого треугольника равна 70\\xa0кв.\\xa0футов,', 'Пусть x\\xa0— длина одной стороны исходного квадрата.']\nnew_fact = infer_new_fact(selected) # 'Площадь прямоугольника равна x\\xa0(x\\xa0-\\xa04)\\xa0=\\xa0140.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— длина одной стороны исходного квадрата.', 'Площадь прямоугольника равна x\\xa0(x\\xa0-\\xa04)\\xa0=\\xa0140.']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa014.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким был периметр (в футах) исходного квадратного куска ткани?', 'Площадь прямоугольника равна x\\xa0(x\\xa0-\\xa04)\\xa0=\\xa0140.', 'x\\xa0=\\xa014.']\nnew_fact = infer_new_fact(selected) # 'Периметр квадрата был равен 4*14\\xa0=\\xa056\\xa0футов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким был периметр (в футах) исходного квадратного куска ткани?', 'A) 56', 'Периметр квадрата был равен 4*14\\xa0=\\xa056\\xa0футов.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_84_0c41f001be", "context": "", "options": ["A)18", "B)30", "C)6", "D)15", "E)12"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent0 -> int1: Length of ribbon originally = 30 cm; sent2 -> int2: Let the original length be 5x and reduced length be 3x.; int1 & int2 -> int3: But 5x = 30 cm; int3 -> int4: x = 30/5 cm = 6 cm; int4 & sent3 -> int5: Therefore, reduced length = 3 cm; int2 & int4 & int5 -> int6: = 3 × 6 cm = 18 cm; int6 & sent3 & sent4 -> int7: Answer:A; int7 -> int8: The answer is A);", "textual_logical_units": {"1": "Первоначальная длина ленты была равна 30 см.", "2": "Она было уменьшена в соотношении 5: 3.", "3": "Какова длина ленты сейчас?", "4": "A) 18", "5": "B) 30", "6": "C) 6", "7": "D) 15", "8": "E) 12", "9": "Исходная длина ленты = 30 см", "10": "Пусть 5x — исходная длина, а 3x — уменьшенная длина.", "11": "Но 5x = 30 см", "12": "х = 30/5 см = 6 см", "13": "Следовательно, уменьшенная длина = 3 см", "14": "= 3 × 6 см = 18 см", "15": "Ответ: А", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Первоначальная длина ленты была равна 30\\xa0см.', 'Она было уменьшена в соотношении 5: 3.']\nquestion = 'Какова длина ленты сейчас?'\nchoices = {'A': '18', 'B': '30', 'C': '6', 'D': '15', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Исходная длина ленты\\xa0=\\xa030\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Она было уменьшена в соотношении 5: 3.']\nnew_fact = infer_new_fact(selected) # 'Пусть 5x\\xa0— исходная длина, а 3x\\xa0— уменьшенная длина.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Исходная длина ленты\\xa0=\\xa030\\xa0см', 'Пусть 5x\\xa0— исходная длина, а 3x\\xa0— уменьшенная длина.']\nnew_fact = infer_new_fact(selected) # 'Но 5x\\xa0=\\xa030\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Но 5x\\xa0=\\xa030\\xa0см']\nnew_fact = infer_new_fact(selected) # 'х\\xa0=\\xa030/5\\xa0см\\xa0=\\xa06\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова длина ленты сейчас?', 'х\\xa0=\\xa030/5\\xa0см\\xa0=\\xa06\\xa0см']\nnew_fact = infer_new_fact(selected) # 'Следовательно, уменьшенная длина\\xa0=\\xa03\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть 5x\\xa0— исходная длина, а 3x\\xa0— уменьшенная длина.', 'х\\xa0=\\xa030/5\\xa0см\\xa0=\\xa06\\xa0см', 'Следовательно, уменьшенная длина\\xa0=\\xa03\\xa0см']\nnew_fact = infer_new_fact(selected) # '=\\xa03\\xa0×\\xa06\\xa0см\\xa0=\\xa018\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова длина ленты сейчас?', 'A) 18', '=\\xa03\\xa0×\\xa06\\xa0см\\xa0=\\xa018\\xa0см']\nnew_fact = infer_new_fact(selected) # 'Ответ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_85_2fbcc80252", "context": "", "options": ["A)20", "B)30", "C)40", "D)200", "E)None"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 3], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [16], "consequent": 18}, {"antecedents": [16], "consequent": 19}, {"antecedents": [12], "consequent": 20}, {"antecedents": [4, 18], "consequent": 21}, {"antecedents": [0], "consequent": 22}, {"antecedents": [0], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [4, 5, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "linearized_output_en": "sent0 -> int1: From the given data,; sent1 & sent3 -> int2: abc – cba + 396c = 990; int2 -> int3: 100a + 10b + c – (100c + 10b + a) + 396c = 990; int3 -> int4: 99a – 99c + 396c = 990; int4 -> int5: Observe that each term is divisible by 99. So on dividing the above expression by 99, we get; int4 & int5 -> int6: a – c + 4c = 10; int6 -> int7: a + 3c = 10; int7 -> int8: For c = 1, a = 7; int7 -> int9: c = 2, a = 4; int7 -> int10: c = 3, a = 1; int3 -> int11: 'b' can take any value from 0 to 9; int9 & sent4 -> int12: We have to find the value of M more than 300. So minimum value of 'a' should be 4.; sent0 -> int13: So total possibilities are 402, 412, ...., 492 = 10 values; sent0 -> int14: 701, 711, ....., 791 = 10 values; int13 & int14 -> int15: So total values = 20.; int15 & sent4 & sent5 -> int16: Correct option: A; int16 -> int17: The answer is A);", "textual_logical_units": {"1": "M = abc и является трехзначным числом, а N = cba.", "2": "Если M > N и", "3": "М - N + 396с = 990,", "4": "сколько значений M больше 300?", "5": "A) 20", "6": "B) 30", "7": "C) 40", "8": "D) 200", "9": "E) Ничего из вышеперечисленного", "10": "Исходя из данных задачи,", "11": "abc - cba + 396c = 990", "12": "100а + 10b + с - (100с + 10b + A) + 396с = 990", "13": "99а - 99с + 396с = 990", "14": "Обратите внимание, что каждый одночлен делится на 99. Разделив приведенное выше выражение на 99, получаем", "15": "а - с + 4с = 10", "16": "a + 3c = 10", "17": "Для c = 1, а = 7", "18": "c = 2, а = 4", "19": "c = 3, а = 1", "20": "b может принимать любое значение от 0 до 9", "21": "Необходимо найти значение M больше 300. Минимальное значение a должно быть равно 4.", "22": "Общее количество возможных вариантов 402, 412,..., 492 = 10 значений", "23": "701, 711,..., 791 = 10 значений", "24": "Таким образом, общее количество значений = 20.", "25": "Правильный вариант: A", "26": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['M\\xa0=\\xa0abc и является трехзначным числом, а N\\xa0=\\xa0cba.', 'Если M\\xa0>\\xa0N и', 'М\\xa0-\\xa0N\\xa0+\\xa0396с\\xa0=\\xa0990,']\nquestion = 'сколько значений\\xa0M больше 300?'\nchoices = {'A': '20', 'B': '30', 'C': '40', 'D': '200', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Исходя из данных задачи,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0=\\xa0abc и является трехзначным числом, а N\\xa0=\\xa0cba.', 'М\\xa0-\\xa0N\\xa0+\\xa0396с\\xa0=\\xa0990,']\nnew_fact = infer_new_fact(selected) # 'abc\\xa0-\\xa0cba\\xa0+\\xa0396c\\xa0=\\xa0990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['abc\\xa0-\\xa0cba\\xa0+\\xa0396c\\xa0=\\xa0990']\nnew_fact = infer_new_fact(selected) # '100а\\xa0+\\xa010b\\xa0+\\xa0с\\xa0-\\xa0(100с\\xa0+\\xa010b\\xa0+\\xa0A)\\xa0+\\xa0396с\\xa0=\\xa0990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100а\\xa0+\\xa010b\\xa0+\\xa0с\\xa0-\\xa0(100с\\xa0+\\xa010b\\xa0+\\xa0A)\\xa0+\\xa0396с\\xa0=\\xa0990']\nnew_fact = infer_new_fact(selected) # '99а\\xa0-\\xa099с\\xa0+\\xa0396с\\xa0=\\xa0990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['99а\\xa0-\\xa099с\\xa0+\\xa0396с\\xa0=\\xa0990']\nnew_fact = infer_new_fact(selected) # 'Обратите внимание, что каждый одночлен делится на\\xa099. Разделив приведенное выше выражение на 99, получаем'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['99а\\xa0-\\xa099с\\xa0+\\xa0396с\\xa0=\\xa0990', 'Обратите внимание, что каждый одночлен делится на\\xa099. Разделив приведенное выше выражение на 99, получаем']\nnew_fact = infer_new_fact(selected) # 'а\\xa0-\\xa0с\\xa0+\\xa04с\\xa0=\\xa010'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а\\xa0-\\xa0с\\xa0+\\xa04с\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'a\\xa0+\\xa03c\\xa0=\\xa010'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a\\xa0+\\xa03c\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'Для c\\xa0=\\xa01, а\\xa0=\\xa07'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a\\xa0+\\xa03c\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'c\\xa0=\\xa02, а\\xa0=\\xa04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a\\xa0+\\xa03c\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'c\\xa0=\\xa03, а\\xa0=\\xa01'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100а\\xa0+\\xa010b\\xa0+\\xa0с\\xa0-\\xa0(100с\\xa0+\\xa010b\\xa0+\\xa0A)\\xa0+\\xa0396с\\xa0=\\xa0990']\nnew_fact = infer_new_fact(selected) # 'b может принимать любое значение от 0 до 9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько значений\\xa0M больше 300?', 'c\\xa0=\\xa02, а\\xa0=\\xa04']\nnew_fact = infer_new_fact(selected) # 'Необходимо найти значение M больше 300. Минимальное значение a должно быть равно 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Общее количество возможных вариантов 402, 412,..., 492\\xa0=\\xa010\\xa0значений'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '701, 711,..., 791\\xa0=\\xa010\\xa0значений'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общее количество возможных вариантов 402, 412,..., 492\\xa0=\\xa010\\xa0значений', '701, 711,..., 791\\xa0=\\xa010\\xa0значений']\nnew_fact = infer_new_fact(selected) # 'Таким образом, общее количество значений\\xa0=\\xa020.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько значений\\xa0M больше 300?', 'A) 20', 'Таким образом, общее количество значений\\xa0=\\xa020.']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_86_2ff50b170a", "context": "", "options": ["A)550", "B)570", "C)600", "D)700", "E)none of these"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: 20% means 1/5 and 28% means 7/25,taking the lcm of the denominators 5 and 25 we get 25,the least multiple of 25 which is greater than 501 is 525. So, answer is none; int1 & sent3 & sent8 -> int2: ANSWER:E; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "В школе обучается более 501 ученика, 20% из них точно изучали физику, а", "2": "28% — точно изучали математику.", "3": "Какое количество учеников в школе может быть наименьшим?", "4": "A) 550", "5": "B) 570", "6": "C) 600", "7": "D) 700", "8": "E) Ничего из вышеперечисленного", "9": "20% означает 1/5, а 28% — 7/25. Если взять наименьшее общее кратное знаменателей 5 и 25, то получится 25. Наименьшее кратное 25, которое больше 501, равно 525. Итак, ответ — ничего", "10": "ОТВЕТ: Д", "11": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['В школе обучается более 501\\xa0ученика, 20%\\xa0из них точно изучали физику, а', '28%\\xa0— точно изучали математику.']\nquestion = 'Какое количество учеников в школе может быть наименьшим?'\nchoices = {'A': '550', 'B': '570', 'C': '600', 'D': '700', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В школе обучается более 501\\xa0ученика, 20%\\xa0из них точно изучали физику, а', '28%\\xa0— точно изучали математику.', 'Какое количество учеников в школе может быть наименьшим?']\nnew_fact = infer_new_fact(selected) # '20% означает 1/5, а 28%\\xa0— 7/25. Если взять наименьшее общее кратное знаменателей 5 и 25, то получится 25. Наименьшее кратное 25, которое больше 501, равно 525. Итак, ответ\\xa0— ничего'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое количество учеников в школе может быть наименьшим?', 'E) Ничего из вышеперечисленного', '20% означает 1/5, а 28%\\xa0— 7/25. Если взять наименьшее общее кратное знаменателей 5 и 25, то получится 25. Наименьшее кратное 25, которое больше 501, равно 525. Итак, ответ\\xa0— ничего']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_87_19830bffb8", "context": "", "options": ["A)37", "B)41", "C)40", "D)42", "E)43"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 3, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: Raj’s age today = 17 decades,; int1 & sent1 -> int2: Hence, 5 decades back, he must be 12 years old.; int2 & sent1 & sent3 -> int3: Rahim must be 36 years old, Because (3×12).; int3 & sent3 -> int4: 5 years back Rahim must be 41 years old today. Because (36+5).; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Если 5 лет назад Иван был на треть младше Петра, а", "2": "сейчас Ивану 17 лет,", "3": "сколько сейчас лет Петру?", "4": "A) 37", "5": "B) 41", "6": "C) 40", "7": "D) 42", "8": "E) 43", "9": "Сегодняшний возраст Ивана = 17 лет,", "10": "следовательно, 5 лет назад ему должно было исполниться 12 лет.", "11": "Поскольку (3 × 12), 5 лет назад Петру должно быть 36 лет.", "12": "Сегодня Петру должен быть 41 год. Поскольку (36 + 5).", "13": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Если 5\\xa0лет назад Иван был на треть младше Петра, а', 'сейчас Ивану 17\\xa0лет,']\nquestion = 'сколько сейчас лет Петру?'\nchoices = {'A': '37', 'B': '41', 'C': '40', 'D': '42', 'E': '43'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Сегодняшний возраст Ивана\\xa0=\\xa017\\xa0лет,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 5\\xa0лет назад Иван был на треть младше Петра, а', 'Сегодняшний возраст Ивана\\xa0=\\xa017\\xa0лет,']\nnew_fact = infer_new_fact(selected) # 'следовательно, 5\\xa0лет назад ему должно было исполниться 12\\xa0лет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 5\\xa0лет назад Иван был на треть младше Петра, а', 'сколько сейчас лет Петру?', 'следовательно, 5\\xa0лет назад ему должно было исполниться 12\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Поскольку (3\\xa0×\\xa012), 5\\xa0лет назад Петру должно быть 36\\xa0лет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько сейчас лет Петру?', 'Поскольку (3\\xa0×\\xa012), 5\\xa0лет назад Петру должно быть 36\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Сегодня Петру должен быть 41\\xa0год. Поскольку (36\\xa0+\\xa05).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сегодня Петру должен быть 41\\xa0год. Поскольку (36\\xa0+\\xa05).']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_88_14a251ad54", "context": "", "options": ["A)51 days", "B)61 days", "C)71 days", "D)81 days", "E)91 days"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Area of the field grazed = [22/7*14*14]sq.ft. = 616 sq.ft.; int1 & sent2 -> int2: Number of days taken to graze the field = 616/10 days; int2 -> int3: => 61 days; int3 & sent3 & sent5 -> int4: ANSWER:B; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Корову привязывают посреди поля на веревку длиной 14 футов.", "2": "Если корова съедает траву на площади 10 кв. футов", "3": "в день, сколько примерно времени потребуется корове, чтобы съесть траву на всем поле?", "4": "A) 51 день", "5": "B) 61 день", "6": "C) 71 день", "7": "D) 81 день", "8": "E) 91 день", "9": "Площадь пастбищного поля = [22/7*14*14] кв. футов = 616 кв. футов", "10": "Количество дней, которое потребуется, чтобы съесть траву на всем поле = 616/10 дней", "11": "=> 61 день", "12": "ОТВЕТ: Б", "13": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Корову привязывают посреди поля на веревку длиной 14\\xa0футов.', 'Если корова съедает траву на площади 10\\xa0кв.\\xa0футов']\nquestion = 'в день, сколько примерно времени потребуется корове, чтобы съесть траву на всем поле?'\nchoices = {'A': '51\\xa0день', 'B': '61\\xa0день', 'C': '71\\xa0день', 'D': '81\\xa0день', 'E': '91\\xa0день'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Корову привязывают посреди поля на веревку длиной 14\\xa0футов.', 'в день, сколько примерно времени потребуется корове, чтобы съесть траву на всем поле?']\nnew_fact = infer_new_fact(selected) # 'Площадь пастбищного поля\\xa0=\\xa0[22/7*14*14]\\xa0кв.\\xa0футов\\xa0=\\xa0616\\xa0кв.\\xa0футов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если корова съедает траву на площади 10\\xa0кв.\\xa0футов', 'Площадь пастбищного поля\\xa0=\\xa0[22/7*14*14]\\xa0кв.\\xa0футов\\xa0=\\xa0616\\xa0кв.\\xa0футов']\nnew_fact = infer_new_fact(selected) # 'Количество дней, которое потребуется, чтобы съесть траву на всем поле\\xa0=\\xa0616/10\\xa0дней'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество дней, которое потребуется, чтобы съесть траву на всем поле\\xa0=\\xa0616/10\\xa0дней']\nnew_fact = infer_new_fact(selected) # '=>\\xa061\\xa0день'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['в день, сколько примерно времени потребуется корове, чтобы съесть траву на всем поле?', 'B) 61\\xa0день', '=>\\xa061\\xa0день']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_89_05715d7765", "context": "", "options": ["A)2% Profit", "B)3% Profit", "C)2% Loss", "D)3% Loss", "E)4% Loss"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent3 -> int1: S.P.=(100+gain%100∗C.P); int1 & sent1 & sent2 & sent3 -> int2: So, C.P. = (100/110∗25.75); sent0 -> int3: When S.P. = 25.75 then; int2 & int3 -> int4: Profit=25.75−25=Re.0.75; int4 & sent3 -> int5: Profit%=0.75/25∗100=3%; int5 & sent3 & sent5 -> int6: Answer is B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Книга была продана за 27,50 рупий с прибылью в 10%.", "2": "Каким был бы процент прибыли и убытка,", "3": "если бы ее продали за 25,75 рупий?", "4": "A) Прибыль 2%", "5": "B) Прибыль 3%", "6": "C) Убыток 2%", "7": "D) Убыток 3%", "8": "E) Убыток 4%", "9": "Прейскурантная цена = (100 + % прибыли100*закупочная ценA)", "10": "Закупочная цена = (100/110*25,75)", "11": "Если прейскурантная цена = 25,75, то", "12": "Прибыль = 25,75 - 25 = 0,75 рупии", "13": "Прибыль% = 0,75/25*100 = 3%", "14": "Ответ — Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Книга была продана за 27,50\\xa0рупий с прибылью в 10%.', 'Каким был бы процент прибыли и убытка,']\nquestion = 'если бы ее продали за 25,75\\xa0рупий?'\nchoices = {'A': 'Прибыль\\xa02%', 'B': 'Прибыль\\xa03%', 'C': 'Убыток\\xa02%', 'D': 'Убыток\\xa03%', 'E': 'Убыток\\xa04%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['если бы ее продали за 25,75\\xa0рупий?']\nnew_fact = infer_new_fact(selected) # 'Прейскурантная цена\\xa0=\\xa0(100\\xa0+\\xa0%\\xa0прибыли100*закупочная ценA)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Книга была продана за 27,50\\xa0рупий с прибылью в 10%.', 'Каким был бы процент прибыли и убытка,', 'если бы ее продали за 25,75\\xa0рупий?', 'Прейскурантная цена\\xa0=\\xa0(100\\xa0+\\xa0%\\xa0прибыли100*закупочная ценA)']\nnew_fact = infer_new_fact(selected) # 'Закупочная цена\\xa0=\\xa0(100/110*25,75)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Если прейскурантная цена\\xa0=\\xa025,75, то'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Закупочная цена\\xa0=\\xa0(100/110*25,75)', 'Если прейскурантная цена\\xa0=\\xa025,75, то']\nnew_fact = infer_new_fact(selected) # 'Прибыль\\xa0=\\xa025,75\\xa0-\\xa025\\xa0=\\xa00,75\\xa0рупии'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если бы ее продали за 25,75\\xa0рупий?', 'Прибыль\\xa0=\\xa025,75\\xa0-\\xa025\\xa0=\\xa00,75\\xa0рупии']\nnew_fact = infer_new_fact(selected) # 'Прибыль%\\xa0=\\xa00,75/25*100\\xa0=\\xa03%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если бы ее продали за 25,75\\xa0рупий?', 'B) Прибыль\\xa03%', 'Прибыль%\\xa0=\\xa00,75/25*100\\xa0=\\xa03%']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_90_4201967ec4", "context": "", "options": ["A)7", "B)3", "C)2", "D)1", "E)6"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 8], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Total ways in which 3 children can be arranged on 3 chairs = 3*2*1 = 6; sent0 -> int2: But in half cases Susan will be left of Tim and in other half of cases Tim will be on left of Susan; int1 & sent1 & sent2 -> int3: i.e. Desired cases in which Susan is on the left of Tim = (1/2)*6 = 3; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Сколькими способами воспитатель в детском саду может рассадить группу из 3 детей (Сюзанну, Тима и", "2": "Женю) в ряд на трех одинаковых стульях так, чтобы Сюзанна была слева от Тима?", "3": "A) 7", "4": "B) 3", "5": "C) 2", "6": "D) 1", "7": "E) 6", "8": "Общее количество способов размещения 3 детей на 3 стульях = 3*2*1 = 6", "9": "Но в половине случаев Сюзанна будет слева от Тима, а в другой половине Тим будет слева от Сюзанны,", "10": "т.е. количество требуемых случаев, когда Сюзанна находится слева от Тима = (1/2)*6 = 3", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Сколькими способами воспитатель в детском саду может рассадить группу из 3\\xa0детей (Сюзанну, Тима и']\nquestion = 'Женю) в ряд на трех одинаковых стульях так, чтобы Сюзанна была слева от Тима?'\nchoices = {'A': '7', 'B': '3', 'C': '2', 'D': '1', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколькими способами воспитатель в детском саду может рассадить группу из 3\\xa0детей (Сюзанну, Тима и', 'Женю) в ряд на трех одинаковых стульях так, чтобы Сюзанна была слева от Тима?']\nnew_fact = infer_new_fact(selected) # 'Общее количество способов размещения 3\\xa0детей на 3\\xa0стульях\\xa0=\\xa03*2*1\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Но в половине случаев Сюзанна будет слева от Тима, а в другой половине Тим будет слева от Сюзанны,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами воспитатель в детском саду может рассадить группу из 3\\xa0детей (Сюзанну, Тима и', 'Женю) в ряд на трех одинаковых стульях так, чтобы Сюзанна была слева от Тима?', 'Общее количество способов размещения 3\\xa0детей на 3\\xa0стульях\\xa0=\\xa03*2*1\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # 'т.е. количество требуемых случаев, когда Сюзанна находится слева от Тима\\xa0=\\xa0(1/2)*6\\xa0=\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['т.е. количество требуемых случаев, когда Сюзанна находится слева от Тима\\xa0=\\xa0(1/2)*6\\xa0=\\xa03']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_91_eccc07e222", "context": "", "options": ["A)Rs.1560", "B)Rs.1680", "C)Rs.1840", "D)Rs.1950", "E)Rs.1690"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [3, 4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [13, 15], "consequent": 16}, {"antecedents": [12, 16], "consequent": 17}, {"antecedents": [5, 17], "consequent": 18}, {"antecedents": [6, 8, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.; int1 & sent3 & sent4 -> int2: Then, 540y + x = 1800 …. And 620y + x = 2040; int2 -> int3: On subtracting (i) from (ii), we get 80y = 240  =>  y = 3; int2 & int3 -> int4: Putting y = 3 in (i) we get :; int2 & int4 -> int5: 540 * 3 + x = 1800 x = (1800-1620) = 180; int1 & int5 -> int6: . : Fixed charges = Rs.180, Charge per unit = Rs.3.; int6 & sent5 -> int7: Total charges for consuming 500 units = 180 +(500*3) = Rs.1680; int7 & sent6 & sent8 -> int8: Answer:B; int8 -> int9: The answer is B);", "textual_logical_units": {"1": "Счет за телефонную связь в учреждении является частично фиксированным и", "2": "частично зависит от количества совершенных вызовов.", "3": "В определенном месяце было совершено 540 вызовов, и счет составил 1800 рупий.", "4": "В другом месяце было совершено 620 вызовов, и счет составил 2040 рупий.", "5": "В третьем месяце было совершено 500 вызовов из-за большего количества\nпраздников.", "6": "Счет за этот месяц будет следующим:", "7": "A) 1560 рупий", "8": "B) 1680 рупий", "9": "C) 1840 рупий", "10": "D) 1950 рупий", "11": "E) 1690 рупий", "12": "Пусть X рупий — фиксированная сумма, а Y рупий — стоимость каждого вызова.", "13": "Тогда 540y + x = 1800... и 620y + x = 2040...", "14": "При вычитании (i) из (ii) получаем 80y = 240 -> y = 3", "15": "Подставив y = 3 в уравнение (i), получаем:", "16": "540*3 + х = 1800х = (1800 - 1620) = 180", "17": ". : Фиксированные платежи = 180 рупий, платеж за вызов = 3 рупии.", "18": "Общий платеж за 500 вызовов = 180 + (500*3) = 1680 рупий", "19": "Ответ: Б", "20": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Счет за телефонную связь в учреждении является частично фиксированным и',\n  'частично зависит от количества совершенных вызовов.',\n  'В определенном месяце было совершено 540\\xa0вызовов, и счет составил 1800\\xa0рупий.',\n  'В другом месяце было совершено 620\\xa0вызовов, и счет составил 2040\\xa0рупий.',\n  'В третьем месяце было совершено 500\\xa0вызовов из-за большего количества\\nпраздников.']\nquestion = 'Счет за этот месяц будет следующим:'\nchoices = {'A': '1560\\xa0рупий', 'B': '1680\\xa0рупий', 'C': '1840\\xa0рупий', 'D': '1950\\xa0рупий', 'E': '1690\\xa0рупий'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть X\\xa0рупий\\xa0— фиксированная сумма, а Y\\xa0рупий\\xa0— стоимость каждого вызова.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В определенном месяце было совершено 540\\xa0вызовов, и счет составил 1800\\xa0рупий.', 'В другом месяце было совершено 620\\xa0вызовов, и счет составил 2040\\xa0рупий.', 'Пусть X\\xa0рупий\\xa0— фиксированная сумма, а Y\\xa0рупий\\xa0— стоимость каждого вызова.']\nnew_fact = infer_new_fact(selected) # 'Тогда 540y\\xa0+\\xa0x\\xa0=\\xa01800... и 620y\\xa0+\\xa0x\\xa0=\\xa02040...'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда 540y\\xa0+\\xa0x\\xa0=\\xa01800... и 620y\\xa0+\\xa0x\\xa0=\\xa02040...']\nnew_fact = infer_new_fact(selected) # 'При вычитании (i) из (ii) получаем 80y\\xa0=\\xa0240\\xa0->\\xa0y\\xa0=\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда 540y\\xa0+\\xa0x\\xa0=\\xa01800... и 620y\\xa0+\\xa0x\\xa0=\\xa02040...', 'При вычитании (i) из (ii) получаем 80y\\xa0=\\xa0240\\xa0->\\xa0y\\xa0=\\xa03']\nnew_fact = infer_new_fact(selected) # 'Подставив y\\xa0=\\xa03 в уравнение (i), получаем:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда 540y\\xa0+\\xa0x\\xa0=\\xa01800... и 620y\\xa0+\\xa0x\\xa0=\\xa02040...', 'Подставив y\\xa0=\\xa03 в уравнение (i), получаем:']\nnew_fact = infer_new_fact(selected) # '540*3\\xa0+\\xa0х\\xa0=\\xa01800х\\xa0=\\xa0(1800\\xa0-\\xa01620)\\xa0=\\xa0180'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть X\\xa0рупий\\xa0— фиксированная сумма, а Y\\xa0рупий\\xa0— стоимость каждого вызова.', '540*3\\xa0+\\xa0х\\xa0=\\xa01800х\\xa0=\\xa0(1800\\xa0-\\xa01620)\\xa0=\\xa0180']\nnew_fact = infer_new_fact(selected) # '. : Фиксированные платежи\\xa0=\\xa0180 рупий, платеж за вызов\\xa0=\\xa03 рупии.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В третьем месяце было совершено 500\\xa0вызовов из-за большего количества\\nпраздников.', '. : Фиксированные платежи\\xa0=\\xa0180 рупий, платеж за вызов\\xa0=\\xa03 рупии.']\nnew_fact = infer_new_fact(selected) # 'Общий платеж за 500\\xa0вызовов\\xa0=\\xa0180\\xa0+\\xa0(500*3)\\xa0=\\xa01680\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Счет за этот месяц будет следующим:', 'B) 1680\\xa0рупий', 'Общий платеж за 500\\xa0вызовов\\xa0=\\xa0180\\xa0+\\xa0(500*3)\\xa0=\\xa01680\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_92_34ad5ae71a", "context": "", "options": ["A)1 hour and 31 minutes", "B)2 hour and 31 minutes", "C)3 hour and 31 minutes", "D)4 hour and 31 minutes", "E)5 hour and 31 minutes"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [14], "consequent": 16}, {"antecedents": [4, 5], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [13, 18], "consequent": 20}, {"antecedents": [5, 6, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: If ball A makes 2 rotations in 26 minutes, it makes 1 rotation in 13 minutes. If ball B makes 5 rotations in 35 minutes, it makes 1 rotation in 7 minutes.; sent0 -> int2: The two balls start rotating now and makes several rotations before they are at the SAME starting points. Ball A would have done a WHOLE number X of rotations and ball B would have done a WHOLE number Y of rotations. Also they would have rotated during the same period of time T. Hence; int1 & int2 -> int3: T = 13 X = 7 Y; int3 -> int4: Hence 13 X = 7 Y; sent0 -> int5: Solve the above for X; int4 -> int6: X = 7 Y / 13; sent4 & sent5 -> int7: We want the time when they are FIRST at the same starting point. Therefore X and Y are the smallest whole numbers of the equation X = 7 Y / 13. The smallest value of Y that gives X as a whole number is 13. Hence; int6 & int7 -> int8: X = 7 (13) / 13 = 7; sent0 -> int9: Time T is given by; int3 & int8 -> int10: T = 13 X = 13 * 7 = 91 minutes = 1 hour and 31 minutes; int10 & sent5 & sent6 -> int11: correct answer A; int11 -> int12: The answer is A);", "textual_logical_units": {"1": "Два шара A и B катятся по круговой дорожке.", "2": "Шар А совершает 2 полных оборота за 26 минут.", "3": "Шар B совершает 5 полных оборотов за 35 минут.", "4": "Если они начнут катиться из одной отправной точки,", "5": "через сколько времени они снова окажутся в той же точке?", "6": "A) 1 час 31 минута", "7": "B) 2 часа 31 минута", "8": "C) 3 часа 31 минута", "9": "D) 4 часа 31 минута", "10": "E) 5 часов 31 минута", "11": "Если шар A совершает 2 оборота за 26 минут, то 1 оборот он совершает за 13 минут. Если шар B совершает 5 оборотов за 35 минут, то 1 оборот он совершает за 7 минут.", "12": "Два шара начинают катиться и делают несколько оборотов, прежде чем они окажутся в ОДНОЙ исходной точке. Шар A совершает ЦЕЛОЕ число X оборотов, а шар B — ЦЕЛОЕ число Y оборотов. Кроме того, они должны катиться в течение одного периода времени T. Следовательно,", "13": "T = 13Х = 7У", "14": "Следовательно, 13Х = 7У", "15": "Решаем вышеуказанное уравнение для X", "16": "X = 7Y/13", "17": "Нужно найти время, когда они в ПЕРВЫЙ раз окажутся в одной отправной точке. Следовательно, X и Y — наименьшие целые числа уравнения X = 7Y/13. Наименьшее значение Y, дающее целое число X, равно 13. Следовательно,", "18": "X = 7(13)/13 = 7", "19": "Время T определяется выражением", "20": "T = 13X = 13*7 = 91 минута = 1 час 31 минута", "21": "Правильный ответ — A", "22": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два шара A и B катятся по круговой дорожке.',\n  'Шар А совершает 2\\xa0полных оборота за 26\\xa0минут.',\n  'Шар B совершает 5\\xa0полных оборотов за 35\\xa0минут.',\n  'Если они начнут катиться из одной отправной точки,']\nquestion = 'через сколько времени они снова окажутся в той же точке?'\nchoices = {'A': '1\\xa0час 31\\xa0минута', 'B': '2\\xa0часа 31\\xa0минута', 'C': '3\\xa0часа 31\\xa0минута', 'D': '4\\xa0часа 31\\xa0минута', 'E': '5\\xa0часов 31\\xa0минута'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Шар А совершает 2\\xa0полных оборота за 26\\xa0минут.', 'Шар B совершает 5\\xa0полных оборотов за 35\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Если шар A совершает 2\\xa0оборота за 26\\xa0минут, то 1\\xa0оборот он совершает за 13\\xa0минут. Если шар B совершает 5\\xa0оборотов за 35\\xa0минут, то 1\\xa0оборот он совершает за 7\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Два шара начинают катиться и делают несколько оборотов, прежде чем они окажутся в ОДНОЙ исходной точке. Шар A совершает ЦЕЛОЕ число X\\xa0оборотов, а шар B\\xa0— ЦЕЛОЕ число Y\\xa0оборотов. Кроме того, они должны катиться в течение одного периода времени T. Следовательно,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если шар A совершает 2\\xa0оборота за 26\\xa0минут, то 1\\xa0оборот он совершает за 13\\xa0минут. Если шар B совершает 5\\xa0оборотов за 35\\xa0минут, то 1\\xa0оборот он совершает за 7\\xa0минут.', 'Два шара начинают катиться и делают несколько оборотов, прежде чем они окажутся в ОДНОЙ исходной точке. Шар A совершает ЦЕЛОЕ число X\\xa0оборотов, а шар B\\xa0— ЦЕЛОЕ число Y\\xa0оборотов. Кроме того, они должны катиться в течение одного периода времени T. Следовательно,']\nnew_fact = infer_new_fact(selected) # 'T\\xa0=\\xa013Х\\xa0=\\xa07У'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T\\xa0=\\xa013Х\\xa0=\\xa07У']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 13Х\\xa0=\\xa07У'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Решаем вышеуказанное уравнение для X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, 13Х\\xa0=\\xa07У']\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa07Y/13'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если они начнут катиться из одной отправной точки,', 'через сколько времени они снова окажутся в той же точке?']\nnew_fact = infer_new_fact(selected) # 'Нужно найти время, когда они в ПЕРВЫЙ раз окажутся в одной отправной точке. Следовательно,\\xa0X\\xa0и Y — наименьшие целые числа уравнения X\\xa0=\\xa07Y/13. Наименьшее значение Y, дающее целое число X, равно 13. Следовательно,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X\\xa0=\\xa07Y/13', 'Нужно найти время, когда они в ПЕРВЫЙ раз окажутся в одной отправной точке. Следовательно,\\xa0X\\xa0и Y — наименьшие целые числа уравнения X\\xa0=\\xa07Y/13. Наименьшее значение Y, дающее целое число X, равно 13. Следовательно,']\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa07(13)/13\\xa0=\\xa07'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Время T определяется выражением'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T\\xa0=\\xa013Х\\xa0=\\xa07У', 'X\\xa0=\\xa07(13)/13\\xa0=\\xa07']\nnew_fact = infer_new_fact(selected) # 'T\\xa0=\\xa013X\\xa0=\\xa013*7\\xa0=\\xa091\\xa0минута\\xa0=\\xa01\\xa0час 31\\xa0минута'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['через сколько времени они снова окажутся в той же точке?', 'A) 1\\xa0час 31\\xa0минута', 'T\\xa0=\\xa013X\\xa0=\\xa013*7\\xa0=\\xa091\\xa0минута\\xa0=\\xa01\\xa0час 31\\xa0минута']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_93_7317daebbd", "context": "", "options": ["A)10", "B)15", "C)18", "D)20", "E)30"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [1, 2], "consequent": 12}, {"antecedents": [3], "consequent": 13}, {"antecedents": [1, 3], "consequent": 14}, {"antecedents": [3, 11, 13], "consequent": 15}, {"antecedents": [3, 8, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 -> int1: Total Books = 45; sent2 -> int2: Hard Cover = 30; sent1 & sent2 -> int3: Non hardcover = 15; sent3 -> int4: Fiction = 20; sent1 & sent3 -> int5: Non-Fiction = 25; int2 & int4 & sent3 -> int6: Maximum number of Hardcover fiction will be 20( Assuming All the Fiction Books are Hard Cover ); int6 & sent3 & sent8 -> int7: Hence, the correct answer will be (D); int7 -> int8: The answer is D);", "textual_logical_units": {"1": "На книжной полке 45 книг,", "2": "30 из которых в твердом переплете, а", "3": "20 — художественная литература.", "4": "Каково максимальное количество художественных книг в твердом переплете?", "5": "A) 10", "6": "B) 15", "7": "C) 18", "8": "D) 20", "9": "E) 30", "10": "Всего книг = 45", "11": "В твердом переплете = 30", "12": "Без твердого переплета = 15", "13": "Художественная литература = 20", "14": "Нехудожественная литература = 25", "15": "Максимальное количество художественных книг в твердом переплете равно 20 (при условии, что все художественные книги в твердом переплете)", "16": "Следовательно, правильный ответ — (D)", "17": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['На книжной полке 45\\xa0книг,', '30 из которых в твердом переплете, а', '20\\xa0— художественная литература.']\nquestion = 'Каково максимальное количество художественных книг в твердом переплете?'\nchoices = {'A': '10', 'B': '15', 'C': '18', 'D': '20', 'E': '30'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На книжной полке 45\\xa0книг,']\nnew_fact = infer_new_fact(selected) # 'Всего книг\\xa0=\\xa045'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['30 из которых в твердом переплете, а']\nnew_fact = infer_new_fact(selected) # 'В твердом переплете\\xa0=\\xa030'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На книжной полке 45\\xa0книг,', '30 из которых в твердом переплете, а']\nnew_fact = infer_new_fact(selected) # 'Без твердого переплета\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20\\xa0— художественная литература.']\nnew_fact = infer_new_fact(selected) # 'Художественная литература\\xa0=\\xa020'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На книжной полке 45\\xa0книг,', '20\\xa0— художественная литература.']\nnew_fact = infer_new_fact(selected) # 'Нехудожественная литература\\xa0=\\xa025'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20\\xa0— художественная литература.', 'В твердом переплете\\xa0=\\xa030', 'Художественная литература\\xa0=\\xa020']\nnew_fact = infer_new_fact(selected) # 'Максимальное количество художественных книг в твердом переплете равно 20 (при условии, что все художественные книги в твердом переплете)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20\\xa0— художественная литература.', 'D) 20', 'Максимальное количество художественных книг в твердом переплете равно 20 (при условии, что все художественные книги в твердом переплете)']\nnew_fact = infer_new_fact(selected) # 'Следовательно, правильный ответ\\xa0— (D)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, правильный ответ\\xa0— (D)']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_94_9e5a33870f", "context": "", "options": ["A)15", "B)30", "C)45", "D)60", "E)75"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [5], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [4, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [5, 6, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent5 -> int1: Number of paper bought on monday = x; sent3 -> int2: # of paper bought on sunday = 2x; int1 & int2 & sent4 -> int3: Total cost = 210 = 6*x(rest of the day cost)+8*x (sunday cost); int3 -> int4: 14x = 210; int4 -> int5: x = 15; int5 & sent5 & sent6 -> int6: Ans A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "В воскресенье газета стоит 4 доллара, а", "2": "в остальные дни недели — 1 доллар.", "3": "Если в воскресенье отель заказывает в два раза больше газет, чем в остальные дни недели, и", "4": "платит за газеты 210 долл. США в неделю,", "5": "сколько газет он покупает в понедельник?", "6": "A) 15", "7": "B) 30", "8": "C) 45", "9": "D) 60", "10": "E) 75", "11": "Количество газет, купленных в понедельник = x", "12": "Количество газет, купленных в воскресенье = 2x", "13": "Общая стоимость = 210 = 6*x (стоимость в остальные дни) + 8*x (стоимость в воскресенье)", "14": "14x = 210", "15": "x = 15", "16": "Ответ — А", "17": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'В воскресенье газета стоит 4\\xa0доллара, а',\n  'в остальные дни недели\\xa0— 1\\xa0доллар.',\n  'Если в воскресенье отель заказывает в два раза больше газет, чем в остальные дни недели, и',\n  'платит за газеты 210\\xa0долл. США в неделю,']\nquestion = 'сколько газет он покупает в понедельник?'\nchoices = {'A': '15', 'B': '30', 'C': '45', 'D': '60', 'E': '75'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['сколько газет он покупает в понедельник?']\nnew_fact = infer_new_fact(selected) # 'Количество газет, купленных в понедельник\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в воскресенье отель заказывает в два раза больше газет, чем в остальные дни недели, и']\nnew_fact = infer_new_fact(selected) # 'Количество газет, купленных в воскресенье\\xa0=\\xa02x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['платит за газеты 210\\xa0долл. США в неделю,', 'Количество газет, купленных в понедельник\\xa0=\\xa0x', 'Количество газет, купленных в воскресенье\\xa0=\\xa02x']\nnew_fact = infer_new_fact(selected) # 'Общая стоимость\\xa0=\\xa0210\\xa0=\\xa06*x (стоимость в остальные дни)\\xa0+\\xa08*x (стоимость в воскресенье)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая стоимость\\xa0=\\xa0210\\xa0=\\xa06*x (стоимость в остальные дни)\\xa0+\\xa08*x (стоимость в воскресенье)']\nnew_fact = infer_new_fact(selected) # '14x\\xa0=\\xa0210'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['14x\\xa0=\\xa0210']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько газет он покупает в понедельник?', 'A) 15', 'x\\xa0=\\xa015']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_95_e36f2aba4d", "context": "", "options": ["A)8", "B)12", "C)16", "D)24", "E)25"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [6, 7, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let the number of persons be x. Then,; int1 & sent2 & sent3 & sent5 -> int2: 96/x-4-96/x=4 => x=12; int2 -> int3: So, required number =x-4=8.; int3 & sent6 & sent7 -> int4: Answer is A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Несколько друзей решили устроить пикник и планировали потратить на съестное", "2": "96 рупий.", "3": "Однако четверо из них не пришли.", "4": "В результате остальным пришлось дополнительно внести", "5": "по 4 рупии.", "6": "Количество друзей, присутствовавших на пикнике, составило", "7": "A) 8", "8": "B) 12", "9": "C) 16", "10": "D) 24", "11": "E) 25", "12": "Пусть x — количество друзей. Тогда", "13": "96/x - 4 - 96/x = 4 => x = 12", "14": "Итак, требуемое количество = x - 4=8.", "15": "Ответ — A", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Несколько друзей решили устроить пикник и планировали потратить на съестное',\n  '96\\xa0рупий.',\n  'Однако четверо из них не пришли.',\n  'В результате остальным пришлось дополнительно внести',\n  'по 4\\xa0рупии.']\nquestion = 'Количество друзей, присутствовавших на пикнике, составило'\nchoices = {'A': '8', 'B': '12', 'C': '16', 'D': '24', 'E': '25'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— количество друзей. Тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['96\\xa0рупий.', 'Однако четверо из них не пришли.', 'по 4\\xa0рупии.', 'Пусть x\\xa0— количество друзей. Тогда']\nnew_fact = infer_new_fact(selected) # '96/x\\xa0-\\xa04\\xa0-\\xa096/x\\xa0=\\xa04\\xa0=>\\xa0x\\xa0=\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['96/x\\xa0-\\xa04\\xa0-\\xa096/x\\xa0=\\xa04\\xa0=>\\xa0x\\xa0=\\xa012']\nnew_fact = infer_new_fact(selected) # 'Итак, требуемое количество\\xa0=\\xa0x\\xa0-\\xa04=8.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество друзей, присутствовавших на пикнике, составило', 'A) 8', 'Итак, требуемое количество\\xa0=\\xa0x\\xa0-\\xa04=8.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_96_57eabffc93", "context": "", "options": ["A)9", "B)11", "C)22", "D)25", "E)31"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [3, 6, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Perimeter of rectangle = 2 (27 + 17) cm; int1 -> int2: = 88cm; sent0 -> int3: Perimeter of square of side x cm = 4x; sent0 -> int4: Therefore, perimeter of rectangle = Perimeter of Square; int2 & int3 & int4 -> int5: 88 cm = 4x; int5 -> int6: x = 22; int6 & sent3 -> int7: Therefore, each side of square = 22 cm; int7 & sent3 & sent6 -> int8: ANSWER : OPTION C; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "Проволоку, согнутую в форме прямоугольника длиной 27 см и", "2": "шириной 17 см, согнули по-другому, образовав квадрат.", "3": "Каков размер каждой его стороны?", "4": "A) 9", "5": "B) 11", "6": "C) 22", "7": "D) 25", "8": "E) 31", "9": "Периметр прямоугольника = 2(27 + 17) см", "10": "= 88 см", "11": "Периметр квадрата со стороной x см = 4x", "12": "Периметр прямоугольника = периметр квадрата", "13": "88 см = 4x", "14": "x = 22", "15": "Следовательно, каждая сторона квадрата = 22 см", "16": "ОТВЕТ: ВАРИАНТ В", "17": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Проволоку, согнутую в форме прямоугольника длиной 27\\xa0см и', 'шириной 17\\xa0см, согнули по-другому, образовав квадрат.']\nquestion = 'Каков размер каждой его стороны?'\nchoices = {'A': '9', 'B': '11', 'C': '22', 'D': '25', 'E': '31'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Проволоку, согнутую в форме прямоугольника длиной 27\\xa0см и', 'шириной 17\\xa0см, согнули по-другому, образовав квадрат.']\nnew_fact = infer_new_fact(selected) # 'Периметр прямоугольника\\xa0=\\xa02(27\\xa0+\\xa017)\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Периметр прямоугольника\\xa0=\\xa02(27\\xa0+\\xa017)\\xa0см']\nnew_fact = infer_new_fact(selected) # '=\\xa088\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Периметр квадрата со стороной x\\xa0см\\xa0=\\xa04x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Периметр прямоугольника\\xa0=\\xa0периметр квадрата'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa088\\xa0см', 'Периметр квадрата со стороной x\\xa0см\\xa0=\\xa04x', 'Периметр прямоугольника\\xa0=\\xa0периметр квадрата']\nnew_fact = infer_new_fact(selected) # '88\\xa0см\\xa0=\\xa04x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['88\\xa0см\\xa0=\\xa04x']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa022'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков размер каждой его стороны?', 'x\\xa0=\\xa022']\nnew_fact = infer_new_fact(selected) # 'Следовательно, каждая сторона квадрата\\xa0=\\xa022\\xa0см'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каков размер каждой его стороны?', 'C) 22', 'Следовательно, каждая сторона квадрата\\xa0=\\xa022\\xa0см']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: ВАРИАНТ В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: ВАРИАНТ В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_97_d78d089b99", "context": "", "options": ["A)Rs 400", "B)Rs 500", "C)Rs 600", "D)Rs 700", "E)Rs 800"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: If each nephew got Rs x, then; int1 & sent1 & sent2 & sent3 -> int2: 2x+16x+25x = 8600; int2 -> int3: x= 200; sent0 -> int4: Each daughter got 4*200 = Rs 800; int4 & sent4 & sent9 -> int5: ANSWER:E; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Мужчина делит 8600 рупий между 5 сыновьями, 4 дочерьми и 2 племянниками.", "2": "Если каждая дочь получила в четыре раза больше, чем каждый племянник,", "3": "и каждый сын получил в пять раз больше, чем каждый племянник,", "4": "сколько получила каждая дочь?", "5": "A) 400 рупий", "6": "B) 500 рупий", "7": "C) 600 рупий", "8": "D) 700 рупий", "9": "E) 800 рупий", "10": "Если каждый племянник получил x рупий, то", "11": "2x + 16x + 25x = 8600", "12": "x = 200", "13": "Каждая дочь получила 4*200 = 800 рупий", "14": "ОТВЕТ: Д", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Мужчина делит 8600\\xa0рупий между 5\\xa0сыновьями, 4\\xa0дочерьми и 2\\xa0племянниками.',\n  'Если каждая дочь получила в четыре раза больше, чем каждый племянник,',\n  'и каждый сын получил в пять раз больше, чем каждый племянник,']\nquestion = 'сколько получила каждая дочь?'\nchoices = {'A': '400\\xa0рупий', 'B': '500\\xa0рупий', 'C': '600\\xa0рупий', 'D': '700\\xa0рупий', 'E': '800\\xa0рупий'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Если каждый племянник получил x\\xa0рупий, то'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мужчина делит 8600\\xa0рупий между 5\\xa0сыновьями, 4\\xa0дочерьми и 2\\xa0племянниками.', 'Если каждая дочь получила в четыре раза больше, чем каждый племянник,', 'и каждый сын получил в пять раз больше, чем каждый племянник,', 'Если каждый племянник получил x\\xa0рупий, то']\nnew_fact = infer_new_fact(selected) # '2x\\xa0+\\xa016x\\xa0+\\xa025x\\xa0=\\xa08600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0+\\xa016x\\xa0+\\xa025x\\xa0=\\xa08600']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0200'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Каждая дочь получила 4*200\\xa0=\\xa0800\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько получила каждая дочь?', 'E) 800\\xa0рупий', 'Каждая дочь получила 4*200\\xa0=\\xa0800\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_98_d521a1b5e7", "context": "", "options": ["A)12", "B)28", "C)27", "D)58", "E)91"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 8, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: It is given that Meenu weighs 29 Kgs plus half of her own weight.; int1 & sent4 -> int2: It means that 29 Kgs is the other half. So she weighs 58 Kgs.; sent0 -> int3: Solving mathematically, let's assume that her weight is A Kgs.; int1 & int3 -> int4: A = 29 + A/2; int4 -> int5: 2 × A = 58 + A; int5 -> int6: A = 58 Kgs.; int5 & int6 & sent4 & sent8 -> int7: Answer:D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Света и Маша шли по дороге.\nСвета сказала: «Я вешу 51 кг.", "2": "А ты сколько весишь?»\nМаша ответила, что она не стала бы напрямую указывать свой вес, так как он у нее избыточный.\nНо она сказала:", "3": "«Я вешу 29 кг плюс половина своего веса».", "4": "Сколько весит Маша?", "5": "A) 12", "6": "B) 28", "7": "C) 27", "8": "D) 58", "9": "E) 91", "10": "В условии сказано, что Маша весит 29 кг плюс половина собственного веса.", "11": "Это означает, что 29 кг — это другая половина. Следовательно, она весит 58 кг.", "12": "Решая математически, предположим, что ее вес равен A кг.", "13": "А = 29 + А/2", "14": "2 × А = 58 + А", "15": "А = 58 кг.", "16": "Ответ: Г", "17": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Света и Маша шли по дороге.\\nСвета сказала: «Я вешу 51\\xa0кг.',\n  'А ты сколько весишь?»\\nМаша ответила, что она не стала бы напрямую указывать свой вес, так как он у нее избыточный.\\nНо она сказала:',\n  '«Я вешу 29\\xa0кг плюс половина своего веса».']\nquestion = 'Сколько весит Маша?'\nchoices = {'A': '12', 'B': '28', 'C': '27', 'D': '58', 'E': '91'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['«Я вешу 29\\xa0кг плюс половина своего веса».', 'Сколько весит Маша?']\nnew_fact = infer_new_fact(selected) # 'В условии сказано, что Маша весит 29\\xa0кг плюс половина собственного веса.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько весит Маша?', 'В условии сказано, что Маша весит 29\\xa0кг плюс половина собственного веса.']\nnew_fact = infer_new_fact(selected) # 'Это означает, что 29\\xa0кг\\xa0— это другая половина. Следовательно, она весит 58\\xa0кг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Решая математически, предположим, что ее вес равен A\\xa0кг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В условии сказано, что Маша весит 29\\xa0кг плюс половина собственного веса.', 'Решая математически, предположим, что ее вес равен A\\xa0кг.']\nnew_fact = infer_new_fact(selected) # 'А\\xa0=\\xa029\\xa0+\\xa0А/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['А\\xa0=\\xa029\\xa0+\\xa0А/2']\nnew_fact = infer_new_fact(selected) # '2\\xa0×\\xa0А\\xa0=\\xa058\\xa0+\\xa0А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0×\\xa0А\\xa0=\\xa058\\xa0+\\xa0А']\nnew_fact = infer_new_fact(selected) # 'А\\xa0=\\xa058\\xa0кг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько весит Маша?', 'D) 58', '2\\xa0×\\xa0А\\xa0=\\xa058\\xa0+\\xa0А', 'А\\xa0=\\xa058\\xa0кг.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_99_2ad5437064", "context": "", "options": ["A)45 Min", "B)75 Min", "C)90 Min", "D)120 Min", "E)60 Min"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [2, 3, 9, 10], "consequent": 11}, {"antecedents": [2, 3, 9, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Tablet 1 will be taken in 0 min.; int1 & sent2 & sent3 -> int2: Tablet 2 will be taken in 15 min.; int1 & int2 & sent2 & sent3 -> int3: Tablet 3 will be taken in 30 min.; int1 & int2 & int3 & sent2 & sent3 -> int4: Tablet 4 will be taken in 45 min.; int1 & int2 & int3 & int4 & sent2 & sent3 -> int5: Tablet 5 will be taken in 60 min.; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Роман страдал от сильных головных болей.", "2": "Он пошел к врачу, и", "3": "тот дал ему 5 таблеток, сказав принимать по одной таблетке каждые 15 минут.\nСколько времени потребуется Роману, чтобы выпить все 5 таблеток?", "4": "A) 45 мин", "5": "B) 75 мин", "6": "C) 90 мин", "7": "D) 120 мин", "8": "E) 60 мин", "9": "1 таблетка будет принята через 0 минут.", "10": "2 таблетка будет принята через 15 минут.", "11": "3 таблетка будет принята через 30 минут.", "12": "4 таблетка будет принята через 45 минут.", "13": "5 таблетка будет принята через 60 минут.", "14": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Роман страдал от сильных головных болей.', 'Он пошел к врачу, и']\nquestion = 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?'\nchoices = {'A': '45\\xa0мин', 'B': '75\\xa0мин', 'C': '90\\xa0мин', 'D': '120\\xa0мин', 'E': '60\\xa0мин'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Он пошел к врачу, и', 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?']\nnew_fact = infer_new_fact(selected) # '1\\xa0таблетка будет принята через 0\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он пошел к врачу, и', 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?', '1\\xa0таблетка будет принята через 0\\xa0минут.']\nnew_fact = infer_new_fact(selected) # '2\\xa0таблетка будет принята через 15\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он пошел к врачу, и', 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?', '1\\xa0таблетка будет принята через 0\\xa0минут.', '2\\xa0таблетка будет принята через 15\\xa0минут.']\nnew_fact = infer_new_fact(selected) # '3\\xa0таблетка будет принята через 30\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он пошел к врачу, и', 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?', '1\\xa0таблетка будет принята через 0\\xa0минут.', '2\\xa0таблетка будет принята через 15\\xa0минут.', '3\\xa0таблетка будет принята через 30\\xa0минут.']\nnew_fact = infer_new_fact(selected) # '4\\xa0таблетка будет принята через 45\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он пошел к врачу, и', 'тот дал ему 5\\xa0таблеток, сказав принимать по одной таблетке каждые 15\\xa0минут.\\nСколько времени потребуется Роману, чтобы выпить все 5\\xa0таблеток?', '1\\xa0таблетка будет принята через 0\\xa0минут.', '2\\xa0таблетка будет принята через 15\\xa0минут.', '3\\xa0таблетка будет принята через 30\\xa0минут.', '4\\xa0таблетка будет принята через 45\\xa0минут.']\nnew_fact = infer_new_fact(selected) # '5\\xa0таблетка будет принята через 60\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5\\xa0таблетка будет принята через 60\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_100_8700749dd1", "context": "", "options": ["A)90", "B)80", "C)95", "D)100", "E)85"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [1, 2, 3, 4, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 10, 12], "consequent": 13}, {"antecedents": [1, 2, 10, 12, 13], "consequent": 14}, {"antecedents": [10, 12, 13, 14], "consequent": 15}, {"antecedents": [3, 4, 5, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Let x = red sweets; int1 & sent1 & sent2 & sent3 & sent4 -> int2: Write the items in the ratio as a fraction.; int1 & int2 & sent1 & sent2 & sent3 & sent4 -> int3: red/green=3/4=x/120; int1 & int3 & sent1 & sent2 -> int4: 3 × 120 = 4 × x; int1 & int3 & int4 & sent1 & sent2 -> int5: 360 = 4x; int1 & int3 & int4 & int5 -> int6: x=360/4=90; int6 & sent3 & sent4 & sent5 -> int7: Answer:A; int7 -> int8: The answer is A);", "textual_logical_units": {"1": "В пакете с красными и зелеными конфетами", "2": "соотношение красных и зеленых конфет составляет 3:4.", "3": "Если в пакете 120 зеленых конфет,", "4": "сколько там красных?", "5": "A) 90", "6": "B) 80", "7": "C) 95", "8": "D) 100", "9": "E) 85", "10": "Пусть x = количество красных конфет", "11": "Запишем элементы соотношения в виде дроби.", "12": "красные/зеленые = 3/4 = x/120", "13": "3 × 120 = 4 × x", "14": "360 = 4x", "15": "x = 360/4 = 90", "16": "Ответ: А", "17": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Если в пакете 120\\xa0зеленых конфет,']\nquestion = 'сколько там красных?'\nchoices = {'A': '90', 'B': '80', 'C': '95', 'D': '100', 'E': '85'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Если в пакете 120\\xa0зеленых конфет,', 'сколько там красных?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0=\\xa0количество красных конфет'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Если в пакете 120\\xa0зеленых конфет,', 'сколько там красных?', 'Пусть x\\xa0=\\xa0количество красных конфет']\nnew_fact = infer_new_fact(selected) # 'Запишем элементы соотношения в виде дроби.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Если в пакете 120\\xa0зеленых конфет,', 'сколько там красных?', 'Пусть x\\xa0=\\xa0количество красных конфет', 'Запишем элементы соотношения в виде дроби.']\nnew_fact = infer_new_fact(selected) # 'красные/зеленые\\xa0=\\xa03/4\\xa0=\\xa0x/120'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Пусть x\\xa0=\\xa0количество красных конфет', 'красные/зеленые\\xa0=\\xa03/4\\xa0=\\xa0x/120']\nnew_fact = infer_new_fact(selected) # '3\\xa0×\\xa0120\\xa0=\\xa04\\xa0×\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В пакете с красными и зелеными конфетами', 'соотношение красных и зеленых конфет составляет 3:4.', 'Пусть x\\xa0=\\xa0количество красных конфет', 'красные/зеленые\\xa0=\\xa03/4\\xa0=\\xa0x/120', '3\\xa0×\\xa0120\\xa0=\\xa04\\xa0×\\xa0x']\nnew_fact = infer_new_fact(selected) # '360\\xa0=\\xa04x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0=\\xa0количество красных конфет', 'красные/зеленые\\xa0=\\xa03/4\\xa0=\\xa0x/120', '3\\xa0×\\xa0120\\xa0=\\xa04\\xa0×\\xa0x', '360\\xa0=\\xa04x']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0360/4\\xa0=\\xa090'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в пакете 120\\xa0зеленых конфет,', 'сколько там красных?', 'A) 90', 'x\\xa0=\\xa0360/4\\xa0=\\xa090']\nnew_fact = infer_new_fact(selected) # 'Ответ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_101_c41bf0a767", "context": "", "options": ["A)18", "B)20", "C)25", "D)26", "E)27"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 3, 5], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 5, 8, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent5 -> int1: Let, n be the number of members in the club.Then,; int1 & sent3 & sent4 -> int2: 250 =(n x [2×7+(n+1)×3/12]) / 2.; int1 & int2 -> int3: n =25.; int1 & int2 & int3 -> int4: Hence, the number of members in the club is 25.; int3 & int4 & sent3 & sent4 & sent5 & sent8 -> int5: Answer : C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Возраста членов клуба находятся в арифметической прогрессии.", "2": "Разность арифметической прогрессии составляет 3 месяца.", "3": "Если самому молодому члену клуба всего 7 лет и", "4": "сумма возрастов всех членов клуба составляет 250 лет,", "5": "то количество членов клуба:", "6": "A) 18", "7": "B) 20", "8": "C) 25", "9": "D) 26", "10": "E) 27", "11": "Пусть n — количество членов клуба. Тогда", "12": "250 = (nx[2 × 7 + (n + 1) × 3/12])/2.", "13": "n = 25.", "14": "Таким образом, количество членов клуба составляет 25 человек.", "15": "Ответ: В", "16": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Возраста членов клуба находятся в арифметической прогрессии.',\n  'Разность арифметической прогрессии составляет 3\\xa0месяца.',\n  'Если самому молодому члену клуба всего 7\\xa0лет и',\n  'сумма возрастов всех членов клуба составляет 250\\xa0лет,']\nquestion = 'то количество членов клуба:'\nchoices = {'A': '18', 'B': '20', 'C': '25', 'D': '26', 'E': '27'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Возраста членов клуба находятся в арифметической прогрессии.', 'Если самому молодому члену клуба всего 7\\xa0лет и', 'то количество членов клуба:']\nnew_fact = infer_new_fact(selected) # 'Пусть n\\xa0— количество членов клуба. Тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если самому молодому члену клуба всего 7\\xa0лет и', 'сумма возрастов всех членов клуба составляет 250\\xa0лет,', 'Пусть n\\xa0— количество членов клуба. Тогда']\nnew_fact = infer_new_fact(selected) # '250\\xa0=\\xa0(nx[2\\xa0×\\xa07\\xa0+\\xa0(n\\xa0+\\xa01)\\xa0×\\xa03/12])/2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть n\\xa0— количество членов клуба. Тогда', '250\\xa0=\\xa0(nx[2\\xa0×\\xa07\\xa0+\\xa0(n\\xa0+\\xa01)\\xa0×\\xa03/12])/2.']\nnew_fact = infer_new_fact(selected) # 'n\\xa0=\\xa025.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть n\\xa0— количество членов клуба. Тогда', '250\\xa0=\\xa0(nx[2\\xa0×\\xa07\\xa0+\\xa0(n\\xa0+\\xa01)\\xa0×\\xa03/12])/2.', 'n\\xa0=\\xa025.']\nnew_fact = infer_new_fact(selected) # 'Таким образом, количество членов клуба составляет 25\\xa0человек.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если самому молодому члену клуба всего 7\\xa0лет и', 'сумма возрастов всех членов клуба составляет 250\\xa0лет,', 'то количество членов клуба:', 'C) 25', 'n\\xa0=\\xa025.', 'Таким образом, количество членов клуба составляет 25\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_102_8603d39a76", "context": "", "options": ["A)D/(M-3)", "B)MD/3", "C)M/(D-3)", "D)3D/(M2-3M)", "E)None of these"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [1, 2, 9, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Initial contribution = D/m; int1 & sent1 & sent2 & sent3 -> int2: After 3 men drop out, then the contribution = D/M-3; int1 & int2 & sent1 & sent2 -> int3: the extra amount to pay = (D/m-3)-D/m; int1 & int2 & int3 & sent1 & sent2 -> int4: =D(m-m+3)/)(m^2-3*m); int1 & int2 & int3 & int4 & sent1 & sent2 -> int5: = 3D/(m^2-3*m); int5 & sent3 & sent7 -> int6: ANSWER:D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "M человек договорились купить подарок за", "2": "D рупий.", "3": "Если 3 из них откажутся, сколько каждый из оставшихся должен будет дополнительно внести на покупку подарка?", "4": "A) D/(М - 3)", "5": "B) MD/3", "6": "C) M/(D - 3)", "7": "D) 3D/(M2 - 3M)", "8": "E) Ничего из вышеперечисленного", "9": "Первоначальный размер взноса = D/M", "10": "После того, как 3 человека откажутся, размер взноса = D/M - 3", "11": "Дополнительная сумма = (D/M - 3) - D/M", "12": "= D(M - M + 3)/)(M^2 - 3*M)", "13": "= 3D/(M^2 - 3*M)", "14": "ОТВЕТ: Г", "15": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.']\nquestion = 'Если 3 из них откажутся, сколько каждый из оставшихся должен будет дополнительно внести на покупку подарка?'\nchoices = {'A': 'D/(М\\xa0-\\xa03)', 'B': 'MD/3', 'C': 'M/(D\\xa0-\\xa03)', 'D': '3D/(M2\\xa0-\\xa03M)', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.']\nnew_fact = infer_new_fact(selected) # 'Первоначальный размер взноса\\xa0=\\xa0D/M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.', 'Если 3 из них откажутся, сколько каждый из оставшихся должен будет дополнительно внести на покупку подарка?', 'Первоначальный размер взноса\\xa0=\\xa0D/M']\nnew_fact = infer_new_fact(selected) # 'После того, как 3 человека откажутся, размер взноса\\xa0=\\xa0D/M\\xa0-\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.', 'Первоначальный размер взноса\\xa0=\\xa0D/M', 'После того, как 3 человека откажутся, размер взноса\\xa0=\\xa0D/M\\xa0-\\xa03']\nnew_fact = infer_new_fact(selected) # 'Дополнительная сумма\\xa0=\\xa0(D/M\\xa0-\\xa03)\\xa0-\\xa0D/M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.', 'Первоначальный размер взноса\\xa0=\\xa0D/M', 'После того, как 3 человека откажутся, размер взноса\\xa0=\\xa0D/M\\xa0-\\xa03', 'Дополнительная сумма\\xa0=\\xa0(D/M\\xa0-\\xa03)\\xa0-\\xa0D/M']\nnew_fact = infer_new_fact(selected) # '=\\xa0D(M\\xa0-\\xa0M\\xa0+\\xa03)/)(M^2\\xa0-\\xa03*M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0человек договорились купить подарок за', 'D\\xa0рупий.', 'Первоначальный размер взноса\\xa0=\\xa0D/M', 'После того, как 3 человека откажутся, размер взноса\\xa0=\\xa0D/M\\xa0-\\xa03', 'Дополнительная сумма\\xa0=\\xa0(D/M\\xa0-\\xa03)\\xa0-\\xa0D/M', '=\\xa0D(M\\xa0-\\xa0M\\xa0+\\xa03)/)(M^2\\xa0-\\xa03*M)']\nnew_fact = infer_new_fact(selected) # '=\\xa03D/(M^2\\xa0-\\xa03*M)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 3 из них откажутся, сколько каждый из оставшихся должен будет дополнительно внести на покупку подарка?', 'D) 3D/(M2\\xa0-\\xa03M)', '=\\xa03D/(M^2\\xa0-\\xa03*M)']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_103_35a7e9bf75", "context": "", "options": ["A)1,879", "B)1,875", "C)1,876", "D)1,872", "E)1,800"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Cost of a sewing machine = Rs. 1200/-; int1 & sent1 & sent2 -> int2: By giving 20% discount on the marked price of a sewing machine, the cost price is :; int1 & int2 & sent2 -> int3: 100/80 * 1200 = Rs. 1500/- By making a profit of 20% on the cost price of a sewing machine, the marked price of the sewing machine is:; sent0 -> int4: 120/100 Ã— 1500 = Rs. 1,800/-; sent0 -> int5: ANSWER: 3; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Какую цену Каран должен обозначить на швейную машину, которая стоила ему", "2": "1200/- рупий, чтобы, даже предложив скидку 20%, он получил 20% прибыли?", "3": "A) 1 879", "4": "B) 1 875", "5": "C) 1 876", "6": "D) 1 872", "7": "E) 1 800", "8": "Стоимость швейной машины = 1200/- рупий", "9": "Если предоставлена скидка в размере 20% от обозначенной цены швейной машины, закупочная цена составляет:", "10": "100/80*1200 = 1500/- рупий. Если получена прибыль в размере 20% от закупочной цены швейной машины ее обозначенная цена составляет:", "11": "120/100 × 1500 = 1 800/- рупий", "12": "ОТВЕТ: 3", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Какую цену Каран должен обозначить на швейную машину, которая стоила ему']\nquestion = '1200/-\\xa0рупий, чтобы, даже предложив скидку 20%, он получил 20% прибыли?'\nchoices = {'A': '1\\xa0879', 'B': '1\\xa0875', 'C': '1\\xa0876', 'D': '1\\xa0872', 'E': '1\\xa0800'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Какую цену Каран должен обозначить на швейную машину, которая стоила ему', '1200/-\\xa0рупий, чтобы, даже предложив скидку 20%, он получил 20% прибыли?']\nnew_fact = infer_new_fact(selected) # 'Стоимость швейной машины\\xa0= 1200/-\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую цену Каран должен обозначить на швейную машину, которая стоила ему', '1200/-\\xa0рупий, чтобы, даже предложив скидку 20%, он получил 20% прибыли?', 'Стоимость швейной машины\\xa0= 1200/-\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Если предоставлена скидка в размере 20% от обозначенной цены швейной машины, закупочная цена составляет:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1200/-\\xa0рупий, чтобы, даже предложив скидку 20%, он получил 20% прибыли?', 'Стоимость швейной машины\\xa0= 1200/-\\xa0рупий', 'Если предоставлена скидка в размере 20% от обозначенной цены швейной машины, закупочная цена составляет:']\nnew_fact = infer_new_fact(selected) # '100/80*1200\\xa0= 1500/-\\xa0рупий. Если получена прибыль в размере 20% от закупочной цены швейной машины ее обозначенная цена составляет:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '120/100\\xa0×\\xa01500\\xa0= 1\\xa0800/-\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: 3']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_104_0271cab0f4", "context": "", "options": ["A)12 am on the next day", "B)5 am on the next day", "C)5 pm on the next day", "D)2 pm on the next day", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [1, 2, 3, 4], "consequent": 12}, {"antecedents": [5], "consequent": 13}, {"antecedents": [1, 3, 13], "consequent": 14}, {"antecedents": [5, 6, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: Distance covered by train A before the train B leaves; sent1 & sent2 & sent3 & sent4 -> int2: Mumbai Central = 40 × 3 = 120 km; sent5 -> int3: Time taken to cross each other = 120⁄12 = 10 hours; int3 & sent1 & sent3 -> int4: Required time = 2pm + 10 = 12 am on the next day; int4 & sent5 & sent6 -> int5: Answer A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Поезд А отправляется с центрального вокзала Москвы в Новосибирск в 11:00", "2": "и едет со скоростью 40 км/ч.", "3": "Поезд B отправляется с центрального вокзала Москвы в Новосибирск по тому же маршруту в 14:00 того же дня", "4": "и едет со скоростью 72 км/ч.", "5": "Во сколько эти поезда встретятся?", "6": "A) На следующий день в 12:00", "7": "B) На следующий день в 05:00", "8": "C) На следующий день в 17:00", "9": "D) На следующий день в 14:00", "10": "E) Ничего из вышеперечисленного", "11": "Расстояние, пройденное поездом A до отправления поезда B", "12": "с центрального вокзала Москвы = 40 × 3 = 120 км", "13": "Время до скрещения поездов = 120⁄12 = 10 часов", "14": "Необходимое время = 14:00 + 10 = 12:00 следующего дня", "15": "Ответ — А", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Поезд А отправляется с центрального вокзала Москвы в Новосибирск в 11:00',\n  'и едет со скоростью 40\\xa0км/ч.',\n  'Поезд B отправляется с центрального вокзала Москвы в Новосибирск по тому же маршруту в 14:00 того же дня',\n  'и едет со скоростью 72\\xa0км/ч.']\nquestion = 'Во сколько эти поезда встретятся?'\nchoices = { 'A': 'На следующий день в 12:00',\n  'B': 'На следующий день в 05:00',\n  'C': 'На следующий день в 17:00',\n  'D': 'На следующий день в 14:00',\n  'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Поезд А отправляется с центрального вокзала Москвы в Новосибирск в 11:00']\nnew_fact = infer_new_fact(selected) # 'Расстояние, пройденное поездом A до отправления поезда B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд А отправляется с центрального вокзала Москвы в Новосибирск в 11:00', 'и едет со скоростью 40\\xa0км/ч.', 'Поезд B отправляется с центрального вокзала Москвы в Новосибирск по тому же маршруту в 14:00 того же дня', 'и едет со скоростью 72\\xa0км/ч.']\nnew_fact = infer_new_fact(selected) # 'с центрального вокзала Москвы\\xa0=\\xa040\\xa0×\\xa03\\xa0=\\xa0120\\xa0км'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во сколько эти поезда встретятся?']\nnew_fact = infer_new_fact(selected) # 'Время до скрещения поездов\\xa0=\\xa0120⁄12\\xa0=\\xa010\\xa0часов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд А отправляется с центрального вокзала Москвы в Новосибирск в 11:00', 'Поезд B отправляется с центрального вокзала Москвы в Новосибирск по тому же маршруту в 14:00 того же дня', 'Время до скрещения поездов\\xa0=\\xa0120⁄12\\xa0=\\xa010\\xa0часов']\nnew_fact = infer_new_fact(selected) # 'Необходимое время\\xa0=\\xa014:00\\xa0+\\xa010\\xa0=\\xa012:00\\xa0следующего дня'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Во сколько эти поезда встретятся?', 'A) На следующий день в 12:00', 'Необходимое время\\xa0=\\xa014:00\\xa0+\\xa010\\xa0=\\xa012:00\\xa0следующего дня']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_105_9335efdd30", "context": "", "options": ["A)22", "B)60", "C)28", "D)26", "E)18"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [3, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let the money with Mark and John are M and J, respectively.; int1 & sent1 & sent2 -> int2: M + J/2 = 75; int1 & int2 & sent1 & sent2 -> int3: M/3 + J = 75; int1 & int2 & int3 -> int4: Solving we get M = 45, and J = 60.; int4 & sent3 & sent5 -> int5: Answer:B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Марк сказал Джону: «Если ты дашь мне половину своих денег, у меня будет 75 рупий.", "2": "Джон сказал: «Если ты дашь мне треть своих денег, у меня будет 75/- рупий.", "3": "Сколько денег у Джона?", "4": "A) 22", "5": "B) 60", "6": "C) 28", "7": "D) 26", "8": "E) 18", "9": "Пусть M и J — деньги у Марка и Джона соответственно.", "10": "М + М/2 = 75", "11": "М/3 + J = 75", "12": "Решая уравнение, получаем M = 45 и J = 60.", "13": "Ответ: Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Марк сказал Джону: «Если ты дашь мне половину своих денег, у меня будет 75\\xa0рупий.',\n  'Джон сказал: «Если ты дашь мне треть своих денег, у меня будет 75/-\\xa0рупий.']\nquestion = 'Сколько денег у Джона?'\nchoices = {'A': '22', 'B': '60', 'C': '28', 'D': '26', 'E': '18'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Марк сказал Джону: «Если ты дашь мне половину своих денег, у меня будет 75\\xa0рупий.', 'Джон сказал: «Если ты дашь мне треть своих денег, у меня будет 75/-\\xa0рупий.']\nnew_fact = infer_new_fact(selected) # 'Пусть M и J\\xa0— деньги у Марка и Джона соответственно.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марк сказал Джону: «Если ты дашь мне половину своих денег, у меня будет 75\\xa0рупий.', 'Джон сказал: «Если ты дашь мне треть своих денег, у меня будет 75/-\\xa0рупий.', 'Пусть M и J\\xa0— деньги у Марка и Джона соответственно.']\nnew_fact = infer_new_fact(selected) # 'М\\xa0+\\xa0М/2\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Марк сказал Джону: «Если ты дашь мне половину своих денег, у меня будет 75\\xa0рупий.', 'Джон сказал: «Если ты дашь мне треть своих денег, у меня будет 75/-\\xa0рупий.', 'Пусть M и J\\xa0— деньги у Марка и Джона соответственно.', 'М\\xa0+\\xa0М/2\\xa0=\\xa075']\nnew_fact = infer_new_fact(selected) # 'М/3\\xa0+\\xa0J\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть M и J\\xa0— деньги у Марка и Джона соответственно.', 'М\\xa0+\\xa0М/2\\xa0=\\xa075', 'М/3\\xa0+\\xa0J\\xa0=\\xa075']\nnew_fact = infer_new_fact(selected) # 'Решая уравнение, получаем M\\xa0=\\xa045 и J\\xa0=\\xa060.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько денег у Джона?', 'B) 60', 'Решая уравнение, получаем M\\xa0=\\xa045 и J\\xa0=\\xa060.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_106_67f21dcbe7", "context": "", "options": ["A)15", "B)28", "C)30", "D)53", "E)59"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 5, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 4, 5, 11, 12], "consequent": 13}, {"antecedents": [1, 3, 12, 13], "consequent": 14}, {"antecedents": [4, 5, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: Starting from 1 Water Lilly it takes 60 days.; int1 & sent1 & sent2 & sent3 & sent4 & sent5 -> int2: If there are already two present, it can be taken as the first day is over.; int1 & int2 & sent1 & sent2 & sent3 & sent4 & sent5 -> int3: It will take 59 more days.; int2 & int3 & sent1 & sent3 -> int4: Notice that we are told thatthe number of water lilies on a certain lake doubles every two days, thus if initially there were 64 water lilies instead of one, we can consider that 7 days are over and therefore only 53 days are left.; int4 & sent4 & sent5 & sent9 -> int5: Answer: D.; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Количество кувшинок в озере удваивается каждые два дня.", "2": "Если в озере ровно одна кувшинка,", "3": "то, чтобы озеро полностью покрылось кувшинками, потребуется 60 дней.", "4": "Через сколько дней озеро будет полностью покрыто кувшинками,", "5": "если изначально в нем их было 64?", "6": "A) 15", "7": "B) 28", "8": "C) 30", "9": "D) 53", "10": "E) 59", "11": "Если начать с 1 кувшинки, требуется 60 дней.", "12": "Если их уже две, можно считать, что первый день закончился.", "13": "Потребуется еще 59 дней.", "14": "Обратите внимание: в условии сказано, что количество кувшинок на озере удваивается каждые два дня, поэтому, если изначально было 64 кувшинки вместо одной, можно считать, что прошло 7 дней, и следовательно, осталось всего 53 дня.", "15": "Ответ: Г.", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Количество кувшинок в озере удваивается каждые два дня.',\n  'Если в озере ровно одна кувшинка,',\n  'то, чтобы озеро полностью покрылось кувшинками, потребуется 60\\xa0дней.',\n  'Через сколько дней озеро будет полностью покрыто кувшинками,']\nquestion = 'если изначально в нем их было 64?'\nchoices = {'A': '15', 'B': '28', 'C': '30', 'D': '53', 'E': '59'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Количество кувшинок в озере удваивается каждые два дня.', 'Если в озере ровно одна кувшинка,', 'то, чтобы озеро полностью покрылось кувшинками, потребуется 60\\xa0дней.', 'Через сколько дней озеро будет полностью покрыто кувшинками,', 'если изначально в нем их было 64?']\nnew_fact = infer_new_fact(selected) # 'Если начать с 1\\xa0кувшинки, требуется 60\\xa0дней.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество кувшинок в озере удваивается каждые два дня.', 'Если в озере ровно одна кувшинка,', 'то, чтобы озеро полностью покрылось кувшинками, потребуется 60\\xa0дней.', 'Через сколько дней озеро будет полностью покрыто кувшинками,', 'если изначально в нем их было 64?', 'Если начать с 1\\xa0кувшинки, требуется 60\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'Если их уже две, можно считать, что первый день закончился.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество кувшинок в озере удваивается каждые два дня.', 'Если в озере ровно одна кувшинка,', 'то, чтобы озеро полностью покрылось кувшинками, потребуется 60\\xa0дней.', 'Через сколько дней озеро будет полностью покрыто кувшинками,', 'если изначально в нем их было 64?', 'Если начать с 1\\xa0кувшинки, требуется 60\\xa0дней.', 'Если их уже две, можно считать, что первый день закончился.']\nnew_fact = infer_new_fact(selected) # 'Потребуется еще 59\\xa0дней.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество кувшинок в озере удваивается каждые два дня.', 'то, чтобы озеро полностью покрылось кувшинками, потребуется 60\\xa0дней.', 'Если их уже две, можно считать, что первый день закончился.', 'Потребуется еще 59\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'Обратите внимание: в условии сказано, что количество кувшинок на озере удваивается каждые два дня, поэтому, если изначально было 64\\xa0кувшинки вместо одной, можно считать, что прошло 7\\xa0дней, и следовательно, осталось всего 53\\xa0дня.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько дней озеро будет полностью покрыто кувшинками,', 'если изначально в нем их было 64?', 'D) 53', 'Обратите внимание: в условии сказано, что количество кувшинок на озере удваивается каждые два дня, поэтому, если изначально было 64\\xa0кувшинки вместо одной, можно считать, что прошло 7\\xa0дней, и следовательно, осталось всего 53\\xa0дня.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_107_e14ffba4c7", "context": "", "options": ["A)x2/y2 units", "B)y3/x2 units", "C)x3/y2 units", "D)y2/x2 units", "E)None of these"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Amount of work completed by 1 man in 1 day, working 1 hours a day = x/x3=1/x2; int1 & sent1 & sent2 -> int2: Amount of work y men in y days, working y hours a day = y3 × (1/x2) = y3/x2 . Answer : Option B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "x человек, работающих по x часов в день, могут выполнить x рабочих задач за x дней.", "2": "Сколько рабочих задач смогут выполнить y человек, работающих по y часов в день, за y дней?", "3": "A) x2/y2 задач", "4": "B) y3/x2 задач", "5": "C) x3/y2 задач", "6": "D) y2/x2 задач", "7": "E) Ничего из вышеперечисленного", "8": "Объем работы, которую выполняет за 1 день 1 человек, работающий 1 час в день = x/x3 = 1/x2", "9": "Объем работы, которую выполняют за y дней y человек, работающие по y часов в день = y3 × (1/x2) = y3/x2. Ответ: Вариант Б", "10": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['x\\xa0человек, работающих по x\\xa0часов в день, могут выполнить x\\xa0рабочих задач за x\\xa0дней.']\nquestion = 'Сколько рабочих задач смогут выполнить y\\xa0человек, работающих по y\\xa0часов в день, за y\\xa0дней?'\nchoices = {'A': 'x2/y2\\xa0задач', 'B': 'y3/x2\\xa0задач', 'C': 'x3/y2\\xa0задач', 'D': 'y2/x2\\xa0задач', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['x\\xa0человек, работающих по x\\xa0часов в день, могут выполнить x\\xa0рабочих задач за x\\xa0дней.', 'Сколько рабочих задач смогут выполнить y\\xa0человек, работающих по y\\xa0часов в день, за y\\xa0дней?']\nnew_fact = infer_new_fact(selected) # 'Объем работы, которую выполняет за 1\\xa0день 1\\xa0человек, работающий 1\\xa0час в день\\xa0=\\xa0x/x3\\xa0=\\xa01/x2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0человек, работающих по x\\xa0часов в день, могут выполнить x\\xa0рабочих задач за x\\xa0дней.', 'Сколько рабочих задач смогут выполнить y\\xa0человек, работающих по y\\xa0часов в день, за y\\xa0дней?', 'Объем работы, которую выполняет за 1\\xa0день 1\\xa0человек, работающий 1\\xa0час в день\\xa0=\\xa0x/x3\\xa0=\\xa01/x2']\nnew_fact = infer_new_fact(selected) # 'Объем работы, которую выполняют за y\\xa0дней y\\xa0человек, работающие по y\\xa0часов в день\\xa0=\\xa0y3\\xa0×\\xa0(1/x2)\\xa0=\\xa0y3/x2. Ответ: Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Объем работы, которую выполняют за y\\xa0дней y\\xa0человек, работающие по y\\xa0часов в день\\xa0=\\xa0y3\\xa0×\\xa0(1/x2)\\xa0=\\xa0y3/x2. Ответ: Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_108_14b8d3e1b9", "context": "", "options": ["A)12", "B)10", "C)5", "D)15", "E)20"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [2, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: The number of polygons with k sides that can be formed by joining them is nCk; int1 & sent2 -> int2: for quadrilaterals k=4; int1 & int2 -> int3: it has 6 sides n=6; int2 & int3 -> int4: 6C4=15; int4 & sent2 & sent6 -> int5: Answer is D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "ABCDE — правильный пятиугольник с буквой F в центре.", "2": "Сколько разных четырехугольников можно сформировать, соединив 4 точки A, B, C, D, E и F?", "3": "A) 12", "4": "B) 10", "5": "C) 5", "6": "D) 15", "7": "E) 20", "8": "Количество многоугольников с k сторонами, которые могут быть образованы путем их соединения, равно nCk", "9": "Для четырехугольников k = 4", "10": "Он имеет 6 сторон n = 6", "11": "6C4 = 15", "12": "Ответ — Г", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['ABCDE\\xa0— правильный пятиугольник с буквой F в центре.']\nquestion = 'Сколько разных четырехугольников можно сформировать, соединив 4\\xa0точки A, B, C, D, E и F?'\nchoices = {'A': '12', 'B': '10', 'C': '5', 'D': '15', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ABCDE\\xa0— правильный пятиугольник с буквой F в центре.']\nnew_fact = infer_new_fact(selected) # 'Количество многоугольников с k\\xa0сторонами, которые могут быть образованы путем их соединения, равно nCk'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько разных четырехугольников можно сформировать, соединив 4\\xa0точки A, B, C, D, E и F?', 'Количество многоугольников с k\\xa0сторонами, которые могут быть образованы путем их соединения, равно nCk']\nnew_fact = infer_new_fact(selected) # 'Для четырехугольников k\\xa0=\\xa04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество многоугольников с k\\xa0сторонами, которые могут быть образованы путем их соединения, равно nCk', 'Для четырехугольников k\\xa0=\\xa04']\nnew_fact = infer_new_fact(selected) # 'Он имеет 6\\xa0сторон n\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для четырехугольников k\\xa0=\\xa04', 'Он имеет 6\\xa0сторон n\\xa0=\\xa06']\nnew_fact = infer_new_fact(selected) # '6C4\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько разных четырехугольников можно сформировать, соединив 4\\xa0точки A, B, C, D, E и F?', 'D) 15', '6C4\\xa0=\\xa015']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_109_7e01a4ab20", "context": "", "options": ["A)80°", "B)130°", "C)140°", "D)160°", "E)220°"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [2, 3, 4, 5, 11], "consequent": 12}, {"antecedents": [4, 5, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: B bisects minor arc AC means Arc BC is 80 degrees. Now , we have arc BD = 150, therefore CD = 70.; int1 & sent2 & sent3 & sent4 & sent5 -> int2: Now, Arc AC = 160 , CD = 70 => Arc AD = 360-230 = 130; int2 & sent4 & sent5 & sent7 -> int3: Answer B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Точки A, B, C, D лежат на окружности в указанном порядке.", "2": "Меньшая дуга AC равна 160°,", "3": "а меньшая дуга BD равна 150°.", "4": "Если точка B делит меньшую дугу AC пополам,", "5": "чему равна меньшая дуга AD?", "6": "A) 80°", "7": "B) 130°", "8": "C) 140°", "9": "D) 160°", "10": "E) 220°", "11": "Точка B разделяет меньшую дугу AC пополам. Это означает, что дуга BC равна 80 градусам. Дуга BD = 150, следовательно, CD = 70.", "12": "Дуга AC = 160, CD = 70 => дуга AD = 360 - 230 = 130", "13": "Ответ — Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Точки A, B, C, D лежат на окружности в указанном порядке.',\n  'Меньшая дуга AC равна 160°,',\n  'а меньшая дуга BD равна 150°.',\n  'Если точка B делит меньшую дугу AC пополам,']\nquestion = 'чему равна меньшая дуга AD?'\nchoices = {'A': '80°', 'B': '130°', 'C': '140°', 'D': '160°', 'E': '220°'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Точки A, B, C, D лежат на окружности в указанном порядке.', 'Меньшая дуга AC равна 160°,', 'а меньшая дуга BD равна 150°.', 'Если точка B делит меньшую дугу AC пополам,', 'чему равна меньшая дуга AD?']\nnew_fact = infer_new_fact(selected) # 'Точка B разделяет меньшую дугу AC пополам. Это означает, что дуга BC равна 80\\xa0градусам. Дуга BD\\xa0=\\xa0150, следовательно, CD\\xa0=\\xa070.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Меньшая дуга AC равна 160°,', 'а меньшая дуга BD равна 150°.', 'Если точка B делит меньшую дугу AC пополам,', 'чему равна меньшая дуга AD?', 'Точка B разделяет меньшую дугу AC пополам. Это означает, что дуга BC равна 80\\xa0градусам. Дуга BD\\xa0=\\xa0150, следовательно, CD\\xa0=\\xa070.']\nnew_fact = infer_new_fact(selected) # 'Дуга AC\\xa0=\\xa0160, CD\\xa0=\\xa070 =>\\xa0дуга AD\\xa0=\\xa0360\\xa0-\\xa0230\\xa0=\\xa0130'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если точка B делит меньшую дугу AC пополам,', 'чему равна меньшая дуга AD?', 'B) 130°', 'Дуга AC\\xa0=\\xa0160, CD\\xa0=\\xa070 =>\\xa0дуга AD\\xa0=\\xa0360\\xa0-\\xa0230\\xa0=\\xa0130']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_110_2505e806e0", "context": "", "options": ["A)5%", "B)15%", "C)25%", "D)35%", "E)45%"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [10, 11, 12, 13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [10, 15], "consequent": 16}, {"antecedents": [4, 5, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: Winter = 75; sent2 -> int2: Both = 40; sent3 -> int3: Neither = 20; int1 & int2 & int3 -> int4: Winter + Summer - Both + Neither = 100; int1 & int2 & int3 & int4 -> int5: 75 + Summer - 40 + 20 = 100; int4 & int5 -> int6: Summer = 45; int1 & int6 -> int7: Summer but not winter Q= Summer only = Summer - Both(i.e. summer overlap with winter) = 45 - 40 = 5; int7 & sent4 & sent5 -> int8: Answer: A; int8 -> int9: The answer is A);", "textual_logical_units": {"1": "Если 75 процентов сотрудников компании уходят в отпуск зимой,", "2": "40 процентов — зимой и летом,", "3": "а 20 процентов не уходят в отпуск ни зимой, ни летом,", "4": "какой процент сотрудников Q уходят в отпуск летом, но не зимой?", "5": "A) 5%", "6": "B) 15%", "7": "C) 25%", "8": "D) 35%", "9": "E) 45%", "10": "Зимой = 75", "11": "И то, и другое = 40", "12": "Ни то, ни другое = 20", "13": "Зимой + летом - и то, и другое + ни то, ни другое = 100", "14": "75 + летом - 40 + 20 = 100", "15": "Летом = 45", "16": "Летом, но не зимой Q = только летом = летом - и то, и другое (т.е. летний отпуск пересекается с зимним) = 45 - 40 = 5", "17": "Ответ: A", "18": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Если 75\\xa0процентов сотрудников компании уходят в отпуск зимой,',\n  '40\\xa0процентов\\xa0— зимой и летом,',\n  'а 20\\xa0процентов не уходят в отпуск ни зимой, ни летом,']\nquestion = 'какой процент сотрудников Q уходят в отпуск летом, но не зимой?'\nchoices = {'A': '5%', 'B': '15%', 'C': '25%', 'D': '35%', 'E': '45%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если 75\\xa0процентов сотрудников компании уходят в отпуск зимой,']\nnew_fact = infer_new_fact(selected) # 'Зимой\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40\\xa0процентов\\xa0— зимой и летом,']\nnew_fact = infer_new_fact(selected) # 'И то, и другое\\xa0=\\xa040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а 20\\xa0процентов не уходят в отпуск ни зимой, ни летом,']\nnew_fact = infer_new_fact(selected) # 'Ни то, ни другое\\xa0=\\xa020'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Зимой\\xa0=\\xa075', 'И то, и другое\\xa0=\\xa040', 'Ни то, ни другое\\xa0=\\xa020']\nnew_fact = infer_new_fact(selected) # 'Зимой\\xa0+\\xa0летом\\xa0-\\xa0и то, и другое\\xa0+\\xa0ни то, ни другое\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Зимой\\xa0=\\xa075', 'И то, и другое\\xa0=\\xa040', 'Ни то, ни другое\\xa0=\\xa020', 'Зимой\\xa0+\\xa0летом\\xa0-\\xa0и то, и другое\\xa0+\\xa0ни то, ни другое\\xa0=\\xa0100']\nnew_fact = infer_new_fact(selected) # '75\\xa0+\\xa0летом\\xa0-\\xa040\\xa0+\\xa020\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Зимой\\xa0+\\xa0летом\\xa0-\\xa0и то, и другое\\xa0+\\xa0ни то, ни другое\\xa0=\\xa0100', '75\\xa0+\\xa0летом\\xa0-\\xa040\\xa0+\\xa020\\xa0=\\xa0100']\nnew_fact = infer_new_fact(selected) # 'Летом\\xa0=\\xa045'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Зимой\\xa0=\\xa075', 'Летом\\xa0=\\xa045']\nnew_fact = infer_new_fact(selected) # 'Летом, но не зимой Q\\xa0=\\xa0только летом\\xa0=\\xa0летом\\xa0-\\xa0и то, и другое (т.е. летний отпуск пересекается с зимним)\\xa0=\\xa045\\xa0-\\xa040\\xa0=\\xa05'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой процент сотрудников Q уходят в отпуск летом, но не зимой?', 'A) 5%', 'Летом, но не зимой Q\\xa0=\\xa0только летом\\xa0=\\xa0летом\\xa0-\\xa0и то, и другое (т.е. летний отпуск пересекается с зимним)\\xa0=\\xa045\\xa0-\\xa040\\xa0=\\xa05']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_111_a71b307547", "context": "", "options": ["A)26", "B)28", "C)21", "D)80", "E)23"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: 1/2 * d (10 + 6); sent4 -> int2: = 640; int1 & int2 -> int3: d = 80; int3 & sent4 & sent5 -> int4: Answer: D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Поперечное сечение канала имеет форму трапеции.", "2": "Если ширина верхней части канала равна 10 м, а", "3": "ширина нижней части — 6 м, и", "4": "площадь поперечного сечения равна 640 кв. метров,", "5": "какова глубина канала?", "6": "A) 26", "7": "B) 28", "8": "C) 21", "9": "D) 80", "10": "E) 23", "11": "1/2*d(10 + 6)", "12": "640", "13": "d = 80", "14": "Ответ: D", "15": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Поперечное сечение канала имеет форму трапеции.',\n  'Если ширина верхней части канала равна 10\\xa0м, а',\n  'ширина нижней части\\xa0— 6\\xa0м, и',\n  'площадь поперечного сечения равна 640\\xa0кв.\\xa0метров,']\nquestion = 'какова глубина канала?'\nchoices = {'A': '26', 'B': '28', 'C': '21', 'D': '80', 'E': '23'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если ширина верхней части канала равна 10\\xa0м, а', 'ширина нижней части\\xa0— 6\\xa0м, и']\nnew_fact = infer_new_fact(selected) # '1/2*d(10\\xa0+\\xa06)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['площадь поперечного сечения равна 640\\xa0кв.\\xa0метров,']\nnew_fact = infer_new_fact(selected) # '640'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1/2*d(10\\xa0+\\xa06)', '640']\nnew_fact = infer_new_fact(selected) # 'd\\xa0=\\xa080'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['площадь поперечного сечения равна 640\\xa0кв.\\xa0метров,', 'какова глубина канала?', 'd\\xa0=\\xa080']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_112_e3844729e9", "context": "", "options": ["A)70", "B)30", "C)3", "D)7", "E)5"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Knowing that the team lost 30 % of their matches, it has won 70 % of their matches; int1 & sent1 & sent2 -> int2: Total matches = 20 / (70/ 100) = 14; int2 & sent1 & sent2 -> int3: Hence number of matches that the team lost = 20 x 14/100 = 3=C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "В течение одного сезона теннисная команда выиграла 20 матчей и", "2": "проиграла 30% матчей.", "3": "Сколько матчей команда проиграла?", "4": "A) 70", "5": "B) 30", "6": "C) 3", "7": "D) 7", "8": "E) 5", "9": "Поскольку команда проиграла 30%  матчей, она выиграла 70% матчей", "10": "Всего матчей = 20/(70/100) = 14", "11": "Следовательно, количество матчей, в которых команда проиграла = 20 x 14/100 = 3 = В", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['В течение одного сезона теннисная команда выиграла 20\\xa0матчей и', 'проиграла 30%\\xa0матчей.']\nquestion = 'Сколько матчей команда проиграла?'\nchoices = {'A': '70', 'B': '30', 'C': '3', 'D': '7', 'E': '5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В течение одного сезона теннисная команда выиграла 20\\xa0матчей и', 'проиграла 30%\\xa0матчей.']\nnew_fact = infer_new_fact(selected) # 'Поскольку команда проиграла 30%\\xa0 матчей, она выиграла 70%\\xa0матчей'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В течение одного сезона теннисная команда выиграла 20\\xa0матчей и', 'проиграла 30%\\xa0матчей.', 'Поскольку команда проиграла 30%\\xa0 матчей, она выиграла 70%\\xa0матчей']\nnew_fact = infer_new_fact(selected) # 'Всего матчей\\xa0=\\xa020/(70/100)\\xa0=\\xa014'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В течение одного сезона теннисная команда выиграла 20\\xa0матчей и', 'проиграла 30%\\xa0матчей.', 'Всего матчей\\xa0=\\xa020/(70/100)\\xa0=\\xa014']\nnew_fact = infer_new_fact(selected) # 'Следовательно, количество матчей, в которых команда проиграла\\xa0=\\xa020\\xa0x\\xa014/100\\xa0=\\xa03\\xa0=\\xa0В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, количество матчей, в которых команда проиграла\\xa0=\\xa020\\xa0x\\xa014/100\\xa0=\\xa03\\xa0=\\xa0В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_113_00ef258c1a", "context": "", "options": ["A)750pi", "B)1500pi", "C)1875pi", "D)3000pi", "E)7500pi"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [2, 3, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [2, 3, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: 60 seconds - 300 revolutions; int1 & sent2 & sent3 -> int2: 30 seconds - 150 revolutions; int2 & sent2 & sent3 -> int3: distance travelled in 1 revolution = 2*pi*r; int3 & sent2 & sent3 -> int4: distance travelled in 150 revolutions = 300*pi*r; int3 & int4 -> int5: = 3000pi; int5 & sent2 & sent3 & sent7 -> int6: Answer is D.; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Точка на краю лопасти вентилятора вращается в плоскости, расположенной в 10 сантиметрах от центра вентилятора.", "2": "Какое расстояние в сантиметрах пройдет", "3": "эта точка через 30 секунд, если вентилятор вращается со скоростью 300 оборотов в минуту?", "4": "A) 750π", "5": "B) 1500π", "6": "C) 1875π", "7": "D) 3000π", "8": "E) 7500π", "9": "60 секунд — 300 оборотов", "10": "30 секунд — 150 оборотов", "11": "Расстояние, пройденное за 1 оборот = 2*π*r", "12": "Расстояние, пройденное за 150 оборотов = 300*π*r", "13": "= 3000π", "14": "Ответ — Г.", "15": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Точка на краю лопасти вентилятора вращается в плоскости, расположенной в 10\\xa0сантиметрах от центра вентилятора.', 'Какое расстояние в сантиметрах пройдет']\nquestion = 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?'\nchoices = {'A': '750π', 'B': '1500π', 'C': '1875π', 'D': '3000π', 'E': '7500π'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Какое расстояние в сантиметрах пройдет', 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?']\nnew_fact = infer_new_fact(selected) # '60\\xa0секунд\\xa0— 300\\xa0оборотов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние в сантиметрах пройдет', 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?', '60\\xa0секунд\\xa0— 300\\xa0оборотов']\nnew_fact = infer_new_fact(selected) # '30\\xa0секунд\\xa0— 150\\xa0оборотов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние в сантиметрах пройдет', 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?', '30\\xa0секунд\\xa0— 150\\xa0оборотов']\nnew_fact = infer_new_fact(selected) # 'Расстояние, пройденное за 1\\xa0оборот\\xa0=\\xa02*π*r'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние в сантиметрах пройдет', 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?', 'Расстояние, пройденное за 1\\xa0оборот\\xa0=\\xa02*π*r']\nnew_fact = infer_new_fact(selected) # 'Расстояние, пройденное за 150\\xa0оборотов\\xa0=\\xa0300*π*r'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расстояние, пройденное за 1\\xa0оборот\\xa0=\\xa02*π*r', 'Расстояние, пройденное за 150\\xa0оборотов\\xa0=\\xa0300*π*r']\nnew_fact = infer_new_fact(selected) # '=\\xa03000π'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое расстояние в сантиметрах пройдет', 'эта точка через 30\\xa0секунд, если вентилятор вращается со скоростью 300\\xa0оборотов в минуту?', 'D) 3000π', '=\\xa03000π']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_114_a7176c44de", "context": "", "options": ["A)20 < x < 54", "B)23 < x < 58", "C)25 < x < 64", "D)28 < x < 60", "E)None of these"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [1, 2, 6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: 36 ≤ n ≤ 72; sent2 -> int2: x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4); int2 -> int3: Put x = 36,; int1 & int2 & int3 -> int4: x = (362 + 2√36(36 + 4) + 16) / (36+ 4√36+ 4); int4 -> int5: i.e which is least value for n = 28.; int5 & sent1 & sent2 & sent6 -> int6: Answer : D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Если значение n таково, что 36 ≤ n ≤ 72,", "2": "то x = (n2 + 2√n(n + 4) + 16)/(n + 4√n + 4) удовлетворяет условию", "3": "A) 20 < х < 54", "4": "B) 23 < х < 58", "5": "C) 25 < х < 64", "6": "D) 28 < х < 60", "7": "E) Ничего из вышеперечисленного", "8": "36 ≤ n ≤ 72", "9": "x = (n2 + 2√n(n + 4) + 16)/(n + 4√n + 4)", "10": "Подставим x = 36,", "11": "x = (362 + 2√ 36(36 + 4) + 16)/(36+ 4√36+ 4)", "12": "т.е. наименьшее значение для n = 28.", "13": "Ответ: D", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Если значение n таково, что 36\\xa0≤\\xa0n\\xa0≤\\xa072,']\nquestion = 'то x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04) удовлетворяет условию'\nchoices = { 'A': '20\\xa0<\\xa0х\\xa0<\\xa054',\n  'B': '23\\xa0<\\xa0х\\xa0<\\xa058',\n  'C': '25\\xa0<\\xa0х\\xa0<\\xa064',\n  'D': '28\\xa0<\\xa0х\\xa0<\\xa060',\n  'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если значение n таково, что 36\\xa0≤\\xa0n\\xa0≤\\xa072,']\nnew_fact = infer_new_fact(selected) # '36\\xa0≤\\xa0n\\xa0≤\\xa072'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['то x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04) удовлетворяет условию']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04)']\nnew_fact = infer_new_fact(selected) # 'Подставим x\\xa0=\\xa036,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36\\xa0≤\\xa0n\\xa0≤\\xa072', 'x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04)', 'Подставим x\\xa0=\\xa036,']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0(362\\xa0+\\xa02√ 36(36\\xa0+\\xa04)\\xa0+\\xa016)/(36+ 4√36+ 4)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0=\\xa0(362\\xa0+\\xa02√ 36(36\\xa0+\\xa04)\\xa0+\\xa016)/(36+ 4√36+ 4)']\nnew_fact = infer_new_fact(selected) # 'т.е. наименьшее значение для n\\xa0=\\xa028.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если значение n таково, что 36\\xa0≤\\xa0n\\xa0≤\\xa072,', 'то x\\xa0=\\xa0(n2\\xa0+\\xa02√n(n\\xa0+\\xa04)\\xa0+\\xa016)/(n\\xa0+\\xa04√n\\xa0+\\xa04) удовлетворяет условию', 'D) 28\\xa0<\\xa0х\\xa0<\\xa060', 'т.е. наименьшее значение для n\\xa0=\\xa028.']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_115_eaab3cf399", "context": "", "options": ["A)50 m", "B)75 m", "C)100 m", "D)125 m", "E)150 m"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: Let the length of the space shuttle be x metres and its speed be y m/sec. Then, x / y = 1 ⇒ y = x / 5; int1 & sent1 & sent2 & sent3 -> int2: ∴ (x + 700) / 40 = x / 5 ⇔ x = 100 m. Answer C; int2 -> int3: The answer is C);", "textual_logical_units": {"1": "На максимальной скорости космический шаттл может преодолеть высоту 700 метров за 40 секунд.", "2": "Кроме того, прохождение одной точки занимает 5 секунд.", "3": "Какова длина космического шаттла?", "4": "A) 50 м", "5": "B) 75 м", "6": "C) 100 м", "7": "D) 125 м", "8": "E) 150 м", "9": "Пусть x метров — длина космического шаттла, а y м/с — его скорость. Тогда x/y = 1 ⇒ y = x/5", "10": "∴ (x + 700)/40 = x/5 ⇔ x = 100 м. Ответ — В", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'На максимальной скорости космический шаттл может преодолеть высоту 700\\xa0метров за 40\\xa0секунд.',\n  'Кроме того, прохождение одной точки занимает 5\\xa0секунд.']\nquestion = 'Какова длина космического шаттла?'\nchoices = {'A': '50\\xa0м', 'B': '75\\xa0м', 'C': '100\\xa0м', 'D': '125\\xa0м', 'E': '150\\xa0м'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На максимальной скорости космический шаттл может преодолеть высоту 700\\xa0метров за 40\\xa0секунд.', 'Кроме того, прохождение одной точки занимает 5\\xa0секунд.', 'Какова длина космического шаттла?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0метров\\xa0— длина космического шаттла, а y\\xa0м/с\\xa0— его скорость. Тогда x/y\\xa0=\\xa01\\xa0⇒\\xa0y\\xa0=\\xa0x/5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На максимальной скорости космический шаттл может преодолеть высоту 700\\xa0метров за 40\\xa0секунд.', 'Кроме того, прохождение одной точки занимает 5\\xa0секунд.', 'Какова длина космического шаттла?', 'Пусть x\\xa0метров\\xa0— длина космического шаттла, а y\\xa0м/с\\xa0— его скорость. Тогда x/y\\xa0=\\xa01\\xa0⇒\\xa0y\\xa0=\\xa0x/5']\nnew_fact = infer_new_fact(selected) # '∴ (x\\xa0+\\xa0700)/40\\xa0=\\xa0x/5\\xa0⇔\\xa0x\\xa0=\\xa0100\\xa0м. Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ (x\\xa0+\\xa0700)/40\\xa0=\\xa0x/5\\xa0⇔\\xa0x\\xa0=\\xa0100\\xa0м. Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_116_5bdcb9fb9f", "context": "", "options": ["A)2 months", "B)4 months", "C)23 months", "D)24 months", "E)84 months"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [3, 6, 7], "consequent": 13}, {"antecedents": [1, 2, 3, 4, 13], "consequent": 14}, {"antecedents": [1, 2, 3, 4, 13, 14], "consequent": 15}, {"antecedents": [13, 14, 15], "consequent": 16}, {"antecedents": [13, 14, 15, 16], "consequent": 17}, {"antecedents": [5, 6], "consequent": 18}, {"antecedents": [5, 6, 18], "consequent": 19}, {"antecedents": [5, 6, 18, 19], "consequent": 20}, {"antecedents": [5, 6, 18, 19, 20], "consequent": 21}, {"antecedents": [5, 6, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [5, 6, 18, 19, 20, 21, 22], "consequent": 23}, {"antecedents": [3, 4, 5, 6, 13, 14, 18], "consequent": 24}, {"antecedents": [2, 3, 4, 5, 6, 7, 13, 14, 18], "consequent": 25}, {"antecedents": [7, 9, 24, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "linearized_output_en": "sent3 & sent6 & sent7 -> int1: Assume that C was there in the business for x months; int1 & sent1 & sent2 & sent3 & sent4 -> int2: A:B:C = 40000*12 : 60000*10 : 120000*x; int1 & int2 & sent1 & sent2 & sent3 & sent4 -> int3: = 40*12 : 60*10 : 120x = 40 : 5*10 : 10x; int1 & int2 & int3 -> int4: =8 : 10 : 2x; int1 & int2 & int3 & int4 -> int5: = 4 : 5 : x; sent5 & sent6 -> int6: C's share = 375000*x/(9+x) = 150000; int6 & sent5 & sent6 -> int7: => 375x/(9+x) = 150; int6 & int7 & sent5 & sent6 -> int8: => 15x = 6(9+x); int6 & int7 & int8 & sent5 & sent6 -> int9: => 5x = 18 + 2x; int6 & int7 & int8 & int9 & sent5 & sent6 -> int10: => 3x = 18; int10 & int6 & int7 & int8 & int9 & sent5 & sent6 -> int11: => x = 18/3 = 6; int1 & int2 & int6 & sent3 & sent4 & sent5 & sent6 -> int12: It means C was there in the business for 6 months. Given that B joined the business; int1 & int2 & int6 & sent2 & sent3 & sent4 & sent5 & sent6 & sent7 -> int13: after 2 months. Hence C joined after 4 months after B joined; int12 & int13 & sent7 & sent9 -> int14: Answer is B; int14 -> int15: The answer is B);", "textual_logical_units": {"1": "A начинает бизнес со стартовым капиталом 40000 рупий.", "2": "Через 2 месяца к его компании присоединяется B и добавляет 60000 рупий.", "3": "Спустя некоторое время к ним присоединяется C и добавляет 120000 рупий.", "4": "В конце года", "5": "из общей прибыли 375000 рупий", "6": "C получает 150000 рупий в качестве своей доли.", "7": "Через сколько месяцев после вступления в компанию B к ней присоединился C?", "8": "A) 2 месяца", "9": "B) 4 месяца", "10": "C) 23 месяца", "11": "D) 24 месяца", "12": "E) 84 месяца", "13": "Предположим, что C проработал в компании x месяцев", "14": "А:B:C = 40000*12: 60000*10: 120000*x", "15": "= 40*12: 60*10: 120x = 40: 5*10: 10x", "16": "= 8: 10: 2x", "17": "= 4: 5:x", "18": "Доля C = 375000*x/(9 + x) = 150000", "19": "=> 375x/(9 + х) = 150", "20": "=> 15x = (6)(9 + х)", "21": "=> 5x = 18 + 2x", "22": "=> 3x = 18", "23": "=> x = 18/3 = 6", "24": "Это означает, что C проработал в компании 6 месяцев. Если B присоединился к компании", "25": "через 2 месяца, следовательно, C присоединился через 4 месяца после B", "26": "Ответ — Б", "27": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'A начинает бизнес со стартовым капиталом 40000\\xa0рупий.',\n  'Через 2\\xa0месяца к его компании присоединяется B и добавляет 60000\\xa0рупий.',\n  'Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.',\n  'В конце года',\n  'из общей прибыли 375000\\xa0рупий',\n  'C получает 150000\\xa0рупий в качестве своей доли.']\nquestion = 'Через сколько месяцев после вступления в компанию B к ней присоединился C?'\nchoices = {'A': '2\\xa0месяца', 'B': '4\\xa0месяца', 'C': '23\\xa0месяца', 'D': '24\\xa0месяца', 'E': '84\\xa0месяца'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Через сколько месяцев после вступления в компанию B к ней присоединился C?']\nnew_fact = infer_new_fact(selected) # 'Предположим, что C проработал в компании x\\xa0месяцев'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A начинает бизнес со стартовым капиталом 40000\\xa0рупий.', 'Через 2\\xa0месяца к его компании присоединяется B и добавляет 60000\\xa0рупий.', 'Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.', 'В конце года', 'Предположим, что C проработал в компании x\\xa0месяцев']\nnew_fact = infer_new_fact(selected) # 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A начинает бизнес со стартовым капиталом 40000\\xa0рупий.', 'Через 2\\xa0месяца к его компании присоединяется B и добавляет 60000\\xa0рупий.', 'Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.', 'В конце года', 'Предположим, что C проработал в компании x\\xa0месяцев', 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x']\nnew_fact = infer_new_fact(selected) # '=\\xa040*12: 60*10: 120x\\xa0=\\xa040: 5*10: 10x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, что C проработал в компании x\\xa0месяцев', 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x', '=\\xa040*12: 60*10: 120x\\xa0=\\xa040: 5*10: 10x']\nnew_fact = infer_new_fact(selected) # '=\\xa08: 10: 2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, что C проработал в компании x\\xa0месяцев', 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x', '=\\xa040*12: 60*10: 120x\\xa0=\\xa040: 5*10: 10x', '=\\xa08: 10: 2x']\nnew_fact = infer_new_fact(selected) # '=\\xa04: 5:x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.']\nnew_fact = infer_new_fact(selected) # 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000']\nnew_fact = infer_new_fact(selected) # '=>\\xa0375x/(9\\xa0+\\xa0х)\\xa0=\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000', '=>\\xa0375x/(9\\xa0+\\xa0х)\\xa0=\\xa0150']\nnew_fact = infer_new_fact(selected) # '=>\\xa015x\\xa0=\\xa0(6)(9\\xa0+\\xa0х)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000', '=>\\xa0375x/(9\\xa0+\\xa0х)\\xa0=\\xa0150', '=>\\xa015x\\xa0=\\xa0(6)(9\\xa0+\\xa0х)']\nnew_fact = infer_new_fact(selected) # '=>\\xa05x\\xa0=\\xa018\\xa0+\\xa02x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000', '=>\\xa0375x/(9\\xa0+\\xa0х)\\xa0=\\xa0150', '=>\\xa015x\\xa0=\\xa0(6)(9\\xa0+\\xa0х)', '=>\\xa05x\\xa0=\\xa018\\xa0+\\xa02x']\nnew_fact = infer_new_fact(selected) # '=>\\xa03x\\xa0=\\xa018'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000', '=>\\xa0375x/(9\\xa0+\\xa0х)\\xa0=\\xa0150', '=>\\xa015x\\xa0=\\xa0(6)(9\\xa0+\\xa0х)', '=>\\xa05x\\xa0=\\xa018\\xa0+\\xa02x', '=>\\xa03x\\xa0=\\xa018']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa018/3\\xa0=\\xa06'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.', 'В конце года', 'из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Предположим, что C проработал в компании x\\xa0месяцев', 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000']\nnew_fact = infer_new_fact(selected) # 'Это означает, что C проработал в компании 6\\xa0месяцев. Если B присоединился к компании'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через 2\\xa0месяца к его компании присоединяется B и добавляет 60000\\xa0рупий.', 'Спустя некоторое время к ним присоединяется C и добавляет 120000\\xa0рупий.', 'В конце года', 'из общей прибыли 375000\\xa0рупий', 'C получает 150000\\xa0рупий в качестве своей доли.', 'Через сколько месяцев после вступления в компанию B к ней присоединился C?', 'Предположим, что C проработал в компании x\\xa0месяцев', 'А:B:C\\xa0=\\xa040000*12: 60000*10: 120000*x', 'Доля C\\xa0=\\xa0375000*x/(9\\xa0+\\xa0x)\\xa0=\\xa0150000']\nnew_fact = infer_new_fact(selected) # 'через 2\\xa0месяца, следовательно, C присоединился через 4\\xa0месяца после B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько месяцев после вступления в компанию B к ней присоединился C?', 'B) 4\\xa0месяца', 'Это означает, что C проработал в компании 6\\xa0месяцев. Если B присоединился к компании', 'через 2\\xa0месяца, следовательно, C присоединился через 4\\xa0месяца после B']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_117_5741683b93", "context": "", "options": ["A)8.75", "B)8.79", "C)8.75", "D)8.71", "E)8.72"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 6, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: (5 * 3.5)/2 = 8.75; int1 & sent3 & sent6 -> int2: Answer:C; int2 -> int3: The answer is C);", "textual_logical_units": {"1": "Лист бумаги имеет форму квадрата со стороной 20 см.", "2": "На его противоположных сторонах нарисованы два полукруга, диаметр которых равен стороне листа.", "3": "Если эти полукруги вырезать, какой будет площадь оставшейся бумаги?", "4": "A) 8,75", "5": "B) 8,79", "6": "C) 8,75", "7": "D) 8,71", "8": "E) 8,72", "9": "(5*3,5)/2 = 8,75", "10": "Ответ: В", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Лист бумаги имеет форму квадрата со стороной 20\\xa0см.', 'На его противоположных сторонах нарисованы два полукруга, диаметр которых равен стороне листа.']\nquestion = 'Если эти полукруги вырезать, какой будет площадь оставшейся бумаги?'\nchoices = {'A': '8,75', 'B': '8,79', 'C': '8,75', 'D': '8,71', 'E': '8,72'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Лист бумаги имеет форму квадрата со стороной 20\\xa0см.', 'На его противоположных сторонах нарисованы два полукруга, диаметр которых равен стороне листа.', 'Если эти полукруги вырезать, какой будет площадь оставшейся бумаги?']\nnew_fact = infer_new_fact(selected) # '(5*3,5)/2\\xa0=\\xa08,75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если эти полукруги вырезать, какой будет площадь оставшейся бумаги?', 'C) 8,75', '(5*3,5)/2\\xa0=\\xa08,75']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_118_2e4000bace", "context": "", "options": ["A)M + N / 8", "B)2M + N / 8", "C)M + N / 4", "D)M + 3N / 8", "E)M + N / 5"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [1, 2], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [10, 13], "consequent": 14}, {"antecedents": [3, 4, 5, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: M + N / 8; sent3 -> int2: formular for avg speed is total distance / total time; sent1 & sent2 -> int3: Time spent running = 4 and the time spent biking = 4; int3 -> int4: total time is 4 + 4 = 8; int1 & int4 -> int5: Total distance is M+ N; int5 & sent3 & sent4 & sent5 -> int6: Thus A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Спортсмен пробегает M миль за 4 часа,", "2": "затем проезжает на велосипеде N миль за такое же количество часов.", "3": "Какой из перечисленных ниже вариантов соответствует средней скорости в милях в час", "4": "за два упражнения вместе взятые?", "5": "A) M + N/8", "6": "B) 2M + N/8", "7": "C) M + N/4", "8": "D) M + 3N/8", "9": "E) M + N/5", "10": "M + N/8", "11": "Формула для расчета средней скорости = общее расстояние/общее время", "12": "Время, затраченное на бег = 4, и время поездки на велосипеде = 4", "13": "Общее время равно 4 + 4 = 8", "14": "Общее расстояние равно M + N", "15": "Следовательно, ответ — А", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Спортсмен пробегает M\\xa0миль за 4\\xa0часа,',\n  'затем проезжает на велосипеде N\\xa0миль за такое же количество часов.',\n  'Какой из перечисленных ниже вариантов соответствует средней скорости в милях в час']\nquestion = 'за два упражнения вместе взятые?'\nchoices = {'A': 'M\\xa0+\\xa0N/8', 'B': '2M\\xa0+\\xa0N/8', 'C': 'M\\xa0+\\xa0N/4', 'D': 'M\\xa0+\\xa03N/8', 'E': 'M\\xa0+\\xa0N/5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Спортсмен пробегает M\\xa0миль за 4\\xa0часа,', 'затем проезжает на велосипеде N\\xa0миль за такое же количество часов.']\nnew_fact = infer_new_fact(selected) # 'M\\xa0+\\xa0N/8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой из перечисленных ниже вариантов соответствует средней скорости в милях в час']\nnew_fact = infer_new_fact(selected) # 'Формула для расчета средней скорости\\xa0=\\xa0общее расстояние/общее время'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Спортсмен пробегает M\\xa0миль за 4\\xa0часа,', 'затем проезжает на велосипеде N\\xa0миль за такое же количество часов.']\nnew_fact = infer_new_fact(selected) # 'Время, затраченное на бег\\xa0=\\xa04, и время поездки на велосипеде\\xa0=\\xa04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Время, затраченное на бег\\xa0=\\xa04, и время поездки на велосипеде\\xa0=\\xa04']\nnew_fact = infer_new_fact(selected) # 'Общее время равно 4\\xa0+\\xa04\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M\\xa0+\\xa0N/8', 'Общее время равно 4\\xa0+\\xa04\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # 'Общее расстояние равно M\\xa0+\\xa0N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой из перечисленных ниже вариантов соответствует средней скорости в милях в час', 'за два упражнения вместе взятые?', 'A) M\\xa0+\\xa0N/8', 'Общее расстояние равно M\\xa0+\\xa0N']\nnew_fact = infer_new_fact(selected) # 'Следовательно, ответ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, ответ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_119_27c4a76619", "context": "", "options": ["A)93 men", "B)94 men", "C)95 men", "D)96 men", "E)97 men"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [2, 8, 9, 10], "consequent": 11}, {"antecedents": [8, 9, 10, 11], "consequent": 12}, {"antecedents": [2, 6, 8, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: To complete a work for 6 days, 8 men are required.; int1 & sent1 -> int2: For completing a work in 1 day = 6*8; int1 & int2 -> int3: = 48 men; int1 & int2 & int3 & sent2 -> int4: For completing a work in half a day (1/2) = 48*2; int1 & int2 & int3 & int4 -> int5: = 96 men; int1 & int2 & int3 & int4 & int5 & sent2 & sent6 -> int6: ANSWER:D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "8 человек выполняют работу в течение 6 дней.", "2": "Сколько человек потребуется, чтобы выполнить такую же работу за полдня?", "3": "A) 93 человека", "4": "B) 94 человека", "5": "C) 95 человек", "6": "D) 96 человек", "7": "E) 97 человек", "8": "Для выполнения работы за 6 дней требуется 8 человек.", "9": "Для выполнения работы за 1 день = 6*8", "10": "= 48 человек", "11": "Для выполнения работы за полдня (1/2) = 48*2", "12": "= 96 человек", "13": "ОТВЕТ: Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['8\\xa0человек выполняют работу в течение 6\\xa0дней.']\nquestion = 'Сколько человек потребуется, чтобы выполнить такую же работу за полдня?'\nchoices = {'A': '93\\xa0человека', 'B': '94\\xa0человека', 'C': '95\\xa0человек', 'D': '96\\xa0человек', 'E': '97\\xa0человек'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['8\\xa0человек выполняют работу в течение 6\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8\\xa0человек выполняют работу в течение 6\\xa0дней.', 'Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Для выполнения работы за 1\\xa0день\\xa0=\\xa06*8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.', 'Для выполнения работы за 1\\xa0день\\xa0=\\xa06*8']\nnew_fact = infer_new_fact(selected) # '=\\xa048\\xa0человек'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько человек потребуется, чтобы выполнить такую же работу за полдня?', 'Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.', 'Для выполнения работы за 1\\xa0день\\xa0=\\xa06*8', '=\\xa048\\xa0человек']\nnew_fact = infer_new_fact(selected) # 'Для выполнения работы за полдня (1/2)\\xa0=\\xa048*2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.', 'Для выполнения работы за 1\\xa0день\\xa0=\\xa06*8', '=\\xa048\\xa0человек', 'Для выполнения работы за полдня (1/2)\\xa0=\\xa048*2']\nnew_fact = infer_new_fact(selected) # '=\\xa096\\xa0человек'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько человек потребуется, чтобы выполнить такую же работу за полдня?', 'D) 96\\xa0человек', 'Для выполнения работы за 6\\xa0дней требуется 8\\xa0человек.', 'Для выполнения работы за 1\\xa0день\\xa0=\\xa06*8', '=\\xa048\\xa0человек', 'Для выполнения работы за полдня (1/2)\\xa0=\\xa048*2', '=\\xa096\\xa0человек']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_120_8806663244", "context": "", "options": ["A)277", "B)288", "C)200", "D)277", "E)168"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 10}, {"antecedents": [1, 2, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let us say x boys and x girls joined the group.; int1 & sent1 & sent2 & sent4 -> int2: (64 + x)/(40 + x) = 4/3; int2 -> int3: 192 + 3x = 160 + 4x => x = 32; int2 & int3 -> int4: Number of members in the group = 64 + x + 40 + x; int2 & int3 & int4 -> int5: = 104 + 2x = 168.; int5 & sent3 & sent4 & sent9 -> int6: Answer:E; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "64 мальчика и 40 девочек формируют группу для социальной работы.", "2": "Во время кампании по привлечению новых участников к группе присоединилось одинаковое количество мальчиков и девочек.", "3": "Сколько участников в группе сейчас,", "4": "если соотношение мальчиков и девочек равно 4:3?", "5": "A) 277", "6": "B) 288", "7": "C) 200", "8": "D) 277", "9": "E) 168", "10": "Допустим, к группе присоединилось x мальчиков и x девочек.", "11": "(64 + х)/(40 + х) = 4/3", "12": "192 + 3х = 160 + 4х => х = 32", "13": "Количество участников в группе = 64 + x + 40 + x", "14": "= 104 + 2х = 168.", "15": "Ответ: Д", "16": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ '64\\xa0мальчика и 40\\xa0девочек формируют группу для социальной работы.',\n  'Во время кампании по привлечению новых участников к группе присоединилось одинаковое количество мальчиков и девочек.',\n  'Сколько участников в группе сейчас,']\nquestion = 'если соотношение мальчиков и девочек равно 4:3?'\nchoices = {'A': '277', 'B': '288', 'C': '200', 'D': '277', 'E': '168'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Во время кампании по привлечению новых участников к группе присоединилось одинаковое количество мальчиков и девочек.']\nnew_fact = infer_new_fact(selected) # 'Допустим, к группе присоединилось x\\xa0мальчиков и x\\xa0девочек.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['64\\xa0мальчика и 40\\xa0девочек формируют группу для социальной работы.', 'Во время кампании по привлечению новых участников к группе присоединилось одинаковое количество мальчиков и девочек.', 'если соотношение мальчиков и девочек равно 4:3?', 'Допустим, к группе присоединилось x\\xa0мальчиков и x\\xa0девочек.']\nnew_fact = infer_new_fact(selected) # '(64\\xa0+\\xa0х)/(40\\xa0+\\xa0х)\\xa0=\\xa04/3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64\\xa0+\\xa0х)/(40\\xa0+\\xa0х)\\xa0=\\xa04/3']\nnew_fact = infer_new_fact(selected) # '192\\xa0+\\xa03х\\xa0=\\xa0160\\xa0+\\xa04х\\xa0=>\\xa0х\\xa0=\\xa032'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64\\xa0+\\xa0х)/(40\\xa0+\\xa0х)\\xa0=\\xa04/3', '192\\xa0+\\xa03х\\xa0=\\xa0160\\xa0+\\xa04х\\xa0=>\\xa0х\\xa0=\\xa032']\nnew_fact = infer_new_fact(selected) # 'Количество участников в группе\\xa0=\\xa064\\xa0+\\xa0x\\xa0+\\xa040\\xa0+\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64\\xa0+\\xa0х)/(40\\xa0+\\xa0х)\\xa0=\\xa04/3', '192\\xa0+\\xa03х\\xa0=\\xa0160\\xa0+\\xa04х\\xa0=>\\xa0х\\xa0=\\xa032', 'Количество участников в группе\\xa0=\\xa064\\xa0+\\xa0x\\xa0+\\xa040\\xa0+\\xa0x']\nnew_fact = infer_new_fact(selected) # '=\\xa0104\\xa0+\\xa02х\\xa0=\\xa0168.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько участников в группе сейчас,', 'если соотношение мальчиков и девочек равно 4:3?', 'E) 168', '=\\xa0104\\xa0+\\xa02х\\xa0=\\xa0168.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_121_02b3feffab", "context": "", "options": ["A)1", "B)240", "C)30", "D)60", "E)120"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 4, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: At 12 miles per hour, to cover 48 miles the cyclist will need 4 hours or 240 minutes.; int1 & sent2 & sent4 -> int2: Answer: B.; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Велосипедист едет со скоростью 12 миль в час.", "2": "Сколько минут ему потребуется, чтобы проехать 48 миль?", "3": "A) 1", "4": "B) 240", "5": "C) 30", "6": "D) 60", "7": "E) 120", "8": "Чтобы преодолеть 48 миль на скорости 12 миль в час, велосипедисту потребуется 4 часа или 240 минут.", "9": "Ответ: Б.", "10": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Велосипедист едет со скоростью 12\\xa0миль в час.']\nquestion = 'Сколько минут ему потребуется, чтобы проехать 48\\xa0миль?'\nchoices = {'A': '1', 'B': '240', 'C': '30', 'D': '60', 'E': '120'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Велосипедист едет со скоростью 12\\xa0миль в час.', 'Сколько минут ему потребуется, чтобы проехать 48\\xa0миль?']\nnew_fact = infer_new_fact(selected) # 'Чтобы преодолеть 48\\xa0миль на скорости 12\\xa0миль в час, велосипедисту потребуется 4\\xa0часа или 240\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько минут ему потребуется, чтобы проехать 48\\xa0миль?', 'B) 240', 'Чтобы преодолеть 48\\xa0миль на скорости 12\\xa0миль в час, велосипедисту потребуется 4\\xa0часа или 240\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_122_085bceded4", "context": "", "options": ["A)180", "B)90", "C)270", "D)360", "E)None of the above"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 3, 4, 6], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [7, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent3 & sent4 & sent6 -> int1: In the last 70 miles of his approach to B, Kevin was traveling at 70 mph, so he traveled that distance in 1 hr, or 60 minutes. That means, when he arrived at B, 60 minutes had elapsed, and he took (3 hr) – (1 hr) = 2 hr to drive the distance D at 90 mph.; int1 -> int2: D = RT = (90 mph)[ (2 hr] = 180 mi; int2 & sent7 & sent8 -> int3: Answer = (A); int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Кевин ехал из пункта А в пункт Б с постоянной скоростью 70 миль в час.", "2": "Добравшись до пункта Б, он после небольшой паузы повернул направо", "3": "и вернулся в пункт A с постоянной скоростью 90 миль в час.", "4": "Ровно за 3 часа до окончания поездки", "5": "он все еще приближался к пункту B,", "6": "находясь всего в 70 милях от него.", "7": "Каково расстояние между пунктами A и B?", "8": "A) 180", "9": "B) 90", "10": "C) 270", "11": "D) 360", "12": "E) Ничего из вышеперечисленного", "13": "Проезжая последние 70 миль на подходе к пункту B, Кевин двигался со скоростью 70 миль в час, поэтому он преодолел это расстояние за 1 час или 60 минут. Это означает, что, когда он прибыл в пункт B, прошло 60 минут, и ему потребовалось (3 часA) - (1 час) = 2 часа, чтобы проехать расстояние D со скоростью 90 миль в час.", "14": "D = RT = (90 миль в час)[(2 часа] = 180 миль", "15": "Ответ = (A)", "16": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кевин ехал из пункта А в пункт Б с постоянной скоростью 70\\xa0миль в час.',\n  'Добравшись до пункта Б, он после небольшой паузы повернул направо',\n  'и вернулся в пункт A с постоянной скоростью 90\\xa0миль в час.',\n  'Ровно за 3\\xa0часа до окончания поездки',\n  'он все еще приближался к пункту B,',\n  'находясь всего в 70\\xa0милях от него.']\nquestion = 'Каково расстояние между пунктами A и B?'\nchoices = {'A': '180', 'B': '90', 'C': '270', 'D': '360', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Кевин ехал из пункта А в пункт Б с постоянной скоростью 70\\xa0миль в час.', 'и вернулся в пункт A с постоянной скоростью 90\\xa0миль в час.', 'Ровно за 3\\xa0часа до окончания поездки', 'находясь всего в 70\\xa0милях от него.']\nnew_fact = infer_new_fact(selected) # 'Проезжая последние 70\\xa0миль на подходе к пункту B, Кевин двигался со скоростью 70\\xa0миль в час, поэтому он преодолел это расстояние за 1\\xa0час или 60\\xa0минут. Это означает, что, когда он прибыл в пункт B, прошло 60\\xa0минут, и ему потребовалось (3\\xa0часA)\\xa0-\\xa0(1\\xa0час)\\xa0=\\xa02\\xa0часа, чтобы проехать расстояние D со скоростью 90\\xa0миль в час.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Проезжая последние 70\\xa0миль на подходе к пункту B, Кевин двигался со скоростью 70\\xa0миль в час, поэтому он преодолел это расстояние за 1\\xa0час или 60\\xa0минут. Это означает, что, когда он прибыл в пункт B, прошло 60\\xa0минут, и ему потребовалось (3\\xa0часA)\\xa0-\\xa0(1\\xa0час)\\xa0=\\xa02\\xa0часа, чтобы проехать расстояние D со скоростью 90\\xa0миль в час.']\nnew_fact = infer_new_fact(selected) # 'D\\xa0=\\xa0RT\\xa0=\\xa0(90\\xa0миль в час)[(2\\xa0часа]\\xa0=\\xa0180\\xa0миль'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково расстояние между пунктами A и B?', 'A) 180', 'D\\xa0=\\xa0RT\\xa0=\\xa0(90\\xa0миль в час)[(2\\xa0часа]\\xa0=\\xa0180\\xa0миль']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0=\\xa0(A)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0=\\xa0(A)']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_123_949ba93b1d", "context": "", "options": ["A)22.5", "B)84", "C)21", "D)24", "E)25"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 2/3 x = 30 => x = 45; int1 & sent3 -> int2: 45 * 1/2 = 22.5; int2 & sent3 & sent4 -> int3: ANSWER:A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Если вычесть из числа 30,", "2": "оно уменьшается до одной трети.", "3": "Каково значение 50% от этого числа?", "4": "A) 22,5", "5": "B) 84", "6": "C) 21", "7": "D) 24", "8": "E) 25", "9": "2/3х = 30 => x = 45", "10": "45*1/2 = 22,5", "11": "ОТВЕТ: А", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если вычесть из числа 30,', 'оно уменьшается до одной трети.']\nquestion = 'Каково значение 50% от этого числа?'\nchoices = {'A': '22,5', 'B': '84', 'C': '21', 'D': '24', 'E': '25'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если вычесть из числа 30,', 'оно уменьшается до одной трети.']\nnew_fact = infer_new_fact(selected) # '2/3х\\xa0=\\xa030\\xa0=>\\xa0x\\xa0=\\xa045'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково значение 50% от этого числа?', '2/3х\\xa0=\\xa030\\xa0=>\\xa0x\\xa0=\\xa045']\nnew_fact = infer_new_fact(selected) # '45*1/2\\xa0=\\xa022,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково значение 50% от этого числа?', 'A) 22,5', '45*1/2\\xa0=\\xa022,5']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_124_6014d8a626", "context": "", "options": ["A)15 kmph", "B)6 kmph", "C)12 kmph", "D)14 kmph", "E)6 kmph"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent8 -> int1: The speed of the current is 4-2=2 kmph. Thus, if the man navigates along the current his speed is 6kmph. Answer: E; int1 -> int2: The answer is E);", "textual_logical_units": {"1": "Если по стоячей воде человек плывет на лодке со скоростью 4 км/ч, и", "2": "его скорость против течения составляет 2 км/ч,", "3": "то скорость движения по течению равна:", "4": "A) 15 км/ч", "5": "B) 6 км/ч", "6": "C) 12 км/ч", "7": "D) 14 км/ч", "8": "E) 6 км/ч", "9": "Скорость течения равна 4 - 2 = 2 км/ч. Следовательно, если человек движется по течению, его скорость составляет 6 км/ч. Ответ: E", "10": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Если по стоячей воде человек плывет на лодке со скоростью 4\\xa0км/ч, и', 'его скорость против течения составляет 2\\xa0км/ч,']\nquestion = 'то скорость движения по течению равна:'\nchoices = {'A': '15\\xa0км/ч', 'B': '6\\xa0км/ч', 'C': '12\\xa0км/ч', 'D': '14\\xa0км/ч', 'E': '6\\xa0км/ч'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если по стоячей воде человек плывет на лодке со скоростью 4\\xa0км/ч, и', 'его скорость против течения составляет 2\\xa0км/ч,', 'то скорость движения по течению равна:', 'E) 6\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'Скорость течения равна 4\\xa0-\\xa02\\xa0=\\xa02\\xa0км/ч. Следовательно, если человек движется по течению, его скорость составляет 6\\xa0км/ч. Ответ: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скорость течения равна 4\\xa0-\\xa02\\xa0=\\xa02\\xa0км/ч. Следовательно, если человек движется по течению, его скорость составляет 6\\xa0км/ч. Ответ: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_125_5cbaa446b8", "context": "", "options": ["A)368", "B)377", "C)288", "D)997", "E)112"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5, 7, 9], "consequent": 11}, {"antecedents": [5, 6, 9], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 & sent5 & sent7 & sent9 -> int1: Sum of the squares should be equal to 109. Only Options B and D satisfying. When we subtract 495, only 863 becomes 368; sent5 & sent6 & sent9 -> int2: Answer:A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Сумма цифр трехзначного числа равна 17,", "2": "а сумма квадратов его цифр равна 109.", "3": "Если вычесть из числа 495,", "4": "получится число, состоящее из тех же цифр, написанных в обратном порядке.", "5": "Найдите это число.", "6": "A) 368", "7": "B) 377", "8": "C) 288", "9": "D) 997", "10": "E) 112", "11": "Сумма квадратов цифр должна быть равна 109. Этому условию удовлетворяют только варианты Б и Г. Если вычесть 495, только от 863 остается 368", "12": "Ответ: А", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Сумма цифр трехзначного числа равна 17,',\n  'а сумма квадратов его цифр равна 109.',\n  'Если вычесть из числа 495,',\n  'получится число, состоящее из тех же цифр, написанных в обратном порядке.']\nquestion = 'Найдите это число.'\nchoices = {'A': '368', 'B': '377', 'C': '288', 'D': '997', 'E': '112'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['а сумма квадратов его цифр равна 109.', 'Если вычесть из числа 495,', 'получится число, состоящее из тех же цифр, написанных в обратном порядке.', 'Найдите это число.', 'B) 377', 'D) 997']\nnew_fact = infer_new_fact(selected) # 'Сумма квадратов цифр должна быть равна 109. Этому условию удовлетворяют только варианты Б и Г. Если вычесть 495, только от 863 остается 368'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите это число.', 'A) 368', 'D) 997']\nnew_fact = infer_new_fact(selected) # 'Ответ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_126_a5b5f4a0dc", "context": "", "options": ["A)69:91", "B)59:91", "C)59:90", "D)59:91", "E)69:101"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 13}, {"antecedents": [3, 13], "consequent": 14}, {"antecedents": [4, 13], "consequent": 15}, {"antecedents": [14, 15], "consequent": 16}, {"antecedents": [6, 7, 9, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.; int1 & sent3 -> int2: 40 grams of mixture 1 contains 6*40/15=16 grams of zinc and 24 grams of copper; int1 & sent4 -> int3: 60 grams of mixture 2 contains 7*60/18=77/3 grams of zinc and 110/3 grams of copper; int2 & int3 -> int4: Thus, ratio =(16+77/3)/(24+110/3) =59/91; int4 & sent6 & sent7 & sent9 -> int5: ANSWER:B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "X и Y — два сплава, полученные путем смешивания цинка и", "2": "меди в соотношении 6:9 и 7:11 соответственно.", "3": "Если 40 г сплава X и", "4": "60 г сплава Y расплавить и", "5": "смешать с образованием сплава Z,", "6": "каким будет соотношение цинка и", "7": "меди в сплаве Z?", "8": "A) 69:91", "9": "B) 59:91", "10": "C) 59:90", "11": "D) 59:91", "12": "E) 69:101", "13": "Соотношение цинка и меди в сплаве 1 составляет 6/9, а в сплаве 2 — 7/11.", "14": "40 г сплава 1 содержат 6*40/15 = 16 г цинка и 24 г меди", "15": "60 г сплава 2 содержат 7*60/18 = 77/3 г цинка и 110/3 г меди", "16": "Следовательно, соотношение = (16 + 77/3)/(24 + 110/3) = 59/91", "17": "ОТВЕТ: Б", "18": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'X и Y\\xa0— два сплава, полученные путем смешивания цинка и',\n  'меди в соотношении 6:9 и 7:11 соответственно.',\n  'Если 40\\xa0г сплава X и',\n  '60\\xa0г сплава Y расплавить и',\n  'смешать с образованием сплава Z,',\n  'каким будет соотношение цинка и']\nquestion = 'меди в сплаве Z?'\nchoices = {'A': '69:91', 'B': '59:91', 'C': '59:90', 'D': '59:91', 'E': '69:101'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['X и Y\\xa0— два сплава, полученные путем смешивания цинка и', 'меди в соотношении 6:9 и 7:11 соответственно.']\nnew_fact = infer_new_fact(selected) # 'Соотношение цинка и меди в сплаве 1 составляет 6/9, а в сплаве 2\\xa0— 7/11.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 40\\xa0г сплава X и', 'Соотношение цинка и меди в сплаве 1 составляет 6/9, а в сплаве 2\\xa0— 7/11.']\nnew_fact = infer_new_fact(selected) # '40\\xa0г сплава 1 содержат 6*40/15\\xa0=\\xa016\\xa0г цинка и 24\\xa0г меди'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['60\\xa0г сплава Y расплавить и', 'Соотношение цинка и меди в сплаве 1 составляет 6/9, а в сплаве 2\\xa0— 7/11.']\nnew_fact = infer_new_fact(selected) # '60\\xa0г сплава 2 содержат 7*60/18\\xa0=\\xa077/3\\xa0г цинка и 110/3\\xa0г меди'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40\\xa0г сплава 1 содержат 6*40/15\\xa0=\\xa016\\xa0г цинка и 24\\xa0г меди', '60\\xa0г сплава 2 содержат 7*60/18\\xa0=\\xa077/3\\xa0г цинка и 110/3\\xa0г меди']\nnew_fact = infer_new_fact(selected) # 'Следовательно, соотношение\\xa0=\\xa0(16\\xa0+\\xa077/3)/(24\\xa0+\\xa0110/3)\\xa0=\\xa059/91'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет соотношение цинка и', 'меди в сплаве Z?', 'B) 59:91', 'Следовательно, соотношение\\xa0=\\xa0(16\\xa0+\\xa077/3)/(24\\xa0+\\xa0110/3)\\xa0=\\xa059/91']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_127_b70098332e", "context": "", "options": ["A)18", "B)20", "C)22", "D)24", "E)26"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [5, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent2 -> int1: A = 16000; sent3 -> int2: B = 4000; int1 & int2 -> int3: A share 16 parts & B share 4 parts; int3 & sent4 -> int4: Total 20 parts  =>  30; int4 -> int5:  =>  1 part  =>  1.5; int5 & sent5 -> int6: A share = 16 parts  =>  24; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Подлый бандит Хупсмот решает вместе со своим преступным партнером Смолапоном подкупить нескольких сенаторов.", "2": "Хупсмот вносит в их фонд взяточничества 16000 долл. США,", "3": "а Смолапон — всего 4000 долл. США.", "4": "Общая сумма позволяет им подкупить 30 сенаторов.", "5": "Скольких из этих сенаторов можно считать подкупленными Хупсмотом?", "6": "A) 18", "7": "B) 20", "8": "C) 22", "9": "D) 24", "10": "E) 26", "11": "A = 16000", "12": "B = 4000", "13": "Доля A составляет 16 частей, доля B — 4 части", "14": "Всего 20 частей -----> 30", "15": "----> 1 часть -------> 1,5", "16": "Доля A = 16 частей -----> 24", "17": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Подлый бандит Хупсмот решает вместе со своим преступным партнером Смолапоном подкупить нескольких сенаторов.',\n  'Хупсмот вносит в их фонд взяточничества 16000\\xa0долл. США,',\n  'а Смолапон\\xa0— всего 4000\\xa0долл. США.',\n  'Общая сумма позволяет им подкупить 30\\xa0сенаторов.']\nquestion = 'Скольких из этих сенаторов можно считать подкупленными Хупсмотом?'\nchoices = {'A': '18', 'B': '20', 'C': '22', 'D': '24', 'E': '26'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Хупсмот вносит в их фонд взяточничества 16000\\xa0долл. США,']\nnew_fact = infer_new_fact(selected) # 'A\\xa0=\\xa016000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Смолапон\\xa0— всего 4000\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'B\\xa0=\\xa04000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A\\xa0=\\xa016000', 'B\\xa0=\\xa04000']\nnew_fact = infer_new_fact(selected) # 'Доля A составляет 16\\xa0частей, доля B\\xa0— 4\\xa0части'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая сумма позволяет им подкупить 30\\xa0сенаторов.', 'Доля A составляет 16\\xa0частей, доля B\\xa0— 4\\xa0части']\nnew_fact = infer_new_fact(selected) # 'Всего 20\\xa0частей -----> 30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Всего 20\\xa0частей -----> 30']\nnew_fact = infer_new_fact(selected) # '----> 1\\xa0часть -------> 1,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скольких из этих сенаторов можно считать подкупленными Хупсмотом?', '----> 1\\xa0часть -------> 1,5']\nnew_fact = infer_new_fact(selected) # 'Доля A\\xa0=\\xa016 частей -----> 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Доля A\\xa0=\\xa016 частей -----> 24']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_128_3f14983bae", "context": "", "options": ["A)600, 400", "B)628, 372", "C)640, 360", "D)None of these", "E)Cannot be determined"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let the numbers be x and y.; int1 & sent1 & sent2 -> int2: Then, x^2 - y^2 = 256000 and x + y = 1000.; int2 -> int3: On dividing we get : x - y = 256.; int2 & int3 -> int4: ‹=›Solving x + y = 1000 and x - y = 256,; int4 -> int5: ‹=›we get : x = 628 and y = 372.; int5 & sent3 & sent5 -> int6: Answer B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Разница между квадратами двух чисел равна 256000, а", "2": "сумма этих чисел равна 1000.", "3": "Какие это числа?", "4": "A) 600, 400", "5": "B) 628, 372", "6": "C) 640, 360", "7": "D) Ничего из вышеперечисленного", "8": "E) Невозможно определить", "9": "Пусть x и y — требуемые числа.", "10": "Тогда x^2 - y^2 = 256000 и x + y = 1000.", "11": "При делении получаем: x - y = 256.", "12": "‹=› Решая уравнения x + y = 1000 и x - y = 256,", "13": "‹=› получаем: x = 628 и y = 372.", "14": "Ответ — Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Разница между квадратами двух чисел равна 256000, а', 'сумма этих чисел равна 1000.']\nquestion = 'Какие это числа?'\nchoices = {'A': '600, 400', 'B': '628, 372', 'C': '640, 360', 'D': 'Ничего из вышеперечисленного', 'E': 'Невозможно определить'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x и y\\xa0— требуемые числа.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Разница между квадратами двух чисел равна 256000, а', 'сумма этих чисел равна 1000.', 'Пусть x и y\\xa0— требуемые числа.']\nnew_fact = infer_new_fact(selected) # 'Тогда x^2\\xa0-\\xa0y^2\\xa0=\\xa0256000 и x\\xa0+\\xa0y\\xa0=\\xa01000.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда x^2\\xa0-\\xa0y^2\\xa0=\\xa0256000 и x\\xa0+\\xa0y\\xa0=\\xa01000.']\nnew_fact = infer_new_fact(selected) # 'При делении получаем: x\\xa0-\\xa0y\\xa0=\\xa0256.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда x^2\\xa0-\\xa0y^2\\xa0=\\xa0256000 и x\\xa0+\\xa0y\\xa0=\\xa01000.', 'При делении получаем: x\\xa0-\\xa0y\\xa0=\\xa0256.']\nnew_fact = infer_new_fact(selected) # '‹=›\\xa0Решая уравнения x\\xa0+\\xa0y\\xa0=\\xa01000 и x\\xa0-\\xa0y\\xa0=\\xa0256,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['‹=›\\xa0Решая уравнения x\\xa0+\\xa0y\\xa0=\\xa01000 и x\\xa0-\\xa0y\\xa0=\\xa0256,']\nnew_fact = infer_new_fact(selected) # '‹=›\\xa0получаем: x\\xa0=\\xa0628 и y\\xa0=\\xa0372.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какие это числа?', 'B) 628, 372', '‹=›\\xa0получаем: x\\xa0=\\xa0628 и y\\xa0=\\xa0372.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_129_6ac95d9a9f", "context": "", "options": ["A)50%", "B)60%", "C)70%", "D)86%", "E)90%"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [2, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: Weight of astronaut on Earth = 211 pounds; sent1 -> int2: Weight of astronaut on Venus = 182 pounds; int1 & int2 & sent2 -> int3: Weight of astronaut on Venus as a percentage of Weight of astronaut on Earth = (182/211)*100 = 86%; int3 & sent2 & sent6 -> int4: Answer D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Космонавт, который на Земле весит 211 фунтов, на Венере будет весить 182 фунта.", "2": "Какому проценту от веса на Земле будет примерно равен вес космонавта на Венере?", "3": "A) 50%", "4": "B) 60%", "5": "C) 70%", "6": "D) 86%", "7": "E) 90%", "8": "Вес космонавта на Земле = 211 фунтов", "9": "Вес космонавта на Венере = 182 фунта", "10": "Вес космонавта на Венере в процентах от веса на Земле = (182/211)*100 = 86%", "11": "Ответ: Г", "12": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Космонавт, который на Земле весит 211\\xa0фунтов, на Венере будет весить 182\\xa0фунта.']\nquestion = 'Какому проценту от веса на Земле будет примерно равен вес космонавта на Венере?'\nchoices = {'A': '50%', 'B': '60%', 'C': '70%', 'D': '86%', 'E': '90%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Космонавт, который на Земле весит 211\\xa0фунтов, на Венере будет весить 182\\xa0фунта.']\nnew_fact = infer_new_fact(selected) # 'Вес космонавта на Земле\\xa0=\\xa0211\\xa0фунтов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Космонавт, который на Земле весит 211\\xa0фунтов, на Венере будет весить 182\\xa0фунта.']\nnew_fact = infer_new_fact(selected) # 'Вес космонавта на Венере\\xa0=\\xa0182\\xa0фунта'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какому проценту от веса на Земле будет примерно равен вес космонавта на Венере?', 'Вес космонавта на Земле\\xa0=\\xa0211\\xa0фунтов', 'Вес космонавта на Венере\\xa0=\\xa0182\\xa0фунта']\nnew_fact = infer_new_fact(selected) # 'Вес космонавта на Венере в процентах от веса на Земле\\xa0=\\xa0(182/211)*100\\xa0=\\xa086%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какому проценту от веса на Земле будет примерно равен вес космонавта на Венере?', 'D) 86%', 'Вес космонавта на Венере в процентах от веса на Земле\\xa0=\\xa0(182/211)*100\\xa0=\\xa086%']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_130_c6678ac1c1", "context": "", "options": ["A)4 1/3 km/h", "B)7 2/3 km/h", "C)9 ½ km/h", "D)8 km/h", "E)81 km/h"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent3 -> int1: Avg speed = total distance/total time; int1 & sent1 & sent2 -> int2: = 5*6 + 4*12 / 18; int2 -> int3: =4 1/3 km/h; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Человек идет со скоростью 5 км/ч в течение 6 часов и", "2": "со скоростью 4 км/ч в течение 12 часов.", "3": "Его средняя скорость равна", "4": "A) 4 1/3 км/ч", "5": "B) 7 2/3 км/ч", "6": "C) 9 ½ км/ч", "7": "D) 8 км/ч", "8": "E) 81 км/ч", "9": "Средняя скорость = общее расстояние/общее время", "10": "32.6666666666667", "11": "= 4 1/3 км/ч", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Человек идет со скоростью 5\\xa0км/ч в течение 6\\xa0часов и', 'со скоростью 4\\xa0км/ч в течение 12\\xa0часов.']\nquestion = 'Его средняя скорость равна'\nchoices = {'A': '4\\xa01/3\\xa0км/ч', 'B': '7\\xa02/3\\xa0км/ч', 'C': '9\\xa0½\\xa0км/ч', 'D': '8\\xa0км/ч', 'E': '81\\xa0км/ч'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Его средняя скорость равна']\nnew_fact = infer_new_fact(selected) # 'Средняя скорость\\xa0=\\xa0общее расстояние/общее время'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Человек идет со скоростью 5\\xa0км/ч в течение 6\\xa0часов и', 'со скоростью 4\\xa0км/ч в течение 12\\xa0часов.', 'Средняя скорость\\xa0=\\xa0общее расстояние/общее время']\nnew_fact = infer_new_fact(selected) # '32.6666666666667'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['32.6666666666667']\nnew_fact = infer_new_fact(selected) # '=\\xa04\\xa01/3\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa04\\xa01/3\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_131_e46a7b9ddb", "context": "", "options": ["A)0", "B)2.25", "C)300", "D)400", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [1, 4, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: Given expression = [(272 - 32) (124 + 176)] / (17 x 15 - 15); int1 -> int2: = (240 x 300 ) / 240; int2 -> int3: = 300; int3 & sent1 & sent4 -> int4: Correct Option: C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "[(272 - 32)(124 + 176)]/(17 x 15 - 15) = ?", "2": "A) 0", "3": "B) 2,25", "4": "C) 300", "5": "D) 400", "6": "E) Ничего из вышеперечисленного", "7": "Задано выражение = [(272 - 32)(124 + 176)]/(17 x 15 - 15)", "8": "= (240 x 300)/240", "9": "300", "10": "Правильный вариант: В", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = '[(272\\xa0-\\xa032)(124\\xa0+\\xa0176)]/(17\\xa0x\\xa015\\xa0-\\xa015)\\xa0=\\xa0?'\nchoices = {'A': '0', 'B': '2,25', 'C': '300', 'D': '400', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['[(272\\xa0-\\xa032)(124\\xa0+\\xa0176)]/(17\\xa0x\\xa015\\xa0-\\xa015)\\xa0=\\xa0?']\nnew_fact = infer_new_fact(selected) # 'Задано выражение\\xa0=\\xa0[(272\\xa0-\\xa032)(124\\xa0+\\xa0176)]/(17\\xa0x\\xa015\\xa0-\\xa015)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Задано выражение\\xa0=\\xa0[(272\\xa0-\\xa032)(124\\xa0+\\xa0176)]/(17\\xa0x\\xa015\\xa0-\\xa015)']\nnew_fact = infer_new_fact(selected) # '=\\xa0(240\\xa0x\\xa0300)/240'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa0(240\\xa0x\\xa0300)/240']\nnew_fact = infer_new_fact(selected) # '300'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['[(272\\xa0-\\xa032)(124\\xa0+\\xa0176)]/(17\\xa0x\\xa015\\xa0-\\xa015)\\xa0=\\xa0?', 'C) 300', '300']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_132_ab50c61510", "context": "", "options": ["A)2", "B)3", "C)4", "D)5", "E)6"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [4, 6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent0 -> int1: There must be more than two members.; sent2 & sent3 & sent4 -> int2: If there are four members, then the middle two average $3000 for a total of $6000, and the highest earner must earn at least $3000 which puts the total at $9000 minimum. The lowest earner pushes the total past $9000 so there can not be four family members.; int2 -> int3: There must be three family members.; int3 & sent4 & sent6 -> int4: The answer is B.; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Каждый член семьи каждый месяц зарабатывает деньги.", "2": "Если общий доход семьи в месяц составляет 9000 долл. США, а", "3": "средний доход — 3000 долл. США,", "4": "сколько человек в этой семье?", "5": "A) 2", "6": "B) 3", "7": "C) 4", "8": "D) 5", "9": "E) 6", "10": "Членов семьи должно быть больше двух.", "11": "Если их четверо, то второй и третий в среднем зарабатывают по 3000 долл. США, и всего получается 6000 долл. США. Тот, кто зарабатывает больше всех, тоже должен получать минимум 3000 долл. США, и выходит, что минимальная общая сумма равна 9000 долл. США. Если добавить доход того, кто зарабатывает меньше всех, то общая сумма получится более 9000 долл. США, поэтому в семье не может быть четырех человек.", "12": "В этой семье должно быть три человека.", "13": "Ответ — Б.", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Каждый член семьи каждый месяц зарабатывает деньги.',\n  'Если общий доход семьи в месяц составляет 9000\\xa0долл. США, а',\n  'средний доход\\xa0— 3000\\xa0долл. США,']\nquestion = 'сколько человек в этой семье?'\nchoices = {'A': '2', 'B': '3', 'C': '4', 'D': '5', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Членов семьи должно быть больше двух.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если общий доход семьи в месяц составляет 9000\\xa0долл. США, а', 'средний доход\\xa0— 3000\\xa0долл. США,', 'сколько человек в этой семье?']\nnew_fact = infer_new_fact(selected) # 'Если их четверо, то второй и третий в среднем зарабатывают по 3000\\xa0долл. США, и всего получается 6000\\xa0долл. США. Тот, кто зарабатывает больше всех, тоже должен получать минимум 3000\\xa0долл. США, и выходит, что минимальная общая сумма равна 9000\\xa0долл. США. Если добавить доход того, кто зарабатывает меньше всех, то общая сумма получится более 9000\\xa0долл. США, поэтому в семье не может быть четырех человек.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если их четверо, то второй и третий в среднем зарабатывают по 3000\\xa0долл. США, и всего получается 6000\\xa0долл. США. Тот, кто зарабатывает больше всех, тоже должен получать минимум 3000\\xa0долл. США, и выходит, что минимальная общая сумма равна 9000\\xa0долл. США. Если добавить доход того, кто зарабатывает меньше всех, то общая сумма получится более 9000\\xa0долл. США, поэтому в семье не может быть четырех человек.']\nnew_fact = infer_new_fact(selected) # 'В этой семье должно быть три человека.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько человек в этой семье?', 'B) 3', 'В этой семье должно быть три человека.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_133_6b6168730c", "context": "", "options": ["A)Rs. 666", "B)Rs. 670", "C)Rs. 700", "D)Rs. 570", "E)Rs. 770"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [4, 5, 11, 12], "consequent": 13}, {"antecedents": [4, 5, 10, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Fare for Adult = Rs. 140.; sent3 -> int2: Fare of Child = Half of the Adult = Rs. 70.; int1 & int2 & sent4 & sent5 -> int3: Total fare = 4 *140 + 3 *70 = 560 +210 = Rs. 770.; int3 & sent10 & sent4 & sent5 -> int4: ANSWER : E; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Стоимость проезда на автобусе для одного взрослого", "2": "от Ранчи до Патны равна 140 рупий, а", "3": "стоимость проезда для ребенка на том же месте в два раза ниже стоимости проезда взрослого.", "4": "Какова общая стоимость проезда на автобусе для 4 взрослых и", "5": "3 детей на одинаковых местах?", "6": "A) руп. 666", "7": "B) руп. 670", "8": "C) руп. 700", "9": "D) руп. 570", "10": "E) руп. 770", "11": "Стоимость проезда для взрослых = 140.", "12": "рупий. Стоимость проезда для ребенка = половина стоимости для взрослого = 70.", "13": "рупий. Общая стоимость проезда = 4*140 + 3*70 = 560 + 210 = 770.", "14": "ОТВЕТ: E", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Стоимость проезда на автобусе для одного взрослого',\n  'от Ранчи до Патны равна 140\\xa0рупий, а',\n  'стоимость проезда для ребенка на том же месте в два раза ниже стоимости проезда взрослого.',\n  'Какова общая стоимость проезда на автобусе для 4\\xa0взрослых и']\nquestion = '3\\xa0детей на одинаковых местах?'\nchoices = {'A': 'руп. 666', 'B': 'руп. 670', 'C': 'руп. 700', 'D': 'руп. 570', 'E': 'руп. 770'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Стоимость проезда на автобусе для одного взрослого', 'от Ранчи до Патны равна 140\\xa0рупий, а']\nnew_fact = infer_new_fact(selected) # 'Стоимость проезда для взрослых\\xa0= 140.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['стоимость проезда для ребенка на том же месте в два раза ниже стоимости проезда взрослого.']\nnew_fact = infer_new_fact(selected) # 'рупий. Стоимость проезда для ребенка\\xa0=\\xa0половина стоимости для взрослого\\xa0= 70.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова общая стоимость проезда на автобусе для 4\\xa0взрослых и', '3\\xa0детей на одинаковых местах?', 'Стоимость проезда для взрослых\\xa0= 140.', 'рупий. Стоимость проезда для ребенка\\xa0=\\xa0половина стоимости для взрослого\\xa0= 70.']\nnew_fact = infer_new_fact(selected) # 'рупий. Общая стоимость проезда\\xa0=\\xa04*140\\xa0+\\xa03*70\\xa0=\\xa0560\\xa0+\\xa0210\\xa0= 770.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова общая стоимость проезда на автобусе для 4\\xa0взрослых и', '3\\xa0детей на одинаковых местах?', 'E) руп. 770', 'рупий. Общая стоимость проезда\\xa0=\\xa04*140\\xa0+\\xa03*70\\xa0=\\xa0560\\xa0+\\xa0210\\xa0= 770.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_134_ac62d390e6", "context": "", "options": ["A)300", "B)200", "C)400", "D)100", "E)500"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 9, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 & sent5 & sent6 -> int1: Required number of employees = (624000 - 600000)/60=24000/60=400; int1 & sent6 & sent9 -> int2: Answer is C.; int2 -> int3: The answer is C);", "textual_logical_units": {"1": "Организация решила собрать", "2": "600000 рупий, получив равный взнос с каждого из сотрудников.", "3": "Если бы каждый из сотрудников внес", "4": "дополнительно 60 рупий, взнос составил бы", "5": "624000 рупий.", "6": "Сколько сотрудников в этой организации?", "7": "A) 300", "8": "B) 200", "9": "C) 400", "10": "D) 100", "11": "E) 500", "12": "Требуемое количество сотрудников = (624000 - 600000)/60 = 24000/60 = 400", "13": "Ответ — В.", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Организация решила собрать',\n  '600000\\xa0рупий, получив равный взнос с каждого из сотрудников.',\n  'Если бы каждый из сотрудников внес',\n  'дополнительно 60\\xa0рупий, взнос составил бы',\n  '624000\\xa0рупий.']\nquestion = 'Сколько сотрудников в этой организации?'\nchoices = {'A': '300', 'B': '200', 'C': '400', 'D': '100', 'E': '500'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['600000\\xa0рупий, получив равный взнос с каждого из сотрудников.', 'Если бы каждый из сотрудников внес', 'дополнительно 60\\xa0рупий, взнос составил бы', '624000\\xa0рупий.', 'Сколько сотрудников в этой организации?']\nnew_fact = infer_new_fact(selected) # 'Требуемое количество сотрудников\\xa0=\\xa0(624000\\xa0-\\xa0600000)/60\\xa0=\\xa024000/60\\xa0=\\xa0400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько сотрудников в этой организации?', 'C) 400', 'Требуемое количество сотрудников\\xa0=\\xa0(624000\\xa0-\\xa0600000)/60\\xa0=\\xa024000/60\\xa0=\\xa0400']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_135_ba882db21b", "context": "", "options": ["A)3267", "B)2678", "C)2797", "D)2300", "E)2781"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: Number of voters eligible for voting = 5000 × 0.8 = 4000; int1 & sent3 -> int2: Number of extra votes gotten by the winning candidate = 4000 × 0.15 = 600; sent0 -> int3: Let the number of votes won by winning candidate = x.; int1 & int2 & int3 -> int4: ⇒ x – (4000 – x) = 600; int4 -> int5: ⇒ x = 2300; int5 & sent4 & sent8 -> int6: Answer: D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Всего насчитывается 5000 избирателей, из которых 20% не имеют права голоса, и", "2": "в выборах участвуют два кандидата.", "3": "Победивший кандидат набрал 15% голосов.", "4": "Какое общее количество голосов он получил?", "5": "A) 3267", "6": "B) 2678", "7": "C) 2797", "8": "D) 2300", "9": "E) 2781", "10": "Количество избирателей, имеющих право голоса = 5000 × 0,8 = 4000", "11": "Количество дополнительных голосов, полученных победившим кандидатом = 4000 × 0,15 = 600", "12": "Пусть x — количество голосов, полученных победившим кандидатом.", "13": "⇒ х - (4000 - x) = 600", "14": "⇒ x = 2300", "15": "Ответ: D", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Всего насчитывается 5000\\xa0избирателей, из которых 20% не имеют права голоса, и',\n  'в выборах участвуют два кандидата.',\n  'Победивший кандидат набрал 15%\\xa0голосов.']\nquestion = 'Какое общее количество голосов он получил?'\nchoices = {'A': '3267', 'B': '2678', 'C': '2797', 'D': '2300', 'E': '2781'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Всего насчитывается 5000\\xa0избирателей, из которых 20% не имеют права голоса, и']\nnew_fact = infer_new_fact(selected) # 'Количество избирателей, имеющих право голоса\\xa0=\\xa05000\\xa0×\\xa00,8\\xa0=\\xa04000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Победивший кандидат набрал 15%\\xa0голосов.', 'Количество избирателей, имеющих право голоса\\xa0=\\xa05000\\xa0×\\xa00,8\\xa0=\\xa04000']\nnew_fact = infer_new_fact(selected) # 'Количество дополнительных голосов, полученных победившим кандидатом\\xa0=\\xa04000\\xa0×\\xa00,15\\xa0=\\xa0600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— количество голосов, полученных победившим кандидатом.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество избирателей, имеющих право голоса\\xa0=\\xa05000\\xa0×\\xa00,8\\xa0=\\xa04000', 'Количество дополнительных голосов, полученных победившим кандидатом\\xa0=\\xa04000\\xa0×\\xa00,15\\xa0=\\xa0600', 'Пусть x\\xa0— количество голосов, полученных победившим кандидатом.']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0х\\xa0-\\xa0(4000\\xa0-\\xa0x)\\xa0=\\xa0600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒\\xa0х\\xa0-\\xa0(4000\\xa0-\\xa0x)\\xa0=\\xa0600']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0x\\xa0=\\xa02300'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое общее количество голосов он получил?', 'D) 2300', '⇒\\xa0x\\xa0=\\xa02300']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_136_784e77c1a5", "context": "", "options": ["A)4", "B)3", "C)2", "D)1", "E)0"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [5, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Let's subtract $0.20 until we find a multiple of $0.25.; int1 & sent4 -> int2: $3.40 - $0.20*2 = $3.00, which is a multiple of $0.25.; int2 & sent5 & sent8 -> int3: The answer is C.; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "За то каждую медную монету, добытую со дна реки,", "2": "ныряльщица за монетами получает 20 центов,", "3": "а за каждую медную монету — 25 центов.", "4": "Если после одного погружения она получила 3,40 долл. США,", "5": "Какое минимальное количество медных монет она добыла?", "6": "A) 4", "7": "B) 3", "8": "C) 2", "9": "D) 1", "10": "E) 0", "11": "Будем вычитать по 0,20 долл. США, пока не найдем число, кратное 0,25 долл. США.", "12": "3,40 - 0,20*2 долл. США = 3,00 долл. США, что кратно 0,25 долл. США.", "13": "Ответ — В.", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'За то каждую медную монету, добытую со дна реки,',\n  'ныряльщица за монетами получает 20\\xa0центов,',\n  'а за каждую медную монету\\xa0— 25\\xa0центов.',\n  'Если после одного погружения она получила 3,40\\xa0долл. США,']\nquestion = 'Какое минимальное количество медных монет она добыла?'\nchoices = {'A': '4', 'B': '3', 'C': '2', 'D': '1', 'E': '0'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ныряльщица за монетами получает 20\\xa0центов,', 'а за каждую медную монету\\xa0— 25\\xa0центов.']\nnew_fact = infer_new_fact(selected) # 'Будем вычитать по 0,20\\xa0долл. США, пока не найдем число, кратное 0,25\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если после одного погружения она получила 3,40\\xa0долл. США,', 'Будем вычитать по 0,20\\xa0долл. США, пока не найдем число, кратное 0,25\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # '3,40\\xa0-\\xa00,20*2\\xa0долл. США\\xa0=\\xa03,00\\xa0долл. США, что кратно 0,25\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое минимальное количество медных монет она добыла?', 'C) 2', '3,40\\xa0-\\xa00,20*2\\xa0долл. США\\xa0=\\xa03,00\\xa0долл. США, что кратно 0,25\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_137_919c700e08", "context": "", "options": ["A)700 meters", "B)1000 meters", "C)700 kilometers", "D)555 meters", "E)600 meters"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 11}, {"antecedents": [1, 4, 11], "consequent": 12}, {"antecedents": [1, 4, 11], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [5, 10, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent3 -> int1: Vr=20m/s, Vk=40m/s; int1 & sent1 & sent4 -> int2: distance A-C = 20*10=200m; int1 & sent1 & sent4 -> int3: distance B-C = 40*10=400m; int2 & int3 -> int4: Therefore, distance A-C = 200+400=600m.; int4 & sent10 & sent5 -> int5: option E; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Роман и Константин выехали из пунктов A и B соответственно", "2": "в одно и то же время и", "3": "движутся по одному и тому же маршруту навстречу друг другу с постоянной скоростью 20 м/с и 40 м/с соответственно.", "4": "Через 10 секунд Роман встречает Константина в точке С на дороге.", "5": "Найдите общее расстояние между пунктами A и B.", "6": "A) 700 метров", "7": "B) 1000 метров", "8": "C) 700 километров", "9": "D) 555 метров", "10": "E) 600 метров", "11": "Vr = 20 м/с, Vk = 40 м/с", "12": "Расстояние А - С = 20*10 = 200 м", "13": "Расстояние B - С = 40*10 = 400 м", "14": "Следовательно, расстояние А - С = 200 + 400 = 600 м", "15": "Вариант Д", "16": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Роман и Константин выехали из пунктов A и B соответственно',\n  'в одно и то же время и',\n  'движутся по одному и тому же маршруту навстречу друг другу с постоянной скоростью 20\\xa0м/с и 40\\xa0м/с соответственно.',\n  'Через 10\\xa0секунд Роман встречает Константина в точке С на дороге.']\nquestion = 'Найдите общее расстояние между пунктами A и B.'\nchoices = {'A': '700\\xa0метров', 'B': '1000\\xa0метров', 'C': '700\\xa0километров', 'D': '555\\xa0метров', 'E': '600\\xa0метров'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['движутся по одному и тому же маршруту навстречу друг другу с постоянной скоростью 20\\xa0м/с и 40\\xa0м/с соответственно.']\nnew_fact = infer_new_fact(selected) # 'Vr\\xa0=\\xa020\\xa0м/с, Vk\\xa0=\\xa040\\xa0м/с'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Роман и Константин выехали из пунктов A и B соответственно', 'Через 10\\xa0секунд Роман встречает Константина в точке С на дороге.', 'Vr\\xa0=\\xa020\\xa0м/с, Vk\\xa0=\\xa040\\xa0м/с']\nnew_fact = infer_new_fact(selected) # 'Расстояние А\\xa0-\\xa0С\\xa0=\\xa020*10\\xa0=\\xa0200\\xa0м'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Роман и Константин выехали из пунктов A и B соответственно', 'Через 10\\xa0секунд Роман встречает Константина в точке С на дороге.', 'Vr\\xa0=\\xa020\\xa0м/с, Vk\\xa0=\\xa040\\xa0м/с']\nnew_fact = infer_new_fact(selected) # 'Расстояние B\\xa0-\\xa0С\\xa0=\\xa040*10\\xa0=\\xa0400\\xa0м'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расстояние А\\xa0-\\xa0С\\xa0=\\xa020*10\\xa0=\\xa0200\\xa0м', 'Расстояние B\\xa0-\\xa0С\\xa0=\\xa040*10\\xa0=\\xa0400\\xa0м']\nnew_fact = infer_new_fact(selected) # 'Следовательно, расстояние А\\xa0-\\xa0С\\xa0=\\xa0200\\xa0+\\xa0400\\xa0=\\xa0600\\xa0м'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите общее расстояние между пунктами A и B.', 'E) 600\\xa0метров', 'Следовательно, расстояние А\\xa0-\\xa0С\\xa0=\\xa0200\\xa0+\\xa0400\\xa0=\\xa0600\\xa0м']\nnew_fact = infer_new_fact(selected) # 'Вариант Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_138_00e6b9ed1d", "context": "", "options": ["A)42kms/hr", "B)41km/hr", "C)43kms/hr", "D)45kms/hr", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [3, 9, 10], "consequent": 11}, {"antecedents": [3, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: The speed of Car ’X’=320kms/8hr=40kms/hr; sent2 -> int2: The speed of car ’Y’=415kms/5hr=83kms/hr; int1 & int2 & sent3 -> int3: the difference is 43km/hr; int3 & sent3 & sent6 -> int4: ANSWER:C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Автомобиль X преодолевает расстояние 320 км за 8 часов, а", "2": "автомобиль Y — расстояние 415 км за 5 часов.", "3": "Какова разница скорости этих двух автомобилей?", "4": "A) 42 км/ч", "5": "B) 41 км/ч", "6": "C) 43 км/ч", "7": "D) 45 км/ч", "8": "E) Ничего из вышеперечисленного", "9": "Скорость автомобиля X = 320 км/8 ч = 40 км/ч", "10": "Скорость автомобиля Y = 415 км/5 ч = 83 км/ч", "11": "Разница равна 43 км/ч", "12": "ОТВЕТ: В", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Автомобиль X преодолевает расстояние 320\\xa0км за 8\\xa0часов, а', 'автомобиль Y\\xa0— расстояние 415\\xa0км за 5\\xa0часов.']\nquestion = 'Какова разница скорости этих двух автомобилей?'\nchoices = {'A': '42\\xa0км/ч', 'B': '41\\xa0км/ч', 'C': '43\\xa0км/ч', 'D': '45\\xa0км/ч', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Автомобиль X преодолевает расстояние 320\\xa0км за 8\\xa0часов, а']\nnew_fact = infer_new_fact(selected) # 'Скорость автомобиля X\\xa0=\\xa0320\\xa0км/8\\xa0ч\\xa0=\\xa040\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['автомобиль Y\\xa0— расстояние 415\\xa0км за 5\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Скорость автомобиля Y\\xa0=\\xa0415\\xa0км/5\\xa0ч\\xa0=\\xa083\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова разница скорости этих двух автомобилей?', 'Скорость автомобиля X\\xa0=\\xa0320\\xa0км/8\\xa0ч\\xa0=\\xa040\\xa0км/ч', 'Скорость автомобиля Y\\xa0=\\xa0415\\xa0км/5\\xa0ч\\xa0=\\xa083\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'Разница равна 43\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова разница скорости этих двух автомобилей?', 'C) 43\\xa0км/ч', 'Разница равна 43\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_139_2bbfe16913", "context": "", "options": ["A)9", "B)6", "C)4", "D)3", "E)2"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: Suppose x is the distance then; sent3 -> int2: going time + coming time = total time = 1 hour; int1 & int2 & sent1 & sent2 -> int3: x/10 + x/5 = 1; int3 -> int4: x = 1.5=2 miles; int4 & sent4 & sent9 -> int5: Answer E.; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Уинсон бежит из дома в школу со средней скоростью 10 миль в час, а затем", "2": "идет домой по тому же маршруту со средней скоростью 5 миль в час.", "3": "Если весь путь занял один час,", "4": "на каком расстоянии в милях его дом находится от школы?", "5": "A) 9", "6": "B) 6", "7": "C) 4", "8": "D) 3", "9": "E) 2", "10": "Пусть x — расстояние, тогда", "11": "Время пути туда + время пути обратно = общее время = 1 час", "12": "x/10 + x/5 = 1", "13": "x = 1,5 = 2 мили", "14": "Ответ — Д.", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Уинсон бежит из дома в школу со средней скоростью 10\\xa0миль в час, а затем',\n  'идет домой по тому же маршруту со средней скоростью 5\\xa0миль в час.',\n  'Если весь путь занял один час,']\nquestion = 'на каком расстоянии в милях его дом находится от школы?'\nchoices = {'A': '9', 'B': '6', 'C': '4', 'D': '3', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— расстояние, тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если весь путь занял один час,']\nnew_fact = infer_new_fact(selected) # 'Время пути туда\\xa0+\\xa0время пути обратно\\xa0=\\xa0общее время\\xa0=\\xa01\\xa0час'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Уинсон бежит из дома в школу со средней скоростью 10\\xa0миль в час, а затем', 'идет домой по тому же маршруту со средней скоростью 5\\xa0миль в час.', 'Пусть x\\xa0— расстояние, тогда', 'Время пути туда\\xa0+\\xa0время пути обратно\\xa0=\\xa0общее время\\xa0=\\xa01\\xa0час']\nnew_fact = infer_new_fact(selected) # 'x/10\\xa0+\\xa0x/5\\xa0=\\xa01'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x/10\\xa0+\\xa0x/5\\xa0=\\xa01']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa01,5\\xa0=\\xa02\\xa0мили'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['на каком расстоянии в милях его дом находится от школы?', 'E) 2', 'x\\xa0=\\xa01,5\\xa0=\\xa02\\xa0мили']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_140_d2bdcc0d20", "context": "", "options": ["A)80", "B)120", "C)240", "D)320", "E)360"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [6, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Since the store sold an equal number of white and yellow balls, 80%/2 = 40% of the inventory at the start of the day was white balls. Then 60% of the inventory consisted of yellow balls.; int1 & sent2 -> int2: 0.6(600) = 360; int2 & sent11 & sent6 -> int3: The answer is E.; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "В магазине спортивных товаров продаются только желтые и белые мячи для гольфа.", "2": "В начале дня в наличии было 600 мячей для гольфа,", "3": "и к концу дня было продано 80% от этих запасов.", "4": "Если магазине продал равное количество желтых и белых мячей для гольфа,", "5": "и при этом продал все белые мячи,", "6": "сколько желтых мячей для гольфа было в магазине в начале дня?", "7": "A) 80", "8": "B) 120", "9": "C) 240", "10": "D) 320", "11": "E) 360", "12": "Поскольку в магазине продавалось одинаковое количество белых и желтых мячей, 80%/2 = 40% запасов в начале дня составляли белые мячи. Следовательно, желтые мячи составляли 60% запасов.", "13": "0,6(600) = 360", "14": "Ответ — Д.", "15": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'В магазине спортивных товаров продаются только желтые и белые мячи для гольфа.',\n  'В начале дня в наличии было 600\\xa0мячей для гольфа,',\n  'и к концу дня было продано 80%\\xa0от этих запасов.',\n  'Если магазине продал равное количество желтых и белых мячей для гольфа,',\n  'и при этом продал все белые мячи,']\nquestion = 'сколько желтых мячей для гольфа было в магазине в начале дня?'\nchoices = {'A': '80', 'B': '120', 'C': '240', 'D': '320', 'E': '360'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['и к концу дня было продано 80%\\xa0от этих запасов.', 'Если магазине продал равное количество желтых и белых мячей для гольфа,']\nnew_fact = infer_new_fact(selected) # 'Поскольку в магазине продавалось одинаковое количество белых и желтых мячей, 80%/2\\xa0=\\xa040%\\xa0запасов в начале дня составляли белые мячи. Следовательно, желтые мячи составляли 60%\\xa0запасов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В начале дня в наличии было 600\\xa0мячей для гольфа,', 'Поскольку в магазине продавалось одинаковое количество белых и желтых мячей, 80%/2\\xa0=\\xa040%\\xa0запасов в начале дня составляли белые мячи. Следовательно, желтые мячи составляли 60%\\xa0запасов.']\nnew_fact = infer_new_fact(selected) # '0,6(600)\\xa0=\\xa0360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько желтых мячей для гольфа было в магазине в начале дня?', 'E) 360', '0,6(600)\\xa0=\\xa0360']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_141_f335efe611", "context": "", "options": ["A)12 metre", "B)12.5 metre", "C)13.5 metre", "D)14 metre", "E)15 metre"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 8, 9], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [2, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: Less shadow, Less Height (Direct Proportion); sent0 -> int2: So, let height of building be x metre; sent0 -> int3: then,; int1 & int2 & sent1 & sent2 -> int4: 40.25:17.5::28.75:x; int4 -> int5: =>x=17.5∗28.75/ 40.25; int5 -> int6: =>x=12.5; int6 & sent2 & sent4 -> int7: Option B; int7 -> int8: The answer is B);", "textual_logical_units": {"1": "Флагшток высотой 17,5 метров отбрасывает тень длиной 40,25 метров.", "2": "Высота здания, отбрасывающего тень длиной 28,75 метров в аналогичных условиях, составит:", "3": "A) 12 метров", "4": "B) 12,5 метров", "5": "C) 13,5 метров", "6": "D) 14 метров", "7": "E) 15 метров", "8": "Короче тень, меньше высота (прямая пропорция)", "9": "Пусть x метров — высота здания", "10": "Тогда", "11": "40,25:17,5::28,75:x", "12": "=> x = 17,5*28,75/40,25", "13": "=> x = 12,5", "14": "Вариант Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Флагшток высотой 17,5\\xa0метров отбрасывает тень длиной 40,25\\xa0метров.']\nquestion = 'Высота здания, отбрасывающего тень длиной 28,75\\xa0метров в аналогичных условиях, составит:'\nchoices = {'A': '12\\xa0метров', 'B': '12,5\\xa0метров', 'C': '13,5\\xa0метров', 'D': '14\\xa0метров', 'E': '15\\xa0метров'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Короче тень, меньше высота (прямая пропорция)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0метров\\xa0— высота здания'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Флагшток высотой 17,5\\xa0метров отбрасывает тень длиной 40,25\\xa0метров.', 'Высота здания, отбрасывающего тень длиной 28,75\\xa0метров в аналогичных условиях, составит:', 'Короче тень, меньше высота (прямая пропорция)', 'Пусть x\\xa0метров\\xa0— высота здания']\nnew_fact = infer_new_fact(selected) # '40,25:17,5::28,75:x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40,25:17,5::28,75:x']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa017,5*28,75/40,25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0x\\xa0=\\xa017,5*28,75/40,25']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa012,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Высота здания, отбрасывающего тень длиной 28,75\\xa0метров в аналогичных условиях, составит:', 'B) 12,5\\xa0метров', '=>\\xa0x\\xa0=\\xa012,5']\nnew_fact = infer_new_fact(selected) # 'Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_142_46e5ea2012", "context": "", "options": ["A)3 hours", "B)5 hours", "C)6 hours", "D)4 hours", "E)7 hours"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 11}, {"antecedents": [5], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [5, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Relative Speed: 55-52=3 mph; sent5 -> int2: Distance:15 miles; int1 & int2 -> int3: Time: distance/speed=15/3= 5 hours; int3 & sent5 & sent7 -> int4: Correct answer is B; int4 -> int5: The answer is B);", "textual_logical_units": {"1": "Два автомобиля движутся из одной отправной точки в одном направлении,", "2": "отправившись в одно и то же время.", "3": "Первый автомобиль движется с равномерной скоростью 55 миль в час,", "4": "а второй — с равномерной скоростью 52 мили в час.", "5": "Сколько времени пройдет, прежде чем автомобили окажутся на расстоянии 15 миль друг от друга?", "6": "A) 3 часа", "7": "B) 5 часов", "8": "C) 6 часов", "9": "D) 4 часа", "10": "E) 7 часов", "11": "Относительная скорость: 55 - 52 = 3 мили в час", "12": "Расстояние: 15 миль", "13": "Время: расстояние/скорость = 15/3 = 5 часов", "14": "Правильный ответ — Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два автомобиля движутся из одной отправной точки в одном направлении,',\n  'отправившись в одно и то же время.',\n  'Первый автомобиль движется с равномерной скоростью 55\\xa0миль в час,',\n  'а второй\\xa0— с равномерной скоростью 52\\xa0мили в час.']\nquestion = 'Сколько времени пройдет, прежде чем автомобили окажутся на расстоянии 15\\xa0миль друг от друга?'\nchoices = {'A': '3\\xa0часа', 'B': '5\\xa0часов', 'C': '6\\xa0часов', 'D': '4\\xa0часа', 'E': '7\\xa0часов'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Первый автомобиль движется с равномерной скоростью 55\\xa0миль в час,', 'а второй\\xa0— с равномерной скоростью 52\\xa0мили в час.']\nnew_fact = infer_new_fact(selected) # 'Относительная скорость: 55\\xa0-\\xa052\\xa0=\\xa03\\xa0мили в час'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени пройдет, прежде чем автомобили окажутся на расстоянии 15\\xa0миль друг от друга?']\nnew_fact = infer_new_fact(selected) # 'Расстояние: 15\\xa0миль'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Относительная скорость: 55\\xa0-\\xa052\\xa0=\\xa03\\xa0мили в час', 'Расстояние: 15\\xa0миль']\nnew_fact = infer_new_fact(selected) # 'Время: расстояние/скорость\\xa0=\\xa015/3\\xa0=\\xa05\\xa0часов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени пройдет, прежде чем автомобили окажутся на расстоянии 15\\xa0миль друг от друга?', 'B) 5\\xa0часов', 'Время: расстояние/скорость\\xa0=\\xa015/3\\xa0=\\xa05\\xa0часов']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_143_76188d77db", "context": "", "options": ["A)0.5", "B)0.6", "C)0.7", "D)0.8", "E)0.9"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3, 4], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [11, 13], "consequent": 14}, {"antecedents": [4, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let x be the probability that B does not occur.; sent3 & sent4 -> int2: P(A and B do not occur) = 1 - 0.96 = 0.04; int1 & int2 -> int3: 0.4x = 0.04; int3 -> int4: x=0.1; int2 & int4 -> int5: P(B occurs) = 1 - x = 0.9; int5 & sent4 & sent9 -> int6: The answer is E.; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "События A и B не зависят друг от друга.", "2": "Вероятность того, что произойдет событие A, равна 0,6,", "3": "а вероятность того, что произойдет хотя бы одно из событий A или B, равна 0,96.", "4": "Какова вероятность того, что произойдет событие B?", "5": "A) 0,5", "6": "B) 0,6", "7": "C) 0,7", "8": "D) 0,8", "9": "E) 0,9", "10": "Пусть x — вероятность того, что событие B не произойдет.", "11": "P(A и B не произойдут) = 1 - 0,96 = 0,04", "12": "0.4x = 0,04", "13": "x = 0,1", "14": "P(произойдет B) = 1 - x = 0,9", "15": "Ответ — Д.", "16": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'События A и B не зависят друг от друга.',\n  'Вероятность того, что произойдет событие A, равна 0,6,',\n  'а вероятность того, что произойдет хотя бы одно из событий A или B, равна 0,96.']\nquestion = 'Какова вероятность того, что произойдет событие B?'\nchoices = {'A': '0,5', 'B': '0,6', 'C': '0,7', 'D': '0,8', 'E': '0,9'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— вероятность того, что событие B не произойдет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а вероятность того, что произойдет хотя бы одно из событий A или B, равна 0,96.', 'Какова вероятность того, что произойдет событие B?']\nnew_fact = infer_new_fact(selected) # 'P(A и B не произойдут)\\xa0=\\xa01\\xa0-\\xa00,96\\xa0=\\xa00,04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— вероятность того, что событие B не произойдет.', 'P(A и B не произойдут)\\xa0=\\xa01\\xa0-\\xa00,96\\xa0=\\xa00,04']\nnew_fact = infer_new_fact(selected) # '0.4x\\xa0=\\xa00,04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['0.4x\\xa0=\\xa00,04']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa00,1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P(A и B не произойдут)\\xa0=\\xa01\\xa0-\\xa00,96\\xa0=\\xa00,04', 'x\\xa0=\\xa00,1']\nnew_fact = infer_new_fact(selected) # 'P(произойдет B)\\xa0=\\xa01\\xa0-\\xa0x\\xa0=\\xa00,9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова вероятность того, что произойдет событие B?', 'E) 0,9', 'P(произойдет B)\\xa0=\\xa01\\xa0-\\xa0x\\xa0=\\xa00,9']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_144_fe1606bd09", "context": "", "options": ["A)2: π", "B)7:2", "C)8:2", "D)6: π", "E)8:3"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 5, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: a3 : a3/8 * 4/3 π => 6: π; int1 & sent1 & sent5 -> int2: Answer: Option D; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Чему равно отношение объема куба к объему сферы, которая поместится внутри него?", "2": "A) 2:π", "3": "B) 7:2", "4": "C) 8:2", "5": "D) 6:π", "6": "E) 8:3", "7": "a3:a3/8*4/3π => 6:π", "8": "Ответ: Вариант Г", "9": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Чему равно отношение объема куба к объему сферы, которая поместится внутри него?'\nchoices = {'A': '2:π', 'B': '7:2', 'C': '8:2', 'D': '6:π', 'E': '8:3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Чему равно отношение объема куба к объему сферы, которая поместится внутри него?']\nnew_fact = infer_new_fact(selected) # 'a3:a3/8*4/3π\\xa0=>\\xa06:π'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чему равно отношение объема куба к объему сферы, которая поместится внутри него?', 'D) 6:π', 'a3:a3/8*4/3π\\xa0=>\\xa06:π']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_145_28743a039e", "context": "", "options": ["A)2", "B)3", "C)4", "D)5", "E)6"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 5 ties will get you one of different colored ties in the worst case. Thus, one more tie and you will have at least one pair. Thus, 6 is the correct answer.; int1 & sent10 & sent5 -> int2: ANSWER:E; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "У меня на вешалке 8 галстуков красного цвета,", "2": "13 — фиолетового, 10 — синего, 5 — розового и 4 — зеленого.", "3": "Если отключат электричество, и", "4": "мне нужно будет вытащить хотя бы два галстука одного цвета,", "5": "сколько галстуков мне нужно будет снять с вешалки?", "6": "A) 2", "7": "B) 3", "8": "C) 4", "9": "D) 5", "10": "E) 6", "11": "В худшем случае из 5 галстуков вы получите по одному каждого цвета. Следовательно, еще один галстук — и будет как минимум одна пара. Таким образом, правильный ответ — 6.", "12": "ОТВЕТ: Д", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'У меня на вешалке 8\\xa0галстуков красного цвета,',\n  '13\\xa0— фиолетового, 10\\xa0— синего, 5\\xa0— розового и 4\\xa0— зеленого.',\n  'Если отключат электричество, и',\n  'мне нужно будет вытащить хотя бы два галстука одного цвета,']\nquestion = 'сколько галстуков мне нужно будет снять с вешалки?'\nchoices = {'A': '2', 'B': '3', 'C': '4', 'D': '5', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У меня на вешалке 8\\xa0галстуков красного цвета,', '13\\xa0— фиолетового, 10\\xa0— синего, 5\\xa0— розового и 4\\xa0— зеленого.', 'Если отключат электричество, и', 'мне нужно будет вытащить хотя бы два галстука одного цвета,', 'сколько галстуков мне нужно будет снять с вешалки?']\nnew_fact = infer_new_fact(selected) # 'В худшем случае из 5\\xa0галстуков вы получите по одному каждого цвета. Следовательно, еще один галстук\\xa0— и будет как минимум одна пара. Таким образом, правильный ответ\\xa0— 6.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько галстуков мне нужно будет снять с вешалки?', 'E) 6', 'В худшем случае из 5\\xa0галстуков вы получите по одному каждого цвета. Следовательно, еще один галстук\\xa0— и будет как минимум одна пара. Таким образом, правильный ответ\\xa0— 6.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_146_a82d761623", "context": "", "options": ["A)2.5498", "B)0.4167", "C)3.3987", "D)8.5497", "E)5.6312"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: Answer=25/12*5; int1 -> int2: =25/60=0.4167; int2 & sent1 & sent3 -> int3: Option B is correct; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Найдите 25/12*5", "2": "A) 2,5498", "3": "B) 0,4167", "4": "C) 3,3987", "5": "D) 8,5497", "6": "E) 5,6312", "7": "Ответ = 25/12*5", "8": "= 0,4167", "9": "Вариант Б правильный", "10": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Найдите 25/12*5'\nchoices = {'A': '2,5498', 'B': '0,4167', 'C': '3,3987', 'D': '8,5497', 'E': '5,6312'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Найдите 25/12*5']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0=\\xa025/12*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0=\\xa025/12*5']\nnew_fact = infer_new_fact(selected) # '=\\xa00,4167'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите 25/12*5', 'B) 0,4167', '=\\xa00,4167']\nnew_fact = infer_new_fact(selected) # 'Вариант Б правильный'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант Б правильный']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_147_97922f0976", "context": "", "options": ["A)2", "B)4", "C)6", "D)8", "E)12"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let log2 4 = n.; sent1 -> int2: log2 4 = 2.; int2 & sent1 & sent2 -> int3: Answer: Option A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Значение log2 4 равно:", "2": "A) 2", "3": "B) 4", "4": "C) 6", "5": "D) 8", "6": "E) 12", "7": "Пусть log2 4 = n.", "8": "log2 4 = 2.", "9": "Ответ: Вариант А", "10": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Значение log2\\xa04 равно:'\nchoices = {'A': '2', 'B': '4', 'C': '6', 'D': '8', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть log2\\xa04\\xa0=\\xa0n.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Значение log2\\xa04 равно:']\nnew_fact = infer_new_fact(selected) # 'log2\\xa04\\xa0=\\xa02.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Значение log2\\xa04 равно:', 'A) 2', 'log2\\xa04\\xa0=\\xa02.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_148_4d7d0d861d", "context": "", "options": ["A)50 %", "B)60 %", "C)55 %", "D)70 %", "E)58%"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [2, 3], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [1, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: C.P. of 1 kg = 450/90 = Rs. 5; sent2 & sent3 -> int2: S.P. of 1 kg = Rs. 7.50; int1 & int2 -> int3: Gain = 7.50-5 = 2.50; int3 & sent1 & sent4 -> int4: Gain % = 2.50/5 * 100 = 50%. Answer: A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Рассчитайте процентную прибыль торговца, который купил 90 кг апельсинов за", "2": "450 рупий и продал их все по цене", "3": "7,50 рупий за кг.", "4": "A) 50 %", "5": "B) 60 %", "6": "C) 55 %", "7": "D) 70 %", "8": "E) 58%", "9": "Закупочная цена 1 кг = 450/90 = 5", "10": "рупий. Прейскурантная цена 1 кг = 7,50", "11": "рупий. Прибыль = 7,50 - 5 = 2,50", "12": "% прибыли = 2,50/5*100 = 50%. Ответ: A", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Рассчитайте процентную прибыль торговца, который купил 90\\xa0кг апельсинов за', '450\\xa0рупий и продал их все по цене']\nquestion = '7,50\\xa0рупий за кг.'\nchoices = {'A': '50 %', 'B': '60 %', 'C': '55 %', 'D': '70 %', 'E': '58%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рассчитайте процентную прибыль торговца, который купил 90\\xa0кг апельсинов за', '450\\xa0рупий и продал их все по цене']\nnew_fact = infer_new_fact(selected) # 'Закупочная цена 1\\xa0кг\\xa0=\\xa0450/90\\xa0= 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['450\\xa0рупий и продал их все по цене', '7,50\\xa0рупий за кг.']\nnew_fact = infer_new_fact(selected) # 'рупий. Прейскурантная цена 1\\xa0кг\\xa0= 7,50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Закупочная цена 1\\xa0кг\\xa0=\\xa0450/90\\xa0= 5', 'рупий. Прейскурантная цена 1\\xa0кг\\xa0= 7,50']\nnew_fact = infer_new_fact(selected) # 'рупий. Прибыль\\xa0=\\xa07,50\\xa0-\\xa05\\xa0=\\xa02,50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассчитайте процентную прибыль торговца, который купил 90\\xa0кг апельсинов за', 'A) 50 %', 'рупий. Прибыль\\xa0=\\xa07,50\\xa0-\\xa05\\xa0=\\xa02,50']\nnew_fact = infer_new_fact(selected) # '% прибыли\\xa0=\\xa02,50/5*100\\xa0=\\xa050%. Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['% прибыли\\xa0=\\xa02,50/5*100\\xa0=\\xa050%. Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_149_d57ace8501", "context": "", "options": ["A)1 hr 23 min", "B)1 hr 15 min", "C)1 hr 8 min", "D)56 min", "E)55 min"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 3, 5], "consequent": 12}, {"antecedents": [1, 2, 11], "consequent": 13}, {"antecedents": [3, 4, 11], "consequent": 14}, {"antecedents": [11, 13], "consequent": 15}, {"antecedents": [11, 14], "consequent": 16}, {"antecedents": [12, 13, 14], "consequent": 17}, {"antecedents": [11, 12, 13, 14, 17], "consequent": 18}, {"antecedents": [15, 16, 17, 18], "consequent": 19}, {"antecedents": [15, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [5, 9, 13, 14, 17, 18, 19, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Let the distance between the cities be x; sent1 & sent3 & sent5 -> int2: They meet after y hrs after 7am; int1 & sent1 & sent2 -> int3: M covers x in 4hrs; int1 & sent3 & sent4 -> int4: N covers x in 3 1/2 i.e 7/2 hrs; int1 & int3 -> int5: speed of M =x/4; int1 & int4 -> int6: speed of N = 2x/7; int2 & int3 & int4 -> int7: Distance covered by M in y+2 hrs + Distance covered by N in; int1 & int2 & int3 & int4 & int7 -> int8: y hrs is x; int5 & int6 & int7 & int8 -> int9: x/4 (y+2) +2x/7(y)=x; int5 & int6 & int7 & int8 & int9 -> int10: y=14/15hr or 56 min; int10 & int3 & int4 & int7 & int8 & int9 & sent5 & sent9 -> int11: Answer : D.; int11 -> int12: The answer is D);", "textual_logical_units": {"1": "Поезд М отправляется из города А в 05:00 и", "2": "прибывает в город B в 09:00.", "3": "Другой поезд N отправляется из города B в 07:00 и", "4": "прибывает в город А в 10:30.", "5": "Через сколько времени произойдет скрещение этих 2 поездов?", "6": "A) 1 час 23 мин", "7": "B) 1 час 15 минут", "8": "C) 1 час 8 минут", "9": "D) 56 мин", "10": "E) 55 мин", "11": "Пусть x — расстояние между городами", "12": "Поезда встретятся через y часов после 07:00", "13": "M проедет расстояние x за 4 часа", "14": "N проедет расстояние x за 3 1/2, т.е. 7/2 часа", "15": "Скорость M = x/4", "16": "Скорость N = 2x/7", "17": "Расстояние, пройденное поездом M за y + 2 часа + Расстояние, пройденное поездом N за", "18": "y часов, равно x", "19": "x/4(y + 2) + 2x/7(y) = x", "20": "y = 14/15 часа или 56 минут", "21": "Ответ: Г.", "22": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Поезд М отправляется из города А в 05:00 и',\n  'прибывает в город B в 09:00.',\n  'Другой поезд N отправляется из города B в 07:00 и',\n  'прибывает в город А в 10:30.']\nquestion = 'Через сколько времени произойдет скрещение этих 2\\xa0поездов?'\nchoices = {'A': '1\\xa0час 23\\xa0мин', 'B': '1\\xa0час 15\\xa0минут', 'C': '1\\xa0час 8\\xa0минут', 'D': '56\\xa0мин', 'E': '55\\xa0мин'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Поезд М отправляется из города А в 05:00 и', 'прибывает в город B в 09:00.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— расстояние между городами'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд М отправляется из города А в 05:00 и', 'Другой поезд N отправляется из города B в 07:00 и', 'Через сколько времени произойдет скрещение этих 2\\xa0поездов?']\nnew_fact = infer_new_fact(selected) # 'Поезда встретятся через y\\xa0часов после 07:00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд М отправляется из города А в 05:00 и', 'прибывает в город B в 09:00.', 'Пусть x\\xa0— расстояние между городами']\nnew_fact = infer_new_fact(selected) # 'M проедет расстояние x за 4\\xa0часа'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Другой поезд N отправляется из города B в 07:00 и', 'прибывает в город А в 10:30.', 'Пусть x\\xa0— расстояние между городами']\nnew_fact = infer_new_fact(selected) # 'N проедет расстояние x за 3\\xa01/2, т.е. 7/2\\xa0часа'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— расстояние между городами', 'M проедет расстояние x за 4\\xa0часа']\nnew_fact = infer_new_fact(selected) # 'Скорость M\\xa0=\\xa0x/4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— расстояние между городами', 'N проедет расстояние x за 3\\xa01/2, т.е. 7/2\\xa0часа']\nnew_fact = infer_new_fact(selected) # 'Скорость N\\xa0=\\xa02x/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезда встретятся через y\\xa0часов после 07:00', 'M проедет расстояние x за 4\\xa0часа', 'N проедет расстояние x за 3\\xa01/2, т.е. 7/2\\xa0часа']\nnew_fact = infer_new_fact(selected) # 'Расстояние, пройденное поездом M за y\\xa0+\\xa02\\xa0часа\\xa0+\\xa0Расстояние, пройденное поездом N за'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— расстояние между городами', 'Поезда встретятся через y\\xa0часов после 07:00', 'M проедет расстояние x за 4\\xa0часа', 'N проедет расстояние x за 3\\xa01/2, т.е. 7/2\\xa0часа', 'Расстояние, пройденное поездом M за y\\xa0+\\xa02\\xa0часа\\xa0+\\xa0Расстояние, пройденное поездом N за']\nnew_fact = infer_new_fact(selected) # 'y\\xa0часов, равно x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скорость M\\xa0=\\xa0x/4', 'Скорость N\\xa0=\\xa02x/7', 'Расстояние, пройденное поездом M за y\\xa0+\\xa02\\xa0часа\\xa0+\\xa0Расстояние, пройденное поездом N за', 'y\\xa0часов, равно x']\nnew_fact = infer_new_fact(selected) # 'x/4(y\\xa0+\\xa02)\\xa0+\\xa02x/7(y)\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скорость M\\xa0=\\xa0x/4', 'Скорость N\\xa0=\\xa02x/7', 'Расстояние, пройденное поездом M за y\\xa0+\\xa02\\xa0часа\\xa0+\\xa0Расстояние, пройденное поездом N за', 'y\\xa0часов, равно x', 'x/4(y\\xa0+\\xa02)\\xa0+\\xa02x/7(y)\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # 'y\\xa0=\\xa014/15\\xa0часа или 56\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько времени произойдет скрещение этих 2\\xa0поездов?', 'D) 56\\xa0мин', 'M проедет расстояние x за 4\\xa0часа', 'N проедет расстояние x за 3\\xa01/2, т.е. 7/2\\xa0часа', 'Расстояние, пройденное поездом M за y\\xa0+\\xa02\\xa0часа\\xa0+\\xa0Расстояние, пройденное поездом N за', 'y\\xa0часов, равно x', 'x/4(y\\xa0+\\xa02)\\xa0+\\xa02x/7(y)\\xa0=\\xa0x', 'y\\xa0=\\xa014/15\\xa0часа или 56\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_150_f63aa5bbd1", "context": "", "options": ["A)1 minute", "B)2 minutes", "C)3 minutes", "D)4 minutes", "E)5 minutes"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 5, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: Janice's speed = 1/6 miles per minute; sent2 -> int2: Jennie's speed = 1/3 miles per minute; int1 & int2 -> int3: Janice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute; int3 & sent3 -> int4: Both together will finish the mile in 2 minutes; int3 & int4 & sent3 & sent5 -> int5: correct option is B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Дженис ездит на велосипеде со скоростью 10 миль в час,", "2": "а Дженни — со скоростью 20 миль в час.", "3": "Через какое время они вместе проедут на велосипеде 1 милю?", "4": "A) 1 минута", "5": "B) 2 минуты", "6": "C) 3 минуты", "7": "D) 4 минуты", "8": "E) 5 минут", "9": "Скорость Дженис = 1/6 мили в минуту", "10": "Скорость Дженни = 1/3 мили в минуту", "11": "Скорость Дженис + скорость Дженни = (1/6 + 1/3) = 1/2 мили в минуту", "12": "Вместе они проедут одну милю за 2 минуты", "13": "Правильный вариант — Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Дженис ездит на велосипеде со скоростью 10\\xa0миль в час,', 'а Дженни\\xa0— со скоростью 20\\xa0миль в час.']\nquestion = 'Через какое время они вместе проедут на велосипеде 1\\xa0милю?'\nchoices = {'A': '1\\xa0минута', 'B': '2\\xa0минуты', 'C': '3\\xa0минуты', 'D': '4\\xa0минуты', 'E': '5\\xa0минут'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Дженис ездит на велосипеде со скоростью 10\\xa0миль в час,']\nnew_fact = infer_new_fact(selected) # 'Скорость Дженис\\xa0=\\xa01/6\\xa0мили в минуту'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Дженни\\xa0— со скоростью 20\\xa0миль в час.']\nnew_fact = infer_new_fact(selected) # 'Скорость Дженни\\xa0=\\xa01/3\\xa0мили в минуту'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Скорость Дженис\\xa0=\\xa01/6\\xa0мили в минуту', 'Скорость Дженни\\xa0=\\xa01/3\\xa0мили в минуту']\nnew_fact = infer_new_fact(selected) # 'Скорость Дженис\\xa0+\\xa0скорость Дженни\\xa0=\\xa0(1/6\\xa0+\\xa01/3)\\xa0=\\xa01/2\\xa0мили в минуту'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через какое время они вместе проедут на велосипеде 1\\xa0милю?', 'Скорость Дженис\\xa0+\\xa0скорость Дженни\\xa0=\\xa0(1/6\\xa0+\\xa01/3)\\xa0=\\xa01/2\\xa0мили в минуту']\nnew_fact = infer_new_fact(selected) # 'Вместе они проедут одну милю за 2\\xa0минуты'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через какое время они вместе проедут на велосипеде 1\\xa0милю?', 'B) 2\\xa0минуты', 'Скорость Дженис\\xa0+\\xa0скорость Дженни\\xa0=\\xa0(1/6\\xa0+\\xa01/3)\\xa0=\\xa01/2\\xa0мили в минуту', 'Вместе они проедут одну милю за 2\\xa0минуты']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_151_88c80087dc", "context": "", "options": ["A)278", "B)2890", "C)270", "D)2702", "E)960"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 9, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: 504/M = 420/800; sent1 & sent2 & sent3 -> int2: (504 * 800) / 420 = M; int1 & int2 & sent4 -> int3: M = 960; int1 & int3 & sent4 & sent9 -> int4: Answer:E; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "На экзамене абитуриент набрал 504 балла из максимального количества M.", "2": "Если максимальное количество баллов M преобразовать в 800 баллов,", "3": "он получил бы 420 баллов.", "4": "Каково значение M?", "5": "A) 278", "6": "B) 2890", "7": "C) 270", "8": "D) 2702", "9": "E) 960", "10": "504/M = 420/800", "11": "(504*800)/420 = M", "12": "M = 960", "13": "Ответ: Д", "14": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'На экзамене абитуриент набрал 504\\xa0балла из максимального количества M.',\n  'Если максимальное количество баллов M преобразовать в 800\\xa0баллов,',\n  'он получил бы 420\\xa0баллов.']\nquestion = 'Каково значение M?'\nchoices = {'A': '278', 'B': '2890', 'C': '270', 'D': '2702', 'E': '960'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На экзамене абитуриент набрал 504\\xa0балла из максимального количества M.', 'Если максимальное количество баллов M преобразовать в 800\\xa0баллов,', 'он получил бы 420\\xa0баллов.']\nnew_fact = infer_new_fact(selected) # '504/M\\xa0=\\xa0420/800'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На экзамене абитуриент набрал 504\\xa0балла из максимального количества M.', 'Если максимальное количество баллов M преобразовать в 800\\xa0баллов,', 'он получил бы 420\\xa0баллов.']\nnew_fact = infer_new_fact(selected) # '(504*800)/420\\xa0=\\xa0M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково значение M?', '504/M\\xa0=\\xa0420/800', '(504*800)/420\\xa0=\\xa0M']\nnew_fact = infer_new_fact(selected) # 'M\\xa0=\\xa0960'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково значение M?', 'E) 960', '504/M\\xa0=\\xa0420/800', 'M\\xa0=\\xa0960']\nnew_fact = infer_new_fact(selected) # 'Ответ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_152_39b1ea03ba", "context": "", "options": ["A)6", "B)8", "C)10", "D)12", "E)14"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [1, 2, 5, 9, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: We can set up a proportion to solve:; sent1 & sent2 -> int2: 10 bottles / 8 people = x bottles / 12 people.; sent0 -> int3: Cross-multiply to solve a proportion:; int2 & int3 -> int4: (10)(12) = (8)(x); int4 -> int5: 120 = 8x; int5 -> int6: 10 = x; int2 & int4 & int6 & sent1 & sent2 & sent5 -> int7: Answer :C.; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "Если Юлии нужно было купить 10 бутылок газировки для вечеринки, на которой присутствовали 8 человек,", "2": "сколько бутылок газировки ей нужно будет купить для вечеринки, в которой примут участие 12 человек?", "3": "A) 6", "4": "B) 8", "5": "C) 10", "6": "D) 12", "7": "E) 14", "8": "Можно установить пропорцию и решить ее:", "9": "10 бутылок/8 человек = x бутылок/12 человек.", "10": "Для решения пропорции выполним перекрестное умножение:", "11": "(10)(12) = (8)(x)", "12": "120 = 8x", "13": "10 = x", "14": "Ответ: В.", "15": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Если Юлии нужно было купить 10\\xa0бутылок газировки для вечеринки, на которой присутствовали 8\\xa0человек,']\nquestion = 'сколько бутылок газировки ей нужно будет купить для вечеринки, в которой примут участие 12\\xa0человек?'\nchoices = {'A': '6', 'B': '8', 'C': '10', 'D': '12', 'E': '14'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Можно установить пропорцию и решить ее:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Юлии нужно было купить 10\\xa0бутылок газировки для вечеринки, на которой присутствовали 8\\xa0человек,', 'сколько бутылок газировки ей нужно будет купить для вечеринки, в которой примут участие 12\\xa0человек?']\nnew_fact = infer_new_fact(selected) # '10\\xa0бутылок/8\\xa0человек\\xa0=\\xa0x\\xa0бутылок/12\\xa0человек.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Для решения пропорции выполним перекрестное умножение:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10\\xa0бутылок/8\\xa0человек\\xa0=\\xa0x\\xa0бутылок/12\\xa0человек.', 'Для решения пропорции выполним перекрестное умножение:']\nnew_fact = infer_new_fact(selected) # '(10)(12)\\xa0=\\xa0(8)(x)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(10)(12)\\xa0=\\xa0(8)(x)']\nnew_fact = infer_new_fact(selected) # '120\\xa0=\\xa08x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['120\\xa0=\\xa08x']\nnew_fact = infer_new_fact(selected) # '10\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Юлии нужно было купить 10\\xa0бутылок газировки для вечеринки, на которой присутствовали 8\\xa0человек,', 'сколько бутылок газировки ей нужно будет купить для вечеринки, в которой примут участие 12\\xa0человек?', 'C) 10', '10\\xa0бутылок/8\\xa0человек\\xa0=\\xa0x\\xa0бутылок/12\\xa0человек.', '(10)(12)\\xa0=\\xa0(8)(x)', '10\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # 'Ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_153_7853377744", "context": "", "options": ["A)36", "B)28", "C)42", "D)15", "E)20"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 11}, {"antecedents": [2, 3, 4, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 5, 9, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent0 -> int1: The ratio of shadow to height is constant, so if x is the length of the shadow, then; int1 & sent2 & sent3 & sent4 -> int2: 4/10 = 6/x and x = 15 .; int2 & sent2 & sent3 & sent4 & sent5 & sent9 -> int3: correct answer D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Два муравья стоят бок о бок.", "2": "Один муравей ростом 4 дюйма", "3": "отбрасывает тень длиной 10 дюймов.", "4": "Другой муравей ростом 6 дюймов.", "5": "Вычислите в дюймах длину тени, которую отбрасывает более высокий муравей.", "6": "A) 36", "7": "B) 28", "8": "C) 42", "9": "D) 15", "10": "E) 20", "11": "Отношение тени к высоте постоянно, поэтому если x — длина тени, то", "12": "4/10 = 6/x и x = 15.", "13": "Правильный ответ — Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Два муравья стоят бок о бок.', 'Один муравей ростом 4\\xa0дюйма', 'отбрасывает тень длиной 10\\xa0дюймов.', 'Другой муравей ростом 6\\xa0дюймов.']\nquestion = 'Вычислите в дюймах длину тени, которую отбрасывает более высокий муравей.'\nchoices = {'A': '36', 'B': '28', 'C': '42', 'D': '15', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Отношение тени к высоте постоянно, поэтому если x\\xa0— длина тени, то'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один муравей ростом 4\\xa0дюйма', 'отбрасывает тень длиной 10\\xa0дюймов.', 'Другой муравей ростом 6\\xa0дюймов.', 'Отношение тени к высоте постоянно, поэтому если x\\xa0— длина тени, то']\nnew_fact = infer_new_fact(selected) # '4/10\\xa0=\\xa06/x и x\\xa0=\\xa015.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Один муравей ростом 4\\xa0дюйма', 'отбрасывает тень длиной 10\\xa0дюймов.', 'Другой муравей ростом 6\\xa0дюймов.', 'Вычислите в дюймах длину тени, которую отбрасывает более высокий муравей.', 'D) 15', '4/10\\xa0=\\xa06/x и x\\xa0=\\xa015.']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_154_cf6450e24a", "context": "", "options": ["A)2.6m", "B)3.9m", "C)4m", "D)4.2m", "E)4.4m"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [2, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [9, 10, 11, 12, 14], "consequent": 15}, {"antecedents": [3, 6, 9, 10, 11, 12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let, height= 2x metres & (length+ breadth)= 5x metres.; sent2 -> int2: Length of paper= (260/2)m= 130m.; int2 & sent2 -> int3: Therefore, area of paper= (130*50/100)= 65m2; int2 & int3 & sent2 -> int4: Area of 4 walls= (65+15)=80m2; int4 -> int5: 2(length+breadth)*height=80.; int1 & int2 & int3 & int4 & int5 -> int6: Therefore, 2*5x*2x=80 or x2=4 or x=2; int1 & int2 & int3 & int4 & int6 -> int7: Therefore, height of the room= 4m; int1 & int2 & int3 & int4 & int6 & int7 & sent3 & sent6 -> int8: ANSWER:C; int8 -> int9: The answer is C);", "textual_logical_units": {"1": "Соотношение высоты комнаты и ее полупериметра равно 2:5.", "2": "Оклейка стен комнаты обоями шириной 50 см стоит 260 рупий по цене 2 рупий за метр, при этом площадь дверей и окон составляет 15 кв. м.", "3": "Высота комнаты равна:", "4": "A) 2,6м", "5": "B) 3,9м", "6": "C) 4м", "7": "D) 4,2м", "8": "E) 4,4м", "9": "Пусть высота = 2x метра, а (длина + ширинA) = 5x метров.", "10": "Длина обоев = (260/2) м = 130 м.", "11": "Следовательно, площадь обоев = (130*50/100) = 65 м2", "12": "Площадь 4 стен = (65 + 15) = 80 м2", "13": "2(длина + ширинA)*высота = 80.", "14": "Следовательно, 2*5x*2x = 80 или x2 = 4 или x = 2", "15": "Следовательно, высота комнаты = 4 м", "16": "ОТВЕТ: В", "17": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Соотношение высоты комнаты и ее полупериметра равно 2:5.',\n  'Оклейка стен комнаты обоями шириной 50\\xa0см стоит 260\\xa0рупий по цене 2\\xa0рупий за метр, при этом площадь дверей и окон составляет 15\\xa0кв.\\xa0м.']\nquestion = 'Высота комнаты равна:'\nchoices = {'A': '2,6м', 'B': '3,9м', 'C': '4м', 'D': '4,2м', 'E': '4,4м'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Соотношение высоты комнаты и ее полупериметра равно 2:5.']\nnew_fact = infer_new_fact(selected) # 'Пусть высота\\xa0=\\xa02x\\xa0метра, а (длина\\xa0+\\xa0ширинA)\\xa0=\\xa05x\\xa0метров.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оклейка стен комнаты обоями шириной 50\\xa0см стоит 260\\xa0рупий по цене 2\\xa0рупий за метр, при этом площадь дверей и окон составляет 15\\xa0кв.\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оклейка стен комнаты обоями шириной 50\\xa0см стоит 260\\xa0рупий по цене 2\\xa0рупий за метр, при этом площадь дверей и окон составляет 15\\xa0кв.\\xa0м.', 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, площадь обоев\\xa0=\\xa0(130*50/100)\\xa0=\\xa065\\xa0м2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Оклейка стен комнаты обоями шириной 50\\xa0см стоит 260\\xa0рупий по цене 2\\xa0рупий за метр, при этом площадь дверей и окон составляет 15\\xa0кв.\\xa0м.', 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.', 'Следовательно, площадь обоев\\xa0=\\xa0(130*50/100)\\xa0=\\xa065\\xa0м2']\nnew_fact = infer_new_fact(selected) # 'Площадь 4\\xa0стен\\xa0=\\xa0(65\\xa0+\\xa015)\\xa0=\\xa080\\xa0м2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Площадь 4\\xa0стен\\xa0=\\xa0(65\\xa0+\\xa015)\\xa0=\\xa080\\xa0м2']\nnew_fact = infer_new_fact(selected) # '2(длина\\xa0+\\xa0ширинA)*высота\\xa0=\\xa080.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть высота\\xa0=\\xa02x\\xa0метра, а (длина\\xa0+\\xa0ширинA)\\xa0=\\xa05x\\xa0метров.', 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.', 'Следовательно, площадь обоев\\xa0=\\xa0(130*50/100)\\xa0=\\xa065\\xa0м2', 'Площадь 4\\xa0стен\\xa0=\\xa0(65\\xa0+\\xa015)\\xa0=\\xa080\\xa0м2', '2(длина\\xa0+\\xa0ширинA)*высота\\xa0=\\xa080.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 2*5x*2x\\xa0=\\xa080 или x2\\xa0=\\xa04 или x\\xa0=\\xa02'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть высота\\xa0=\\xa02x\\xa0метра, а (длина\\xa0+\\xa0ширинA)\\xa0=\\xa05x\\xa0метров.', 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.', 'Следовательно, площадь обоев\\xa0=\\xa0(130*50/100)\\xa0=\\xa065\\xa0м2', 'Площадь 4\\xa0стен\\xa0=\\xa0(65\\xa0+\\xa015)\\xa0=\\xa080\\xa0м2', 'Следовательно, 2*5x*2x\\xa0=\\xa080 или x2\\xa0=\\xa04 или x\\xa0=\\xa02']\nnew_fact = infer_new_fact(selected) # 'Следовательно, высота комнаты\\xa0=\\xa04\\xa0м'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Высота комнаты равна:', 'C) 4м', 'Пусть высота\\xa0=\\xa02x\\xa0метра, а (длина\\xa0+\\xa0ширинA)\\xa0=\\xa05x\\xa0метров.', 'Длина обоев\\xa0=\\xa0(260/2)\\xa0м\\xa0=\\xa0130\\xa0м.', 'Следовательно, площадь обоев\\xa0=\\xa0(130*50/100)\\xa0=\\xa065\\xa0м2', 'Площадь 4\\xa0стен\\xa0=\\xa0(65\\xa0+\\xa015)\\xa0=\\xa080\\xa0м2', 'Следовательно, 2*5x*2x\\xa0=\\xa080 или x2\\xa0=\\xa04 или x\\xa0=\\xa02', 'Следовательно, высота комнаты\\xa0=\\xa04\\xa0м']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_155_3e236e5884", "context": "", "options": ["A)40", "B)62", "C)82", "D)92", "E)102"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [1, 2, 7, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent0 -> int1: The difference is consistent with each integers , therefore the series can be A.P.; sent0 -> int2: Sum of A.P. = A + (N-1) D; sent0 -> int3: A=First term; sent0 -> int4: D=Difference between each integer; sent0 -> int5: N=number of terms; int3 & int4 & int5 -> int6: Sum = A + (N - 1 ) D; sent1 & sent2 -> int7: 51= -50 + N - 1; int7 -> int8: N = 102; int7 & int8 & sent1 & sent2 & sent7 -> int9: Answer = E; int9 -> int10: The answer is E);", "textual_logical_units": {"1": "Сумма k последовательных целых чисел равна 51.", "2": "Если наименьшее целое число равно -50, то k =", "3": "A) 40", "4": "B) 62", "5": "C) 82", "6": "D) 92", "7": "E) 102", "8": "Разница между всеми соседними целыми числами одинакова, поэтому последовательность может иметь вид арифметической прогрессии.", "9": "Сумма арифметической прогрессии = A + (N - 1)D", "10": "A = первое слагаемое", "11": "D = разница между соседними целыми числами", "12": "N = количество слагаемых", "13": "Сумма = A + (N - 1)D", "14": "51 = -50 + N - 1", "15": "N = 102", "16": "Ответ = Д", "17": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Сумма k\\xa0последовательных целых чисел равна 51.']\nquestion = 'Если наименьшее целое число равно -50, то k\\xa0='\nchoices = {'A': '40', 'B': '62', 'C': '82', 'D': '92', 'E': '102'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Разница между всеми соседними целыми числами одинакова, поэтому последовательность может иметь вид арифметической прогрессии.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Сумма арифметической прогрессии\\xa0=\\xa0A\\xa0+\\xa0(N\\xa0-\\xa01)D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'A\\xa0=\\xa0первое слагаемое'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'D\\xa0=\\xa0разница между соседними целыми числами'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'N\\xa0=\\xa0количество слагаемых'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A\\xa0=\\xa0первое слагаемое', 'D\\xa0=\\xa0разница между соседними целыми числами', 'N\\xa0=\\xa0количество слагаемых']\nnew_fact = infer_new_fact(selected) # 'Сумма\\xa0=\\xa0A\\xa0+\\xa0(N\\xa0-\\xa01)D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сумма k\\xa0последовательных целых чисел равна 51.', 'Если наименьшее целое число равно -50, то k\\xa0=']\nnew_fact = infer_new_fact(selected) # '51\\xa0=\\xa0-50\\xa0+\\xa0N\\xa0-\\xa01'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['51\\xa0=\\xa0-50\\xa0+\\xa0N\\xa0-\\xa01']\nnew_fact = infer_new_fact(selected) # 'N\\xa0=\\xa0102'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сумма k\\xa0последовательных целых чисел равна 51.', 'Если наименьшее целое число равно -50, то k\\xa0=', 'E) 102', '51\\xa0=\\xa0-50\\xa0+\\xa0N\\xa0-\\xa01', 'N\\xa0=\\xa0102']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0=\\xa0Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0=\\xa0Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_156_cc132203b2", "context": "", "options": ["A)96", "B)48", "C)32", "D)25", "E)18"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [4, 8, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Each out of 10 songs was selected 5 times  =>  the total number of selections = 10*5 = 50.; int1 & sent2 -> int2: Each student selected 2 songs  =>  the total number of students = 50/2 = 25.; int1 & int2 & sent4 & sent8 -> int3: Answer: D.; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "В ходе опроса учеников", "2": "каждый выбрал в списке из 10 песен 2 песни, которые ему больше всего понравились.", "3": "Если каждая песня была выбрана 5 раз,", "4": "сколько учеников было опрошено?", "5": "A) 96", "6": "B) 48", "7": "C) 32", "8": "D) 25", "9": "E) 18", "10": "Каждая из 10 песен была выбрана 5 раз --> общее количество выборов = 10*5 = 50.", "11": "Каждый ученик выбрал 2 песни --> общее количество студентов = 50/2 = 25.", "12": "Ответ: Г.", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В ходе опроса учеников',\n  'каждый выбрал в списке из 10\\xa0песен 2\\xa0песни, которые ему больше всего понравились.',\n  'Если каждая песня была выбрана 5\\xa0раз,']\nquestion = 'сколько учеников было опрошено?'\nchoices = {'A': '96', 'B': '48', 'C': '32', 'D': '25', 'E': '18'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['каждый выбрал в списке из 10\\xa0песен 2\\xa0песни, которые ему больше всего понравились.', 'Если каждая песня была выбрана 5\\xa0раз,']\nnew_fact = infer_new_fact(selected) # 'Каждая из 10\\xa0песен была выбрана 5\\xa0раз\\xa0-->\\xa0общее количество выборов\\xa0=\\xa010*5\\xa0=\\xa050.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каждый выбрал в списке из 10\\xa0песен 2\\xa0песни, которые ему больше всего понравились.', 'Каждая из 10\\xa0песен была выбрана 5\\xa0раз\\xa0-->\\xa0общее количество выборов\\xa0=\\xa010*5\\xa0=\\xa050.']\nnew_fact = infer_new_fact(selected) # 'Каждый ученик выбрал 2\\xa0песни\\xa0-->\\xa0общее количество студентов\\xa0=\\xa050/2\\xa0=\\xa025.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько учеников было опрошено?', 'D) 25', 'Каждая из 10\\xa0песен была выбрана 5\\xa0раз\\xa0-->\\xa0общее количество выборов\\xa0=\\xa010*5\\xa0=\\xa050.', 'Каждый ученик выбрал 2\\xa0песни\\xa0-->\\xa0общее количество студентов\\xa0=\\xa050/2\\xa0=\\xa025.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_157_f68ab2a12c", "context": "", "options": ["A)-23.5", "B)-17.5", "C)-10.5", "D)-16.2", "E)Cannot be determined"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 2, 6, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: Here x=1.5 must satisfy the equation; sent1 -> int2: => 1.5^2 + 1.5m + 22 = 0; int2 & sent1 -> int3: => m=-16.2; int2 & int3 & sent1 & sent2 & sent6 -> int4: ANSWER:D; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Если один из корней квадратного уравнения x^2 + mx + 22 = 0 равен 1,5,", "2": "каково значение m?", "3": "A) -23,5", "4": "B) -17,5", "5": "C) -10,5", "6": "D) -16,2", "7": "E) Невозможно определить", "8": "Здесь x = 1,5 должно удовлетворять уравнению", "9": "=> 1,5^2 + 1,5m + 22 = 0", "10": "=> m = -16,2", "11": "ОТВЕТ: Г", "12": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Если один из корней квадратного уравнения x^2\\xa0+\\xa0mx\\xa0+\\xa022\\xa0=\\xa00 равен 1,5,']\nquestion = 'каково значение m?'\nchoices = {'A': '-23,5', 'B': '-17,5', 'C': '-10,5', 'D': '-16,2', 'E': 'Невозможно определить'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если один из корней квадратного уравнения x^2\\xa0+\\xa0mx\\xa0+\\xa022\\xa0=\\xa00 равен 1,5,']\nnew_fact = infer_new_fact(selected) # 'Здесь x\\xa0=\\xa01,5 должно удовлетворять уравнению'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если один из корней квадратного уравнения x^2\\xa0+\\xa0mx\\xa0+\\xa022\\xa0=\\xa00 равен 1,5,']\nnew_fact = infer_new_fact(selected) # '=>\\xa01,5^2\\xa0+\\xa01,5m\\xa0+\\xa022\\xa0=\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если один из корней квадратного уравнения x^2\\xa0+\\xa0mx\\xa0+\\xa022\\xa0=\\xa00 равен 1,5,', '=>\\xa01,5^2\\xa0+\\xa01,5m\\xa0+\\xa022\\xa0=\\xa00']\nnew_fact = infer_new_fact(selected) # '=>\\xa0m\\xa0=\\xa0-16,2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если один из корней квадратного уравнения x^2\\xa0+\\xa0mx\\xa0+\\xa022\\xa0=\\xa00 равен 1,5,', 'каково значение m?', 'D) -16,2', '=>\\xa01,5^2\\xa0+\\xa01,5m\\xa0+\\xa022\\xa0=\\xa00', '=>\\xa0m\\xa0=\\xa0-16,2']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_158_c100238934", "context": "", "options": ["A)10!/3", "B)10!/6", "C)10!/2", "D)10!/4", "E)10!/5"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [4, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: 10 speakers can be arranged in 10! ways. Protocol to be observed only one possibility from 3! is appropriate. So, total number of ways=10!/3!=10!/6; int1 & sent4 & sent6 -> int2: ANS:B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "На предвыборном собрании выступят 10 ораторов.", "2": "Единственный протокол, который необходимо соблюдать при каждом выступлении: премьер-министр должен выступать перед депутатом, а", "3": "депутат должен выступить перед депутатом законодательного собрания.", "4": "Сколькими способами можно провести собрание?", "5": "A) 10!/3", "6": "B) 10!/6", "7": "C) 10!/2", "8": "D) 10!/4", "9": "E) 10!/5", "10": "10 ораторов можно расположить 10! способами. Для соблюдения протокола подходит только один вариант из 3!. Следовательно, общее количество способов = 10!/3! = 10!/6", "11": "ОТВЕТ: Б", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'На предвыборном собрании выступят 10\\xa0ораторов.',\n  'Единственный протокол, который необходимо соблюдать при каждом выступлении: премьер-министр должен выступать перед депутатом, а',\n  'депутат должен выступить перед депутатом законодательного собрания.']\nquestion = 'Сколькими способами можно провести собрание?'\nchoices = {'A': '10!/3', 'B': '10!/6', 'C': '10!/2', 'D': '10!/4', 'E': '10!/5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На предвыборном собрании выступят 10\\xa0ораторов.', 'Единственный протокол, который необходимо соблюдать при каждом выступлении: премьер-министр должен выступать перед депутатом, а', 'депутат должен выступить перед депутатом законодательного собрания.']\nnew_fact = infer_new_fact(selected) # '10\\xa0ораторов можно расположить 10!\\xa0способами. Для соблюдения протокола подходит только один вариант из 3!. Следовательно, общее количество способов\\xa0=\\xa010!/3!\\xa0=\\xa010!/6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно провести собрание?', 'B) 10!/6', '10\\xa0ораторов можно расположить 10!\\xa0способами. Для соблюдения протокола подходит только один вариант из 3!. Следовательно, общее количество способов\\xa0=\\xa010!/3!\\xa0=\\xa010!/6']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_159_6286059c70", "context": "", "options": ["A)$8", "B)$10", "C)$13.6", "D)$22.9", "E)$40"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [2, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: p = old price.; int1 & sent1 -> int2: n = the number of items for $300 for p.; int1 & int2 & sent1 -> int3: pn = (0.85p)(n + 5)  =>  n = 0.85(n + 5)  =>  n = 17.; int3 & sent1 -> int4: New price = 300/(n + 5) = 13.6.; int4 & sent2 & sent5 -> int5: Answer: C.; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "После снижения цены каждого товара на 15% Анна сможет купить еще 5 товаров на 300 долл. США.", "2": "Какова новая прейскурантная цена каждого товара?", "3": "A) 8 долл. США", "4": "B) 10 долл. США", "5": "C) 13,6 долл. США", "6": "D) 22,9 долл. США", "7": "E) 40 долл. США", "8": "p = старая цена.", "9": "n = количество товаров за 300 долларов по цене p.", "10": "pn = (0,85p)(n + 5) --> n = 0,85(n + 5) --> n = 17.", "11": "Новая цена = 300/(n + 5) = 13,6.", "12": "Ответ: В.", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['После снижения цены каждого товара на 15% Анна сможет купить еще 5\\xa0товаров на 300\\xa0долл. США.']\nquestion = 'Какова новая прейскурантная цена каждого товара?'\nchoices = {'A': '8\\xa0долл. США', 'B': '10\\xa0долл. США', 'C': '13,6\\xa0долл. США', 'D': '22,9\\xa0долл. США', 'E': '40\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'p\\xa0=\\xa0старая цена.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После снижения цены каждого товара на 15% Анна сможет купить еще 5\\xa0товаров на 300\\xa0долл. США.', 'p\\xa0=\\xa0старая цена.']\nnew_fact = infer_new_fact(selected) # 'n\\xa0=\\xa0количество товаров за 300\\xa0долларов по цене p.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После снижения цены каждого товара на 15% Анна сможет купить еще 5\\xa0товаров на 300\\xa0долл. США.', 'p\\xa0=\\xa0старая цена.', 'n\\xa0=\\xa0количество товаров за 300\\xa0долларов по цене p.']\nnew_fact = infer_new_fact(selected) # 'pn\\xa0=\\xa0(0,85p)(n\\xa0+\\xa05)\\xa0-->\\xa0n\\xa0=\\xa00,85(n\\xa0+\\xa05)\\xa0-->\\xa0n\\xa0=\\xa017.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После снижения цены каждого товара на 15% Анна сможет купить еще 5\\xa0товаров на 300\\xa0долл. США.', 'pn\\xa0=\\xa0(0,85p)(n\\xa0+\\xa05)\\xa0-->\\xa0n\\xa0=\\xa00,85(n\\xa0+\\xa05)\\xa0-->\\xa0n\\xa0=\\xa017.']\nnew_fact = infer_new_fact(selected) # 'Новая цена\\xa0=\\xa0300/(n\\xa0+\\xa05)\\xa0=\\xa013,6.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова новая прейскурантная цена каждого товара?', 'C) 13,6\\xa0долл. США', 'Новая цена\\xa0=\\xa0300/(n\\xa0+\\xa05)\\xa0=\\xa013,6.']\nnew_fact = infer_new_fact(selected) # 'Ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_160_e80bfc801a", "context": "", "options": ["A)23", "B)27", "C)26", "D)28", "E)29"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 11}, {"antecedents": [5, 9, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: After moving 2 positions to the right Neha is 14 positions from the left, and after moving 2 positions to the left, Radha is on the 8th position from the right. If there are 6 children between them, the total number of children is  14+6+8 = 28; int1 & sent5 & sent9 -> int2: ANSWER:D; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "В ряду детей Нина занимает 12-е место слева, а", "2": "Рада — шестое место справа.", "3": "Когда Рада перемещается на 2 места влево, а", "4": "Нина — на 2 места вправо, между Радой и Ниной оказываются 6 детей.", "5": "Сколько детей в ряду?", "6": "A) 23", "7": "B) 27", "8": "C) 26", "9": "D) 28", "10": "E) 29", "11": "После перемещения на 2 места вправо Нина находится на 14 месте слева, а Рада после перемещения на 2 места влево находится на 8 месте справа. Если между ними 6 детей, общее количество детей равно 14 + 6 + 8 = 28", "12": "ОТВЕТ: Г", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В ряду детей Нина занимает 12-е место слева, а',\n  'Рада\\xa0— шестое место справа.',\n  'Когда Рада перемещается на 2\\xa0места влево, а',\n  'Нина\\xa0— на 2 места вправо, между Радой и Ниной оказываются 6\\xa0детей.']\nquestion = 'Сколько детей в ряду?'\nchoices = {'A': '23', 'B': '27', 'C': '26', 'D': '28', 'E': '29'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В ряду детей Нина занимает 12-е место слева, а', 'Рада\\xa0— шестое место справа.', 'Когда Рада перемещается на 2\\xa0места влево, а', 'Нина\\xa0— на 2 места вправо, между Радой и Ниной оказываются 6\\xa0детей.']\nnew_fact = infer_new_fact(selected) # 'После перемещения на 2\\xa0места вправо Нина находится на 14\\xa0месте слева, а Рада после перемещения на 2\\xa0места влево находится на 8\\xa0месте справа. Если между ними 6\\xa0детей, общее количество детей равно 14\\xa0+\\xa06\\xa0+\\xa08\\xa0=\\xa028'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько детей в ряду?', 'D) 28', 'После перемещения на 2\\xa0места вправо Нина находится на 14\\xa0месте слева, а Рада после перемещения на 2\\xa0места влево находится на 8\\xa0месте справа. Если между ними 6\\xa0детей, общее количество детей равно 14\\xa0+\\xa06\\xa0+\\xa08\\xa0=\\xa028']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_161_15f6245b88", "context": "", "options": ["A)10/7", "B)20/7", "C)30/7", "D)40/7", "E)50/7"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [9], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [3, 5, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 -> int1: The mixture contains 3kg sand and 7 kg clay.; int1 & sent2 & sent3 -> int2: For the mixture to be in equal quantities, there should be 2 kg of clay removed.; int1 -> int3: Clay and sand are in the ratio 7:3; int2 & int3 -> int4: So part of sand to be removed = 2*3/7 = 6/7; int2 & int4 -> int5: So total mixture to be removed = 2 + 6/7 = 20/7; int4 & int5 & sent3 & sent5 -> int6: ANSWER:B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "10 кг смеси содержат 30% песка и 70% глины.", "2": "Какую часть смеси нужно удалить и заменить чистым песком,", "3": "чтобы приготовить смесь, где содержится равное количество глины и песка?", "4": "A) 10/7", "5": "B) 20/7", "6": "C) 30/7", "7": "D) 40/7", "8": "E) 50/7", "9": "Смесь содержит 3 кг песка и 7 кг глины.", "10": "Чтобы количество ингредиентов смеси было равным, следует удалить 2 кг глины.", "11": "Глина и песок находятся в соотношении 7:3", "12": "Следовательно, часть песка, которую нужно удалить = 2*3/7 = 6/7", "13": "Следовательно, часть всей смеси, которую нужно удалить = 2 + 6/7 = 20/7", "14": "ОТВЕТ: Б", "15": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['10\\xa0кг смеси содержат 30%\\xa0песка и 70%\\xa0глины.', 'Какую часть смеси нужно удалить и заменить чистым песком,']\nquestion = 'чтобы приготовить смесь, где содержится равное количество глины и песка?'\nchoices = {'A': '10/7', 'B': '20/7', 'C': '30/7', 'D': '40/7', 'E': '50/7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['10\\xa0кг смеси содержат 30%\\xa0песка и 70%\\xa0глины.']\nnew_fact = infer_new_fact(selected) # 'Смесь содержит 3\\xa0кг песка и 7\\xa0кг глины.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какую часть смеси нужно удалить и заменить чистым песком,', 'чтобы приготовить смесь, где содержится равное количество глины и песка?', 'Смесь содержит 3\\xa0кг песка и 7\\xa0кг глины.']\nnew_fact = infer_new_fact(selected) # 'Чтобы количество ингредиентов смеси было равным, следует удалить 2\\xa0кг глины.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Смесь содержит 3\\xa0кг песка и 7\\xa0кг глины.']\nnew_fact = infer_new_fact(selected) # 'Глина и песок находятся в соотношении 7:3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы количество ингредиентов смеси было равным, следует удалить 2\\xa0кг глины.', 'Глина и песок находятся в соотношении 7:3']\nnew_fact = infer_new_fact(selected) # 'Следовательно, часть песка, которую нужно удалить\\xa0=\\xa02*3/7\\xa0=\\xa06/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чтобы количество ингредиентов смеси было равным, следует удалить 2\\xa0кг глины.', 'Следовательно, часть песка, которую нужно удалить\\xa0=\\xa02*3/7\\xa0=\\xa06/7']\nnew_fact = infer_new_fact(selected) # 'Следовательно, часть всей смеси, которую нужно удалить\\xa0=\\xa02\\xa0+\\xa06/7\\xa0=\\xa020/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['чтобы приготовить смесь, где содержится равное количество глины и песка?', 'B) 20/7', 'Следовательно, часть песка, которую нужно удалить\\xa0=\\xa02*3/7\\xa0=\\xa06/7', 'Следовательно, часть всей смеси, которую нужно удалить\\xa0=\\xa02\\xa0+\\xa06/7\\xa0=\\xa020/7']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_162_e29e6dfbd6", "context": "", "options": ["A)58.3%", "B)62.5%", "C)63.5%", "D)64.5%", "E)65.5%"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [2, 9], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [9, 10, 11], "consequent": 13}, {"antecedents": [3, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let Rs 100 be the income; sent1 -> int2: Expenditure=Rs70; int1 & sent2 -> int3: Increased income=Rs120; sent1 -> int4: Expenditure in amount is same.; int1 & int2 & int3 -> int5: So, expenditure % =70/120 *100=58.3%; int5 & sent3 & sent4 -> int6: ANSWER:A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Человек тратит 70% своего дохода.", "2": "Если его доход увеличится на 20%,", "3": "какими будут его новые расходы?", "4": "A) 58,3%", "5": "B) 62,5%", "6": "C) 63,5%", "7": "D) 64,5%", "8": "E) 65,5%", "9": "Пусть доход будет равен 100 рупий", "10": "Расходы = 70 рупий", "11": "Повышенный доход = 120 рупий", "12": "Сумма расходов осталась прежней.", "13": "Следовательно, % расходов = 70/120*100 = 58,3%", "14": "ОТВЕТ: А", "15": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Человек тратит 70%\\xa0своего дохода.', 'Если его доход увеличится на 20%,']\nquestion = 'какими будут его новые расходы?'\nchoices = {'A': '58,3%', 'B': '62,5%', 'C': '63,5%', 'D': '64,5%', 'E': '65,5%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть доход будет равен 100\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Человек тратит 70%\\xa0своего дохода.']\nnew_fact = infer_new_fact(selected) # 'Расходы\\xa0=\\xa070\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если его доход увеличится на 20%,', 'Пусть доход будет равен 100\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Повышенный доход\\xa0=\\xa0120\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Человек тратит 70%\\xa0своего дохода.']\nnew_fact = infer_new_fact(selected) # 'Сумма расходов осталась прежней.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть доход будет равен 100\\xa0рупий', 'Расходы\\xa0=\\xa070\\xa0рупий', 'Повышенный доход\\xa0=\\xa0120\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Следовательно, %\\xa0расходов\\xa0=\\xa070/120*100\\xa0=\\xa058,3%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какими будут его новые расходы?', 'A) 58,3%', 'Следовательно, %\\xa0расходов\\xa0=\\xa070/120*100\\xa0=\\xa058,3%']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_163_d35748a0ee", "context": "", "options": ["A)4", "B)7", "C)10", "D)14", "E)21"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The greatest common divisor of 28 and 98 is 14.; int1 & sent3 & sent4 -> int2: We can make 14 identical bouquets with 2 white tulips and 7 red tulips in each bouquet.; int2 & sent1 & sent2 & sent3 & sent4 & sent8 -> int3: The answer is D.; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Какое наибольшее количество одинаковых букетов можно составить из 28 белых и", "2": "98 красных тюльпанов, если использовать все цветы?", "3": "(Два букета считаются одинаковыми, если количество красных и", "4": "количество белых тюльпанов в этих двух букетах равны).", "5": "A) 4", "6": "B) 7", "7": "C) 10", "8": "D) 14", "9": "E) 21", "10": "Наибольший общий делитель чисел 28 и 98 равен 14.", "11": "Можно составить 14 одинаковых букетов с 2 белыми и 7 красными тюльпанами в каждом букете.", "12": "Ответ — Г.", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Какое наибольшее количество одинаковых букетов можно составить из 28\\xa0белых и',\n  '98\\xa0красных тюльпанов, если использовать все цветы?',\n  '(Два букета считаются одинаковыми, если количество красных и']\nquestion = 'количество белых тюльпанов в этих двух букетах равны).'\nchoices = {'A': '4', 'B': '7', 'C': '10', 'D': '14', 'E': '21'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Какое наибольшее количество одинаковых букетов можно составить из 28\\xa0белых и', '98\\xa0красных тюльпанов, если использовать все цветы?']\nnew_fact = infer_new_fact(selected) # 'Наибольший общий делитель чисел 28 и 98 равен 14.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(Два букета считаются одинаковыми, если количество красных и', 'количество белых тюльпанов в этих двух букетах равны).', 'Наибольший общий делитель чисел 28 и 98 равен 14.']\nnew_fact = infer_new_fact(selected) # 'Можно составить 14\\xa0одинаковых букетов с 2\\xa0белыми и 7\\xa0красными тюльпанами в каждом букете.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое наибольшее количество одинаковых букетов можно составить из 28\\xa0белых и', '98\\xa0красных тюльпанов, если использовать все цветы?', '(Два букета считаются одинаковыми, если количество красных и', 'количество белых тюльпанов в этих двух букетах равны).', 'D) 14', 'Можно составить 14\\xa0одинаковых букетов с 2\\xa0белыми и 7\\xa0красными тюльпанами в каждом букете.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_164_0b8d579706", "context": "", "options": ["A)1 hour", "B)2 hours", "C)3 hours", "D)4 hours", "E)5 hours"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: Sharon's earnings = 1/5 cake per hour; sent2 -> int2: Karen's earnings = 1/4 cake per hour; int1 & int2 -> int3: Sharon + Karen's earnings= 9/20; int3 & sent3 -> int4: They will be able to buy the cake in just over 2 hours; int3 & int4 & sent3 & sent6 -> int5: correct option is C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Арина работает в течение 5 часов, чтобы заработать достаточно чаевых на покупку торта-мороженого,", "2": "а Карина работает в течение 4 часов.", "3": "Через сколько часов они вместе смогут купить торт?", "4": "A) 1 час", "5": "B) 2 часа", "6": "C) 3 часа", "7": "D) 4 часа", "8": "E) 5 часов", "9": "Заработок Арины = 1/5 торта в час", "10": "Заработок Карины = 1/4 торта в час", "11": "Заработок Арины + Карины = 9/20", "12": "Они смогут купить торт чуть более чем через 2 часа", "13": "Правильный вариант — В", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Арина работает в течение 5\\xa0часов, чтобы заработать достаточно чаевых на покупку торта-мороженого,', 'а Карина работает в течение 4\\xa0часов.']\nquestion = 'Через сколько часов они вместе смогут купить торт?'\nchoices = {'A': '1\\xa0час', 'B': '2\\xa0часа', 'C': '3\\xa0часа', 'D': '4\\xa0часа', 'E': '5\\xa0часов'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Арина работает в течение 5\\xa0часов, чтобы заработать достаточно чаевых на покупку торта-мороженого,']\nnew_fact = infer_new_fact(selected) # 'Заработок Арины\\xa0=\\xa01/5\\xa0торта в час'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['а Карина работает в течение 4\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'Заработок Карины\\xa0=\\xa01/4\\xa0торта в час'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Заработок Арины\\xa0=\\xa01/5\\xa0торта в час', 'Заработок Карины\\xa0=\\xa01/4\\xa0торта в час']\nnew_fact = infer_new_fact(selected) # 'Заработок Арины\\xa0+\\xa0Карины\\xa0=\\xa09/20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько часов они вместе смогут купить торт?', 'Заработок Арины\\xa0+\\xa0Карины\\xa0=\\xa09/20']\nnew_fact = infer_new_fact(selected) # 'Они смогут купить торт чуть более чем через 2\\xa0часа'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько часов они вместе смогут купить торт?', 'C) 3\\xa0часа', 'Заработок Арины\\xa0+\\xa0Карины\\xa0=\\xa09/20', 'Они смогут купить торт чуть более чем через 2\\xa0часа']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_165_8b70dcb2e6", "context": "", "options": ["A)x > y", "B)y^2 > x^2", "C)-x^3 < y^2", "D)–x < y", "E)x < –y"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent4 -> int1: Let’s go through each answer choice: (A) can never be true, since no negative is greater than a positive. (B) doesn’t have to be true – consider what would happen if x = -2 and y = 1. (C) can never be true, as x^3 must be negative, and y^2 must be positive. (D) can never be true, since if x < 0, -x is the same thing as |x|, and |x| > y. (E) can be manipulated by multiplying both sides by -1, which gives us –x > y. Remember that x < 0, so –x = |x|, and y is positive, so |y| = y. Thus –x^3 > y^2 is the same statement as |x^3| > |y^2|, and (B) must be true.; int1 -> int2: The answer is B);", "textual_logical_units": {"1": "Если x < 0, y > 0 и |x^3| > |y^2|,", "2": "какое из перечисленных ниже утверждений верно?", "3": "A) x > y", "4": "B) y^2 > x^2", "5": "C) -x^3 < y^2", "6": "D) -x < y", "7": "E) x < -y", "8": "Рассмотрим каждый из вариантов ответов: (A) не может быть верно, поскольку отрицательное значение не может быть больше положительного. (B) не обязательно должно быть верно — представьте, что будет, если x = -2, а y = 1. (C) не может быть верно, поскольку значение x^3 должно быть отрицательным, а y^2 — положительным. (D) не может быть верно, поскольку если x < 0, -x аналогично |x|, а |x| > y. (E) можно манипулировать, умножив обе части на -1, что даст -x > y. Помните, что x < 0, поэтому -x = |x|, а значение y положительное, поэтому |y| = y. Следовательно, -x^3 > y^2 — это утверждение аналогично |x^3| > |y^2|, и вариант (B) должен быть верным.", "9": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Если x\\xa0<\\xa00, y\\xa0>\\xa00 и |x^3|\\xa0>\\xa0|y^2|,']\nquestion = 'какое из перечисленных ниже утверждений верно?'\nchoices = {'A': 'x\\xa0>\\xa0y', 'B': 'y^2\\xa0>\\xa0x^2', 'C': '-x^3\\xa0<\\xa0y^2', 'D': '-x\\xa0<\\xa0y', 'E': 'x\\xa0<\\xa0-y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если x\\xa0<\\xa00, y\\xa0>\\xa00 и |x^3|\\xa0>\\xa0|y^2|,', 'какое из перечисленных ниже утверждений верно?', 'B) y^2\\xa0>\\xa0x^2']\nnew_fact = infer_new_fact(selected) # 'Рассмотрим каждый из вариантов ответов: (A) не может быть верно, поскольку отрицательное значение не может быть больше положительного. (B) не обязательно должно быть верно\\xa0— представьте, что будет, если x\\xa0=\\xa0-2, а y\\xa0=\\xa01. (C) не может быть верно, поскольку значение x^3 должно быть отрицательным, а y^2\\xa0— положительным. (D) не может быть верно, поскольку если x\\xa0<\\xa00, -x аналогично |x|, а |x|\\xa0>\\xa0y. (E) можно манипулировать, умножив обе части на -1, что даст -x\\xa0>\\xa0y. Помните, что x\\xa0<\\xa00, поэтому -x\\xa0=\\xa0|x|, а значение y положительное, поэтому |y|\\xa0=\\xa0y. Следовательно, -x^3\\xa0>\\xa0y^2 — это утверждение аналогично |x^3|\\xa0>\\xa0|y^2|, и вариант (B) должен быть верным.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассмотрим каждый из вариантов ответов: (A) не может быть верно, поскольку отрицательное значение не может быть больше положительного. (B) не обязательно должно быть верно\\xa0— представьте, что будет, если x\\xa0=\\xa0-2, а y\\xa0=\\xa01. (C) не может быть верно, поскольку значение x^3 должно быть отрицательным, а y^2\\xa0— положительным. (D) не может быть верно, поскольку если x\\xa0<\\xa00, -x аналогично |x|, а |x|\\xa0>\\xa0y. (E) можно манипулировать, умножив обе части на -1, что даст -x\\xa0>\\xa0y. Помните, что x\\xa0<\\xa00, поэтому -x\\xa0=\\xa0|x|, а значение y положительное, поэтому |y|\\xa0=\\xa0y. Следовательно, -x^3\\xa0>\\xa0y^2 — это утверждение аналогично |x^3|\\xa0>\\xa0|y^2|, и вариант (B) должен быть верным.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_166_2e2aed2da2", "context": "", "options": ["A)25 seconds", "B)50 seconds", "C)100 seconds", "D)200 seconds", "E)400 seconds"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: Total work = Printer A + Printer B = 2 Printer A; int1 & sent1 & sent2 -> int2: 100= 2 * 1/2 * T => T=100 seconds; int2 & sent2 & sent5 -> int3: Answer: C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Каждый из принтеров A и B может печатать по 1⁄2 страницы в секунду.", "2": "Сколько времени потребуется обоим принтерам, работающим вместе, чтобы распечатать 100 страниц?", "3": "A) 25 секунд", "4": "B) 50 секунд", "5": "C) 100 секунд", "6": "D) 200 секунд", "7": "E) 400 секунд", "8": "Время общей работы = принтер A + принтер B = 2 принтера A", "9": "100 = 2*1/2*T => T = 100 секунд", "10": "Ответ: В", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Каждый из принтеров A и B может печатать по 1⁄2\\xa0страницы в секунду.']\nquestion = 'Сколько времени потребуется обоим принтерам, работающим вместе, чтобы распечатать 100\\xa0страниц?'\nchoices = {'A': '25\\xa0секунд', 'B': '50\\xa0секунд', 'C': '100\\xa0секунд', 'D': '200\\xa0секунд', 'E': '400\\xa0секунд'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каждый из принтеров A и B может печатать по 1⁄2\\xa0страницы в секунду.']\nnew_fact = infer_new_fact(selected) # 'Время общей работы\\xa0=\\xa0принтер A\\xa0+\\xa0принтер B\\xa0=\\xa02\\xa0принтера A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каждый из принтеров A и B может печатать по 1⁄2\\xa0страницы в секунду.', 'Сколько времени потребуется обоим принтерам, работающим вместе, чтобы распечатать 100\\xa0страниц?', 'Время общей работы\\xa0=\\xa0принтер A\\xa0+\\xa0принтер B\\xa0=\\xa02\\xa0принтера A']\nnew_fact = infer_new_fact(selected) # '100\\xa0=\\xa02*1/2*T\\xa0=>\\xa0T\\xa0=\\xa0100\\xa0секунд'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени потребуется обоим принтерам, работающим вместе, чтобы распечатать 100\\xa0страниц?', 'C) 100\\xa0секунд', '100\\xa0=\\xa02*1/2*T\\xa0=>\\xa0T\\xa0=\\xa0100\\xa0секунд']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_167_1e44acd399", "context": "", "options": ["A)45", "B)48", "C)51", "D)54", "E)57"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [5, 6, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The two ants move a total of 15 cm per hour.; int1 & sent4 -> int2: The time it takes until they meet is 75/15=5 hours.; int2 & sent2 -> int3: In that time, the distance that ant A travels is 5*9=45 cm.; int3 & sent5 & sent6 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Два муравья ползут со своих ферм навстречу друг другу.", "2": "Муравей А ползет со скоростью 9 см в час, а", "3": "муравей B — со скоростью 6 см в час.", "4": "Если фермы находятся на расстоянии 75 см друг от друга,", "5": "какое расстояние (в см) проползет муравей А до встречи с муравьем B?", "6": "A) 45", "7": "B) 48", "8": "C) 51", "9": "D) 54", "10": "E) 57", "11": "Два муравья движутся с общей скоростью 15 см в час.", "12": "Время, которое пройдет до их встречи, равно 75/15 = 5 часов.", "13": "За это время расстояние, которое преодолеет муравей А, составит 5*9 = 45 см.", "14": "Ответ — А.", "15": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два муравья ползут со своих ферм навстречу друг другу.',\n  'Муравей А ползет со скоростью 9\\xa0см в час, а',\n  'муравей B\\xa0— со скоростью 6\\xa0см в час.',\n  'Если фермы находятся на расстоянии 75\\xa0см друг от друга,']\nquestion = 'какое расстояние (в см) проползет муравей А до встречи с муравьем B?'\nchoices = {'A': '45', 'B': '48', 'C': '51', 'D': '54', 'E': '57'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Два муравья ползут со своих ферм навстречу друг другу.', 'Муравей А ползет со скоростью 9\\xa0см в час, а', 'муравей B\\xa0— со скоростью 6\\xa0см в час.']\nnew_fact = infer_new_fact(selected) # 'Два муравья движутся с общей скоростью 15\\xa0см в час.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если фермы находятся на расстоянии 75\\xa0см друг от друга,', 'Два муравья движутся с общей скоростью 15\\xa0см в час.']\nnew_fact = infer_new_fact(selected) # 'Время, которое пройдет до их встречи, равно 75/15\\xa0=\\xa05\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Муравей А ползет со скоростью 9\\xa0см в час, а', 'Время, которое пройдет до их встречи, равно 75/15\\xa0=\\xa05\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'За это время расстояние, которое преодолеет муравей А, составит 5*9\\xa0=\\xa045\\xa0см.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое расстояние (в см) проползет муравей А до встречи с муравьем B?', 'A) 45', 'За это время расстояние, которое преодолеет муравей А, составит 5*9\\xa0=\\xa045\\xa0см.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_168_25e755cb75", "context": "", "options": ["A)23.65", "B)1000", "C)35.62", "D)2.65", "E)1023.65"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [4, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Since Robert property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100 then it is =1000 (greatest positive even integer less than or equal to his property worth and it is divisible by 100 is 1000).; int1 & sent1 -> int2: Hence the difference = 1023.65 - 1000 = 23.65; int2 & sent4 & sent5 -> int3: Answer: A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "У Роберта есть недвижимость стоимостью 1023,65 долл. США.", "2": "Но в документах стоимость его имущества записана как наибольшее положительное четное целое число, которое меньше или равно стоимости имущества и", "3": "делится на 100.", "4": "Найдите разницу между фактической и зарегистрированной стоимостью имущества.", "5": "A) 23,65", "6": "B) 1000", "7": "C) 35,62", "8": "D) 2,65", "9": "E) 1023,65", "10": "Поскольку стоимость недвижимости Роберта записана как наибольшее положительное целое число, которое меньше или равно стоимости его имущества и делится на 100, то оно = 1000 (наибольшее положительное целое число, меньшее или равное стоимости его имущества и делящееся на 100, равно 1000).", "11": "Следовательно, разница = 1023,65 - 1000 = 23,65", "12": "Ответ: А.", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'У Роберта есть недвижимость стоимостью 1023,65\\xa0долл. США.',\n  'Но в документах стоимость его имущества записана как наибольшее положительное четное целое число, которое меньше или равно стоимости имущества и',\n  'делится на 100.']\nquestion = 'Найдите разницу между фактической и зарегистрированной стоимостью имущества.'\nchoices = {'A': '23,65', 'B': '1000', 'C': '35,62', 'D': '2,65', 'E': '1023,65'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Но в документах стоимость его имущества записана как наибольшее положительное четное целое число, которое меньше или равно стоимости имущества и', 'делится на 100.']\nnew_fact = infer_new_fact(selected) # 'Поскольку стоимость недвижимости Роберта записана как наибольшее положительное целое число, которое меньше или равно стоимости его имущества и делится на 100, то оно\\xa0=\\xa01000 (наибольшее положительное целое число, меньшее или равное стоимости его имущества и делящееся на 100, равно 1000).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['У Роберта есть недвижимость стоимостью 1023,65\\xa0долл. США.', 'Поскольку стоимость недвижимости Роберта записана как наибольшее положительное целое число, которое меньше или равно стоимости его имущества и делится на 100, то оно\\xa0=\\xa01000 (наибольшее положительное целое число, меньшее или равное стоимости его имущества и делящееся на 100, равно 1000).']\nnew_fact = infer_new_fact(selected) # 'Следовательно, разница\\xa0=\\xa01023,65\\xa0-\\xa01000\\xa0=\\xa023,65'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите разницу между фактической и зарегистрированной стоимостью имущества.', 'A) 23,65', 'Следовательно, разница\\xa0=\\xa01023,65\\xa0-\\xa01000\\xa0=\\xa023,65']\nnew_fact = infer_new_fact(selected) # 'Ответ: А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_169_644f3a1993", "context": "", "options": ["A)9 Trousers", "B)8 Trousers", "C)10 Trousers", "D)7 Trousers", "E)11 Trousers"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [2, 3, 4, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: Lets assume S as price of shirt and T as price of trousers, we have bellow equation:; int1 & sent1 -> int2: 70 T + 30 S = 810; int2 -> int3: Simplifying we get : 7T + 3S = 81; int3 -> int4: T = ( 81 - 3*S )/7; int4 -> int5: We need to find the least value of S which will make (81 - 3*S) divisible by 7; int5 -> int6: Simplifying by taking 3 as common factor 3*(27-S) / 7; int6 -> int7: Looking at the above equation its not difficult to find out least value of S is 6 so that 27- 3S becomes divisible by S; int7 -> int8: Hence, T = (81-3*S)/7 = (81-3*6)/7 = 63/7 = 9; int8 & sent2 & sent3 & sent4 -> int9: ANSWER:A; int9 -> int10: The answer is A);", "textual_logical_units": {"1": "Человек тратит 810 долл. США на покупку брюк по 70 рупий за штуку и рубашек по 30 рупий за штуку.", "2": "Каким будет соотношение брюк и", "3": "рубашек, когда будет куплено максимальное количество брюк?", "4": "A) 9 шт. брюк", "5": "B) 8 шт. брюк", "6": "C) 10 шт. брюк", "7": "D) 7 шт. брюк", "8": "E) 11 шт. брюк", "9": "Допустим, S — цена рубашки, а T — цена брюк, получаем следующее уравнение:", "10": "70Т + 30S = 810", "11": "Упрощая уравнение, получаем: 7T + 3S = 81", "12": "T = (81 - 3*С)/7", "13": "Требуется найти наименьшее значение S, при котором выражение (81 - 3*S) делится на 7", "14": "Упрощаем, используя 3 в качестве общего коэффициента 3*(27 - S)/7", "15": "Рассматривая приведенное выше уравнение, нетрудно определить, что наименьшее значение S, при котором 27 - 3S делится на S, равно 6", "16": "Следовательно, T = (81 - 3*S)/7 = (81 - 3*6)/7 = 63/7 = 9", "17": "ОТВЕТ: А", "18": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Человек тратит 810\\xa0долл. США на покупку брюк по 70\\xa0рупий за штуку и рубашек по 30\\xa0рупий за штуку.', 'Каким будет соотношение брюк и']\nquestion = 'рубашек, когда будет куплено максимальное количество брюк?'\nchoices = {'A': '9\\xa0шт. брюк', 'B': '8\\xa0шт. брюк', 'C': '10\\xa0шт. брюк', 'D': '7\\xa0шт. брюк', 'E': '11\\xa0шт. брюк'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Человек тратит 810\\xa0долл. США на покупку брюк по 70\\xa0рупий за штуку и рубашек по 30\\xa0рупий за штуку.']\nnew_fact = infer_new_fact(selected) # 'Допустим, S\\xa0— цена рубашки, а T\\xa0— цена брюк, получаем следующее уравнение:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Человек тратит 810\\xa0долл. США на покупку брюк по 70\\xa0рупий за штуку и рубашек по 30\\xa0рупий за штуку.', 'Допустим, S\\xa0— цена рубашки, а T\\xa0— цена брюк, получаем следующее уравнение:']\nnew_fact = infer_new_fact(selected) # '70Т\\xa0+\\xa030S\\xa0=\\xa0810'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['70Т\\xa0+\\xa030S\\xa0=\\xa0810']\nnew_fact = infer_new_fact(selected) # 'Упрощая уравнение, получаем: 7T\\xa0+\\xa03S\\xa0=\\xa081'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Упрощая уравнение, получаем: 7T\\xa0+\\xa03S\\xa0=\\xa081']\nnew_fact = infer_new_fact(selected) # 'T\\xa0=\\xa0(81\\xa0-\\xa03*С)/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T\\xa0=\\xa0(81\\xa0-\\xa03*С)/7']\nnew_fact = infer_new_fact(selected) # 'Требуется найти наименьшее значение S, при котором выражение (81\\xa0-\\xa03*S) делится на 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Требуется найти наименьшее значение S, при котором выражение (81\\xa0-\\xa03*S) делится на 7']\nnew_fact = infer_new_fact(selected) # 'Упрощаем, используя 3 в качестве общего коэффициента 3*(27\\xa0-\\xa0S)/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Упрощаем, используя 3 в качестве общего коэффициента 3*(27\\xa0-\\xa0S)/7']\nnew_fact = infer_new_fact(selected) # 'Рассматривая приведенное выше уравнение, нетрудно определить, что наименьшее значение S, при котором 27\\xa0-\\xa03S делится на S, равно 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Рассматривая приведенное выше уравнение, нетрудно определить, что наименьшее значение S, при котором 27\\xa0-\\xa03S делится на S, равно 6']\nnew_fact = infer_new_fact(selected) # 'Следовательно, T\\xa0=\\xa0(81\\xa0-\\xa03*S)/7\\xa0=\\xa0(81\\xa0-\\xa03*6)/7\\xa0=\\xa063/7\\xa0=\\xa09'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каким будет соотношение брюк и', 'рубашек, когда будет куплено максимальное количество брюк?', 'A) 9\\xa0шт. брюк', 'Следовательно, T\\xa0=\\xa0(81\\xa0-\\xa03*S)/7\\xa0=\\xa0(81\\xa0-\\xa03*6)/7\\xa0=\\xa063/7\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_170_7dd8087b3c", "context": "", "options": ["A)$7.73", "B)$6.73", "C)$5.73", "D)$4.73", "E)$3.73"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [2], "consequent": 13}, {"antecedents": [9, 12, 13], "consequent": 14}, {"antecedents": [11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [3, 8, 14, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent0 -> int1: Let subscription per magazine = x; int1 & sent1 -> int2: 15x = 42; int2 -> int3: => x= 2.8; sent0 -> int4: Let cover price per magazine = c; sent2 -> int5: Since there is a 25% saving on cover prices; int1 & int4 & int5 -> int6: 0.75c=x; int3 & int6 -> int7: => 0.75c = 2.8; int7 -> int8: =>c= 3.73; int6 & int8 & sent3 & sent8 -> int9: Answer E; int9 -> int10: The answer is E);", "textual_logical_units": {"1": "Если подписка на 15 выпусков журнала стоит 42 долл. США и", "2": "позволяет сэкономить 25 процентов от цены, указанной на обложке,", "3": "какова цена каждого выпуска, указанная на обложке?", "4": "A) 7,73 долл. США", "5": "B) 6,73 долл. США", "6": "C) 5,73 долл. США", "7": "D) 4,73 долл. США", "8": "E) 3,73 долл. США", "9": "Пусть x = подписка на журнал", "10": "15x = 42", "11": "=> x = 2,8", "12": "Пусть c = цена одного журнала, указанная на обложке", "13": "Поскольку подписка позволяет сэкономить 25 процентов от цены, указанной на обложке,", "14": "0,75c = x", "15": "=> 0.75c = 2,8", "16": "=> c = 3,73", "17": "Ответ — Д", "18": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Если подписка на 15\\xa0выпусков журнала стоит 42\\xa0долл. США и', 'позволяет сэкономить 25\\xa0процентов от цены, указанной на обложке,']\nquestion = 'какова цена каждого выпуска, указанная на обложке?'\nchoices = {'A': '7,73\\xa0долл. США', 'B': '6,73\\xa0долл. США', 'C': '5,73\\xa0долл. США', 'D': '4,73\\xa0долл. США', 'E': '3,73\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0=\\xa0подписка на журнал'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если подписка на 15\\xa0выпусков журнала стоит 42\\xa0долл. США и', 'Пусть x\\xa0=\\xa0подписка на журнал']\nnew_fact = infer_new_fact(selected) # '15x\\xa0=\\xa042'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['15x\\xa0=\\xa042']\nnew_fact = infer_new_fact(selected) # '=>\\xa0x\\xa0=\\xa02,8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Пусть c\\xa0=\\xa0цена одного журнала, указанная на обложке'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['позволяет сэкономить 25\\xa0процентов от цены, указанной на обложке,']\nnew_fact = infer_new_fact(selected) # 'Поскольку подписка позволяет сэкономить 25\\xa0процентов от цены, указанной на обложке,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0=\\xa0подписка на журнал', 'Пусть c\\xa0=\\xa0цена одного журнала, указанная на обложке', 'Поскольку подписка позволяет сэкономить 25\\xa0процентов от цены, указанной на обложке,']\nnew_fact = infer_new_fact(selected) # '0,75c\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0x\\xa0=\\xa02,8', '0,75c\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # '=>\\xa00.75c\\xa0=\\xa02,8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa00.75c\\xa0=\\xa02,8']\nnew_fact = infer_new_fact(selected) # '=>\\xa0c\\xa0=\\xa03,73'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова цена каждого выпуска, указанная на обложке?', 'E) 3,73\\xa0долл. США', '0,75c\\xa0=\\xa0x', '=>\\xa0c\\xa0=\\xa03,73']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_171_5c5ffacd4a", "context": "", "options": ["A)10", "B)23", "C)16", "D)18", "E)12"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [7], "consequent": 13}, {"antecedents": [2, 3, 4, 6, 13], "consequent": 14}, {"antecedents": [7, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent7 -> int1: The amount won and lost by both is equal.; int1 & sent2 & sent3 & sent4 & sent6 -> int2: Thus 2x = 3(20-x) --- x in the number of times heads came; int2 & sent12 & sent7 -> int3: X = 12; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "Кристофер и Джонатан играли в орлянку.", "2": "Они договорились, что подбросят монетку двадцать раз, и", "3": "каждый раз, когда выпадет «орел»,", "4": "Кристофер будет давать по 2 долл. США Джонатану, а", "5": "каждый раз, когда выпадет «решка»,", "6": "Джонатан будет давать Кристоферу по 3 долл. США.", "7": "После двадцати бросков ни один из них не выиграл и не проиграл никакой суммы.\nСколько раз монетка падала «орлом» вверх?", "8": "A) 10", "9": "B) 23", "10": "C) 16", "11": "D) 18", "12": "E) 12", "13": "Сумма выигрыша и проигрыша одинакова.", "14": "Следовательно, 2x = 3(20 - x), где x — количество выпадений «орлом» вверх", "15": "X = 12", "16": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Кристофер и Джонатан играли в орлянку.',\n  'Они договорились, что подбросят монетку двадцать раз, и',\n  'каждый раз, когда выпадет «орел»,',\n  'Кристофер будет давать по 2\\xa0долл. США Джонатану, а',\n  'каждый раз, когда выпадет «решка»,',\n  'Джонатан будет давать Кристоферу по 3\\xa0долл. США.']\nquestion = 'После двадцати бросков ни один из них не выиграл и не проиграл никакой суммы.\\nСколько раз монетка падала «орлом» вверх?'\nchoices = {'A': '10', 'B': '23', 'C': '16', 'D': '18', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['После двадцати бросков ни один из них не выиграл и не проиграл никакой суммы.\\nСколько раз монетка падала «орлом» вверх?']\nnew_fact = infer_new_fact(selected) # 'Сумма выигрыша и проигрыша одинакова.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Они договорились, что подбросят монетку двадцать раз, и', 'каждый раз, когда выпадет «орел»,', 'Кристофер будет давать по 2\\xa0долл. США Джонатану, а', 'Джонатан будет давать Кристоферу по 3\\xa0долл. США.', 'Сумма выигрыша и проигрыша одинакова.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 2x\\xa0=\\xa03(20\\xa0-\\xa0x), где x\\xa0— количество выпадений «орлом» вверх'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['После двадцати бросков ни один из них не выиграл и не проиграл никакой суммы.\\nСколько раз монетка падала «орлом» вверх?', 'E) 12', 'Следовательно, 2x\\xa0=\\xa03(20\\xa0-\\xa0x), где x\\xa0— количество выпадений «орлом» вверх']\nnew_fact = infer_new_fact(selected) # 'X\\xa0=\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X\\xa0=\\xa012']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_172_6551907122", "context": "", "options": ["A)144km", "B)72 km", "C)126km", "D)84 km", "E)48km"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 14}, {"antecedents": [5, 14], "consequent": 15}, {"antecedents": [5], "consequent": 16}, {"antecedents": [5], "consequent": 17}, {"antecedents": [8, 13, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent0 -> int1: Total distance 126km; int1 & sent5 -> int2: in an hour both Allen and Bob covered 126km; sent5 -> int3: that is 54+78=132; sent5 -> int4: they meet for the first time Bob covered more KM than Allen. 78-54=24.; int4 & sent13 & sent8 -> int5: so when they meet for the second time Bob covered 24*2= 48 more km (ANSWER E); int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Алексей выходит из пункта X и направляется в пункт Y.", "2": "В то же время Борис выходит из пункта Y и направляется в пункт X.", "3": "Как только Алексей достигает пункта Y, он меняет направление и возвращается в пункт X.", "4": "Как только Борис достигает пункта X, он меняет направление и возвращается в пункт Y.", "5": "На протяжении всего пути Алексей движется со скоростью 54 км/ч, а Борис — со скоростью 78 км/ч.", "6": "К моменту их второй встречи", "7": "Борис проходит на 48 км больше Алексея.", "8": "Найдите расстояние между пунктами X и Y.", "9": "A) 144 км", "10": "B) 72 км", "11": "C) 126 км", "12": "D) 84 км", "13": "E) 48 км", "14": "Общее расстояние 126 км", "15": "За час Алексей и Борис преодолели 126 км.", "16": "54 + 78 = 132", "17": "К моменту первой встречи Борис прошел больше км, чем Алексей. 78 - 54 = 24.", "18": "К моменту второй встречи Борис прошел еще 24*2 = 48 км (ОТВЕТ E)", "19": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Алексей выходит из пункта X и направляется в пункт Y.',\n  'В то же время Борис выходит из пункта Y и направляется в пункт X.',\n  'Как только Алексей достигает пункта Y, он меняет направление и возвращается в пункт X.',\n  'Как только Борис достигает пункта X, он меняет направление и возвращается в пункт Y.',\n  'На протяжении всего пути Алексей движется со скоростью 54\\xa0км/ч, а Борис\\xa0— со скоростью 78\\xa0км/ч.',\n  'К моменту их второй встречи',\n  'Борис проходит на 48\\xa0км больше Алексея.']\nquestion = 'Найдите расстояние между пунктами X и Y.'\nchoices = {'A': '144\\xa0км', 'B': '72\\xa0км', 'C': '126\\xa0км', 'D': '84\\xa0км', 'E': '48\\xa0км'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Общее расстояние 126\\xa0км'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На протяжении всего пути Алексей движется со скоростью 54\\xa0км/ч, а Борис\\xa0— со скоростью 78\\xa0км/ч.', 'Общее расстояние 126\\xa0км']\nnew_fact = infer_new_fact(selected) # 'За час Алексей и Борис преодолели 126\\xa0км.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На протяжении всего пути Алексей движется со скоростью 54\\xa0км/ч, а Борис\\xa0— со скоростью 78\\xa0км/ч.']\nnew_fact = infer_new_fact(selected) # '54\\xa0+\\xa078\\xa0=\\xa0132'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На протяжении всего пути Алексей движется со скоростью 54\\xa0км/ч, а Борис\\xa0— со скоростью 78\\xa0км/ч.']\nnew_fact = infer_new_fact(selected) # 'К моменту первой встречи Борис прошел больше км, чем Алексей. 78\\xa0-\\xa054\\xa0=\\xa024.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите расстояние между пунктами X и Y.', 'E) 48\\xa0км', 'К моменту первой встречи Борис прошел больше км, чем Алексей. 78\\xa0-\\xa054\\xa0=\\xa024.']\nnew_fact = infer_new_fact(selected) # 'К моменту второй встречи Борис прошел еще 24*2\\xa0=\\xa048\\xa0км (ОТВЕТ E)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['К моменту второй встречи Борис прошел еще 24*2\\xa0=\\xa048\\xa0км (ОТВЕТ E)']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_173_8aadd8f25b", "context": "", "options": ["A)8%", "B)10%", "C)12.5%", "D)16.7%", "E)25%"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [4, 7, 10, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Average cost of new tire = $45/tire; sent2 -> int2: cost of repairing the current tire = $40/tire; int1 & int2 -> int3: new tire is $5 more per tire.; int1 & int2 & int3 -> int4: i e. 5/40=1/8=12.5%; int1 & int2 & int4 & sent4 & sent7 -> int5: ANSWER:C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Шины определенной марки после покупки служат четыре года.", "2": "Покупатель может приобрести новые шины по цене 180 долл. США за штуку или отремонтировать уже приобретенные по цене 40 долл. США за штуку,", "3": "и после ремонта его шины прослужат еще один год.", "4": "На сколько процентов средняя стоимость новых шин в год выше стоимости ремонта уже приобретенных шин?", "5": "A) 8%", "6": "B) 10%", "7": "C) 12,5%", "8": "D) 16,7%", "9": "E) 25%", "10": "Средняя стоимость новой шины = 45 долл. США/шт.", "11": "Стоимость ремонта приобретенной шины = 40 долл. США/шт.", "12": "Новая шина стоит на 5 долл. США за штуку дороже.", "13": "т.е. 5/40 = 1/8 = 12,5%", "14": "ОТВЕТ: В", "15": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Шины определенной марки после покупки служат четыре года.',\n  'Покупатель может приобрести новые шины по цене 180\\xa0долл. США за штуку или отремонтировать уже приобретенные по цене 40\\xa0долл. США за штуку,',\n  'и после ремонта его шины прослужат еще один год.']\nquestion = 'На сколько процентов средняя стоимость новых шин в год выше стоимости ремонта уже приобретенных шин?'\nchoices = {'A': '8%', 'B': '10%', 'C': '12,5%', 'D': '16,7%', 'E': '25%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Шины определенной марки после покупки служат четыре года.', 'Покупатель может приобрести новые шины по цене 180\\xa0долл. США за штуку или отремонтировать уже приобретенные по цене 40\\xa0долл. США за штуку,']\nnew_fact = infer_new_fact(selected) # 'Средняя стоимость новой шины\\xa0=\\xa045 долл. США/шт.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Покупатель может приобрести новые шины по цене 180\\xa0долл. США за штуку или отремонтировать уже приобретенные по цене 40\\xa0долл. США за штуку,']\nnew_fact = infer_new_fact(selected) # 'Стоимость ремонта приобретенной шины\\xa0=\\xa040\\xa0долл. США/шт.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Средняя стоимость новой шины\\xa0=\\xa045 долл. США/шт.', 'Стоимость ремонта приобретенной шины\\xa0=\\xa040\\xa0долл. США/шт.']\nnew_fact = infer_new_fact(selected) # 'Новая шина стоит на 5\\xa0долл. США за штуку дороже.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Средняя стоимость новой шины\\xa0=\\xa045 долл. США/шт.', 'Стоимость ремонта приобретенной шины\\xa0=\\xa040\\xa0долл. США/шт.', 'Новая шина стоит на 5\\xa0долл. США за штуку дороже.']\nnew_fact = infer_new_fact(selected) # 'т.е. 5/40\\xa0=\\xa01/8\\xa0=\\xa012,5%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['На сколько процентов средняя стоимость новых шин в год выше стоимости ремонта уже приобретенных шин?', 'C) 12,5%', 'Средняя стоимость новой шины\\xa0=\\xa045 долл. США/шт.', 'Стоимость ремонта приобретенной шины\\xa0=\\xa040\\xa0долл. США/шт.', 'т.е. 5/40\\xa0=\\xa01/8\\xa0=\\xa012,5%']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_174_ed08b71420", "context": "", "options": ["A)7.5", "B)8.9", "C)9.9", "D)11.5", "E)11.7"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 11], "consequent": 14}, {"antecedents": [2, 3, 7, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: Length of the rope = 20 meters.; sent2 -> int2: Assume length of longer piece = x meters.; sent2 -> int3: Length of shorter piece = x - 3; int1 & int2 & int3 -> int4: We know that x + x - 3 = 20; int4 -> int5: 2x = 23; int3 & sent3 -> int6: Length of the longer piece = x = 11.5 meters; int6 & sent2 & sent3 & sent7 -> int7: Correct Option: D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Веревку длиной 20 метров разрезали на две части.", "2": "Если одна часть веревки на 3 метра короче другой, какова длина", "3": "более длинной части веревки в метрах?", "4": "A) 7,5", "5": "B) 8,9", "6": "C) 9,9", "7": "D) 11,5", "8": "E) 11,7", "9": "Длина веревки = 20 метров.", "10": "Предположим, что длина более длинной части = x метров.", "11": "Длина более короткой части = x - 3", "12": "Известно, что x + x - 3 = 20", "13": "2x = 23", "14": "Длина более длинной части = x = 11,5 метра", "15": "Правильный вариант: D", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Веревку длиной 20\\xa0метров разрезали на две части.', 'Если одна часть веревки на 3\\xa0метра короче другой, какова длина']\nquestion = 'более длинной части веревки в метрах?'\nchoices = {'A': '7,5', 'B': '8,9', 'C': '9,9', 'D': '11,5', 'E': '11,7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Веревку длиной 20\\xa0метров разрезали на две части.']\nnew_fact = infer_new_fact(selected) # 'Длина веревки\\xa0=\\xa020\\xa0метров.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одна часть веревки на 3\\xa0метра короче другой, какова длина']\nnew_fact = infer_new_fact(selected) # 'Предположим, что длина более длинной части\\xa0=\\xa0x\\xa0метров.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одна часть веревки на 3\\xa0метра короче другой, какова длина']\nnew_fact = infer_new_fact(selected) # 'Длина более короткой части\\xa0=\\xa0x\\xa0-\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Длина веревки\\xa0=\\xa020\\xa0метров.', 'Предположим, что длина более длинной части\\xa0=\\xa0x\\xa0метров.', 'Длина более короткой части\\xa0=\\xa0x\\xa0-\\xa03']\nnew_fact = infer_new_fact(selected) # 'Известно, что x\\xa0+\\xa0x\\xa0-\\xa03\\xa0=\\xa020'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Известно, что x\\xa0+\\xa0x\\xa0-\\xa03\\xa0=\\xa020']\nnew_fact = infer_new_fact(selected) # '2x\\xa0=\\xa023'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['более длинной части веревки в метрах?', 'Длина более короткой части\\xa0=\\xa0x\\xa0-\\xa03']\nnew_fact = infer_new_fact(selected) # 'Длина более длинной части\\xa0=\\xa0x\\xa0=\\xa011,5\\xa0метра'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если одна часть веревки на 3\\xa0метра короче другой, какова длина', 'более длинной части веревки в метрах?', 'D) 11,5', 'Длина более длинной части\\xa0=\\xa0x\\xa0=\\xa011,5\\xa0метра']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_175_d803d8f629", "context": "", "options": ["A)$5102", "B)$618", "C)$216", "D)$202", "E)$200"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent4 -> int1: A=P(1+r/q)nq .Here q is no of times interest is compounded in a yr so it is = 2. Amount comes out to be 5618 .Hence interest is 5618-5000=618. >>B; int1 -> int2: The answer is B);", "textual_logical_units": {"1": "Джерри приобрел годовую облигацию на сумму 5000 долл. США с годовой процентной ставкой в размере 12%, начисляемой каждые шесть месяцев.", "2": "Сколько процентов было начислено по этой облигации к моменту погашения?", "3": "A) 5102 долл. США", "4": "B) 618 долл. США", "5": "C) 216 долл. США", "6": "D) 202 долл. США", "7": "E) 200 долл. США", "8": "A=P(1 + r/q)nq. Здесь q — количество начислений процентов за год, поэтому оно равно 2. Получается сумма 5618. Следовательно, процент составляет 5618 - 5000 = 618. >> Б", "9": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Джерри приобрел годовую облигацию на сумму 5000\\xa0долл. США с годовой процентной ставкой в размере 12%, начисляемой каждые шесть месяцев.']\nquestion = 'Сколько процентов было начислено по этой облигации к моменту погашения?'\nchoices = {'A': '5102\\xa0долл. США', 'B': '618\\xa0долл. США', 'C': '216\\xa0долл. США', 'D': '202\\xa0долл. США', 'E': '200\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Джерри приобрел годовую облигацию на сумму 5000\\xa0долл. США с годовой процентной ставкой в размере 12%, начисляемой каждые шесть месяцев.', 'Сколько процентов было начислено по этой облигации к моменту погашения?', 'B) 618\\xa0долл. США']\nnew_fact = infer_new_fact(selected) # 'A=P(1\\xa0+\\xa0r/q)nq. Здесь q\\xa0— количество начислений процентов за год, поэтому оно равно 2. Получается сумма 5618. Следовательно, процент составляет 5618\\xa0-\\xa05000\\xa0=\\xa0618.\\xa0>>\\xa0Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A=P(1\\xa0+\\xa0r/q)nq. Здесь q\\xa0— количество начислений процентов за год, поэтому оно равно 2. Получается сумма 5618. Следовательно, процент составляет 5618\\xa0-\\xa05000\\xa0=\\xa0618.\\xa0>>\\xa0Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_176_9d04ac14e3", "context": "", "options": ["A)9 2 0 0", "B)9 2 0 9", "C)9 2 0 1", "D)9 2 0 7", "E)9 2 2 2"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [1, 9], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [1, 9], "consequent": 14}, {"antecedents": [7, 9, 11], "consequent": 15}, {"antecedents": [0], "consequent": 16}, {"antecedents": [1, 9, 10], "consequent": 17}, {"antecedents": [0], "consequent": 18}, {"antecedents": [1], "consequent": 19}, {"antecedents": [1, 19], "consequent": 20}, {"antecedents": [1, 8, 9, 20], "consequent": 21}, {"antecedents": [0], "consequent": 22}, {"antecedents": [1, 8, 9, 20], "consequent": 23}, {"antecedents": [1, 9, 11, 20], "consequent": 24}, {"antecedents": [0], "consequent": 25}, {"antecedents": [23, 24], "consequent": 26}, {"antecedents": [0], "consequent": 27}, {"antecedents": [1, 5, 20, 26], "consequent": 28}, {"antecedents": [28], "consequent": 29}], "metadata": [], "linearized_output_en": "sent1 -> int1: It is clear that E = 1 as MAD×E=MAD; int1 & sent1 -> int2: From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M; int2 -> int3: As A = 10 not possible, A = 9; int3 & sent1 -> int4: So I = 0.; int3 & sent1 -> int5: and From the thousand's line R + 1 = A. So R = 8.; int3 & sent1 -> int6: M 9 D; sent0 -> int7: -------------; int3 & sent1 -> int8: M 9 D; int1 & int3 & int5 -> int9: 8 9 1; sent0 -> int10: -------------; int3 & int4 & sent1 -> int11: 9 M 0 D; sent0 -> int12: -------------; sent1 -> int13: As B×D = 1, B and D takes 3, 7 in some order.; int13 & sent1 -> int14: If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.; int14 & int2 & int3 & sent1 -> int15: 2 9 7; sent0 -> int16: -------------; int14 & int2 & int3 & sent1 -> int17: 2 9 7; int14 & int3 & int5 & sent1 -> int18: 8 9 1; sent0 -> int19: -------------; int17 & int18 -> int20: 9 2 0 7; sent0 -> int21: -------------; int14 & int20 & sent1 & sent5 -> int22: Answer:D; int22 -> int23: The answer is D);", "textual_logical_units": {"1": "Расшифруйте следующую таблицу умножения:\nM A D\nB E\n-------------\nM A D\nR A E\n-------------\nA M I D", "2": "A) 9 2 0 0", "3": "B) 9 2 0 9", "4": "C) 9 2 0 1", "5": "D) 9 2 0 7", "6": "E) 9 2 2 2", "7": "Очевидно, что E = 1, так как MAD × E = MAD", "8": "В строке сотен M + A = 10 + M или 1 + M + A = 10 + M", "9": "Поскольку A = 10 невозможно, A = 9", "10": "Следовательно, I = 0.", "11": "В строке тысяч R + 1 = A. Следовательно, R = 8.", "12": "M 9 D", "13": "-------------", "14": "M 9 D", "15": "8 9 1", "16": "-------------", "17": "9 M 0 D", "18": "-------------", "19": "Поскольку B × D = 1, B и D принимают значения 3, 7 в определенном порядке.", "20": "Если B = 7 и D = 3, то M93×7 = _51 не удовлетворяет условию. Следовательно, B = 3 и D = 7.", "21": "2 9 7", "22": "-------------", "23": "2 9 7", "24": "8 9 1", "25": "-------------", "26": "9 2 0 7", "27": "-------------", "28": "Ответ: Г", "29": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D'\nchoices = {'A': '9 2 0 0', 'B': '9 2 0 9', 'C': '9 2 0 1', 'D': '9 2 0 7', 'E': '9 2 2 2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D']\nnew_fact = infer_new_fact(selected) # 'Очевидно, что E\\xa0=\\xa01, так как MAD\\xa0×\\xa0E\\xa0=\\xa0MAD'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Очевидно, что E\\xa0=\\xa01, так как MAD\\xa0×\\xa0E\\xa0=\\xa0MAD']\nnew_fact = infer_new_fact(selected) # 'В строке сотен M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M или 1\\xa0+\\xa0M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В строке сотен M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M или 1\\xa0+\\xa0M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M']\nnew_fact = infer_new_fact(selected) # 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'Следовательно, I\\xa0=\\xa00.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'В строке тысяч R\\xa0+\\xa01\\xa0=\\xa0A. Следовательно, R\\xa0=\\xa08.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'M 9 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # 'M 9 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Очевидно, что E\\xa0=\\xa01, так как MAD\\xa0×\\xa0E\\xa0=\\xa0MAD', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09', 'В строке тысяч R\\xa0+\\xa01\\xa0=\\xa0A. Следовательно, R\\xa0=\\xa08.']\nnew_fact = infer_new_fact(selected) # '8 9 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09', 'Следовательно, I\\xa0=\\xa00.']\nnew_fact = infer_new_fact(selected) # '9 M 0 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D']\nnew_fact = infer_new_fact(selected) # 'Поскольку B\\xa0×\\xa0D\\xa0=\\xa01, B и D принимают значения 3, 7 в определенном порядке.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку B\\xa0×\\xa0D\\xa0=\\xa01, B и D принимают значения 3, 7 в определенном порядке.']\nnew_fact = infer_new_fact(selected) # 'Если B\\xa0=\\xa07 и D\\xa0=\\xa03, то M93×7\\xa0=\\xa0_51 не удовлетворяет условию. Следовательно, B\\xa0=\\xa03 и D\\xa0=\\xa07.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'В строке сотен M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M или 1\\xa0+\\xa0M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09', 'Если B\\xa0=\\xa07 и D\\xa0=\\xa03, то M93×7\\xa0=\\xa0_51 не удовлетворяет условию. Следовательно, B\\xa0=\\xa03 и D\\xa0=\\xa07.']\nnew_fact = infer_new_fact(selected) # '2 9 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'В строке сотен M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M или 1\\xa0+\\xa0M\\xa0+\\xa0A\\xa0=\\xa010\\xa0+\\xa0M', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09', 'Если B\\xa0=\\xa07 и D\\xa0=\\xa03, то M93×7\\xa0=\\xa0_51 не удовлетворяет условию. Следовательно, B\\xa0=\\xa03 и D\\xa0=\\xa07.']\nnew_fact = infer_new_fact(selected) # '2 9 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'Поскольку A\\xa0=\\xa010 невозможно, A\\xa0=\\xa09', 'В строке тысяч R\\xa0+\\xa01\\xa0=\\xa0A. Следовательно, R\\xa0=\\xa08.', 'Если B\\xa0=\\xa07 и D\\xa0=\\xa03, то M93×7\\xa0=\\xa0_51 не удовлетворяет условию. Следовательно, B\\xa0=\\xa03 и D\\xa0=\\xa07.']\nnew_fact = infer_new_fact(selected) # '8 9 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 9 7', '8 9 1']\nnew_fact = infer_new_fact(selected) # '9 2 0 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Расшифруйте следующую таблицу умножения:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'D) 9 2 0 7', 'Если B\\xa0=\\xa07 и D\\xa0=\\xa03, то M93×7\\xa0=\\xa0_51 не удовлетворяет условию. Следовательно, B\\xa0=\\xa03 и D\\xa0=\\xa07.', '9 2 0 7']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_177_d0c419d67d", "context": "", "options": ["A)18", "B)25", "C)15", "D)20", "E)21"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [2, 6, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent0 -> int1: Explanation:; sent2 -> int2: Sachin's age today = 30 years.; sent2 -> int3: Sachin's age 10 years back = 20 years.; int3 & sent1 & sent2 -> int4: Ajay's age 10 years back = 10 years.; int3 & int4 & sent1 & sent2 -> int5: Ajay's age today = 20 years; int3 & int4 & int5 & sent2 & sent6 -> int6: Answer: Option D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "10 лет назад Сергей был в два раза старше, чем Андрей.", "2": "Сколько лет Андрею сейчас, если через 10 лет Сергею исполнится 40 лет?", "3": "A) 18", "4": "B) 25", "5": "C) 15", "6": "D) 20", "7": "E) 21", "8": "Объяснение:", "9": "Сегодняшний возраст Сергея = 30 лет.", "10": "Возраст Сергея 10 лет назад = 20 лет.", "11": "Возраст Андрея 10 лет назад = 10 лет.", "12": "Сегодняшний возраст Андрея = 20 лет", "13": "Ответ: Вариант Г", "14": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['10\\xa0лет назад Сергей был в два раза старше, чем Андрей.']\nquestion = 'Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?'\nchoices = {'A': '18', 'B': '25', 'C': '15', 'D': '20', 'E': '21'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Объяснение:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?']\nnew_fact = infer_new_fact(selected) # 'Сегодняшний возраст Сергея\\xa0=\\xa030 лет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?']\nnew_fact = infer_new_fact(selected) # 'Возраст Сергея 10\\xa0лет назад\\xa0=\\xa020 лет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10\\xa0лет назад Сергей был в два раза старше, чем Андрей.', 'Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?', 'Возраст Сергея 10\\xa0лет назад\\xa0=\\xa020 лет.']\nnew_fact = infer_new_fact(selected) # 'Возраст Андрея 10\\xa0лет назад\\xa0=\\xa010 лет.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10\\xa0лет назад Сергей был в два раза старше, чем Андрей.', 'Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?', 'Возраст Сергея 10\\xa0лет назад\\xa0=\\xa020 лет.', 'Возраст Андрея 10\\xa0лет назад\\xa0=\\xa010 лет.']\nnew_fact = infer_new_fact(selected) # 'Сегодняшний возраст Андрея\\xa0=\\xa020 лет'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько лет Андрею сейчас, если через 10\\xa0лет Сергею исполнится 40\\xa0лет?', 'D) 20', 'Возраст Сергея 10\\xa0лет назад\\xa0=\\xa020 лет.', 'Возраст Андрея 10\\xa0лет назад\\xa0=\\xa010 лет.', 'Сегодняшний возраст Андрея\\xa0=\\xa020 лет']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_178_0bff461faf", "context": "", "options": ["A)3400", "B)1700", "C)3440", "D)Cannot be determined", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [0], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [1, 9, 10, 11, 13], "consequent": 14}, {"antecedents": [1, 4, 9, 10, 11, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let l and b be the length and breadth of rectangular plot respectively.; sent0 -> int2: ∴ According to the question,we have; sent1 -> int3: 2(l + b) = 340 ⇒ l + b = 170; int3 & sent1 -> int4: Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.; int3 & int4 & sent1 -> int5: ∴ Required area = (l + 2) (b + 2) – lb; int5 -> int6: = lb + 2l + 2b + 4 – lb; int5 & int6 -> int7: = 2(l + b) + 4 = 344; int3 & int4 & int5 & int7 & sent1 -> int8: ∴ Required cost = 344 × 10 = 3440; int3 & int4 & int5 & int7 & int8 & sent1 & sent4 -> int9: Answer C; int9 -> int10: The answer is C);", "textual_logical_units": {"1": "Сколько будет стоить озеленение границы шириной 1 метр вокруг прямоугольного участка с периметром 340 метров из расчета 10 на квадратный метр?", "2": "A) 3400", "3": "B) 1700", "4": "C) 3440", "5": "D) Невозможно определить", "6": "E) Ничего из вышеперечисленного", "7": "Пусть l и b — длина и ширина прямоугольного участка соответственно.", "8": "∴ Согласно условию задачи,", "9": "2(l + b) = 340 ⇒ l + b = 170", "10": "Пусть (l + 2) и (b + 2) — длина и ширина участка вместе с границей.", "11": "∴ Требуемая площадь = (l + 2)(b + 2) - lb", "12": "= lb + 2l + 2b+ 4 - lb", "13": " = 2(l + b) + 4 = 344", "14": "∴ Требуемая стоимость = 344 × 10 = 3440", "15": "Ответ — В", "16": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?'\nchoices = {'A': '3400', 'B': '1700', 'C': '3440', 'D': 'Невозможно определить', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?']\nnew_fact = infer_new_fact(selected) # 'Пусть l и b\\xa0— длина и ширина прямоугольного участка соответственно.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '∴ Согласно условию задачи,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?']\nnew_fact = infer_new_fact(selected) # '2(l\\xa0+\\xa0b)\\xa0=\\xa0340 ⇒ l\\xa0+\\xa0b\\xa0=\\xa0170'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?', '2(l\\xa0+\\xa0b)\\xa0=\\xa0340 ⇒ l\\xa0+\\xa0b\\xa0=\\xa0170']\nnew_fact = infer_new_fact(selected) # 'Пусть (l\\xa0+\\xa02) и (b\\xa0+\\xa02)\\xa0— длина и ширина участка вместе с границей.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?', '2(l\\xa0+\\xa0b)\\xa0=\\xa0340 ⇒ l\\xa0+\\xa0b\\xa0=\\xa0170', 'Пусть (l\\xa0+\\xa02) и (b\\xa0+\\xa02)\\xa0— длина и ширина участка вместе с границей.']\nnew_fact = infer_new_fact(selected) # '∴ Требуемая площадь\\xa0=\\xa0(l\\xa0+\\xa02)(b\\xa0+\\xa02)\\xa0-\\xa0lb'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ Требуемая площадь\\xa0=\\xa0(l\\xa0+\\xa02)(b\\xa0+\\xa02)\\xa0-\\xa0lb']\nnew_fact = infer_new_fact(selected) # '=\\xa0lb\\xa0+\\xa02l\\xa0+\\xa02b+\\xa04\\xa0-\\xa0lb'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ Требуемая площадь\\xa0=\\xa0(l\\xa0+\\xa02)(b\\xa0+\\xa02)\\xa0-\\xa0lb', '=\\xa0lb\\xa0+\\xa02l\\xa0+\\xa02b+\\xa04\\xa0-\\xa0lb']\nnew_fact = infer_new_fact(selected) # ' = 2(l + b) + 4 = 344'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?', '2(l\\xa0+\\xa0b)\\xa0=\\xa0340 ⇒ l\\xa0+\\xa0b\\xa0=\\xa0170', 'Пусть (l\\xa0+\\xa02) и (b\\xa0+\\xa02)\\xa0— длина и ширина участка вместе с границей.', '∴ Требуемая площадь\\xa0=\\xa0(l\\xa0+\\xa02)(b\\xa0+\\xa02)\\xa0-\\xa0lb', ' = 2(l + b) + 4 = 344']\nnew_fact = infer_new_fact(selected) # '∴ Требуемая стоимость\\xa0=\\xa0344\\xa0×\\xa010\\xa0=\\xa03440'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько будет стоить озеленение границы шириной 1\\xa0метр вокруг прямоугольного участка с периметром 340\\xa0метров из расчета 10 на квадратный метр?', 'C) 3440', '2(l\\xa0+\\xa0b)\\xa0=\\xa0340 ⇒ l\\xa0+\\xa0b\\xa0=\\xa0170', 'Пусть (l\\xa0+\\xa02) и (b\\xa0+\\xa02)\\xa0— длина и ширина участка вместе с границей.', '∴ Требуемая площадь\\xa0=\\xa0(l\\xa0+\\xa02)(b\\xa0+\\xa02)\\xa0-\\xa0lb', ' = 2(l + b) + 4 = 344', '∴ Требуемая стоимость\\xa0=\\xa0344\\xa0×\\xa010\\xa0=\\xa03440']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_179_08d5159be9", "context": "", "options": ["A)1.3", "B)1.5", "C)2.1", "D)2.5", "E)3.1"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [1], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [2, 11, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 6, 10, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 -> int1: Percentage of revenue from novels = 34%; sent1 -> int2: Remaining revenue = 66%; int2 & sent2 -> int3: Sale of biographies = 1/3 of 66% = 22%; int2 & int3 & sent2 -> int4: Sale of novels / sale of biographies; int1 & int3 & int4 -> int5: = 34/22; int5 -> int6: approx 1.5; int1 & int3 & int4 & int5 & int6 & sent4 & sent6 -> int7: Answer B; int7 -> int8: The answer is B);", "textual_logical_units": {"1": "В прошлом году 34 процента торговой выручки компании Ace Book Company поступили от продаж романов.", "2": "1/3 остальной выручки поступила от продаж биографий.", "3": "Во сколько примерно раз доход компании от продаж романов", "4": "оказался выше дохода от продаж биографий?", "5": "A) 1,3", "6": "B) 1,5", "7": "C) 2,1", "8": "D) 2,5", "9": "E) 3,1", "10": "Процент дохода от романов = 34%", "11": "Остальной доход = 66%", "12": "Продажи биографий = 1/3 от 66% = 22%", "13": "Продажи романов / продажи биографий", "14": "1,545,454,545", "15": "Прибл. 1,5", "16": "Ответ — Б", "17": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'В прошлом году 34\\xa0процента торговой выручки компании Ace Book Company поступили от продаж романов.',\n  '1/3\\xa0остальной выручки поступила от продаж биографий.',\n  'Во сколько примерно раз доход компании от продаж романов']\nquestion = 'оказался выше дохода от продаж биографий?'\nchoices = {'A': '1,3', 'B': '1,5', 'C': '2,1', 'D': '2,5', 'E': '3,1'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В прошлом году 34\\xa0процента торговой выручки компании Ace Book Company поступили от продаж романов.']\nnew_fact = infer_new_fact(selected) # 'Процент дохода от романов\\xa0=\\xa034%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В прошлом году 34\\xa0процента торговой выручки компании Ace Book Company поступили от продаж романов.']\nnew_fact = infer_new_fact(selected) # 'Остальной доход\\xa0=\\xa066%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1/3\\xa0остальной выручки поступила от продаж биографий.', 'Остальной доход\\xa0=\\xa066%']\nnew_fact = infer_new_fact(selected) # 'Продажи биографий\\xa0=\\xa01/3 от 66%\\xa0=\\xa022%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1/3\\xa0остальной выручки поступила от продаж биографий.', 'Остальной доход\\xa0=\\xa066%', 'Продажи биографий\\xa0=\\xa01/3 от 66%\\xa0=\\xa022%']\nnew_fact = infer_new_fact(selected) # 'Продажи романов\\xa0/ продажи биографий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Процент дохода от романов\\xa0=\\xa034%', 'Продажи биографий\\xa0=\\xa01/3 от 66%\\xa0=\\xa022%', 'Продажи романов\\xa0/ продажи биографий']\nnew_fact = infer_new_fact(selected) # '1,545,454,545'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1,545,454,545']\nnew_fact = infer_new_fact(selected) # 'Прибл. 1,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['оказался выше дохода от продаж биографий?', 'B) 1,5', 'Процент дохода от романов\\xa0=\\xa034%', 'Продажи биографий\\xa0=\\xa01/3 от 66%\\xa0=\\xa022%', 'Продажи романов\\xa0/ продажи биографий', '1,545,454,545', 'Прибл. 1,5']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_180_a36c2339d1", "context": "", "options": ["A)2000", "B)4000", "C)8000", "D)16000", "E)32000"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 6, 8, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let the number of flowers to be flown by be x.; int1 & sent1 & sent2 -> int2: Then, .05% of x=8; int2 & sent1 & sent2 -> int3: (5/100)*(1/100)*x=8; int3 -> int4: x=16000; int1 & int3 & int4 & sent2 & sent6 -> int5: Answer is D; int5 -> int6: The answer is D);", "textual_logical_units": {"1": "Пчела не садится на 0,05% цветов, мимо которых она пролетает, так как чувствует, что в них нет нектара.", "2": "Сколько цветов пчела облетит и не сядет на 8 из них?", "3": "A) 2000", "4": "B) 4000", "5": "C) 8000", "6": "D) 16000", "7": "E) 32000", "8": "Пусть x — количество цветов, которые нужно облететь.", "9": "Тогда 0,5% от x = 8", "10": "(5/100)*(1/100)*х = 8", "11": "x = 16000", "12": "Ответ — Г", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Пчела не садится на 0,05%\\xa0цветов, мимо которых она пролетает, так как чувствует, что в них нет нектара.']\nquestion = 'Сколько цветов пчела облетит и не сядет на 8 из них?'\nchoices = {'A': '2000', 'B': '4000', 'C': '8000', 'D': '16000', 'E': '32000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколько цветов пчела облетит и не сядет на 8 из них?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— количество цветов, которые нужно облететь.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пчела не садится на 0,05%\\xa0цветов, мимо которых она пролетает, так как чувствует, что в них нет нектара.', 'Сколько цветов пчела облетит и не сядет на 8 из них?', 'Пусть x\\xa0— количество цветов, которые нужно облететь.']\nnew_fact = infer_new_fact(selected) # 'Тогда 0,5% от x\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пчела не садится на 0,05%\\xa0цветов, мимо которых она пролетает, так как чувствует, что в них нет нектара.', 'Сколько цветов пчела облетит и не сядет на 8 из них?', 'Тогда 0,5% от x\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # '(5/100)*(1/100)*х\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(5/100)*(1/100)*х\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa016000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько цветов пчела облетит и не сядет на 8 из них?', 'D) 16000', 'Пусть x\\xa0— количество цветов, которые нужно облететь.', '(5/100)*(1/100)*х\\xa0=\\xa08', 'x\\xa0=\\xa016000']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_181_f6f9311f03", "context": "", "options": ["A)5C3*4C3", "B)5C4*4C2", "C)5C2*4C4", "D)5C6*4C5", "E)4C3*4C3"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [4, 5, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.; sent1 & sent2 & sent3 -> int2: He can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.; int1 & int2 -> int3: Total = 5C3*4C3 ways; int1 & int2 & int3 & sent4 & sent5 -> int4: ANS:A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Федор приобрел университетский план питания, рассчитанный в общей сложности на 3 обеда и 3 ужина в неделю.", "2": "Если кафетерий закрыт по выходным, а", "3": "по пятницам Федор всегда ужинает дома,", "4": "сколькими способами он может распределить университетские обеды и ужины?", "5": "A) 5C3*4C3", "6": "B) 5C4*4C2", "7": "C) 5C2*4C4", "8": "D) 5C6*4C5", "9": "E) 4С3*4С3", "10": "Он может распределить 3 бесплатных обеда между любыми 3 днями из 5 (исключая выходные), то есть 5C3 способами.", "11": "Он может распределить 3 бесплатных ужина между любыми 3 днями из 4 (исключая выходные и пятницу), то есть 4C3 способами.", "12": "Всего = 5C3*4C3 способов", "13": "ОТВЕТ: А", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Федор приобрел университетский план питания, рассчитанный в общей сложности на 3\\xa0обеда и 3\\xa0ужина в неделю.',\n  'Если кафетерий закрыт по выходным, а',\n  'по пятницам Федор всегда ужинает дома,']\nquestion = 'сколькими способами он может распределить университетские обеды и ужины?'\nchoices = {'A': '5C3*4C3', 'B': '5C4*4C2', 'C': '5C2*4C4', 'D': '5C6*4C5', 'E': '4С3*4С3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Федор приобрел университетский план питания, рассчитанный в общей сложности на 3\\xa0обеда и 3\\xa0ужина в неделю.', 'Если кафетерий закрыт по выходным, а']\nnew_fact = infer_new_fact(selected) # 'Он может распределить 3\\xa0бесплатных обеда между любыми 3\\xa0днями из 5 (исключая выходные), то есть 5C3\\xa0способами.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Федор приобрел университетский план питания, рассчитанный в общей сложности на 3\\xa0обеда и 3\\xa0ужина в неделю.', 'Если кафетерий закрыт по выходным, а', 'по пятницам Федор всегда ужинает дома,']\nnew_fact = infer_new_fact(selected) # 'Он может распределить 3\\xa0бесплатных ужина между любыми 3\\xa0днями из 4 (исключая выходные и пятницу), то есть 4C3\\xa0способами.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он может распределить 3\\xa0бесплатных обеда между любыми 3\\xa0днями из 5 (исключая выходные), то есть 5C3\\xa0способами.', 'Он может распределить 3\\xa0бесплатных ужина между любыми 3\\xa0днями из 4 (исключая выходные и пятницу), то есть 4C3\\xa0способами.']\nnew_fact = infer_new_fact(selected) # 'Всего\\xa0=\\xa05C3*4C3\\xa0способов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколькими способами он может распределить университетские обеды и ужины?', 'A) 5C3*4C3', 'Он может распределить 3\\xa0бесплатных обеда между любыми 3\\xa0днями из 5 (исключая выходные), то есть 5C3\\xa0способами.', 'Он может распределить 3\\xa0бесплатных ужина между любыми 3\\xa0днями из 4 (исключая выходные и пятницу), то есть 4C3\\xa0способами.', 'Всего\\xa0=\\xa05C3*4C3\\xa0способов']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_182_3abe4662a5", "context": "", "options": ["A)(a + b)(a - b)", "B)(a - b)2", "C)(a + b)2", "D)a3 + b3", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 2, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: (a - b)2 x (a + b)2 / a2 - b2 = (a - b)2 x (a + b)2 / (a + b)(a - b) = (a + b) (a - b); int1 & sent1 & sent2 -> int2: Answer : Option A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Что должно заменить знак вопроса (?) в каждом из следующих выражений?\na2 - b2/(a + b)2(?) = (а - b)2", "2": "A) (a + b)(a - b)", "3": "B) (a - b)2", "4": "C) (a + b)2", "5": "D) a3 + b3", "6": "E) Ничего из вышеперечисленного", "7": "(a - b)2 x (a + b)2/a2 - b2 = (a - b)2 x (a + b)2/(a + b)(a + b) = (a + b)(a - b)", "8": "Ответ: Вариант А", "9": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Что должно заменить знак вопроса (?) в каждом из следующих выражений?\\na2\\xa0-\\xa0b2/(a\\xa0+\\xa0b)2(?)\\xa0=\\xa0(а\\xa0-\\xa0b)2'\nchoices = {'A': '(a\\xa0+\\xa0b)(a\\xa0-\\xa0b)', 'B': '(a\\xa0-\\xa0b)2', 'C': '(a\\xa0+\\xa0b)2', 'D': 'a3\\xa0+\\xa0b3', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Что должно заменить знак вопроса (?) в каждом из следующих выражений?\\na2\\xa0-\\xa0b2/(a\\xa0+\\xa0b)2(?)\\xa0=\\xa0(а\\xa0-\\xa0b)2']\nnew_fact = infer_new_fact(selected) # '(a\\xa0-\\xa0b)2\\xa0x\\xa0(a\\xa0+\\xa0b)2/a2\\xa0-\\xa0b2\\xa0=\\xa0(a\\xa0-\\xa0b)2\\xa0x\\xa0(a\\xa0+\\xa0b)2/(a\\xa0+\\xa0b)(a\\xa0+\\xa0b)\\xa0=\\xa0(a\\xa0+\\xa0b)(a\\xa0-\\xa0b)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Что должно заменить знак вопроса (?) в каждом из следующих выражений?\\na2\\xa0-\\xa0b2/(a\\xa0+\\xa0b)2(?)\\xa0=\\xa0(а\\xa0-\\xa0b)2', 'A) (a\\xa0+\\xa0b)(a\\xa0-\\xa0b)', '(a\\xa0-\\xa0b)2\\xa0x\\xa0(a\\xa0+\\xa0b)2/a2\\xa0-\\xa0b2\\xa0=\\xa0(a\\xa0-\\xa0b)2\\xa0x\\xa0(a\\xa0+\\xa0b)2/(a\\xa0+\\xa0b)(a\\xa0+\\xa0b)\\xa0=\\xa0(a\\xa0+\\xa0b)(a\\xa0-\\xa0b)']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_183_3476c980db", "context": "", "options": ["A)60", "B)56", "C)51", "D)61", "E)41"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 6, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let the number be x. Then, X-36 = 86-X; int1 & sent1 -> int2: 2X = 86+36 = 122, x = 61.; int1 & int2 & sent1 & sent6 -> int3: The answer is option D) 61.; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Число настолько же больше 36, насколько и меньше 86.", "2": "Найдите это число.", "3": "A) 60", "4": "B) 56", "5": "C) 51", "6": "D) 61", "7": "E) 41", "8": "Пусть x — требуемое число. Тогда Х - 36 = 86 - Х", "9": "2X = 86+36 = 122, x = 61.", "10": "Ответ — вариант D) 61.", "11": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Число настолько же больше 36, насколько и меньше 86.']\nquestion = 'Найдите это число.'\nchoices = {'A': '60', 'B': '56', 'C': '51', 'D': '61', 'E': '41'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Число настолько же больше 36, насколько и меньше 86.']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— требуемое число. Тогда Х\\xa0-\\xa036\\xa0=\\xa086\\xa0-\\xa0Х'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Число настолько же больше 36, насколько и меньше 86.', 'Пусть x\\xa0— требуемое число. Тогда Х\\xa0-\\xa036\\xa0=\\xa086\\xa0-\\xa0Х']\nnew_fact = infer_new_fact(selected) # '2X\\xa0=\\xa086+36\\xa0=\\xa0122, x\\xa0=\\xa061.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Число настолько же больше 36, насколько и меньше 86.', 'D) 61', 'Пусть x\\xa0— требуемое число. Тогда Х\\xa0-\\xa036\\xa0=\\xa086\\xa0-\\xa0Х', '2X\\xa0=\\xa086+36\\xa0=\\xa0122, x\\xa0=\\xa061.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— вариант D) 61.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— вариант D) 61.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_184_5a17a88d6c", "context": "", "options": ["A)1000p", "B)1500p", "C)2000p", "D)2500p", "E)30000"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: 1 pallet has 1250 phones, so p pallets hold 1250p phones; int1 & sent4 -> int2: 1 crate has 1250p phones, so 4 will have 1250p * 3 = 2500p; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "Производитель телефонов отправляет свою продукцию в ящиках.", "2": "Ящик состоит из p поддонов,", "3": "и на каждом поддоне умещается 1250 телефонов.", "4": "Если производитель отправил 4 ящика,", "5": "сколько телефонов отправлено?", "6": "A) 1000p", "7": "B) 1500p", "8": "C) 2000p", "9": "D) 2500p", "10": "E) 30000", "11": "На 1 поддоне 1250 телефонов, поэтому на p поддонах можно разместить 1250p телефонов", "12": "В 1 ящике 1250p телефонов, поэтому в 4 будет 1250p*3 = 2500p", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Производитель телефонов отправляет свою продукцию в ящиках.',\n  'Ящик состоит из p\\xa0поддонов,',\n  'и на каждом поддоне умещается 1250\\xa0телефонов.',\n  'Если производитель отправил 4\\xa0ящика,']\nquestion = 'сколько телефонов отправлено?'\nchoices = {'A': '1000p', 'B': '1500p', 'C': '2000p', 'D': '2500p', 'E': '30000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ящик состоит из p\\xa0поддонов,', 'и на каждом поддоне умещается 1250\\xa0телефонов.']\nnew_fact = infer_new_fact(selected) # 'На 1\\xa0поддоне 1250\\xa0телефонов, поэтому на p\\xa0поддонах можно разместить 1250p\\xa0телефонов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если производитель отправил 4\\xa0ящика,', 'На 1\\xa0поддоне 1250\\xa0телефонов, поэтому на p\\xa0поддонах можно разместить 1250p\\xa0телефонов']\nnew_fact = infer_new_fact(selected) # 'В 1\\xa0ящике 1250p\\xa0телефонов, поэтому в 4 будет 1250p*3\\xa0=\\xa02500p'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В 1\\xa0ящике 1250p\\xa0телефонов, поэтому в 4 будет 1250p*3\\xa0=\\xa02500p']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_185_3677bae69c", "context": "", "options": ["A)20 min", "B)22 min", "C)23 min", "D)21 min", "E)20 min"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [9, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 8, 11, 12], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent1 -> int1: A's one minute work = 1/40; sent2 -> int2: B's one minute work = 1/45; int1 & int2 -> int3: (A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360; int1 & int2 & int3 -> int4: so, (A+B)will do work together in 360/17 min = 21 3/17 minutes; int1 & int2 & int3 & int4 -> int5: 21 min approximately; int3 & int4 & sent3 & sent8 -> int6: ANSWER:D; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "A может построить стену за 40 минут, а", "2": "B может построить стену за 45 минут.", "3": "Сколько времени потребуется на строительство стены, если оба человека будут работать вместе?", "4": "A) 20 мин", "5": "B) 22 мин", "6": "C) 23 мин", "7": "D) 21 мин", "8": "E) 20 мин", "9": "Одна минута работы А = 1/40", "10": "Одна минута работы B = 1/45", "11": "Одна минута работы (A + B) = 1/40 + 1/45 = 85/40*45 = 17/360", "12": "Следовательно, (A + B) выполнят работу вместе за 360/17 минут = 21 3/17 минут", "13": "Примерно 21 мин", "14": "ОТВЕТ: Г", "15": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['A может построить стену за 40\\xa0минут, а', 'B может построить стену за 45\\xa0минут.']\nquestion = 'Сколько времени потребуется на строительство стены, если оба человека будут работать вместе?'\nchoices = {'A': '20\\xa0мин', 'B': '22\\xa0мин', 'C': '23\\xa0мин', 'D': '21\\xa0мин', 'E': '20\\xa0мин'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A может построить стену за 40\\xa0минут, а']\nnew_fact = infer_new_fact(selected) # 'Одна минута работы А\\xa0=\\xa01/40'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B может построить стену за 45\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Одна минута работы B\\xa0=\\xa01/45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Одна минута работы А\\xa0=\\xa01/40', 'Одна минута работы B\\xa0=\\xa01/45']\nnew_fact = infer_new_fact(selected) # 'Одна минута работы (A\\xa0+\\xa0B)\\xa0=\\xa01/40\\xa0+\\xa01/45\\xa0=\\xa085/40*45\\xa0=\\xa017/360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Одна минута работы А\\xa0=\\xa01/40', 'Одна минута работы B\\xa0=\\xa01/45', 'Одна минута работы (A\\xa0+\\xa0B)\\xa0=\\xa01/40\\xa0+\\xa01/45\\xa0=\\xa085/40*45\\xa0=\\xa017/360']\nnew_fact = infer_new_fact(selected) # 'Следовательно, (A\\xa0+\\xa0B) выполнят работу вместе за 360/17\\xa0минут\\xa0=\\xa021\\xa03/17\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Одна минута работы А\\xa0=\\xa01/40', 'Одна минута работы B\\xa0=\\xa01/45', 'Одна минута работы (A\\xa0+\\xa0B)\\xa0=\\xa01/40\\xa0+\\xa01/45\\xa0=\\xa085/40*45\\xa0=\\xa017/360', 'Следовательно, (A\\xa0+\\xa0B) выполнят работу вместе за 360/17\\xa0минут\\xa0=\\xa021\\xa03/17\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Примерно 21\\xa0мин'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько времени потребуется на строительство стены, если оба человека будут работать вместе?', 'E) 20\\xa0мин', 'Одна минута работы (A\\xa0+\\xa0B)\\xa0=\\xa01/40\\xa0+\\xa01/45\\xa0=\\xa085/40*45\\xa0=\\xa017/360', 'Следовательно, (A\\xa0+\\xa0B) выполнят работу вместе за 360/17\\xa0минут\\xa0=\\xa021\\xa03/17\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_186_8d53b419be", "context": "", "options": ["A)43 seconds", "B)39 seconds", "C)20 seconds", "D)33 seconds", "E)55 seconds"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The train takes 30 seconds to travel 1 mile, plus 3 seconds for the complete train to pass any point, making a total of 33 seconds.; int1 -> int2: The answer is D);", "textual_logical_units": {"1": "Электропоезд-экспресс въезжает в туннель длиной в 1 милю ровно за три секунды.\nЕсли поезд движется со скоростью 120 миль в час,", "2": "сколько времени ему потребуется, чтобы полностью пройти через туннель?", "3": "A) 43 секунды", "4": "B) 39 секунд", "5": "C) 20 секунд", "6": "D) 33 секунды", "7": "E) 55 секунд", "8": "Поезд проезжает 1 милю за 30 секунд, плюс 3 секунды на то, чтобы весь поезд проехал любую точку. В общей сложности это 33 секунды.", "9": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Электропоезд-экспресс въезжает в туннель длиной в 1\\xa0милю ровно за три секунды.\\nЕсли поезд движется со скоростью 120\\xa0миль в час,']\nquestion = 'сколько времени ему потребуется, чтобы полностью пройти через туннель?'\nchoices = {'A': '43\\xa0секунды', 'B': '39\\xa0секунд', 'C': '20\\xa0секунд', 'D': '33\\xa0секунды', 'E': '55\\xa0секунд'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Электропоезд-экспресс въезжает в туннель длиной в 1\\xa0милю ровно за три секунды.\\nЕсли поезд движется со скоростью 120\\xa0миль в час,', 'сколько времени ему потребуется, чтобы полностью пройти через туннель?']\nnew_fact = infer_new_fact(selected) # 'Поезд проезжает 1\\xa0милю за 30\\xa0секунд, плюс 3\\xa0секунды на то, чтобы весь поезд проехал любую точку. В общей сложности это 33\\xa0секунды.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поезд проезжает 1\\xa0милю за 30\\xa0секунд, плюс 3\\xa0секунды на то, чтобы весь поезд проехал любую точку. В общей сложности это 33\\xa0секунды.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_187_0cf4d408f8", "context": "", "options": ["A)247.67", "B)237.67", "C)227.67", "D)215.67", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent0 -> int1: Explanation:; sent1 & sent2 -> int2: Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.; int2 -> int3: r=I/pt=21.73%; int2 & int3 -> int4: The highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33; int2 & int3 & int4 -> int5: savings would be $20 000 − $19 752.33 = $247.67; int2 & int3 & int4 & int5 & sent2 & sent3 -> int6: Answer: A; int6 -> int7: The answer is A);", "textual_logical_units": {"1": "Продавец получает счет-фактуру на моторную лодку на сумму 20000 долл. США с условиями оплаты 4/30, n/100.", "2": "По какой самой высокой простой процентной ставке он может позволить себе занять деньги, чтобы воспользоваться скидкой и сэкономить?", "3": "A) 247,67", "4": "B) 237,67", "5": "C) 227,67", "6": "D) 215,67", "7": "E) Ничего из вышеперечисленного", "8": "Объяснение:", "9": "Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000 = 800  долл. США, оплатив счет в течение 30 дней с даты его выставления. Ему нужно занять 20000 долл. США - 800 долл. США = 19200 долл. США. Ему следует одолжить эти деньги на 30 день и выплатить их на 100 день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70 дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800 долл. США наличными.", "10": "r = I/pt = 21,73%", "11": "Самая высокая простая процентная ставка, по которой продавец может позволить себе занять деньги, составляет 21,73%. Это безубыточная фрахтовая ставка. Если он может занять деньги, например, по ставке 15%, ему следует это сделать. Ему следует одолжить 19200 долл. США на 70 дней под 15%. Сумма погашения кредита составит 19200(1 + 0,15(70/365)) = 19752,33 долл. США", "12": "Экономия составит 20000 − 19752,33 = 247,67 долл. США", "13": "Ответ: A", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Продавец получает счет-фактуру на моторную лодку на сумму 20000\\xa0долл. США с условиями оплаты 4/30, n/100.']\nquestion = 'По какой самой высокой простой процентной ставке он может позволить себе занять деньги, чтобы воспользоваться скидкой и сэкономить?'\nchoices = {'A': '247,67', 'B': '237,67', 'C': '227,67', 'D': '215,67', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Объяснение:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Продавец получает счет-фактуру на моторную лодку на сумму 20000\\xa0долл. США с условиями оплаты 4/30, n/100.', 'По какой самой высокой простой процентной ставке он может позволить себе занять деньги, чтобы воспользоваться скидкой и сэкономить?']\nnew_fact = infer_new_fact(selected) # 'Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000\\xa0=\\xa0800\\xa0\\xa0долл. США, оплатив счет в течение 30\\xa0дней с даты его выставления. Ему нужно занять 20000\\xa0долл. США\\xa0-\\xa0800\\xa0долл. США\\xa0=\\xa019200\\xa0долл. США. Ему следует одолжить эти деньги на 30\\xa0день и выплатить их на 100\\xa0день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70\\xa0дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800\\xa0долл. США наличными.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000\\xa0=\\xa0800\\xa0\\xa0долл. США, оплатив счет в течение 30\\xa0дней с даты его выставления. Ему нужно занять 20000\\xa0долл. США\\xa0-\\xa0800\\xa0долл. США\\xa0=\\xa019200\\xa0долл. США. Ему следует одолжить эти деньги на 30\\xa0день и выплатить их на 100\\xa0день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70\\xa0дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800\\xa0долл. США наличными.']\nnew_fact = infer_new_fact(selected) # 'r\\xa0=\\xa0I/pt\\xa0=\\xa021,73%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000\\xa0=\\xa0800\\xa0\\xa0долл. США, оплатив счет в течение 30\\xa0дней с даты его выставления. Ему нужно занять 20000\\xa0долл. США\\xa0-\\xa0800\\xa0долл. США\\xa0=\\xa019200\\xa0долл. США. Ему следует одолжить эти деньги на 30\\xa0день и выплатить их на 100\\xa0день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70\\xa0дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800\\xa0долл. США наличными.', 'r\\xa0=\\xa0I/pt\\xa0=\\xa021,73%']\nnew_fact = infer_new_fact(selected) # 'Самая высокая простая процентная ставка, по которой продавец может позволить себе занять деньги, составляет 21,73%. Это безубыточная фрахтовая ставка. Если он может занять деньги, например, по ставке 15%, ему следует это сделать. Ему следует одолжить 19200\\xa0долл. США на 70\\xa0дней под 15%. Сумма погашения кредита составит 19200(1\\xa0+\\xa00,15(70/365))\\xa0=\\xa019752,33\\xa0долл. США'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000\\xa0=\\xa0800\\xa0\\xa0долл. США, оплатив счет в течение 30\\xa0дней с даты его выставления. Ему нужно занять 20000\\xa0долл. США\\xa0-\\xa0800\\xa0долл. США\\xa0=\\xa019200\\xa0долл. США. Ему следует одолжить эти деньги на 30\\xa0день и выплатить их на 100\\xa0день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70\\xa0дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800\\xa0долл. США наличными.', 'r\\xa0=\\xa0I/pt\\xa0=\\xa021,73%', 'Самая высокая простая процентная ставка, по которой продавец может позволить себе занять деньги, составляет 21,73%. Это безубыточная фрахтовая ставка. Если он может занять деньги, например, по ставке 15%, ему следует это сделать. Ему следует одолжить 19200\\xa0долл. США на 70\\xa0дней под 15%. Сумма погашения кредита составит 19200(1\\xa0+\\xa00,15(70/365))\\xa0=\\xa019752,33\\xa0долл. США']\nnew_fact = infer_new_fact(selected) # 'Экономия составит 20000\\xa0−\\xa019752,33\\xa0=\\xa0247,67\\xa0долл. США'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['По какой самой высокой простой процентной ставке он может позволить себе занять деньги, чтобы воспользоваться скидкой и сэкономить?', 'A) 247,67', 'Предположим, продавец воспользуется скидкой наличными в размере 4% от 20000\\xa0=\\xa0800\\xa0\\xa0долл. США, оплатив счет в течение 30\\xa0дней с даты его выставления. Ему нужно занять 20000\\xa0долл. США\\xa0-\\xa0800\\xa0долл. США\\xa0=\\xa019200\\xa0долл. США. Ему следует одолжить эти деньги на 30\\xa0день и выплатить их на 100\\xa0день (день истечения срока оплаты первоначального счетA), в результате чего получится заем на 70\\xa0дней. Проценты, которые он должен быть готов выплатить по займу, не должны превышать скидку 800\\xa0долл. США наличными.', 'r\\xa0=\\xa0I/pt\\xa0=\\xa021,73%', 'Самая высокая простая процентная ставка, по которой продавец может позволить себе занять деньги, составляет 21,73%. Это безубыточная фрахтовая ставка. Если он может занять деньги, например, по ставке 15%, ему следует это сделать. Ему следует одолжить 19200\\xa0долл. США на 70\\xa0дней под 15%. Сумма погашения кредита составит 19200(1\\xa0+\\xa00,15(70/365))\\xa0=\\xa019752,33\\xa0долл. США', 'Экономия составит 20000\\xa0−\\xa019752,33\\xa0=\\xa0247,67\\xa0долл. США']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_188_ab11c58c23", "context": "", "options": ["A)90", "B)105", "C)126", "D)252", "E)525"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 7, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Number of ways to select 5 bottles out of 10= 10!/5!5!= 252; int1 & sent3 & sent7 -> int2: D is the answer; int2 -> int3: The answer is D);", "textual_logical_units": {"1": "В ресторане на столе стоят десять бутылок с лаймовой газировкой.", "2": "Их необходимо подать двум группам посетителей, каждая из которых состоит из 5 человек.", "3": "Сколькими способами можно сформировать эти 2 группы?", "4": "A) 90", "5": "B) 105", "6": "C) 126", "7": "D) 252", "8": "E) 525", "9": "Количество способов выбрать 5 бутылок из 10 = 10!/5!5! = 252", "10": "Ответ — Г", "11": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'В ресторане на столе стоят десять бутылок с лаймовой газировкой.',\n  'Их необходимо подать двум группам посетителей, каждая из которых состоит из 5\\xa0человек.']\nquestion = 'Сколькими способами можно сформировать эти 2\\xa0группы?'\nchoices = {'A': '90', 'B': '105', 'C': '126', 'D': '252', 'E': '525'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В ресторане на столе стоят десять бутылок с лаймовой газировкой.', 'Их необходимо подать двум группам посетителей, каждая из которых состоит из 5\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Количество способов выбрать 5\\xa0бутылок из 10\\xa0=\\xa010!/5!5!\\xa0=\\xa0252'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно сформировать эти 2\\xa0группы?', 'D) 252', 'Количество способов выбрать 5\\xa0бутылок из 10\\xa0=\\xa010!/5!5!\\xa0=\\xa0252']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_189_3aef585190", "context": "", "options": ["A)6.5", "B)7.5", "C)7", "D)6", "E)None of the above"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [1, 2, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 6, 11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent4 -> int1: Let x = amount of corn; sent1 & sent2 & sent3 -> int2: rice/corn=2/5=3/x; int2 & sent1 & sent2 -> int3: 2 × x = 3 × 5; int3 -> int4: 2x = 15; int4 -> int5: x=7.5; int2 & int5 & sent4 & sent6 -> int6: Answer:B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Специальная зерновая смесь содержит рис, пшеницу и", "2": "кукурузу в соотношении 2:3:5.", "3": "Если пакет смеси содержит 3 фунта риса,", "4": "сколько в нем кукурузы?", "5": "A) 6,5", "6": "B) 7,5", "7": "C) 7", "8": "D) 6", "9": "E) Ничего из вышеперечисленного", "10": "Пусть x = количество кукурузы", "11": "Рис/кукуруза = 2/5 = 3/x", "12": "2 × x = 3 × 5", "13": "2x = 15", "14": "x = 7,5", "15": "Ответ: Б", "16": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Специальная зерновая смесь содержит рис, пшеницу и', 'кукурузу в соотношении 2:3:5.', 'Если пакет смеси содержит 3\\xa0фунта риса,']\nquestion = 'сколько в нем кукурузы?'\nchoices = {'A': '6,5', 'B': '7,5', 'C': '7', 'D': '6', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['сколько в нем кукурузы?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0=\\xa0количество кукурузы'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Специальная зерновая смесь содержит рис, пшеницу и', 'кукурузу в соотношении 2:3:5.', 'Если пакет смеси содержит 3\\xa0фунта риса,']\nnew_fact = infer_new_fact(selected) # 'Рис/кукуруза\\xa0=\\xa02/5\\xa0=\\xa03/x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Специальная зерновая смесь содержит рис, пшеницу и', 'кукурузу в соотношении 2:3:5.', 'Рис/кукуруза\\xa0=\\xa02/5\\xa0=\\xa03/x']\nnew_fact = infer_new_fact(selected) # '2\\xa0×\\xa0x\\xa0=\\xa03\\xa0×\\xa05'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2\\xa0×\\xa0x\\xa0=\\xa03\\xa0×\\xa05']\nnew_fact = infer_new_fact(selected) # '2x\\xa0=\\xa015'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0=\\xa015']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa07,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько в нем кукурузы?', 'B) 7,5', 'Рис/кукуруза\\xa0=\\xa02/5\\xa0=\\xa03/x', 'x\\xa0=\\xa07,5']\nnew_fact = infer_new_fact(selected) # 'Ответ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_190_e947705578", "context": "", "options": ["A)500", "B)600", "C)750", "D)800", "E)900"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 5], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent5 -> int1: The cost of adding one soda and one energy bar is 150 cents. We need to purchase six sodas and seven bars. We know two sodas and three bars costs 300 cents, so to that purchase, we'd need to add four sodas and four bars - or four sets of items. So, we take the initial 300 + (4 * 150) = 300+600 = 900.; int1 & sent10 & sent5 -> int2: Answer - E.; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "Вы можете купить одну бутылку газировки и", "2": "два энергетических батончика за 150 центов или две бутылки газировки и", "3": "три энергетических батончика за 300\nцентов.", "4": "При условии, что стоимость этих товаров не изменится,", "5": "рассчитайте стоимость шести бутылок газировки и семи батончиков в центах.", "6": "A) 500", "7": "B) 600", "8": "C) 750", "9": "D) 800", "10": "E) 900", "11": "Стоимость одной дополнительной бутылки газировки и одного энергетического батончика составляет 150 центов. Требуется купить шесть бутылок газировки и семь батончиков. Мы знаем, что две бутылки газировки и три батончика стоят 300 центов, поэтому к ним нужно добавить четыре газированных напитка и четыре батончика — или четыре набора товаров. Итак, берем начальные 300 + (4*150) = 300+600 = 900.", "12": "Ответ — Д.", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Вы можете купить одну бутылку газировки и',\n  'два энергетических батончика за 150\\xa0центов или две бутылки газировки и',\n  'три энергетических батончика за 300\\nцентов.',\n  'При условии, что стоимость этих товаров не изменится,']\nquestion = 'рассчитайте стоимость шести бутылок газировки и семи батончиков в центах.'\nchoices = {'A': '500', 'B': '600', 'C': '750', 'D': '800', 'E': '900'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Вы можете купить одну бутылку газировки и', 'два энергетических батончика за 150\\xa0центов или две бутылки газировки и', 'три энергетических батончика за 300\\nцентов.', 'рассчитайте стоимость шести бутылок газировки и семи батончиков в центах.']\nnew_fact = infer_new_fact(selected) # 'Стоимость одной дополнительной бутылки газировки и одного энергетического батончика составляет 150\\xa0центов. Требуется купить шесть бутылок газировки и семь батончиков. Мы знаем, что две бутылки газировки и три батончика стоят 300\\xa0центов, поэтому к ним нужно добавить четыре газированных напитка и четыре батончика\\xa0— или четыре набора товаров. Итак, берем начальные 300\\xa0+\\xa0(4*150)\\xa0=\\xa0300+600\\xa0=\\xa0900.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['рассчитайте стоимость шести бутылок газировки и семи батончиков в центах.', 'E) 900', 'Стоимость одной дополнительной бутылки газировки и одного энергетического батончика составляет 150\\xa0центов. Требуется купить шесть бутылок газировки и семь батончиков. Мы знаем, что две бутылки газировки и три батончика стоят 300\\xa0центов, поэтому к ним нужно добавить четыре газированных напитка и четыре батончика\\xa0— или четыре набора товаров. Итак, берем начальные 300\\xa0+\\xa0(4*150)\\xa0=\\xa0300+600\\xa0=\\xa0900.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_191_6dcf2b0289", "context": "", "options": ["A)Rs. 6", "B)Rs. 7.2", "C)Rs. 5.6", "D)Rs. 8", "E)None of these"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2, 3, 6], "consequent": 12}, {"antecedents": [2, 3, 5, 12], "consequent": 13}, {"antecedents": [2, 3, 4, 13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [13, 14], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [6, 8, 12, 13, 14, 16, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent6 -> int1: The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.; int1 & sent2 & sent3 & sent5 -> int2: Total income (including 25% profit) = 8000 *K *1.25; int2 & sent2 & sent3 & sent4 -> int3: This same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.; sent0 -> int4: Thus,; int2 & int3 -> int5: 8000 *K *1.25 = 7200 *10; int5 -> int6: K = Rs. 7.2. [90% of 8000 = 7200]; int1 & int2 & int3 & int5 & int6 & sent6 & sent8 -> int7: Answer: Option B; int7 -> int8: The answer is B);", "textual_logical_units": {"1": "Компания производит ручки для письма очень высокого качества.", "2": "Компания знает, что в среднем 10% выпускаемых ручек всегда дефектные, поэтому перед упаковкой их отбраковывают.", "3": "Компания обещает поставить своему оптовику 7200 ручек по цене", "4": "10 рупий каждая.", "5": "По оценкам, общая прибыль от всех произведенных ручек составит 25%.", "6": "Какова стоимость производства каждой ручки?", "7": "A) руп. 6", "8": "B) руп. 7,2", "9": "C) руп. 5,6", "10": "D) руп. 8", "11": "E) Ничего из вышеперечисленного", "12": "Компания способна поставить 90% произведенных ручек. Для поставки 7200 ручек необходимо изготовить 8000 ручек, поскольку 10% из них окажутся дефектными. Пусть K — цена производства каждой ручки.", "13": "Общий доход (включая 25% прибыли) = 8000*K*1,25", "14": "Этот доход достигается за счет продажи 90% изготовленных ручек по цене 10 рупий, что равно 7200*10.", "15": "Следовательно,", "16": "8000*K*1,25 = 7200*10", "17": "K = 7.2 рупии. [90% от 8000 = 7200]", "18": "Ответ: Вариант Б", "19": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Компания производит ручки для письма очень высокого качества.',\n  'Компания знает, что в среднем 10%\\xa0выпускаемых ручек всегда дефектные, поэтому перед упаковкой их отбраковывают.',\n  'Компания обещает поставить своему оптовику 7200\\xa0ручек по цене',\n  '10\\xa0рупий каждая.',\n  'По оценкам, общая прибыль от всех произведенных ручек составит 25%.']\nquestion = 'Какова стоимость производства каждой ручки?'\nchoices = {'A': 'руп. 6', 'B': 'руп. 7,2', 'C': 'руп. 5,6', 'D': 'руп. 8', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Компания знает, что в среднем 10%\\xa0выпускаемых ручек всегда дефектные, поэтому перед упаковкой их отбраковывают.', 'Компания обещает поставить своему оптовику 7200\\xa0ручек по цене', 'Какова стоимость производства каждой ручки?']\nnew_fact = infer_new_fact(selected) # 'Компания способна поставить 90%\\xa0произведенных ручек. Для поставки 7200\\xa0ручек необходимо изготовить 8000\\xa0ручек, поскольку 10% из них окажутся дефектными. Пусть K\\xa0— цена производства каждой ручки.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания знает, что в среднем 10%\\xa0выпускаемых ручек всегда дефектные, поэтому перед упаковкой их отбраковывают.', 'Компания обещает поставить своему оптовику 7200\\xa0ручек по цене', 'По оценкам, общая прибыль от всех произведенных ручек составит 25%.', 'Компания способна поставить 90%\\xa0произведенных ручек. Для поставки 7200\\xa0ручек необходимо изготовить 8000\\xa0ручек, поскольку 10% из них окажутся дефектными. Пусть K\\xa0— цена производства каждой ручки.']\nnew_fact = infer_new_fact(selected) # 'Общий доход (включая 25%\\xa0прибыли)\\xa0=\\xa08000*K*1,25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Компания знает, что в среднем 10%\\xa0выпускаемых ручек всегда дефектные, поэтому перед упаковкой их отбраковывают.', 'Компания обещает поставить своему оптовику 7200\\xa0ручек по цене', '10\\xa0рупий каждая.', 'Общий доход (включая 25%\\xa0прибыли)\\xa0=\\xa08000*K*1,25']\nnew_fact = infer_new_fact(selected) # 'Этот доход достигается за счет продажи 90%\\xa0изготовленных ручек по цене 10\\xa0рупий, что равно 7200*10.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Следовательно,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общий доход (включая 25%\\xa0прибыли)\\xa0=\\xa08000*K*1,25', 'Этот доход достигается за счет продажи 90%\\xa0изготовленных ручек по цене 10\\xa0рупий, что равно 7200*10.']\nnew_fact = infer_new_fact(selected) # '8000*K*1,25\\xa0=\\xa07200*10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8000*K*1,25\\xa0=\\xa07200*10']\nnew_fact = infer_new_fact(selected) # 'K\\xa0= 7.2\\xa0рупии. [90% от 8000\\xa0=\\xa07200]'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова стоимость производства каждой ручки?', 'B) руп. 7,2', 'Компания способна поставить 90%\\xa0произведенных ручек. Для поставки 7200\\xa0ручек необходимо изготовить 8000\\xa0ручек, поскольку 10% из них окажутся дефектными. Пусть K\\xa0— цена производства каждой ручки.', 'Общий доход (включая 25%\\xa0прибыли)\\xa0=\\xa08000*K*1,25', 'Этот доход достигается за счет продажи 90%\\xa0изготовленных ручек по цене 10\\xa0рупий, что равно 7200*10.', '8000*K*1,25\\xa0=\\xa07200*10', 'K\\xa0= 7.2\\xa0рупии. [90% от 8000\\xa0=\\xa07200]']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_192_1b11c4ec53", "context": "", "options": ["A)12", "B)24", "C)42", "D)48", "E)49"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [8, 9, 10, 11, 14], "consequent": 15}, {"antecedents": [2, 4, 9, 10, 11, 12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let the ten's digit be x.; sent2 -> int2: Then, unit's digit = 2x.; int2 & sent1 & sent2 -> int3: Number = 10x + 2x = 12x;; int1 & int2 & int3 -> int4: Sum of digits = x + 2x = 3x.; int3 & int4 -> int5: Therefore,  12x - 3x = 18; int5 -> int6: ‹=› 9x = 18; int6 -> int7: ‹=› x = 2.; int1 & int2 & int3 & int4 & int7 -> int8: Hence, required number = 12x = 24.; int2 & int3 & int4 & int5 & int7 & int8 & sent2 & sent4 -> int9: Answer B; int9 -> int10: The answer is B);", "textual_logical_units": {"1": "Двухзначное число больше суммы цифр этого числа на 18.", "2": "Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?", "3": "A) 12", "4": "B) 24", "5": "C) 42", "6": "D) 48", "7": "E) 49", "8": "Пусть x — цифра в разряде десятков.", "9": "Тогда цифра в разряде единиц = 2x.", "10": "Число = 10x+2x = 12x;", "11": "Сумма цифр = x+2x = 3x.", "12": "Следовательно, 12x - 3x = 18", "13": "‹=› 9x = 18", "14": "‹=› x = 2.", "15": "Следовательно, требуемое число = 12x = 24.", "16": "Ответ — Б", "17": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Двухзначное число больше суммы цифр этого числа на 18.']\nquestion = 'Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?'\nchoices = {'A': '12', 'B': '24', 'C': '42', 'D': '48', 'E': '49'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— цифра в разряде десятков.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?']\nnew_fact = infer_new_fact(selected) # 'Тогда цифра в разряде единиц\\xa0=\\xa02x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Двухзначное число больше суммы цифр этого числа на 18.', 'Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?', 'Тогда цифра в разряде единиц\\xa0=\\xa02x.']\nnew_fact = infer_new_fact(selected) # 'Число\\xa0=\\xa010x+2x\\xa0=\\xa012x;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— цифра в разряде десятков.', 'Тогда цифра в разряде единиц\\xa0=\\xa02x.', 'Число\\xa0=\\xa010x+2x\\xa0=\\xa012x;']\nnew_fact = infer_new_fact(selected) # 'Сумма цифр\\xa0=\\xa0x+2x\\xa0=\\xa03x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Число\\xa0=\\xa010x+2x\\xa0=\\xa012x;', 'Сумма цифр\\xa0=\\xa0x+2x\\xa0=\\xa03x.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, 12x\\xa0-\\xa03x\\xa0=\\xa018'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, 12x\\xa0-\\xa03x\\xa0=\\xa018']\nnew_fact = infer_new_fact(selected) # '‹=›\\xa09x\\xa0=\\xa018'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['‹=›\\xa09x\\xa0=\\xa018']\nnew_fact = infer_new_fact(selected) # '‹=›\\xa0x\\xa0=\\xa02.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— цифра в разряде десятков.', 'Тогда цифра в разряде единиц\\xa0=\\xa02x.', 'Число\\xa0=\\xa010x+2x\\xa0=\\xa012x;', 'Сумма цифр\\xa0=\\xa0x+2x\\xa0=\\xa03x.', '‹=›\\xa0x\\xa0=\\xa02.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, требуемое число\\xa0=\\xa012x\\xa0=\\xa024.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если цифра в разряде единиц вдвое больше цифры в разряде десятков, что это за число?', 'B) 24', 'Тогда цифра в разряде единиц\\xa0=\\xa02x.', 'Число\\xa0=\\xa010x+2x\\xa0=\\xa012x;', 'Сумма цифр\\xa0=\\xa0x+2x\\xa0=\\xa03x.', 'Следовательно, 12x\\xa0-\\xa03x\\xa0=\\xa018', '‹=›\\xa0x\\xa0=\\xa02.', 'Следовательно, требуемое число\\xa0=\\xa012x\\xa0=\\xa024.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_193_95b715d8c5", "context": "", "options": ["A)L(x,y) = R(x,y)", "B)L(x,y) ≠ R(x,y)", "C)L(x,y) < R(x,y)", "D)L(x,y) < R(x,y)", "E)None"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 2, 3, 4], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [12, 13, 14, 15], "consequent": 16}, {"antecedents": [5, 9, 12, 13, 14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: x – 1≤ [x] ≤ x; sent1 & sent2 & sent3 & sent4 -> int2: 2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y; int2 -> int3: => a – 3 ≤ L ≤ a; int2 & int3 -> int4: 2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y; int2 & int3 & int4 -> int5: => a – 2 ≤ R ≤ a; int2 & int3 & int4 & int5 -> int6: Therefore, L ≤ R.; int2 & int3 & int4 & int5 & int6 & sent5 & sent9 -> int7: Answer : D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Предположим, что для любого действительного числа x", "2": "[x] обозначает наибольшее целое число, меньшее или равное x.", "3": "Пусть L(x,y) = [x] + [y] + [x + y] и", "4": "R(x,y) = [2x] + [2y].", "5": "Тогда невозможно найти два положительных действительных числа x и y, для которых", "6": "A) L(x,y) = R(x,y)", "7": "B) L(x,y) ≠ R(x,y)", "8": "C) L(x,y) < R(x,y)", "9": "D) L(x,y) ≤ R(x,y)", "10": "E) Ничего из вышеперечисленного", "11": "x - 1 ≤ [x] ≤ x", "12": "2x + 2y - 3 ≤ L(x, y) ≤ 2x + 2y", "13": "=> a - 3 ≤ L ≤ a", "14": "2x + 2y -2 ≤ L(x, y) ≤ 2x + 2y", "15": "=> a - 2 ≤ R ≤ a", "16": "Следовательно, L ≤ R.", "17": "Ответ: D", "18": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Предположим, что для любого действительного числа x',\n  '[x] обозначает наибольшее целое число, меньшее или равное x.',\n  'Пусть L(x,y)\\xa0=\\xa0[x]\\xa0+\\xa0[y]\\xa0+\\xa0[x\\xa0+\\xa0y] и',\n  'R(x,y)\\xa0=\\xa0[2x]\\xa0+\\xa0[2y].']\nquestion = 'Тогда невозможно найти два положительных действительных числа x и y, для которых'\nchoices = {'A': 'L(x,y)\\xa0=\\xa0R(x,y)', 'B': 'L(x,y)\\xa0≠\\xa0R(x,y)', 'C': 'L(x,y)\\xa0<\\xa0R(x,y)', 'D': 'L(x,y)\\xa0≤\\xa0R(x,y)', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Предположим, что для любого действительного числа x', '[x] обозначает наибольшее целое число, меньшее или равное x.']\nnew_fact = infer_new_fact(selected) # 'x\\xa0-\\xa01\\xa0≤\\xa0[x]\\xa0≤\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Предположим, что для любого действительного числа x', '[x] обозначает наибольшее целое число, меньшее или равное x.', 'Пусть L(x,y)\\xa0=\\xa0[x]\\xa0+\\xa0[y]\\xa0+\\xa0[x\\xa0+\\xa0y] и', 'R(x,y)\\xa0=\\xa0[2x]\\xa0+\\xa0[2y].']\nnew_fact = infer_new_fact(selected) # '2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y']\nnew_fact = infer_new_fact(selected) # '=>\\xa0a\\xa0-\\xa03\\xa0≤\\xa0L\\xa0≤\\xa0a'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa03\\xa0≤\\xa0L\\xa0≤\\xa0a']\nnew_fact = infer_new_fact(selected) # '2x\\xa0+\\xa02y\\xa0-2\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa03\\xa0≤\\xa0L\\xa0≤\\xa0a', '2x\\xa0+\\xa02y\\xa0-2\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y']\nnew_fact = infer_new_fact(selected) # '=>\\xa0a\\xa0-\\xa02\\xa0≤\\xa0R\\xa0≤\\xa0a'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa03\\xa0≤\\xa0L\\xa0≤\\xa0a', '2x\\xa0+\\xa02y\\xa0-2\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa02\\xa0≤\\xa0R\\xa0≤\\xa0a']\nnew_fact = infer_new_fact(selected) # 'Следовательно, L\\xa0≤\\xa0R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда невозможно найти два положительных действительных числа x и y, для которых', 'D) L(x,y)\\xa0≤\\xa0R(x,y)', '2x\\xa0+\\xa02y\\xa0-\\xa03\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa03\\xa0≤\\xa0L\\xa0≤\\xa0a', '2x\\xa0+\\xa02y\\xa0-2\\xa0≤\\xa0L(x, y)\\xa0≤\\xa02x\\xa0+\\xa02y', '=>\\xa0a\\xa0-\\xa02\\xa0≤\\xa0R\\xa0≤\\xa0a', 'Следовательно, L\\xa0≤\\xa0R.']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_194_4208ded603", "context": "", "options": ["A)After 6 minutes", "B)After 12 minutes", "C)After 18 minutes", "D)After 24 minutes", "E)none"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [1, 3, 9], "consequent": 10}, {"antecedents": [1, 3, 5, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: LCM of 36,40,48 is 720; int1 & sent1 & sent3 -> int2: 720/60=12; int1 & int2 & sent1 & sent3 & sent5 -> int3: ANSWER:B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Три колокола звонят с интервалом 36 секунд, 40 секунд и 48 секунд соответственно.", "2": "Они начинают звонить вместе в определенное время.", "3": "Когда они снова будут звонить вместе?", "4": "A) Через 6 минут", "5": "B) Через 12 минут", "6": "C) Через 18 минут", "7": "D) Через 24 минуты", "8": "E) Ничего из вышеперечисленного", "9": "Наименьшее общее кратное 36,40,48 = 720", "10": "720/60 = 12", "11": "ОТВЕТ: Б", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Три колокола звонят с интервалом 36\\xa0секунд, 40\\xa0секунд и 48\\xa0секунд соответственно.', 'Они начинают звонить вместе в определенное время.']\nquestion = 'Когда они снова будут звонить вместе?'\nchoices = {'A': 'Через 6\\xa0минут', 'B': 'Через 12\\xa0минут', 'C': 'Через 18\\xa0минут', 'D': 'Через 24\\xa0минуты', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Три колокола звонят с интервалом 36\\xa0секунд, 40\\xa0секунд и 48\\xa0секунд соответственно.', 'Когда они снова будут звонить вместе?']\nnew_fact = infer_new_fact(selected) # 'Наименьшее общее кратное 36,40,48\\xa0=\\xa0720'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Три колокола звонят с интервалом 36\\xa0секунд, 40\\xa0секунд и 48\\xa0секунд соответственно.', 'Когда они снова будут звонить вместе?', 'Наименьшее общее кратное 36,40,48\\xa0=\\xa0720']\nnew_fact = infer_new_fact(selected) # '720/60\\xa0=\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Три колокола звонят с интервалом 36\\xa0секунд, 40\\xa0секунд и 48\\xa0секунд соответственно.', 'Когда они снова будут звонить вместе?', 'B) Через 12\\xa0минут', 'Наименьшее общее кратное 36,40,48\\xa0=\\xa0720', '720/60\\xa0=\\xa012']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_195_cd8c633858", "context": "", "options": ["A)21", "B)22", "C)20", "D)23", "E)24"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 4, 9, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent3 -> int1: direct proportion x1/y1=x2/y2; int1 & sent1 & sent2 & sent3 -> int2: 14/10=15/x; int2 -> int3: (14/10) 15=x; int3 -> int4: 21 = x; int1 & int2 & int4 & sent3 & sent4 -> int5: Answer:A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Электрический столб высотой 14 метров", "2": "отбрасывает тень длиной 10 метров.", "3": "Определите высоту дерева, которое отбрасывает тень длиной 15 метров в аналогичных условиях.", "4": "A) 21", "5": "B) 22", "6": "C) 20", "7": "D) 23", "8": "E) 24", "9": "Прямая пропорция x1/y1 = x2/y2", "10": "14/10 = 15/x", "11": "(14/10)15 = x", "12": "21 = x", "13": "Ответ: А", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Электрический столб высотой 14\\xa0метров', 'отбрасывает тень длиной 10\\xa0метров.']\nquestion = 'Определите высоту дерева, которое отбрасывает тень длиной 15\\xa0метров в аналогичных условиях.'\nchoices = {'A': '21', 'B': '22', 'C': '20', 'D': '23', 'E': '24'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Определите высоту дерева, которое отбрасывает тень длиной 15\\xa0метров в аналогичных условиях.']\nnew_fact = infer_new_fact(selected) # 'Прямая пропорция x1/y1\\xa0=\\xa0x2/y2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Электрический столб высотой 14\\xa0метров', 'отбрасывает тень длиной 10\\xa0метров.', 'Определите высоту дерева, которое отбрасывает тень длиной 15\\xa0метров в аналогичных условиях.', 'Прямая пропорция x1/y1\\xa0=\\xa0x2/y2']\nnew_fact = infer_new_fact(selected) # '14/10\\xa0=\\xa015/x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['14/10\\xa0=\\xa015/x']\nnew_fact = infer_new_fact(selected) # '(14/10)15\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(14/10)15\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # '21\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Определите высоту дерева, которое отбрасывает тень длиной 15\\xa0метров в аналогичных условиях.', 'A) 21', 'Прямая пропорция x1/y1\\xa0=\\xa0x2/y2', '14/10\\xa0=\\xa015/x', '21\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # 'Ответ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_196_ac0aa42409", "context": "", "options": ["A)22 dollars", "B)15 dollars", "C)20 dollars", "D)18 dollars", "E)10 dollars"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: He cost is equal to 3 dollars for each letter in the fruits name.; int1 -> int2: The answer is B);", "textual_logical_units": {"1": "В моем любимом фруктовом киоске", "2": "апельсин стоит 18 долл. США,", "3": "ананас — 27 долл. США,", "4": "а виноград — 15 долл. США.", "5": "Используя ту же логику, можете ли вы сказать, сколько стоит манго?", "6": "A) 22 долл. США", "7": "B) 15 долл. США", "8": "C) 20 долл. США", "9": "D) 18 долл. США", "10": "E) 10 долл. США", "11": "Стоимость равна 3 долл. США за каждую букву в названии фрукта.", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['В моем любимом фруктовом киоске', 'апельсин стоит 18\\xa0долл. США,', 'ананас\\xa0— 27\\xa0долл. США,', 'а виноград\\xa0— 15\\xa0долл. США.']\nquestion = 'Используя ту же логику, можете ли вы сказать, сколько стоит манго?'\nchoices = {'A': '22\\xa0долл. США', 'B': '15\\xa0долл. США', 'C': '20\\xa0долл. США', 'D': '18\\xa0долл. США', 'E': '10\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['апельсин стоит 18\\xa0долл. США,', 'ананас\\xa0— 27\\xa0долл. США,', 'а виноград\\xa0— 15\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Стоимость равна 3\\xa0долл. США за каждую букву в названии фрукта.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Стоимость равна 3\\xa0долл. США за каждую букву в названии фрукта.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_197_a3a54022e0", "context": "", "options": ["A)(ay−by)/2", "B)(ab−ay)/2", "C)(by−ay)/2", "D)(ay+by)/x", "E)(a−b)/2y"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [2, 5, 8, 9], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: We must plug in the three points that satisfy y<0<b<x<a.; int1 & sent1 & sent2 -> int2: Only C satisfies the area of a triangle.; sent0 -> int3: Answer:; int1 & int2 & sent2 & sent5 -> int4: C. (by−ay)/2; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "В координатной плоскости вершины треугольника находятся в точках (a,0), (b,0) и (x,y).", "2": "Если a>x>b>0>y, какой из перечисленных вариантов соответствует площади этого треугольника?", "3": "A) (ay - by)/2", "4": "B) (ab - ay)/2", "5": "C) (by - ay)/2", "6": "D) (ay + by)/x", "7": "E) (а - b)/2y", "8": "Необходимо соединить три точки, удовлетворяющие условию y<0<b<x<a.", "9": "Только вариант В удовлетворяет площади треугольника.", "10": "Ответ:", "11": "В. (by - ay)/2", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['В координатной плоскости вершины треугольника находятся в точках (a,0), (b,0) и (x,y).']\nquestion = 'Если a>x>b>0>y, какой из перечисленных вариантов соответствует площади этого треугольника?'\nchoices = {'A': '(ay\\xa0-\\xa0by)/2', 'B': '(ab\\xa0-\\xa0ay)/2', 'C': '(by\\xa0-\\xa0ay)/2', 'D': '(ay\\xa0+\\xa0by)/x', 'E': '(а\\xa0-\\xa0b)/2y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если a>x>b>0>y, какой из перечисленных вариантов соответствует площади этого треугольника?']\nnew_fact = infer_new_fact(selected) # 'Необходимо соединить три точки, удовлетворяющие условию y<0<b<x<a.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В координатной плоскости вершины треугольника находятся в точках (a,0), (b,0) и (x,y).', 'Если a>x>b>0>y, какой из перечисленных вариантов соответствует площади этого треугольника?', 'Необходимо соединить три точки, удовлетворяющие условию y<0<b<x<a.']\nnew_fact = infer_new_fact(selected) # 'Только вариант В удовлетворяет площади треугольника.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Ответ:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если a>x>b>0>y, какой из перечисленных вариантов соответствует площади этого треугольника?', 'C) (by\\xa0-\\xa0ay)/2', 'Необходимо соединить три точки, удовлетворяющие условию y<0<b<x<a.', 'Только вариант В удовлетворяет площади треугольника.']\nnew_fact = infer_new_fact(selected) # 'В. (by\\xa0-\\xa0ay)/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В. (by\\xa0-\\xa0ay)/2']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_198_6d706b8a47", "context": "", "options": ["A)80 kmph", "B)50 kmph", "C)120 kmph", "D)70 kmph", "E)80 kmph"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: 20 x 60 = 10 x S2; int1 -> int2: S2 = 120 kmph; int2 & sent3 & sent6 -> int3: Answer: Option C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "На скорости 60 км/ч автомобиль преодолевает некоторое расстояние за 20 часов.", "2": "Если такое же расстояние необходимо преодолеть за 10 часов,", "3": "какую скорость нужно набрать автомобилю?", "4": "A) 80 км/ч", "5": "B) 50 км/ч", "6": "C) 120 км/ч", "7": "D) 70 км/ч", "8": "E) 80 км/ч", "9": "20 x 60 = 10 x S2", "10": "S2 = 120 км/ч", "11": "Ответ: Вариант В", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['На скорости 60\\xa0км/ч автомобиль преодолевает некоторое расстояние за 20\\xa0часов.', 'Если такое же расстояние необходимо преодолеть за 10\\xa0часов,']\nquestion = 'какую скорость нужно набрать автомобилю?'\nchoices = {'A': '80\\xa0км/ч', 'B': '50\\xa0км/ч', 'C': '120\\xa0км/ч', 'D': '70\\xa0км/ч', 'E': '80\\xa0км/ч'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['На скорости 60\\xa0км/ч автомобиль преодолевает некоторое расстояние за 20\\xa0часов.', 'Если такое же расстояние необходимо преодолеть за 10\\xa0часов,']\nnew_fact = infer_new_fact(selected) # '20\\xa0x\\xa060\\xa0=\\xa010\\xa0x\\xa0S2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20\\xa0x\\xa060\\xa0=\\xa010\\xa0x\\xa0S2']\nnew_fact = infer_new_fact(selected) # 'S2\\xa0=\\xa0120\\xa0км/ч'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какую скорость нужно набрать автомобилю?', 'C) 120\\xa0км/ч', 'S2\\xa0=\\xa0120\\xa0км/ч']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_199_eccd8bdd22", "context": "", "options": ["A)1/18", "B)1/9", "C)23/90", "D)5/18", "E)13/45"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 15}, {"antecedents": [5, 6], "consequent": 16}, {"antecedents": [7, 8], "consequent": 17}, {"antecedents": [15, 16, 17], "consequent": 18}, {"antecedents": [9, 10, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent3 & sent4 -> int1: Prob(Alan) = 1/5; sent5 & sent6 -> int2: Prob(Roger) without cheating = 2/3-1 = 1/3; sent7 & sent8 -> int3: Prob(Peter) = 5/6; int1 & int2 & int3 -> int4: Total Probability = 1/5*1/3*/5/6 = 1/18; int4 & sent10 & sent9 -> int5: Answer is A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Три друга Андрей, Роман и", "2": "Петр пытаются ответить на вопрос на экзамене.", "3": "Андрей пытается случайным образом угадать ответ", "4": "с вероятностью правильной догадки 1/5.", "5": "Роман жульничает, подглядывая в листок сидящего перед ним студента", "6": "с вероятностью правильного ответа 2/3.", "7": "А Петр старательно выполняет все вычисления, а затем отмечает ответ", "8": "с вероятностью 5/6, что он окажется правильным.", "9": "Какова вероятность того, что на вопрос будет дан правильный ответ, но не с помощью обмана?", "10": "A) 1/18", "11": "B) 1/9", "12": "C) 23/90", "13": "D) 5/18", "14": "E) 13/45", "15": "Вер.(Андрей) = 1/5", "16": "Вер.(Роман) без обмана = 2/3 - 1 = 1/3", "17": "Вер.(Петр) = 5/6", "18": "Общая вероятность = 1/5*1/3*/5/6 = 1/18", "19": "Ответ — A", "20": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Три друга Андрей, Роман и',\n  'Петр пытаются ответить на вопрос на экзамене.',\n  'Андрей пытается случайным образом угадать ответ',\n  'с вероятностью правильной догадки 1/5.',\n  'Роман жульничает, подглядывая в листок сидящего перед ним студента',\n  'с вероятностью правильного ответа 2/3.',\n  'А Петр старательно выполняет все вычисления, а затем отмечает ответ',\n  'с вероятностью 5/6, что он окажется правильным.']\nquestion = 'Какова вероятность того, что на вопрос будет дан правильный ответ, но не с помощью обмана?'\nchoices = {'A': '1/18', 'B': '1/9', 'C': '23/90', 'D': '5/18', 'E': '13/45'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Андрей пытается случайным образом угадать ответ', 'с вероятностью правильной догадки 1/5.']\nnew_fact = infer_new_fact(selected) # 'Вер.(Андрей)\\xa0=\\xa01/5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Роман жульничает, подглядывая в листок сидящего перед ним студента', 'с вероятностью правильного ответа 2/3.']\nnew_fact = infer_new_fact(selected) # 'Вер.(Роман) без обмана\\xa0=\\xa02/3\\xa0-\\xa01\\xa0=\\xa01/3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['А Петр старательно выполняет все вычисления, а затем отмечает ответ', 'с вероятностью 5/6, что он окажется правильным.']\nnew_fact = infer_new_fact(selected) # 'Вер.(Петр)\\xa0=\\xa05/6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вер.(Андрей)\\xa0=\\xa01/5', 'Вер.(Роман) без обмана\\xa0=\\xa02/3\\xa0-\\xa01\\xa0=\\xa01/3', 'Вер.(Петр)\\xa0=\\xa05/6']\nnew_fact = infer_new_fact(selected) # 'Общая вероятность\\xa0=\\xa01/5*1/3*/5/6\\xa0=\\xa01/18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова вероятность того, что на вопрос будет дан правильный ответ, но не с помощью обмана?', 'A) 1/18', 'Общая вероятность\\xa0=\\xa01/5*1/3*/5/6\\xa0=\\xa01/18']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_200_a3f637cf54", "context": "", "options": ["A)10%", "B)12%", "C)6%", "D)8%", "E)4%"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 5, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: 5000 = 72(100/R)2; int1 -> int2: 5 R2 = 720 => R = 12; int1 & int2 & sent3 & sent5 -> int3: Answer: Option B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Разница между простым и сложным процентом", "2": "по одной и той же ставке на 5000 рупий в течение двух лет составляет 72 рупии.", "3": "Чему равна процентная ставка?", "4": "A) 10%", "5": "B) 12%", "6": "C) 6%", "7": "D) 8%", "8": "E) 4%", "9": "5000 = 72(100/R)2", "10": "5R2 = 720 => R = 12", "11": "Ответ: Вариант Б", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Разница между простым и сложным процентом', 'по одной и той же ставке на 5000\\xa0рупий в течение двух лет составляет 72\\xa0рупии.']\nquestion = 'Чему равна процентная ставка?'\nchoices = {'A': '10%', 'B': '12%', 'C': '6%', 'D': '8%', 'E': '4%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['по одной и той же ставке на 5000\\xa0рупий в течение двух лет составляет 72\\xa0рупии.']\nnew_fact = infer_new_fact(selected) # '5000\\xa0=\\xa072(100/R)2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5000\\xa0=\\xa072(100/R)2']\nnew_fact = infer_new_fact(selected) # '5R2\\xa0=\\xa0720 =>\\xa0R\\xa0=\\xa012'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чему равна процентная ставка?', 'B) 12%', '5000\\xa0=\\xa072(100/R)2', '5R2\\xa0=\\xa0720 =>\\xa0R\\xa0=\\xa012']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_201_419c3aa516", "context": "", "options": ["A)50", "B)70", "C)75", "D)100", "E)125"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [2], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [10, 11, 12, 13], "consequent": 14}, {"antecedents": [10, 11, 13], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [4, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: n(Total) = 250; int1 & sent3 -> int2: n(only worm) = 125(50% of total); sent2 -> int3: n(only worm ) = 2.5 * n(both worm and virus); int2 & int3 -> int4: n(both worn and virus) = 125/2.5 = 50; int1 & int2 & int3 & int4 -> int5: n(Total) = n(only worm) + n(both worm and virus) + n(only virus); int1 & int2 & int4 -> int6: n(only virus) = 250-125-50 = 75; int6 -> int7: Hence, the files not infected by worm is n(Only virus) = 75; int7 & sent4 -> int8: ANSWER :(Option C); int8 -> int9: The answer is C);", "textual_logical_units": {"1": "Все 250 файлов на жестком диске Сергея заражены вирусом или червем, либо и тем, и другим.", "2": "Количество файлов, зараженных только червем, в 2,5 раза превышает количество файлов, зараженных вирусом и червем.", "3": "Если 50% файлов не заражены вирусом,", "4": "сколько файлов Сергея НЕ заражено червем?", "5": "A) 50", "6": "B) 70", "7": "C) 75", "8": "D) 100", "9": "E) 125", "10": "n(общее количество) = 250", "11": "n(только червь) = 125(50% от общего количествA)", "12": "n(только червь) = 2,5*n(и червь, и вирус)", "13": "n(и червь, и вирус) = 125/2,5 = 50", "14": "n(общее количество) = n(только червь) + n(и червь, и вирус) + n(только вирус)", "15": "n(только вирус) = 250 - 125 - 50 = 75", "16": "Следовательно, количество файлов, не зараженных червем, равно n(только вирус) = 75", "17": "ОТВЕТ: (вариант C)", "18": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Все 250\\xa0файлов на жестком диске Сергея заражены вирусом или червем, либо и тем, и другим.',\n  'Количество файлов, зараженных только червем, в 2,5\\xa0раза превышает количество файлов, зараженных вирусом и червем.',\n  'Если 50%\\xa0файлов не заражены вирусом,']\nquestion = 'сколько файлов Сергея НЕ заражено червем?'\nchoices = {'A': '50', 'B': '70', 'C': '75', 'D': '100', 'E': '125'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Все 250\\xa0файлов на жестком диске Сергея заражены вирусом или червем, либо и тем, и другим.']\nnew_fact = infer_new_fact(selected) # 'n(общее количество)\\xa0=\\xa0250'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 50%\\xa0файлов не заражены вирусом,', 'n(общее количество)\\xa0=\\xa0250']\nnew_fact = infer_new_fact(selected) # 'n(только червь)\\xa0=\\xa0125(50% от общего количествA)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество файлов, зараженных только червем, в 2,5\\xa0раза превышает количество файлов, зараженных вирусом и червем.']\nnew_fact = infer_new_fact(selected) # 'n(только червь)\\xa0=\\xa02,5*n(и червь, и вирус)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(только червь)\\xa0=\\xa0125(50% от общего количествA)', 'n(только червь)\\xa0=\\xa02,5*n(и червь, и вирус)']\nnew_fact = infer_new_fact(selected) # 'n(и червь, и вирус)\\xa0=\\xa0125/2,5\\xa0=\\xa050'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(общее количество)\\xa0=\\xa0250', 'n(только червь)\\xa0=\\xa0125(50% от общего количествA)', 'n(только червь)\\xa0=\\xa02,5*n(и червь, и вирус)', 'n(и червь, и вирус)\\xa0=\\xa0125/2,5\\xa0=\\xa050']\nnew_fact = infer_new_fact(selected) # 'n(общее количество)\\xa0=\\xa0n(только червь)\\xa0+\\xa0n(и червь, и вирус)\\xa0+\\xa0n(только вирус)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(общее количество)\\xa0=\\xa0250', 'n(только червь)\\xa0=\\xa0125(50% от общего количествA)', 'n(и червь, и вирус)\\xa0=\\xa0125/2,5\\xa0=\\xa050']\nnew_fact = infer_new_fact(selected) # 'n(только вирус)\\xa0=\\xa0250\\xa0-\\xa0125\\xa0-\\xa050\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(только вирус)\\xa0=\\xa0250\\xa0-\\xa0125\\xa0-\\xa050\\xa0=\\xa075']\nnew_fact = infer_new_fact(selected) # 'Следовательно, количество файлов, не зараженных червем, равно n(только вирус)\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько файлов Сергея НЕ заражено червем?', 'Следовательно, количество файлов, не зараженных червем, равно n(только вирус)\\xa0=\\xa075']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: (вариант C)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: (вариант C)']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_202_d7704fb981", "context": "", "options": ["A)2400", "B)2500", "C)2600", "D)2700", "E)None of these"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2, 3, 5], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [1, 2, 16], "consequent": 17}, {"antecedents": [2, 17], "consequent": 18}, {"antecedents": [6, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent5 -> int1: Let, the amount Mohan and Sohan receive be Rs. m and Rs. n, respectively. The amount that they receive 3 years and 2 years after should be equal.; int1 & sent4 -> int2: ⇒m(1+4/100)3=n(1+4/100)2; int2 -> int3: ⇒m(1+4/100)=n; int3 -> int4: ⇒m(26/25)=n; int4 -> int5: ⇒m/n=25/26; int5 & sent1 & sent2 -> int6: Therefore, Rs.5100 must be distribued in the ratio 25 : 26; int6 & sent2 -> int7: So Mohan's share = 5100×25/(25+26)=2500; int7 & sent6 -> int8: Answer B; int8 -> int9: The answer is B);", "textual_logical_units": {"1": "Отец хочет разделить", "2": "5100 рупий между двумя его сыновьями, Моханом и", "3": "Соханом, которым сейчас 23 и 24 года соответственно.", "4": "Он делит сумму таким образом, чтобы, если их акции будут инвестированы под сложные проценты в размере 4% годовых,", "5": "по достижении 26-летнего возраста они получат равную сумму.", "6": "Найдите долю Мохана.", "7": "A) 2400", "8": "B) 2500", "9": "C) 2600", "10": "D) 2700", "11": "E) Ничего из вышеперечисленного", "12": "Пусть суммы, которые получат Мохан и Сохан, равны m и n рупий соответственно. Сумма, которую они получат через 3 года и 2 года, должна быть одинаковой.", "13": "⇒ m(1 + 4/100)3 = n(1 + 4/102)2", "14": "⇒ m(1 + 4/100) = n", "15": "⇒ m(26/25) = n", "16": "⇒ m/n = 25/26", "17": "Таким образом, 5100 рупий должны быть распределены в соотношении 25: 26", "18": "Следовательно, доля Мохана = 5100 × 25/ (25 + 26) = 2500", "19": "Ответ — Б", "20": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Отец хочет разделить',\n  '5100\\xa0рупий между двумя его сыновьями, Моханом и',\n  'Соханом, которым сейчас 23 и 24\\xa0года соответственно.',\n  'Он делит сумму таким образом, чтобы, если их акции будут инвестированы под сложные проценты в размере 4%\\xa0годовых,',\n  'по достижении 26-летнего возраста они получат равную сумму.']\nquestion = 'Найдите долю Мохана.'\nchoices = {'A': '2400', 'B': '2500', 'C': '2600', 'D': '2700', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5100\\xa0рупий между двумя его сыновьями, Моханом и', 'Соханом, которым сейчас 23 и 24\\xa0года соответственно.', 'по достижении 26-летнего возраста они получат равную сумму.']\nnew_fact = infer_new_fact(selected) # 'Пусть суммы, которые получат Мохан и Сохан, равны m и n\\xa0рупий соответственно. Сумма, которую они получат через 3\\xa0года и 2\\xa0года, должна быть одинаковой.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Он делит сумму таким образом, чтобы, если их акции будут инвестированы под сложные проценты в размере 4%\\xa0годовых,', 'Пусть суммы, которые получат Мохан и Сохан, равны m и n\\xa0рупий соответственно. Сумма, которую они получат через 3\\xa0года и 2\\xa0года, должна быть одинаковой.']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0m(1\\xa0+\\xa04/100)3\\xa0=\\xa0n(1\\xa0+\\xa04/102)2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒\\xa0m(1\\xa0+\\xa04/100)3\\xa0=\\xa0n(1\\xa0+\\xa04/102)2']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0m(1\\xa0+\\xa04/100)\\xa0=\\xa0n'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒\\xa0m(1\\xa0+\\xa04/100)\\xa0=\\xa0n']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0m(26/25)\\xa0=\\xa0n'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒\\xa0m(26/25)\\xa0=\\xa0n']\nnew_fact = infer_new_fact(selected) # '⇒\\xa0m/n\\xa0=\\xa025/26'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Отец хочет разделить', '5100\\xa0рупий между двумя его сыновьями, Моханом и', '⇒\\xa0m/n\\xa0=\\xa025/26']\nnew_fact = infer_new_fact(selected) # 'Таким образом, 5100\\xa0рупий должны быть распределены в соотношении 25: 26'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5100\\xa0рупий между двумя его сыновьями, Моханом и', 'Таким образом, 5100\\xa0рупий должны быть распределены в соотношении 25: 26']\nnew_fact = infer_new_fact(selected) # 'Следовательно, доля Мохана\\xa0=\\xa05100\\xa0×\\xa025/ (25\\xa0+\\xa026)\\xa0=\\xa02500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите долю Мохана.', 'Следовательно, доля Мохана\\xa0=\\xa05100\\xa0×\\xa025/ (25\\xa0+\\xa026)\\xa0=\\xa02500']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_203_ba49452b0b", "context": "", "options": ["A)450 gms", "B)100 gms", "C)252 gms", "D)240 gms", "E)None of these"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "linearized_output_en": "sent1 -> int1: 60/100 * 30/100 * 1400= 252; int1 & sent1 -> int2: Answer: C; int2 -> int3: The answer is C);", "textual_logical_units": {"1": "Чему равны 60% от 30% от 1400 граммов?", "2": "A) 450 г", "3": "B) 100 г", "4": "C) 252 г", "5": "D) 240 г", "6": "E) Ничего из вышеперечисленного", "7": "60/100*30/100*1400 = 252", "8": "Ответ: В", "9": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Чему равны 60% от 30% от 1400\\xa0граммов?'\nchoices = {'A': '450\\xa0г', 'B': '100\\xa0г', 'C': '252\\xa0г', 'D': '240\\xa0г', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Чему равны 60% от 30% от 1400\\xa0граммов?']\nnew_fact = infer_new_fact(selected) # '60/100*30/100*1400\\xa0=\\xa0252'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чему равны 60% от 30% от 1400\\xa0граммов?', '60/100*30/100*1400\\xa0=\\xa0252']\nnew_fact = infer_new_fact(selected) # 'Ответ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_204_375f96a556", "context": "", "options": ["A)y/(1200xy)", "B)20xy/w", "C)5xy/(12w)", "D)w/(3xy)", "E)3y/(wx)"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: Time needed for w/25 gallons of liquid to pass through a drain = x seconds; int1 -> int2: Time needed for w gallons of liquid to pass through a drain = 25x seconds; int2 & sent2 -> int3: Time needed for y gallons of liquid to pass through a drain = (25x/w)*y = 25xy/w seconds; int3 -> int4: = (25xy/w )/60 = 5xy/(12w) mins; int4 & sent2 -> int5: Answer C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Жидкость течет по трубе со скоростью w/25 галлонов каждые x секунд.", "2": "Через сколько минут по этой трубе с такой же скоростью протечет y галлонов жидкости?", "3": "A) y/(1200xy)", "4": "B) 20xy/w", "5": "C) 5xy/(12w)", "6": "D) w/(3xy)", "7": "E) 3y/(wx)", "8": "Время, необходимое для прохождения по трубе w/25 галлонов жидкости = x секунд", "9": "Время, необходимое для прохождения по трубе w галлонов жидкости = 25x секунд", "10": "Время, необходимое для прохождения по трубе y галлонов жидкости = (25x/w)*y = 25xy/w секунд", "11": "= (25xy/w)/60 = 5xy/(12w) минут", "12": "Ответ — В", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Жидкость течет по трубе со скоростью w/25\\xa0галлонов каждые x\\xa0секунд.']\nquestion = 'Через сколько минут по этой трубе с такой же скоростью протечет y\\xa0галлонов жидкости?'\nchoices = {'A': 'y/(1200xy)', 'B': '20xy/w', 'C': '5xy/(12w)', 'D': 'w/(3xy)', 'E': '3y/(wx)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Жидкость течет по трубе со скоростью w/25\\xa0галлонов каждые x\\xa0секунд.']\nnew_fact = infer_new_fact(selected) # 'Время, необходимое для прохождения по трубе w/25\\xa0галлонов жидкости\\xa0=\\xa0x\\xa0секунд'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Время, необходимое для прохождения по трубе w/25\\xa0галлонов жидкости\\xa0=\\xa0x\\xa0секунд']\nnew_fact = infer_new_fact(selected) # 'Время, необходимое для прохождения по трубе w\\xa0галлонов жидкости\\xa0=\\xa025x\\xa0секунд'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько минут по этой трубе с такой же скоростью протечет y\\xa0галлонов жидкости?', 'Время, необходимое для прохождения по трубе w\\xa0галлонов жидкости\\xa0=\\xa025x\\xa0секунд']\nnew_fact = infer_new_fact(selected) # 'Время, необходимое для прохождения по трубе y\\xa0галлонов жидкости\\xa0=\\xa0(25x/w)*y\\xa0=\\xa025xy/w\\xa0секунд'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Время, необходимое для прохождения по трубе y\\xa0галлонов жидкости\\xa0=\\xa0(25x/w)*y\\xa0=\\xa025xy/w\\xa0секунд']\nnew_fact = infer_new_fact(selected) # '=\\xa0(25xy/w)/60\\xa0=\\xa05xy/(12w)\\xa0минут'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через сколько минут по этой трубе с такой же скоростью протечет y\\xa0галлонов жидкости?', '=\\xa0(25xy/w)/60\\xa0=\\xa05xy/(12w)\\xa0минут']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_205_86b6ab1f8f", "context": "", "options": ["A)36 grams", "B)40 grams", "C)42 grams", "D)48 grams", "E)50 grams"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [1, 3, 12], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [5], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [17], "consequent": 18}, {"antecedents": [18], "consequent": 19}, {"antecedents": [6], "consequent": 20}, {"antecedents": [1], "consequent": 21}, {"antecedents": [20, 21], "consequent": 22}, {"antecedents": [4], "consequent": 23}, {"antecedents": [21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}, {"antecedents": [6, 25], "consequent": 26}, {"antecedents": [6, 26], "consequent": 27}, {"antecedents": [19, 25], "consequent": 28}, {"antecedents": [6], "consequent": 29}, {"antecedents": [28], "consequent": 30}, {"antecedents": [26, 28], "consequent": 31}, {"antecedents": [13, 31], "consequent": 32}, {"antecedents": [6, 32], "consequent": 33}, {"antecedents": [33], "consequent": 34}], "metadata": [], "linearized_output_en": "sent0 -> int1: Coin is basically a cylinder.; int1 & sent1 & sent3 -> int2: So volume of coin T= pi r^2 h = pi (7.5)^2 * 2; sent1 & sent2 -> int3: Coin=Silver+Aluminum; int2 & int3 -> int4: Now total volume of coin(T) = volume of silver + volume of aluminum; sent5 -> int5: Also, volume of silver(Vs)= volume of aluminum(Va); int5 -> int6: T= Va+Vb; int6 -> int7: T=2Va; int7 -> int8: Va=T/2= pi (7.5)^2 * 2 /2 = pi (7.5)^2; sent6 -> int9: Silver is twice as heavy as aluminum.; sent1 -> int10: Let the weight of aluminum in coin be x; int10 & int9 -> int11: Weight of Silver = 2x; sent4 -> int12: Total weight of coin = 30; int10 & int11 & int12 -> int13: x+2x=30; int13 -> int14: x=10; int14 & sent6 -> int15: Weight of Aluminum in coin is 10gm; int15 & sent6 -> int16: Wright of Silver in coin is 20gm.; int14 & int8 -> int17: Weight of Aluminum in coin is 10gm and volume is pi (7.5)^2; sent6 -> int18: Now new Aluminum coin is made with dimension 1x30mm.; int17 -> int19: Volume of this new coin = pi (15)^2*1.; int15 & int17 -> int20: Volume of pi (7.5)^2 contains weight of 10 gm of aluminum; int2 & int20 -> int21: Volume of pi (15)^2*1 will contain = 10/ pi(7.5)^ * pi (15)^2 * 1= 40gm; int21 & sent6 -> int22: ANSWER:B; int22 -> int23: The answer is B);", "textual_logical_units": {"1": "Монета из сплава алюминия и", "2": "серебра имеет размер 2 x 15 мм (толщину 2 мм и", "3": "диаметр 15 мм).", "4": "Если вес монеты составляет 30 граммов, и", "5": "объем алюминия в сплаве равен объему серебра,", "6": "каким будет вес монеты размером 1 х 30 мм из чистого алюминия, если серебро в два раза тяжелее алюминия?", "7": "A) 36 граммов", "8": "B) 40 граммов", "9": "C) 42 грамма", "10": "D) 48 граммов", "11": "E) 50 граммов", "12": "Монета — это по сути цилиндр.", "13": "Объем монеты T = πr^2h = π(7,5)^2*2", "14": "Монета = серебро + алюминий", "15": "Общий объем монеты (T) = объем серебра + объем алюминия", "16": "Кроме того, объем серебра (Vs) = объем алюминия (Va)", "17": "Т = Vs + Va", "18": "Т = 2Va", "19": "Va = Т/2 = π(7,5)^2*2/2 = π(7,5)^2", "20": "Серебро в два раза тяжелее алюминия.", "21": "Пусть x — масса алюминия в монете", "22": "Масса серебра = 2x", "23": "Общая масса монеты = 30", "24": "x + 2x = 30", "25": "x = 10", "26": "Масса алюминия в монете составляет 10 г", "27": "Масса серебра в монете составляет 20 г.", "28": "Масса алюминия в монете составляет 10 г, а объем — π(7,5)^2", "29": "Новая алюминиевая монета имеет размер 1 x 30 мм.", "30": "Объем этой новой монеты = π(15)^2*1.", "31": "Объем π(7,5)^2 содержит алюминий массой 10 г", "32": "Объем π(15)^2*1 будет содержать = 10/π(7,5)^*π(15)^2*1 = 40 г", "33": "ОТВЕТ: Б", "34": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Монета из сплава алюминия и',\n  'серебра имеет размер 2\\xa0x\\xa015\\xa0мм (толщину 2\\xa0мм и',\n  'диаметр 15\\xa0мм).',\n  'Если вес монеты составляет 30\\xa0граммов, и',\n  'объем алюминия в сплаве равен объему серебра,']\nquestion = 'каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?'\nchoices = {'A': '36\\xa0граммов', 'B': '40\\xa0граммов', 'C': '42\\xa0грамма', 'D': '48\\xa0граммов', 'E': '50\\xa0граммов'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Монета\\xa0— это по сути цилиндр.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Монета из сплава алюминия и', 'диаметр 15\\xa0мм).', 'Монета\\xa0— это по сути цилиндр.']\nnew_fact = infer_new_fact(selected) # 'Объем монеты T\\xa0=\\xa0πr^2h\\xa0=\\xa0π(7,5)^2*2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Монета из сплава алюминия и', 'серебра имеет размер 2\\xa0x\\xa015\\xa0мм (толщину 2\\xa0мм и']\nnew_fact = infer_new_fact(selected) # 'Монета\\xa0=\\xa0серебро\\xa0+\\xa0алюминий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Объем монеты T\\xa0=\\xa0πr^2h\\xa0=\\xa0π(7,5)^2*2', 'Монета\\xa0=\\xa0серебро\\xa0+\\xa0алюминий']\nnew_fact = infer_new_fact(selected) # 'Общий объем монеты (T)\\xa0=\\xa0объем серебра\\xa0+\\xa0объем алюминия'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['объем алюминия в сплаве равен объему серебра,']\nnew_fact = infer_new_fact(selected) # 'Кроме того, объем серебра (Vs)\\xa0=\\xa0объем алюминия (Va)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Кроме того, объем серебра (Vs)\\xa0=\\xa0объем алюминия (Va)']\nnew_fact = infer_new_fact(selected) # 'Т\\xa0=\\xa0Vs\\xa0+\\xa0Va'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Т\\xa0=\\xa0Vs\\xa0+\\xa0Va']\nnew_fact = infer_new_fact(selected) # 'Т\\xa0=\\xa02Va'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Т\\xa0=\\xa02Va']\nnew_fact = infer_new_fact(selected) # 'Va\\xa0=\\xa0Т/2\\xa0=\\xa0π(7,5)^2*2/2\\xa0=\\xa0π(7,5)^2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?']\nnew_fact = infer_new_fact(selected) # 'Серебро в два раза тяжелее алюминия.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Монета из сплава алюминия и']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— масса алюминия в монете'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Серебро в два раза тяжелее алюминия.', 'Пусть x\\xa0— масса алюминия в монете']\nnew_fact = infer_new_fact(selected) # 'Масса серебра\\xa0=\\xa02x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если вес монеты составляет 30\\xa0граммов, и']\nnew_fact = infer_new_fact(selected) # 'Общая масса монеты\\xa0=\\xa030'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть x\\xa0— масса алюминия в монете', 'Масса серебра\\xa0=\\xa02x', 'Общая масса монеты\\xa0=\\xa030']\nnew_fact = infer_new_fact(selected) # 'x\\xa0+\\xa02x\\xa0=\\xa030'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0+\\xa02x\\xa0=\\xa030']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa010'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?', 'x\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'Масса алюминия в монете составляет 10\\xa0г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?', 'Масса алюминия в монете составляет 10\\xa0г']\nnew_fact = infer_new_fact(selected) # 'Масса серебра в монете составляет 20\\xa0г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Va\\xa0=\\xa0Т/2\\xa0=\\xa0π(7,5)^2*2/2\\xa0=\\xa0π(7,5)^2', 'x\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'Масса алюминия в монете составляет 10\\xa0г, а объем\\xa0— π(7,5)^2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?']\nnew_fact = infer_new_fact(selected) # 'Новая алюминиевая монета имеет размер 1\\xa0x\\xa030\\xa0мм.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Масса алюминия в монете составляет 10\\xa0г, а объем\\xa0— π(7,5)^2']\nnew_fact = infer_new_fact(selected) # 'Объем этой новой монеты\\xa0=\\xa0π(15)^2*1.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Масса алюминия в монете составляет 10\\xa0г', 'Масса алюминия в монете составляет 10\\xa0г, а объем\\xa0— π(7,5)^2']\nnew_fact = infer_new_fact(selected) # 'Объем π(7,5)^2 содержит алюминий массой 10\\xa0г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Объем монеты T\\xa0=\\xa0πr^2h\\xa0=\\xa0π(7,5)^2*2', 'Объем π(7,5)^2 содержит алюминий массой 10\\xa0г']\nnew_fact = infer_new_fact(selected) # 'Объем π(15)^2*1 будет содержать\\xa0=\\xa010/π(7,5)^*π(15)^2*1\\xa0=\\xa040\\xa0г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каким будет вес монеты размером 1\\xa0х\\xa030\\xa0мм из чистого алюминия, если серебро в два раза тяжелее алюминия?', 'Объем π(15)^2*1 будет содержать\\xa0=\\xa010/π(7,5)^*π(15)^2*1\\xa0=\\xa040\\xa0г']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_206_6ade51e26d", "context": "", "options": ["A)100", "B)160", "C)150", "D)210", "E)220"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let the number be x. Then,; int1 & sent1 -> int2: 2x/3 - 10 = x/3 + 40; int2 -> int3: => x/3 = 50 => x = 150; int3 & sent2 -> int4: Answer: Option C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Если из 2/3 числа вычесть 10, результат будет равен сумме 40 и 1/3 этого числа.", "2": "Найдите это число", "3": "A) 100", "4": "B) 160", "5": "C) 150", "6": "D) 210", "7": "E) 220", "8": "Пусть x — требуемое число. Тогда", "9": "2x/3 - 10 = х/3 + 40", "10": "=> х/3 = 50 => x = 150", "11": "Ответ: Вариант В", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Если из 2/3\\xa0числа вычесть 10, результат будет равен сумме 40 и 1/3\\xa0этого числа.']\nquestion = 'Найдите это число'\nchoices = {'A': '100', 'B': '160', 'C': '150', 'D': '210', 'E': '220'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Найдите это число']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— требуемое число. Тогда'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если из 2/3\\xa0числа вычесть 10, результат будет равен сумме 40 и 1/3\\xa0этого числа.', 'Пусть x\\xa0— требуемое число. Тогда']\nnew_fact = infer_new_fact(selected) # '2x/3\\xa0-\\xa010\\xa0=\\xa0х/3\\xa0+\\xa040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x/3\\xa0-\\xa010\\xa0=\\xa0х/3\\xa0+\\xa040']\nnew_fact = infer_new_fact(selected) # '=>\\xa0х/3\\xa0=\\xa050\\xa0=>\\xa0x\\xa0=\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите это число', '=>\\xa0х/3\\xa0=\\xa050\\xa0=>\\xa0x\\xa0=\\xa0150']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_207_25ae028cd9", "context": "", "options": ["A)9", "B)7", "C)3", "D)8", "E)12"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: Any quadratic equation will have real and distinct roots if the discriminant D > 0; int1 -> int2: The discriminant 'D' of a quadratic equation ax2 + bx + c = 0 is given by b2 - 4ac; int2 & sent1 -> int3: In this question, the value of D = 52 - 4 * 1 * k; int3 -> int4: If D > 0, then 25 > 4k or k < 6.2.; int4 -> int5: Therefore, the highest integral value that k can take is 3.; int5 & sent1 -> int6: correct choice is (C); int6 -> int7: The answer is C);", "textual_logical_units": {"1": "Каково наибольшее интегральное значение k, для которого квадратное уравнение x2 - 5x + k = 0 будет иметь два различных действительных корня?", "2": "A) 9", "3": "B) 7", "4": "C) 3", "5": "D) 8", "6": "E) 12", "7": "Любое квадратное уравнение имеет различные действительные корни, если дискриминант D > 0", "8": "Дискриминант D квадратного уравнения ax2 + bx + c = 0 определяется выражением b2 - 4ac", "9": "В этом уравнении значение D = 52 - 4*1*k", "10": "Если D > 0, то 25 > 4k или k < 6,2.", "11": "Следовательно, наибольшее интегральное значение, которое может принимать k, равно 3.", "12": "Правильный вариант — (C)", "13": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Каково наибольшее интегральное значение k, для которого квадратное уравнение x2\\xa0-\\xa05x\\xa0+\\xa0k\\xa0=\\xa00 будет иметь два различных действительных корня?'\nchoices = {'A': '9', 'B': '7', 'C': '3', 'D': '8', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Каково наибольшее интегральное значение k, для которого квадратное уравнение x2\\xa0-\\xa05x\\xa0+\\xa0k\\xa0=\\xa00 будет иметь два различных действительных корня?']\nnew_fact = infer_new_fact(selected) # 'Любое квадратное уравнение имеет различные действительные корни, если дискриминант D\\xa0>\\xa00'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Любое квадратное уравнение имеет различные действительные корни, если дискриминант D\\xa0>\\xa00']\nnew_fact = infer_new_fact(selected) # 'Дискриминант D квадратного уравнения ax2\\xa0+\\xa0bx\\xa0+\\xa0c\\xa0=\\xa00 определяется выражением b2\\xa0-\\xa04ac'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково наибольшее интегральное значение k, для которого квадратное уравнение x2\\xa0-\\xa05x\\xa0+\\xa0k\\xa0=\\xa00 будет иметь два различных действительных корня?', 'Дискриминант D квадратного уравнения ax2\\xa0+\\xa0bx\\xa0+\\xa0c\\xa0=\\xa00 определяется выражением b2\\xa0-\\xa04ac']\nnew_fact = infer_new_fact(selected) # 'В этом уравнении значение D\\xa0=\\xa052\\xa0-\\xa04*1*k'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В этом уравнении значение D\\xa0=\\xa052\\xa0-\\xa04*1*k']\nnew_fact = infer_new_fact(selected) # 'Если D\\xa0>\\xa00, то 25\\xa0>\\xa04k или k\\xa0<\\xa06,2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если D\\xa0>\\xa00, то 25\\xa0>\\xa04k или k\\xa0<\\xa06,2.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, наибольшее интегральное значение, которое может принимать k, равно 3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково наибольшее интегральное значение k, для которого квадратное уравнение x2\\xa0-\\xa05x\\xa0+\\xa0k\\xa0=\\xa00 будет иметь два различных действительных корня?', 'Следовательно, наибольшее интегральное значение, которое может принимать k, равно 3.']\nnew_fact = infer_new_fact(selected) # 'Правильный вариант\\xa0— (C)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный вариант\\xa0— (C)']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_208_543e147cbc", "context": "", "options": ["A)820", "B)202", "C)420", "D)209", "E)960"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 6, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: 900 + 5 × 12 = ?; int1 -> int2: or, ? = 900 + 60 = 960; int2 & sent1 & sent6 -> int3: Answer E; int3 -> int4: The answer is E);", "textual_logical_units": {"1": "900 + 5 × 12 = ?", "2": "A) 820", "3": "B) 202", "4": "C) 420", "5": "D) 209", "6": "E) 960", "7": "900 + 5 × 12 = ?", "8": "или ? = 900 + 60 = 960", "9": "Ответ — Д", "10": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = '900\\xa0+\\xa05\\xa0×\\xa012\\xa0=\\xa0?'\nchoices = {'A': '820', 'B': '202', 'C': '420', 'D': '209', 'E': '960'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['900\\xa0+\\xa05\\xa0×\\xa012\\xa0=\\xa0?']\nnew_fact = infer_new_fact(selected) # '900\\xa0+\\xa05\\xa0×\\xa012\\xa0=\\xa0?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['900\\xa0+\\xa05\\xa0×\\xa012\\xa0=\\xa0?']\nnew_fact = infer_new_fact(selected) # 'или ?\\xa0=\\xa0900\\xa0+\\xa060\\xa0=\\xa0960'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['900\\xa0+\\xa05\\xa0×\\xa012\\xa0=\\xa0?', 'E) 960', 'или ?\\xa0=\\xa0900\\xa0+\\xa060\\xa0=\\xa0960']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_209_49bf9c4d23", "context": "", "options": ["A)9 hours.", "B)10 hours.", "C)11 hours.", "D)12 hours.", "E)13 hours."], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: After every 15 km she will take a rest of 10 minutes so after every 90 minutes she will 10 min break.; int1 & sent2 -> int2: she will 10 hours to cover 90 km distance and 1 hour to cover remaining 10km.; int2 -> int3: So the answer is 11 hours.; int3 & sent2 -> int4: ANSWER:C; int4 -> int5: The answer is C);", "textual_logical_units": {"1": "Светлана едет на велосипеде со скоростью 10 км в час, но через каждые 15 км останавливается на 10 минут, чтобы отдохнуть.", "2": "Сколько часов ей потребуется, чтобы проехать 100 км?", "3": "A) 9 часов.", "4": "B) 10 часов.", "5": "C) 11 часов.", "6": "D) 12 часов.", "7": "E) 13 часов.", "8": "Через каждые 15 км она будет отдыхать 10 минут, поэтому она будет делать 10-минутный перерыв каждые 90 минут.", "9": "Ей потребуется 10 часов на преодоление 90 км и 1 час на преодоление оставшихся 10 км.", "10": "Следовательно, ответ — 11 часов.", "11": "ОТВЕТ: В", "12": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Светлана едет на велосипеде со скоростью 10\\xa0км в час, но через каждые 15\\xa0км останавливается на 10\\xa0минут, чтобы отдохнуть.']\nquestion = 'Сколько часов ей потребуется, чтобы проехать 100\\xa0км?'\nchoices = {'A': '9\\xa0часов.', 'B': '10\\xa0часов.', 'C': '11\\xa0часов.', 'D': '12\\xa0часов.', 'E': '13\\xa0часов.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Светлана едет на велосипеде со скоростью 10\\xa0км в час, но через каждые 15\\xa0км останавливается на 10\\xa0минут, чтобы отдохнуть.']\nnew_fact = infer_new_fact(selected) # 'Через каждые 15\\xa0км она будет отдыхать 10\\xa0минут, поэтому она будет делать 10-минутный перерыв каждые 90\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов ей потребуется, чтобы проехать 100\\xa0км?', 'Через каждые 15\\xa0км она будет отдыхать 10\\xa0минут, поэтому она будет делать 10-минутный перерыв каждые 90\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Ей потребуется 10\\xa0часов на преодоление 90\\xa0км и 1\\xa0час на преодоление оставшихся 10\\xa0км.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ей потребуется 10\\xa0часов на преодоление 90\\xa0км и 1\\xa0час на преодоление оставшихся 10\\xa0км.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, ответ\\xa0— 11\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько часов ей потребуется, чтобы проехать 100\\xa0км?', 'Следовательно, ответ\\xa0— 11\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_210_3527f971a6", "context": "", "options": ["A)22 hrs", "B)18 hrs", "C)16 hrs", "D)20 hrs", "E)13 hrs"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: Going one way by train and one way by car, he takes 17 hours.; sent2 -> int2: Going both ways by train, he takes 4 hours more => The train takes 4 hours more one way; int1 & int2 -> int3: Therefore travelling both ways by car, he takes 4 hours less than 17; int3 -> int4: => He takes 17-4 = 13 hours.; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Семену нужно 17 часов, чтобы добраться до города на поезде и вернуться на автомобиле.", "2": "Если он будет ехать в обе стороны на поезде, то потеряет 4 часа.", "3": "Сколько времени заняла бы поездка в обе стороны на автомобиле?", "4": "A) 22 часа", "5": "B) 18 часов", "6": "C) 16 часов", "7": "D) 20 часов", "8": "E) 13 часов", "9": "Поездка в одну сторону на поезде и в одну сторону на машине занимает 17 часов.", "10": "Поездка на поезде в обе стороны занимает на 4 часа больше => поездка на поезде в одну сторону занимает на 4 часа больше", "11": "Поэтому поездка на автомобиле в обе стороны займет у него на 4 часа меньше 17", "12": "=> Ему потребуется 17 - 4 = 13 часов.", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Семену нужно 17\\xa0часов, чтобы добраться до города на поезде и вернуться на автомобиле.',\n  'Если он будет ехать в обе стороны на поезде, то потеряет 4\\xa0часа.']\nquestion = 'Сколько времени заняла бы поездка в обе стороны на автомобиле?'\nchoices = {'A': '22\\xa0часа', 'B': '18\\xa0часов', 'C': '16\\xa0часов', 'D': '20\\xa0часов', 'E': '13\\xa0часов'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Семену нужно 17\\xa0часов, чтобы добраться до города на поезде и вернуться на автомобиле.']\nnew_fact = infer_new_fact(selected) # 'Поездка в одну сторону на поезде и в одну сторону на машине занимает 17\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если он будет ехать в обе стороны на поезде, то потеряет 4\\xa0часа.']\nnew_fact = infer_new_fact(selected) # 'Поездка на поезде в обе стороны занимает на 4\\xa0часа больше\\xa0=>\\xa0поездка на поезде в одну сторону занимает на 4\\xa0часа больше'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поездка в одну сторону на поезде и в одну сторону на машине занимает 17\\xa0часов.', 'Поездка на поезде в обе стороны занимает на 4\\xa0часа больше\\xa0=>\\xa0поездка на поезде в одну сторону занимает на 4\\xa0часа больше']\nnew_fact = infer_new_fact(selected) # 'Поэтому поездка на автомобиле в обе стороны займет у него на 4\\xa0часа меньше 17'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поэтому поездка на автомобиле в обе стороны займет у него на 4\\xa0часа меньше 17']\nnew_fact = infer_new_fact(selected) # '=>\\xa0Ему потребуется 17\\xa0-\\xa04\\xa0=\\xa013\\xa0часов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa0Ему потребуется 17\\xa0-\\xa04\\xa0=\\xa013\\xa0часов.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_211_ab21c60208", "context": "", "options": ["A)20%", "B)25%", "C)30%", "D)35%", "E)40%"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [3], "consequent": 10}, {"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent3 -> int1: The amount remaining after each feeding session is 2/3 of what was in the bowl.; sent2 & sent3 -> int2: There were four feeding sessions.; int1 & int2 & sent4 -> int3: The amount remaining just before noon was (2/3)^4 = 16/81, which is about 20%.; int3 & sent4 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Дмитрий наполнил миску своей собаки собачьим кормом.", "2": "Начиная с 08:00, собака Дмитрия ела ровно раз в час,", "3": "каждый раз съедая ровно 1/3 оставшегося в миске корма.", "4": "Какой примерно процент от исходного количества корма был в собачьей миске прямо перед тем, как собака начала есть в полдень того же дня?", "5": "A) 20%", "6": "B) 25%", "7": "C) 30%", "8": "D) 35%", "9": "E) 40%", "10": "Количество, остающееся после каждого приема пищи, составляет 2/3 от того, что было в миске.", "11": "Собака ела четыре раза.", "12": "Количество, оставшееся незадолго до полудня, равно (2/3)^4 = 16/81, то есть около 20%.", "13": "Ответ — А.", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Дмитрий наполнил миску своей собаки собачьим кормом.',\n  'Начиная с 08:00, собака Дмитрия ела ровно раз в час,',\n  'каждый раз съедая ровно 1/3\\xa0оставшегося в миске корма.']\nquestion = 'Какой примерно процент от исходного количества корма был в собачьей миске прямо перед тем, как собака начала есть в полдень того же дня?'\nchoices = {'A': '20%', 'B': '25%', 'C': '30%', 'D': '35%', 'E': '40%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['каждый раз съедая ровно 1/3\\xa0оставшегося в миске корма.']\nnew_fact = infer_new_fact(selected) # 'Количество, остающееся после каждого приема пищи, составляет 2/3 от того, что было в миске.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Начиная с 08:00, собака Дмитрия ела ровно раз в час,', 'каждый раз съедая ровно 1/3\\xa0оставшегося в миске корма.']\nnew_fact = infer_new_fact(selected) # 'Собака ела четыре раза.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой примерно процент от исходного количества корма был в собачьей миске прямо перед тем, как собака начала есть в полдень того же дня?', 'Количество, остающееся после каждого приема пищи, составляет 2/3 от того, что было в миске.', 'Собака ела четыре раза.']\nnew_fact = infer_new_fact(selected) # 'Количество, оставшееся незадолго до полудня, равно (2/3)^4\\xa0=\\xa016/81, то есть около 20%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой примерно процент от исходного количества корма был в собачьей миске прямо перед тем, как собака начала есть в полдень того же дня?', 'Количество, оставшееся незадолго до полудня, равно (2/3)^4\\xa0=\\xa016/81, то есть около 20%.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_212_06f8ceb80b", "context": "", "options": ["A)100", "B)120", "C)50", "D)200", "E)80"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [4], "consequent": 14}, {"antecedents": [5, 12], "consequent": 15}, {"antecedents": [12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [6, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.; sent4 -> int2: The number of men G who liked green cars more than red cars is given by; sent4 -> int3: G = M - 25%M; int1 & sent5 -> int4: Given that G = 10, solve for N; int1 & int3 & int4 -> int5: 40 = (N - 60%N) - 25%(N - 60%N); int5 -> int6: N = 100; int6 & sent6 -> int7: Correct answer is A.; int7 -> int8: The answer is A);", "textual_logical_units": {"1": "Иван провел опрос о цвете автомобиля.", "2": "60% принявших участие в опросе были женщинами.", "3": "Из опрошенных мужчин", "4": "75% предпочли красные автомобили зеленым.", "5": "Если 10 мужчинам больше нравились зеленые автомобили, чем красные,", "6": "сколько человек приняло участие в опросе?", "7": "A) 100", "8": "B) 120", "9": "C) 50", "10": "D) 200", "11": "E) 80", "12": "Пусть N — количество людей, принявших участие в опросе. Количество мужчин M определяется выражением M = N - 60%N.", "13": "Количество мужчин G, которым зеленые автомобили нравились больше, чем красные, определяется выражением", "14": "G = М - 25%М", "15": "Учитывая, что G = 10, находим N", "16": "40 = (N - 60%N) - 25%(N - 60%N)", "17": "N = 100", "18": "Правильный ответ — A.", "19": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Иван провел опрос о цвете автомобиля.',\n  '60%\\xa0принявших участие в опросе были женщинами.',\n  'Из опрошенных мужчин',\n  '75% предпочли красные автомобили зеленым.',\n  'Если 10\\xa0мужчинам больше нравились зеленые автомобили, чем красные,']\nquestion = 'сколько человек приняло участие в опросе?'\nchoices = {'A': '100', 'B': '120', 'C': '50', 'D': '200', 'E': '80'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['60%\\xa0принявших участие в опросе были женщинами.']\nnew_fact = infer_new_fact(selected) # 'Пусть N\\xa0— количество людей, принявших участие в опросе. Количество мужчин M определяется выражением M\\xa0=\\xa0N\\xa0-\\xa060%N.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['75% предпочли красные автомобили зеленым.']\nnew_fact = infer_new_fact(selected) # 'Количество мужчин G, которым зеленые автомобили нравились больше, чем красные, определяется выражением'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['75% предпочли красные автомобили зеленым.']\nnew_fact = infer_new_fact(selected) # 'G\\xa0=\\xa0М\\xa0-\\xa025%М'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если 10\\xa0мужчинам больше нравились зеленые автомобили, чем красные,', 'Пусть N\\xa0— количество людей, принявших участие в опросе. Количество мужчин M определяется выражением M\\xa0=\\xa0N\\xa0-\\xa060%N.']\nnew_fact = infer_new_fact(selected) # 'Учитывая, что G\\xa0=\\xa010, находим N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Пусть N\\xa0— количество людей, принявших участие в опросе. Количество мужчин M определяется выражением M\\xa0=\\xa0N\\xa0-\\xa060%N.', 'G\\xa0=\\xa0М\\xa0-\\xa025%М', 'Учитывая, что G\\xa0=\\xa010, находим N']\nnew_fact = infer_new_fact(selected) # '40\\xa0=\\xa0(N\\xa0-\\xa060%N)\\xa0-\\xa025%(N\\xa0-\\xa060%N)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40\\xa0=\\xa0(N\\xa0-\\xa060%N)\\xa0-\\xa025%(N\\xa0-\\xa060%N)']\nnew_fact = infer_new_fact(selected) # 'N\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько человек приняло участие в опросе?', 'N\\xa0=\\xa0100']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_213_86d0dea32c", "context": "", "options": ["A)88", "B)89", "C)90", "D)91", "E)92"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [8, 9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [2, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: case 1:1 1 1 1 1 1 1 1 1 1 > 1!; int1 -> int2: case 2:1 1 1 1 1 1 1 1 2 > 9!/8!; int2 -> int3: case 3:1 1 1 1 1 1 2 2 > 8!/6!*2!; int3 -> int4: case 4:1 1 1 1 2 2 2 > 7!/4!*3!; int4 -> int5: case 5:1 1 2 2 2 2 > 6!/4!*2!; int5 -> int6: case 6:2 2 2 2 2 > 1!; int1 & int2 & int3 & int4 & int5 & int6 -> int7: add answers of all cases => 1+9+28+35+15+1= 89; int7 & sent2 -> int8: ANSWER:B; int8 -> int9: The answer is B);", "textual_logical_units": {"1": "Сколькими способами мальчик может подняться по лестнице, состоящей из 10 ступеней,", "2": "если он может подниматься на одну или две ступени за раз?", "3": "A) 88", "4": "B) 89", "5": "C) 90", "6": "D) 91", "7": "E) 92", "8": "Вариант 1: 1 1 1 1 1 1 1 1 1 1 > 1!", "9": "Вариант 2: 1 1 1 1 1 1 1 1 2 > 9!/8!", "10": "Вариант 3: 1 1 1 1 1 1 2 2 > 8!/6!*2!", "11": "Вариант 4: 1 1 1 1 2 2 2 > 7!/4!*3!", "12": "Вариант 5: 1 1 2 2 2 2 > 6!/4!*2!", "13": "Вариант 6: 2 2 2 2 2 > 1!", "14": "Складываем ответы всех вариантов => 1+9+28+35+15+1 = 89", "15": "ОТВЕТ: Б", "16": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Сколькими способами мальчик может подняться по лестнице, состоящей из 10\\xa0ступеней,']\nquestion = 'если он может подниматься на одну или две ступени за раз?'\nchoices = {'A': '88', 'B': '89', 'C': '90', 'D': '91', 'E': '92'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколькими способами мальчик может подняться по лестнице, состоящей из 10\\xa0ступеней,', 'если он может подниматься на одну или две ступени за раз?']\nnew_fact = infer_new_fact(selected) # 'Вариант 1: 1 1 1 1 1 1 1 1 1 1\\xa0>\\xa01!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 1: 1 1 1 1 1 1 1 1 1 1\\xa0>\\xa01!']\nnew_fact = infer_new_fact(selected) # 'Вариант 2: 1 1 1 1 1 1 1 1 2\\xa0>\\xa09!/8!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 2: 1 1 1 1 1 1 1 1 2\\xa0>\\xa09!/8!']\nnew_fact = infer_new_fact(selected) # 'Вариант 3: 1 1 1 1 1 1 2 2\\xa0>\\xa08!/6!*2!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 3: 1 1 1 1 1 1 2 2\\xa0>\\xa08!/6!*2!']\nnew_fact = infer_new_fact(selected) # 'Вариант 4: 1 1 1 1 2 2 2\\xa0>\\xa07!/4!*3!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 4: 1 1 1 1 2 2 2\\xa0>\\xa07!/4!*3!']\nnew_fact = infer_new_fact(selected) # 'Вариант 5: 1 1 2 2 2 2\\xa0>\\xa06!/4!*2!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 5: 1 1 2 2 2 2\\xa0>\\xa06!/4!*2!']\nnew_fact = infer_new_fact(selected) # 'Вариант 6: 2 2 2 2 2\\xa0>\\xa01!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант 1: 1 1 1 1 1 1 1 1 1 1\\xa0>\\xa01!', 'Вариант 2: 1 1 1 1 1 1 1 1 2\\xa0>\\xa09!/8!', 'Вариант 3: 1 1 1 1 1 1 2 2\\xa0>\\xa08!/6!*2!', 'Вариант 4: 1 1 1 1 2 2 2\\xa0>\\xa07!/4!*3!', 'Вариант 5: 1 1 2 2 2 2\\xa0>\\xa06!/4!*2!', 'Вариант 6: 2 2 2 2 2\\xa0>\\xa01!']\nnew_fact = infer_new_fact(selected) # 'Складываем ответы всех вариантов\\xa0=>\\xa01+9+28+35+15+1\\xa0=\\xa089'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['если он может подниматься на одну или две ступени за раз?', 'Складываем ответы всех вариантов\\xa0=>\\xa01+9+28+35+15+1\\xa0=\\xa089']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_214_6a48e431cd", "context": "", "options": ["A)0.5", "B)1", "C)1.25", "D)1.5", "E)2"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 -> int1: Let x be the quantity to be added; int1 & sent1 & sent2 -> int2: (0.4+y) / 1+y = 60/100; int2 -> int3: => 4+10y = 6+6y; int3 -> int4: => y = 2/4 = 0.5; int4 & sent3 -> int5: Answer is A; int5 -> int6: The answer is A);", "textual_logical_units": {"1": "Если один галлон напитка содержит 40% апельсинового сока и 60% воды,", "2": "сколько дополнительных галлонов апельсинового сока нужно добавить, чтобы апельсиновый сок составлял 60% напитка?", "3": "A) 0,5", "4": "B) 1", "5": "C) 1,25", "6": "D) 1,5", "7": "E) 2", "8": "Пусть x — количество, которое нужно добавить", "9": "(0,4 + y)/1 + y = 60/100", "10": "=> 4 + 10y = 6 + 6y", "11": "=> y = 2/4 = 0,5", "12": "Ответ — A", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если один галлон напитка содержит 40%\\xa0апельсинового сока и 60%\\xa0воды,']\nquestion = 'сколько дополнительных галлонов апельсинового сока нужно добавить, чтобы апельсиновый сок составлял 60%\\xa0напитка?'\nchoices = {'A': '0,5', 'B': '1', 'C': '1,25', 'D': '1,5', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['сколько дополнительных галлонов апельсинового сока нужно добавить, чтобы апельсиновый сок составлял 60%\\xa0напитка?']\nnew_fact = infer_new_fact(selected) # 'Пусть x\\xa0— количество, которое нужно добавить'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если один галлон напитка содержит 40%\\xa0апельсинового сока и 60%\\xa0воды,', 'сколько дополнительных галлонов апельсинового сока нужно добавить, чтобы апельсиновый сок составлял 60%\\xa0напитка?', 'Пусть x\\xa0— количество, которое нужно добавить']\nnew_fact = infer_new_fact(selected) # '(0,4\\xa0+\\xa0y)/1\\xa0+\\xa0y\\xa0=\\xa060/100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(0,4\\xa0+\\xa0y)/1\\xa0+\\xa0y\\xa0=\\xa060/100']\nnew_fact = infer_new_fact(selected) # '=>\\xa04\\xa0+\\xa010y\\xa0=\\xa06\\xa0+\\xa06y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa04\\xa0+\\xa010y\\xa0=\\xa06\\xa0+\\xa06y']\nnew_fact = infer_new_fact(selected) # '=>\\xa0y\\xa0=\\xa02/4\\xa0=\\xa00,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) 0,5', '=>\\xa0y\\xa0=\\xa02/4\\xa0=\\xa00,5']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_215_39d0945982", "context": "", "options": ["A)1", "B)3", "C)5", "D)2", "E)4"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: The unit's digit of 9^3 = 9; int1 -> int2: 9-7=2; int2 & sent1 -> int3: Answer D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Какая цифра находится в разряде единиц значения 9^3 - 7?", "2": "A) 1", "3": "B) 3", "4": "C) 5", "5": "D) 2", "6": "E) 4", "7": "Цифра в разряде единиц 9^3 = 9", "8": "9 - 7 = 2", "9": "Ответ: Г", "10": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Какая цифра находится в разряде единиц значения 9^3\\xa0-\\xa07?'\nchoices = {'A': '1', 'B': '3', 'C': '5', 'D': '2', 'E': '4'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Какая цифра находится в разряде единиц значения 9^3\\xa0-\\xa07?']\nnew_fact = infer_new_fact(selected) # 'Цифра в разряде единиц 9^3\\xa0=\\xa09'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Цифра в разряде единиц 9^3\\xa0=\\xa09']\nnew_fact = infer_new_fact(selected) # '9\\xa0-\\xa07\\xa0=\\xa02'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какая цифра находится в разряде единиц значения 9^3\\xa0-\\xa07?', '9\\xa0-\\xa07\\xa0=\\xa02']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_216_dcff786936", "context": "", "options": ["A)1/5", "B)2/5", "C)3/5", "D)4/5", "E)6/5"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: There are 5 horses.; int1 -> int2: Probability of winning for each horse = 1/5.; int2 & sent2 -> int3: Probability of winning with 2 selected horses= (1/5)+(1/5)= 2/5.; int3 -> int4: Answer is 2/5.; int4 & sent3 -> int5: ANSWER:B; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "В скачках участвуют 5 лошадей.", "2": "Виктор выбирает двух лошадей наугад и делает на них ставку.", "3": "Чему равна вероятность того, что он выбрал лошадь-победителя?", "4": "A) 1/5", "5": "B) 2/5", "6": "C) 3/5", "7": "D) 4/5", "8": "E) 6/5", "9": "Участвуют 5 лошадей.", "10": "Вероятность выигрыша каждой лошади = 1/5.", "11": "Вероятность выигрыша с 2 выбранными лошадьми = (1/5) + (1/5) = 2/5.", "12": "Ответ — 2/5", "13": "ОТВЕТ: Б", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['В скачках участвуют 5\\xa0лошадей.', 'Виктор выбирает двух лошадей наугад и делает на них ставку.']\nquestion = 'Чему равна вероятность того, что он выбрал лошадь-победителя?'\nchoices = {'A': '1/5', 'B': '2/5', 'C': '3/5', 'D': '4/5', 'E': '6/5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В скачках участвуют 5\\xa0лошадей.']\nnew_fact = infer_new_fact(selected) # 'Участвуют 5\\xa0лошадей.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Участвуют 5\\xa0лошадей.']\nnew_fact = infer_new_fact(selected) # 'Вероятность выигрыша каждой лошади\\xa0=\\xa01/5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Виктор выбирает двух лошадей наугад и делает на них ставку.', 'Вероятность выигрыша каждой лошади\\xa0=\\xa01/5.']\nnew_fact = infer_new_fact(selected) # 'Вероятность выигрыша с 2\\xa0выбранными лошадьми\\xa0=\\xa0(1/5)\\xa0+\\xa0(1/5)\\xa0=\\xa02/5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вероятность выигрыша с 2\\xa0выбранными лошадьми\\xa0=\\xa0(1/5)\\xa0+\\xa0(1/5)\\xa0=\\xa02/5.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0—\\xa02/5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чему равна вероятность того, что он выбрал лошадь-победителя?', 'Ответ\\xa0—\\xa02/5']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_217_39b5e97d31", "context": "", "options": ["A)10", "B)11", "C)12", "D)13", "E)14"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: (2272 - 875) = 1397, is exactly divisible by N.; int1 -> int2: Now, 1397 = 11 * 127; int2 -> int3: The required 3-digit number is 127, the sum of whose digit is 10.; int3 & sent3 -> int4: ANSWER:A; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Если разделить 2272 и 875 на 3-значное число N,", "2": "получится одинаковый остаток.", "3": "Чему равна сумма цифр числа N?:", "4": "A) 10", "5": "B) 11", "6": "C) 12", "7": "D) 13", "8": "E) 14", "9": "(2272 - 875) = 1397 делится на N без остатка.", "10": "1397 = 11*127", "11": "Требуемое 3-значное число — 127, сумма цифр которого равна 10.", "12": "ОТВЕТ: А", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если разделить 2272 и 875 на 3-значное число N,', 'получится одинаковый остаток.']\nquestion = 'Чему равна сумма цифр числа N?:'\nchoices = {'A': '10', 'B': '11', 'C': '12', 'D': '13', 'E': '14'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если разделить 2272 и 875 на 3-значное число N,']\nnew_fact = infer_new_fact(selected) # '(2272\\xa0-\\xa0875)\\xa0=\\xa01397 делится на N без остатка.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(2272\\xa0-\\xa0875)\\xa0=\\xa01397 делится на N без остатка.']\nnew_fact = infer_new_fact(selected) # '1397\\xa0=\\xa011*127'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1397\\xa0=\\xa011*127']\nnew_fact = infer_new_fact(selected) # 'Требуемое 3-значное число\\xa0— 127, сумма цифр которого равна 10.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Чему равна сумма цифр числа N?:', 'Требуемое 3-значное число\\xa0— 127, сумма цифр которого равна 10.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_218_eb01145589", "context": "", "options": ["A)44%", "B)66%", "C)68%", "D)72%", "E)75%"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Let p = proportion that passed. Then 83p + 55(1- p) = 76, so p = 21/28 = 75; int1 & sent4 -> int2: correct answer E; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "Сдавшие экзамен ученики набрали в среднем 83 балла,", "2": "а не сдавшие — в среднем\n55 баллов.", "3": "Если общий средний балл по классу составил 76,", "4": "сколько процентов учеников сдали экзамен?", "5": "A) 44%", "6": "B) 66%", "7": "C) 68%", "8": "D) 72%", "9": "E) 75%", "10": "Пусть p = процент учеников, сдавших экзамен. Тогда 83p + 55(1 - p) = 76, следовательно, p = 21/28 = 75", "11": "Правильный ответ — Д", "12": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Сдавшие экзамен ученики набрали в среднем 83\\xa0балла,', 'а не сдавшие\\xa0— в среднем\\n55\\xa0баллов.', 'Если общий средний балл по классу составил 76,']\nquestion = 'сколько процентов учеников сдали экзамен?'\nchoices = {'A': '44%', 'B': '66%', 'C': '68%', 'D': '72%', 'E': '75%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сдавшие экзамен ученики набрали в среднем 83\\xa0балла,', 'а не сдавшие\\xa0— в среднем\\n55\\xa0баллов.', 'Если общий средний балл по классу составил 76,', 'сколько процентов учеников сдали экзамен?']\nnew_fact = infer_new_fact(selected) # 'Пусть p\\xa0=\\xa0процент учеников, сдавших экзамен. Тогда 83p\\xa0+\\xa055(1\\xa0-\\xa0p)\\xa0=\\xa076, следовательно, p\\xa0=\\xa021/28\\xa0=\\xa075'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько процентов учеников сдали экзамен?', 'Пусть p\\xa0=\\xa0процент учеников, сдавших экзамен. Тогда 83p\\xa0+\\xa055(1\\xa0-\\xa0p)\\xa0=\\xa076, следовательно, p\\xa0=\\xa021/28\\xa0=\\xa075']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_219_cb12350316", "context": "", "options": ["A)$83", "B)$92", "C)$90", "D)$97", "E)$104"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [2, 3], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [5, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "linearized_output_en": "sent1 -> int1: The total wage earned during the 15 days that the worker worked = 15 * 90 = $ 1350.; sent2 & sent3 -> int2: The total wage earned during the first 7 days = 7 * 87 = $ 609.; sent4 -> int3: The total wage earned during the last 7 days = 7 * 92 = $ 644.; int1 & int2 & int3 -> int4: Total wage earned during the 15 days = wage during first 7 days + wage on 8th day + wage during the last 7 days.; int4 -> int5: Or 1350 = 609 + wage on 8th day + 644; int5 -> int6: Wage on 8th day = 1350 - 609 - 644 = $ 97.; int6 & sent5 -> int7: Answer D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Средняя заработная плата рабочего в течение двух недель, состоящих из 15 рабочих дней подряд, составила 90 долл. США в день.", "2": "В течение первых 7 дней", "3": "его средняя заработная плата составила 87 долл. США в день, а", "4": "средняя заработная плата за последние 7 дней — 92 долл. США в день.", "5": "Какой была его заработная плата на 8-й день?", "6": "A) 83 долл. США", "7": "B) 92 долл. США", "8": "C) 90 долл. США", "9": "D) 97 долл. США", "10": "E) 104 долл. США", "11": "Общая заработная плата, полученная за 15 дней работы = 15*90 = 1350 долл. США.", "12": "Общая заработная плата за первые 7 дней = 7*87 = 609 долл. США.", "13": "Общая заработная плата за последние 7 дней = 7*92 = 644 долл. США.", "14": "Общая заработная плата за 15 дней = заработная плата за первые 7 дней + заработная плата за 8-й день + заработная плата за последние 7 дней.", "15": "Или 1350 = 609 + заработная плата на 8-й день + 644", "16": "Заработная плата на 8-й день = 1350 - 609 - 644 = 97 долл. США.", "17": "Ответ: Г", "18": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Средняя заработная плата рабочего в течение двух недель, состоящих из 15\\xa0рабочих дней подряд, составила 90\\xa0долл. США в день.',\n  'В течение первых 7\\xa0дней',\n  'его средняя заработная плата составила 87\\xa0долл. США в день, а',\n  'средняя заработная плата за последние 7\\xa0дней\\xa0— 92\\xa0долл. США в день.']\nquestion = 'Какой была его заработная плата на 8-й день?'\nchoices = {'A': '83\\xa0долл. США', 'B': '92\\xa0долл. США', 'C': '90\\xa0долл. США', 'D': '97\\xa0долл. США', 'E': '104\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Средняя заработная плата рабочего в течение двух недель, состоящих из 15\\xa0рабочих дней подряд, составила 90\\xa0долл. США в день.']\nnew_fact = infer_new_fact(selected) # 'Общая заработная плата, полученная за 15\\xa0дней работы\\xa0=\\xa015*90\\xa0=\\xa01350\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В течение первых 7\\xa0дней', 'его средняя заработная плата составила 87\\xa0долл. США в день, а']\nnew_fact = infer_new_fact(selected) # 'Общая заработная плата за первые 7\\xa0дней\\xa0=\\xa07*87\\xa0=\\xa0609\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['средняя заработная плата за последние 7\\xa0дней\\xa0— 92\\xa0долл. США в день.']\nnew_fact = infer_new_fact(selected) # 'Общая заработная плата за последние 7\\xa0дней\\xa0=\\xa07*92\\xa0=\\xa0644\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая заработная плата, полученная за 15\\xa0дней работы\\xa0=\\xa015*90\\xa0=\\xa01350\\xa0долл. США.', 'Общая заработная плата за первые 7\\xa0дней\\xa0=\\xa07*87\\xa0=\\xa0609\\xa0долл. США.', 'Общая заработная плата за последние 7\\xa0дней\\xa0=\\xa07*92\\xa0=\\xa0644\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Общая заработная плата за 15\\xa0дней\\xa0=\\xa0заработная плата за первые 7\\xa0дней\\xa0+\\xa0заработная плата за 8-й день\\xa0+\\xa0заработная плата за последние 7\\xa0дней.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Общая заработная плата за 15\\xa0дней\\xa0=\\xa0заработная плата за первые 7\\xa0дней\\xa0+\\xa0заработная плата за 8-й день\\xa0+\\xa0заработная плата за последние 7\\xa0дней.']\nnew_fact = infer_new_fact(selected) # 'Или 1350\\xa0=\\xa0609\\xa0+\\xa0заработная плата на 8-й день\\xa0+\\xa0644'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Или 1350\\xa0=\\xa0609\\xa0+\\xa0заработная плата на 8-й день\\xa0+\\xa0644']\nnew_fact = infer_new_fact(selected) # 'Заработная плата на 8-й день\\xa0=\\xa01350\\xa0-\\xa0609\\xa0-\\xa0644\\xa0=\\xa097\\xa0долл. США.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой была его заработная плата на 8-й день?', 'Заработная плата на 8-й день\\xa0=\\xa01350\\xa0-\\xa0609\\xa0-\\xa0644\\xa0=\\xa097\\xa0долл. США.']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_220_adbcc6148c", "context": "", "options": ["A)21", "B)33", "C)35", "D)42", "E)58"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [4, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 -> int1: Let the numbers be 3x and 5x; int1 & sent2 & sent3 -> int2: 3x-9 / 5x-9 = 12/23; int2 -> int3: 23(3x-9) = 12(5x-9); int3 -> int4: 9x = 99; int4 -> int5: x = 11; int5 & sent4 -> int6: The smaller number is = 3*11 = 33; int6 & sent4 -> int7: Answer is B; int7 -> int8: The answer is B);", "textual_logical_units": {"1": "Два числа находятся в соотношении 3:5.", "2": "Если из каждого вычесть 9,", "3": "новые числа будут находиться в соотношении 12:23.", "4": "Каково меньшее число?", "5": "A) 21", "6": "B) 33", "7": "C) 35", "8": "D) 42", "9": "E) 58", "10": "Пусть 3x и 5x — требуемые числа", "11": "3x - 9/5x - 9 = 12/23", "12": "23(3x - 9) = 12(5x - 9)", "13": "9x = 99", "14": "x = 11", "15": "Меньшее число = 3*11 = 33", "16": "Ответ — Б", "17": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['Два числа находятся в соотношении 3:5.', 'Если из каждого вычесть 9,', 'новые числа будут находиться в соотношении 12:23.']\nquestion = 'Каково меньшее число?'\nchoices = {'A': '21', 'B': '33', 'C': '35', 'D': '42', 'E': '58'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Два числа находятся в соотношении 3:5.']\nnew_fact = infer_new_fact(selected) # 'Пусть 3x и 5x\\xa0— требуемые числа'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если из каждого вычесть 9,', 'новые числа будут находиться в соотношении 12:23.', 'Пусть 3x и 5x\\xa0— требуемые числа']\nnew_fact = infer_new_fact(selected) # '3x\\xa0-\\xa09/5x\\xa0-\\xa09\\xa0=\\xa012/23'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x\\xa0-\\xa09/5x\\xa0-\\xa09\\xa0=\\xa012/23']\nnew_fact = infer_new_fact(selected) # '23(3x\\xa0-\\xa09)\\xa0=\\xa012(5x\\xa0-\\xa09)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['23(3x\\xa0-\\xa09)\\xa0=\\xa012(5x\\xa0-\\xa09)']\nnew_fact = infer_new_fact(selected) # '9x\\xa0=\\xa099'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['9x\\xa0=\\xa099']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa011'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково меньшее число?', 'x\\xa0=\\xa011']\nnew_fact = infer_new_fact(selected) # 'Меньшее число\\xa0=\\xa03*11\\xa0=\\xa033'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Каково меньшее число?', 'Меньшее число\\xa0=\\xa03*11\\xa0=\\xa033']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_221_29f1770752", "context": "", "options": ["A)40", "B)60", "C)70", "D)80", "E)90"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 11}, {"antecedents": [4], "consequent": 12}, {"antecedents": [5], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent4 -> int1: Present age of Denis =5 years; sent4 -> int2: Present age of Rahul =5−2=3; sent5 -> int3: Let present age of Ajay =x; sent1 & sent2 -> int4: Then, present age of Rahul =x−618; int2 & int4 -> int5: x−618=3⇒x−6=3×18=54⇒x=54+6=60; int5 -> int6: The answer is B);", "textual_logical_units": {"1": "Если вычесть 6 лет из нынешнего возраста Андрея и", "2": "разделить остаток на 18,", "3": "получим нынешний возраст Романа.", "4": "Если Роман на 2 года младше Дениса, которому 5 лет,", "5": "каков нынешний возраст Андрея?", "6": "A) 40", "7": "B) 60", "8": "C) 70", "9": "D) 80", "10": "E) 90", "11": "Нынешний возраст Дениса = 5 лет", "12": "Нынешний возраст Романа = 5 - 2 = 3", "13": "Пусть нынешний возраст Андрея = x", "14": "Тогда нынешний возраст Романа = x - 618", "15": "x - 618 = 3 ⇒ x - 6 = 3 × 18 = 54 ⇒ x = 54 + 6 = 60", "16": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Если вычесть 6\\xa0лет из нынешнего возраста Андрея и',\n  'разделить остаток на 18,',\n  'получим нынешний возраст Романа.',\n  'Если Роман на 2\\xa0года младше Дениса, которому 5\\xa0лет,']\nquestion = 'каков нынешний возраст Андрея?'\nchoices = {'A': '40', 'B': '60', 'C': '70', 'D': '80', 'E': '90'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если Роман на 2\\xa0года младше Дениса, которому 5\\xa0лет,']\nnew_fact = infer_new_fact(selected) # 'Нынешний возраст Дениса\\xa0=\\xa05\\xa0лет'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если Роман на 2\\xa0года младше Дениса, которому 5\\xa0лет,']\nnew_fact = infer_new_fact(selected) # 'Нынешний возраст Романа\\xa0=\\xa05\\xa0-\\xa02\\xa0=\\xa03'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каков нынешний возраст Андрея?']\nnew_fact = infer_new_fact(selected) # 'Пусть нынешний возраст Андрея\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если вычесть 6\\xa0лет из нынешнего возраста Андрея и', 'разделить остаток на 18,']\nnew_fact = infer_new_fact(selected) # 'Тогда нынешний возраст Романа\\xa0=\\xa0x\\xa0-\\xa0618'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Нынешний возраст Романа\\xa0=\\xa05\\xa0-\\xa02\\xa0=\\xa03', 'Тогда нынешний возраст Романа\\xa0=\\xa0x\\xa0-\\xa0618']\nnew_fact = infer_new_fact(selected) # 'x\\xa0-\\xa0618\\xa0=\\xa03\\xa0⇒\\xa0x\\xa0-\\xa06\\xa0=\\xa03\\xa0×\\xa018\\xa0=\\xa054\\xa0⇒\\xa0x\\xa0=\\xa054\\xa0+\\xa06\\xa0=\\xa060'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0-\\xa0618\\xa0=\\xa03\\xa0⇒\\xa0x\\xa0-\\xa06\\xa0=\\xa03\\xa0×\\xa018\\xa0=\\xa054\\xa0⇒\\xa0x\\xa0=\\xa054\\xa0+\\xa06\\xa0=\\xa060']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_222_bd6d496908", "context": "", "options": ["A)22 minutes", "B)30 minutes", "C)15 minutes", "D)24 minutes", "E)35 minutes"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: Number of ways of arranging 4 books = 4 ! = 4 x 3 x 2 x 1 = 24.; int1 & sent4 -> int2: So, total time taken = 24 minutes; int2 & sent4 -> int3: Answer: D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "У Анны есть 4 книги.", "2": "Если она решит расположить эти 4 книги во всех возможных комбинациях,", "3": "каждую минуту перемещая только по одной книге,", "4": "сколько времени это займет?", "5": "A) 22 минуты", "6": "B) 30 минут", "7": "C) 15 минут", "8": "D) 24 минуты", "9": "E) 35 минут", "10": "Количество способов расстановки 4 книг = 4! = 4 х 3 х 2 х 1 = 24.", "11": "Следовательно, общее время = 24 минуты", "12": "Ответ: D", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['У Анны есть 4\\xa0книги.', 'Если она решит расположить эти 4\\xa0книги во всех возможных комбинациях,', 'каждую минуту перемещая только по одной книге,']\nquestion = 'сколько времени это займет?'\nchoices = {'A': '22\\xa0минуты', 'B': '30\\xa0минут', 'C': '15\\xa0минут', 'D': '24\\xa0минуты', 'E': '35\\xa0минут'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У Анны есть 4\\xa0книги.', 'Если она решит расположить эти 4\\xa0книги во всех возможных комбинациях,', 'каждую минуту перемещая только по одной книге,', 'сколько времени это займет?']\nnew_fact = infer_new_fact(selected) # 'Количество способов расстановки 4\\xa0книг\\xa0=\\xa04!\\xa0=\\xa04\\xa0х\\xa03\\xa0х\\xa02\\xa0х\\xa01\\xa0=\\xa024.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько времени это займет?', 'Количество способов расстановки 4\\xa0книг\\xa0=\\xa04!\\xa0=\\xa04\\xa0х\\xa03\\xa0х\\xa02\\xa0х\\xa01\\xa0=\\xa024.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, общее время\\xa0=\\xa024\\xa0минуты'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько времени это займет?', 'Следовательно, общее время\\xa0=\\xa024\\xa0минуты']\nnew_fact = infer_new_fact(selected) # 'Ответ: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_223_b5c7d29dd8", "context": "", "options": ["A)10%", "B)25%", "C)28%", "D)30%", "E)36%"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent3 -> int1: Discount = 1-0.8*0.8=1-0.64=0.36=36%; int1 & sent4 -> int2: Answer choice E; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "Производитель шин предлагает скидку в размере 20% на бескамерные шины.", "2": "Некоторые розничные продавцы предлагают дополнительные скидки.", "3": "Если розничный продавец предложит дополнительную скидку в размере 20%,", "4": "какой будет общая скидка, доступная у этого продавца?", "5": "A) 10%", "6": "B) 25%", "7": "C) 28%", "8": "D) 30%", "9": "E) 36%", "10": "Скидка = 1 - 0,8*0,8 = 1 - 0,64 = 0,36 = 36%", "11": "Вариант ответа — Д", "12": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Производитель шин предлагает скидку в размере 20% на бескамерные шины.',\n  'Некоторые розничные продавцы предлагают дополнительные скидки.',\n  'Если розничный продавец предложит дополнительную скидку в размере 20%,']\nquestion = 'какой будет общая скидка, доступная у этого продавца?'\nchoices = {'A': '10%', 'B': '25%', 'C': '28%', 'D': '30%', 'E': '36%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Производитель шин предлагает скидку в размере 20% на бескамерные шины.', 'Если розничный продавец предложит дополнительную скидку в размере 20%,']\nnew_fact = infer_new_fact(selected) # 'Скидка\\xa0=\\xa01\\xa0-\\xa00,8*0,8\\xa0=\\xa01\\xa0-\\xa00,64\\xa0=\\xa00,36\\xa0=\\xa036%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какой будет общая скидка, доступная у этого продавца?', 'Скидка\\xa0=\\xa01\\xa0-\\xa00,8*0,8\\xa0=\\xa01\\xa0-\\xa00,64\\xa0=\\xa00,36\\xa0=\\xa036%']\nnew_fact = infer_new_fact(selected) # 'Вариант ответа\\xa0— Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вариант ответа\\xa0— Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_224_3d4b8e1e59", "context": "", "options": ["A)46", "B)81", "C)126", "D)252", "E)None"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [4], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: We have l=9 and l+2b=37; sent4 -> int2: Area = (l x b); int1 & int2 -> int3: =(9 x 14) sq.ft; int3 -> int4: = 126 sq.ft.; int4 & sent4 -> int5: Answer C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Прямоугольное парковочное место отмечено краской с трех сторон.", "2": "Если длина неокрашенной стороны составляет 9 футов,", "3": "а сумма длин окрашенных сторон составляет 37 футов,", "4": "какова площадь парковочного места в квадратных футах?", "5": "A) 46", "6": "B) 81", "7": "C) 126", "8": "D) 252", "9": "E) Ничего из вышеперечисленного", "10": "В условии указано l = 9 и l + 2b = 37", "11": "Площадь = (l x b)", "12": "= (9 x 14) кв. футов", "13": "= 126 кв. футов", "14": "Ответ — В", "15": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Прямоугольное парковочное место отмечено краской с трех сторон.',\n  'Если длина неокрашенной стороны составляет 9\\xa0футов,',\n  'а сумма длин окрашенных сторон составляет 37\\xa0футов,']\nquestion = 'какова площадь парковочного места в квадратных футах?'\nchoices = {'A': '46', 'B': '81', 'C': '126', 'D': '252', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если длина неокрашенной стороны составляет 9\\xa0футов,', 'а сумма длин окрашенных сторон составляет 37\\xa0футов,']\nnew_fact = infer_new_fact(selected) # 'В условии указано l\\xa0=\\xa09 и l\\xa0+\\xa02b\\xa0=\\xa037'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова площадь парковочного места в квадратных футах?']\nnew_fact = infer_new_fact(selected) # 'Площадь\\xa0=\\xa0(l\\xa0x\\xa0b)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['В условии указано l\\xa0=\\xa09 и l\\xa0+\\xa02b\\xa0=\\xa037', 'Площадь\\xa0=\\xa0(l\\xa0x\\xa0b)']\nnew_fact = infer_new_fact(selected) # '=\\xa0(9\\xa0x\\xa014)\\xa0кв. футов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa0(9\\xa0x\\xa014)\\xa0кв. футов']\nnew_fact = infer_new_fact(selected) # '=\\xa0126\\xa0кв. футов'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова площадь парковочного места в квадратных футах?', '=\\xa0126\\xa0кв. футов']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_225_b36b3a70cb", "context": "", "options": ["A)0", "B)1", "C)2", "D)3", "E)4"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Peter has 10 friends out of which he has to select 10 so 10C10= 1 Choice.; int1 & sent3 -> int2: ANSWER:B; int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Петр хочет найти 10 человек, чтобы вместе создать команду для соревнования в поиске спрятанных предметов.", "2": "Если у него есть 10 друзей, которые хотели бы принять участие,", "3": "сколько возможно вариантов формирования команды?", "4": "A) 0", "5": "B) 1", "6": "C) 2", "7": "D) 3", "8": "E) 4", "9": "У Петра есть 10 друзей, из которых он должен выбрать 10, поэтому 10C10 = 1 вариант.", "10": "ОТВЕТ: Б", "11": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Петр хочет найти 10\\xa0человек, чтобы вместе создать команду для соревнования в поиске спрятанных предметов.',\n  'Если у него есть 10\\xa0друзей, которые хотели бы принять участие,']\nquestion = 'сколько возможно вариантов формирования команды?'\nchoices = {'A': '0', 'B': '1', 'C': '2', 'D': '3', 'E': '4'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Петр хочет найти 10\\xa0человек, чтобы вместе создать команду для соревнования в поиске спрятанных предметов.', 'Если у него есть 10\\xa0друзей, которые хотели бы принять участие,']\nnew_fact = infer_new_fact(selected) # 'У Петра есть 10\\xa0друзей, из которых он должен выбрать 10, поэтому 10C10\\xa0=\\xa01\\xa0вариант.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько возможно вариантов формирования команды?', 'У Петра есть 10\\xa0друзей, из которых он должен выбрать 10, поэтому 10C10\\xa0=\\xa01\\xa0вариант.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_226_19fb9b2546", "context": "", "options": ["A)71", "B)62", "C)43", "D)67", "E)40"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: Total weight increased = (1.8 x 10) kg =18 kg.; int1 & sent2 & sent3 -> int2: Weight of the new man = (53 + 18) kg =71 kg.; int2 & sent3 -> int3: ANSWER A; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Средний вес 10 гребцов на лодке увеличился на 1,8 кг, когда одного из членов команды,", "2": "который весит 53 кг, заменили другим.", "3": "Найдите вес нового члена команды.", "4": "A) 71", "5": "B) 62", "6": "C) 43", "7": "D) 67", "8": "E) 40", "9": "Увеличение общего веса = (1,8 x 10) кг = 18 кг.", "10": "Вес нового члена команды = (53 + 18) кг = 71 кг.", "11": "ОТВЕТ — А", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Средний вес 10\\xa0гребцов на лодке увеличился на 1,8\\xa0кг, когда одного из членов команды,', 'который весит 53\\xa0кг, заменили другим.']\nquestion = 'Найдите вес нового члена команды.'\nchoices = {'A': '71', 'B': '62', 'C': '43', 'D': '67', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Средний вес 10\\xa0гребцов на лодке увеличился на 1,8\\xa0кг, когда одного из членов команды,']\nnew_fact = infer_new_fact(selected) # 'Увеличение общего веса\\xa0=\\xa0(1,8\\xa0x\\xa010)\\xa0кг\\xa0=\\xa018\\xa0кг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['который весит 53\\xa0кг, заменили другим.', 'Найдите вес нового члена команды.', 'Увеличение общего веса\\xa0=\\xa0(1,8\\xa0x\\xa010)\\xa0кг\\xa0=\\xa018\\xa0кг.']\nnew_fact = infer_new_fact(selected) # 'Вес нового члена команды\\xa0=\\xa0(53\\xa0+\\xa018)\\xa0кг\\xa0=\\xa071\\xa0кг.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите вес нового члена команды.', 'Вес нового члена команды\\xa0=\\xa0(53\\xa0+\\xa018)\\xa0кг\\xa0=\\xa071\\xa0кг.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ\\xa0— А'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ\\xa0— А']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_227_3f7ef3960e", "context": "", "options": ["A)11", "B)10", "C)9", "D)8", "E)7"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: (n-1)C2=45; int1 -> int2: n-1=10; int2 -> int3: n=11; int3 & sent4 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Коробка содержит некоторое количество шаров,", "2": "отмеченных последовательно цифрами от 1 до n.", "3": "Если существует 45 разных способов выбрать два шара из коробки таким образом, что шар с цифрой 3 не будет выбран,", "4": "каково значение n?", "5": "A) 11", "6": "B) 10", "7": "C) 9", "8": "D) 8", "9": "E) 7", "10": "(n - 1)С2 = 45", "11": "n - 1 = 10", "12": "n = 11", "13": "Ответ — А.", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Коробка содержит некоторое количество шаров,',\n  'отмеченных последовательно цифрами от 1 до n.',\n  'Если существует 45\\xa0разных способов выбрать два шара из коробки таким образом, что шар с цифрой 3 не будет выбран,']\nquestion = 'каково значение n?'\nchoices = {'A': '11', 'B': '10', 'C': '9', 'D': '8', 'E': '7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['отмеченных последовательно цифрами от 1 до n.', 'Если существует 45\\xa0разных способов выбрать два шара из коробки таким образом, что шар с цифрой 3 не будет выбран,', 'каково значение n?']\nnew_fact = infer_new_fact(selected) # '(n\\xa0-\\xa01)С2\\xa0=\\xa045'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n\\xa0-\\xa01)С2\\xa0=\\xa045']\nnew_fact = infer_new_fact(selected) # 'n\\xa0-\\xa01\\xa0=\\xa010'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n\\xa0-\\xa01\\xa0=\\xa010']\nnew_fact = infer_new_fact(selected) # 'n\\xa0=\\xa011'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каково значение n?', 'n\\xa0=\\xa011']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_228_9a9fd7abf9", "context": "", "options": ["A)I only", "B)III only", "C)II only", "D)I and II only", "E)I and III only"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13], "consequent": 15}, {"antecedents": [2, 3, 4, 5, 7, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "linearized_output_en": "sent1 & sent4 -> int1: If Q has 5 factors, we can represent Q = a^4, where a is positive integer more than 1.Let's assume that \"a\" is not a prime number. Let a = kp, where both k and p are positive integers.; int1 -> int2: Thus, Q = (kp)4=k4∗p4(kp)4=k4∗p4. Now the number of factors of Q = (4+1)*(4+1) = 25. But as the given condition states that Q has ONLY 5 factors, thus \"a\" can't have any other factor except 1 and itself. Thus, a = prime number.; int2 -> int3: Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can't answer a \"MUST be true question\"; int3 -> int4: Statement II : Always true as proved above.; int3 -> int5: Statement III : Again take a =2. Thus, Q = 64. We don't have this as product of 2 primes.; int3 & int4 & int5 & sent2 & sent3 & sent4 & sent5 & sent7 -> int6: The Answer is, B.; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "Если положительное целое число Q имеет 5 множителей,", "2": "какое из перечисленных ниже утверждений о Q верно?\nI.", "3": "Q — квадрат простого числа.\nII.", "4": "Q — четвертая степень простого числа.\nIII.", "5": "Q — произведение двух простых чисел.", "6": "A) Только I", "7": "B) Только III", "8": "C) Только II", "9": "D) Только I и II", "10": "E) Только I и III", "11": "Если число Q состоит из 5 множителей, можно представить Q = a^4, где a — целое положительное число больше 1. Допустим, что «a» не является простым числом. Пусть a = kp, где k и p — положительные целые числа.", "12": "Тогда A = (kp)4 = k4*p4(kp)4 = k4*p4. Теперь количество множителей Q = (4 + 1)*(4 + 1) = 25. Но поскольку в условии сказано, что у числа Q ТОЛЬКО 5 множителей, у числа «a» не может быть других множителей, кроме 1 и самого себя. Следовательно, a = простое число.", "13": "Утверждение I: Можно представить Q = (a^2)^2. Требуется доказать, что a^2 является простым числом. Представим, что a = 2. Видно, что это не простое число. Следовательно, этот вариант не может быть ответом на вопрос «какое утверждение ДОЛЖНО быть верно?»", "14": "Утверждение II: В соответствии с доказательством выше, всегда верно.", "15": "Утверждение III: Снова представим, что a = 2. Тогда Q = 64. Это число не является произведением двух простых чисел.", "16": "Ответ — Б.", "17": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Если положительное целое число Q имеет 5\\xa0множителей,',\n  'какое из перечисленных ниже утверждений о Q верно?\\nI.',\n  'Q\\xa0— квадрат простого числа.\\nII.',\n  'Q\\xa0— четвертая степень простого числа.\\nIII.']\nquestion = 'Q\\xa0— произведение двух простых чисел.'\nchoices = {'A': 'Только I', 'B': 'Только III', 'C': 'Только II', 'D': 'Только I и II', 'E': 'Только I и III'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если положительное целое число Q имеет 5\\xa0множителей,', 'Q\\xa0— четвертая степень простого числа.\\nIII.']\nnew_fact = infer_new_fact(selected) # 'Если число Q состоит из 5\\xa0множителей, можно представить Q\\xa0=\\xa0a^4, где a\\xa0— целое положительное число больше 1. Допустим, что «a» не является простым числом. Пусть a\\xa0=\\xa0kp, где k и p\\xa0— положительные целые числа.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если число Q состоит из 5\\xa0множителей, можно представить Q\\xa0=\\xa0a^4, где a\\xa0— целое положительное число больше 1. Допустим, что «a» не является простым числом. Пусть a\\xa0=\\xa0kp, где k и p\\xa0— положительные целые числа.']\nnew_fact = infer_new_fact(selected) # 'Тогда A\\xa0=\\xa0(kp)4\\xa0=\\xa0k4*p4(kp)4\\xa0=\\xa0k4*p4. Теперь количество множителей Q\\xa0=\\xa0(4\\xa0+\\xa01)*(4\\xa0+\\xa01)\\xa0=\\xa025. Но поскольку в условии сказано, что у числа Q ТОЛЬКО 5\\xa0множителей, у числа «a» не может быть других множителей, кроме 1 и самого себя. Следовательно, a\\xa0=\\xa0простое число.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Тогда A\\xa0=\\xa0(kp)4\\xa0=\\xa0k4*p4(kp)4\\xa0=\\xa0k4*p4. Теперь количество множителей Q\\xa0=\\xa0(4\\xa0+\\xa01)*(4\\xa0+\\xa01)\\xa0=\\xa025. Но поскольку в условии сказано, что у числа Q ТОЛЬКО 5\\xa0множителей, у числа «a» не может быть других множителей, кроме 1 и самого себя. Следовательно, a\\xa0=\\xa0простое число.']\nnew_fact = infer_new_fact(selected) # 'Утверждение I: Можно представить Q\\xa0=\\xa0(a^2)^2. Требуется доказать, что a^2 является простым числом. Представим, что a\\xa0=\\xa02. Видно, что это не простое число. Следовательно, этот вариант не может быть ответом на вопрос «какое утверждение ДОЛЖНО быть верно?»'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Утверждение I: Можно представить Q\\xa0=\\xa0(a^2)^2. Требуется доказать, что a^2 является простым числом. Представим, что a\\xa0=\\xa02. Видно, что это не простое число. Следовательно, этот вариант не может быть ответом на вопрос «какое утверждение ДОЛЖНО быть верно?»']\nnew_fact = infer_new_fact(selected) # 'Утверждение II: В соответствии с доказательством выше, всегда верно.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Утверждение I: Можно представить Q\\xa0=\\xa0(a^2)^2. Требуется доказать, что a^2 является простым числом. Представим, что a\\xa0=\\xa02. Видно, что это не простое число. Следовательно, этот вариант не может быть ответом на вопрос «какое утверждение ДОЛЖНО быть верно?»']\nnew_fact = infer_new_fact(selected) # 'Утверждение III: Снова представим, что a\\xa0=\\xa02. Тогда Q\\xa0=\\xa064. Это число не является произведением двух простых чисел.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какое из перечисленных ниже утверждений о Q верно?\\nI.', 'Q\\xa0— квадрат простого числа.\\nII.', 'Q\\xa0— четвертая степень простого числа.\\nIII.', 'Q\\xa0— произведение двух простых чисел.', 'B) Только III', 'Утверждение I: Можно представить Q\\xa0=\\xa0(a^2)^2. Требуется доказать, что a^2 является простым числом. Представим, что a\\xa0=\\xa02. Видно, что это не простое число. Следовательно, этот вариант не может быть ответом на вопрос «какое утверждение ДОЛЖНО быть верно?»', 'Утверждение II: В соответствии с доказательством выше, всегда верно.', 'Утверждение III: Снова представим, что a\\xa0=\\xa02. Тогда Q\\xa0=\\xa064. Это число не является произведением двух простых чисел.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_229_f3ff901d5a", "context": "", "options": ["A)8", "B)9", "C)10", "D)11", "E)12"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: 6x - 3x = 24; int1 -> int2: 3x = 24; int2 -> int3: x = 8; int3 & sent2 & sent3 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Если 6x - y = 24 и y = 3x,", "2": "каково значение x?", "3": "A) 8", "4": "B) 9", "5": "C) 10", "6": "D) 11", "7": "E) 12", "8": "6x - 3x = 24", "9": "3x = 24", "10": "x = 8", "11": "Ответ — А.", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если 6x\\xa0-\\xa0y\\xa0=\\xa024 и y\\xa0=\\xa03x,']\nquestion = 'каково значение x?'\nchoices = {'A': '8', 'B': '9', 'C': '10', 'D': '11', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если 6x\\xa0-\\xa0y\\xa0=\\xa024 и y\\xa0=\\xa03x,']\nnew_fact = infer_new_fact(selected) # '6x\\xa0-\\xa03x\\xa0=\\xa024'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6x\\xa0-\\xa03x\\xa0=\\xa024']\nnew_fact = infer_new_fact(selected) # '3x\\xa0=\\xa024'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x\\xa0=\\xa024']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['каково значение x?', 'A) 8', 'x\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_230_2c474f955a", "context": "", "options": ["A)1", "B)2", "C)3", "D)4", "E)5"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent4 -> int1: Let's compare the cost to rent x CDs.; int1 & sent1 & sent2 & sent3 -> int2: 4x > 2x+7; int2 -> int3: 2x > 7; int3 -> int4: x > 3.5; int4 -> int5: The minimum number of CDs you would need to rent is 4.; int5 & sent4 & sent8 -> int6: The answer is D.; int6 -> int7: The answer is D);", "textual_logical_units": {"1": "Без членства в программе в местном видеомагазине можно взять напрокат DVD-диски по цене 4 долл. США за фильм.", "2": "Однако, если приобрести членство за 7 долл. США в месяц,", "3": "можно брать напрокат DVD-диски по цене 2 долл. США за штуку.", "4": "Какое минимальное количество DVD-дисков нужно взять напрокат, чтобы было выгодно приобрести членство в программе?", "5": "A) 1", "6": "B) 2", "7": "C) 3", "8": "D) 4", "9": "E) 5", "10": "Сравним стоимость проката x дисков.", "11": "4x > 2x + 7", "12": "2x > 7", "13": "x > 3,5", "14": "Минимальное количество дисков, которые нужно взять напрокат, равно 4.", "15": "Ответ — Г.", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Без членства в программе в местном видеомагазине можно взять напрокат DVD-диски по цене 4\\xa0долл. США за фильм.',\n  'Однако, если приобрести членство за 7\\xa0долл. США в месяц,',\n  'можно брать напрокат DVD-диски по цене 2\\xa0долл. США за штуку.']\nquestion = 'Какое минимальное количество DVD-дисков нужно взять напрокат, чтобы было выгодно приобрести членство в программе?'\nchoices = {'A': '1', 'B': '2', 'C': '3', 'D': '4', 'E': '5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Какое минимальное количество DVD-дисков нужно взять напрокат, чтобы было выгодно приобрести членство в программе?']\nnew_fact = infer_new_fact(selected) # 'Сравним стоимость проката x\\xa0дисков.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Без членства в программе в местном видеомагазине можно взять напрокат DVD-диски по цене 4\\xa0долл. США за фильм.', 'Однако, если приобрести членство за 7\\xa0долл. США в месяц,', 'можно брать напрокат DVD-диски по цене 2\\xa0долл. США за штуку.', 'Сравним стоимость проката x\\xa0дисков.']\nnew_fact = infer_new_fact(selected) # '4x\\xa0>\\xa02x\\xa0+\\xa07'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4x\\xa0>\\xa02x\\xa0+\\xa07']\nnew_fact = infer_new_fact(selected) # '2x\\xa0>\\xa07'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x\\xa0>\\xa07']\nnew_fact = infer_new_fact(selected) # 'x\\xa0>\\xa03,5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0>\\xa03,5']\nnew_fact = infer_new_fact(selected) # 'Минимальное количество дисков, которые нужно взять напрокат, равно 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какое минимальное количество DVD-дисков нужно взять напрокат, чтобы было выгодно приобрести членство в программе?', 'D) 4', 'Минимальное количество дисков, которые нужно взять напрокат, равно 4.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_231_1779eac373", "context": "", "options": ["A) 108", "B) 112", "C) 116", "D) 120", "E) 124"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent0 -> int1: 1 pound = 16 ounces.; int1 & sent1 -> int2: 7 pounds and 4 ounces = (7 x 16) + 4 = 116 ounces.; int2 & sent2 & sent5 -> int3: Answer: C.; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Мешок корма для кошек весит 7 фунтов и 4 унции.", "2": "Сколько весит мешок в унциях?", "3": "A) 108", "4": "B) 112", "5": "C) 116", "6": "D) 120", "7": "E) 124", "8": "1 фунт = 16 унций.", "9": "7 фунтов и 4 унции = (7 x 16) + 4 = 116 унций.", "10": "Ответ: В.", "11": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Мешок корма для кошек весит 7\\xa0фунтов и 4\\xa0унции.']\nquestion = 'Сколько весит мешок в унциях?'\nchoices = {'A': '108', 'B': '112', 'C': '116', 'D': '120', 'E': '124'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # '1\\xa0фунт\\xa0=\\xa016\\xa0унций.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Мешок корма для кошек весит 7\\xa0фунтов и 4\\xa0унции.', '1\\xa0фунт\\xa0=\\xa016\\xa0унций.']\nnew_fact = infer_new_fact(selected) # '7\\xa0фунтов и 4\\xa0унции\\xa0=\\xa0(7\\xa0x\\xa016)\\xa0+\\xa04\\xa0=\\xa0116\\xa0унций.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько весит мешок в унциях?', 'C) 116', '7\\xa0фунтов и 4\\xa0унции\\xa0=\\xa0(7\\xa0x\\xa016)\\xa0+\\xa04\\xa0=\\xa0116\\xa0унций.']\nnew_fact = infer_new_fact(selected) # 'Ответ: В.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: В.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_232_3d865eccd7", "context": "", "options": ["A)4", "B)8", "C)22", "D)50", "E)20"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [5, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent10 & sent5 -> int1: Jack did 2/3 of the work, which is 8 hours. So if Jack would finish the job this would take him 4 extra hours. Jill's rate is 5% of what Jack would do in those 4 hours. That means it would take her ten times as much time as Jack put into the job. 5*4 equals 20, answer E.; int1 -> int2: The answer is E);", "textual_logical_units": {"1": "Самостоятельно Иван может очистить яхту за 12 часов.", "2": "В определенный день он выполняет две трети работы.", "3": "Оставшуюся часть работы выполняет Мария,", "4": "и ее скорость очистки составляет всего 5% от скорости Ивана.", "5": "Сколько времени потребуется Марии, чтобы завершить оставшуюся работу?", "6": "A) 4", "7": "B) 8", "8": "C) 22", "9": "D) 50", "10": "E) 20", "11": "Иван выполнил 2/3 работы, на это ушло 8 часов. Поэтому, если бы Иван закончил работу, на это у него ушло бы еще 4 часа. Скорость Марии составляет 5% от той, на которой работал бы Иван в течение этих 4 часов. Это значит, что у нее уйдет в десять раз больше времени, чем у Ивана. 5*4 равно 20, ответ Д.", "12": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Самостоятельно Иван может очистить яхту за 12\\xa0часов.',\n  'В определенный день он выполняет две трети работы.',\n  'Оставшуюся часть работы выполняет Мария,',\n  'и ее скорость очистки составляет всего 5% от скорости Ивана.']\nquestion = 'Сколько времени потребуется Марии, чтобы завершить оставшуюся работу?'\nchoices = {'A': '4', 'B': '8', 'C': '22', 'D': '50', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Сколько времени потребуется Марии, чтобы завершить оставшуюся работу?', 'E) 20']\nnew_fact = infer_new_fact(selected) # 'Иван выполнил 2/3\\xa0работы, на это ушло 8\\xa0часов. Поэтому, если бы Иван закончил работу, на это у него ушло бы еще 4\\xa0часа. Скорость Марии составляет 5% от той, на которой работал бы Иван в течение этих 4\\xa0часов. Это значит, что у нее уйдет в десять раз больше времени, чем у Ивана. 5*4 равно 20, ответ Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Иван выполнил 2/3\\xa0работы, на это ушло 8\\xa0часов. Поэтому, если бы Иван закончил работу, на это у него ушло бы еще 4\\xa0часа. Скорость Марии составляет 5% от той, на которой работал бы Иван в течение этих 4\\xa0часов. Это значит, что у нее уйдет в десять раз больше времени, чем у Ивана. 5*4 равно 20, ответ Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_233_9b3d637ef1", "context": "", "options": ["A)2%", "B)8%", "C)5%", "D)10%", "E)None of these"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [4, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent4 -> int1: (100 * 300 )/(5000*3) = 2%; int1 & sent4 & sent6 -> int2: Answer : A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Профессора одолжили", "2": "в университете 5000 рупий под простые проценты.", "3": "Через 3 года университет получил", "4": "300 рупий в качестве процентов.", "5": "Какова годовая процентная ставка?", "6": "A) 2%", "7": "B) 8%", "8": "C) 5%", "9": "D) 10%", "10": "E) Ничего из вышеперечисленного", "11": "(100*300)/(5000*3) = 2%", "12": "Ответ: A", "13": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Профессора одолжили', 'в университете 5000\\xa0рупий под простые проценты.', 'Через 3\\xa0года университет получил', '300\\xa0рупий в качестве процентов.']\nquestion = 'Какова годовая процентная ставка?'\nchoices = {'A': '2%', 'B': '8%', 'C': '5%', 'D': '10%', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['в университете 5000\\xa0рупий под простые проценты.', 'Через 3\\xa0года университет получил', '300\\xa0рупий в качестве процентов.']\nnew_fact = infer_new_fact(selected) # '(100*300)/(5000*3)\\xa0=\\xa02%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['300\\xa0рупий в качестве процентов.', 'A) 2%', '(100*300)/(5000*3)\\xa0=\\xa02%']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_234_4687e1e56c", "context": "", "options": ["A)s.5050", "B)s.5723", "C)s.5040", "D)s.4950", "E)s.4870"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 5, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Rs.4578 = 20% of SP; int1 -> int2: :. SP = 4578 x 100/80 = Rs.5723; int2 & sent3 & sent5 -> int3: Answer: Option B; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "В ходе распродажи на все товары была предоставлена скидка в размере 20%.", "2": "Если в ходе распродажи Винит купил товар за 4578 рупий,", "3": "Какой была фактическая прейскурантная цена этого товара?", "4": "A) 5050 рупий", "5": "B) 5723 рупий", "6": "C) 5040 рупий", "7": "D) 4950 рупий", "8": "E) 4870 рупий", "9": "4578 рупий = 20% от прейскурантной цены", "10": ":. Прейскурантная цена = 4578 х 100/80 = 5723 рупий", "11": "Ответ: Вариант Б", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = ['В ходе распродажи на все товары была предоставлена скидка в размере 20%.', 'Если в ходе распродажи Винит купил товар за 4578\\xa0рупий,']\nquestion = 'Какой была фактическая прейскурантная цена этого товара?'\nchoices = {'A': '5050\\xa0рупий', 'B': '5723\\xa0рупий', 'C': '5040\\xa0рупий', 'D': '4950\\xa0рупий', 'E': '4870\\xa0рупий'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В ходе распродажи на все товары была предоставлена скидка в размере 20%.', 'Если в ходе распродажи Винит купил товар за 4578\\xa0рупий,']\nnew_fact = infer_new_fact(selected) # '4578\\xa0рупий\\xa0=\\xa020% от прейскурантной цены'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4578\\xa0рупий\\xa0=\\xa020% от прейскурантной цены']\nnew_fact = infer_new_fact(selected) # ':. Прейскурантная цена\\xa0=\\xa04578\\xa0х\\xa0100/80\\xa0=\\xa05723\\xa0рупий'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какой была фактическая прейскурантная цена этого товара?', 'B) 5723\\xa0рупий', ':. Прейскурантная цена\\xa0=\\xa04578\\xa0х\\xa0100/80\\xa0=\\xa05723\\xa0рупий']\nnew_fact = infer_new_fact(selected) # 'Ответ: Вариант Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Вариант Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_235_8182b5622b", "context": "", "options": ["A)AB/2700", "B)27/AB", "C)AB/270", "D)2700/AB", "E)100AB/27"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [2, 3, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: 27 bottles cost A cents or A/100 dollars; int1 -> int2: 1 bottle will cost = A/100/27 = A/2700; int2 & sent2 -> int3: B bottles in dollars = B*A/2700 = AB/2700; int2 & int3 & sent2 & sent3 -> int4: Hence, answer will be A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Если 27 бутылок газировки стоят А центов,", "2": "сколько будут стоить B бутылок в долларах?", "3": "A) AB/2700", "4": "B) 27/AB", "5": "C) AB/270", "6": "D) 2700/AB", "7": "E) 100AB/27", "8": "27 бутылок стоят 1 цент или A/100 долл. США", "9": "1 бутылка стоит = A/100/27 = A/2700", "10": "Стоимость B бутылок в долларах = B*A/2700 = AB/2700", "11": "Следовательно, ответ — A.", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если 27\\xa0бутылок газировки стоят А\\xa0центов,']\nquestion = 'сколько будут стоить B\\xa0бутылок в долларах?'\nchoices = {'A': 'AB/2700', 'B': '27/AB', 'C': 'AB/270', 'D': '2700/AB', 'E': '100AB/27'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если 27\\xa0бутылок газировки стоят А\\xa0центов,']\nnew_fact = infer_new_fact(selected) # '27\\xa0бутылок стоят 1\\xa0цент или A/100\\xa0долл. США'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['27\\xa0бутылок стоят 1\\xa0цент или A/100\\xa0долл. США']\nnew_fact = infer_new_fact(selected) # '1\\xa0бутылка стоит\\xa0=\\xa0A/100/27\\xa0=\\xa0A/2700'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько будут стоить B\\xa0бутылок в долларах?', '1\\xa0бутылка стоит\\xa0=\\xa0A/100/27\\xa0=\\xa0A/2700']\nnew_fact = infer_new_fact(selected) # 'Стоимость B\\xa0бутылок в долларах\\xa0=\\xa0B*A/2700\\xa0=\\xa0AB/2700'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько будут стоить B\\xa0бутылок в долларах?', 'A) AB/2700', '1\\xa0бутылка стоит\\xa0=\\xa0A/100/27\\xa0=\\xa0A/2700', 'Стоимость B\\xa0бутылок в долларах\\xa0=\\xa0B*A/2700\\xa0=\\xa0AB/2700']\nnew_fact = infer_new_fact(selected) # 'Следовательно, ответ\\xa0— A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, ответ\\xa0— A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_236_6710a9d676", "context": "", "options": ["A)8", "B)28", "C)46", "D)66", "E)70"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [3, 6, 11, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4; int1 -> int2: 3 + (7 C4; int1 & int2 -> int3: 2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11; int1 & int2 & int3 -> int4: 3 = 165. So the probability of them costing more than $4 if they are randomly chosen is; int3 & int4 -> int5: 3 + (7 C4; int4 & int5 -> int6: 46/165; int3 & int4 & int6 & sent3 & sent6 -> int7: correct answer C; int7 -> int8: The answer is C);", "textual_logical_units": {"1": "В пакете 11 шоколадных батончиков: три из них стоят по 50 центов каждый,", "2": "четыре — по 1  долл. США и еще четыре — по 2  долл. США\nкаждый.", "3": "Сколькими способами можно выбрать 3 батончика из 11, чтобы их общая стоимость превысила 4 долл. США?", "4": "A) 8", "5": "B) 28", "6": "C) 46", "7": "D) 66", "8": "E) 70", "9": "Варианты выбора 3 шоколадных батончиков общей стоимостью более 4 долл. США включают: выбор 3 из 4 (по 2 долл. США каждый); выбор 2 из 4 (по 2 долл. США каждый) и 1 из 7 оставшихся. Общее количество способов равно C4", "10": "3 + (7C4", "11": "2) = 46. В данном случае общее количество способов выбрать 3 батончика из 11 равно C11", "12": "3 = 165. Следовательно, вероятность того, что выбранные случайным образом батончики будут стоить более 4 долл. США, равна", "13": "3 + (7C4", "14": "46/165", "15": "Правильный ответ — В", "16": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'В пакете 11\\xa0шоколадных батончиков: три из них стоят по 50\\xa0центов каждый,',\n  'четыре\\xa0— по 1\\xa0\\xa0долл. США и еще четыре\\xa0— по 2\\xa0\\xa0долл. США\\nкаждый.']\nquestion = 'Сколькими способами можно выбрать 3\\xa0батончика из 11, чтобы их общая стоимость превысила 4\\xa0долл. США?'\nchoices = {'A': '8', 'B': '28', 'C': '46', 'D': '66', 'E': '70'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['В пакете 11\\xa0шоколадных батончиков: три из них стоят по 50\\xa0центов каждый,', 'четыре\\xa0— по 1\\xa0\\xa0долл. США и еще четыре\\xa0— по 2\\xa0\\xa0долл. США\\nкаждый.', 'Сколькими способами можно выбрать 3\\xa0батончика из 11, чтобы их общая стоимость превысила 4\\xa0долл. США?']\nnew_fact = infer_new_fact(selected) # 'Варианты выбора 3\\xa0шоколадных батончиков общей стоимостью более 4\\xa0долл. США включают: выбор 3 из 4 (по 2\\xa0долл. США каждый); выбор 2 из 4 (по 2\\xa0долл. США каждый) и 1 из 7 оставшихся. Общее количество способов равно C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Варианты выбора 3\\xa0шоколадных батончиков общей стоимостью более 4\\xa0долл. США включают: выбор 3 из 4 (по 2\\xa0долл. США каждый); выбор 2 из 4 (по 2\\xa0долл. США каждый) и 1 из 7 оставшихся. Общее количество способов равно C4']\nnew_fact = infer_new_fact(selected) # '3\\xa0+\\xa0(7C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Варианты выбора 3\\xa0шоколадных батончиков общей стоимостью более 4\\xa0долл. США включают: выбор 3 из 4 (по 2\\xa0долл. США каждый); выбор 2 из 4 (по 2\\xa0долл. США каждый) и 1 из 7 оставшихся. Общее количество способов равно C4', '3\\xa0+\\xa0(7C4']\nnew_fact = infer_new_fact(selected) # '2)\\xa0=\\xa046. В данном случае общее количество способов выбрать 3\\xa0батончика из 11 равно C11'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Варианты выбора 3\\xa0шоколадных батончиков общей стоимостью более 4\\xa0долл. США включают: выбор 3 из 4 (по 2\\xa0долл. США каждый); выбор 2 из 4 (по 2\\xa0долл. США каждый) и 1 из 7 оставшихся. Общее количество способов равно C4', '3\\xa0+\\xa0(7C4', '2)\\xa0=\\xa046. В данном случае общее количество способов выбрать 3\\xa0батончика из 11 равно C11']\nnew_fact = infer_new_fact(selected) # '3\\xa0=\\xa0165. Следовательно, вероятность того, что выбранные случайным образом батончики будут стоить более 4\\xa0долл. США, равна'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2)\\xa0=\\xa046. В данном случае общее количество способов выбрать 3\\xa0батончика из 11 равно C11', '3\\xa0=\\xa0165. Следовательно, вероятность того, что выбранные случайным образом батончики будут стоить более 4\\xa0долл. США, равна']\nnew_fact = infer_new_fact(selected) # '3\\xa0+\\xa0(7C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3\\xa0=\\xa0165. Следовательно, вероятность того, что выбранные случайным образом батончики будут стоить более 4\\xa0долл. США, равна', '3\\xa0+\\xa0(7C4']\nnew_fact = infer_new_fact(selected) # '46/165'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами можно выбрать 3\\xa0батончика из 11, чтобы их общая стоимость превысила 4\\xa0долл. США?', 'C) 46', '2)\\xa0=\\xa046. В данном случае общее количество способов выбрать 3\\xa0батончика из 11 равно C11', '3\\xa0=\\xa0165. Следовательно, вероятность того, что выбранные случайным образом батончики будут стоить более 4\\xa0долл. США, равна', '46/165']\nnew_fact = infer_new_fact(selected) # 'Правильный ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Правильный ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_237_3b603322dd", "context": "", "options": ["A)120", "B)19", "C)180", "D)420", "E)460"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [4, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 -> int1: No of ways = All ways to choose - ways using just men - ways using just women = C(8,4)-C(4,4)-C(4,4) = 21 - 1 - 1 = 19; int1 & sent4 & sent6 -> int2: Answer is (B); int2 -> int3: The answer is B);", "textual_logical_units": {"1": "Команда на конференции состоит из 4 мужчин и 4 женщин.", "2": "Выбраны четыре докладчика, которые представят выводы команды перед всей аудиторией конференции.", "3": "Сколько разных групп докладчиков можно выбрать из команды, если команда не может состоять только из мужчин или только из женщин?", "4": "(Две группы докладчиков считаются разными, если хотя бы один докладчик отличается).", "5": "A) 120", "6": "B) 19", "7": "C) 180", "8": "D) 420", "9": "E) 460", "10": "Количество вариантов = все варианты выбора - варианты, в которых выбраны только мужчины - варианты, в которых выбраны только женщины = C(8,4) - C(4,4) - C(4,4) = 21 - 1 - 1 = 19", "11": "Ответ — (B)", "12": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Команда на конференции состоит из 4\\xa0мужчин и 4\\xa0женщин.',\n  'Выбраны четыре докладчика, которые представят выводы команды перед всей аудиторией конференции.',\n  'Сколько разных групп докладчиков можно выбрать из команды, если команда не может состоять только из мужчин или только из женщин?']\nquestion = '(Две группы докладчиков считаются разными, если хотя бы один докладчик отличается).'\nchoices = {'A': '120', 'B': '19', 'C': '180', 'D': '420', 'E': '460'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Команда на конференции состоит из 4\\xa0мужчин и 4\\xa0женщин.', 'Выбраны четыре докладчика, которые представят выводы команды перед всей аудиторией конференции.', 'Сколько разных групп докладчиков можно выбрать из команды, если команда не может состоять только из мужчин или только из женщин?']\nnew_fact = infer_new_fact(selected) # 'Количество вариантов\\xa0=\\xa0все варианты выбора\\xa0-\\xa0варианты, в которых выбраны только мужчины\\xa0-\\xa0варианты, в которых выбраны только женщины\\xa0=\\xa0C(8,4)\\xa0-\\xa0C(4,4)\\xa0-\\xa0C(4,4)\\xa0=\\xa021\\xa0-\\xa01\\xa0-\\xa01\\xa0=\\xa019'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(Две группы докладчиков считаются разными, если хотя бы один докладчик отличается).', 'B) 19', 'Количество вариантов\\xa0=\\xa0все варианты выбора\\xa0-\\xa0варианты, в которых выбраны только мужчины\\xa0-\\xa0варианты, в которых выбраны только женщины\\xa0=\\xa0C(8,4)\\xa0-\\xa0C(4,4)\\xa0-\\xa0C(4,4)\\xa0=\\xa021\\xa0-\\xa01\\xa0-\\xa01\\xa0=\\xa019']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— (B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— (B)']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_238_8bb7e9571b", "context": "", "options": ["A)50", "B)100", "C)150", "D)200", "E)70"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 9, 10, 11], "consequent": 12}, {"antecedents": [3, 6, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 -> int1: This means 2/5 of the class are boys; int1 & sent2 -> int2: 2x/5=100; int2 -> int3: x=250; int1 & int2 & int3 & sent1 -> int4: therefore, girls = 150; int1 & int2 & int3 & int4 & sent3 & sent6 -> int5: Answer is C; int5 -> int6: The answer is C);", "textual_logical_units": {"1": "Ровно 2/5 детей в классе — девочки.", "2": "Если в классе 100 мальчиков,", "3": "сколько девочек в классе?", "4": "A) 50", "5": "B) 100", "6": "C) 150", "7": "D) 200", "8": "E) 70", "9": "Это означает, что 2/5 класса — мальчики", "10": "2x/5 = 100", "11": "x = 250", "12": "Следовательно, количество девочек = 150", "13": "Ответ — В", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = ['Ровно 2/5\\xa0детей в классе\\xa0— девочки.', 'Если в классе 100\\xa0мальчиков,']\nquestion = 'сколько девочек в классе?'\nchoices = {'A': '50', 'B': '100', 'C': '150', 'D': '200', 'E': '70'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ровно 2/5\\xa0детей в классе\\xa0— девочки.']\nnew_fact = infer_new_fact(selected) # 'Это означает, что 2/5\\xa0класса\\xa0— мальчики'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в классе 100\\xa0мальчиков,', 'Это означает, что 2/5\\xa0класса\\xa0— мальчики']\nnew_fact = infer_new_fact(selected) # '2x/5\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x/5\\xa0=\\xa0100']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0250'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ровно 2/5\\xa0детей в классе\\xa0— девочки.', 'Это означает, что 2/5\\xa0класса\\xa0— мальчики', '2x/5\\xa0=\\xa0100', 'x\\xa0=\\xa0250']\nnew_fact = infer_new_fact(selected) # 'Следовательно, количество девочек\\xa0=\\xa0150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько девочек в классе?', 'C) 150', 'Это означает, что 2/5\\xa0класса\\xa0— мальчики', '2x/5\\xa0=\\xa0100', 'x\\xa0=\\xa0250', 'Следовательно, количество девочек\\xa0=\\xa0150']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_239_b6c4ad306a", "context": "", "options": ["A)5/7", "B)3/5", "C)4/7", "D)2/5", "E)2/7"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [3, 12], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: We need all numbers between 1 and 1000 that are co-prime.; int1 -> int2: Between 1 to 10 there are 4 : 1,3,7,9; int2 & sent2 -> int3: Take the period of 10's , we have 100 periods of 10's between 1 to 1000; int3 -> int4: So the total number of co-primes = 400; sent0 -> int5: Now, the simple part ...; int4 & sent3 -> int6: Probability = 400/1000 (i.e picking a co-prime from the first 1000 numbers ); int6 & sent3 -> int7: Ans: 2/5 D; int7 -> int8: The answer is D);", "textual_logical_units": {"1": "Два числа считаются относительно простыми, если у них нет общих положительных множителей, кроме 1.", "2": "Набор S содержит набор целых чисел от 1 до 1000 включительно.", "3": "Какова вероятность того, что число, выбранное из набора S,окажется относительно простым числом до 1000?", "4": "A) 5/7", "5": "B) 3/5", "6": "C) 4/7", "7": "D) 2/5", "8": "E) 2/7", "9": "Требуется найти все простые числа от 1 до 1000.", "10": "От 1 до 10 их 4: 1,3,7,9", "11": "Возьмем интервалы по 10. От 1 до 1000 имеется 100 интервалов по 10", "12": "Следовательно образом, общее количество простых чисел = 400", "13": "Теперь самое простое...", "14": "Вероятность = 400/1000 (т.е. выбор простого числа из первых 1000 чисел)", "15": "Ответ: 2/5 — Г", "16": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = [ 'Два числа считаются относительно простыми, если у них нет общих положительных множителей, кроме 1.',\n  'Набор S содержит набор целых чисел от 1 до 1000 включительно.']\nquestion = 'Какова вероятность того, что число, выбранное из набора S,окажется относительно простым числом до 1000?'\nchoices = {'A': '5/7', 'B': '3/5', 'C': '4/7', 'D': '2/5', 'E': '2/7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Набор S содержит набор целых чисел от 1 до 1000 включительно.', 'Какова вероятность того, что число, выбранное из набора S,окажется относительно простым числом до 1000?']\nnew_fact = infer_new_fact(selected) # 'Требуется найти все простые числа от 1 до 1000.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Требуется найти все простые числа от 1 до 1000.']\nnew_fact = infer_new_fact(selected) # 'От 1 до 10 их 4: 1,3,7,9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Набор S содержит набор целых чисел от 1 до 1000 включительно.', 'От 1 до 10 их 4: 1,3,7,9']\nnew_fact = infer_new_fact(selected) # 'Возьмем интервалы по 10. От 1 до 1000 имеется 100\\xa0интервалов по 10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Возьмем интервалы по 10. От 1 до 1000 имеется 100\\xa0интервалов по 10']\nnew_fact = infer_new_fact(selected) # 'Следовательно образом, общее количество простых чисел\\xa0=\\xa0400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Теперь самое простое...'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова вероятность того, что число, выбранное из набора S,окажется относительно простым числом до 1000?', 'Следовательно образом, общее количество простых чисел\\xa0=\\xa0400']\nnew_fact = infer_new_fact(selected) # 'Вероятность\\xa0=\\xa0400/1000 (т.е. выбор простого числа из первых 1000\\xa0чисел)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова вероятность того, что число, выбранное из набора S,окажется относительно простым числом до 1000?', 'Вероятность\\xa0=\\xa0400/1000 (т.е. выбор простого числа из первых 1000\\xa0чисел)']\nnew_fact = infer_new_fact(selected) # 'Ответ: 2/5\\xa0— Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: 2/5\\xa0— Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_240_0a91ae4120", "context": "", "options": ["A)$45,000", "B)$50,000", "C)$54,000", "D)$59,000", "E)$62,000"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [1, 2, 8, 9, 10], "consequent": 11}, {"antecedents": [1, 3, 7, 10], "consequent": 12}, {"antecedents": [5, 6, 11, 12], "consequent": 13}, {"antecedents": [1, 3, 6, 10], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "linearized_output_en": "sent1 -> int1: You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X; int1 & sent1 & sent2 & sent8 & sent9 -> int2: Thus you can rule out options D-E as these options will make the original amount > the interest+principle amount; int1 & sent1 & sent3 & sent7 -> int3: Option C is very close to the amount after 1st year and 4% will definitely give you >80$ in interests.; int2 & int3 & sent5 & sent6 -> int4: Now you only have 2 options left (A and B); int1 & sent1 & sent3 & sent6 -> int5: Per the question, let x be the original amount invested  =>  x(1.04)^2 = 54080 .@NL This clearly shows that answer must be B.; int5 & sent4 -> int6: ANSWER:B; int6 -> int7: The answer is B);", "textual_logical_units": {"1": "За свои инвестиции сроком на один год Чарльз получил 54080 долл. США, включая проценты и", "2": "основную сумму.", "3": "Если по инвестициям выплачивались годовые проценты в размере 8%, начисляемые раз в полгода,", "4": "какую из следующих сумм Чарльз изначально инвестировал?", "5": "A) 45000 долл. США", "6": "B) 50000 долл. США", "7": "C) 54000 долл. США", "8": "D) 59000 долл. США", "9": "E) 62000 долл. США", "10": "Известно, что определенные инвестиции через 1 год принесли X долл. США. Следовательно, первоначальные инвестиции должны быть <X", "11": "Таким образом, можно исключить варианты Г-Д, поскольку в них первоначальная сумма будет > процентов + основной суммы", "12": "Вариант В очень близок к сумме по истечении первого года, и 4% определенно дадут >80 долл. США в виде процентов.", "13": "Осталось только 2 варианта (А и B)", "14": "В ответ на вопрос пусть x — исходная инвестированная сумма ---> x(1,04)^2 = 54080. Это ясно показывает, что ответом должен быть вариант Б.", "15": "ОТВЕТ: Б", "16": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'За свои инвестиции сроком на один год Чарльз получил 54080\\xa0долл. США, включая проценты и',\n  'основную сумму.',\n  'Если по инвестициям выплачивались годовые проценты в размере 8%, начисляемые раз в полгода,']\nquestion = 'какую из следующих сумм Чарльз изначально инвестировал?'\nchoices = {'A': '45000\\xa0долл. США', 'B': '50000\\xa0долл. США', 'C': '54000\\xa0долл. США', 'D': '59000\\xa0долл. США', 'E': '62000\\xa0долл. США'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['За свои инвестиции сроком на один год Чарльз получил 54080\\xa0долл. США, включая проценты и']\nnew_fact = infer_new_fact(selected) # 'Известно, что определенные инвестиции через 1\\xa0год принесли X\\xa0долл. США. Следовательно, первоначальные инвестиции должны быть <X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За свои инвестиции сроком на один год Чарльз получил 54080\\xa0долл. США, включая проценты и', 'основную сумму.', 'D) 59000\\xa0долл. США', 'E) 62000\\xa0долл. США', 'Известно, что определенные инвестиции через 1\\xa0год принесли X\\xa0долл. США. Следовательно, первоначальные инвестиции должны быть <X']\nnew_fact = infer_new_fact(selected) # 'Таким образом, можно исключить варианты Г-Д, поскольку в них первоначальная сумма будет\\xa0>\\xa0процентов\\xa0+\\xa0основной суммы'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За свои инвестиции сроком на один год Чарльз получил 54080\\xa0долл. США, включая проценты и', 'Если по инвестициям выплачивались годовые проценты в размере 8%, начисляемые раз в полгода,', 'C) 54000\\xa0долл. США', 'Известно, что определенные инвестиции через 1\\xa0год принесли X\\xa0долл. США. Следовательно, первоначальные инвестиции должны быть <X']\nnew_fact = infer_new_fact(selected) # 'Вариант В очень близок к сумме по истечении первого года, и 4% определенно дадут >80\\xa0долл. США в виде процентов.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) 45000\\xa0долл. США', 'B) 50000\\xa0долл. США', 'Таким образом, можно исключить варианты Г-Д, поскольку в них первоначальная сумма будет\\xa0>\\xa0процентов\\xa0+\\xa0основной суммы', 'Вариант В очень близок к сумме по истечении первого года, и 4% определенно дадут >80\\xa0долл. США в виде процентов.']\nnew_fact = infer_new_fact(selected) # 'Осталось только 2\\xa0варианта (А и B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['За свои инвестиции сроком на один год Чарльз получил 54080\\xa0долл. США, включая проценты и', 'Если по инвестициям выплачивались годовые проценты в размере 8%, начисляемые раз в полгода,', 'B) 50000\\xa0долл. США', 'Известно, что определенные инвестиции через 1\\xa0год принесли X\\xa0долл. США. Следовательно, первоначальные инвестиции должны быть <X']\nnew_fact = infer_new_fact(selected) # 'В ответ на вопрос пусть x\\xa0— исходная инвестированная сумма\\xa0--->\\xa0x(1,04)^2\\xa0=\\xa054080. Это ясно показывает, что ответом должен быть вариант Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какую из следующих сумм Чарльз изначально инвестировал?', 'В ответ на вопрос пусть x\\xa0— исходная инвестированная сумма\\xa0--->\\xa0x(1,04)^2\\xa0=\\xa054080. Это ясно показывает, что ответом должен быть вариант Б.']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: Б'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: Б']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_241_6b607f861d", "context": "", "options": ["A)45", "B)48", "C)50", "D)55", "E)58"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 13}, {"antecedents": [5], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [13, 15, 17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [18], "consequent": 20}, {"antecedents": [20], "consequent": 21}, {"antecedents": [7, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: Joe+Sister+Father=100; sent5 -> int2: After x years joe age is equal to his father; int2 -> int3: Joe+x = father; int3 & sent4 -> int4: Therefore, Sister+x = 2 * Sister; int4 -> int5: => Sister=x; int1 & int3 & int5 -> int6: Joe+Sister=Father; sent0 -> int7: Therefore,; int6 -> int8: => 2*Father = 100; int8 -> int9: => Father= 50; int9 & sent7 -> int10: Hence (C) is the correct answer; int10 -> int11: The answer is C);", "textual_logical_units": {"1": "Совместный возраст Георгия, его сестры и", "2": "отца достигает 100 лет.", "3": "Когда Георгию будет столько же лет, сколько и его отцу,", "4": "его сестра будет в два раза старше, чем сейчас.", "5": "Когда Георгию будет столько же лет, сколько и его отцу,", "6": "его отец будет в два раза старше, чем когда его сестре было столько же лет, сколько отцу.", "7": "Найдите возраст отца Георгия.", "8": "A) 45", "9": "B) 48", "10": "C) 50", "11": "D) 55", "12": "E) 58", "13": "Георгий + сестра + отец = 100", "14": "Через x лет возраст Георгия будет равен возрасту его отца", "15": "Георгий + x = отец", "16": "Следовательно, сестра + x = 2*сестра", "17": "=> сестра = x", "18": "Георгий + сестра = отец", "19": "Следовательно,", "20": "=> 2*отец = 100", "21": "=> отец = 50", "22": "Поэтому правильный ответ — (C)", "23": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Совместный возраст Георгия, его сестры и',\n  'отца достигает 100\\xa0лет.',\n  'Когда Георгию будет столько же лет, сколько и его отцу,',\n  'его сестра будет в два раза старше, чем сейчас.',\n  'Когда Георгию будет столько же лет, сколько и его отцу,',\n  'его отец будет в два раза старше, чем когда его сестре было столько же лет, сколько отцу.']\nquestion = 'Найдите возраст отца Георгия.'\nchoices = {'A': '45', 'B': '48', 'C': '50', 'D': '55', 'E': '58'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Совместный возраст Георгия, его сестры и', 'отца достигает 100\\xa0лет.']\nnew_fact = infer_new_fact(selected) # 'Георгий\\xa0+\\xa0сестра\\xa0+\\xa0отец\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Когда Георгию будет столько же лет, сколько и его отцу,']\nnew_fact = infer_new_fact(selected) # 'Через x\\xa0лет возраст Георгия будет равен возрасту его отца'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Через x\\xa0лет возраст Георгия будет равен возрасту его отца']\nnew_fact = infer_new_fact(selected) # 'Георгий\\xa0+\\xa0x\\xa0=\\xa0отец'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['его сестра будет в два раза старше, чем сейчас.', 'Георгий\\xa0+\\xa0x\\xa0=\\xa0отец']\nnew_fact = infer_new_fact(selected) # 'Следовательно, сестра\\xa0+\\xa0x\\xa0=\\xa02*сестра'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, сестра\\xa0+\\xa0x\\xa0=\\xa02*сестра']\nnew_fact = infer_new_fact(selected) # '=>\\xa0сестра\\xa0=\\xa0x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Георгий\\xa0+\\xa0сестра\\xa0+\\xa0отец\\xa0=\\xa0100', 'Георгий\\xa0+\\xa0x\\xa0=\\xa0отец', '=>\\xa0сестра\\xa0=\\xa0x']\nnew_fact = infer_new_fact(selected) # 'Георгий\\xa0+\\xa0сестра\\xa0=\\xa0отец'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Следовательно,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Георгий\\xa0+\\xa0сестра\\xa0=\\xa0отец']\nnew_fact = infer_new_fact(selected) # '=>\\xa02*отец\\xa0=\\xa0100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>\\xa02*отец\\xa0=\\xa0100']\nnew_fact = infer_new_fact(selected) # '=>\\xa0отец\\xa0=\\xa050'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Найдите возраст отца Георгия.', '=>\\xa0отец\\xa0=\\xa050']\nnew_fact = infer_new_fact(selected) # 'Поэтому правильный ответ\\xa0— (C)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Поэтому правильный ответ\\xa0— (C)']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_242_c0fdbee38c", "context": "", "options": ["A)84", "B)66", "C)28", "D)19", "E)11"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: x * 1/3 * 3/4 =21 => x = 84; int1 & sent2 & sent3 -> int2: Answer: A; int2 -> int3: The answer is A);", "textual_logical_units": {"1": "Если одна треть от 3/4 числа равна 21,", "2": "найдите это число.", "3": "A) 84", "4": "B) 66", "5": "C) 28", "6": "D) 19", "7": "E) 11", "8": "x*1/3*3/4 = 21 => x = 84", "9": "Ответ: A", "10": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Если одна треть от 3/4\\xa0числа равна 21,']\nquestion = 'найдите это число.'\nchoices = {'A': '84', 'B': '66', 'C': '28', 'D': '19', 'E': '11'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если одна треть от 3/4\\xa0числа равна 21,', 'найдите это число.']\nnew_fact = infer_new_fact(selected) # 'x*1/3*3/4\\xa0=\\xa021\\xa0=>\\xa0x\\xa0=\\xa084'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['найдите это число.', 'A) 84', 'x*1/3*3/4\\xa0=\\xa021\\xa0=>\\xa0x\\xa0=\\xa084']\nnew_fact = infer_new_fact(selected) # 'Ответ: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_243_3ea8e092c9", "context": "", "options": ["A)y/400", "B)4y", "C)50y", "D)2500/y", "E)5000/y"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 7, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent2 -> int1: x = (m/100)*4y; int1 -> int2: m = 100x/4y = 25x/y; int2 & sent3 -> int3: m is (2500/y)% of x.; int3 & sent3 & sent7 -> int4: The answer is D.; int4 -> int5: The answer is D);", "textual_logical_units": {"1": "Если m > 0, y > 0,", "2": "а x составляет m процентов от 4y, тогда с точки зрения y,", "3": "какому проценту от x равно m?", "4": "A) y/400", "5": "B) 4y", "6": "C) 50y", "7": "D) 2500/y", "8": "E) 5000/y", "9": "x = (m/100)*4y", "10": "m = 100x/4y = 25x/y", "11": "m составляет (2500/y)% от x.", "12": "Ответ — Г.", "13": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = ['Если m\\xa0>\\xa00, y\\xa0>\\xa00,', 'а x составляет m\\xa0процентов от 4y, тогда с точки зрения y,']\nquestion = 'какому проценту от x равно m?'\nchoices = {'A': 'y/400', 'B': '4y', 'C': '50y', 'D': '2500/y', 'E': '5000/y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['а x составляет m\\xa0процентов от 4y, тогда с точки зрения y,']\nnew_fact = infer_new_fact(selected) # 'x\\xa0=\\xa0(m/100)*4y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x\\xa0=\\xa0(m/100)*4y']\nnew_fact = infer_new_fact(selected) # 'm\\xa0=\\xa0100x/4y\\xa0=\\xa025x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какому проценту от x равно m?', 'm\\xa0=\\xa0100x/4y\\xa0=\\xa025x/y']\nnew_fact = infer_new_fact(selected) # 'm составляет (2500/y)% от x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какому проценту от x равно m?', 'D) 2500/y', 'm составляет (2500/y)% от x.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Г.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Г.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_244_cbbc026fa2", "context": "", "options": ["A)54", "B)24", "C)48", "D)20", "E)36"], "answer": "C", "reasoning_graph_edges": [{"antecedents": [2, 3, 5], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [5, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 & sent5 -> int1: Number of choices for fruit=6, number of choices for vegetable=8; int1 -> int2: The total number of combinations =8*6=48; int2 & sent5 & sent8 -> int3: Answer C; int3 -> int4: The answer is C);", "textual_logical_units": {"1": "Человек хочет есть фрукты на завтрак и овощи на ужин.", "2": "У него есть 6 разных видов фруктов и", "3": "8 разных видов овощей.", "4": "Он может съесть только один вид за раз.", "5": "Сколькими способами он может завтракать и ужинать?", "6": "A) 54", "7": "B) 24", "8": "C) 48", "9": "D) 20", "10": "E) 36", "11": "Количество вариантов фруктов = 6, количество вариантов овощей = 8", "12": "Общее количество комбинаций = 8*6 = 48", "13": "Ответ — В", "14": "The answer is C"}, "human_translated": true, "code_input": "####\nfacts = [ 'Человек хочет есть фрукты на завтрак и овощи на ужин.',\n  'У него есть 6\\xa0разных видов фруктов и',\n  '8\\xa0разных видов овощей.',\n  'Он может съесть только один вид за раз.']\nquestion = 'Сколькими способами он может завтракать и ужинать?'\nchoices = {'A': '54', 'B': '24', 'C': '48', 'D': '20', 'E': '36'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['У него есть 6\\xa0разных видов фруктов и', '8\\xa0разных видов овощей.', 'Сколькими способами он может завтракать и ужинать?']\nnew_fact = infer_new_fact(selected) # 'Количество вариантов фруктов\\xa0=\\xa06, количество вариантов овощей\\xa0=\\xa08'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Количество вариантов фруктов\\xa0=\\xa06, количество вариантов овощей\\xa0=\\xa08']\nnew_fact = infer_new_fact(selected) # 'Общее количество комбинаций\\xa0=\\xa08*6\\xa0=\\xa048'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколькими способами он может завтракать и ужинать?', 'C) 48', 'Общее количество комбинаций\\xa0=\\xa08*6\\xa0=\\xa048']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— В']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_245_ae01b8d997", "context": "", "options": ["A)26.2%", "B)32.8%", "C)43.7%", "D)59.0%", "E)65.6%"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent0 -> int1: The probability that four of five voted is :; int1 & sent2 & sent3 -> int2: P(1st one voted) X ... X P(4th one voted) X (5th one NOT voted); int2 & sent1 -> int3: = 0.9 x 0.9 x 0.9 x 0.9 x 0.1; int3 -> int4: = 0.81 x 0.81 x 0.1 = 0.6561; int4 & sent3 & sent8 -> int5: ANSWER: E; int5 -> int6: The answer is E);", "textual_logical_units": {"1": "Вероятность того, что избиратель, зарегистрированный в небольшом городе с самоуправлением, проголосовал на последних выборах, составляет 90%.", "2": "Если случайным образом пять будут выбраны зарегистрированных избирателей,", "3": "какова приблизительная вероятность того, что ровно четверо из них проголосовали на последних выборах?", "4": "A) 26,2%", "5": "B) 32,8%", "6": "C) 43,7%", "7": "D) 59,0%", "8": "E) 65,6%", "9": "Вероятность того, что четыре из пяти проголосовали, равна:", "10": "P(1-й проголосовал) X... X P(4-й проголосовал) X (5-й НЕ проголосовал)", "11": "= 0,9 х 0,9 х 0,9 х 0,9 х 0,1", "12": "= 0,81 х 0,81 х 0,1 = 0,6561", "13": "ОТВЕТ: E", "14": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Вероятность того, что избиратель, зарегистрированный в небольшом городе с самоуправлением, проголосовал на последних выборах, составляет 90%.',\n  'Если случайным образом пять будут выбраны зарегистрированных избирателей,']\nquestion = 'какова приблизительная вероятность того, что ровно четверо из них проголосовали на последних выборах?'\nchoices = {'A': '26,2%', 'B': '32,8%', 'C': '43,7%', 'D': '59,0%', 'E': '65,6%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Вероятность того, что четыре из пяти проголосовали, равна:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если случайным образом пять будут выбраны зарегистрированных избирателей,', 'какова приблизительная вероятность того, что ровно четверо из них проголосовали на последних выборах?', 'Вероятность того, что четыре из пяти проголосовали, равна:']\nnew_fact = infer_new_fact(selected) # 'P(1-й проголосовал) X... X P(4-й проголосовал)\\xa0X\\xa0(5-й НЕ проголосовал)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вероятность того, что избиратель, зарегистрированный в небольшом городе с самоуправлением, проголосовал на последних выборах, составляет 90%.', 'P(1-й проголосовал) X... X P(4-й проголосовал)\\xa0X\\xa0(5-й НЕ проголосовал)']\nnew_fact = infer_new_fact(selected) # '=\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,9\\xa0х\\xa00,1']\nnew_fact = infer_new_fact(selected) # '=\\xa00,81\\xa0х\\xa00,81\\xa0х\\xa00,1\\xa0=\\xa00,6561'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какова приблизительная вероятность того, что ровно четверо из них проголосовали на последних выборах?', 'E) 65,6%', '=\\xa00,81\\xa0х\\xa00,81\\xa0х\\xa00,1\\xa0=\\xa00,6561']\nnew_fact = infer_new_fact(selected) # 'ОТВЕТ: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ОТВЕТ: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_246_db482d8c50", "context": "", "options": ["A)58", "B)62", "C)66", "D)70", "E)74"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent1 & sent2 -> int1: The sides of the rectangle have a length of 10 and L.; int1 & sent3 -> int2: The area is 10*L=240 so L=24.; int2 & sent4 -> int3: She needs fencing with a length of 10+2*24=58 meters.; int3 & sent4 & sent5 -> int4: The answer is A.; int4 -> int5: The answer is A);", "textual_logical_units": {"1": "Алиса хочет установить ограждение по трем сторонам своего прямоугольного двора и", "2": "оставить одну сторону длиной 10 метров без ограждения.", "3": "Если двор имеет площадь 240 квадратных метров,", "4": "сколько метров ограждения ей нужно?", "5": "A) 58", "6": "B) 62", "7": "C) 66", "8": "D) 70", "9": "E) 74", "10": "Стороны прямоугольника имеют длину 10 и L.", "11": "Площадь равна 10*L = 240, поэтому L = 24.", "12": "Требуется ограждение длиной 10 + 2*24 = 58 метров.", "13": "Ответ — А.", "14": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = [ 'Алиса хочет установить ограждение по трем сторонам своего прямоугольного двора и',\n  'оставить одну сторону длиной 10\\xa0метров без ограждения.',\n  'Если двор имеет площадь 240\\xa0квадратных метров,']\nquestion = 'сколько метров ограждения ей нужно?'\nchoices = {'A': '58', 'B': '62', 'C': '66', 'D': '70', 'E': '74'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Алиса хочет установить ограждение по трем сторонам своего прямоугольного двора и', 'оставить одну сторону длиной 10\\xa0метров без ограждения.']\nnew_fact = infer_new_fact(selected) # 'Стороны прямоугольника имеют длину 10 и L.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если двор имеет площадь 240\\xa0квадратных метров,', 'Стороны прямоугольника имеют длину 10 и L.']\nnew_fact = infer_new_fact(selected) # 'Площадь равна 10*L\\xa0=\\xa0240, поэтому L\\xa0=\\xa024.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько метров ограждения ей нужно?', 'Площадь равна 10*L\\xa0=\\xa0240, поэтому L\\xa0=\\xa024.']\nnew_fact = infer_new_fact(selected) # 'Требуется ограждение длиной 10\\xa0+\\xa02*24\\xa0=\\xa058\\xa0метров.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько метров ограждения ей нужно?', 'A) 58', 'Требуется ограждение длиной 10\\xa0+\\xa02*24\\xa0=\\xa058\\xa0метров.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_247_6434dd9a98", "context": "", "options": ["A)1,980", "B)2,020", "C)2,100", "D)2,200", "E)1,900"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 & sent2 & sent3 & sent4 -> int1: There should be a vowel in the middle of the 3-letter code, which means that 5 letters can be in the middle. Then, 20 letters can be placed in the first letter and 19 letters can be placed in the last letter as they should be different letters. Thus, 20*5*19=1,900.; int1 & sent4 & sent9 -> int2: Therefore, the answer is E.; int2 -> int3: The answer is E);", "textual_logical_units": {"1": "Иван создает трехбуквенные коды с 5 разными гласными и", "2": "20 согласными с условием, что средняя буква должна быть гласной, а первая и", "3": "третья буквы должна отличаться друг от друга и быть согласными.", "4": "Сколько разных кодов можно создать?", "5": "A) 1 980", "6": "B) 2 020", "7": "C) 2 100", "8": "D) 2 200", "9": "E) 1 900", "10": "В середине 3-буквенного кода должна быть гласная. Это означает, что в середине может быть 5 букв. На место первой буквы можно поместить 20 букв, а на место последней — 19, так как они должны быть разными. Таким образом, 20*5*19 = 1900.", "11": "Следовательно, ответ — Д.", "12": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = [ 'Иван создает трехбуквенные коды с 5\\xa0разными гласными и',\n  '20\\xa0согласными с условием, что средняя буква должна быть гласной, а первая и',\n  'третья буквы должна отличаться друг от друга и быть согласными.']\nquestion = 'Сколько разных кодов можно создать?'\nchoices = {'A': '1\\xa0980', 'B': '2\\xa0020', 'C': '2\\xa0100', 'D': '2\\xa0200', 'E': '1\\xa0900'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Иван создает трехбуквенные коды с 5\\xa0разными гласными и', '20\\xa0согласными с условием, что средняя буква должна быть гласной, а первая и', 'третья буквы должна отличаться друг от друга и быть согласными.', 'Сколько разных кодов можно создать?']\nnew_fact = infer_new_fact(selected) # 'В середине 3-буквенного кода должна быть гласная. Это означает, что в середине может быть 5\\xa0букв. На место первой буквы можно поместить 20\\xa0букв, а на место последней\\xa0— 19, так как они должны быть разными. Таким образом, 20*5*19\\xa0=\\xa01900.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько разных кодов можно создать?', 'E) 1\\xa0900', 'В середине 3-буквенного кода должна быть гласная. Это означает, что в середине может быть 5\\xa0букв. На место первой буквы можно поместить 20\\xa0букв, а на место последней\\xa0— 19, так как они должны быть разными. Таким образом, 20*5*19\\xa0=\\xa01900.']\nnew_fact = infer_new_fact(selected) # 'Следовательно, ответ — Д.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Следовательно, ответ — Д.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_248_78eeb17492", "context": "", "options": ["A)37", "B)38", "C)36", "D)30", "E)39"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [0], "consequent": 7}, {"antecedents": [2, 3, 4, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [1, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent0 -> int1: The addition of any 3 consecutive numbers is always divisible by 3; int1 & sent2 & sent3 & sent4 -> int2: that rules out options a,b,c; int2 -> int3: Now focus on options 30 and 39; sent0 -> int4: If we consider; sent0 -> int5: 12, 13, 14 the sum is 39; int5 & sent1 & sent6 -> int6: Answer = E; int6 -> int7: The answer is E);", "textual_logical_units": {"1": "Какова сумма трех последовательных целых чисел, произведение которых можно представить в виде выражения 727 + 728 + 729.", "2": "A) 37", "3": "B) 38", "4": "C) 36", "5": "D) 30", "6": "E) 39", "7": "Сумма любых 3 последовательных чисел всегда делится на 3,", "8": "что исключает варианты А, Б, В", "9": "Теперь сосредоточимся на вариантах 30 и 39", "10": "Если рассматривать", "11": "12, 13, 14, сумма равна 39", "12": "Ответ = Д", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Какова сумма трех последовательных целых чисел, произведение которых можно представить в виде выражения 727\\xa0+\\xa0728\\xa0+\\xa0729.'\nchoices = {'A': '37', 'B': '38', 'C': '36', 'D': '30', 'E': '39'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Сумма любых 3\\xa0последовательных чисел всегда делится на 3,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A) 37', 'B) 38', 'C) 36', 'Сумма любых 3\\xa0последовательных чисел всегда делится на 3,']\nnew_fact = infer_new_fact(selected) # 'что исключает варианты А, Б, В'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['что исключает варианты А, Б, В']\nnew_fact = infer_new_fact(selected) # 'Теперь сосредоточимся на вариантах 30 и 39'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Если рассматривать'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '12, 13, 14, сумма равна 39'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Какова сумма трех последовательных целых чисел, произведение которых можно представить в виде выражения 727\\xa0+\\xa0728\\xa0+\\xa0729.', 'E) 39', '12, 13, 14, сумма равна 39']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0=\\xa0Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0=\\xa0Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_249_6df8b20143", "context": "", "options": ["A)120 litres", "B)1200 litres", "C)12000 litres", "D)120000 litres", "E)None of these"], "answer": "D", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [1, 5, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "linearized_output_en": "sent1 -> int1: Capacity of the bank = Volume of the bank; int1 & sent1 -> int2: = (8x100x6x100x2.5x100/1000) =; int2 & sent1 & sent5 -> int3: answer D; int3 -> int4: The answer is D);", "textual_logical_units": {"1": "Емкость резервуара размером (8 × 6 × 2,5 м) равна", "2": "A) 120 литров", "3": "B) 1200 литров", "4": "C) 12000 литров", "5": "D) 120000 литров", "6": "E) Ничего из вышеперечисленного", "7": "Емкость резервуара = объем резервуара", "8": "= (8 x 100 x 6 x 100 x 2,5 x 100/1000) =", "9": "Ответ: Г", "10": "The answer is D"}, "human_translated": true, "code_input": "####\nfacts = []\nquestion = 'Емкость резервуара размером (8\\xa0×\\xa06\\xa0×\\xa02,5\\xa0м) равна'\nchoices = {'A': '120\\xa0литров', 'B': '1200\\xa0литров', 'C': '12000\\xa0литров', 'D': '120000\\xa0литров', 'E': 'Ничего из вышеперечисленного'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Емкость резервуара размером (8\\xa0×\\xa06\\xa0×\\xa02,5\\xa0м) равна']\nnew_fact = infer_new_fact(selected) # 'Емкость резервуара\\xa0=\\xa0объем резервуара'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Емкость резервуара размером (8\\xa0×\\xa06\\xa0×\\xa02,5\\xa0м) равна', 'Емкость резервуара\\xa0=\\xa0объем резервуара']\nnew_fact = infer_new_fact(selected) # '=\\xa0(8\\xa0x\\xa0100\\xa0x\\xa06\\xa0x\\xa0100\\xa0x\\xa02,5\\xa0x\\xa0100/1000)\\xa0='\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Емкость резервуара размером (8\\xa0×\\xa06\\xa0×\\xa02,5\\xa0м) равна', 'D) 120000\\xa0литров', '=\\xa0(8\\xa0x\\xa0100\\xa0x\\xa06\\xa0x\\xa0100\\xa0x\\xa02,5\\xa0x\\xa0100/1000)\\xa0=']\nnew_fact = infer_new_fact(selected) # 'Ответ: Г'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Г']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_250_8bf8f1fcb9", "context": "", "options": ["A)1095961", "B)1065961", "C)1085961", "D)1097961", "E)1096061"], "answer": "E", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "linearized_output_en": "sent1 -> int1: Population of the city = 5265526; sent2 -> int2: Number of adults = 4169516; int1 & int2 -> int3: Number of children = 5265526-4169516 = 1096061; int3 & sent3 & sent8 -> int4: Answer :E; int4 -> int5: The answer is E);", "textual_logical_units": {"1": "Население города составляет 5265526 человек.", "2": "Если в городе 4169516 взрослых,", "3": "сколько в нем детей?", "4": "A) 1095961", "5": "B) 1065961", "6": "C) 1085961", "7": "D) 1097961", "8": "E) 1096061", "9": "Население города = 5265526", "10": "Количество взрослых = 4169516", "11": "Количество детей = 5265526 - 4169516 = 1096061", "12": "Ответ: Д", "13": "The answer is E"}, "human_translated": true, "code_input": "####\nfacts = ['Население города составляет 5265526\\xa0человек.', 'Если в городе 4169516\\xa0взрослых,']\nquestion = 'сколько в нем детей?'\nchoices = {'A': '1095961', 'B': '1065961', 'C': '1085961', 'D': '1097961', 'E': '1096061'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Население города составляет 5265526\\xa0человек.']\nnew_fact = infer_new_fact(selected) # 'Население города\\xa0=\\xa05265526'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если в городе 4169516\\xa0взрослых,']\nnew_fact = infer_new_fact(selected) # 'Количество взрослых\\xa0=\\xa04169516'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Население города\\xa0=\\xa05265526', 'Количество взрослых\\xa0=\\xa04169516']\nnew_fact = infer_new_fact(selected) # 'Количество детей\\xa0=\\xa05265526\\xa0-\\xa04169516\\xa0=\\xa01096061'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько в нем детей?', 'E) 1096061', 'Количество детей\\xa0=\\xa05265526\\xa0-\\xa04169516\\xa0=\\xa01096061']\nnew_fact = infer_new_fact(selected) # 'Ответ: Д'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ: Д']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_251_9ef8f91593", "context": "", "options": ["A)30", "B)32", "C)35", "D)36", "E)40"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "linearized_output_en": "sent1 -> int1: distance = time*speed = (9/60)(20) kilometers; int1 & sent2 -> int2: time to bike = distance/speed = (9*20)/(60*6) = 30/60 hours = 30 minutes.; int2 & sent2 & sent3 -> int3: The answer is A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Рабочий добирается от дома до работы за 9 минут езды со средней скоростью 20 километров в час.", "2": "Сколько минут потребуется работнику, чтобы добраться от дома до работы на велосипеде по тому же маршруту со средней скоростью 6 километров в час?", "3": "A) 30", "4": "B) 32", "5": "C) 35", "6": "D) 36", "7": "E) 40", "8": "Расстояние = время*скорость = (9/60)(20) километров", "9": "Время поездки на велосипеде = расстояние/скорость = (9*20)/(60*6) = 30/60 часа = 30 минут.", "10": "Ответ — А.", "11": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Рабочий добирается от дома до работы за 9\\xa0минут езды со средней скоростью 20\\xa0километров в час.']\nquestion = 'Сколько минут потребуется работнику, чтобы добраться от дома до работы на велосипеде по тому же маршруту со средней скоростью 6\\xa0километров в час?'\nchoices = {'A': '30', 'B': '32', 'C': '35', 'D': '36', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Рабочий добирается от дома до работы за 9\\xa0минут езды со средней скоростью 20\\xa0километров в час.']\nnew_fact = infer_new_fact(selected) # 'Расстояние\\xa0=\\xa0время*скорость\\xa0=\\xa0(9/60)(20)\\xa0километров'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько минут потребуется работнику, чтобы добраться от дома до работы на велосипеде по тому же маршруту со средней скоростью 6\\xa0километров в час?', 'Расстояние\\xa0=\\xa0время*скорость\\xa0=\\xa0(9/60)(20)\\xa0километров']\nnew_fact = infer_new_fact(selected) # 'Время поездки на велосипеде\\xa0=\\xa0расстояние/скорость\\xa0=\\xa0(9*20)/(60*6)\\xa0=\\xa030/60\\xa0часа\\xa0=\\xa030\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Сколько минут потребуется работнику, чтобы добраться от дома до работы на велосипеде по тому же маршруту со средней скоростью 6\\xa0километров в час?', 'A) 30', 'Время поездки на велосипеде\\xa0=\\xa0расстояние/скорость\\xa0=\\xa0(9*20)/(60*6)\\xa0=\\xa030/60\\xa0часа\\xa0=\\xa030\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_252_d3cd73be7b", "context": "", "options": ["A)4", "B)5", "C)6", "D)7", "E)8"], "answer": "B", "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [5, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "linearized_output_en": "sent2 & sent3 -> int1: Together they eat 1/10 + 1/10 = 1/5 of the jar per minute.; int1 -> int2: The time to finish the jar is 5 minutes.; int2 & sent5 & sent7 -> int3: The answer is B.; int3 -> int4: The answer is B);", "textual_logical_units": {"1": "Двое друзей едят конфеты из банки.", "2": "Если бы P ел в одиночку, ему потребовалось бы 10 минут, чтобы доесть конфеты в банке.", "3": "Если бы Q ела в одиночку, ей потребовалось бы 5 минут, чтобы доесть половину конфет в банке.", "4": "Поскольку они оба едят одновременно,", "5": "сколько минут потребуется им на то, чтобы опорожнить банку?", "6": "A) 4", "7": "B) 5", "8": "C) 6", "9": "D) 7", "10": "E) 8", "11": "Вместе они съедают 1/10 + 1/10 = 1/5 банки в минуту.", "12": "Время опорожнения банки — 5 минут.", "13": "Ответ — Б.", "14": "The answer is B"}, "human_translated": true, "code_input": "####\nfacts = [ 'Двое друзей едят конфеты из банки.',\n  'Если бы P ел в одиночку, ему потребовалось бы 10\\xa0минут, чтобы доесть конфеты в банке.',\n  'Если бы Q ела в одиночку, ей потребовалось бы 5\\xa0минут, чтобы доесть половину конфет в банке.',\n  'Поскольку они оба едят одновременно,']\nquestion = 'сколько минут потребуется им на то, чтобы опорожнить банку?'\nchoices = {'A': '4', 'B': '5', 'C': '6', 'D': '7', 'E': '8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Если бы P ел в одиночку, ему потребовалось бы 10\\xa0минут, чтобы доесть конфеты в банке.', 'Если бы Q ела в одиночку, ей потребовалось бы 5\\xa0минут, чтобы доесть половину конфет в банке.']\nnew_fact = infer_new_fact(selected) # 'Вместе они съедают 1/10\\xa0+\\xa01/10\\xa0=\\xa01/5\\xa0банки в минуту.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Вместе они съедают 1/10\\xa0+\\xa01/10\\xa0=\\xa01/5\\xa0банки в минуту.']\nnew_fact = infer_new_fact(selected) # 'Время опорожнения банки\\xa0— 5\\xa0минут.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['сколько минут потребуется им на то, чтобы опорожнить банку?', 'B) 5', 'Время опорожнения банки\\xa0— 5\\xa0минут.']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— Б.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— Б.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_253_3840d7a107", "context": "", "options": ["A)125", "B)150", "C)225", "D)250", "E)275"], "answer": "A", "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "linearized_output_en": "sent1 -> int1: Profit per bag = 1.25 * 0.20 = 0.25; int1 & sent2 -> int2: Total profit = 500 * 0.25 = 125; int2 & sent3 & sent4 -> int3: Answer is A.; int3 -> int4: The answer is A);", "textual_logical_units": {"1": "Продуктовый магазин продает мешок льда за 1,25 долл. США и получает 20% прибыли.", "2": "Если магазин продаст 500 мешков льда,", "3": "какую общую прибыль он получит?", "4": "A) 125", "5": "B) 150", "6": "C) 225", "7": "D) 250", "8": "E) 275", "9": "Прибыль за один мешок = 1,25*0,20 = 0,25", "10": "Общая прибыль = 500*0,25 = 125", "11": "Ответ — А.", "12": "The answer is A"}, "human_translated": true, "code_input": "####\nfacts = ['Продуктовый магазин продает мешок льда за 1,25\\xa0долл. США и получает 20%\\xa0прибыли.', 'Если магазин продаст 500\\xa0мешков льда,']\nquestion = 'какую общую прибыль он получит?'\nchoices = {'A': '125', 'B': '150', 'C': '225', 'D': '250', 'E': '275'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Продуктовый магазин продает мешок льда за 1,25\\xa0долл. США и получает 20%\\xa0прибыли.']\nnew_fact = infer_new_fact(selected) # 'Прибыль за один мешок\\xa0=\\xa01,25*0,20\\xa0=\\xa00,25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Если магазин продаст 500\\xa0мешков льда,', 'Прибыль за один мешок\\xa0=\\xa01,25*0,20\\xa0=\\xa00,25']\nnew_fact = infer_new_fact(selected) # 'Общая прибыль\\xa0=\\xa0500*0,25\\xa0=\\xa0125'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['какую общую прибыль он получит?', 'A) 125', 'Общая прибыль\\xa0=\\xa0500*0,25\\xa0=\\xa0125']\nnew_fact = infer_new_fact(selected) # 'Ответ\\xa0— А.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ответ\\xa0— А.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
