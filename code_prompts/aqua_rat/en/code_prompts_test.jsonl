{"id": "AQUA-RAT_0_c26d838338", "context": "", "question": "A car is being driven, in a straight line and at a uniform speed, towards the base of a vertical tower. The top of the tower is observed from the car and, in the process, it takes 10 minutes for the angle of elevation to change from 45° to 60°. After how much more time will this car reach the base of the tower?", "options": ["A)5(√3 + 1)", "B)6(√3 + √2)", "C)7(√3 – 1)", "D)8(√3 – 2)", "E)None of these"], "rationale": "Explanation :\nLet the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).\nNow, after 10 minutes, it travelled a certain distance, and angle changed to 600.\ntan 60 = h/x x = h/√3\nSo, in 10 minutes, it has travelled a distance of h – x = h - h/√3.\n10 minutes = h *( 1 – 1√3)\nh can be travelled in 10 / (1 – 1√3).\nTo travel a distance of x, which is h/√3, it takes :\nh = 10 / (1 – 1/√3)\nh / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3)\nSo, it takes 5(1 + √3) minutes to reach the base of the tower.\nAnswer : A", "answer": "A", "textual_logical_units": {"1": "A car is being driven,", "2": "in a straight line and at a uniform speed,", "3": "towards the base of a vertical tower.", "4": "The top of the tower is observed from the car and, in the process,", "5": "it takes 10 minutes for the angle of elevation to change from 45° to 60°.", "6": "After how much more time will this car reach the base of the tower?", "7": "A)5(√3 + 1)", "8": "B)6(√3 + √2)", "9": "C)7(√3 – 1)", "10": "D)8(√3 – 2)", "11": "E)None of these", "12": "Explanation :", "13": "Let the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).", "14": "Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.", "15": "tan 60 = h/x x = h/√3", "16": "So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.", "17": "10 minutes = h *( 1 – 1√3)", "18": "h can be travelled in 10 / (1 – 1√3).", "19": "To travel a distance of x, which is h/√3, it takes :", "20": "h = 10 / (1 – 1/√3)", "21": "h / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3)", "22": "So, it takes 5(1 + √3) minutes to reach the base of the tower.", "23": "Answer : A", "24": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [1, 3, 4, 5], "consequent": 13}, {"antecedents": [5], "consequent": 14}, {"antecedents": [5, 13, 14], "consequent": 15}, {"antecedents": [5, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [16, 17, 18], "consequent": 19}, {"antecedents": [16, 17, 18, 19], "consequent": 20}, {"antecedents": [16, 17, 18, 19, 20], "consequent": 21}, {"antecedents": [6, 16, 17, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [6, 7, 14, 15, 16, 17, 19, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'A car is being driven,',\n  'in a straight line and at a uniform speed,',\n  'towards the base of a vertical tower.',\n  'The top of the tower is observed from the car and, in the process,',\n  'it takes 10 minutes for the angle of elevation to change from 45° to 60°.']\nquestion = 'After how much more time will this car reach the base of the tower?'\nchoices = {'A': '5(√3 + 1)', 'B': '6(√3 + √2)', 'C': '7(√3 – 1)', 'D': '8(√3 – 2)', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Explanation :'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A car is being driven,', 'towards the base of a vertical tower.', 'The top of the tower is observed from the car and, in the process,', 'it takes 10 minutes for the angle of elevation to change from 45° to 60°.']\nnew_fact = infer_new_fact(selected) # 'Let the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['it takes 10 minutes for the angle of elevation to change from 45° to 60°.']\nnew_fact = infer_new_fact(selected) # 'Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['it takes 10 minutes for the angle of elevation to change from 45° to 60°.', 'Let the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).', 'Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.']\nnew_fact = infer_new_fact(selected) # 'tan 60 = h/x x = h/√3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['it takes 10 minutes for the angle of elevation to change from 45° to 60°.', 'Let the height of the building be h. Initially, he was at an angle of 450. tan 45 = h/distance between car and tower. h = distance between car and tower (since tan 45 = 1).', 'Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.', 'tan 60 = h/x x = h/√3']\nnew_fact = infer_new_fact(selected) # 'So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.']\nnew_fact = infer_new_fact(selected) # '10 minutes = h *( 1 – 1√3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)']\nnew_fact = infer_new_fact(selected) # 'h can be travelled in 10 / (1 – 1√3).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)', 'h can be travelled in 10 / (1 – 1√3).']\nnew_fact = infer_new_fact(selected) # 'To travel a distance of x, which is h/√3, it takes :'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)', 'h can be travelled in 10 / (1 – 1√3).', 'To travel a distance of x, which is h/√3, it takes :']\nnew_fact = infer_new_fact(selected) # 'h = 10 / (1 – 1/√3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)', 'h can be travelled in 10 / (1 – 1√3).', 'To travel a distance of x, which is h/√3, it takes :', 'h = 10 / (1 – 1/√3)']\nnew_fact = infer_new_fact(selected) # 'h / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how much more time will this car reach the base of the tower?', 'So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)', 'h can be travelled in 10 / (1 – 1√3).', 'To travel a distance of x, which is h/√3, it takes :', 'h = 10 / (1 – 1/√3)', 'h / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3)']\nnew_fact = infer_new_fact(selected) # 'So, it takes 5(1 + √3) minutes to reach the base of the tower.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how much more time will this car reach the base of the tower?', 'A)5(√3 + 1)', 'Now, after 10 minutes, it travelled a certain distance, and angle changed to 600.', 'tan 60 = h/x x = h/√3', 'So, in 10 minutes, it has travelled a distance of h – x = h - h/√3.', '10 minutes = h *( 1 – 1√3)', 'To travel a distance of x, which is h/√3, it takes :', 'h / √3 = 10/ √3 * (1 – 1/√3). Multiply numerator and denominator by 1 + √3 ( conjugate of 1 - √3). We get, x = h/√3 = 10 (1 + √3) / 2 = 5* (1 + √3)', 'So, it takes 5(1 + √3) minutes to reach the base of the tower.']\nnew_fact = infer_new_fact(selected) # 'Answer : A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_1_3212b6047a", "context": "", "question": "The original price of an item is discounted 22%. A customer buys the item at this discounted price using a $20-off coupon. There is no tax on the item, and this was the only item the customer bought. If the customer paid $1.90 more than half the original price of the item, what was the original price of the item?", "options": ["A)$61", "B)$65", "C)$67.40", "D)$70", "E)$78.20"], "rationale": "Let x be the original price of the item\nDiscounted price = 0.78x\nPayment made by the customer after using the $20 coupon = 0.78x - 20\n0.78x - 20 = x/2 + 1.9\nx = 78.20\nAnswer: E", "answer": "E", "textual_logical_units": {"1": "The original price of an item is discounted 22%.", "2": "A customer buys the item at this discounted price using a $20-off coupon.", "3": "There is no tax on the item,", "4": "and this was the only item the customer bought.", "5": "If the customer paid $1.90 more than half the original price of the item,", "6": "what was the original price of the item?", "7": "A)$61", "8": "B)$65", "9": "C)$67.40", "10": "D)$70", "11": "E)$78.20", "12": "Let x be the original price of the item", "13": "Discounted price = 0.78x", "14": "Payment made by the customer after using the $20 coupon = 0.78x - 20", "15": "0.78x - 20 = x/2 + 1.9", "16": "x = 78.20", "17": "Answer: E", "18": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [1, 2, 13], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [1, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [6, 11, 12, 14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'The original price of an item is discounted 22%.',\n  'A customer buys the item at this discounted price using a $20-off coupon.',\n  'There is no tax on the item,',\n  'and this was the only item the customer bought.',\n  'If the customer paid $1.90 more than half the original price of the item,']\nquestion = 'what was the original price of the item?'\nchoices = {'A': '$61', 'B': '$65', 'C': '$67.40', 'D': '$70', 'E': '$78.20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The original price of an item is discounted 22%.']\nnew_fact = infer_new_fact(selected) # 'Let x be the original price of the item'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The original price of an item is discounted 22%.']\nnew_fact = infer_new_fact(selected) # 'Discounted price = 0.78x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The original price of an item is discounted 22%.', 'A customer buys the item at this discounted price using a $20-off coupon.', 'Discounted price = 0.78x']\nnew_fact = infer_new_fact(selected) # 'Payment made by the customer after using the $20 coupon = 0.78x - 20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let x be the original price of the item', 'Discounted price = 0.78x', 'Payment made by the customer after using the $20 coupon = 0.78x - 20']\nnew_fact = infer_new_fact(selected) # '0.78x - 20 = x/2 + 1.9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The original price of an item is discounted 22%.', 'Let x be the original price of the item', 'Discounted price = 0.78x', 'Payment made by the customer after using the $20 coupon = 0.78x - 20', '0.78x - 20 = x/2 + 1.9']\nnew_fact = infer_new_fact(selected) # 'x = 78.20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what was the original price of the item?', 'E)$78.20', 'Let x be the original price of the item', 'Payment made by the customer after using the $20 coupon = 0.78x - 20', '0.78x - 20 = x/2 + 1.9', 'x = 78.20']\nnew_fact = infer_new_fact(selected) # 'Answer: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_2_e4b0e641cc", "context": "", "question": "Find out which of the following values is the multiple of X, if it is divisible by 9 and 12?", "options": ["A)36", "B)15", "C)17", "D)5", "E)7"], "rationale": "9=3*3\n12=3*4\nThe number should definitely have these factors 3*3*4\n36 is the number that has these factors\nSo, 36 is the multiple of X\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "Find out which of the following values is the multiple of X,", "2": "if it is divisible by 9 and 12?", "3": "A)36", "4": "B)15", "5": "C)17", "6": "D)5", "7": "E)7", "8": "9=3*3", "9": "12=3*4", "10": "The number should definitely have these factors 3*3*4", "11": "36 is the number that has these factors", "12": "So, 36 is the multiple of X", "13": "Answer is A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [2, 3, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 10, 11], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Find out which of the following values is the multiple of X,']\nquestion = 'if it is divisible by 9 and 12?'\nchoices = {'A': '36', 'B': '15', 'C': '17', 'D': '5', 'E': '7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['if it is divisible by 9 and 12?']\nnew_fact = infer_new_fact(selected) # '9=3*3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['if it is divisible by 9 and 12?']\nnew_fact = infer_new_fact(selected) # '12=3*4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['if it is divisible by 9 and 12?', '9=3*3', '12=3*4']\nnew_fact = infer_new_fact(selected) # 'The number should definitely have these factors 3*3*4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['if it is divisible by 9 and 12?', 'A)36', 'The number should definitely have these factors 3*3*4']\nnew_fact = infer_new_fact(selected) # '36 is the number that has these factors'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['if it is divisible by 9 and 12?', 'A)36', 'The number should definitely have these factors 3*3*4', '36 is the number that has these factors']\nnew_fact = infer_new_fact(selected) # 'So, 36 is the multiple of X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['if it is divisible by 9 and 12?', 'A)36', 'The number should definitely have these factors 3*3*4', '36 is the number that has these factors']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_3_64073821d2", "context": "", "question": "If the probability that Stock A will increase in value during the next month is 0.56, and the probability that Stock B will increase in value during the next month is 0.74. What is the greatest value for the probability that neither of these two events will occur?", "options": ["A)0.22", "B)0.26", "C)0.37", "D)0.46", "E)0.63"], "rationale": "The probability that stock A does not increase is 0.44, and the probability that stock B does not increase is 0.26. Now, how can the probability that both do not increase be more than individual probability of not increasing for each? So the probability that both do not increase can not be more than 0.26. Basically the probability that both do not increase is between 0 and 0.26.", "answer": "B", "textual_logical_units": {"1": "If the probability that Stock A will increase in value during the next month is 0.56,", "2": "and the probability that Stock B will increase in value during the next month is 0.74.", "3": "What is the greatest value for the probability that neither of these two events will occur?", "4": "A)0.22", "5": "B)0.26", "6": "C)0.37", "7": "D)0.46", "8": "E)0.63", "9": "The probability that stock A does not increase is 0.44, and the probability that stock B does not increase is 0.26. Now, how can the probability that both do not increase be more than individual probability of not increasing for each? So the probability that both do not increase can not be more than 0.26. Basically the probability that both do not increase is between 0 and 0.26.", "10": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = [ 'If the probability that Stock A will increase in value during the next month is 0.56,',\n  'and the probability that Stock B will increase in value during the next month is 0.74.']\nquestion = 'What is the greatest value for the probability that neither of these two events will occur?'\nchoices = {'A': '0.22', 'B': '0.26', 'C': '0.37', 'D': '0.46', 'E': '0.63'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If the probability that Stock A will increase in value during the next month is 0.56,', 'and the probability that Stock B will increase in value during the next month is 0.74.', 'What is the greatest value for the probability that neither of these two events will occur?']\nnew_fact = infer_new_fact(selected) # 'The probability that stock A does not increase is 0.44, and the probability that stock B does not increase is 0.26. Now, how can the probability that both do not increase be more than individual probability of not increasing for each? So the probability that both do not increase can not be more than 0.26. Basically the probability that both do not increase is between 0 and 0.26.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The probability that stock A does not increase is 0.44, and the probability that stock B does not increase is 0.26. Now, how can the probability that both do not increase be more than individual probability of not increasing for each? So the probability that both do not increase can not be more than 0.26. Basically the probability that both do not increase is between 0 and 0.26.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_4_5c76f60df8", "context": "", "question": "A trader sold an article at a profit of 20% for Rs.360. What is the cost price of the article?", "options": ["A)270", "B)300", "C)280", "D)320", "E)315"], "rationale": "Cost Price = Selling Price / (100+Profit%) × 100 => 360 / (100+20) × 100 => 360 / 120 × 100 = Rs.300\nOption B", "answer": "B", "textual_logical_units": {"1": "A trader sold an article at a profit of 20% for Rs.360.", "2": "What is the cost price of the article?", "3": "A)270", "4": "B)300", "5": "C)280", "6": "D)320", "7": "E)315", "8": "Cost Price = Selling Price / (100+Profit%) × 100 => 360 / (100+20) × 100 => 360 / 120 × 100 = Rs.300", "9": "Option B", "10": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 4, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['A trader sold an article at a profit of 20% for Rs.360.']\nquestion = 'What is the cost price of the article?'\nchoices = {'A': '270', 'B': '300', 'C': '280', 'D': '320', 'E': '315'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A trader sold an article at a profit of 20% for Rs.360.', 'What is the cost price of the article?']\nnew_fact = infer_new_fact(selected) # 'Cost Price = Selling Price / (100+Profit%) × 100 => 360 / (100+20) × 100 => 360 / 120 × 100 = Rs.300'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the cost price of the article?', 'B)300', 'Cost Price = Selling Price / (100+Profit%) × 100 => 360 / (100+20) × 100 => 360 / 120 × 100 = Rs.300']\nnew_fact = infer_new_fact(selected) # 'Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_5_ceb01d1888", "context": "", "question": "20 marbles were pulled out of a bag of only white marbles, painted black, and then put back in. Then, another 20 marbles were pulled out, of which 1 was black, after which they were all returned to the bag. If the percentage of black marbles pulled out the second time represents their percentage in the bag, how many marbles in total Q does the bag currently hold?", "options": ["A)40", "B)200", "C)380", "D)400", "E)3200"], "rationale": "We know that there are 20 black marbles in the bag and this number represent 1/20 th of the number of all marbles in the bag, thus there are total Q of 20*20=400 marbles.\nAnswer: D.", "answer": "D", "textual_logical_units": {"1": "20 marbles were pulled out of a bag of only white marbles, painted black, and then put back in.", "2": "Then, another 20 marbles were pulled out,", "3": "of which 1 was black,", "4": "after which they were all returned to the bag.", "5": "If the percentage of black marbles pulled out the second time represents their percentage in the bag,", "6": "how many marbles in total Q does the bag currently hold?", "7": "A)40", "8": "B)200", "9": "C)380", "10": "D)400", "11": "E)3200", "12": "We know that there are 20 black marbles in the bag and this number represent 1/20 th of the number of all marbles in the bag, thus there are total Q of 20*20=400 marbles.", "13": "Answer: D.", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ '20 marbles were pulled out of a bag of only white marbles, painted black, and then put back in.',\n  'Then, another 20 marbles were pulled out,',\n  'of which 1 was black,',\n  'after which they were all returned to the bag.',\n  'If the percentage of black marbles pulled out the second time represents their percentage in the bag,']\nquestion = 'how many marbles in total Q does the bag currently hold?'\nchoices = {'A': '40', 'B': '200', 'C': '380', 'D': '400', 'E': '3200'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['20 marbles were pulled out of a bag of only white marbles, painted black, and then put back in.', 'Then, another 20 marbles were pulled out,', 'of which 1 was black,', 'after which they were all returned to the bag.', 'If the percentage of black marbles pulled out the second time represents their percentage in the bag,', 'how many marbles in total Q does the bag currently hold?']\nnew_fact = infer_new_fact(selected) # 'We know that there are 20 black marbles in the bag and this number represent 1/20 th of the number of all marbles in the bag, thus there are total Q of 20*20=400 marbles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many marbles in total Q does the bag currently hold?', 'D)400', 'We know that there are 20 black marbles in the bag and this number represent 1/20 th of the number of all marbles in the bag, thus there are total Q of 20*20=400 marbles.']\nnew_fact = infer_new_fact(selected) # 'Answer: D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_6_ce283204aa", "context": "", "question": "Find the total no. of distinct bike no.'s that can beformed using 2 letters followed by 2 no.'s. How many letters need to be distinct?", "options": ["A)74453", "B)64543", "C)74325", "D)65000", "E)97656"], "rationale": "Out of 26 alphabets two distinct letters can be chosen in 26P2 ways. Coming to the numbers part, there are 10 ways to choose the first digit and similarly, there are another 10 ways to choose the second digit. Hence, there are in total 10X10 = 100 ways.\nCombined with letters there are 6P2 X 100 ways = 65000 ways to choose vehicle numbers.\nD", "answer": "D", "textual_logical_units": {"1": "Find the total no.", "2": "of distinct bike no.'s that can beformed using 2 letters followed by 2 no.'s.", "3": "How many letters need to be distinct?", "4": "A)74453", "5": "B)64543", "6": "C)74325", "7": "D)65000", "8": "E)97656", "9": "Out of 26 alphabets two distinct letters can be chosen in 26P2 ways. Coming to the numbers part, there are 10 ways to choose the first digit and similarly, there are another 10 ways to choose the second digit. Hence, there are in total 10X10 = 100 ways.", "10": "Combined with letters there are 6P2 X 100 ways = 65000 ways to choose vehicle numbers.", "11": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['Find the total no.', \"of distinct bike no.'s that can beformed using 2 letters followed by 2 no.'s.\"]\nquestion = 'How many letters need to be distinct?'\nchoices = {'A': '74453', 'B': '64543', 'C': '74325', 'D': '65000', 'E': '97656'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Find the total no.', \"of distinct bike no.'s that can beformed using 2 letters followed by 2 no.'s.\", 'How many letters need to be distinct?']\nnew_fact = infer_new_fact(selected) # 'Out of 26 alphabets two distinct letters can be chosen in 26P2 ways. Coming to the numbers part, there are 10 ways to choose the first digit and similarly, there are another 10 ways to choose the second digit. Hence, there are in total 10X10 = 100 ways.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Out of 26 alphabets two distinct letters can be chosen in 26P2 ways. Coming to the numbers part, there are 10 ways to choose the first digit and similarly, there are another 10 ways to choose the second digit. Hence, there are in total 10X10 = 100 ways.']\nnew_fact = infer_new_fact(selected) # 'Combined with letters there are 6P2 X 100 ways = 65000 ways to choose vehicle numbers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Combined with letters there are 6P2 X 100 ways = 65000 ways to choose vehicle numbers.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_7_7b2a7e0e97", "context": "", "question": "A train running at a speed of 100 miles/hour, takes 10 hours to reach its destination. After covering quarter of the distance, it starts raining and the train has to be slowed to speed of 75 miles/hour. What is the total journey duration?", "options": ["A)10", "B)11.5", "C)12.5", "D)13.5", "E)15"], "rationale": "Distance to destination = 100 X 10 = 1000 miles.\nDistance remaining when it starts to rain = 1000 - 250 = 750 miles.\nSpeed for remaining distance = 75 miles / hour.\nTime taken to cover remaining distance = 750 / 75 = 10 hours.\nTotal duration of the journey = 2.5 + 10 = 12.5 hours.\nThe correct option is C.", "answer": "C", "textual_logical_units": {"1": "A train running at a speed of 100 miles/hour,", "2": "takes 10 hours to reach its destination.", "3": "After covering quarter of the distance, it starts raining and", "4": "the train has to be slowed to speed of 75 miles/hour.", "5": "What is the total journey duration?", "6": "A)10", "7": "B)11.5", "8": "C)12.5", "9": "D)13.5", "10": "E)15", "11": "Distance to destination = 100 X 10 = 1000 miles.", "12": "Distance remaining when it starts to rain = 1000 - 250 = 750 miles.", "13": "Speed for remaining distance = 75 miles / hour.", "14": "Time taken to cover remaining distance = 750 / 75 = 10 hours.", "15": "Total duration of the journey = 2.5 + 10 = 12.5 hours.", "16": "The correct option is C.", "17": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [4, 12], "consequent": 14}, {"antecedents": [2, 5, 11, 12, 13, 14], "consequent": 15}, {"antecedents": [5, 8, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'A train running at a speed of 100 miles/hour,',\n  'takes 10 hours to reach its destination.',\n  'After covering quarter of the distance, it starts raining and',\n  'the train has to be slowed to speed of 75 miles/hour.']\nquestion = 'What is the total journey duration?'\nchoices = {'A': '10', 'B': '11.5', 'C': '12.5', 'D': '13.5', 'E': '15'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A train running at a speed of 100 miles/hour,', 'takes 10 hours to reach its destination.']\nnew_fact = infer_new_fact(selected) # 'Distance to destination = 100 X 10 = 1000 miles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After covering quarter of the distance, it starts raining and', 'Distance to destination = 100 X 10 = 1000 miles.']\nnew_fact = infer_new_fact(selected) # 'Distance remaining when it starts to rain = 1000 - 250 = 750 miles.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the train has to be slowed to speed of 75 miles/hour.']\nnew_fact = infer_new_fact(selected) # 'Speed for remaining distance = 75 miles / hour.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the train has to be slowed to speed of 75 miles/hour.', 'Distance remaining when it starts to rain = 1000 - 250 = 750 miles.']\nnew_fact = infer_new_fact(selected) # 'Time taken to cover remaining distance = 750 / 75 = 10 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['takes 10 hours to reach its destination.', 'What is the total journey duration?', 'Distance to destination = 100 X 10 = 1000 miles.', 'Distance remaining when it starts to rain = 1000 - 250 = 750 miles.', 'Speed for remaining distance = 75 miles / hour.', 'Time taken to cover remaining distance = 750 / 75 = 10 hours.']\nnew_fact = infer_new_fact(selected) # 'Total duration of the journey = 2.5 + 10 = 12.5 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the total journey duration?', 'C)12.5', 'Distance to destination = 100 X 10 = 1000 miles.', 'Distance remaining when it starts to rain = 1000 - 250 = 750 miles.', 'Speed for remaining distance = 75 miles / hour.', 'Time taken to cover remaining distance = 750 / 75 = 10 hours.', 'Total duration of the journey = 2.5 + 10 = 12.5 hours.']\nnew_fact = infer_new_fact(selected) # 'The correct option is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The correct option is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_8_7038df8427", "context": "", "question": "Of the 200 students in a school, at least 45% attended the prom night and at least 35% took part in the debating session. What is the maximum number of students who could have neither attended the prom night nor the debating session?", "options": ["A)27", "B)81", "C)90", "D)99", "E)110"], "rationale": "To maximize the number of students who did neither, we should minimize the number of students who debated or attended the prom.\nLet's assume that all 35% of students who debated also attended the prom.\nThen 35% did both, 10% only attended prom, and 55% did neither.\n0.55*200 = 110\nThe answer is E.", "answer": "E", "textual_logical_units": {"1": "Of the 200 students in a school,", "2": "at least 45% attended the prom night and", "3": "at least 35% took part in the debating session.", "4": "What is the maximum number of students who could have neither attended the prom night nor the debating session?", "5": "A)27", "6": "B)81", "7": "C)90", "8": "D)99", "9": "E)110", "10": "To maximize the number of students who did neither, we should minimize the number of students who debated or attended the prom.", "11": "Let's assume that all 35% of students who debated also attended the prom.", "12": "Then 35% did both, 10% only attended prom, and 55% did neither.", "13": "0.55*200 = 110", "14": "The answer is E.", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [1, 2, 3, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 11, 12], "consequent": 13}, {"antecedents": [4, 9, 11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['Of the 200 students in a school,', 'at least 45% attended the prom night and', 'at least 35% took part in the debating session.']\nquestion = 'What is the maximum number of students who could have neither attended the prom night nor the debating session?'\nchoices = {'A': '27', 'B': '81', 'C': '90', 'D': '99', 'E': '110'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['at least 45% attended the prom night and', 'at least 35% took part in the debating session.', 'What is the maximum number of students who could have neither attended the prom night nor the debating session?']\nnew_fact = infer_new_fact(selected) # 'To maximize the number of students who did neither, we should minimize the number of students who debated or attended the prom.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Of the 200 students in a school,', 'at least 45% attended the prom night and', 'at least 35% took part in the debating session.']\nnew_fact = infer_new_fact(selected) # \"Let's assume that all 35% of students who debated also attended the prom.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Of the 200 students in a school,', 'at least 45% attended the prom night and', 'at least 35% took part in the debating session.', \"Let's assume that all 35% of students who debated also attended the prom.\"]\nnew_fact = infer_new_fact(selected) # 'Then 35% did both, 10% only attended prom, and 55% did neither.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Of the 200 students in a school,', 'at least 45% attended the prom night and', 'at least 35% took part in the debating session.', \"Let's assume that all 35% of students who debated also attended the prom.\", 'Then 35% did both, 10% only attended prom, and 55% did neither.']\nnew_fact = infer_new_fact(selected) # '0.55*200 = 110'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the maximum number of students who could have neither attended the prom night nor the debating session?', 'E)110', \"Let's assume that all 35% of students who debated also attended the prom.\", 'Then 35% did both, 10% only attended prom, and 55% did neither.', '0.55*200 = 110']\nnew_fact = infer_new_fact(selected) # 'The answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_9_0a80e5d8db", "context": "", "question": "A sales person gets a 10% commission on each sale he makes. How many sales of $250 each must he make in order to reach a salary of at least $1000?", "options": ["A)15", "B)24", "C)25", "D)40", "E)52"], "rationale": "10% of 250 = 25.\nTotal salary required = 1000\nEarning from single sale = 25\n# of sales = 1000/25 =40\nSo 40 sales\nD is the correct choice", "answer": "D", "textual_logical_units": {"1": "A sales person gets a 10% commission on each sale he makes.", "2": "How many sales of $250 each must he make in order to reach a salary of at least $1000?", "3": "A)15", "4": "B)24", "5": "C)25", "6": "D)40", "7": "E)52", "8": "10% of 250 = 25.", "9": "Total salary required = 1000", "10": "Earning from single sale = 25", "11": "# of sales = 1000/25 =40", "12": "So 40 sales", "13": "D is the correct choice", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['A sales person gets a 10% commission on each sale he makes.']\nquestion = 'How many sales of $250 each must he make in order to reach a salary of at least $1000?'\nchoices = {'A': '15', 'B': '24', 'C': '25', 'D': '40', 'E': '52'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A sales person gets a 10% commission on each sale he makes.', 'How many sales of $250 each must he make in order to reach a salary of at least $1000?']\nnew_fact = infer_new_fact(selected) # '10% of 250 = 25.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many sales of $250 each must he make in order to reach a salary of at least $1000?']\nnew_fact = infer_new_fact(selected) # 'Total salary required = 1000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A sales person gets a 10% commission on each sale he makes.']\nnew_fact = infer_new_fact(selected) # 'Earning from single sale = 25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A sales person gets a 10% commission on each sale he makes.', 'How many sales of $250 each must he make in order to reach a salary of at least $1000?']\nnew_fact = infer_new_fact(selected) # '# of sales = 1000/25 =40'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A sales person gets a 10% commission on each sale he makes.', 'How many sales of $250 each must he make in order to reach a salary of at least $1000?', 'Earning from single sale = 25', '# of sales = 1000/25 =40']\nnew_fact = infer_new_fact(selected) # 'So 40 sales'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A sales person gets a 10% commission on each sale he makes.', 'How many sales of $250 each must he make in order to reach a salary of at least $1000?', 'D)40', '# of sales = 1000/25 =40', 'So 40 sales']\nnew_fact = infer_new_fact(selected) # 'D is the correct choice'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D is the correct choice']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_10_52ac39f127", "context": "", "question": "A company produces 420 units of a particular computer component every month, at a production cost to the company of $110 per component, and sells all of the components by the end of each month. What is the minimum selling price per component that will guarantee that the yearly profit (revenue from sales minus production costs) will be at least $626,400 ?", "options": ["A)226", "B)230", "C)240", "D)260", "E)280"], "rationale": "450*12(x-110)=626400\nwhere x is a selling cost of one item\nx-110, is a profit from one item\n450 - number of items produced and sold per month\n12 - is a number of month in a year\nSimplifying the equation will lead to x-110=116, then x = 230\nB", "answer": "B", "textual_logical_units": {"1": "A company produces 420 units of a particular computer component every month,", "2": "at a production cost to the company of $110 per component,", "3": "and sells all of the components by the end of each month.", "4": "What is the minimum selling price per component that will guarantee that the yearly profit (revenue from sales minus production costs) will be at least $626,400 ?", "5": "A)226", "6": "B)230", "7": "C)240", "8": "D)260", "9": "E)280", "10": "450*12(x-110)=626400", "11": "where x is a selling cost of one item", "12": "x-110, is a profit from one item", "13": "450 - number of items produced and sold per month", "14": "12 - is a number of month in a year", "15": "Simplifying the equation will lead to x-110=116, then x = 230", "16": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [1, 2, 10], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [0], "consequent": 14}, {"antecedents": [6, 11, 12, 13], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'A company produces 420 units of a particular computer component every month,',\n  'at a production cost to the company of $110 per component,',\n  'and sells all of the components by the end of each month.']\nquestion = ('What is the minimum selling price per component that will guarantee that the yearly profit (revenue from sales minus production costs) will be at least '\n '$626,400 ?')\nchoices = {'A': '226', 'B': '230', 'C': '240', 'D': '260', 'E': '280'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A company produces 420 units of a particular computer component every month,', 'at a production cost to the company of $110 per component,']\nnew_fact = infer_new_fact(selected) # '450*12(x-110)=626400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A company produces 420 units of a particular computer component every month,', 'at a production cost to the company of $110 per component,', '450*12(x-110)=626400']\nnew_fact = infer_new_fact(selected) # 'where x is a selling cost of one item'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A company produces 420 units of a particular computer component every month,', 'at a production cost to the company of $110 per component,', '450*12(x-110)=626400']\nnew_fact = infer_new_fact(selected) # 'x-110, is a profit from one item'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A company produces 420 units of a particular computer component every month,']\nnew_fact = infer_new_fact(selected) # '450 - number of items produced and sold per month'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '12 - is a number of month in a year'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B)230', 'where x is a selling cost of one item', 'x-110, is a profit from one item', '450 - number of items produced and sold per month']\nnew_fact = infer_new_fact(selected) # 'Simplifying the equation will lead to x-110=116, then x = 230'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Simplifying the equation will lead to x-110=116, then x = 230']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_11_8ead2e6ea4", "context": "", "question": "At a certain factory, 10 percent of the staplers produced on Monday were defective and 2 percent of the non-defective staplers were rejected by mistake. If 72 of the non-defective staplers were rejected, what was the number of staplers produced that day?", "options": ["A)4,000", "B)4,200", "C)4,500", "D)4,800", "E)5,000"], "rationale": "We're told that 10% of staplers in a factory are defective.\nX = Total staplers\n0.1X = defective staplers\n0.9X = normal staplers\nNext, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.\n0.9X(0.02) = 72\n0.018X = 72\n18X = 72,000\nX = 4,000\nFinal Answer:\nA", "answer": "A", "textual_logical_units": {"1": "At a certain factory, 10 percent of the staplers produced on Monday were defective and", "2": "2 percent of the non-defective staplers were rejected by mistake.", "3": "If 72 of the non-defective staplers were rejected,", "4": "what was the number of staplers produced that day?", "5": "A)4,000", "6": "B)4,200", "7": "C)4,500", "8": "D)4,800", "9": "E)5,000", "10": "We're told that 10% of staplers in a factory are defective.", "11": "X = Total staplers", "12": "0.1X = defective staplers", "13": "0.9X = normal staplers", "14": "Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.", "15": "0.9X(0.02) = 72", "16": "0.018X = 72", "17": "18X = 72,000", "18": "X = 4,000", "19": "Final Answer:", "20": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [2, 3], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [14, 15], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'At a certain factory, 10 percent of the staplers produced on Monday were defective and',\n  '2 percent of the non-defective staplers were rejected by mistake.',\n  'If 72 of the non-defective staplers were rejected,']\nquestion = 'what was the number of staplers produced that day?'\nchoices = {'A': '4,000', 'B': '4,200', 'C': '4,500', 'D': '4,800', 'E': '5,000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At a certain factory, 10 percent of the staplers produced on Monday were defective and']\nnew_fact = infer_new_fact(selected) # \"We're told that 10% of staplers in a factory are defective.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'X = Total staplers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At a certain factory, 10 percent of the staplers produced on Monday were defective and', 'X = Total staplers']\nnew_fact = infer_new_fact(selected) # '0.1X = defective staplers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X = Total staplers', '0.1X = defective staplers']\nnew_fact = infer_new_fact(selected) # '0.9X = normal staplers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 percent of the non-defective staplers were rejected by mistake.', 'If 72 of the non-defective staplers were rejected,']\nnew_fact = infer_new_fact(selected) # \"Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['0.1X = defective staplers', '0.9X = normal staplers', \"Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.\"]\nnew_fact = infer_new_fact(selected) # '0.9X(0.02) = 72'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.\", '0.9X(0.02) = 72']\nnew_fact = infer_new_fact(selected) # '0.018X = 72'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Next, we're told that 2% of the normal staplers were rejected by mistake and that this = 72 staplers.\", '0.9X(0.02) = 72', '0.018X = 72']\nnew_fact = infer_new_fact(selected) # '18X = 72,000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['18X = 72,000']\nnew_fact = infer_new_fact(selected) # 'X = 4,000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Final Answer:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Final Answer:']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_12_bef6d5ea84", "context": "", "question": "Machine A puts out a yo-yo every 6 minutes. Machine B puts out a yo-yo every 9 minutes. After how many minutes will they have produced 10 yo-yos?", "options": ["A)24 minutes", "B)32 minutes", "C)36 minutes", "D)64 minutes", "E)72 minutes"], "rationale": "A's speed = 3 yo-yos every 18 minutes\nB's speed = 2 yo-yos every 18 minutes\nA + B's speed = 3 + 2 = 5 yo-yos every 18 minutes\nboth together will finish 10 yo-yos in 36 minutes\ncorrect option is C", "answer": "C", "textual_logical_units": {"1": "Machine A puts out a yo-yo every 6 minutes.", "2": "Machine B puts out a yo-yo every 9 minutes.", "3": "After how many minutes will they have produced 10 yo-yos?", "4": "A)24 minutes", "5": "B)32 minutes", "6": "C)36 minutes", "7": "D)64 minutes", "8": "E)72 minutes", "9": "A's speed = 3 yo-yos every 18 minutes", "10": "B's speed = 2 yo-yos every 18 minutes", "11": "A + B's speed = 3 + 2 = 5 yo-yos every 18 minutes", "12": "both together will finish 10 yo-yos in 36 minutes", "13": "correct option is C", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Machine A puts out a yo-yo every 6 minutes.', 'Machine B puts out a yo-yo every 9 minutes.']\nquestion = 'After how many minutes will they have produced 10 yo-yos?'\nchoices = {'A': '24 minutes', 'B': '32 minutes', 'C': '36 minutes', 'D': '64 minutes', 'E': '72 minutes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Machine A puts out a yo-yo every 6 minutes.']\nnew_fact = infer_new_fact(selected) # \"A's speed = 3 yo-yos every 18 minutes\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Machine B puts out a yo-yo every 9 minutes.']\nnew_fact = infer_new_fact(selected) # \"B's speed = 2 yo-yos every 18 minutes\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A's speed = 3 yo-yos every 18 minutes\", \"B's speed = 2 yo-yos every 18 minutes\"]\nnew_fact = infer_new_fact(selected) # \"A + B's speed = 3 + 2 = 5 yo-yos every 18 minutes\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how many minutes will they have produced 10 yo-yos?', \"A + B's speed = 3 + 2 = 5 yo-yos every 18 minutes\"]\nnew_fact = infer_new_fact(selected) # 'both together will finish 10 yo-yos in 36 minutes'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how many minutes will they have produced 10 yo-yos?', 'C)36 minutes', \"A + B's speed = 3 + 2 = 5 yo-yos every 18 minutes\", 'both together will finish 10 yo-yos in 36 minutes']\nnew_fact = infer_new_fact(selected) # 'correct option is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct option is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_13_fa5f492924", "context": "", "question": "Add: +45 and -30", "options": ["A)-30", "B)+30", "C)0", "D)15", "E)-15"], "rationale": "45 - 30 = 15\nANSWER : D", "answer": "D", "textual_logical_units": {"1": "Add: +45 and -30", "2": "A)-30", "3": "B)+30", "4": "C)0", "5": "D)15", "6": "E)-15", "7": "45 - 30 = 15", "8": "ANSWER : D", "9": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 5, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'Add: +45 and -30'\nchoices = {'A': '-30', 'B': '+30', 'C': '0', 'D': '15', 'E': '-15'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Add: +45 and -30']\nnew_fact = infer_new_fact(selected) # '45 - 30 = 15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Add: +45 and -30', 'D)15', '45 - 30 = 15']\nnew_fact = infer_new_fact(selected) # 'ANSWER : D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER : D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_14_9e29d7b287", "context": "", "question": "In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?", "options": ["A)2!", "B)3!", "C)7!", "D)8!", "E)9!"], "rationale": "There are seven positions to be filled.\nThe first position can be filled using any of the 7 letters contained in PROBLEM.\nThe second position can be filled by the remaining 6 letters as the letters should not repeat.\nThe third position can be filled by the remaining 5 letters only and so on.\n758\nTherefore, the total number of ways of rearranging the 7 letter word = 7*6*5*4*3*2*1 = 7! Ways.\nC", "answer": "C", "textual_logical_units": {"1": "In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?", "2": "A)2!", "3": "B)3!", "4": "C)7!", "5": "D)8!", "6": "E)9!", "7": "There are seven positions to be filled.", "8": "The first position can be filled using any of the 7 letters contained in PROBLEM.", "9": "The second position can be filled by the remaining 6 letters as the letters should not repeat.", "10": "The third position can be filled by the remaining 5 letters only and so on.", "11": "Therefore, the total number of ways of rearranging the 7 letter word = 7*6*5*4*3*2*1 = 7! Ways.", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [1, 8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?'\nchoices = {'A': '2!', 'B': '3!', 'C': '7!', 'D': '8!', 'E': '9!'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?']\nnew_fact = infer_new_fact(selected) # 'There are seven positions to be filled.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?']\nnew_fact = infer_new_fact(selected) # 'The first position can be filled using any of the 7 letters contained in PROBLEM.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?', 'The first position can be filled using any of the 7 letters contained in PROBLEM.']\nnew_fact = infer_new_fact(selected) # 'The second position can be filled by the remaining 6 letters as the letters should not repeat.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?', 'The first position can be filled using any of the 7 letters contained in PROBLEM.', 'The second position can be filled by the remaining 6 letters as the letters should not repeat.']\nnew_fact = infer_new_fact(selected) # 'The third position can be filled by the remaining 5 letters only and so on.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can the letters of the word \"PROBLEC\" be rearranged to make 7 letter words such that none of the letters repeat?', 'The first position can be filled using any of the 7 letters contained in PROBLEM.', 'The second position can be filled by the remaining 6 letters as the letters should not repeat.', 'The third position can be filled by the remaining 5 letters only and so on.']\nnew_fact = infer_new_fact(selected) # 'Therefore, the total number of ways of rearranging the 7 letter word = 7*6*5*4*3*2*1 = 7! Ways.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, the total number of ways of rearranging the 7 letter word = 7*6*5*4*3*2*1 = 7! Ways.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_15_d9ec1ce954", "context": "", "question": "Let A and B be independent events with P (A) = 0.2 and P(B) = 0.8. Find P(A/B)?", "options": ["A)0.2", "B)0.4", "C)0.6", "D)1.2", "E)1.5"], "rationale": "P(A/B) = P (A n B)/P(B)\nHere, P (A n B) = 0.16\nP(A/B) = 0.16/0.8 = 0.2\nA", "answer": "A", "textual_logical_units": {"1": "Let A and B be independent events with P (A) = 0.2 and P(B) = 0.8.", "2": "Find P(A/B)?", "3": "A)0.2", "4": "B)0.4", "5": "C)0.6", "6": "D)1.2", "7": "E)1.5", "8": "P(A/B) = P (A n B)/P(B)", "9": "Here, P (A n B) = 0.16", "10": "P(A/B) = 0.16/0.8 = 0.2", "11": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['Let A and B be independent events with P (A) = 0.2 and P(B) = 0.8.']\nquestion = 'Find P(A/B)?'\nchoices = {'A': '0.2', 'B': '0.4', 'C': '0.6', 'D': '1.2', 'E': '1.5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Let A and B be independent events with P (A) = 0.2 and P(B) = 0.8.', 'Find P(A/B)?']\nnew_fact = infer_new_fact(selected) # 'P(A/B) = P (A n B)/P(B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find P(A/B)?', 'P(A/B) = P (A n B)/P(B)']\nnew_fact = infer_new_fact(selected) # 'Here, P (A n B) = 0.16'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find P(A/B)?', 'P(A/B) = P (A n B)/P(B)', 'Here, P (A n B) = 0.16']\nnew_fact = infer_new_fact(selected) # 'P(A/B) = 0.16/0.8 = 0.2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P(A/B) = 0.16/0.8 = 0.2']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_16_f2f221930f", "context": "", "question": "Consider there is an staircase elevator and you are coming down. If you walk 20 steps and stop, then you reach bottom in 10 minutes. If you walk 10 steps and stop, you reach to the ground in 20 minutes. What is the speed of the elevator?", "options": ["A)1 step/minute", "B)2 step/minute", "C)3 step/minute", "D)4 step/minute", "E)None of the above"], "rationale": "Let total number of steps in the elevator be n and let the speed be e\nElevator covered n-20 steps in 10 mins\n(n-20)/e=10.................1\nElevator covered n-10 steps in 20 mins\n(n-10)/e=20......................2\nFrom (1) and (2)\nn=30\ne=1 step/min\nHence (A) is correct answer.", "answer": "A", "textual_logical_units": {"1": "Consider there is an staircase elevator and you are coming down.", "2": "If you walk 20 steps and stop,", "3": "then you reach bottom in 10 minutes.", "4": "If you walk 10 steps and stop,", "5": "you reach to the ground in 20 minutes.", "6": "What is the speed of the elevator?", "7": "A)1 step/minute", "8": "B)2 step/minute", "9": "C)3 step/minute", "10": "D)4 step/minute", "11": "E)None of the above", "12": "Let total number of steps in the elevator be n and let the speed be e", "13": "Elevator covered n-20 steps in 10 mins", "14": "(n-20)/e=10.................1", "15": "Elevator covered n-10 steps in 20 mins", "16": "(n-10)/e=20......................2", "17": "From (1) and (2)", "18": "n=30", "19": "e=1 step/min", "20": "Hence (A) is correct answer.", "21": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 6], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [4, 5, 6], "consequent": 15}, {"antecedents": [12, 15], "consequent": 16}, {"antecedents": [14, 16], "consequent": 17}, {"antecedents": [14, 16], "consequent": 18}, {"antecedents": [16, 18], "consequent": 19}, {"antecedents": [6, 7, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'Consider there is an staircase elevator and you are coming down.',\n  'If you walk 20 steps and stop,',\n  'then you reach bottom in 10 minutes.',\n  'If you walk 10 steps and stop,',\n  'you reach to the ground in 20 minutes.']\nquestion = 'What is the speed of the elevator?'\nchoices = {'A': '1 step/minute', 'B': '2 step/minute', 'C': '3 step/minute', 'D': '4 step/minute', 'E': 'None of the above'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let total number of steps in the elevator be n and let the speed be e'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If you walk 20 steps and stop,', 'then you reach bottom in 10 minutes.', 'What is the speed of the elevator?']\nnew_fact = infer_new_fact(selected) # 'Elevator covered n-20 steps in 10 mins'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let total number of steps in the elevator be n and let the speed be e', 'Elevator covered n-20 steps in 10 mins']\nnew_fact = infer_new_fact(selected) # '(n-20)/e=10.................1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If you walk 10 steps and stop,', 'you reach to the ground in 20 minutes.', 'What is the speed of the elevator?']\nnew_fact = infer_new_fact(selected) # 'Elevator covered n-10 steps in 20 mins'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let total number of steps in the elevator be n and let the speed be e', 'Elevator covered n-10 steps in 20 mins']\nnew_fact = infer_new_fact(selected) # '(n-10)/e=20......................2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n-20)/e=10.................1', '(n-10)/e=20......................2']\nnew_fact = infer_new_fact(selected) # 'From (1) and (2)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n-20)/e=10.................1', '(n-10)/e=20......................2']\nnew_fact = infer_new_fact(selected) # 'n=30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n-10)/e=20......................2', 'n=30']\nnew_fact = infer_new_fact(selected) # 'e=1 step/min'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the speed of the elevator?', 'A)1 step/minute', 'e=1 step/min']\nnew_fact = infer_new_fact(selected) # 'Hence (A) is correct answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence (A) is correct answer.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_17_9bdab6d83f", "context": "", "question": "Last year, a Home Appliance Store sold an average(arithmetic mean) of 42 microwave ovens per month. In the first 10 months of this year,the store has sold an average(arithmetic mean) of only 20 microwave ovens per month. What was the average number of microwave ovens sold per month during the entire 22 months period ?", "options": ["A)21", "B)30", "C)31", "D)32", "E)None of the above"], "rationale": "42×12+20×10 /12+10=504+200/22=704/22=32\nAnswer D", "answer": "D", "textual_logical_units": {"1": "Last year, a Home Appliance Store sold an average(arithmetic mean) of 42 microwave ovens per month.", "2": "In the first 10 months of this year,the store has sold an average(arithmetic mean) of only 20 microwave ovens per month.", "3": "What was the average number of microwave ovens sold per month during the entire 22 months period ?", "4": "A)21", "5": "B)30", "6": "C)31", "7": "D)32", "8": "E)None of the above", "9": "42×12+20×10 /12+10=504+200/22=704/22=32", "10": "Answer D", "11": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 7, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = [ 'Last year, a Home Appliance Store sold an average(arithmetic mean) of 42 microwave ovens per month.',\n  'In the first 10 months of this year,the store has sold an average(arithmetic mean) of only 20 microwave ovens per month.']\nquestion = 'What was the average number of microwave ovens sold per month during the entire 22 months period ?'\nchoices = {'A': '21', 'B': '30', 'C': '31', 'D': '32', 'E': 'None of the above'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Last year, a Home Appliance Store sold an average(arithmetic mean) of 42 microwave ovens per month.', 'In the first 10 months of this year,the store has sold an average(arithmetic mean) of only 20 microwave ovens per month.', 'What was the average number of microwave ovens sold per month during the entire 22 months period ?']\nnew_fact = infer_new_fact(selected) # '42×12+20×10 /12+10=504+200/22=704/22=32'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What was the average number of microwave ovens sold per month during the entire 22 months period ?', 'D)32', '42×12+20×10 /12+10=504+200/22=704/22=32']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_18_730a0696d9", "context": "", "question": "An exam is given in a certain class. The average (arithmetic mean) of the highest score and the lowest score is equal to x. If the average score for the entire class is equal to y and there are z students in the class, where z > 5, then in terms of x, y, and z, what is the average score for the class excluding the highest and lowest scorers?", "options": ["A)(zy – 2x)/z", "B)(zy – 2)/z", "C)(zx – y)/(z – 2)", "D)(zy – 2x)/(z -2)", "E)(zy – x)/(z + 2)"], "rationale": "Highest: H\nLowest: L\nNumber of students in the class: Z\nNumber of students in the class excluding the highest and lowest : Z-2\nAverage of Highest and Lowest: (H + L)/2=X => H+L=2X\nAverage of Entire Class : (H+L+Others)/Z=Y => Others= ZY-2X\nAverage of the others in the class: (ZY-2X)/(Z-2)\nAnswer: D", "answer": "D", "textual_logical_units": {"1": "An exam is given in a certain class.", "2": "The average (arithmetic mean) of the highest score and", "3": "the lowest score is equal to x.", "4": "If the average score for the entire class is equal to y and", "5": "there are z students in the class, where z > 5,", "6": "then in terms of x, y, and z,", "7": "what is the average score for the class excluding the highest and lowest scorers?", "8": "A)(zy – 2x)/z", "9": "B)(zy – 2)/z", "10": "C)(zx – y)/(z – 2)", "11": "D)(zy – 2x)/(z -2)", "12": "E)(zy – x)/(z + 2)", "13": "Highest: H", "14": "Lowest: L", "15": "Number of students in the class: Z", "16": "Number of students in the class excluding the highest and lowest : Z-2", "17": "Average of Highest and Lowest: (H + L)/2=X => H+L=2X", "18": "Average of Entire Class : (H+L+Others)/Z=Y => Others= ZY-2X", "19": "Average of the others in the class: (ZY-2X)/(Z-2)", "20": "Answer: D", "21": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 13}, {"antecedents": [0], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [7, 15], "consequent": 16}, {"antecedents": [4, 5, 7], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [17, 18], "consequent": 19}, {"antecedents": [7, 11, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'An exam is given in a certain class.',\n  'The average (arithmetic mean) of the highest score and',\n  'the lowest score is equal to x.',\n  'If the average score for the entire class is equal to y and',\n  'there are z students in the class, where z > 5,',\n  'then in terms of x, y, and z,']\nquestion = 'what is the average score for the class excluding the highest and lowest scorers?'\nchoices = {'A': '(zy – 2x)/z', 'B': '(zy – 2)/z', 'C': '(zx – y)/(z – 2)', 'D': '(zy – 2x)/(z -2)', 'E': '(zy – x)/(z + 2)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Highest: H'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Lowest: L'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Number of students in the class: Z'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the average score for the class excluding the highest and lowest scorers?', 'Number of students in the class: Z']\nnew_fact = infer_new_fact(selected) # 'Number of students in the class excluding the highest and lowest : Z-2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the average score for the entire class is equal to y and', 'there are z students in the class, where z > 5,', 'what is the average score for the class excluding the highest and lowest scorers?']\nnew_fact = infer_new_fact(selected) # 'Average of Highest and Lowest: (H + L)/2=X => H+L=2X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Number of students in the class excluding the highest and lowest : Z-2', 'Average of Highest and Lowest: (H + L)/2=X => H+L=2X']\nnew_fact = infer_new_fact(selected) # 'Average of Entire Class : (H+L+Others)/Z=Y => Others= ZY-2X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Average of Highest and Lowest: (H + L)/2=X => H+L=2X', 'Average of Entire Class : (H+L+Others)/Z=Y => Others= ZY-2X']\nnew_fact = infer_new_fact(selected) # 'Average of the others in the class: (ZY-2X)/(Z-2)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the average score for the class excluding the highest and lowest scorers?', 'D)(zy – 2x)/(z -2)', 'Average of the others in the class: (ZY-2X)/(Z-2)']\nnew_fact = infer_new_fact(selected) # 'Answer: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_19_8b5fd5c560", "context": "", "question": "[5 + ? × 19 - 15 - 7]/[13 × 13 - 156] = 6", "options": ["A)4", "B)4.5", "C)5", "D)5.5", "E)6.5"], "rationale": "(? × 19 - 17)/(169 - 156) = 6\n=> ? × 19 - 17 = 13 × 6 = 76\n=> ? × 19 = 78 + 17 = 95\n? = 95/19 = 5\nAnswer: Option C", "answer": "C", "textual_logical_units": {"1": "[5 + ?", "2": "× 19 - 15 - 7]/[13 × 13 - 156] = 6", "3": "A)4", "4": "B)4.5", "5": "C)5", "6": "D)5.5", "7": "E)6.5", "8": "(? × 19 - 17)/(169 - 156) = 6", "9": "=> ? × 19 - 17 = 13 × 6 = 76", "10": "=> ? × 19 = 78 + 17 = 95", "11": "? = 95/19 = 5", "12": "Answer: Option C", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 2, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['[5 + ?']\nquestion = '× 19 - 15 - 7]/[13 × 13 - 156] = 6'\nchoices = {'A': '4', 'B': '4.5', 'C': '5', 'D': '5.5', 'E': '6.5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['[5 + ?', '× 19 - 15 - 7]/[13 × 13 - 156] = 6']\nnew_fact = infer_new_fact(selected) # '(? × 19 - 17)/(169 - 156) = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(? × 19 - 17)/(169 - 156) = 6']\nnew_fact = infer_new_fact(selected) # '=> ? × 19 - 17 = 13 × 6 = 76'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> ? × 19 - 17 = 13 × 6 = 76']\nnew_fact = infer_new_fact(selected) # '=> ? × 19 = 78 + 17 = 95'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> ? × 19 = 78 + 17 = 95']\nnew_fact = infer_new_fact(selected) # '? = 95/19 = 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['[5 + ?', '× 19 - 15 - 7]/[13 × 13 - 156] = 6', 'C)5', '? = 95/19 = 5']\nnew_fact = infer_new_fact(selected) # 'Answer: Option C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_20_b4acff8929", "context": "", "question": "A grocer makes a 25% profit on the selling price for each bag of flour it sells. If he sells each bag for $100 and makes $3,000 in profit, how many bags did he sell?", "options": ["A)12", "B)16", "C)24", "D)30", "E)40"], "rationale": "Profit on one bag: 100*1.25= 125\nNumber of bags sold = 3000/125 = 24\nAnswer is C.", "answer": "C", "textual_logical_units": {"1": "A grocer makes a 25% profit on the selling price for each bag of flour it sells.", "2": "If he sells each bag for $100 and makes $3,000 in profit,", "3": "how many bags did he sell?", "4": "A)12", "5": "B)16", "6": "C)24", "7": "D)30", "8": "E)40", "9": "Profit on one bag: 100*1.25= 125", "10": "Number of bags sold = 3000/125 = 24", "11": "Answer is C.", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['A grocer makes a 25% profit on the selling price for each bag of flour it sells.', 'If he sells each bag for $100 and makes $3,000 in profit,']\nquestion = 'how many bags did he sell?'\nchoices = {'A': '12', 'B': '16', 'C': '24', 'D': '30', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A grocer makes a 25% profit on the selling price for each bag of flour it sells.', 'If he sells each bag for $100 and makes $3,000 in profit,']\nnew_fact = infer_new_fact(selected) # 'Profit on one bag: 100*1.25= 125'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If he sells each bag for $100 and makes $3,000 in profit,', 'how many bags did he sell?', 'Profit on one bag: 100*1.25= 125']\nnew_fact = infer_new_fact(selected) # 'Number of bags sold = 3000/125 = 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many bags did he sell?', 'C)24', 'Number of bags sold = 3000/125 = 24']\nnew_fact = infer_new_fact(selected) # 'Answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_21_01e9ecab11", "context": "", "question": "Alex and Jacob works at a toy shop that make toys. Alex takes 7 hours to make a toy, and Jacob takes 9 hours to make a toy. During a month, both of them makes 35 toys in total. If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?", "options": ["A)15", "B)16", "C)17", "D)18", "E)19"], "rationale": "Lets say Alex has worked for x hrs., and Jacob has worked for y hrs. So, number of toys prepared by Alex is x/7, and Jacob is y/9. Since total number of toys prepared by both of them is 35.\n=> x/7 + y/9 = 35.\n=> 9x + 7y = (35)(63)\n=> 7y = (35)(63) - 9x\n=> y = (5)(63) - (9/7)x\n=> y = 315 - (9/7)x\n=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,\nx = 126, y = 315 - (9/7)126 = 153\nx = 133, y = 315 - (9/7)133 = 144\nx = 140, y = 315 - (9/7)140 = 135\nx = 147, y = 315 - (9/7)147 = 126\nAs we can see minimum difference between x and y is when x is 140 hrs. and y is 135 hrs. Thus total toys created by Jacob = y/9 = 135/9 = 15.\nAnswer: A", "answer": "A", "textual_logical_units": {"1": "Alex and Jacob works at a toy shop that make toys.", "2": "Alex takes 7 hours to make a toy,", "3": "and Jacob takes 9 hours to make a toy.", "4": "During a month, both of them makes 35 toys in total.", "5": "If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?", "6": "A)15", "7": "B)16", "8": "C)17", "9": "D)18", "10": "E)19", "11": "Lets say Alex has worked for x hrs., and Jacob has worked for y hrs. So, number of toys prepared by Alex is x/7, and Jacob is y/9. Since total number of toys prepared by both of them is 35.", "12": "=> x/7 + y/9 = 35.", "13": "=> 9x + 7y = (35)(63)", "14": "=> 7y = (35)(63) - 9x", "15": "=> y = (5)(63) - (9/7)x", "16": "=> y = 315 - (9/7)x", "17": "=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,", "18": "x = 126, y = 315 - (9/7)126 = 153", "19": "x = 133, y = 315 - (9/7)133 = 144", "20": "x = 140, y = 315 - (9/7)140 = 135", "21": "x = 147, y = 315 - (9/7)147 = 126", "22": "As we can see minimum difference between x and y is when x is 140 hrs. and y is 135 hrs. Thus total toys created by Jacob = y/9 = 135/9 = 15.", "23": "Answer: A", "24": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5], "consequent": 11}, {"antecedents": [2, 3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [0], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [16, 17], "consequent": 19}, {"antecedents": [16, 17], "consequent": 20}, {"antecedents": [16, 17], "consequent": 21}, {"antecedents": [5, 20], "consequent": 22}, {"antecedents": [5, 6, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = [ 'Alex and Jacob works at a toy shop that make toys.',\n  'Alex takes 7 hours to make a toy,',\n  'and Jacob takes 9 hours to make a toy.',\n  'During a month, both of them makes 35 toys in total.']\nquestion = 'If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?'\nchoices = {'A': '15', 'B': '16', 'C': '17', 'D': '18', 'E': '19'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Alex takes 7 hours to make a toy,', 'and Jacob takes 9 hours to make a toy.', 'During a month, both of them makes 35 toys in total.', 'If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?']\nnew_fact = infer_new_fact(selected) # 'Lets say Alex has worked for x hrs., and Jacob has worked for y hrs. So, number of toys prepared by Alex is x/7, and Jacob is y/9. Since total number of toys prepared by both of them is 35.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Alex takes 7 hours to make a toy,', 'and Jacob takes 9 hours to make a toy.', 'If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?', 'Lets say Alex has worked for x hrs., and Jacob has worked for y hrs. So, number of toys prepared by Alex is x/7, and Jacob is y/9. Since total number of toys prepared by both of them is 35.']\nnew_fact = infer_new_fact(selected) # '=> x/7 + y/9 = 35.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> x/7 + y/9 = 35.']\nnew_fact = infer_new_fact(selected) # '=> 9x + 7y = (35)(63)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 9x + 7y = (35)(63)']\nnew_fact = infer_new_fact(selected) # '=> 7y = (35)(63) - 9x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 7y = (35)(63) - 9x']\nnew_fact = infer_new_fact(selected) # '=> y = (5)(63) - (9/7)x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> y = (5)(63) - (9/7)x']\nnew_fact = infer_new_fact(selected) # '=> y = 315 - (9/7)x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> y = 315 - (9/7)x', '=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,']\nnew_fact = infer_new_fact(selected) # 'x = 126, y = 315 - (9/7)126 = 153'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> y = 315 - (9/7)x', '=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,']\nnew_fact = infer_new_fact(selected) # 'x = 133, y = 315 - (9/7)133 = 144'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> y = 315 - (9/7)x', '=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,']\nnew_fact = infer_new_fact(selected) # 'x = 140, y = 315 - (9/7)140 = 135'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> y = 315 - (9/7)x', '=> x is to be a multiple of 7. Also, we need to minimize the difference between x & y. Here are some possible values,']\nnew_fact = infer_new_fact(selected) # 'x = 147, y = 315 - (9/7)147 = 126'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?', 'x = 140, y = 315 - (9/7)140 = 135']\nnew_fact = infer_new_fact(selected) # 'As we can see minimum difference between x and y is when x is 140 hrs. and y is 135 hrs. Thus total toys created by Jacob = y/9 = 135/9 = 15.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If both of them have worked for almost similar number of hours how many toys have been prepared by Jacob?', 'A)15', 'As we can see minimum difference between x and y is when x is 140 hrs. and y is 135 hrs. Thus total toys created by Jacob = y/9 = 135/9 = 15.']\nnew_fact = infer_new_fact(selected) # 'Answer: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_22_3bc8c8f2e3", "context": "", "question": "John likes to have lightly flavored tea every evening. In a 50% strong milk tea, he replaces 15% of it with milk twice. Then, he replaces 10 percent of the resultant solution with more milk.\nWhat is the final concentration of tea John drinks?", "options": ["A)15.38%", "B)42%", "C)39.86%", "D)22.35%", "E)32.51%"], "rationale": "Imagine starting out with 100 ml of 50% milk tea.\nIn step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.\nFinally, 10% of this solution is replaced with milk again. So, the final concentration of tea is 36.125*0.9%\nThis equals 32.51% of tea solution.\nAnswer: E", "answer": "E", "textual_logical_units": {"1": "John likes to have lightly flavored tea every evening.", "2": "In a 50% strong milk tea,", "3": "he replaces 15% of it with milk twice.", "4": "Then, he replaces 10 percent of the resultant solution with more milk.\nWhat is the final concentration of tea John drinks?", "5": "A)15.38%", "6": "B)42%", "7": "C)39.86%", "8": "D)22.35%", "9": "E)32.51%", "10": "Imagine starting out with 100 ml of 50% milk tea.", "11": "In step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.", "12": "Finally, 10% of this solution is replaced with milk again. So, the final concentration of tea is 36.125*0.9%", "13": "This equals 32.51% of tea solution.", "14": "Answer: E", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['John likes to have lightly flavored tea every evening.', 'In a 50% strong milk tea,', 'he replaces 15% of it with milk twice.']\nquestion = 'Then, he replaces 10 percent of the resultant solution with more milk.\\nWhat is the final concentration of tea John drinks?'\nchoices = {'A': '15.38%', 'B': '42%', 'C': '39.86%', 'D': '22.35%', 'E': '32.51%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a 50% strong milk tea,', 'he replaces 15% of it with milk twice.']\nnew_fact = infer_new_fact(selected) # 'Imagine starting out with 100 ml of 50% milk tea.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['he replaces 15% of it with milk twice.']\nnew_fact = infer_new_fact(selected) # 'In step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Imagine starting out with 100 ml of 50% milk tea.', 'In step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.']\nnew_fact = infer_new_fact(selected) # 'Finally, 10% of this solution is replaced with milk again. So, the final concentration of tea is 36.125*0.9%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In step 1, 15% of the tea is replaced with milk. Thus, 85% of the original tea remains. Since this is done twice, we have a concentration of 50x0.85x0.85% (=36.125%) of tea solution.', 'Finally, 10% of this solution is replaced with milk again. So, the final concentration of tea is 36.125*0.9%']\nnew_fact = infer_new_fact(selected) # 'This equals 32.51% of tea solution.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, he replaces 10 percent of the resultant solution with more milk.\\nWhat is the final concentration of tea John drinks?', 'E)32.51%', 'This equals 32.51% of tea solution.']\nnew_fact = infer_new_fact(selected) # 'Answer: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_23_ed74754d3a", "context": "", "question": "In a class 1/16 of the students study math, 1/10 of the students study bio, 1/8 of the students study english. The total number of students is a 4 digit number. Find the diffrence between maximum number of students and minimum number of students.", "options": ["A)8880", "B)8870", "C)8890", "D)7890", "E)6780"], "rationale": "LCM of 16,10,8 = 80\nthe largest 4 digit number divisible by 80 = 9920\nThe smallest 4 digit number divisible by 80 = 1040\nSo, required difference = 9920-1040= 8880\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "In a class 1/16 of the students study math,", "2": "1/10 of the students study bio,", "3": "1/8 of the students study english.", "4": "The total number of students is a 4 digit number.", "5": "Find the diffrence between maximum number of students and minimum number of students.", "6": "A)8880", "7": "B)8870", "8": "C)8890", "9": "D)7890", "10": "E)6780", "11": "LCM of 16,10,8 = 80", "12": "the largest 4 digit number divisible by 80 = 9920", "13": "The smallest 4 digit number divisible by 80 = 1040", "14": "So, required difference = 9920-1040= 8880", "15": "ANSWER:A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 5, 11], "consequent": 12}, {"antecedents": [4, 5, 11], "consequent": 13}, {"antecedents": [5, 12, 13], "consequent": 14}, {"antecedents": [5, 6, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'In a class 1/16 of the students study math,',\n  '1/10 of the students study bio,',\n  '1/8 of the students study english.',\n  'The total number of students is a 4 digit number.']\nquestion = 'Find the diffrence between maximum number of students and minimum number of students.'\nchoices = {'A': '8880', 'B': '8870', 'C': '8890', 'D': '7890', 'E': '6780'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a class 1/16 of the students study math,', '1/10 of the students study bio,', '1/8 of the students study english.']\nnew_fact = infer_new_fact(selected) # 'LCM of 16,10,8 = 80'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The total number of students is a 4 digit number.', 'Find the diffrence between maximum number of students and minimum number of students.', 'LCM of 16,10,8 = 80']\nnew_fact = infer_new_fact(selected) # 'the largest 4 digit number divisible by 80 = 9920'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The total number of students is a 4 digit number.', 'Find the diffrence between maximum number of students and minimum number of students.', 'LCM of 16,10,8 = 80']\nnew_fact = infer_new_fact(selected) # 'The smallest 4 digit number divisible by 80 = 1040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the diffrence between maximum number of students and minimum number of students.', 'the largest 4 digit number divisible by 80 = 9920', 'The smallest 4 digit number divisible by 80 = 1040']\nnew_fact = infer_new_fact(selected) # 'So, required difference = 9920-1040= 8880'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the diffrence between maximum number of students and minimum number of students.', 'A)8880', 'So, required difference = 9920-1040= 8880']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_24_1448333a24", "context": "", "question": "On a normal day Bill usually averages about 15 mph when riding his bicycle. On a windy day, his speed is reduced by 4 mph. How far can Bill travel on a windy day in 21 minutes? Round to the nearest hundredth.", "options": ["A)2 miles", "B)2.25 miles", "C)3.25 miles", "D)3.85 miles", "E)2.85 miles"], "rationale": "15 mph - 4 mph= 11 mph\n11 mph x (21/60)= 3.85 miles\nAnswer D", "answer": "D", "textual_logical_units": {"1": "On a normal day Bill usually averages about 15 mph when riding his bicycle.", "2": "On a windy day, his speed is reduced by 4 mph.", "3": "How far can Bill travel on a windy day in 21 minutes?", "4": "Round to the nearest hundredth.", "5": "A)2 miles", "6": "B)2.25 miles", "7": "C)3.25 miles", "8": "D)3.85 miles", "9": "E)2.85 miles", "10": "15 mph - 4 mph= 11 mph", "11": "11 mph x (21/60)= 3.85 miles", "12": "Answer D", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'On a normal day Bill usually averages about 15 mph when riding his bicycle.',\n  'On a windy day, his speed is reduced by 4 mph.',\n  'How far can Bill travel on a windy day in 21 minutes?']\nquestion = 'Round to the nearest hundredth.'\nchoices = {'A': '2 miles', 'B': '2.25 miles', 'C': '3.25 miles', 'D': '3.85 miles', 'E': '2.85 miles'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['On a normal day Bill usually averages about 15 mph when riding his bicycle.', 'On a windy day, his speed is reduced by 4 mph.']\nnew_fact = infer_new_fact(selected) # '15 mph - 4 mph= 11 mph'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How far can Bill travel on a windy day in 21 minutes?', '15 mph - 4 mph= 11 mph']\nnew_fact = infer_new_fact(selected) # '11 mph x (21/60)= 3.85 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How far can Bill travel on a windy day in 21 minutes?', 'D)3.85 miles', '11 mph x (21/60)= 3.85 miles']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_25_c9d653baa8", "context": "", "question": "A retailer sold an appliance for 40 percent above cost, which represented a gross profit of $20.00. For what price did the retailer sell the appliance?", "options": ["A)$27.30", "B)$51.00", "C)$63.00", "D)$70.00", "E)$91.00"], "rationale": "Let the cost be A. Then the selling price is A+0.4*A.\nSo the profit is 0.4 * A.\n0.4*A=20 ---> A=50.\nSo the selling price is 50+20=70.\nThe answer is (D).", "answer": "D", "textual_logical_units": {"1": "A retailer sold an appliance for 40 percent above cost,", "2": "which represented a gross profit of $20.00.", "3": "For what price did the retailer sell the appliance?", "4": "A)$27.30", "5": "B)$51.00", "6": "C)$63.00", "7": "D)$70.00", "8": "E)$91.00", "9": "Let the cost be A. Then the selling price is A+0.4*A.", "10": "So the profit is 0.4 * A.", "11": "0.4*A=20 ---> A=50.", "12": "So the selling price is 50+20=70.", "13": "The answer is (D).", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [9, 11], "consequent": 12}, {"antecedents": [3, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['A retailer sold an appliance for 40 percent above cost,', 'which represented a gross profit of $20.00.']\nquestion = 'For what price did the retailer sell the appliance?'\nchoices = {'A': '$27.30', 'B': '$51.00', 'C': '$63.00', 'D': '$70.00', 'E': '$91.00'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A retailer sold an appliance for 40 percent above cost,']\nnew_fact = infer_new_fact(selected) # 'Let the cost be A. Then the selling price is A+0.4*A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which represented a gross profit of $20.00.']\nnew_fact = infer_new_fact(selected) # 'So the profit is 0.4 * A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which represented a gross profit of $20.00.', 'So the profit is 0.4 * A.']\nnew_fact = infer_new_fact(selected) # '0.4*A=20 ---> A=50.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the cost be A. Then the selling price is A+0.4*A.', '0.4*A=20 ---> A=50.']\nnew_fact = infer_new_fact(selected) # 'So the selling price is 50+20=70.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['For what price did the retailer sell the appliance?', 'D)$70.00', 'So the selling price is 50+20=70.']\nnew_fact = infer_new_fact(selected) # 'The answer is (D).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is (D).']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_26_18d32fd426", "context": "", "question": "At 6% per annum simple interest, Rahul borrowed Rs. 500. What amount will he pay to clear the debt after 4 years", "options": ["A)750", "B)700", "C)620", "D)600", "E)None of these"], "rationale": "We need to calculate the total amount to be paid by him after 4 years, so it will be Principal + simple interest.\nSo,\n=>500+500∗6∗4 /100=>Rs.620\nOption C", "answer": "C", "textual_logical_units": {"1": "At 6% per annum simple interest, Rahul borrowed Rs.", "2": "500.", "3": "What amount will he pay to clear the debt after 4 years", "4": "A)750", "5": "B)700", "6": "C)620", "7": "D)600", "8": "E)None of these", "9": "We need to calculate the total amount to be paid by him after 4 years, so it will be Principal + simple interest.", "10": "=>500+500∗6∗4 /100=>Rs.620", "11": "Option C", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['At 6% per annum simple interest, Rahul borrowed Rs.', '500.']\nquestion = 'What amount will he pay to clear the debt after 4 years'\nchoices = {'A': '750', 'B': '700', 'C': '620', 'D': '600', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What amount will he pay to clear the debt after 4 years']\nnew_fact = infer_new_fact(selected) # 'We need to calculate the total amount to be paid by him after 4 years, so it will be Principal + simple interest.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At 6% per annum simple interest, Rahul borrowed Rs.', '500.', 'What amount will he pay to clear the debt after 4 years']\nnew_fact = infer_new_fact(selected) # '=>500+500∗6∗4 /100=>Rs.620'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What amount will he pay to clear the debt after 4 years', 'C)620', '=>500+500∗6∗4 /100=>Rs.620']\nnew_fact = infer_new_fact(selected) # 'Option C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Option C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_27_b4358d9423", "context": "", "question": "A computer routine was developed to generate two numbers (x,y) the first being a random number between 0 and 100 inclusive, and the second being less than or equal to the square root of the first. Each of the following pair satisfies the routine except", "options": ["A)(99,10)", "B)(85,9)", "C)(50,7)", "D)(1,1)", "E)(1,0)"], "rationale": "99 is generated\nWe don't know what the square root of 99 is because we would need a calculator, but we know the square root of 100 is 10, so the square root of 99 has to be less than 10.\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "A computer routine was developed to generate two numbers (x,y) the first being a random number between 0 and 100 inclusive,", "2": "and the second being less than or equal to the square root of the first.", "3": "Each of the following pair satisfies the routine except", "4": "A)(99,10)", "5": "B)(85,9)", "6": "C)(50,7)", "7": "D)(1,1)", "8": "E)(1,0)", "9": "99 is generated", "10": "We don't know what the square root of 99 is because we would need a calculator, but we know the square root of 100 is 10, so the square root of 99 has to be less than 10.", "11": "ANSWER:A", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 9}, {"antecedents": [1, 2, 4], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'A computer routine was developed to generate two numbers (x,y) the first being a random number between 0 and 100 inclusive,',\n  'and the second being less than or equal to the square root of the first.']\nquestion = 'Each of the following pair satisfies the routine except'\nchoices = {'A': '(99,10)', 'B': '(85,9)', 'C': '(50,7)', 'D': '(1,1)', 'E': '(1,0)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A computer routine was developed to generate two numbers (x,y) the first being a random number between 0 and 100 inclusive,', 'A)(99,10)']\nnew_fact = infer_new_fact(selected) # '99 is generated'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A computer routine was developed to generate two numbers (x,y) the first being a random number between 0 and 100 inclusive,', 'and the second being less than or equal to the square root of the first.', 'A)(99,10)']\nnew_fact = infer_new_fact(selected) # \"We don't know what the square root of 99 is because we would need a calculator, but we know the square root of 100 is 10, so the square root of 99 has to be less than 10.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Each of the following pair satisfies the routine except', 'A)(99,10)', \"We don't know what the square root of 99 is because we would need a calculator, but we know the square root of 100 is 10, so the square root of 99 has to be less than 10.\"]\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_28_210a95d646", "context": "", "question": "A jeep travels a certain distance taking 6 hours in the forward journey. During the return journey, it increased its speed by 12km/hr and took 4 hours. What is the distance travelled by the jeep?", "options": ["A)126km", "B)144km", "C)127km", "D)228km", "E)128km"], "rationale": "Let 'x' be the distance and 'y' be the speed of the forward journey. Then, we have 6v=d and 4(v+12)=d\n=> v=d/6 and v=d/4 - 12\n=> d/6 = d/4 - 12\n=> d/12 = 12\n=> d=144\nAnswer: B", "answer": "B", "textual_logical_units": {"1": "A jeep travels a certain distance taking 6 hours in the forward journey.", "2": "During the return journey, it increased its speed by 12km/hr and took 4 hours.", "3": "What is the distance travelled by the jeep?", "4": "A)126km", "5": "B)144km", "6": "C)127km", "7": "D)228km", "8": "E)128km", "9": "Let 'x' be the distance and 'y' be the speed of the forward journey. Then, we have 6v=d and 4(v+12)=d", "10": "=> v=d/6 and v=d/4 - 12", "11": "=> d/6 = d/4 - 12", "12": "=> d/12 = 12", "13": "=> d=144", "14": "Answer: B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A jeep travels a certain distance taking 6 hours in the forward journey.', 'During the return journey, it increased its speed by 12km/hr and took 4 hours.']\nquestion = 'What is the distance travelled by the jeep?'\nchoices = {'A': '126km', 'B': '144km', 'C': '127km', 'D': '228km', 'E': '128km'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A jeep travels a certain distance taking 6 hours in the forward journey.', 'During the return journey, it increased its speed by 12km/hr and took 4 hours.']\nnew_fact = infer_new_fact(selected) # \"Let 'x' be the distance and 'y' be the speed of the forward journey. Then, we have 6v=d and 4(v+12)=d\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance travelled by the jeep?', \"Let 'x' be the distance and 'y' be the speed of the forward journey. Then, we have 6v=d and 4(v+12)=d\"]\nnew_fact = infer_new_fact(selected) # '=> v=d/6 and v=d/4 - 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> v=d/6 and v=d/4 - 12']\nnew_fact = infer_new_fact(selected) # '=> d/6 = d/4 - 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> d/6 = d/4 - 12']\nnew_fact = infer_new_fact(selected) # '=> d/12 = 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> d/12 = 12']\nnew_fact = infer_new_fact(selected) # '=> d=144'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance travelled by the jeep?', 'B)144km', '=> d=144']\nnew_fact = infer_new_fact(selected) # 'Answer: B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_29_dee79bf008", "context": "", "question": "When I was 2 years old, my brother was half my age. Now I am 60 years old, how old is my brother?", "options": ["A)A)59", "B)B)69", "C)C)79", "D)D)89", "E)E)99"], "rationale": "Half of 2 is 1. =>2+58=60-> 1+58=59\nAnswer A", "answer": "A", "textual_logical_units": {"1": "When I was 2 years old,", "2": "my brother was half my age.", "3": "Now I am 60 years old,", "4": "how old is my brother?", "5": "A)A)59", "6": "B)B)69", "7": "C)C)79", "8": "D)D)89", "9": "E)E)99", "10": "Half of 2 is 1. =>2+58=60-> 1+58=59", "11": "Answer A", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['When I was 2 years old,', 'my brother was half my age.', 'Now I am 60 years old,']\nquestion = 'how old is my brother?'\nchoices = {'A': 'A)59', 'B': 'B)69', 'C': 'C)79', 'D': 'D)89', 'E': 'E)99'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['When I was 2 years old,', 'my brother was half my age.', 'Now I am 60 years old,', 'how old is my brother?']\nnew_fact = infer_new_fact(selected) # 'Half of 2 is 1. =>2+58=60-> 1+58=59'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how old is my brother?', 'Half of 2 is 1. =>2+58=60-> 1+58=59']\nnew_fact = infer_new_fact(selected) # 'Answer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_30_cd02a80751", "context": "", "question": "The original retail price of an appliance was 60 percent more than its wholesale cost. If the appliance was actually sold for 20 percent less than the original retail price, then it was sold for what percent more than its wholesale cost?", "options": ["A)20%", "B)28%", "C)36%", "D)40%", "E)42%"], "rationale": "wholesale cost = 100;\noriginal price = 100*1.6 = 160;\nactual price = 160*0.8 = 128.\nAnswer: B.", "answer": "B", "textual_logical_units": {"1": "The original retail price of an appliance was 60 percent more than its wholesale cost.", "2": "If the appliance was actually sold for 20 percent less than the original retail price,", "3": "then it was sold for what percent more than its wholesale cost?", "4": "A)20%", "5": "B)28%", "6": "C)36%", "7": "D)40%", "8": "E)42%", "9": "wholesale cost = 100;", "10": "original price = 100*1.6 = 160;", "11": "actual price = 160*0.8 = 128.", "12": "Answer: B.", "13": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'The original retail price of an appliance was 60 percent more than its wholesale cost.',\n  'If the appliance was actually sold for 20 percent less than the original retail price,']\nquestion = 'then it was sold for what percent more than its wholesale cost?'\nchoices = {'A': '20%', 'B': '28%', 'C': '36%', 'D': '40%', 'E': '42%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'wholesale cost = 100;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The original retail price of an appliance was 60 percent more than its wholesale cost.', 'wholesale cost = 100;']\nnew_fact = infer_new_fact(selected) # 'original price = 100*1.6 = 160;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the appliance was actually sold for 20 percent less than the original retail price,', 'then it was sold for what percent more than its wholesale cost?', 'original price = 100*1.6 = 160;']\nnew_fact = infer_new_fact(selected) # 'actual price = 160*0.8 = 128.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then it was sold for what percent more than its wholesale cost?', 'B)28%', 'actual price = 160*0.8 = 128.']\nnew_fact = infer_new_fact(selected) # 'Answer: B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_31_a97ee01399", "context": "", "question": "On a map, the length of the road from Town F to Town G is measured to be 20 inches. On this map, 1/4 inch represents an actual distance of 10 miles. What is the actual distance, in miles, from Town F to Town G along this road?", "options": ["A)800", "B)720", "C)960", "D)1140", "E)1160"], "rationale": "Here we are given a ratio: 1/4 inch on the map = 10 miles, so 1 inch on the map = 40 miles. If the map-distance between the towns is 20 inches, then the actual distance must be 20 x 40 = 800\nAnswer: A.", "answer": "A", "textual_logical_units": {"1": "On a map, the length of the road from Town F to Town G is measured to be 20 inches.", "2": "On this map, 1/4 inch represents an actual distance of 10 miles.", "3": "What is the actual distance, in miles,", "4": "from Town F to Town G along this road?", "5": "A)800", "6": "B)720", "7": "C)960", "8": "D)1140", "9": "E)1160", "10": "Here we are given a ratio: 1/4 inch on the map = 10 miles, so 1 inch on the map = 40 miles. If the map-distance between the towns is 20 inches, then the actual distance must be 20 x 40 = 800", "11": "Answer: A.", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'On a map, the length of the road from Town F to Town G is measured to be 20 inches.',\n  'On this map, 1/4 inch represents an actual distance of 10 miles.',\n  'What is the actual distance, in miles,']\nquestion = 'from Town F to Town G along this road?'\nchoices = {'A': '800', 'B': '720', 'C': '960', 'D': '1140', 'E': '1160'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['On a map, the length of the road from Town F to Town G is measured to be 20 inches.', 'On this map, 1/4 inch represents an actual distance of 10 miles.', 'What is the actual distance, in miles,', 'from Town F to Town G along this road?']\nnew_fact = infer_new_fact(selected) # 'Here we are given a ratio: 1/4 inch on the map = 10 miles, so 1 inch on the map = 40 miles. If the map-distance between the towns is 20 inches, then the actual distance must be 20 x 40 = 800'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the actual distance, in miles,', 'from Town F to Town G along this road?', 'Here we are given a ratio: 1/4 inch on the map = 10 miles, so 1 inch on the map = 40 miles. If the map-distance between the towns is 20 inches, then the actual distance must be 20 x 40 = 800']\nnew_fact = infer_new_fact(selected) # 'Answer: A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_32_7d1086ac2b", "context": "", "question": "When folded into two equal halves a rectangular sheet had a perimeter of 48cm for each part folded along one set of sides and the same is 66cm when folded along the other set of sides. Find the area of the sheet.", "options": ["A)1584", "B)1120", "C)792", "D)1320", "E)1200"], "rationale": "Let the sheet be folded along its breadth and its perimeter = 48cm\nTherefore, (l/2 + b) = 48 ... (i)\nNow, let the sheet be folded along its length, and the perimeter = 66cm\n(l + b/2)= 66 …... (ii)\nSolving (i) and (ii), we get,\nl = 56cm, b = 20cm\nArea = l*b\nArea = 1120 cm2\nANSWER IS B", "answer": "B", "textual_logical_units": {"1": "When folded into two equal halves a rectangular sheet had a perimeter of 48cm for each part folded along one set of sides and", "2": "the same is 66cm when folded along the other set of sides.", "3": "Find the area of the sheet.", "4": "A)1584", "5": "B)1120", "6": "C)792", "7": "D)1320", "8": "E)1200", "9": "Let the sheet be folded along its breadth and its perimeter = 48cm", "10": "Therefore, (l/2 + b) = 48 ... (i)", "11": "Now, let the sheet be folded along its length, and the perimeter = 66cm", "12": "(l + b/2)= 66 …... (ii)", "13": "Solving (i) and (ii), we get,", "14": "l = 56cm, b = 20cm", "15": "Area = l*b", "16": "Area = 1120 cm2", "17": "ANSWER IS B", "18": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [3, 14, 15], "consequent": 16}, {"antecedents": [3, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'When folded into two equal halves a rectangular sheet had a perimeter of 48cm for each part folded along one set of sides and',\n  'the same is 66cm when folded along the other set of sides.']\nquestion = 'Find the area of the sheet.'\nchoices = {'A': '1584', 'B': '1120', 'C': '792', 'D': '1320', 'E': '1200'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['When folded into two equal halves a rectangular sheet had a perimeter of 48cm for each part folded along one set of sides and']\nnew_fact = infer_new_fact(selected) # 'Let the sheet be folded along its breadth and its perimeter = 48cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['When folded into two equal halves a rectangular sheet had a perimeter of 48cm for each part folded along one set of sides and', 'the same is 66cm when folded along the other set of sides.', 'Find the area of the sheet.', 'Let the sheet be folded along its breadth and its perimeter = 48cm']\nnew_fact = infer_new_fact(selected) # 'Therefore, (l/2 + b) = 48 ... (i)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the same is 66cm when folded along the other set of sides.']\nnew_fact = infer_new_fact(selected) # 'Now, let the sheet be folded along its length, and the perimeter = 66cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, (l/2 + b) = 48 ... (i)', 'Now, let the sheet be folded along its length, and the perimeter = 66cm']\nnew_fact = infer_new_fact(selected) # '(l + b/2)= 66 …... (ii)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, (l/2 + b) = 48 ... (i)', '(l + b/2)= 66 …... (ii)']\nnew_fact = infer_new_fact(selected) # 'Solving (i) and (ii), we get,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, (l/2 + b) = 48 ... (i)', '(l + b/2)= 66 …... (ii)', 'Solving (i) and (ii), we get,']\nnew_fact = infer_new_fact(selected) # 'l = 56cm, b = 20cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the area of the sheet.', 'l = 56cm, b = 20cm']\nnew_fact = infer_new_fact(selected) # 'Area = l*b'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the area of the sheet.', 'l = 56cm, b = 20cm', 'Area = l*b']\nnew_fact = infer_new_fact(selected) # 'Area = 1120 cm2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the area of the sheet.', 'Area = 1120 cm2']\nnew_fact = infer_new_fact(selected) # 'ANSWER IS B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER IS B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_33_42a583f37d", "context": "", "question": "Suppose you can travel from a place M to a place N by 3 buses, from place N to place O by 4 buses, from place O to place P by 1 buses and from place P to place Q by 3 buses. In how many ways can you travel from M to Q ?", "options": ["A)24", "B)36", "C)72", "D)84", "E)None"], "rationale": "The bus from M to N can be selected in 3 ways. The bus from N to O can be selected in 4 ways. The bus from O to P can be selected in 1 way. The bus from P to Q can be selected in 3 ways. So, by the General Counting Principle, one can travel from M to Q in 3*4*1*3= 36 ways\nAnswer B", "answer": "B", "textual_logical_units": {"1": "Suppose you can travel from a place M to a place N by 3 buses,", "2": "from place N to place O by 4 buses,", "3": "from place O to place P by 1 buses and", "4": "from place P to place Q by 3 buses.", "5": "In how many ways can you travel from M to Q ?", "6": "A)24", "7": "B)36", "8": "C)72", "9": "D)84", "10": "E)None", "11": "The bus from M to N can be selected in 3 ways. The bus from N to O can be selected in 4 ways. The bus from O to P can be selected in 1 way. The bus from P to Q can be selected in 3 ways. So, by the General Counting Principle, one can travel from M to Q in 3*4*1*3= 36 ways", "12": "Answer B", "13": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'Suppose you can travel from a place M to a place N by 3 buses,',\n  'from place N to place O by 4 buses,',\n  'from place O to place P by 1 buses and',\n  'from place P to place Q by 3 buses.']\nquestion = 'In how many ways can you travel from M to Q ?'\nchoices = {'A': '24', 'B': '36', 'C': '72', 'D': '84', 'E': 'None'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Suppose you can travel from a place M to a place N by 3 buses,', 'from place N to place O by 4 buses,', 'from place O to place P by 1 buses and', 'from place P to place Q by 3 buses.', 'In how many ways can you travel from M to Q ?']\nnew_fact = infer_new_fact(selected) # 'The bus from M to N can be selected in 3 ways. The bus from N to O can be selected in 4 ways. The bus from O to P can be selected in 1 way. The bus from P to Q can be selected in 3 ways. So, by the General Counting Principle, one can travel from M to Q in 3*4*1*3= 36 ways'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can you travel from M to Q ?', 'The bus from M to N can be selected in 3 ways. The bus from N to O can be selected in 4 ways. The bus from O to P can be selected in 1 way. The bus from P to Q can be selected in 3 ways. So, by the General Counting Principle, one can travel from M to Q in 3*4*1*3= 36 ways']\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_34_a7e1c3952b", "context": "", "question": "A rectangular solid, 3 x 4 x 15, is inscribed in a sphere, so that all eight of its vertices are on the sphere. What is the diameter of the sphere?", "options": ["A) 13.3542", "B) 15.8113", "C) 18.3451", "D) 19.5667", "E) 20.8888"], "rationale": "In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.\nAccording to the Pythagoras theorem, sides 3, 4 give diagonal as 5 ==> with 5 and 15, we get 5sqrt(10).\n5sqrt(10) or 15.8113 is the diameter of the sphere.\nanswer = B", "answer": "B", "textual_logical_units": {"1": "A rectangular solid, 3 x 4 x 15,", "2": "is inscribed in a sphere,", "3": "so that all eight of its vertices are on the sphere.", "4": "What is the diameter of the sphere?", "5": "A) 13.3542", "6": "B) 15.8113", "7": "C) 18.3451", "8": "D) 19.5667", "9": "E) 20.8888", "10": "In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.", "11": "According to the Pythagoras theorem, sides 3, 4 give diagonal as 5 ==> with 5 and 15, we get 5sqrt(10).", "12": "5sqrt(10) or 15.8113 is the diameter of the sphere.", "13": "answer = B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['A rectangular solid, 3 x 4 x 15,', 'is inscribed in a sphere,', 'so that all eight of its vertices are on the sphere.']\nquestion = 'What is the diameter of the sphere?'\nchoices = {'A': '13.3542', 'B': '15.8113', 'C': '18.3451', 'D': '19.5667', 'E': '20.8888'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A rectangular solid, 3 x 4 x 15,', 'is inscribed in a sphere,', 'so that all eight of its vertices are on the sphere.']\nnew_fact = infer_new_fact(selected) # 'In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular solid, 3 x 4 x 15,', 'In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.']\nnew_fact = infer_new_fact(selected) # 'According to the Pythagoras theorem, sides 3, 4 give diagonal as 5 ==> with 5 and 15, we get 5sqrt(10).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the diameter of the sphere?', 'In an inscribed rectangle in a sphere, we will have a line joining the opposite vertices as the diameter.', 'According to the Pythagoras theorem, sides 3, 4 give diagonal as 5 ==> with 5 and 15, we get 5sqrt(10).']\nnew_fact = infer_new_fact(selected) # '5sqrt(10) or 15.8113 is the diameter of the sphere.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the diameter of the sphere?', '5sqrt(10) or 15.8113 is the diameter of the sphere.']\nnew_fact = infer_new_fact(selected) # 'answer = B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['answer = B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_35_19ac2e818a", "context": "", "question": "A starts travel towards south 3km, then travel 5 km towards east, and again travels 3 km to north, and finally travels 2km towards west. In the end how far from is A from home?", "options": ["A)3km", "B)2km", "C)4km", "D)5km", "E)6km"], "rationale": "3s,5e,3n,2w\n5-2=3e\n3-3=0\n3km\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "A starts travel towards south 3km,", "2": "then travel 5 km towards east,", "3": "and again travels 3 km to north,", "4": "and finally travels 2km towards west.", "5": "In the end how far from is A from home?", "6": "A)3km", "7": "B)2km", "8": "C)4km", "9": "D)5km", "10": "E)6km", "11": "3s,5e,3n,2w", "12": "5-2=3e", "13": "3-3=0", "14": "ANSWER:A", "15": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 11}, {"antecedents": [2, 4, 11], "consequent": 12}, {"antecedents": [1, 3, 12], "consequent": 13}, {"antecedents": [5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A starts travel towards south 3km,', 'then travel 5 km towards east,', 'and again travels 3 km to north,', 'and finally travels 2km towards west.']\nquestion = 'In the end how far from is A from home?'\nchoices = {'A': '3km', 'B': '2km', 'C': '4km', 'D': '5km', 'E': '6km'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A starts travel towards south 3km,', 'then travel 5 km towards east,', 'and again travels 3 km to north,', 'and finally travels 2km towards west.']\nnew_fact = infer_new_fact(selected) # '3s,5e,3n,2w'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then travel 5 km towards east,', 'and finally travels 2km towards west.', '3s,5e,3n,2w']\nnew_fact = infer_new_fact(selected) # '5-2=3e'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A starts travel towards south 3km,', 'and again travels 3 km to north,', '5-2=3e']\nnew_fact = infer_new_fact(selected) # '3-3=0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In the end how far from is A from home?', '3-3=0']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_36_c791abbc16", "context": "", "question": "While selling a watch, a shopkeeper gives a discount of 5%. If he gives a discount of 7%, he earns Rs. 15 less as profit. The marked price of the watch is:", "options": ["A)Rs. 697.50", "B)Rs. 712.50", "C)Rs. 787.50", "D)Rs. 750", "E)Rs. 780"], "rationale": "If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.\n.02x = 15\nx = 750 marked price\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "While selling a watch, a shopkeeper gives a discount of 5%.", "2": "If he gives a discount of 7%, he earns Rs.", "3": "15 less as profit.", "4": "The marked price of the watch is:", "5": "A)Rs. 697.50", "6": "B)Rs. 712.50", "7": "C)Rs. 787.50", "8": "D)Rs. 750", "9": "E)Rs. 780", "10": "If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.", "11": ".02x = 15", "12": "x = 750 marked price", "13": "ANSWER:D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['While selling a watch, a shopkeeper gives a discount of 5%.', 'If he gives a discount of 7%, he earns Rs.', '15 less as profit.']\nquestion = 'The marked price of the watch is:'\nchoices = {'A': 'Rs. 697.50', 'B': 'Rs. 712.50', 'C': 'Rs. 787.50', 'D': 'Rs. 750', 'E': 'Rs. 780'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['While selling a watch, a shopkeeper gives a discount of 5%.', 'If he gives a discount of 7%, he earns Rs.', '15 less as profit.', 'The marked price of the watch is:']\nnew_fact = infer_new_fact(selected) # 'If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.']\nnew_fact = infer_new_fact(selected) # '.02x = 15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The marked price of the watch is:', 'If he increases the discount by 2%, then his profit is 15 less. Let the marked price be X.', '.02x = 15']\nnew_fact = infer_new_fact(selected) # 'x = 750 marked price'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The marked price of the watch is:', 'x = 750 marked price']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_37_0010181b68", "context": "", "question": "A student instead of finding the value of 7/8 of a number, found the value of 7/18 of the number. If his answer differed from the actual one by 770, find the that number.", "options": ["A)1584", "B)2520", "C)1728", "D)1656", "E)None"], "rationale": "According to the question,\n=> [7/8 - 7/18 ]x = 770\n=> 7*10*x /18*8 = 770\n=> x = 11*18*8\n=> 1584.\nAnswer : A", "answer": "A", "textual_logical_units": {"1": "A student instead of finding the value of 7/8 of a number,", "2": "found the value of 7/18 of the number.", "3": "If his answer differed from the actual one by 770, find the that number.", "4": "A)1584", "5": "B)2520", "6": "C)1728", "7": "D)1656", "8": "E)None", "9": "According to the question,", "10": "=> [7/8 - 7/18 ]x = 770", "11": "=> 7*10*x /18*8 = 770", "12": "=> x = 11*18*8", "13": "=> 1584.", "14": "Answer : A", "15": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [3, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A student instead of finding the value of 7/8 of a number,', 'found the value of 7/18 of the number.']\nquestion = 'If his answer differed from the actual one by 770, find the that number.'\nchoices = {'A': '1584', 'B': '2520', 'C': '1728', 'D': '1656', 'E': 'None'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'According to the question,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A student instead of finding the value of 7/8 of a number,', 'found the value of 7/18 of the number.', 'If his answer differed from the actual one by 770, find the that number.']\nnew_fact = infer_new_fact(selected) # '=> [7/8 - 7/18 ]x = 770'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> [7/8 - 7/18 ]x = 770']\nnew_fact = infer_new_fact(selected) # '=> 7*10*x /18*8 = 770'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 7*10*x /18*8 = 770']\nnew_fact = infer_new_fact(selected) # '=> x = 11*18*8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If his answer differed from the actual one by 770, find the that number.', '=> x = 11*18*8']\nnew_fact = infer_new_fact(selected) # '=> 1584.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If his answer differed from the actual one by 770, find the that number.', 'A)1584', '=> 1584.']\nnew_fact = infer_new_fact(selected) # 'Answer : A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_38_66d49d0db4", "context": "", "question": "The monthly salary S of a shop assistant is the sum of a fixed salary of $500 plus 5% of all monthly sales. What should the monthly sales be so that her monthly salary reaches $1500?", "options": ["A)$50000", "B)$40000", "C)$30000", "D)$20000", "E)None of these"], "rationale": "Let S be the total monthly salary and x be the monthly sales, hence\nS = 500 + 5% * x\nFind sales x so that S = 1500, hence\n1500 = 500 + 5% * x = 500 + 0.05 x\nSolve for x\nx = (1500 - 500) / 0.05 = $20000\nAnswer D", "answer": "D", "textual_logical_units": {"1": "The monthly salary S of a shop assistant is the sum of a fixed salary of $500 plus 5% of all monthly sales.", "2": "What should the monthly sales be so that her monthly salary reaches $1500?", "3": "A)$50000", "4": "B)$40000", "5": "C)$30000", "6": "D)$20000", "7": "E)None of these", "8": "Let S be the total monthly salary and x be the monthly sales, hence", "9": "S = 500 + 5% * x", "10": "Find sales x so that S = 1500, hence", "11": "1500 = 500 + 5% * x = 500 + 0.05 x", "12": "Solve for x", "13": "x = (1500 - 500) / 0.05 = $20000", "14": "Answer D", "15": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [2, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [6, 11, 12], "consequent": 13}, {"antecedents": [2, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['The monthly salary S of a shop assistant is the sum of a fixed salary of $500 plus 5% of all monthly sales.']\nquestion = 'What should the monthly sales be so that her monthly salary reaches $1500?'\nchoices = {'A': '$50000', 'B': '$40000', 'C': '$30000', 'D': '$20000', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The monthly salary S of a shop assistant is the sum of a fixed salary of $500 plus 5% of all monthly sales.']\nnew_fact = infer_new_fact(selected) # 'Let S be the total monthly salary and x be the monthly sales, hence'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The monthly salary S of a shop assistant is the sum of a fixed salary of $500 plus 5% of all monthly sales.', 'What should the monthly sales be so that her monthly salary reaches $1500?', 'Let S be the total monthly salary and x be the monthly sales, hence']\nnew_fact = infer_new_fact(selected) # 'S = 500 + 5% * x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let S be the total monthly salary and x be the monthly sales, hence', 'S = 500 + 5% * x']\nnew_fact = infer_new_fact(selected) # 'Find sales x so that S = 1500, hence'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What should the monthly sales be so that her monthly salary reaches $1500?', 'S = 500 + 5% * x', 'Find sales x so that S = 1500, hence']\nnew_fact = infer_new_fact(selected) # '1500 = 500 + 5% * x = 500 + 0.05 x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1500 = 500 + 5% * x = 500 + 0.05 x']\nnew_fact = infer_new_fact(selected) # 'Solve for x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D)$20000', '1500 = 500 + 5% * x = 500 + 0.05 x', 'Solve for x']\nnew_fact = infer_new_fact(selected) # 'x = (1500 - 500) / 0.05 = $20000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What should the monthly sales be so that her monthly salary reaches $1500?', 'x = (1500 - 500) / 0.05 = $20000']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_39_0704c77c00", "context": "", "question": "An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr. Find the average speed of the plane around the field?", "options": ["A)384", "B)562", "C)458", "D)156", "E)452"], "rationale": "Let the each side of the square is x km\naverage speed of plane is y km/hr\n(x/200)+(x/400)+(x/600)+(x/800) = 4x/y\n25x/2400 = 4x/y\ny= 384 km/hr\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr.", "2": "Find the average speed of the plane around the field?", "3": "A)384", "4": "B)562", "5": "C)458", "6": "D)156", "7": "E)452", "8": "Let the each side of the square is x km", "9": "average speed of plane is y km/hr", "10": "(x/200)+(x/400)+(x/600)+(x/800) = 4x/y", "11": "25x/2400 = 4x/y", "12": "y= 384 km/hr", "13": "Answer is A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr.']\nquestion = 'Find the average speed of the plane around the field?'\nchoices = {'A': '384', 'B': '562', 'C': '458', 'D': '156', 'E': '452'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr.']\nnew_fact = infer_new_fact(selected) # 'Let the each side of the square is x km'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr.']\nnew_fact = infer_new_fact(selected) # 'average speed of plane is y km/hr'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['An aeroplane flies along the four sides of a square at the speeds of 200, 400, 600 and 800km/hr.', 'Let the each side of the square is x km', 'average speed of plane is y km/hr']\nnew_fact = infer_new_fact(selected) # '(x/200)+(x/400)+(x/600)+(x/800) = 4x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(x/200)+(x/400)+(x/600)+(x/800) = 4x/y']\nnew_fact = infer_new_fact(selected) # '25x/2400 = 4x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A)384', '25x/2400 = 4x/y']\nnew_fact = infer_new_fact(selected) # 'y= 384 km/hr'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the average speed of the plane around the field?', 'y= 384 km/hr']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_40_801f21ad8b", "context": "", "question": "Jack buys 18 sharpeners (white and brown) for rs. 100. If he pays 1 rupee more for each white than brown sharpeners. How many of white and how many brown sharpeners did he buy?", "options": ["A)10,8", "B)9,8", "C)7,8", "D)5,6", "E)11,12"], "rationale": "Total cost=100\nnumber of sharp=18\ncost of white=cost of brown+1\n100/18=5.5...-(1)\nalso 100%18=10...-(2)\nas cost of white is 1 more than that of brown\nfrom 1 int. value will be 5\nnow remainder is 10 so 10 sharp. will be of cost (5+1)\n=> 10*(5+1)+8*5\n=>10*6+8*5\n=60+40\n100\nwhite=10\nbrown=8\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "Jack buys 18 sharpeners (white and brown) for rs.", "2": "100.", "3": "If he pays 1 rupee more for each white than brown sharpeners.", "4": "How many of white and", "5": "how many brown sharpeners did he buy?", "6": "A)10,8", "7": "B)9,8", "8": "C)7,8", "9": "D)5,6", "10": "E)11,12", "11": "Total cost=100", "12": "number of sharp=18", "13": "cost of white=cost of brown+1", "14": "100/18=5.5...-(1)", "15": "also 100%18=10...-(2)", "16": "as cost of white is 1 more than that of brown", "17": "from 1 int. value will be 5", "18": "now remainder is 10 so 10 sharp. will be of cost (5+1)", "19": "=> 10*(5+1)+8*5", "20": "=>10*6+8*5", "21": "=60+40", "22": "white=10", "23": "brown=8", "24": "ANSWER:A", "25": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [3], "consequent": 13}, {"antecedents": [1, 2, 3], "consequent": 14}, {"antecedents": [1, 2, 3, 14], "consequent": 15}, {"antecedents": [3], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [3, 15, 16, 17], "consequent": 18}, {"antecedents": [14, 15, 16, 17, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}, {"antecedents": [20], "consequent": 21}, {"antecedents": [4, 15], "consequent": 22}, {"antecedents": [5, 14], "consequent": 23}, {"antecedents": [5, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}], "metadata": [], "code_input": "####\nfacts = ['Jack buys 18 sharpeners (white and brown) for rs.', '100.', 'If he pays 1 rupee more for each white than brown sharpeners.', 'How many of white and']\nquestion = 'how many brown sharpeners did he buy?'\nchoices = {'A': '10,8', 'B': '9,8', 'C': '7,8', 'D': '5,6', 'E': '11,12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Jack buys 18 sharpeners (white and brown) for rs.', '100.']\nnew_fact = infer_new_fact(selected) # 'Total cost=100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Jack buys 18 sharpeners (white and brown) for rs.']\nnew_fact = infer_new_fact(selected) # 'number of sharp=18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If he pays 1 rupee more for each white than brown sharpeners.']\nnew_fact = infer_new_fact(selected) # 'cost of white=cost of brown+1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Jack buys 18 sharpeners (white and brown) for rs.', '100.', 'If he pays 1 rupee more for each white than brown sharpeners.']\nnew_fact = infer_new_fact(selected) # '100/18=5.5...-(1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Jack buys 18 sharpeners (white and brown) for rs.', '100.', 'If he pays 1 rupee more for each white than brown sharpeners.', '100/18=5.5...-(1)']\nnew_fact = infer_new_fact(selected) # 'also 100%18=10...-(2)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If he pays 1 rupee more for each white than brown sharpeners.']\nnew_fact = infer_new_fact(selected) # 'as cost of white is 1 more than that of brown'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100/18=5.5...-(1)', 'also 100%18=10...-(2)', 'as cost of white is 1 more than that of brown']\nnew_fact = infer_new_fact(selected) # 'from 1 int. value will be 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If he pays 1 rupee more for each white than brown sharpeners.', 'also 100%18=10...-(2)', 'as cost of white is 1 more than that of brown', 'from 1 int. value will be 5']\nnew_fact = infer_new_fact(selected) # 'now remainder is 10 so 10 sharp. will be of cost (5+1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100/18=5.5...-(1)', 'also 100%18=10...-(2)', 'as cost of white is 1 more than that of brown', 'from 1 int. value will be 5', 'now remainder is 10 so 10 sharp. will be of cost (5+1)']\nnew_fact = infer_new_fact(selected) # '=> 10*(5+1)+8*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 10*(5+1)+8*5']\nnew_fact = infer_new_fact(selected) # '=>10*6+8*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>10*6+8*5']\nnew_fact = infer_new_fact(selected) # '=60+40'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many of white and', 'also 100%18=10...-(2)']\nnew_fact = infer_new_fact(selected) # 'white=10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many brown sharpeners did he buy?', '100/18=5.5...-(1)']\nnew_fact = infer_new_fact(selected) # 'brown=8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many brown sharpeners did he buy?', 'white=10', 'brown=8']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_41_867f99627d", "context": "", "question": "Hoses A and B spout water at different constant rates, and hose A can fill a certain pool in 8 hours. Hose A filled the pool alone for the first 2 hours and the two hoses, working together, then finished filling the pool in another 3 hours. How many hours would it have taken hose B, working alone, to fill the entire pool?", "options": ["A)8", "B)15", "C)12", "D)6", "E)3"], "rationale": "Since hose A can fill the pool in 8 hours, then in 2 + 3 = 5 hours it will fill 5/8th of the pool. Thus the remaining 3/8th is filled by hose B in 3 hours. This means that hose B,working alone, to fill the entire pool will need 3*8/3 = 8 hours.\nAnswer: A.", "answer": "A", "textual_logical_units": {"1": "Hoses A and B spout water at different constant rates,", "2": "and hose A can fill a certain pool in 8 hours.", "3": "Hose A filled the pool alone for the first 2 hours and the two hoses, working together,", "4": "then finished filling the pool in another 3 hours.", "5": "How many hours would it have taken hose B, working alone,", "6": "to fill the entire pool?", "7": "A)8", "8": "B)15", "9": "C)12", "10": "D)6", "11": "E)3", "12": "Since hose A can fill the pool in 8 hours, then in 2 + 3 = 5 hours it will fill 5/8th of the pool. Thus the remaining 3/8th is filled by hose B in 3 hours. This means that hose B,working alone, to fill the entire pool will need 3*8/3 = 8 hours.", "13": "Answer: A.", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'Hoses A and B spout water at different constant rates,',\n  'and hose A can fill a certain pool in 8 hours.',\n  'Hose A filled the pool alone for the first 2 hours and the two hoses, working together,',\n  'then finished filling the pool in another 3 hours.',\n  'How many hours would it have taken hose B, working alone,']\nquestion = 'to fill the entire pool?'\nchoices = {'A': '8', 'B': '15', 'C': '12', 'D': '6', 'E': '3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Hoses A and B spout water at different constant rates,', 'and hose A can fill a certain pool in 8 hours.', 'Hose A filled the pool alone for the first 2 hours and the two hoses, working together,', 'then finished filling the pool in another 3 hours.', 'How many hours would it have taken hose B, working alone,', 'to fill the entire pool?']\nnew_fact = infer_new_fact(selected) # 'Since hose A can fill the pool in 8 hours, then in 2 + 3 = 5 hours it will fill 5/8th of the pool. Thus the remaining 3/8th is filled by hose B in 3 hours. This means that hose B,working alone, to fill the entire pool will need 3*8/3 = 8 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['to fill the entire pool?', 'Since hose A can fill the pool in 8 hours, then in 2 + 3 = 5 hours it will fill 5/8th of the pool. Thus the remaining 3/8th is filled by hose B in 3 hours. This means that hose B,working alone, to fill the entire pool will need 3*8/3 = 8 hours.']\nnew_fact = infer_new_fact(selected) # 'Answer: A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_42_cb64991099", "context": "", "question": "If 120 is reduced to 96, what is the reduction percent?", "options": ["A)30%", "B)40%", "C)20%", "D)10%", "E)5%"], "rationale": "reduction = 120 – 96 = 24\n∴ Reduction percent = (24/120)×100% =20%\nAnswer:C", "answer": "C", "textual_logical_units": {"1": "If 120 is reduced to 96,", "2": "what is the reduction percent?", "3": "A)30%", "4": "B)40%", "5": "C)20%", "6": "D)10%", "7": "E)5%", "8": "reduction = 120 – 96 = 24", "9": "∴ Reduction percent = (24/120)×100% =20%", "10": "Answer:C", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['If 120 is reduced to 96,']\nquestion = 'what is the reduction percent?'\nchoices = {'A': '30%', 'B': '40%', 'C': '20%', 'D': '10%', 'E': '5%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If 120 is reduced to 96,']\nnew_fact = infer_new_fact(selected) # 'reduction = 120 – 96 = 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 120 is reduced to 96,', 'what is the reduction percent?', 'reduction = 120 – 96 = 24']\nnew_fact = infer_new_fact(selected) # '∴ Reduction percent = (24/120)×100% =20%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the reduction percent?', '∴ Reduction percent = (24/120)×100% =20%']\nnew_fact = infer_new_fact(selected) # 'Answer:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_43_c7b0ea000b", "context": "", "question": "I know a 5 digit number having a property that with a 1 after it, it is three times as large as it would be with a 1 before it.\nWhat is that number?", "options": ["A)42857", "B)32456", "C)76523", "D)24567", "E)43566"], "rationale": "Let the number be x\n10x +1 = 3(100,000 + x)\n=> x = 42857.", "answer": "A", "textual_logical_units": {"1": "I know a 5 digit number having a property that with a 1 after it,", "2": "it is three times as large as it would be with a 1 before it.\nWhat is that number?", "3": "A)42857", "4": "B)32456", "5": "C)76523", "6": "D)24567", "7": "E)43566", "8": "Let the number be x", "9": "10x +1 = 3(100,000 + x)", "10": "=> x = 42857.", "11": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['I know a 5 digit number having a property that with a 1 after it,']\nquestion = 'it is three times as large as it would be with a 1 before it.\\nWhat is that number?'\nchoices = {'A': '42857', 'B': '32456', 'C': '76523', 'D': '24567', 'E': '43566'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['I know a 5 digit number having a property that with a 1 after it,', 'it is three times as large as it would be with a 1 before it.\\nWhat is that number?']\nnew_fact = infer_new_fact(selected) # 'Let the number be x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['I know a 5 digit number having a property that with a 1 after it,', 'it is three times as large as it would be with a 1 before it.\\nWhat is that number?', 'Let the number be x']\nnew_fact = infer_new_fact(selected) # '10x +1 = 3(100,000 + x)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10x +1 = 3(100,000 + x)']\nnew_fact = infer_new_fact(selected) # '=> x = 42857.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> x = 42857.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_44_93c5f8ea08", "context": "", "question": "At Daifu university, 24% of all students are members of both a chess club and a swim team. If 20% of members of the swim team are not members of the chess club, what percentage of all Daifu students are members of the swim team?", "options": ["A)20%", "B)30%", "C)40%", "D)50%", "E)60%"], "rationale": "Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:\n24+0.2S=S --> S=30.\nAnswer: B.", "answer": "B", "textual_logical_units": {"1": "At Daifu university, 24% of all students are members of both a chess club and a swim team.", "2": "If 20% of members of the swim team are not members of the chess club,", "3": "what percentage of all Daifu students are members of the swim team?", "4": "A)20%", "5": "B)30%", "6": "C)40%", "7": "D)50%", "8": "E)60%", "9": "Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:", "10": "24+0.2S=S --> S=30.", "11": "Answer: B.", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'At Daifu university, 24% of all students are members of both a chess club and a swim team.',\n  'If 20% of members of the swim team are not members of the chess club,']\nquestion = 'what percentage of all Daifu students are members of the swim team?'\nchoices = {'A': '20%', 'B': '30%', 'C': '40%', 'D': '50%', 'E': '60%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At Daifu university, 24% of all students are members of both a chess club and a swim team.', 'If 20% of members of the swim team are not members of the chess club,', 'what percentage of all Daifu students are members of the swim team?']\nnew_fact = infer_new_fact(selected) # 'Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:']\nnew_fact = infer_new_fact(selected) # '24+0.2S=S --> S=30.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what percentage of all Daifu students are members of the swim team?', 'Assume there are total of 100 students. 24 students are members of both clubs. We are told that:20% of members of the swim team are not members of the chess club, thus if S is a # of members of the swim team then 0.2S is # of members of only the swim teem:', '24+0.2S=S --> S=30.']\nnew_fact = infer_new_fact(selected) # 'Answer: B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_45_f82950ebff", "context": "", "question": "If the population of a city increases by 5 % annually, what will be the population of the city in 2 years time if its current population is 78000?", "options": ["A)81900", "B)85995", "C)85800", "D)90000", "E)None of these"], "rationale": "The % change in population of city in two years time is 1.05*1.05 = 1.1025 = 10.25%\nTherefore, after 2 years the population of the city will be 1.1025 * 78000 = 85995\nANSWER B", "answer": "B", "textual_logical_units": {"1": "If the population of a city increases by 5 % annually,", "2": "what will be the population of the city in 2 years time if its current population is 78000?", "3": "A)81900", "4": "B)85995", "5": "C)85800", "6": "D)90000", "7": "E)None of these", "8": "The % change in population of city in two years time is 1.05*1.05 = 1.1025 = 10.25%", "9": "Therefore, after 2 years the population of the city will be 1.1025 * 78000 = 85995", "10": "ANSWER B", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['If the population of a city increases by 5 % annually,']\nquestion = 'what will be the population of the city in 2 years time if its current population is 78000?'\nchoices = {'A': '81900', 'B': '85995', 'C': '85800', 'D': '90000', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If the population of a city increases by 5 % annually,', 'what will be the population of the city in 2 years time if its current population is 78000?']\nnew_fact = infer_new_fact(selected) # 'The % change in population of city in two years time is 1.05*1.05 = 1.1025 = 10.25%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the population of a city increases by 5 % annually,', 'what will be the population of the city in 2 years time if its current population is 78000?', 'The % change in population of city in two years time is 1.05*1.05 = 1.1025 = 10.25%']\nnew_fact = infer_new_fact(selected) # 'Therefore, after 2 years the population of the city will be 1.1025 * 78000 = 85995'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the population of the city in 2 years time if its current population is 78000?', 'Therefore, after 2 years the population of the city will be 1.1025 * 78000 = 85995']\nnew_fact = infer_new_fact(selected) # 'ANSWER B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_46_31974df077", "context": "", "question": "Two cars start at the same time from opposite ends of a highway that is 50 miles long. One car is riding at 12 mph and the second car is riding at 13 mph. How long after they begin will they meet?", "options": ["A) 1", "B) 1.25", "C) 1.50", "D) 1.75", "E) 2"], "rationale": "Time they will meet = total distance/ relative speed= 50/12+13 = 50/25 = 2\nAnswer is E", "answer": "E", "textual_logical_units": {"1": "Two cars start at the same time from opposite ends of a highway that is 50 miles long.", "2": "One car is riding at 12 mph and", "3": "the second car is riding at 13 mph.", "4": "How long after they begin will they meet?", "5": "A) 1", "6": "B) 1.25", "7": "C) 1.50", "8": "D) 1.75", "9": "E) 2", "10": "Time they will meet = total distance/ relative speed= 50/12+13 = 50/25 = 2", "11": "Answer is E", "12": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'Two cars start at the same time from opposite ends of a highway that is 50 miles long.',\n  'One car is riding at 12 mph and',\n  'the second car is riding at 13 mph.']\nquestion = 'How long after they begin will they meet?'\nchoices = {'A': '1', 'B': '1.25', 'C': '1.50', 'D': '1.75', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Two cars start at the same time from opposite ends of a highway that is 50 miles long.', 'One car is riding at 12 mph and', 'the second car is riding at 13 mph.', 'How long after they begin will they meet?']\nnew_fact = infer_new_fact(selected) # 'Time they will meet = total distance/ relative speed= 50/12+13 = 50/25 = 2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How long after they begin will they meet?', 'Time they will meet = total distance/ relative speed= 50/12+13 = 50/25 = 2']\nnew_fact = infer_new_fact(selected) # 'Answer is E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_47_92b73539ff", "context": "", "question": "A shopkeeper employed a servant at a monthly salary of 1500. In addition to it, he agreed to pay him a commission of 15% on the monthly sale. How much sale in Rupees should the servant do if he wants his monthly income as 6000?", "options": ["A)30000", "B)415000", "C)31500", "D)50000", "E)None of these"], "rationale": "Servant’s commission amount\n= 6000 – 1500 = 4500\ni.e.,15% = 4500\nor,100% = 4500⁄15 × 100 = 30000\nAnswer A", "answer": "A", "textual_logical_units": {"1": "A shopkeeper employed a servant at a monthly salary of 1500.", "2": "In addition to it, he agreed to pay him a commission of 15% on the monthly sale.", "3": "How much sale in Rupees should the servant do if he wants his monthly income as 6000?", "4": "A)30000", "5": "B)415000", "6": "C)31500", "7": "D)50000", "8": "E)None of these", "9": "Servant’s commission amount", "10": "= 6000 – 1500 = 4500", "11": "i.e.,15% = 4500", "12": "or,100% = 4500⁄15 × 100 = 30000", "13": "Answer A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['A shopkeeper employed a servant at a monthly salary of 1500.', 'In addition to it, he agreed to pay him a commission of 15% on the monthly sale.']\nquestion = 'How much sale in Rupees should the servant do if he wants his monthly income as 6000?'\nchoices = {'A': '30000', 'B': '415000', 'C': '31500', 'D': '50000', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A shopkeeper employed a servant at a monthly salary of 1500.', 'In addition to it, he agreed to pay him a commission of 15% on the monthly sale.']\nnew_fact = infer_new_fact(selected) # 'Servant’s commission amount'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A shopkeeper employed a servant at a monthly salary of 1500.', 'In addition to it, he agreed to pay him a commission of 15% on the monthly sale.', 'How much sale in Rupees should the servant do if he wants his monthly income as 6000?']\nnew_fact = infer_new_fact(selected) # '= 6000 – 1500 = 4500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In addition to it, he agreed to pay him a commission of 15% on the monthly sale.', '= 6000 – 1500 = 4500']\nnew_fact = infer_new_fact(selected) # 'i.e.,15% = 4500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 6000 – 1500 = 4500', 'i.e.,15% = 4500']\nnew_fact = infer_new_fact(selected) # 'or,100% = 4500⁄15 × 100 = 30000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much sale in Rupees should the servant do if he wants his monthly income as 6000?', 'or,100% = 4500⁄15 × 100 = 30000']\nnew_fact = infer_new_fact(selected) # 'Answer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_48_f72fcdf393", "context": "", "question": "A man borrows Rs.360 If he pays it back in 12 monthly installments of Rs.31.50, what is his interest rate?", "options": ["A)1.5%", "B)4.5%", "C)10%", "D)5%", "E)12%"], "rationale": "Instead of paying monthly 360/12 = 30Rs, the man pays 31.50Rs. Therefore, the interest rate is 1.5/30 = 0.5/10 = 5/100 = 5%.\nAnswer D", "answer": "D", "textual_logical_units": {"1": "A man borrows Rs.360 If he pays it back in 12 monthly installments of Rs.31.50,", "2": "what is his interest rate?", "3": "A)1.5%", "4": "B)4.5%", "5": "C)10%", "6": "D)5%", "7": "E)12%", "8": "Instead of paying monthly 360/12 = 30Rs, the man pays 31.50Rs. Therefore, the interest rate is 1.5/30 = 0.5/10 = 5/100 = 5%.", "9": "Answer D", "10": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['A man borrows Rs.360 If he pays it back in 12 monthly installments of Rs.31.50,']\nquestion = 'what is his interest rate?'\nchoices = {'A': '1.5%', 'B': '4.5%', 'C': '10%', 'D': '5%', 'E': '12%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A man borrows Rs.360 If he pays it back in 12 monthly installments of Rs.31.50,', 'what is his interest rate?']\nnew_fact = infer_new_fact(selected) # 'Instead of paying monthly 360/12 = 30Rs, the man pays 31.50Rs. Therefore, the interest rate is 1.5/30 = 0.5/10 = 5/100 = 5%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is his interest rate?', 'Instead of paying monthly 360/12 = 30Rs, the man pays 31.50Rs. Therefore, the interest rate is 1.5/30 = 0.5/10 = 5/100 = 5%.']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_49_7f006157a5", "context": "", "question": "The price of a product is reduced by 30% . By what percentage should it be increased to make it 100%", "options": ["A)41.86%", "B)42.86%", "C)43.86%", "D)44.86%", "E)45.86%"], "rationale": "If initial price is Rs 100 and reduced price is Rs 70.\nThen, to make it 100 again, price should increase by 100*30/70= 300/7 % or 42.86% approx\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "The price of a product is reduced by 30% .", "2": "By what percentage should it be increased to make it 100%", "3": "A)41.86%", "4": "B)42.86%", "5": "C)43.86%", "6": "D)44.86%", "7": "E)45.86%", "8": "If initial price is Rs 100 and reduced price is Rs 70.", "9": "Then, to make it 100 again, price should increase by 100*30/70= 300/7 % or 42.86% approx", "10": "ANSWER:B", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['The price of a product is reduced by 30% .']\nquestion = 'By what percentage should it be increased to make it 100%'\nchoices = {'A': '41.86%', 'B': '42.86%', 'C': '43.86%', 'D': '44.86%', 'E': '45.86%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The price of a product is reduced by 30% .', 'By what percentage should it be increased to make it 100%']\nnew_fact = infer_new_fact(selected) # 'If initial price is Rs 100 and reduced price is Rs 70.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The price of a product is reduced by 30% .', 'By what percentage should it be increased to make it 100%', 'If initial price is Rs 100 and reduced price is Rs 70.']\nnew_fact = infer_new_fact(selected) # 'Then, to make it 100 again, price should increase by 100*30/70= 300/7 % or 42.86% approx'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['By what percentage should it be increased to make it 100%', 'Then, to make it 100 again, price should increase by 100*30/70= 300/7 % or 42.86% approx']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_50_39d1b4c764", "context": "", "question": "I have a money pouch containing Rs. 700. There are equal number of 25 paise coins, 50 paise coins and one rupee coins.\nHow many of each are there?", "options": ["A)453", "B)651", "C)400", "D)487", "E)286"], "rationale": "25 paise + 50 paise + 100 paise = 175 paise and Rs. 700 = 70,000 paise\n70,000/175 = 400", "answer": "C", "textual_logical_units": {"1": "I have a money pouch containing Rs.", "2": "700.", "3": "There are equal number of 25 paise coins, 50 paise coins and", "4": "one rupee coins.\nHow many of each are there?", "5": "A)453", "6": "B)651", "7": "C)400", "8": "D)487", "9": "E)286", "10": "25 paise + 50 paise + 100 paise = 175 paise and Rs. 700 = 70,000 paise", "11": "70,000/175 = 400", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['I have a money pouch containing Rs.', '700.', 'There are equal number of 25 paise coins, 50 paise coins and']\nquestion = 'one rupee coins.\\nHow many of each are there?'\nchoices = {'A': '453', 'B': '651', 'C': '400', 'D': '487', 'E': '286'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['I have a money pouch containing Rs.', '700.', 'There are equal number of 25 paise coins, 50 paise coins and', 'one rupee coins.\\nHow many of each are there?']\nnew_fact = infer_new_fact(selected) # '25 paise + 50 paise + 100 paise = 175 paise and Rs. 700 = 70,000 paise'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25 paise + 50 paise + 100 paise = 175 paise and Rs. 700 = 70,000 paise']\nnew_fact = infer_new_fact(selected) # '70,000/175 = 400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['70,000/175 = 400']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_51_d81ed899cc", "context": "", "question": "A man spends Rs. 3500 per month and saves 12 1/2% of his income. His monthly income is ?", "options": ["A)Rs. 4400", "B)Rs. 4270", "C)Rs. 4000", "D)Rs. 3937.50", "E)None of these"], "rationale": "87 1/2% of P = 3500\n⇒ {(175/2) x P} / 100 = 3500\n∵ P = (3500 x 2 x 100) / 175 = 4000\nCorrect Option: C", "answer": "C", "textual_logical_units": {"1": "A man spends Rs.", "2": "3500 per month and saves 12 1/2% of his income.", "3": "His monthly income is ?", "4": "A)Rs. 4400", "5": "B)Rs. 4270", "6": "C)Rs. 4000", "7": "D)Rs. 3937.50", "8": "E)None of these", "9": "87 1/2% of P = 3500", "10": "⇒ {(175/2) x P} / 100 = 3500", "11": "∵ P = (3500 x 2 x 100) / 175 = 4000", "12": "Correct Option: C", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['A man spends Rs.', '3500 per month and saves 12 1/2% of his income.']\nquestion = 'His monthly income is ?'\nchoices = {'A': 'Rs. 4400', 'B': 'Rs. 4270', 'C': 'Rs. 4000', 'D': 'Rs. 3937.50', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A man spends Rs.', '3500 per month and saves 12 1/2% of his income.', 'His monthly income is ?']\nnew_fact = infer_new_fact(selected) # '87 1/2% of P = 3500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['87 1/2% of P = 3500']\nnew_fact = infer_new_fact(selected) # '⇒ {(175/2) x P} / 100 = 3500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒ {(175/2) x P} / 100 = 3500']\nnew_fact = infer_new_fact(selected) # '∵ P = (3500 x 2 x 100) / 175 = 4000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['His monthly income is ?', '∵ P = (3500 x 2 x 100) / 175 = 4000']\nnew_fact = infer_new_fact(selected) # 'Correct Option: C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct Option: C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_52_72035b63e2", "context": "", "question": "Five dozen toys are packed in a box and 98 boxes are kept in a tempo. How many tempos can lift 29400 toys in one round ?", "options": ["A)4", "B)5", "C)7", "D)6", "E)8"], "rationale": "Five dozen = 5 x 12 = 60\n⇒ No of toys can be kept in 1 box = 60\n∴ No of toys can be kept in 98 boxes = 60 x 98 = 5880\n∴ 29400 toys can be lifted by = 29400 / 5880 = 5 tempos\nOption: B", "answer": "B", "textual_logical_units": {"1": "Five dozen toys are packed in a box and", "2": "98 boxes are kept in a tempo.", "3": "How many tempos can lift 29400 toys in one round ?", "4": "A)4", "5": "B)5", "6": "C)7", "7": "D)6", "8": "E)8", "9": "Five dozen = 5 x 12 = 60", "10": "⇒ No of toys can be kept in 1 box = 60", "11": "∴ No of toys can be kept in 98 boxes = 60 x 98 = 5880", "12": "∴ 29400 toys can be lifted by = 29400 / 5880 = 5 tempos", "13": "Option: B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Five dozen toys are packed in a box and', '98 boxes are kept in a tempo.']\nquestion = 'How many tempos can lift 29400 toys in one round ?'\nchoices = {'A': '4', 'B': '5', 'C': '7', 'D': '6', 'E': '8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Five dozen toys are packed in a box and']\nnew_fact = infer_new_fact(selected) # 'Five dozen = 5 x 12 = 60'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Five dozen toys are packed in a box and', 'Five dozen = 5 x 12 = 60']\nnew_fact = infer_new_fact(selected) # '⇒ No of toys can be kept in 1 box = 60'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['98 boxes are kept in a tempo.', '⇒ No of toys can be kept in 1 box = 60']\nnew_fact = infer_new_fact(selected) # '∴ No of toys can be kept in 98 boxes = 60 x 98 = 5880'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many tempos can lift 29400 toys in one round ?', '∴ No of toys can be kept in 98 boxes = 60 x 98 = 5880']\nnew_fact = infer_new_fact(selected) # '∴ 29400 toys can be lifted by = 29400 / 5880 = 5 tempos'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many tempos can lift 29400 toys in one round ?', '∴ 29400 toys can be lifted by = 29400 / 5880 = 5 tempos']\nnew_fact = infer_new_fact(selected) # 'Option: B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Option: B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_53_408d4e0231", "context": "", "question": "There are 10 oranges in a basket. Find the no. of ways in which 2 oranges are chosen from the basket?", "options": ["A)45", "B)90", "C)120", "D)150", "E)180"], "rationale": "Required number of ways = 10C2 = 10*9/2 = 45\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "There are 10 oranges in a basket.", "2": "Find the no.", "3": "of ways in which 2 oranges are chosen from the basket?", "4": "A)45", "5": "B)90", "6": "C)120", "7": "D)150", "8": "E)180", "9": "Required number of ways = 10C2 = 10*9/2 = 45", "10": "Answer is A", "11": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['There are 10 oranges in a basket.', 'Find the no.']\nquestion = 'of ways in which 2 oranges are chosen from the basket?'\nchoices = {'A': '45', 'B': '90', 'C': '120', 'D': '150', 'E': '180'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['There are 10 oranges in a basket.', 'Find the no.', 'of ways in which 2 oranges are chosen from the basket?']\nnew_fact = infer_new_fact(selected) # 'Required number of ways = 10C2 = 10*9/2 = 45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the no.', 'of ways in which 2 oranges are chosen from the basket?', 'Required number of ways = 10C2 = 10*9/2 = 45']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_54_202e547a97", "context": "", "question": "A company contracts to paint 3 houses. Mr.Brown can paint a house in 6 days while Mr.Black would take 8 days and Mr.Blue 12 days. After 8 days Mr.Brown goes on vacation and Mr. Black begins to work for a period of 6 days. How many days will it take Mr.Blue to complete the contract?", "options": ["A)7", "B)8", "C)10", "D)11", "E)12"], "rationale": "let x is amount of work to be done to paint one house.\nSo Brown's one day work is x/6, black's can do x/8 work in\none day and blue is x/12.\nTotal houses is 3, so tatal work to be done is 3x.\n3x= 8*(x/6) + 6*(x/8) + y*(x/12)\nfinally y = 11.\nblue will complete the remaining work in 11 days.\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "A company contracts to paint 3 houses.", "2": "Mr.Brown can paint a house in 6 days while Mr.Black would take 8 days and Mr.Blue 12 days.", "3": "After 8 days Mr.Brown goes on vacation and Mr.", "4": "Black begins to work for a period of 6 days.", "5": "How many days will it take Mr.Blue to complete the contract?", "6": "A)7", "7": "B)8", "8": "C)10", "9": "D)11", "10": "E)12", "11": "let x is amount of work to be done to paint one house.", "12": "So Brown's one day work is x/6, black's can do x/8 work in", "13": "one day and blue is x/12.", "14": "Total houses is 3, so tatal work to be done is 3x.", "15": "3x= 8*(x/6) + 6*(x/8) + y*(x/12)", "16": "finally y = 11.", "17": "blue will complete the remaining work in 11 days.", "18": "ANSWER:D", "19": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [2, 3, 4, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 11, 12], "consequent": 13}, {"antecedents": [1, 11], "consequent": 14}, {"antecedents": [11, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [5, 16, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "code_input": "####\nfacts = [ 'A company contracts to paint 3 houses.',\n  'Mr.Brown can paint a house in 6 days while Mr.Black would take 8 days and Mr.Blue 12 days.',\n  'After 8 days Mr.Brown goes on vacation and Mr.',\n  'Black begins to work for a period of 6 days.']\nquestion = 'How many days will it take Mr.Blue to complete the contract?'\nchoices = {'A': '7', 'B': '8', 'C': '10', 'D': '11', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A company contracts to paint 3 houses.']\nnew_fact = infer_new_fact(selected) # 'let x is amount of work to be done to paint one house.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Mr.Brown can paint a house in 6 days while Mr.Black would take 8 days and Mr.Blue 12 days.', 'After 8 days Mr.Brown goes on vacation and Mr.', 'Black begins to work for a period of 6 days.', 'let x is amount of work to be done to paint one house.']\nnew_fact = infer_new_fact(selected) # \"So Brown's one day work is x/6, black's can do x/8 work in\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Mr.Brown can paint a house in 6 days while Mr.Black would take 8 days and Mr.Blue 12 days.', 'After 8 days Mr.Brown goes on vacation and Mr.', 'Black begins to work for a period of 6 days.', 'let x is amount of work to be done to paint one house.', \"So Brown's one day work is x/6, black's can do x/8 work in\"]\nnew_fact = infer_new_fact(selected) # 'one day and blue is x/12.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A company contracts to paint 3 houses.', 'let x is amount of work to be done to paint one house.']\nnew_fact = infer_new_fact(selected) # 'Total houses is 3, so tatal work to be done is 3x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['let x is amount of work to be done to paint one house.', \"So Brown's one day work is x/6, black's can do x/8 work in\", 'one day and blue is x/12.', 'Total houses is 3, so tatal work to be done is 3x.']\nnew_fact = infer_new_fact(selected) # '3x= 8*(x/6) + 6*(x/8) + y*(x/12)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x= 8*(x/6) + 6*(x/8) + y*(x/12)']\nnew_fact = infer_new_fact(selected) # 'finally y = 11.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['finally y = 11.']\nnew_fact = infer_new_fact(selected) # 'blue will complete the remaining work in 11 days.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many days will it take Mr.Blue to complete the contract?', 'finally y = 11.', 'blue will complete the remaining work in 11 days.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_55_9be1fb5899", "context": "", "question": "Train A leaves a station every 16 minutes and Train B leaves every 17 minutes. If both trains just left the station simultaneously, how long until they do so again?", "options": ["A)272 minutes", "B)304 minutes", "C)190 minutes", "D)70 minutes", "E)35 minutes"], "rationale": "We have to find the LCM:\n17 is a prime number which means the LCM of 16 and 17 has to be 16*17=272\nCorrect answer is A.", "answer": "A", "textual_logical_units": {"1": "Train A leaves a station every 16 minutes and", "2": "Train B leaves every 17 minutes.", "3": "If both trains just left the station simultaneously,", "4": "how long until they do so again?", "5": "A)272 minutes", "6": "B)304 minutes", "7": "C)190 minutes", "8": "D)70 minutes", "9": "E)35 minutes", "10": "We have to find the LCM:", "11": "17 is a prime number which means the LCM of 16 and 17 has to be 16*17=272", "12": "Correct answer is A.", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Train A leaves a station every 16 minutes and', 'Train B leaves every 17 minutes.', 'If both trains just left the station simultaneously,']\nquestion = 'how long until they do so again?'\nchoices = {'A': '272 minutes', 'B': '304 minutes', 'C': '190 minutes', 'D': '70 minutes', 'E': '35 minutes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'We have to find the LCM:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Train A leaves a station every 16 minutes and', 'Train B leaves every 17 minutes.']\nnew_fact = infer_new_fact(selected) # '17 is a prime number which means the LCM of 16 and 17 has to be 16*17=272'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how long until they do so again?', '17 is a prime number which means the LCM of 16 and 17 has to be 16*17=272']\nnew_fact = infer_new_fact(selected) # 'Correct answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_56_065372bad1", "context": "", "question": "A hollow cube of size 5cm is taken, with the thickness of 1cm. It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?", "options": ["A)438", "B)550", "C)500", "D)450", "E)498"], "rationale": "Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3\nSize of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm\nVolume of hollow cube = 3*3*3 = 27 cm3\nSo Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube\n= 125 - 27\n= 98 cm3\nVolume of 1 small cube = 1*1*1 = 1 cm3\nTotal number of small cubes in the larger cube = 98 / 1 = 98\nand Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces\nTotal Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2\nSurface area of one face of small cube = 1*1 = 1cm2\nNumber of faces of small cube painted = 150/1 = 150 faces\nHence number of faces of the smaller cubes remain unpainted= 588-150\n= 438\nanswer.A", "answer": "A", "textual_logical_units": {"1": "A hollow cube of size 5cm is taken,", "2": "with the thickness of 1cm.", "3": "It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?", "4": "A)438", "5": "B)550", "6": "C)500", "7": "D)450", "8": "E)498", "9": "Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3", "10": "Size of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm", "11": "Volume of hollow cube = 3*3*3 = 27 cm3", "12": "So Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube", "13": "= 125 - 27", "14": "= 98 cm3", "15": "Volume of 1 small cube = 1*1*1 = 1 cm3", "16": "Total number of small cubes in the larger cube = 98 / 1 = 98", "17": "and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces", "18": "Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2", "19": "Surface area of one face of small cube = 1*1 = 1cm2", "20": "Number of faces of small cube painted = 150/1 = 150 faces", "21": "Hence number of faces of the smaller cubes remain unpainted= 588-150", "22": "= 438", "23": "answer.A", "24": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 2], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [3], "consequent": 15}, {"antecedents": [3, 14, 15], "consequent": 16}, {"antecedents": [14, 15, 16], "consequent": 17}, {"antecedents": [1], "consequent": 18}, {"antecedents": [2], "consequent": 19}, {"antecedents": [18, 19], "consequent": 20}, {"antecedents": [17, 18, 19, 20], "consequent": 21}, {"antecedents": [16, 17, 18, 20, 21], "consequent": 22}, {"antecedents": [3, 4, 9, 12, 16, 17, 18, 20, 21, 22], "consequent": 23}, {"antecedents": [23], "consequent": 24}], "metadata": [], "code_input": "####\nfacts = ['A hollow cube of size 5cm is taken,', 'with the thickness of 1cm.']\nquestion = 'It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?'\nchoices = {'A': '438', 'B': '550', 'C': '500', 'D': '450', 'E': '498'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A hollow cube of size 5cm is taken,']\nnew_fact = infer_new_fact(selected) # 'Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A hollow cube of size 5cm is taken,', 'with the thickness of 1cm.']\nnew_fact = infer_new_fact(selected) # 'Size of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Size of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm']\nnew_fact = infer_new_fact(selected) # 'Volume of hollow cube = 3*3*3 = 27 cm3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3', 'Size of hollow cube (considering 1 cm thickness on two faces of large cube = 5 - 2 = 3cm', 'Volume of hollow cube = 3*3*3 = 27 cm3']\nnew_fact = infer_new_fact(selected) # 'So Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube']\nnew_fact = infer_new_fact(selected) # '= 125 - 27'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 125 - 27']\nnew_fact = infer_new_fact(selected) # '= 98 cm3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?']\nnew_fact = infer_new_fact(selected) # 'Volume of 1 small cube = 1*1*1 = 1 cm3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?', '= 98 cm3', 'Volume of 1 small cube = 1*1*1 = 1 cm3']\nnew_fact = infer_new_fact(selected) # 'Total number of small cubes in the larger cube = 98 / 1 = 98'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 98 cm3', 'Volume of 1 small cube = 1*1*1 = 1 cm3', 'Total number of small cubes in the larger cube = 98 / 1 = 98']\nnew_fact = infer_new_fact(selected) # 'and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A hollow cube of size 5cm is taken,']\nnew_fact = infer_new_fact(selected) # 'Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['with the thickness of 1cm.']\nnew_fact = infer_new_fact(selected) # 'Surface area of one face of small cube = 1*1 = 1cm2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2', 'Surface area of one face of small cube = 1*1 = 1cm2']\nnew_fact = infer_new_fact(selected) # 'Number of faces of small cube painted = 150/1 = 150 faces'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces', 'Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2', 'Surface area of one face of small cube = 1*1 = 1cm2', 'Number of faces of small cube painted = 150/1 = 150 faces']\nnew_fact = infer_new_fact(selected) # 'Hence number of faces of the smaller cubes remain unpainted= 588-150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total number of small cubes in the larger cube = 98 / 1 = 98', 'and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces', 'Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2', 'Number of faces of small cube painted = 150/1 = 150 faces', 'Hence number of faces of the smaller cubes remain unpainted= 588-150']\nnew_fact = infer_new_fact(selected) # '= 438'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It is made of smaller cubes of size 1cm .If the outer surface of the cube is painted how many faces of the smaller cubes remain unpainted?', 'A)438', 'Volume of Big Cube considering it is not hollow = L3 = 5*5*5 = 125 cm3', 'So Total Volume filled up by smaller cubes = Volume of Larger Cube - Volume of hollow cube', 'Total number of small cubes in the larger cube = 98 / 1 = 98', 'and Number of faces of 98 small cubes (6 faces each cube has) = 98*6 = 588 faces', 'Total Surface area of 6 faces of larger cube painted = 6*L2 = 6*5*5 = 150cm2', 'Number of faces of small cube painted = 150/1 = 150 faces', 'Hence number of faces of the smaller cubes remain unpainted= 588-150', '= 438']\nnew_fact = infer_new_fact(selected) # 'answer.A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['answer.A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_57_b946bedacd", "context": "", "question": "In a chocolate store, all chocolates are either vanilla or cocoa flavored only. 10% of the chocolates are cocoa flavored, 90% of the rest are squashed. What percentage of the chocolates are both vanilla flavored and not squashed?", "options": ["A)1%", "B)2%", "C)5%", "D)9%", "E)10%"], "rationale": "If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.\n90% of 90% are squashed, i.e. 81% are squashed.\nVanilla flavored and non squashed= 90-81= 9%\nD is the answer", "answer": "D", "textual_logical_units": {"1": "In a chocolate store, all chocolates are either vanilla or cocoa flavored only.", "2": "10% of the chocolates are cocoa flavored,", "3": "90% of the rest are squashed.", "4": "What percentage of the chocolates are both vanilla flavored and not squashed?", "5": "A)1%", "6": "B)2%", "7": "C)5%", "8": "D)9%", "9": "E)10%", "10": "If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.", "11": "90% of 90% are squashed, i.e. 81% are squashed.", "12": "Vanilla flavored and non squashed= 90-81= 9%", "13": "D is the answer", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 8, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'In a chocolate store, all chocolates are either vanilla or cocoa flavored only.',\n  '10% of the chocolates are cocoa flavored,',\n  '90% of the rest are squashed.']\nquestion = 'What percentage of the chocolates are both vanilla flavored and not squashed?'\nchoices = {'A': '1%', 'B': '2%', 'C': '5%', 'D': '9%', 'E': '10%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a chocolate store, all chocolates are either vanilla or cocoa flavored only.', '10% of the chocolates are cocoa flavored,']\nnew_fact = infer_new_fact(selected) # 'If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['90% of the rest are squashed.', 'If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.']\nnew_fact = infer_new_fact(selected) # '90% of 90% are squashed, i.e. 81% are squashed.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What percentage of the chocolates are both vanilla flavored and not squashed?', 'If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.', '90% of 90% are squashed, i.e. 81% are squashed.']\nnew_fact = infer_new_fact(selected) # 'Vanilla flavored and non squashed= 90-81= 9%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What percentage of the chocolates are both vanilla flavored and not squashed?', 'D)9%', 'If 10% of chocolates are cocoa flavored, then 90% are vanilla flavored.', '90% of 90% are squashed, i.e. 81% are squashed.', 'Vanilla flavored and non squashed= 90-81= 9%']\nnew_fact = infer_new_fact(selected) # 'D is the answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D is the answer']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_58_e95d3ac20b", "context": "", "question": "There is well of depth 30m and frog is at bottom of the well. He jumps 3m up one day and falls back 2m down the same day. How many days will it take for the frog to come out of the well?", "options": ["A)25 days", "B)26 days", "C)27 days", "D)28 days", "E)29 days"], "rationale": "frog jumps 3 m up day & falls back 2 m down at night\nso,frog will be 3-2=1 m up in a day.\nThus, in 27 days it will be 27 m up\non 28 th day it will be at top i.e 27+3 = 30 m & will not fall down.\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "There is well of depth 30m and", "2": "frog is at bottom of the well.", "3": "He jumps 3m up one day and", "4": "falls back 2m down the same day.", "5": "How many days will it take for the frog to come out of the well?", "6": "A)25 days", "7": "B)26 days", "8": "C)27 days", "9": "D)28 days", "10": "E)29 days", "11": "frog jumps 3 m up day & falls back 2 m down at night", "12": "so,frog will be 3-2=1 m up in a day.", "13": "Thus, in 27 days it will be 27 m up", "14": "on 28 th day it will be at top i.e 27+3 = 30 m & will not fall down.", "15": "ANSWER:D", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [5, 9, 11, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['There is well of depth 30m and', 'frog is at bottom of the well.', 'He jumps 3m up one day and', 'falls back 2m down the same day.']\nquestion = 'How many days will it take for the frog to come out of the well?'\nchoices = {'A': '25 days', 'B': '26 days', 'C': '27 days', 'D': '28 days', 'E': '29 days'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['He jumps 3m up one day and', 'falls back 2m down the same day.']\nnew_fact = infer_new_fact(selected) # 'frog jumps 3 m up day & falls back 2 m down at night'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He jumps 3m up one day and', 'falls back 2m down the same day.', 'frog jumps 3 m up day & falls back 2 m down at night']\nnew_fact = infer_new_fact(selected) # 'so,frog will be 3-2=1 m up in a day.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['frog jumps 3 m up day & falls back 2 m down at night', 'so,frog will be 3-2=1 m up in a day.']\nnew_fact = infer_new_fact(selected) # 'Thus, in 27 days it will be 27 m up'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['frog jumps 3 m up day & falls back 2 m down at night', 'so,frog will be 3-2=1 m up in a day.', 'Thus, in 27 days it will be 27 m up']\nnew_fact = infer_new_fact(selected) # 'on 28 th day it will be at top i.e 27+3 = 30 m & will not fall down.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many days will it take for the frog to come out of the well?', 'D)28 days', 'frog jumps 3 m up day & falls back 2 m down at night', 'Thus, in 27 days it will be 27 m up', 'on 28 th day it will be at top i.e 27+3 = 30 m & will not fall down.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_59_f79174751b", "context": "", "question": "The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square, which of the following can be one of these 5 numbers?", "options": ["A)47", "B)91", "C)41", "D)67", "E)44"], "rationale": "perfect square:- 1,4,9,16,25,36\nsum=square*10=10,40,90,160,250,360\nsum of 4 odd consecutive numbers is multiple of 4\nso the only number left are 40,160,360\nsum/4=40/4=10 is not possible\nsum/4=360/4=90 is not possible\nsum/4=160/4=40 is the only option available i.e 41\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,", "2": "which of the following can be one of these 5 numbers?", "3": "A)47", "4": "B)91", "5": "C)41", "6": "D)67", "7": "E)44", "8": "perfect square:- 1,4,9,16,25,36", "9": "sum=square*10=10,40,90,160,250,360", "10": "sum of 4 odd consecutive numbers is multiple of 4", "11": "so the only number left are 40,160,360", "12": "sum/4=40/4=10 is not possible", "13": "sum/4=360/4=90 is not possible", "14": "sum/4=160/4=40 is the only option available i.e 41", "15": "ANSWER:C", "16": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [2, 9, 11], "consequent": 12}, {"antecedents": [2, 9, 11], "consequent": 13}, {"antecedents": [2, 9, 11], "consequent": 14}, {"antecedents": [1, 2, 5, 9, 11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,']\nquestion = 'which of the following can be one of these 5 numbers?'\nchoices = {'A': '47', 'B': '91', 'C': '41', 'D': '67', 'E': '44'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,']\nnew_fact = infer_new_fact(selected) # 'perfect square:- 1,4,9,16,25,36'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,', 'perfect square:- 1,4,9,16,25,36']\nnew_fact = infer_new_fact(selected) # 'sum=square*10=10,40,90,160,250,360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,', 'perfect square:- 1,4,9,16,25,36', 'sum=square*10=10,40,90,160,250,360']\nnew_fact = infer_new_fact(selected) # 'sum of 4 odd consecutive numbers is multiple of 4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['perfect square:- 1,4,9,16,25,36', 'sum=square*10=10,40,90,160,250,360', 'sum of 4 odd consecutive numbers is multiple of 4']\nnew_fact = infer_new_fact(selected) # 'so the only number left are 40,160,360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which of the following can be one of these 5 numbers?', 'sum=square*10=10,40,90,160,250,360', 'so the only number left are 40,160,360']\nnew_fact = infer_new_fact(selected) # 'sum/4=40/4=10 is not possible'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which of the following can be one of these 5 numbers?', 'sum=square*10=10,40,90,160,250,360', 'so the only number left are 40,160,360']\nnew_fact = infer_new_fact(selected) # 'sum/4=360/4=90 is not possible'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which of the following can be one of these 5 numbers?', 'sum=square*10=10,40,90,160,250,360', 'so the only number left are 40,160,360']\nnew_fact = infer_new_fact(selected) # 'sum/4=160/4=40 is the only option available i.e 41'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of the 5 consecutive two digit odd numbers when divided by 10 becomes a perfect square,', 'which of the following can be one of these 5 numbers?', 'C)41', 'sum=square*10=10,40,90,160,250,360', 'so the only number left are 40,160,360', 'sum/4=160/4=40 is the only option available i.e 41']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_60_62e480d22b", "context": "", "question": "In a class, 8% of total students are interested in Football. 4/5 of total students are interested in Cricket. 10% of total students are interested in Basketball and remaining 20 students are not interested in any games. How many students are there in the class?", "options": ["A)850", "B)800", "C)900", "D)950", "E)1000"], "rationale": "Let x is total no. of students\n8x/100+4x/5+10x/100+20=x\nBy solving this\nx=1000\nANSWER:E", "answer": "E", "textual_logical_units": {"1": "In a class, 8% of total students are interested in Football.", "2": "4/5 of total students are interested in Cricket.", "3": "10% of total students are interested in Basketball and", "4": "remaining 20 students are not interested in any games.", "5": "How many students are there in the class?", "6": "A)850", "7": "B)800", "8": "C)900", "9": "D)950", "10": "E)1000", "11": "Let x is total no. of students", "12": "8x/100+4x/5+10x/100+20=x", "13": "By solving this", "14": "x=1000", "15": "ANSWER:E", "16": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [12], "consequent": 14}, {"antecedents": [5, 10, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'In a class, 8% of total students are interested in Football.',\n  '4/5 of total students are interested in Cricket.',\n  '10% of total students are interested in Basketball and',\n  'remaining 20 students are not interested in any games.']\nquestion = 'How many students are there in the class?'\nchoices = {'A': '850', 'B': '800', 'C': '900', 'D': '950', 'E': '1000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a class, 8% of total students are interested in Football.']\nnew_fact = infer_new_fact(selected) # 'Let x is total no. of students'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a class, 8% of total students are interested in Football.', '4/5 of total students are interested in Cricket.', '10% of total students are interested in Basketball and', 'remaining 20 students are not interested in any games.', 'How many students are there in the class?', 'A)850']\nnew_fact = infer_new_fact(selected) # '8x/100+4x/5+10x/100+20=x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'By solving this'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8x/100+4x/5+10x/100+20=x']\nnew_fact = infer_new_fact(selected) # 'x=1000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many students are there in the class?', 'E)1000', '8x/100+4x/5+10x/100+20=x', 'x=1000']\nnew_fact = infer_new_fact(selected) # 'ANSWER:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_61_d4a00a0c42", "context": "", "question": "Q is as much younger than R as he is older than T. If the sum of the ages of R and T is 50 years. What is definitely the difference between R and Q's age?", "options": ["A)22", "B)27", "C)29", "D)Cannot be determined", "E)None of the above"], "rationale": "R - Q = R - T\nQ = T.\nAlso R + T = 50; R + Q = 50\nSo, (R - Q) cannot be determined.\nAnswer:D", "answer": "D", "textual_logical_units": {"1": "Q is as much younger than R as he is older than T.", "2": "If the sum of the ages of R and T is 50 years.", "3": "What is definitely the difference between R and Q's age?", "4": "A)22", "5": "B)27", "6": "C)29", "7": "D)Cannot be determined", "8": "E)None of the above", "9": "R - Q = R - T", "10": "Q = T.", "11": "Also R + T = 50; R + Q = 50", "12": "So, (R - Q) cannot be determined.", "13": "Answer:D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 9, 10], "consequent": 11}, {"antecedents": [3, 9, 10, 11], "consequent": 12}, {"antecedents": [3, 7, 9, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Q is as much younger than R as he is older than T.', 'If the sum of the ages of R and T is 50 years.']\nquestion = \"What is definitely the difference between R and Q's age?\"\nchoices = {'A': '22', 'B': '27', 'C': '29', 'D': 'Cannot be determined', 'E': 'None of the above'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Q is as much younger than R as he is older than T.']\nnew_fact = infer_new_fact(selected) # 'R - Q = R - T'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R - Q = R - T']\nnew_fact = infer_new_fact(selected) # 'Q = T.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the sum of the ages of R and T is 50 years.', 'R - Q = R - T', 'Q = T.']\nnew_fact = infer_new_fact(selected) # 'Also R + T = 50; R + Q = 50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"What is definitely the difference between R and Q's age?\", 'R - Q = R - T', 'Q = T.', 'Also R + T = 50; R + Q = 50']\nnew_fact = infer_new_fact(selected) # 'So, (R - Q) cannot be determined.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"What is definitely the difference between R and Q's age?\", 'D)Cannot be determined', 'R - Q = R - T', 'Also R + T = 50; R + Q = 50', 'So, (R - Q) cannot be determined.']\nnew_fact = infer_new_fact(selected) # 'Answer:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_62_c7e94f926f", "context": "", "question": "Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and 10 cents for each additional quarter mile.", "options": ["A)11.75 miles", "B)12.75 miles", "C)17.75 miles", "D)14.75 miles", "E)10.75 miles"], "rationale": "Subtract the fee for te first quarter mile $8.50 - $3.50 = $5\nCalculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles\nTotal distance is 12.5 miles + 1/4 (first quarter mile)\n12.75 miles\nAnswer: B", "answer": "B", "textual_logical_units": {"1": "Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and", "2": "10 cents for each additional quarter mile.", "3": "A)11.75 miles", "4": "B)12.75 miles", "5": "C)17.75 miles", "6": "D)14.75 miles", "7": "E)10.75 miles", "8": "Subtract the fee for te first quarter mile $8.50 - $3.50 = $5", "9": "Calculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles", "10": "Total distance is 12.5 miles + 1/4 (first quarter mile)", "11": "12.75 miles", "12": "Answer: B", "13": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 2, 4, 9, 10], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and']\nquestion = '10 cents for each additional quarter mile.'\nchoices = {'A': '11.75 miles', 'B': '12.75 miles', 'C': '17.75 miles', 'D': '14.75 miles', 'E': '10.75 miles'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and']\nnew_fact = infer_new_fact(selected) # 'Subtract the fee for te first quarter mile $8.50 - $3.50 = $5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and', '10 cents for each additional quarter mile.']\nnew_fact = infer_new_fact(selected) # 'Calculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Subtract the fee for te first quarter mile $8.50 - $3.50 = $5', 'Calculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles']\nnew_fact = infer_new_fact(selected) # 'Total distance is 12.5 miles + 1/4 (first quarter mile)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total distance is 12.5 miles + 1/4 (first quarter mile)']\nnew_fact = infer_new_fact(selected) # '12.75 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Calculate the maximum distance you can travel with $8.50 on a cab which charges $3.50 for the first quarter-mile and', '10 cents for each additional quarter mile.', 'B)12.75 miles', 'Calculate how many extra additional quarter miles---$5/10 cents => 50 quarter miles => 12.5 miles', 'Total distance is 12.5 miles + 1/4 (first quarter mile)']\nnew_fact = infer_new_fact(selected) # 'Answer: B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_63_051a2064eb", "context": "", "question": "In IPL season, Sachin current batting average is 51. In the finals, he scores 78 runs, then is batting average will be 54. Find out the total number of matches played by Sachin in this season.", "options": ["A)6", "B)8", "C)9", "D)10", "E)11"], "rationale": "Let total number of matches = x\nthen, total runs 54*x\ntotal runs before final = 51*(x-1)\nruns in the final match\n54*x - 51*(x-1) = 78\nx= 9\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "In IPL season, Sachin current batting average is 51.", "2": "In the finals, he scores 78 runs,", "3": "then is batting average will be 54.", "4": "Find out the total number of matches played by Sachin in this season.", "5": "A)6", "6": "B)8", "7": "C)9", "8": "D)10", "9": "E)11", "10": "Let total number of matches = x", "11": "then, total runs 54*x", "12": "total runs before final = 51*(x-1)", "13": "runs in the final match", "14": "54*x - 51*(x-1) = 78", "15": "x= 9", "16": "ANSWER:C", "17": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [1, 10], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [2, 3, 10, 11, 12], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 7, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['In IPL season, Sachin current batting average is 51.', 'In the finals, he scores 78 runs,', 'then is batting average will be 54.']\nquestion = 'Find out the total number of matches played by Sachin in this season.'\nchoices = {'A': '6', 'B': '8', 'C': '9', 'D': '10', 'E': '11'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Find out the total number of matches played by Sachin in this season.']\nnew_fact = infer_new_fact(selected) # 'Let total number of matches = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then is batting average will be 54.', 'Let total number of matches = x']\nnew_fact = infer_new_fact(selected) # 'then, total runs 54*x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In IPL season, Sachin current batting average is 51.', 'Let total number of matches = x']\nnew_fact = infer_new_fact(selected) # 'total runs before final = 51*(x-1)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'runs in the final match'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In the finals, he scores 78 runs,', 'then is batting average will be 54.', 'Let total number of matches = x', 'then, total runs 54*x', 'total runs before final = 51*(x-1)']\nnew_fact = infer_new_fact(selected) # '54*x - 51*(x-1) = 78'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['54*x - 51*(x-1) = 78']\nnew_fact = infer_new_fact(selected) # 'x= 9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find out the total number of matches played by Sachin in this season.', 'C)9', 'then, total runs 54*x', 'total runs before final = 51*(x-1)', 'runs in the final match', '54*x - 51*(x-1) = 78', 'x= 9']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_64_4f418b3ca7", "context": "", "question": "Amy is organizing her bookshelves and finds that she has 10 different types of books. She then codes each book with either a single letter or a pair of two different letters. If each type of book is uniquely represented by either a single letter or pair of letters, what is the smallest number of letters Amy will need to create the codes for all 10 types of books? (Assume the order of letters in a pair does not matter.)", "options": ["A)3", "B)4", "C)5", "D)10", "E)20"], "rationale": "The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).\nAt this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.\nLooking at the answer choices, you can eliminate 10 and 20, so you can quickly narrow down the values you need to test. (i.e. (10 – n) suggests n can not be less than 10.)\nAs a general rule, whenever you're asked for the smallest value that satisfies a condition, start by testing the smallest number in the answers. Conversely, if you're asked for the largest value, start with the greatest answer.\nPlug-in n=4 to (n + nC2) = (4 + 4C2) = 4 + (4x3 /2) = (4 + 6) = 10 ANS:D", "answer": "D", "textual_logical_units": {"1": "Amy is organizing her bookshelves and", "2": "finds that she has 10 different types of books.", "3": "She then codes each book with either a single letter or a pair of two different letters.", "4": "If each type of book is uniquely represented by either a single letter or pair of letters,", "5": "what is the smallest number of letters Amy will need to create the codes for all 10 types of books?", "6": "(Assume the order of letters in a pair does not matter.)", "7": "A)3", "8": "B)4", "9": "C)5", "10": "D)10", "11": "E)20", "12": "The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).", "13": "At this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.", "14": "Looking at the answer choices, you can eliminate 10 and 20, so you can quickly narrow down the values you need to test. (i.e. (10 – n) suggests n can not be less than 10.)", "15": "As a general rule, whenever you're asked for the smallest value that satisfies a condition, start by testing the smallest number in the answers. Conversely, if you're asked for the largest value, start with the greatest answer.", "16": "Plug-in n=4 to (n + nC2) = (4 + 4C2) = 4 + (4x3 /2) = (4 + 6) = 10 ANS:D", "17": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 5], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [5, 8, 12, 13, 14], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'Amy is organizing her bookshelves and',\n  'finds that she has 10 different types of books.',\n  'She then codes each book with either a single letter or a pair of two different letters.',\n  'If each type of book is uniquely represented by either a single letter or pair of letters,',\n  'what is the smallest number of letters Amy will need to create the codes for all 10 types of books?']\nquestion = '(Assume the order of letters in a pair does not matter.)'\nchoices = {'A': '3', 'B': '4', 'C': '5', 'D': '10', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Amy is organizing her bookshelves and', 'finds that she has 10 different types of books.', 'She then codes each book with either a single letter or a pair of two different letters.', 'what is the smallest number of letters Amy will need to create the codes for all 10 types of books?']\nnew_fact = infer_new_fact(selected) # 'The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).']\nnew_fact = infer_new_fact(selected) # \"At this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).', \"At this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.\"]\nnew_fact = infer_new_fact(selected) # 'Looking at the answer choices, you can eliminate 10 and 20, so you can quickly narrow down the values you need to test. (i.e. (10 – n) suggests n can not be less than 10.)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # \"As a general rule, whenever you're asked for the smallest value that satisfies a condition, start by testing the smallest number in the answers. Conversely, if you're asked for the largest value, start with the greatest answer.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the smallest number of letters Amy will need to create the codes for all 10 types of books?', 'B)4', 'The question asks for the smallest value of n, such that (n + nC2) = 10 (n represents the number of letters. In this equation, n by itself is for single-letter codes and nC2 is for two-letter codes).', \"At this point, you'd need to pick numbers, since there's really no easy way to solve nC2 = (10 – n) without a calculator.\", 'Looking at the answer choices, you can eliminate 10 and 20, so you can quickly narrow down the values you need to test. (i.e. (10 – n) suggests n can not be less than 10.)']\nnew_fact = infer_new_fact(selected) # 'Plug-in n=4 to (n + nC2) = (4 + 4C2) = 4 + (4x3 /2) = (4 + 6) = 10 ANS:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Plug-in n=4 to (n + nC2) = (4 + 4C2) = 4 + (4x3 /2) = (4 + 6) = 10 ANS:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_65_5cd4d77293", "context": "", "question": "A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth. What is the perimeter of the piece?", "options": ["A)60 m", "B)61 m", "C)62 m", "D)63 m", "E)64 m"], "rationale": "Let its breadth be = x m.\nSo length will be = (4x+1) m.\nNow,\nx * (4x+1) = 150\nor, 4x^2+x-150 = 0\nor, (4x+25)(x-6) = 0\nEither 4x = -25 or x = 6\nAs breadth can not take negetive value so x = 6\nSo its length is 4*6+1 = 25\nSo perimeter will be 2*(25+6)=62 mLet its breadth be = x m.\nSo length will be = (4x+1) m.\nNow,\nx * (4x+1) = 150\nor, 4x^2+x-150 = 0\nor, (4x+25)(x-6) = 0\nEither 4x = -25 or x = 6\nAs breadth can not take negetive value so x = 6\nSo its length is 4*6+1 = 25\nSo perimeter will be 2*(25+6)=62 m\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.", "2": "What is the perimeter of the piece?", "3": "A)60 m", "4": "B)61 m", "5": "C)62 m", "6": "D)63 m", "7": "E)64 m", "8": "Let its breadth be = x m.", "9": "So length will be = (4x+1) m.", "10": "Now,", "11": "x * (4x+1) = 150", "12": "or, 4x^2+x-150 = 0", "13": "or, (4x+25)(x-6) = 0", "14": "Either 4x = -25 or x = 6", "15": "As breadth can not take negetive value so x = 6", "16": "So its length is 4*6+1 = 25", "17": "So perimeter will be 2*(25+6)=62 mLet its breadth be = x m.", "18": "So length will be = (4x+1) m.", "19": "Now,", "20": "x * (4x+1) = 150", "21": "or, 4x^2+x-150 = 0", "22": "or, (4x+25)(x-6) = 0", "23": "Either 4x = -25 or x = 6", "24": "As breadth can not take negetive value so x = 6", "25": "So its length is 4*6+1 = 25", "26": "So perimeter will be 2*(25+6)=62 m", "27": "ANSWER:C", "28": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [1, 8, 9], "consequent": 11}, {"antecedents": [1, 8, 9, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [1, 9, 11, 14], "consequent": 15}, {"antecedents": [1, 9, 11, 14, 15], "consequent": 16}, {"antecedents": [2, 9, 11, 13, 14, 15, 16], "consequent": 17}, {"antecedents": [1, 8], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [1, 18], "consequent": 20}, {"antecedents": [1, 2, 18, 20], "consequent": 21}, {"antecedents": [1, 2, 18, 20, 21], "consequent": 22}, {"antecedents": [21, 22], "consequent": 23}, {"antecedents": [1, 2, 18, 20, 21, 23], "consequent": 24}, {"antecedents": [1, 2, 18, 20, 21, 23, 24], "consequent": 25}, {"antecedents": [1, 2, 18, 22, 23, 24, 25], "consequent": 26}, {"antecedents": [1, 24, 25, 26], "consequent": 27}, {"antecedents": [27], "consequent": 28}], "metadata": [], "code_input": "####\nfacts = ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.']\nquestion = 'What is the perimeter of the piece?'\nchoices = {'A': '60 m', 'B': '61 m', 'C': '62 m', 'D': '63 m', 'E': '64 m'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.']\nnew_fact = infer_new_fact(selected) # 'Let its breadth be = x m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'Let its breadth be = x m.']\nnew_fact = infer_new_fact(selected) # 'So length will be = (4x+1) m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Now,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'Let its breadth be = x m.', 'So length will be = (4x+1) m.']\nnew_fact = infer_new_fact(selected) # 'x * (4x+1) = 150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'Let its breadth be = x m.', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150']\nnew_fact = infer_new_fact(selected) # 'or, 4x^2+x-150 = 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['or, 4x^2+x-150 = 0']\nnew_fact = infer_new_fact(selected) # 'or, (4x+25)(x-6) = 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['or, (4x+25)(x-6) = 0']\nnew_fact = infer_new_fact(selected) # 'Either 4x = -25 or x = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'Either 4x = -25 or x = 6']\nnew_fact = infer_new_fact(selected) # 'As breadth can not take negetive value so x = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'Either 4x = -25 or x = 6', 'As breadth can not take negetive value so x = 6']\nnew_fact = infer_new_fact(selected) # 'So its length is 4*6+1 = 25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'or, (4x+25)(x-6) = 0', 'Either 4x = -25 or x = 6', 'As breadth can not take negetive value so x = 6', 'So its length is 4*6+1 = 25']\nnew_fact = infer_new_fact(selected) # 'So perimeter will be 2*(25+6)=62 mLet its breadth be = x m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'Let its breadth be = x m.']\nnew_fact = infer_new_fact(selected) # 'So length will be = (4x+1) m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Now,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'So length will be = (4x+1) m.']\nnew_fact = infer_new_fact(selected) # 'x * (4x+1) = 150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150']\nnew_fact = infer_new_fact(selected) # 'or, 4x^2+x-150 = 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'or, 4x^2+x-150 = 0']\nnew_fact = infer_new_fact(selected) # 'or, (4x+25)(x-6) = 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['or, 4x^2+x-150 = 0', 'or, (4x+25)(x-6) = 0']\nnew_fact = infer_new_fact(selected) # 'Either 4x = -25 or x = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'or, 4x^2+x-150 = 0', 'Either 4x = -25 or x = 6']\nnew_fact = infer_new_fact(selected) # 'As breadth can not take negetive value so x = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'x * (4x+1) = 150', 'or, 4x^2+x-150 = 0', 'Either 4x = -25 or x = 6', 'As breadth can not take negetive value so x = 6']\nnew_fact = infer_new_fact(selected) # 'So its length is 4*6+1 = 25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'What is the perimeter of the piece?', 'So length will be = (4x+1) m.', 'or, (4x+25)(x-6) = 0', 'Either 4x = -25 or x = 6', 'As breadth can not take negetive value so x = 6', 'So its length is 4*6+1 = 25']\nnew_fact = infer_new_fact(selected) # 'So perimeter will be 2*(25+6)=62 m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A rectangular piece of 150 sq m has a length which is 1m more than the 4 times the breadth.', 'As breadth can not take negetive value so x = 6', 'So its length is 4*6+1 = 25', 'So perimeter will be 2*(25+6)=62 m']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_66_7d6631e23e", "context": "", "question": "One gram of a certain health food contains 9 percent of the minimum daily requirement of vitamin E and 8 percent of the minimum daily requirement of vitamin A. If vitamins E and A are to be obtained from no other source, how many grams of the health food must be eaten daily to provide at least the minimum daily requirement of both vitamins?", "options": ["A)8.5", "B)10.5", "C)12.5", "D)14.5", "E)16.5"], "rationale": "100% / 8% = 12.5\n12.5 grams of the health food provides 12.5(8%) = 100% of the vitamin A requirement and more than 100% of the vitamin E requirement.\nThe answer is C.", "answer": "C", "textual_logical_units": {"1": "One gram of a certain health food contains 9 percent of the minimum daily requirement of vitamin E and", "2": "8 percent of the minimum daily requirement of vitamin A.", "3": "If vitamins E and A are to be obtained from no other source,", "4": "how many grams of the health food must be eaten daily to provide at least the minimum daily requirement of both vitamins?", "5": "A)8.5", "6": "B)10.5", "7": "C)12.5", "8": "D)14.5", "9": "E)16.5", "10": "100% / 8% = 12.5", "11": "12.5 grams of the health food provides 12.5(8%) = 100% of the vitamin A requirement and more than 100% of the vitamin E requirement.", "12": "The answer is C.", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3, 4, 7, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'One gram of a certain health food contains 9 percent of the minimum daily requirement of vitamin E and',\n  '8 percent of the minimum daily requirement of vitamin A.',\n  'If vitamins E and A are to be obtained from no other source,']\nquestion = 'how many grams of the health food must be eaten daily to provide at least the minimum daily requirement of both vitamins?'\nchoices = {'A': '8.5', 'B': '10.5', 'C': '12.5', 'D': '14.5', 'E': '16.5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['One gram of a certain health food contains 9 percent of the minimum daily requirement of vitamin E and', '8 percent of the minimum daily requirement of vitamin A.']\nnew_fact = infer_new_fact(selected) # '100% / 8% = 12.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['One gram of a certain health food contains 9 percent of the minimum daily requirement of vitamin E and', '8 percent of the minimum daily requirement of vitamin A.']\nnew_fact = infer_new_fact(selected) # '12.5 grams of the health food provides 12.5(8%) = 100% of the vitamin A requirement and more than 100% of the vitamin E requirement.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If vitamins E and A are to be obtained from no other source,', 'how many grams of the health food must be eaten daily to provide at least the minimum daily requirement of both vitamins?', 'C)12.5', '100% / 8% = 12.5', '12.5 grams of the health food provides 12.5(8%) = 100% of the vitamin A requirement and more than 100% of the vitamin E requirement.']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_67_62161df8ad", "context": "", "question": "Assistants are needed to prepare for preparation. Each helper can make either 2 large cakes or 35 small cakes/hr. The kitchen is available for 3 hours and 20 large cakes & 700 small cakes are needed. How many helpers are required?", "options": ["A)8", "B)10", "C)12", "D)15", "E)19"], "rationale": "20 large cakes will require the equivalent of 10 helpers working for one hour. 700 small cakes will require the equivalent of 20 helpers working for one hour. This means if only one hour were available we would need 30 helpers. But since three hours are available we can use 10 helpers.\nB", "answer": "B", "textual_logical_units": {"1": "Assistants are needed to prepare for preparation.", "2": "Each helper can make either 2 large cakes or 35 small cakes/hr.", "3": "The kitchen is available for 3 hours and", "4": "20 large cakes & 700 small cakes are needed.", "5": "How many helpers are required?", "6": "A)8", "7": "B)10", "8": "C)12", "9": "D)15", "10": "E)19", "11": "20 large cakes will require the equivalent of 10 helpers working for one hour. 700 small cakes will require the equivalent of 20 helpers working for one hour. This means if only one hour were available we would need 30 helpers. But since three hours are available we can use 10 helpers.", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'Assistants are needed to prepare for preparation.',\n  'Each helper can make either 2 large cakes or 35 small cakes/hr.',\n  'The kitchen is available for 3 hours and',\n  '20 large cakes & 700 small cakes are needed.']\nquestion = 'How many helpers are required?'\nchoices = {'A': '8', 'B': '10', 'C': '12', 'D': '15', 'E': '19'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Each helper can make either 2 large cakes or 35 small cakes/hr.', 'The kitchen is available for 3 hours and', '20 large cakes & 700 small cakes are needed.']\nnew_fact = infer_new_fact(selected) # '20 large cakes will require the equivalent of 10 helpers working for one hour. 700 small cakes will require the equivalent of 20 helpers working for one hour. This means if only one hour were available we would need 30 helpers. But since three hours are available we can use 10 helpers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 large cakes will require the equivalent of 10 helpers working for one hour. 700 small cakes will require the equivalent of 20 helpers working for one hour. This means if only one hour were available we would need 30 helpers. But since three hours are available we can use 10 helpers.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_68_5d74e8eb0e", "context": "", "question": "R, S, T, and U are points on a line, and U is the midpoint of line segment ST. If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively. What is the length of line segment RU?", "options": ["A)6", "B)7", "C)8", "D)9", "E)10"], "rationale": "Since SR + RT = 22 = ST, then R is somewhere between S and T.\nSince ST is 22, then SU is 11 because U is the midpoint of ST.\nSince SR < SU, then R is somewhere between S and U.\nThen SR + RU = SU.\n5 + RU = 11\nRU = 6\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "R, S, T, and U are points on a line,", "2": "and U is the midpoint of line segment ST.", "3": "If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.", "4": "What is the length of line segment RU?", "5": "A)6", "6": "B)7", "7": "C)8", "8": "D)9", "9": "E)10", "10": "Since SR + RT = 22 = ST, then R is somewhere between S and T.", "11": "Since ST is 22, then SU is 11 because U is the midpoint of ST.", "12": "Since SR < SU, then R is somewhere between S and U.", "13": "Then SR + RU = SU.", "14": "5 + RU = 11", "15": "RU = 6", "16": "The answer is A.", "17": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 5, 10, 11, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'R, S, T, and U are points on a line,',\n  'and U is the midpoint of line segment ST.',\n  'If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.']\nquestion = 'What is the length of line segment RU?'\nchoices = {'A': '6', 'B': '7', 'C': '8', 'D': '9', 'E': '10'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['R, S, T, and U are points on a line,', 'and U is the midpoint of line segment ST.', 'If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.']\nnew_fact = infer_new_fact(selected) # 'Since SR + RT = 22 = ST, then R is somewhere between S and T.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T, and U are points on a line,', 'and U is the midpoint of line segment ST.', 'If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.', 'Since SR + RT = 22 = ST, then R is somewhere between S and T.']\nnew_fact = infer_new_fact(selected) # 'Since ST is 22, then SU is 11 because U is the midpoint of ST.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T, and U are points on a line,', 'and U is the midpoint of line segment ST.', 'If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.', 'Since SR + RT = 22 = ST, then R is somewhere between S and T.', 'Since ST is 22, then SU is 11 because U is the midpoint of ST.']\nnew_fact = infer_new_fact(selected) # 'Since SR < SU, then R is somewhere between S and U.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['R, S, T, and U are points on a line,', 'and U is the midpoint of line segment ST.', 'If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.', 'Since SR + RT = 22 = ST, then R is somewhere between S and T.', 'Since ST is 22, then SU is 11 because U is the midpoint of ST.', 'Since SR < SU, then R is somewhere between S and U.']\nnew_fact = infer_new_fact(selected) # 'Then SR + RU = SU.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the lengths of line segments RS, RT, and ST are 5, 17, and 22, respectively.', 'Since SR + RT = 22 = ST, then R is somewhere between S and T.', 'Since ST is 22, then SU is 11 because U is the midpoint of ST.', 'Since SR < SU, then R is somewhere between S and U.', 'Then SR + RU = SU.']\nnew_fact = infer_new_fact(selected) # '5 + RU = 11'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 + RU = 11']\nnew_fact = infer_new_fact(selected) # 'RU = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the length of line segment RU?', 'A)6', 'Since SR + RT = 22 = ST, then R is somewhere between S and T.', 'Since ST is 22, then SU is 11 because U is the midpoint of ST.', 'Since SR < SU, then R is somewhere between S and U.', 'Then SR + RU = SU.', '5 + RU = 11', 'RU = 6']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_69_c8628446b3", "context": "", "question": "Six pita breads contain the same amount of falafel as do two rolls. Three rolls contain the same amount of falafel as five baguettes do. Two baguettes contain the same amount of falafel as how many pita breads?", "options": ["A)12/25", "B)3/2", "C)3", "D)2", "E)25/3"], "rationale": "6P = 2R\n3R = 5B\n2B = ?P\nThus, P : R : B = 18 : 6 : 12\nP : B = 18 : 12\n= 3 : 2\nThus P = 3\nAnswer : C", "answer": "C", "textual_logical_units": {"1": "Six pita breads contain the same amount of falafel as do two rolls.", "2": "Three rolls contain the same amount of falafel as five baguettes do.", "3": "Two baguettes contain the same amount of falafel as how many pita breads?", "4": "A)12/25", "5": "B)3/2", "6": "C)3", "7": "D)2", "8": "E)25/3", "9": "6P = 2R", "10": "3R = 5B", "11": "2B = ?P", "12": "Thus, P : R : B = 18 : 6 : 12", "13": "P : B = 18 : 12", "14": "= 3 : 2", "15": "Thus P = 3", "16": "Answer : C", "17": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [9, 10], "consequent": 12}, {"antecedents": [1, 3], "consequent": 13}, {"antecedents": [1, 2, 3, 12, 13], "consequent": 14}, {"antecedents": [1, 2, 3, 9, 10, 12, 13], "consequent": 15}, {"antecedents": [3, 6, 12, 13, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['Six pita breads contain the same amount of falafel as do two rolls.', 'Three rolls contain the same amount of falafel as five baguettes do.']\nquestion = 'Two baguettes contain the same amount of falafel as how many pita breads?'\nchoices = {'A': '12/25', 'B': '3/2', 'C': '3', 'D': '2', 'E': '25/3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Six pita breads contain the same amount of falafel as do two rolls.']\nnew_fact = infer_new_fact(selected) # '6P = 2R'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Three rolls contain the same amount of falafel as five baguettes do.']\nnew_fact = infer_new_fact(selected) # '3R = 5B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Two baguettes contain the same amount of falafel as how many pita breads?']\nnew_fact = infer_new_fact(selected) # '2B = ?P'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6P = 2R', '3R = 5B']\nnew_fact = infer_new_fact(selected) # 'Thus, P : R : B = 18 : 6 : 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Six pita breads contain the same amount of falafel as do two rolls.', 'Two baguettes contain the same amount of falafel as how many pita breads?']\nnew_fact = infer_new_fact(selected) # 'P : B = 18 : 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Six pita breads contain the same amount of falafel as do two rolls.', 'Three rolls contain the same amount of falafel as five baguettes do.', 'Two baguettes contain the same amount of falafel as how many pita breads?', 'Thus, P : R : B = 18 : 6 : 12', 'P : B = 18 : 12']\nnew_fact = infer_new_fact(selected) # '= 3 : 2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Six pita breads contain the same amount of falafel as do two rolls.', 'Three rolls contain the same amount of falafel as five baguettes do.', 'Two baguettes contain the same amount of falafel as how many pita breads?', '6P = 2R', '3R = 5B', 'Thus, P : R : B = 18 : 6 : 12', 'P : B = 18 : 12']\nnew_fact = infer_new_fact(selected) # 'Thus P = 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Two baguettes contain the same amount of falafel as how many pita breads?', 'C)3', 'Thus, P : R : B = 18 : 6 : 12', 'P : B = 18 : 12', 'Thus P = 3']\nnew_fact = infer_new_fact(selected) # 'Answer : C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_70_f06391efa2", "context": "", "question": "A shopkeeper in order to promote his new shop put a discount of 20% on all the items for one day. Now he must sell the items at original price the other day. By what percentage must he increase the price to original?", "options": ["A)21%", "B)20%", "C)25%", "D)33%", "E)18%"], "rationale": "Suppose every item is priced at $100. On 20% discount, the price will become $80. Now he must add $20 to each item for original price which is 25% of $80.", "answer": "C", "textual_logical_units": {"1": "A shopkeeper in order to promote his new shop put a discount of 20% on all the items for one day.", "2": "Now he must sell the items at original price the other day.", "3": "By what percentage must he increase the price to original?", "4": "A)21%", "5": "B)20%", "6": "C)25%", "7": "D)33%", "8": "E)18%", "9": "Suppose every item is priced at $100. On 20% discount, the price will become $80. Now he must add $20 to each item for original price which is 25% of $80.", "10": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = [ 'A shopkeeper in order to promote his new shop put a discount of 20% on all the items for one day.',\n  'Now he must sell the items at original price the other day.']\nquestion = 'By what percentage must he increase the price to original?'\nchoices = {'A': '21%', 'B': '20%', 'C': '25%', 'D': '33%', 'E': '18%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A shopkeeper in order to promote his new shop put a discount of 20% on all the items for one day.', 'Now he must sell the items at original price the other day.']\nnew_fact = infer_new_fact(selected) # 'Suppose every item is priced at $100. On 20% discount, the price will become $80. Now he must add $20 to each item for original price which is 25% of $80.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Suppose every item is priced at $100. On 20% discount, the price will become $80. Now he must add $20 to each item for original price which is 25% of $80.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_71_f50fb26d17", "context": "", "question": "The bus fare for two persons for travelling between Agra and Aligarh id four-thirds the train fare between the same places for one person. The total fare paid by 6 persons travelling by bus and 8 persons travelling by train between the two places is Rs.1512. Find the train fare between the two places for one person?", "options": ["A)126", "B)77", "C)88", "D)66", "E)54"], "rationale": "Let the train fare between the two places for one person be Rs.t\nBus fare between the two places for two persons Rs.4/3 t\n=> 6/2 (4/3 t) + 8(t) = 1512\n=> 12t = 1512 => t = 126.\nAnswer:A", "answer": "A", "textual_logical_units": {"1": "The bus fare for two persons for travelling between Agra and", "2": "Aligarh id four-thirds the train fare between the same places for one person.", "3": "The total fare paid by 6 persons travelling by bus and", "4": "8 persons travelling by train between the two places is Rs.1512.", "5": "Find the train fare between the two places for one person?", "6": "A)126", "7": "B)77", "8": "C)88", "9": "D)66", "10": "E)54", "11": "Let the train fare between the two places for one person be Rs.t", "12": "Bus fare between the two places for two persons Rs.4/3 t", "13": "=> 6/2 (4/3 t) + 8(t) = 1512", "14": "=> 12t = 1512 => t = 126.", "15": "Answer:A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 5], "consequent": 11}, {"antecedents": [1, 2, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 11, 12], "consequent": 13}, {"antecedents": [2, 3, 4, 11, 12, 13], "consequent": 14}, {"antecedents": [5, 6, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'The bus fare for two persons for travelling between Agra and',\n  'Aligarh id four-thirds the train fare between the same places for one person.',\n  'The total fare paid by 6 persons travelling by bus and',\n  '8 persons travelling by train between the two places is Rs.1512.']\nquestion = 'Find the train fare between the two places for one person?'\nchoices = {'A': '126', 'B': '77', 'C': '88', 'D': '66', 'E': '54'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The bus fare for two persons for travelling between Agra and', 'Aligarh id four-thirds the train fare between the same places for one person.', 'Find the train fare between the two places for one person?']\nnew_fact = infer_new_fact(selected) # 'Let the train fare between the two places for one person be Rs.t'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bus fare for two persons for travelling between Agra and', 'Aligarh id four-thirds the train fare between the same places for one person.', 'Let the train fare between the two places for one person be Rs.t']\nnew_fact = infer_new_fact(selected) # 'Bus fare between the two places for two persons Rs.4/3 t'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Aligarh id four-thirds the train fare between the same places for one person.', 'The total fare paid by 6 persons travelling by bus and', '8 persons travelling by train between the two places is Rs.1512.', 'Let the train fare between the two places for one person be Rs.t', 'Bus fare between the two places for two persons Rs.4/3 t']\nnew_fact = infer_new_fact(selected) # '=> 6/2 (4/3 t) + 8(t) = 1512'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Aligarh id four-thirds the train fare between the same places for one person.', 'The total fare paid by 6 persons travelling by bus and', '8 persons travelling by train between the two places is Rs.1512.', 'Let the train fare between the two places for one person be Rs.t', 'Bus fare between the two places for two persons Rs.4/3 t', '=> 6/2 (4/3 t) + 8(t) = 1512']\nnew_fact = infer_new_fact(selected) # '=> 12t = 1512 => t = 126.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the train fare between the two places for one person?', 'A)126', 'Bus fare between the two places for two persons Rs.4/3 t', '=> 6/2 (4/3 t) + 8(t) = 1512', '=> 12t = 1512 => t = 126.']\nnew_fact = infer_new_fact(selected) # 'Answer:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_72_879e38cfd3", "context": "", "question": "A rectangle has a length of 8 centimeters and a width of 3 centimeters. Find the perimeter.", "options": ["A)18cm", "B)22cm", "C)20cm", "D)30cm", "E)28cm"], "rationale": "Perimeter = 2(8 cm) + 2(3 cm) = 16 cm + 6 cm = 22 cm\nanswer:B.", "answer": "B", "textual_logical_units": {"1": "A rectangle has a length of 8 centimeters and", "2": "a width of 3 centimeters.", "3": "Find the perimeter.", "4": "A)18cm", "5": "B)22cm", "6": "C)20cm", "7": "D)30cm", "8": "E)28cm", "9": "Perimeter = 2(8 cm) + 2(3 cm) = 16 cm + 6 cm = 22 cm", "10": "answer:B.", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['A rectangle has a length of 8 centimeters and', 'a width of 3 centimeters.']\nquestion = 'Find the perimeter.'\nchoices = {'A': '18cm', 'B': '22cm', 'C': '20cm', 'D': '30cm', 'E': '28cm'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A rectangle has a length of 8 centimeters and', 'a width of 3 centimeters.', 'Find the perimeter.']\nnew_fact = infer_new_fact(selected) # 'Perimeter = 2(8 cm) + 2(3 cm) = 16 cm + 6 cm = 22 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the perimeter.', 'B)22cm', 'Perimeter = 2(8 cm) + 2(3 cm) = 16 cm + 6 cm = 22 cm']\nnew_fact = infer_new_fact(selected) # 'answer:B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['answer:B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_73_7112b82c0f", "context": "", "question": "Suppose you want to arrange your English, Hindi, Mathematics, History, Geography and Science books on a shelf. In how many ways can you do it ?", "options": ["A)520", "B)720", "C)920", "D)None", "E)Cannot be determined"], "rationale": "We have to arrange 6 books. The number of permutations is 6*5*4*3*2*1= 720\nAnswer : B", "answer": "B", "textual_logical_units": {"1": "Suppose you want to arrange your English, Hindi, Mathematics, History, Geography and", "2": "Science books on a shelf.", "3": "In how many ways can you do it ?", "4": "A)520", "5": "B)720", "6": "C)920", "7": "D)None", "8": "E)Cannot be determined", "9": "We have to arrange 6 books. The number of permutations is 6*5*4*3*2*1= 720", "10": "Answer : B", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['Suppose you want to arrange your English, Hindi, Mathematics, History, Geography and', 'Science books on a shelf.']\nquestion = 'In how many ways can you do it ?'\nchoices = {'A': '520', 'B': '720', 'C': '920', 'D': 'None', 'E': 'Cannot be determined'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Suppose you want to arrange your English, Hindi, Mathematics, History, Geography and', 'Science books on a shelf.', 'In how many ways can you do it ?']\nnew_fact = infer_new_fact(selected) # 'We have to arrange 6 books. The number of permutations is 6*5*4*3*2*1= 720'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can you do it ?', 'B)720', 'We have to arrange 6 books. The number of permutations is 6*5*4*3*2*1= 720']\nnew_fact = infer_new_fact(selected) # 'Answer : B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_74_962eac421e", "context": "", "question": "A straight picket fence is composed of x pickets each of which is 1/2 inch wide. If there are 6 inches of space between each pair of pickets, which of the following represents the length of fence in feet?", "options": ["A)13x/2", "B)13x/2 - 6", "C)13x/24", "D)(13x+1)/24", "E)(13x-12)/24"], "rationale": "Number of pickets = x\nSize of pickets = 1/2\nlength of pickets = 1/2x\nIf there are x pickets, it implies that there are x -1 spaces between the picket\nLength of space = 6\ntotal number of length = 1/2 x + 6(x-1) in inches\ntotal length in feet =( 1/2 x + 6(x-1))/12\nSimplify to get (13X-12)/24\nANSWER:E", "answer": "E", "textual_logical_units": {"1": "A straight picket fence is composed of x pickets each of which is 1/2 inch wide.", "2": "If there are 6 inches of space between each pair of pickets,", "3": "which of the following represents the length of fence in feet?", "4": "A)13x/2", "5": "B)13x/2 - 6", "6": "C)13x/24", "7": "D)(13x+1)/24", "8": "E)(13x-12)/24", "9": "Number of pickets = x", "10": "Size of pickets = 1/2", "11": "length of pickets = 1/2x", "12": "If there are x pickets, it implies that there are x -1 spaces between the picket", "13": "Length of space = 6", "14": "total number of length = 1/2 x + 6(x-1) in inches", "15": "total length in feet =( 1/2 x + 6(x-1))/12", "16": "Simplify to get (13X-12)/24", "17": "ANSWER:E", "18": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [1], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [2], "consequent": 13}, {"antecedents": [1, 2, 11, 12], "consequent": 14}, {"antecedents": [1, 2, 11, 12, 14], "consequent": 15}, {"antecedents": [1, 2, 11, 12, 15], "consequent": 16}, {"antecedents": [1, 2, 3, 8, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.', 'If there are 6 inches of space between each pair of pickets,']\nquestion = 'which of the following represents the length of fence in feet?'\nchoices = {'A': '13x/2', 'B': '13x/2 - 6', 'C': '13x/24', 'D': '(13x+1)/24', 'E': '(13x-12)/24'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.']\nnew_fact = infer_new_fact(selected) # 'Number of pickets = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.']\nnew_fact = infer_new_fact(selected) # 'Size of pickets = 1/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.']\nnew_fact = infer_new_fact(selected) # 'length of pickets = 1/2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.']\nnew_fact = infer_new_fact(selected) # 'If there are x pickets, it implies that there are x -1 spaces between the picket'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there are 6 inches of space between each pair of pickets,']\nnew_fact = infer_new_fact(selected) # 'Length of space = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.', 'If there are 6 inches of space between each pair of pickets,', 'length of pickets = 1/2x', 'If there are x pickets, it implies that there are x -1 spaces between the picket']\nnew_fact = infer_new_fact(selected) # 'total number of length = 1/2 x + 6(x-1) in inches'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.', 'If there are 6 inches of space between each pair of pickets,', 'length of pickets = 1/2x', 'If there are x pickets, it implies that there are x -1 spaces between the picket', 'total number of length = 1/2 x + 6(x-1) in inches']\nnew_fact = infer_new_fact(selected) # 'total length in feet =( 1/2 x + 6(x-1))/12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.', 'If there are 6 inches of space between each pair of pickets,', 'length of pickets = 1/2x', 'If there are x pickets, it implies that there are x -1 spaces between the picket', 'total length in feet =( 1/2 x + 6(x-1))/12']\nnew_fact = infer_new_fact(selected) # 'Simplify to get (13X-12)/24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A straight picket fence is composed of x pickets each of which is 1/2 inch wide.', 'If there are 6 inches of space between each pair of pickets,', 'which of the following represents the length of fence in feet?', 'E)(13x-12)/24', 'total length in feet =( 1/2 x + 6(x-1))/12', 'Simplify to get (13X-12)/24']\nnew_fact = infer_new_fact(selected) # 'ANSWER:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_75_9db165235d", "context": "", "question": "A ship went on a voyage. After it had traveled 180 miles a plane started with 10 times the speed of the ship. Find the distance when they meet from starting point.", "options": ["A)238", "B)289", "C)200", "D)287", "E)187"], "rationale": "Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\nThen, m×t is the distance ship traveled after plane started\nSo we have, mt + 180 = 10mt\n⇒ 9mt = 180\n⇒ mt = 20\nHence distance = 180 + 20 = 200 miles\nAnswer:C", "answer": "C", "textual_logical_units": {"1": "A ship went on a voyage.", "2": "After it had traveled 180 miles a plane started with 10 times the speed of the ship.", "3": "Find the distance when they meet from starting point.", "4": "A)238", "5": "B)289", "6": "C)200", "7": "D)287", "8": "E)187", "9": "Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship", "10": "Then, m×t is the distance ship traveled after plane started", "11": "So we have, mt + 180 = 10mt", "12": "⇒ 9mt = 180", "13": "⇒ mt = 20", "14": "Hence distance = 180 + 20 = 200 miles", "15": "Answer:C", "16": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [1, 2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [1, 2, 3, 9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [3, 6, 11, 12, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.']\nquestion = 'Find the distance when they meet from starting point.'\nchoices = {'A': '238', 'B': '289', 'C': '200', 'D': '287', 'E': '187'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.']\nnew_fact = infer_new_fact(selected) # \"Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.', \"Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\"]\nnew_fact = infer_new_fact(selected) # 'Then, m×t is the distance ship traveled after plane started'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.', \"Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\", 'Then, m×t is the distance ship traveled after plane started']\nnew_fact = infer_new_fact(selected) # 'So we have, mt + 180 = 10mt'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So we have, mt + 180 = 10mt']\nnew_fact = infer_new_fact(selected) # '⇒ 9mt = 180'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.', 'Find the distance when they meet from starting point.', \"Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\", 'Then, m×t is the distance ship traveled after plane started', 'So we have, mt + 180 = 10mt', '⇒ 9mt = 180']\nnew_fact = infer_new_fact(selected) # '⇒ mt = 20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A ship went on a voyage.', 'After it had traveled 180 miles a plane started with 10 times the speed of the ship.', 'Find the distance when they meet from starting point.', \"Let the speed of the ship = m miles/hr. and plane took 't' hours to meet the ship\", 'Then, m×t is the distance ship traveled after plane started', 'So we have, mt + 180 = 10mt', '⇒ 9mt = 180', '⇒ mt = 20']\nnew_fact = infer_new_fact(selected) # 'Hence distance = 180 + 20 = 200 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the distance when they meet from starting point.', 'C)200', 'So we have, mt + 180 = 10mt', '⇒ 9mt = 180', '⇒ mt = 20', 'Hence distance = 180 + 20 = 200 miles']\nnew_fact = infer_new_fact(selected) # 'Answer:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_76_ca174602ed", "context": "", "question": "In a large forest, 300 deer were caught, tagged, and returned during 2001. During 2002, 500 deer were caught at random, of which only 20 had tags from the previous year. If the percent of deer in the forest that had tags during the second year and were caught in the 500 deer sample is representative of the percent of the total deer population in the forest with tags, what is the total deer population in the forest (assuming no change in population between 2001 and 2002)?", "options": ["A)300", "B)500", "C)5000", "D)6000", "E)7500"], "rationale": "Let N = the total number of deer in the forest.\nDuring the first year, the percent of deer in the entire population with tags was: 300/N\n20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.\nEquating these two percents:\nSample = Population\n(20/500)=(300/N)\nN = (300/1)*(500/20)\nN=7500\nAnswer E", "answer": "E", "textual_logical_units": {"1": "In a large forest, 300 deer were caught, tagged, and returned during 2001.", "2": "During 2002, 500 deer were caught at random,", "3": "of which only 20 had tags from the previous year.", "4": "If the percent of deer in the forest that had tags during the second year and", "5": "were caught in the 500 deer sample is representative of the percent of the total deer population in the forest with tags,", "6": "what is the total deer population in the forest (assuming no change in population between 2001 and 2002)?", "7": "A)300", "8": "B)500", "9": "C)5000", "10": "D)6000", "11": "E)7500", "12": "Let N = the total number of deer in the forest.", "13": "During the first year, the percent of deer in the entire population with tags was: 300/N", "14": "20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.", "15": "Equating these two percents:", "16": "Sample = Population", "17": "(20/500)=(300/N)", "18": "N = (300/1)*(500/20)", "19": "N=7500", "20": "Answer E", "21": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [6], "consequent": 12}, {"antecedents": [1], "consequent": 13}, {"antecedents": [2, 3], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [0], "consequent": 16}, {"antecedents": [12, 13, 14, 15], "consequent": 17}, {"antecedents": [12, 13, 14, 15, 17], "consequent": 18}, {"antecedents": [12, 13, 14, 15, 17], "consequent": 19}, {"antecedents": [6, 11, 13, 14, 17, 19], "consequent": 20}, {"antecedents": [20], "consequent": 21}], "metadata": [], "code_input": "####\nfacts = [ 'In a large forest, 300 deer were caught, tagged, and returned during 2001.',\n  'During 2002, 500 deer were caught at random,',\n  'of which only 20 had tags from the previous year.',\n  'If the percent of deer in the forest that had tags during the second year and',\n  'were caught in the 500 deer sample is representative of the percent of the total deer population in the forest with tags,']\nquestion = 'what is the total deer population in the forest (assuming no change in population between 2001 and 2002)?'\nchoices = {'A': '300', 'B': '500', 'C': '5000', 'D': '6000', 'E': '7500'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['what is the total deer population in the forest (assuming no change in population between 2001 and 2002)?']\nnew_fact = infer_new_fact(selected) # 'Let N = the total number of deer in the forest.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a large forest, 300 deer were caught, tagged, and returned during 2001.']\nnew_fact = infer_new_fact(selected) # 'During the first year, the percent of deer in the entire population with tags was: 300/N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['During 2002, 500 deer were caught at random,', 'of which only 20 had tags from the previous year.']\nnew_fact = infer_new_fact(selected) # '20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Equating these two percents:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Sample = Population'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let N = the total number of deer in the forest.', 'During the first year, the percent of deer in the entire population with tags was: 300/N', '20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.', 'Equating these two percents:']\nnew_fact = infer_new_fact(selected) # '(20/500)=(300/N)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let N = the total number of deer in the forest.', 'During the first year, the percent of deer in the entire population with tags was: 300/N', '20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.', 'Equating these two percents:', '(20/500)=(300/N)']\nnew_fact = infer_new_fact(selected) # 'N = (300/1)*(500/20)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let N = the total number of deer in the forest.', 'During the first year, the percent of deer in the entire population with tags was: 300/N', '20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.', 'Equating these two percents:', '(20/500)=(300/N)']\nnew_fact = infer_new_fact(selected) # 'N=7500'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the total deer population in the forest (assuming no change in population between 2001 and 2002)?', 'E)7500', 'During the first year, the percent of deer in the entire population with tags was: 300/N', '20/500 is the percent of deer caught during the second year that had tags. Since this sample percent matches the percent for the entire population (i.e., the total number of tagged deer divided by the total number of deer), the two ratios are equal.', '(20/500)=(300/N)', 'N=7500']\nnew_fact = infer_new_fact(selected) # 'Answer E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_77_12643ded8e", "context": "", "question": "In a railway station, there are two trains going. One in the harbor line and one in the main line, each having a frequency of 10 minutes. The main line service starts at 5 o'clock and the harbor line starts at 5.02 A.M. A man goes to the station every day to catch the first train that comes. What is the probability of the man catching the first train?", "options": ["A)0.9", "B)0.8", "C)0.6", "D)0.65", "E)1.5"], "rationale": "For each 10 min interval, if man comes in first 2 min, he'll catch the 1st train, if he comes in next 8 min, he'll catch the 2nd train.\nHence, for harbor line = (2/10) = 0.2 and for main line 0.8.\nAnswer:B", "answer": "B", "textual_logical_units": {"1": "In a railway station, there are two trains going.", "2": "One in the harbor line and", "3": "one in the main line,", "4": "each having a frequency of 10 minutes.", "5": "The main line service starts at 5 o'clock and", "6": "the harbor line starts at 5.02 A.M.", "7": "A man goes to the station every day to catch the first train that comes.", "8": "What is the probability of the man catching the first train?", "9": "A)0.9", "10": "B)0.8", "11": "C)0.6", "12": "D)0.65", "13": "E)1.5", "14": "For each 10 min interval, if man comes in first 2 min, he'll catch the 1st train, if he comes in next 8 min, he'll catch the 2nd train.", "15": "Hence, for harbor line = (2/10) = 0.2 and for main line 0.8.", "16": "Answer:B", "17": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 4, 5, 6], "consequent": 14}, {"antecedents": [2, 3, 14], "consequent": 15}, {"antecedents": [8, 10, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'In a railway station, there are two trains going.',\n  'One in the harbor line and',\n  'one in the main line,',\n  'each having a frequency of 10 minutes.',\n  \"The main line service starts at 5 o'clock and\",\n  'the harbor line starts at 5.02 A.M.',\n  'A man goes to the station every day to catch the first train that comes.']\nquestion = 'What is the probability of the man catching the first train?'\nchoices = {'A': '0.9', 'B': '0.8', 'C': '0.6', 'D': '0.65', 'E': '1.5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a railway station, there are two trains going.', 'each having a frequency of 10 minutes.', \"The main line service starts at 5 o'clock and\", 'the harbor line starts at 5.02 A.M.']\nnew_fact = infer_new_fact(selected) # \"For each 10 min interval, if man comes in first 2 min, he'll catch the 1st train, if he comes in next 8 min, he'll catch the 2nd train.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['One in the harbor line and', 'one in the main line,', \"For each 10 min interval, if man comes in first 2 min, he'll catch the 1st train, if he comes in next 8 min, he'll catch the 2nd train.\"]\nnew_fact = infer_new_fact(selected) # 'Hence, for harbor line = (2/10) = 0.2 and for main line 0.8.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the probability of the man catching the first train?', 'B)0.8', 'Hence, for harbor line = (2/10) = 0.2 and for main line 0.8.']\nnew_fact = infer_new_fact(selected) # 'Answer:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_78_ed720d2dae", "context": "", "question": "The average (arithmetic mean) of the weight of 10 vehicles is 12.2 tons. The average weight of the group of vehicles increased by 2.6 tons after a new heavy duty truck was added to the group? What is the weight in tons of the heavy duty truck?", "options": ["A)40.8", "B)41.6", "C)42.2", "D)43.5", "E)44.8"], "rationale": "The new average is 14.8 tons.\nOn average, the ten trucks are 2.6 tons below the average for a total weighting of 26 tons.\nTherefore, the added truck must be 14.8 + 26 = 40.8 tons\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "The average (arithmetic mean) of the weight of 10 vehicles is 12.2 tons.", "2": "The average weight of the group of vehicles increased by 2.6 tons after a new heavy duty truck was added to the group?", "3": "What is the weight in tons of the heavy duty truck?", "4": "A)40.8", "5": "B)41.6", "6": "C)42.2", "7": "D)43.5", "8": "E)44.8", "9": "The new average is 14.8 tons.", "10": "On average, the ten trucks are 2.6 tons below the average for a total weighting of 26 tons.", "11": "Therefore, the added truck must be 14.8 + 26 = 40.8 tons", "12": "The answer is A.", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [1, 2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'The average (arithmetic mean) of the weight of 10 vehicles is 12.2 tons.',\n  'The average weight of the group of vehicles increased by 2.6 tons after a new heavy duty truck was added to the group?']\nquestion = 'What is the weight in tons of the heavy duty truck?'\nchoices = {'A': '40.8', 'B': '41.6', 'C': '42.2', 'D': '43.5', 'E': '44.8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The average (arithmetic mean) of the weight of 10 vehicles is 12.2 tons.', 'The average weight of the group of vehicles increased by 2.6 tons after a new heavy duty truck was added to the group?', 'What is the weight in tons of the heavy duty truck?']\nnew_fact = infer_new_fact(selected) # 'The new average is 14.8 tons.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The average (arithmetic mean) of the weight of 10 vehicles is 12.2 tons.', 'The average weight of the group of vehicles increased by 2.6 tons after a new heavy duty truck was added to the group?']\nnew_fact = infer_new_fact(selected) # 'On average, the ten trucks are 2.6 tons below the average for a total weighting of 26 tons.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The new average is 14.8 tons.', 'On average, the ten trucks are 2.6 tons below the average for a total weighting of 26 tons.']\nnew_fact = infer_new_fact(selected) # 'Therefore, the added truck must be 14.8 + 26 = 40.8 tons'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the weight in tons of the heavy duty truck?', 'A)40.8', 'Therefore, the added truck must be 14.8 + 26 = 40.8 tons']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_79_cae495cfe5", "context": "", "question": "Boomtown urban planners expect the city’s population to increase by 10% per year over the next two years. If that projection were to come true, the population two years from now would be exactly double the population of one year ago. Which of the following is closest to the percent population increase in Boomtown over the last year?", "options": ["A)20%", "B)40%", "C)50%", "D)65%", "E)75%"], "rationale": "Population now - 100;\nPopulation one year from now - 110;\nPopulation two years from now - 121;\nSince the population two years from now (121) is exactly double the population one year ago then the population one year ago was 121/2=60.5.\nNow, the question asks about the population increase over the last year, so from 60.5 (last year) to 100 (now): percent increase=difference/original*100=(100-60.5)/60.5*100=39.5/60.5*100=~2/3*100=~65%.\nAnswer: D.", "answer": "D", "textual_logical_units": {"1": "Boomtown urban planners expect the city’s population to increase by 10% per year over the next two years.", "2": "If that projection were to come true,", "3": "the population two years from now would be exactly double the population of one year ago.", "4": "Which of the following is closest to the percent population increase in Boomtown over the last year?", "5": "A)20%", "6": "B)40%", "7": "C)50%", "8": "D)65%", "9": "E)75%", "10": "Population now - 100;", "11": "Population one year from now - 110;", "12": "Population two years from now - 121;", "13": "Since the population two years from now (121) is exactly double the population one year ago then the population one year ago was 121/2=60.5.", "14": "Now, the question asks about the population increase over the last year, so from 60.5 (last year) to 100 (now): percent increase=difference/original*100=(100-60.5)/60.5*100=39.5/60.5*100=~2/3*100=~65%.", "15": "Answer: D.", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [4, 10, 13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Boomtown urban planners expect the city’s population to increase by 10% per year over the next two years.',\n  'If that projection were to come true,',\n  'the population two years from now would be exactly double the population of one year ago.']\nquestion = 'Which of the following is closest to the percent population increase in Boomtown over the last year?'\nchoices = {'A': '20%', 'B': '40%', 'C': '50%', 'D': '65%', 'E': '75%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Population now - 100;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the population two years from now would be exactly double the population of one year ago.', 'Population now - 100;']\nnew_fact = infer_new_fact(selected) # 'Population one year from now - 110;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Boomtown urban planners expect the city’s population to increase by 10% per year over the next two years.', 'Population one year from now - 110;']\nnew_fact = infer_new_fact(selected) # 'Population two years from now - 121;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the population two years from now would be exactly double the population of one year ago.', 'Population two years from now - 121;']\nnew_fact = infer_new_fact(selected) # 'Since the population two years from now (121) is exactly double the population one year ago then the population one year ago was 121/2=60.5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which of the following is closest to the percent population increase in Boomtown over the last year?', 'Population now - 100;', 'Since the population two years from now (121) is exactly double the population one year ago then the population one year ago was 121/2=60.5.']\nnew_fact = infer_new_fact(selected) # 'Now, the question asks about the population increase over the last year, so from 60.5 (last year) to 100 (now): percent increase=difference/original*100=(100-60.5)/60.5*100=39.5/60.5*100=~2/3*100=~65%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which of the following is closest to the percent population increase in Boomtown over the last year?', 'D)65%', 'Now, the question asks about the population increase over the last year, so from 60.5 (last year) to 100 (now): percent increase=difference/original*100=(100-60.5)/60.5*100=39.5/60.5*100=~2/3*100=~65%.']\nnew_fact = infer_new_fact(selected) # 'Answer: D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_80_d74cb41016", "context": "", "question": "Arjun and Sajal are friends, each has some money. If Arun gives $30 to Sajal, the Sajal will have twice the money left with Arjun. But, if Sajal gives $10 to Arjun, Arjun will have thrice as much as is left with Sajal. How much money does each have?", "options": ["A)62, 35", "B)62, 34", "C)34, 62", "D)42, 62", "E)62, 42"], "rationale": "Suppose Arun has $X and Sajal has $Y. then,\n2(x-30)= y+30 => 2x-y =90 …(i)\nand x +10 =3(y-10) => x-3y = - 40 …(ii)\nSolving (i) and (ii), we get x =62 and y =34.\nArun has $62 and Sajal has $34.\nAnswer B.", "answer": "B", "textual_logical_units": {"1": "Arjun and Sajal are friends, each has some money.", "2": "If Arun gives $30 to Sajal,", "3": "the Sajal will have twice the money left with Arjun.", "4": "But, if Sajal gives $10 to Arjun,", "5": "Arjun will have thrice as much as is left with Sajal.", "6": "How much money does each have?", "7": "A)62, 35", "8": "B)62, 34", "9": "C)34, 62", "10": "D)42, 62", "11": "E)62, 42", "12": "Suppose Arun has $X and Sajal has $Y. then,", "13": "2(x-30)= y+30 => 2x-y =90 …(i)", "14": "and x +10 =3(y-10) => x-3y = - 40 …(ii)", "15": "Solving (i) and (ii), we get x =62 and y =34.", "16": "Arun has $62 and Sajal has $34.", "17": "Answer B.", "18": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 6, 12], "consequent": 13}, {"antecedents": [4, 5, 6, 12], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [6, 12, 15], "consequent": 16}, {"antecedents": [6, 8, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'Arjun and Sajal are friends, each has some money.',\n  'If Arun gives $30 to Sajal,',\n  'the Sajal will have twice the money left with Arjun.',\n  'But, if Sajal gives $10 to Arjun,',\n  'Arjun will have thrice as much as is left with Sajal.']\nquestion = 'How much money does each have?'\nchoices = {'A': '62, 35', 'B': '62, 34', 'C': '34, 62', 'D': '42, 62', 'E': '62, 42'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Suppose Arun has $X and Sajal has $Y. then,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Arun gives $30 to Sajal,', 'the Sajal will have twice the money left with Arjun.', 'How much money does each have?', 'Suppose Arun has $X and Sajal has $Y. then,']\nnew_fact = infer_new_fact(selected) # '2(x-30)= y+30 => 2x-y =90 …(i)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['But, if Sajal gives $10 to Arjun,', 'Arjun will have thrice as much as is left with Sajal.', 'How much money does each have?', 'Suppose Arun has $X and Sajal has $Y. then,']\nnew_fact = infer_new_fact(selected) # 'and x +10 =3(y-10) => x-3y = - 40 …(ii)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2(x-30)= y+30 => 2x-y =90 …(i)', 'and x +10 =3(y-10) => x-3y = - 40 …(ii)']\nnew_fact = infer_new_fact(selected) # 'Solving (i) and (ii), we get x =62 and y =34.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much money does each have?', 'Suppose Arun has $X and Sajal has $Y. then,', 'Solving (i) and (ii), we get x =62 and y =34.']\nnew_fact = infer_new_fact(selected) # 'Arun has $62 and Sajal has $34.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much money does each have?', 'B)62, 34', 'Arun has $62 and Sajal has $34.']\nnew_fact = infer_new_fact(selected) # 'Answer B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_81_9c4f114daa", "context": "", "question": "Julie’s yard is rectangular. One side of the yard is 100 feet wide. The total area of the yard is 3,000 square feet. What is the length of the other side of the yard?", "options": ["A)30 feet", "B)20 feet", "C)10 feet", "D)50 feet", "E)60 feet"], "rationale": "Area = length x width. Divide area by width to find the missing side.\n3000 ÷100 = 30\nThe other side is 30 feet.\nCorrect answer A", "answer": "A", "textual_logical_units": {"1": "Julie’s yard is rectangular.", "2": "One side of the yard is 100 feet wide.", "3": "The total area of the yard is 3,000 square feet.", "4": "What is the length of the other side of the yard?", "5": "A)30 feet", "6": "B)20 feet", "7": "C)10 feet", "8": "D)50 feet", "9": "E)60 feet", "10": "Area = length x width. Divide area by width to find the missing side.", "11": "3000 ÷100 = 30", "12": "The other side is 30 feet.", "13": "Correct answer A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Julie’s yard is rectangular.', 'One side of the yard is 100 feet wide.', 'The total area of the yard is 3,000 square feet.']\nquestion = 'What is the length of the other side of the yard?'\nchoices = {'A': '30 feet', 'B': '20 feet', 'C': '10 feet', 'D': '50 feet', 'E': '60 feet'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The total area of the yard is 3,000 square feet.', 'What is the length of the other side of the yard?']\nnew_fact = infer_new_fact(selected) # 'Area = length x width. Divide area by width to find the missing side.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['One side of the yard is 100 feet wide.', 'The total area of the yard is 3,000 square feet.', 'Area = length x width. Divide area by width to find the missing side.']\nnew_fact = infer_new_fact(selected) # '3000 ÷100 = 30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the length of the other side of the yard?', '3000 ÷100 = 30']\nnew_fact = infer_new_fact(selected) # 'The other side is 30 feet.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the length of the other side of the yard?', 'A)30 feet', 'The other side is 30 feet.']\nnew_fact = infer_new_fact(selected) # 'Correct answer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct answer A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_82_f598d04123", "context": "", "question": "The greatest common factor of two positive integers is 11. The least common multiple of these two integers is 7700. If one of the integers is 350, what is the other?", "options": ["A)242", "B)308", "C)352", "D)412", "E)456"], "rationale": "GCF*LCM = product of 2 numbers\n11*7700 = product of 2 numbers\nother number = 11*7700/350 = 242\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "The greatest common factor of two positive integers is 11.", "2": "The least common multiple of these two integers is 7700.", "3": "If one of the integers is 350, what is the other?", "4": "A)242", "5": "B)308", "6": "C)352", "7": "D)412", "8": "E)456", "9": "GCF*LCM = product of 2 numbers", "10": "11*7700 = product of 2 numbers", "11": "other number = 11*7700/350 = 242", "12": "Answer is A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['The greatest common factor of two positive integers is 11.', 'The least common multiple of these two integers is 7700.']\nquestion = 'If one of the integers is 350, what is the other?'\nchoices = {'A': '242', 'B': '308', 'C': '352', 'D': '412', 'E': '456'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'GCF*LCM = product of 2 numbers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The greatest common factor of two positive integers is 11.', 'The least common multiple of these two integers is 7700.', 'GCF*LCM = product of 2 numbers']\nnew_fact = infer_new_fact(selected) # '11*7700 = product of 2 numbers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If one of the integers is 350, what is the other?', '11*7700 = product of 2 numbers']\nnew_fact = infer_new_fact(selected) # 'other number = 11*7700/350 = 242'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If one of the integers is 350, what is the other?', 'A)242', 'other number = 11*7700/350 = 242']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_83_4e928f6f2a", "context": "", "question": "A square piece of cloth is trimmed by 4 feet on one edge to form a rectangular piece, which is then cut diagonally in half to create two triangles. If the area of each of triangle is 70 square feet, what was the perimeter (in feet) of the original piece of square cloth?", "options": ["A)56", "B)58", "C)60", "D)62", "E)64"], "rationale": "Let x be the length of one side of the original square.\nThe area of the rectangle is x(x-4)=140.\nx=14.\nThe perimeter of the square was 4*14=56 feet.\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "A square piece of cloth is trimmed by 4 feet on one edge to form a rectangular piece, which is then", "2": "cut diagonally in half to create two triangles.", "3": "If the area of each of triangle is 70 square feet,", "4": "what was the perimeter (in feet) of the original piece of square cloth?", "5": "A)56", "6": "B)58", "7": "C)60", "8": "D)62", "9": "E)64", "10": "Let x be the length of one side of the original square.", "11": "The area of the rectangle is x(x-4)=140.", "12": "x=14.", "13": "The perimeter of the square was 4*14=56 feet.", "14": "The answer is A.", "15": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [4, 11, 12], "consequent": 13}, {"antecedents": [4, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'A square piece of cloth is trimmed by 4 feet on one edge to form a rectangular piece, which is then',\n  'cut diagonally in half to create two triangles.',\n  'If the area of each of triangle is 70 square feet,']\nquestion = 'what was the perimeter (in feet) of the original piece of square cloth?'\nchoices = {'A': '56', 'B': '58', 'C': '60', 'D': '62', 'E': '64'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let x be the length of one side of the original square.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A square piece of cloth is trimmed by 4 feet on one edge to form a rectangular piece, which is then', 'cut diagonally in half to create two triangles.', 'If the area of each of triangle is 70 square feet,', 'Let x be the length of one side of the original square.']\nnew_fact = infer_new_fact(selected) # 'The area of the rectangle is x(x-4)=140.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let x be the length of one side of the original square.', 'The area of the rectangle is x(x-4)=140.']\nnew_fact = infer_new_fact(selected) # 'x=14.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what was the perimeter (in feet) of the original piece of square cloth?', 'The area of the rectangle is x(x-4)=140.', 'x=14.']\nnew_fact = infer_new_fact(selected) # 'The perimeter of the square was 4*14=56 feet.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what was the perimeter (in feet) of the original piece of square cloth?', 'A)56', 'The perimeter of the square was 4*14=56 feet.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_84_0c41f001be", "context": "", "question": "The length of the ribbon was originally 30 cm. It was reduced in the ratio 5 : 3. What is its length now?", "options": ["A)18", "B)30", "C)6", "D)15", "E)12"], "rationale": "Length of ribbon originally = 30 cm\nLet the original length be 5x and reduced length be 3x.\nBut 5x = 30 cm\nx = 30/5 cm = 6 cm\nTherefore, reduced length = 3 cm\n= 3 × 6 cm = 18 cm\nAnswer:A", "answer": "A", "textual_logical_units": {"1": "The length of the ribbon was originally 30 cm.", "2": "It was reduced in the ratio 5 : 3.", "3": "What is its length now?", "4": "A)18", "5": "B)30", "6": "C)6", "7": "D)15", "8": "E)12", "9": "Length of ribbon originally = 30 cm", "10": "Let the original length be 5x and reduced length be 3x.", "11": "But 5x = 30 cm", "12": "x = 30/5 cm = 6 cm", "13": "Therefore, reduced length = 3 cm", "14": "= 3 × 6 cm = 18 cm", "15": "Answer:A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['The length of the ribbon was originally 30 cm.', 'It was reduced in the ratio 5 : 3.']\nquestion = 'What is its length now?'\nchoices = {'A': '18', 'B': '30', 'C': '6', 'D': '15', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Length of ribbon originally = 30 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It was reduced in the ratio 5 : 3.']\nnew_fact = infer_new_fact(selected) # 'Let the original length be 5x and reduced length be 3x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Length of ribbon originally = 30 cm', 'Let the original length be 5x and reduced length be 3x.']\nnew_fact = infer_new_fact(selected) # 'But 5x = 30 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['But 5x = 30 cm']\nnew_fact = infer_new_fact(selected) # 'x = 30/5 cm = 6 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is its length now?', 'x = 30/5 cm = 6 cm']\nnew_fact = infer_new_fact(selected) # 'Therefore, reduced length = 3 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the original length be 5x and reduced length be 3x.', 'x = 30/5 cm = 6 cm', 'Therefore, reduced length = 3 cm']\nnew_fact = infer_new_fact(selected) # '= 3 × 6 cm = 18 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is its length now?', 'A)18', '= 3 × 6 cm = 18 cm']\nnew_fact = infer_new_fact(selected) # 'Answer:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_85_2fbcc80252", "context": "", "question": "M = abc is a three digit number and N = cba, if M > N and M - N + 396c = 990. Then how many values of M are more than 300.", "options": ["A)20", "B)30", "C)40", "D)200", "E)None"], "rationale": "From the given data,\nabc – cba + 396c = 990\n100a + 10b + c – (100c + 10b + a) + 396c = 990\n99a – 99c + 396c = 990\nObserve that each term is divisible by 99. So on dividing the above expression by 99, we get\na – c + 4c = 10\na + 3c = 10\nFor c = 1, a = 7\nc = 2, a = 4\nc = 3, a = 1\n'b' can take any value from 0 to 9\nWe have to find the value of M more than 300. So minimum value of 'a' should be 4.\nSo total possibilities are 402, 412, ...., 492 = 10 values\n701, 711, ....., 791 = 10 values\nSo total values = 20.\nCorrect option: A", "answer": "A", "textual_logical_units": {"1": "M = abc is a three digit number and N = cba,", "2": "if M > N and", "3": "M - N + 396c = 990.", "4": "Then how many values of M are more than 300.", "5": "A)20", "6": "B)30", "7": "C)40", "8": "D)200", "9": "E)None", "10": "From the given data,", "11": "abc – cba + 396c = 990", "12": "100a + 10b + c – (100c + 10b + a) + 396c = 990", "13": "99a – 99c + 396c = 990", "14": "Observe that each term is divisible by 99. So on dividing the above expression by 99, we get", "15": "a – c + 4c = 10", "16": "a + 3c = 10", "17": "For c = 1, a = 7", "18": "c = 2, a = 4", "19": "c = 3, a = 1", "20": "'b' can take any value from 0 to 9", "21": "We have to find the value of M more than 300. So minimum value of 'a' should be 4.", "22": "So total possibilities are 402, 412, ...., 492 = 10 values", "23": "701, 711, ....., 791 = 10 values", "24": "So total values = 20.", "25": "Correct option: A", "26": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 3], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [16], "consequent": 18}, {"antecedents": [16], "consequent": 19}, {"antecedents": [12], "consequent": 20}, {"antecedents": [4, 18], "consequent": 21}, {"antecedents": [0], "consequent": 22}, {"antecedents": [0], "consequent": 23}, {"antecedents": [22, 23], "consequent": 24}, {"antecedents": [4, 5, 24], "consequent": 25}, {"antecedents": [25], "consequent": 26}], "metadata": [], "code_input": "####\nfacts = ['M = abc is a three digit number and N = cba,', 'if M > N and', 'M - N + 396c = 990.']\nquestion = 'Then how many values of M are more than 300.'\nchoices = {'A': '20', 'B': '30', 'C': '40', 'D': '200', 'E': 'None'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'From the given data,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M = abc is a three digit number and N = cba,', 'M - N + 396c = 990.']\nnew_fact = infer_new_fact(selected) # 'abc – cba + 396c = 990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['abc – cba + 396c = 990']\nnew_fact = infer_new_fact(selected) # '100a + 10b + c – (100c + 10b + a) + 396c = 990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100a + 10b + c – (100c + 10b + a) + 396c = 990']\nnew_fact = infer_new_fact(selected) # '99a – 99c + 396c = 990'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['99a – 99c + 396c = 990']\nnew_fact = infer_new_fact(selected) # 'Observe that each term is divisible by 99. So on dividing the above expression by 99, we get'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['99a – 99c + 396c = 990', 'Observe that each term is divisible by 99. So on dividing the above expression by 99, we get']\nnew_fact = infer_new_fact(selected) # 'a – c + 4c = 10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a – c + 4c = 10']\nnew_fact = infer_new_fact(selected) # 'a + 3c = 10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a + 3c = 10']\nnew_fact = infer_new_fact(selected) # 'For c = 1, a = 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a + 3c = 10']\nnew_fact = infer_new_fact(selected) # 'c = 2, a = 4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['a + 3c = 10']\nnew_fact = infer_new_fact(selected) # 'c = 3, a = 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['100a + 10b + c – (100c + 10b + a) + 396c = 990']\nnew_fact = infer_new_fact(selected) # \"'b' can take any value from 0 to 9\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then how many values of M are more than 300.', 'c = 2, a = 4']\nnew_fact = infer_new_fact(selected) # \"We have to find the value of M more than 300. So minimum value of 'a' should be 4.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'So total possibilities are 402, 412, ...., 492 = 10 values'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '701, 711, ....., 791 = 10 values'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So total possibilities are 402, 412, ...., 492 = 10 values', '701, 711, ....., 791 = 10 values']\nnew_fact = infer_new_fact(selected) # 'So total values = 20.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then how many values of M are more than 300.', 'A)20', 'So total values = 20.']\nnew_fact = infer_new_fact(selected) # 'Correct option: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct option: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_86_2ff50b170a", "context": "", "question": "there are more than 501 students in a school such that 20% of them exactly took physics and 28% of them exactly took math. What could be the least possible no of students in the school?", "options": ["A)550", "B)570", "C)600", "D)700", "E)none of these"], "rationale": "20% means 1/5 and 28% means 7/25,taking the lcm of the denominators 5 and 25 we get 25,the least multiple of 25 which is greater than 501 is 525. So, answer is none\nANSWER:E", "answer": "E", "textual_logical_units": {"1": "there are more than 501 students in a school such that 20% of them exactly took physics and", "2": "28% of them exactly took math.", "3": "What could be the least possible no of students in the school?", "4": "A)550", "5": "B)570", "6": "C)600", "7": "D)700", "8": "E)none of these", "9": "20% means 1/5 and 28% means 7/25,taking the lcm of the denominators 5 and 25 we get 25,the least multiple of 25 which is greater than 501 is 525. So, answer is none", "10": "ANSWER:E", "11": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['there are more than 501 students in a school such that 20% of them exactly took physics and', '28% of them exactly took math.']\nquestion = 'What could be the least possible no of students in the school?'\nchoices = {'A': '550', 'B': '570', 'C': '600', 'D': '700', 'E': 'none of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['there are more than 501 students in a school such that 20% of them exactly took physics and', '28% of them exactly took math.', 'What could be the least possible no of students in the school?']\nnew_fact = infer_new_fact(selected) # '20% means 1/5 and 28% means 7/25,taking the lcm of the denominators 5 and 25 we get 25,the least multiple of 25 which is greater than 501 is 525. So, answer is none'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What could be the least possible no of students in the school?', 'E)none of these', '20% means 1/5 and 28% means 7/25,taking the lcm of the denominators 5 and 25 we get 25,the least multiple of 25 which is greater than 501 is 525. So, answer is none']\nnew_fact = infer_new_fact(selected) # 'ANSWER:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_87_19830bffb8", "context": "", "question": "If Raj was one-third as old as Rahim 5 years back and Raj is 17 years old now, How old is Rahim now?", "options": ["A)37", "B)41", "C)40", "D)42", "E)43"], "rationale": "Raj’s age today = 17 decades,\nHence, 5 decades back, he must be 12 years old.\nRahim must be 36 years old, Because (3×12).\n5 years back Rahim must be 41 years old today. Because (36+5).", "answer": "B", "textual_logical_units": {"1": "If Raj was one-third as old as Rahim 5 years back and", "2": "Raj is 17 years old now,", "3": "How old is Rahim now?", "4": "A)37", "5": "B)41", "6": "C)40", "7": "D)42", "8": "E)43", "9": "Raj’s age today = 17 decades,", "10": "Hence, 5 decades back, he must be 12 years old.", "11": "Rahim must be 36 years old, Because (3×12).", "12": "5 years back Rahim must be 41 years old today. Because (36+5).", "13": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 3, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['If Raj was one-third as old as Rahim 5 years back and', 'Raj is 17 years old now,']\nquestion = 'How old is Rahim now?'\nchoices = {'A': '37', 'B': '41', 'C': '40', 'D': '42', 'E': '43'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Raj’s age today = 17 decades,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Raj was one-third as old as Rahim 5 years back and', 'Raj’s age today = 17 decades,']\nnew_fact = infer_new_fact(selected) # 'Hence, 5 decades back, he must be 12 years old.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Raj was one-third as old as Rahim 5 years back and', 'How old is Rahim now?', 'Hence, 5 decades back, he must be 12 years old.']\nnew_fact = infer_new_fact(selected) # 'Rahim must be 36 years old, Because (3×12).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How old is Rahim now?', 'Rahim must be 36 years old, Because (3×12).']\nnew_fact = infer_new_fact(selected) # '5 years back Rahim must be 41 years old today. Because (36+5).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5 years back Rahim must be 41 years old today. Because (36+5).']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_88_14a251ad54", "context": "", "question": "A cow is tethered in the middle of a field with a 14 feet long rope. If the cow grazes 10 sq.ft. per day, then approximately what time will be taken by the cow to graze the whole field?", "options": ["A)51 days", "B)61 days", "C)71 days", "D)81 days", "E)91 days"], "rationale": "Area of the field grazed = [22/7*14*14]sq.ft. = 616 sq.ft.\nNumber of days taken to graze the field = 616/10 days\n=> 61 days\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "A cow is tethered in the middle of a field with a 14 feet long rope.", "2": "If the cow grazes 10 sq.ft.", "3": "per day, then approximately what time will be taken by the cow to graze the whole field?", "4": "A)51 days", "5": "B)61 days", "6": "C)71 days", "7": "D)81 days", "8": "E)91 days", "9": "Area of the field grazed = [22/7*14*14]sq.ft. = 616 sq.ft.", "10": "Number of days taken to graze the field = 616/10 days", "11": "=> 61 days", "12": "ANSWER:B", "13": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['A cow is tethered in the middle of a field with a 14 feet long rope.', 'If the cow grazes 10 sq.ft.']\nquestion = 'per day, then approximately what time will be taken by the cow to graze the whole field?'\nchoices = {'A': '51 days', 'B': '61 days', 'C': '71 days', 'D': '81 days', 'E': '91 days'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A cow is tethered in the middle of a field with a 14 feet long rope.', 'per day, then approximately what time will be taken by the cow to graze the whole field?']\nnew_fact = infer_new_fact(selected) # 'Area of the field grazed = [22/7*14*14]sq.ft. = 616 sq.ft.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the cow grazes 10 sq.ft.', 'Area of the field grazed = [22/7*14*14]sq.ft. = 616 sq.ft.']\nnew_fact = infer_new_fact(selected) # 'Number of days taken to graze the field = 616/10 days'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Number of days taken to graze the field = 616/10 days']\nnew_fact = infer_new_fact(selected) # '=> 61 days'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['per day, then approximately what time will be taken by the cow to graze the whole field?', 'B)61 days', '=> 61 days']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_89_05715d7765", "context": "", "question": "A book was sold for Rs 27.50 with a profit of 10%. If it were sold for Rs. 25.75, then would have been percentage of profit and loss ?", "options": ["A)2% Profit", "B)3% Profit", "C)2% Loss", "D)3% Loss", "E)4% Loss"], "rationale": "S.P.=(100+gain%100∗C.P)\nSo, C.P. = (100/110∗25.75)\nWhen S.P. = 25.75 then\nProfit=25.75−25=Re.0.75\nProfit%=0.75/25∗100=3%\nAnswer is B", "answer": "B", "textual_logical_units": {"1": "A book was sold for Rs 27.50 with a profit of 10%.", "2": "If it were sold for Rs.", "3": "25.75, then would have been percentage of profit and loss ?", "4": "A)2% Profit", "5": "B)3% Profit", "6": "C)2% Loss", "7": "D)3% Loss", "8": "E)4% Loss", "9": "S.P.=(100+gain%100∗C.P)", "10": "So, C.P. = (100/110∗25.75)", "11": "When S.P. = 25.75 then", "12": "Profit=25.75−25=Re.0.75", "13": "Profit%=0.75/25∗100=3%", "14": "Answer is B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A book was sold for Rs 27.50 with a profit of 10%.', 'If it were sold for Rs.']\nquestion = '25.75, then would have been percentage of profit and loss ?'\nchoices = {'A': '2% Profit', 'B': '3% Profit', 'C': '2% Loss', 'D': '3% Loss', 'E': '4% Loss'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['25.75, then would have been percentage of profit and loss ?']\nnew_fact = infer_new_fact(selected) # 'S.P.=(100+gain%100∗C.P)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A book was sold for Rs 27.50 with a profit of 10%.', 'If it were sold for Rs.', '25.75, then would have been percentage of profit and loss ?', 'S.P.=(100+gain%100∗C.P)']\nnew_fact = infer_new_fact(selected) # 'So, C.P. = (100/110∗25.75)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'When S.P. = 25.75 then'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So, C.P. = (100/110∗25.75)', 'When S.P. = 25.75 then']\nnew_fact = infer_new_fact(selected) # 'Profit=25.75−25=Re.0.75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25.75, then would have been percentage of profit and loss ?', 'Profit=25.75−25=Re.0.75']\nnew_fact = infer_new_fact(selected) # 'Profit%=0.75/25∗100=3%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['25.75, then would have been percentage of profit and loss ?', 'B)3% Profit', 'Profit%=0.75/25∗100=3%']\nnew_fact = infer_new_fact(selected) # 'Answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_90_4201967ec4", "context": "", "question": "In how many ways can a teacher in a kindergarten school arrange a group of 3 children (Susan, Tim and Zen) on 3 identical chairs in a straight line so that Susan is on the left of Tim?", "options": ["A)7", "B)3", "C)2", "D)1", "E)6"], "rationale": "Total ways in which 3 children can be arranged on 3 chairs = 3*2*1 = 6\nBut in half cases Susan will be left of Tim and in other half of cases Tim will be on left of Susan\ni.e. Desired cases in which Susan is on the left of Tim = (1/2)*6 = 3\nB", "answer": "B", "textual_logical_units": {"1": "In how many ways can a teacher in a kindergarten school arrange a group of 3 children (Susan, Tim and", "2": "Zen) on 3 identical chairs in a straight line so that Susan is on the left of Tim?", "3": "A)7", "4": "B)3", "5": "C)2", "6": "D)1", "7": "E)6", "8": "Total ways in which 3 children can be arranged on 3 chairs = 3*2*1 = 6", "9": "But in half cases Susan will be left of Tim and in other half of cases Tim will be on left of Susan", "10": "i.e. Desired cases in which Susan is on the left of Tim = (1/2)*6 = 3", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 8], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['In how many ways can a teacher in a kindergarten school arrange a group of 3 children (Susan, Tim and']\nquestion = 'Zen) on 3 identical chairs in a straight line so that Susan is on the left of Tim?'\nchoices = {'A': '7', 'B': '3', 'C': '2', 'D': '1', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In how many ways can a teacher in a kindergarten school arrange a group of 3 children (Susan, Tim and', 'Zen) on 3 identical chairs in a straight line so that Susan is on the left of Tim?']\nnew_fact = infer_new_fact(selected) # 'Total ways in which 3 children can be arranged on 3 chairs = 3*2*1 = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'But in half cases Susan will be left of Tim and in other half of cases Tim will be on left of Susan'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can a teacher in a kindergarten school arrange a group of 3 children (Susan, Tim and', 'Zen) on 3 identical chairs in a straight line so that Susan is on the left of Tim?', 'Total ways in which 3 children can be arranged on 3 chairs = 3*2*1 = 6']\nnew_fact = infer_new_fact(selected) # 'i.e. Desired cases in which Susan is on the left of Tim = (1/2)*6 = 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['i.e. Desired cases in which Susan is on the left of Tim = (1/2)*6 = 3']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_91_eccc07e222", "context": "", "question": "The telephone bill of a certain establishment is party fixed and partly varies as the number of calls consumed. When in a certain month 540 calls made the bill is Rs.1800. In another month 620 calls are consumed then the bill becomes Rs.2040. In another month 500 units are consumed due to more\nholidays. The bill for that month would be :", "options": ["A)Rs.1560", "B)Rs.1680", "C)Rs.1840", "D)Rs.1950", "E)Rs.1690"], "rationale": "Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.\nThen, 540y + x = 1800 …. And 620y + x = 2040\nOn subtracting (i) from (ii), we get 80y = 240 -> y = 3\nPutting y = 3 in (i) we get :\n540 * 3 + x = 1800 x = (1800-1620) = 180\n. : Fixed charges = Rs.180, Charge per unit = Rs.3.\nTotal charges for consuming 500 units = 180 +(500*3) = Rs.1680\nAnswer:B", "answer": "B", "textual_logical_units": {"1": "The telephone bill of a certain establishment is party fixed and", "2": "partly varies as the number of calls consumed.", "3": "When in a certain month 540 calls made the bill is Rs.1800.", "4": "In another month 620 calls are consumed then the bill becomes Rs.2040.", "5": "In another month 500 units are consumed due to more\nholidays.", "6": "The bill for that month would be :", "7": "A)Rs.1560", "8": "B)Rs.1680", "9": "C)Rs.1840", "10": "D)Rs.1950", "11": "E)Rs.1690", "12": "Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.", "13": "Then, 540y + x = 1800 …. And 620y + x = 2040", "14": "On subtracting (i) from (ii), we get 80y = 240 -> y = 3", "15": "Putting y = 3 in (i) we get :", "16": "540 * 3 + x = 1800 x = (1800-1620) = 180", "17": ". : Fixed charges = Rs.180, Charge per unit = Rs.3.", "18": "Total charges for consuming 500 units = 180 +(500*3) = Rs.1680", "19": "Answer:B", "20": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [3, 4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [13, 15], "consequent": 16}, {"antecedents": [12, 16], "consequent": 17}, {"antecedents": [5, 17], "consequent": 18}, {"antecedents": [6, 8, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'The telephone bill of a certain establishment is party fixed and',\n  'partly varies as the number of calls consumed.',\n  'When in a certain month 540 calls made the bill is Rs.1800.',\n  'In another month 620 calls are consumed then the bill becomes Rs.2040.',\n  'In another month 500 units are consumed due to more\\nholidays.']\nquestion = 'The bill for that month would be :'\nchoices = {'A': 'Rs.1560', 'B': 'Rs.1680', 'C': 'Rs.1840', 'D': 'Rs.1950', 'E': 'Rs.1690'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['When in a certain month 540 calls made the bill is Rs.1800.', 'In another month 620 calls are consumed then the bill becomes Rs.2040.', 'Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.']\nnew_fact = infer_new_fact(selected) # 'Then, 540y + x = 1800 …. And 620y + x = 2040'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, 540y + x = 1800 …. And 620y + x = 2040']\nnew_fact = infer_new_fact(selected) # 'On subtracting (i) from (ii), we get 80y = 240 -> y = 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, 540y + x = 1800 …. And 620y + x = 2040', 'On subtracting (i) from (ii), we get 80y = 240 -> y = 3']\nnew_fact = infer_new_fact(selected) # 'Putting y = 3 in (i) we get :'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, 540y + x = 1800 …. And 620y + x = 2040', 'Putting y = 3 in (i) we get :']\nnew_fact = infer_new_fact(selected) # '540 * 3 + x = 1800 x = (1800-1620) = 180'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the fixed amount be Rs. X and the cost of each unit be Rs. Y.', '540 * 3 + x = 1800 x = (1800-1620) = 180']\nnew_fact = infer_new_fact(selected) # '. : Fixed charges = Rs.180, Charge per unit = Rs.3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In another month 500 units are consumed due to more\\nholidays.', '. : Fixed charges = Rs.180, Charge per unit = Rs.3.']\nnew_fact = infer_new_fact(selected) # 'Total charges for consuming 500 units = 180 +(500*3) = Rs.1680'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The bill for that month would be :', 'B)Rs.1680', 'Total charges for consuming 500 units = 180 +(500*3) = Rs.1680']\nnew_fact = infer_new_fact(selected) # 'Answer:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_92_34ad5ae71a", "context": "", "question": "Two balls A and B rotate along a circular track. Ball A makes 2 full rotations in 26 minutes. Ball B makes 5 full rotation in 35 minutes. If they start rotating now from the same point, when will they be at the same starting point again?", "options": ["A)1 hour and 31 minutes", "B)2 hour and 31 minutes", "C)3 hour and 31 minutes", "D)4 hour and 31 minutes", "E)5 hour and 31 minutes"], "rationale": "If ball A makes 2 rotations in 26 minutes, it makes 1 rotation in 13 minutes. If ball B makes 5 rotations in 35 minutes, it makes 1 rotation in 7 minutes.\nThe two balls start rotating now and makes several rotations before they are at the SAME starting points. Ball A would have done a WHOLE number X of rotations and ball B would have done a WHOLE number Y of rotations. Also they would have rotated during the same period of time T. Hence\nT = 13 X = 7 Y\nHence 13 X = 7 Y\nSolve the above for X\nX = 7 Y / 13\nWe want the time when they are FIRST at the same starting point. Therefore X and Y are the smallest whole numbers of the equation X = 7 Y / 13. The smallest value of Y that gives X as a whole number is 13. Hence\nX = 7 (13) / 13 = 7\nTime T is given by\nT = 13 X = 13 * 7 = 91 minutes = 1 hour and 31 minutes\ncorrect answer A", "answer": "A", "textual_logical_units": {"1": "Two balls A and B rotate along a circular track.", "2": "Ball A makes 2 full rotations in 26 minutes.", "3": "Ball B makes 5 full rotation in 35 minutes.", "4": "If they start rotating now from the same point,", "5": "when will they be at the same starting point again?", "6": "A)1 hour and 31 minutes", "7": "B)2 hour and 31 minutes", "8": "C)3 hour and 31 minutes", "9": "D)4 hour and 31 minutes", "10": "E)5 hour and 31 minutes", "11": "If ball A makes 2 rotations in 26 minutes, it makes 1 rotation in 13 minutes. If ball B makes 5 rotations in 35 minutes, it makes 1 rotation in 7 minutes.", "12": "The two balls start rotating now and makes several rotations before they are at the SAME starting points. Ball A would have done a WHOLE number X of rotations and ball B would have done a WHOLE number Y of rotations. Also they would have rotated during the same period of time T. Hence", "13": "T = 13 X = 7 Y", "14": "Hence 13 X = 7 Y", "15": "Solve the above for X", "16": "X = 7 Y / 13", "17": "We want the time when they are FIRST at the same starting point. Therefore X and Y are the smallest whole numbers of the equation X = 7 Y / 13. The smallest value of Y that gives X as a whole number is 13. Hence", "18": "X = 7 (13) / 13 = 7", "19": "Time T is given by", "20": "T = 13 X = 13 * 7 = 91 minutes = 1 hour and 31 minutes", "21": "correct answer A", "22": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [14], "consequent": 16}, {"antecedents": [4, 5], "consequent": 17}, {"antecedents": [16, 17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [13, 18], "consequent": 20}, {"antecedents": [5, 6, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "code_input": "####\nfacts = [ 'Two balls A and B rotate along a circular track.',\n  'Ball A makes 2 full rotations in 26 minutes.',\n  'Ball B makes 5 full rotation in 35 minutes.',\n  'If they start rotating now from the same point,']\nquestion = 'when will they be at the same starting point again?'\nchoices = {'A': '1 hour and 31 minutes', 'B': '2 hour and 31 minutes', 'C': '3 hour and 31 minutes', 'D': '4 hour and 31 minutes', 'E': '5 hour and 31 minutes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Ball A makes 2 full rotations in 26 minutes.', 'Ball B makes 5 full rotation in 35 minutes.']\nnew_fact = infer_new_fact(selected) # 'If ball A makes 2 rotations in 26 minutes, it makes 1 rotation in 13 minutes. If ball B makes 5 rotations in 35 minutes, it makes 1 rotation in 7 minutes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'The two balls start rotating now and makes several rotations before they are at the SAME starting points. Ball A would have done a WHOLE number X of rotations and ball B would have done a WHOLE number Y of rotations. Also they would have rotated during the same period of time T. Hence'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If ball A makes 2 rotations in 26 minutes, it makes 1 rotation in 13 minutes. If ball B makes 5 rotations in 35 minutes, it makes 1 rotation in 7 minutes.', 'The two balls start rotating now and makes several rotations before they are at the SAME starting points. Ball A would have done a WHOLE number X of rotations and ball B would have done a WHOLE number Y of rotations. Also they would have rotated during the same period of time T. Hence']\nnew_fact = infer_new_fact(selected) # 'T = 13 X = 7 Y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T = 13 X = 7 Y']\nnew_fact = infer_new_fact(selected) # 'Hence 13 X = 7 Y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Solve the above for X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence 13 X = 7 Y']\nnew_fact = infer_new_fact(selected) # 'X = 7 Y / 13'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If they start rotating now from the same point,', 'when will they be at the same starting point again?']\nnew_fact = infer_new_fact(selected) # 'We want the time when they are FIRST at the same starting point. Therefore X and Y are the smallest whole numbers of the equation X = 7 Y / 13. The smallest value of Y that gives X as a whole number is 13. Hence'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X = 7 Y / 13', 'We want the time when they are FIRST at the same starting point. Therefore X and Y are the smallest whole numbers of the equation X = 7 Y / 13. The smallest value of Y that gives X as a whole number is 13. Hence']\nnew_fact = infer_new_fact(selected) # 'X = 7 (13) / 13 = 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Time T is given by'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T = 13 X = 7 Y', 'X = 7 (13) / 13 = 7']\nnew_fact = infer_new_fact(selected) # 'T = 13 X = 13 * 7 = 91 minutes = 1 hour and 31 minutes'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['when will they be at the same starting point again?', 'A)1 hour and 31 minutes', 'T = 13 X = 13 * 7 = 91 minutes = 1 hour and 31 minutes']\nnew_fact = infer_new_fact(selected) # 'correct answer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct answer A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_93_7317daebbd", "context": "", "question": "A bookshelf contains 45 books, 30 of which are hardcover and 20 of which are fiction. What is the maximum number of books that are both hardcover and fiction?", "options": ["A)10", "B)15", "C)18", "D)20", "E)30"], "rationale": "Total Books = 45\nHard Cover = 30\nNon hardcover = 15\nFiction = 20\nNon-Fiction = 25\nMaximum number of Hardcover fiction will be 20( Assuming All the Fiction Books are Hard Cover )\nHence, the correct answer will be (D)", "answer": "D", "textual_logical_units": {"1": "A bookshelf contains 45 books,", "2": "30 of which are hardcover and", "3": "20 of which are fiction.", "4": "What is the maximum number of books that are both hardcover and fiction?", "5": "A)10", "6": "B)15", "7": "C)18", "8": "D)20", "9": "E)30", "10": "Total Books = 45", "11": "Hard Cover = 30", "12": "Non hardcover = 15", "13": "Fiction = 20", "14": "Non-Fiction = 25", "15": "Maximum number of Hardcover fiction will be 20( Assuming All the Fiction Books are Hard Cover )", "16": "Hence, the correct answer will be (D)", "17": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [1, 2], "consequent": 12}, {"antecedents": [3], "consequent": 13}, {"antecedents": [1, 3], "consequent": 14}, {"antecedents": [3, 11, 13], "consequent": 15}, {"antecedents": [3, 8, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['A bookshelf contains 45 books,', '30 of which are hardcover and', '20 of which are fiction.']\nquestion = 'What is the maximum number of books that are both hardcover and fiction?'\nchoices = {'A': '10', 'B': '15', 'C': '18', 'D': '20', 'E': '30'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A bookshelf contains 45 books,']\nnew_fact = infer_new_fact(selected) # 'Total Books = 45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['30 of which are hardcover and']\nnew_fact = infer_new_fact(selected) # 'Hard Cover = 30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A bookshelf contains 45 books,', '30 of which are hardcover and']\nnew_fact = infer_new_fact(selected) # 'Non hardcover = 15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 of which are fiction.']\nnew_fact = infer_new_fact(selected) # 'Fiction = 20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A bookshelf contains 45 books,', '20 of which are fiction.']\nnew_fact = infer_new_fact(selected) # 'Non-Fiction = 25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 of which are fiction.', 'Hard Cover = 30', 'Fiction = 20']\nnew_fact = infer_new_fact(selected) # 'Maximum number of Hardcover fiction will be 20( Assuming All the Fiction Books are Hard Cover )'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 of which are fiction.', 'D)20', 'Maximum number of Hardcover fiction will be 20( Assuming All the Fiction Books are Hard Cover )']\nnew_fact = infer_new_fact(selected) # 'Hence, the correct answer will be (D)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence, the correct answer will be (D)']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_94_9e5a33870f", "context": "", "question": "A newspaper costs $4 on Sunday and $1 the rest of the days of the week. If a hotel orders twice as many papers on Sunday as it does the rest of the days of the week and pays $210 per week for newspapers, how many newspapers does it buy on Monday?", "options": ["A)15", "B)30", "C)45", "D)60", "E)75"], "rationale": "Number of paper bought on monday = x\n# of paper bought on sunday = 2x\nTotal cost = 210 = 6*x(rest of the day cost)+8*x (sunday cost)\n14x = 210\nx = 15\nAns A", "answer": "A", "textual_logical_units": {"1": "A newspaper costs $4 on Sunday and", "2": "$1 the rest of the days of the week.", "3": "If a hotel orders twice as many papers on Sunday as it does the rest of the days of the week and", "4": "pays $210 per week for newspapers,", "5": "how many newspapers does it buy on Monday?", "6": "A)15", "7": "B)30", "8": "C)45", "9": "D)60", "10": "E)75", "11": "Number of paper bought on monday = x", "12": "# of paper bought on sunday = 2x", "13": "Total cost = 210 = 6*x(rest of the day cost)+8*x (sunday cost)", "14": "14x = 210", "15": "x = 15", "16": "Ans A", "17": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [5], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [4, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [5, 6, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'A newspaper costs $4 on Sunday and',\n  '$1 the rest of the days of the week.',\n  'If a hotel orders twice as many papers on Sunday as it does the rest of the days of the week and',\n  'pays $210 per week for newspapers,']\nquestion = 'how many newspapers does it buy on Monday?'\nchoices = {'A': '15', 'B': '30', 'C': '45', 'D': '60', 'E': '75'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['how many newspapers does it buy on Monday?']\nnew_fact = infer_new_fact(selected) # 'Number of paper bought on monday = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If a hotel orders twice as many papers on Sunday as it does the rest of the days of the week and']\nnew_fact = infer_new_fact(selected) # '# of paper bought on sunday = 2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['pays $210 per week for newspapers,', 'Number of paper bought on monday = x', '# of paper bought on sunday = 2x']\nnew_fact = infer_new_fact(selected) # 'Total cost = 210 = 6*x(rest of the day cost)+8*x (sunday cost)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total cost = 210 = 6*x(rest of the day cost)+8*x (sunday cost)']\nnew_fact = infer_new_fact(selected) # '14x = 210'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['14x = 210']\nnew_fact = infer_new_fact(selected) # 'x = 15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many newspapers does it buy on Monday?', 'A)15', 'x = 15']\nnew_fact = infer_new_fact(selected) # 'Ans A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ans A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_95_e36f2aba4d", "context": "", "question": "A number of friends decided to go on a picnic and planned to spend Rs. 96 on eatables. Four of them, however, did not turn up. As a consequence, the remaining ones had to contribute Rs. 4 extra, each. The number of those who attended the picnic was", "options": ["A)8", "B)12", "C)16", "D)24", "E)25"], "rationale": "Let the number of persons be x. Then,\n96/x-4-96/x=4 => x=12\nSo, required number =x-4=8.\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "A number of friends decided to go on a picnic and planned to spend Rs.", "2": "96 on eatables.", "3": "Four of them, however, did not turn up.", "4": "As a consequence, the remaining ones had to contribute Rs.", "5": "4 extra, each.", "6": "The number of those who attended the picnic was", "7": "A)8", "8": "B)12", "9": "C)16", "10": "D)24", "11": "E)25", "12": "Let the number of persons be x. Then,", "13": "96/x-4-96/x=4 => x=12", "14": "So, required number =x-4=8.", "15": "Answer is A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [2, 3, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [6, 7, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'A number of friends decided to go on a picnic and planned to spend Rs.',\n  '96 on eatables.',\n  'Four of them, however, did not turn up.',\n  'As a consequence, the remaining ones had to contribute Rs.',\n  '4 extra, each.']\nquestion = 'The number of those who attended the picnic was'\nchoices = {'A': '8', 'B': '12', 'C': '16', 'D': '24', 'E': '25'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let the number of persons be x. Then,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['96 on eatables.', 'Four of them, however, did not turn up.', '4 extra, each.', 'Let the number of persons be x. Then,']\nnew_fact = infer_new_fact(selected) # '96/x-4-96/x=4 => x=12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['96/x-4-96/x=4 => x=12']\nnew_fact = infer_new_fact(selected) # 'So, required number =x-4=8.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of those who attended the picnic was', 'A)8', 'So, required number =x-4=8.']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_96_57eabffc93", "context": "", "question": "A wire in the shape of rectangle of length 27 cm and breadth 17 cm is rebent to form a square. What will be the measure of each side?", "options": ["A)9", "B)11", "C)22", "D)25", "E)31"], "rationale": "Perimeter of rectangle = 2 (27 + 17) cm\n= 88cm\nPerimeter of square of side x cm = 4x\nTherefore, perimeter of rectangle = Perimeter of Square\n88 cm = 4x\nx = 22\nTherefore, each side of square = 22 cm\nANSWER : OPTION C", "answer": "C", "textual_logical_units": {"1": "A wire in the shape of rectangle of length 27 cm and", "2": "breadth 17 cm is rebent to form a square.", "3": "What will be the measure of each side?", "4": "A)9", "5": "B)11", "6": "C)22", "7": "D)25", "8": "E)31", "9": "Perimeter of rectangle = 2 (27 + 17) cm", "10": "= 88cm", "11": "Perimeter of square of side x cm = 4x", "12": "Therefore, perimeter of rectangle = Perimeter of Square", "13": "88 cm = 4x", "14": "x = 22", "15": "Therefore, each side of square = 22 cm", "16": "ANSWER : OPTION C", "17": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [3, 6, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['A wire in the shape of rectangle of length 27 cm and', 'breadth 17 cm is rebent to form a square.']\nquestion = 'What will be the measure of each side?'\nchoices = {'A': '9', 'B': '11', 'C': '22', 'D': '25', 'E': '31'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A wire in the shape of rectangle of length 27 cm and', 'breadth 17 cm is rebent to form a square.']\nnew_fact = infer_new_fact(selected) # 'Perimeter of rectangle = 2 (27 + 17) cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Perimeter of rectangle = 2 (27 + 17) cm']\nnew_fact = infer_new_fact(selected) # '= 88cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Perimeter of square of side x cm = 4x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Therefore, perimeter of rectangle = Perimeter of Square'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 88cm', 'Perimeter of square of side x cm = 4x', 'Therefore, perimeter of rectangle = Perimeter of Square']\nnew_fact = infer_new_fact(selected) # '88 cm = 4x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['88 cm = 4x']\nnew_fact = infer_new_fact(selected) # 'x = 22'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the measure of each side?', 'x = 22']\nnew_fact = infer_new_fact(selected) # 'Therefore, each side of square = 22 cm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the measure of each side?', 'C)22', 'Therefore, each side of square = 22 cm']\nnew_fact = infer_new_fact(selected) # 'ANSWER : OPTION C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER : OPTION C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_97_d78d089b99", "context": "", "question": "A man divides Rs 8600 among 5 sons, 4 daughters and 2 nephews. If each daughter receives four times as much as each nephew, and each son receives five as much as each nephew. How much does each daughter receive ?", "options": ["A)Rs 400", "B)Rs 500", "C)Rs 600", "D)Rs 700", "E)Rs 800"], "rationale": "If each nephew got Rs x, then\n2x+16x+25x = 8600\nx= 200\nEach daughter got 4*200 = Rs 800\nANSWER:E", "answer": "E", "textual_logical_units": {"1": "A man divides Rs 8600 among 5 sons, 4 daughters and 2 nephews.", "2": "If each daughter receives four times as much as each nephew,", "3": "and each son receives five as much as each nephew.", "4": "How much does each daughter receive ?", "5": "A)Rs 400", "6": "B)Rs 500", "7": "C)Rs 600", "8": "D)Rs 700", "9": "E)Rs 800", "10": "If each nephew got Rs x, then", "11": "2x+16x+25x = 8600", "12": "x= 200", "13": "Each daughter got 4*200 = Rs 800", "14": "ANSWER:E", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'A man divides Rs 8600 among 5 sons, 4 daughters and 2 nephews.',\n  'If each daughter receives four times as much as each nephew,',\n  'and each son receives five as much as each nephew.']\nquestion = 'How much does each daughter receive ?'\nchoices = {'A': 'Rs 400', 'B': 'Rs 500', 'C': 'Rs 600', 'D': 'Rs 700', 'E': 'Rs 800'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'If each nephew got Rs x, then'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A man divides Rs 8600 among 5 sons, 4 daughters and 2 nephews.', 'If each daughter receives four times as much as each nephew,', 'and each son receives five as much as each nephew.', 'If each nephew got Rs x, then']\nnew_fact = infer_new_fact(selected) # '2x+16x+25x = 8600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x+16x+25x = 8600']\nnew_fact = infer_new_fact(selected) # 'x= 200'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Each daughter got 4*200 = Rs 800'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much does each daughter receive ?', 'E)Rs 800', 'Each daughter got 4*200 = Rs 800']\nnew_fact = infer_new_fact(selected) # 'ANSWER:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_98_d521a1b5e7", "context": "", "question": "Silu and Meenu were walking on the road.\nSilu said, \"I weigh 51 Kgs. How much do you weigh?\"\nMeenu replied that she wouldn't reveal her weight directly as she is overweight.\nBut she said, \"I weigh 29 Kgs plus half of my weight. \"How much does Meenu weigh?", "options": ["A)12", "B)28", "C)27", "D)58", "E)91"], "rationale": "It is given that Meenu weighs 29 Kgs plus half of her own weight.\nIt means that 29 Kgs is the other half. So she weighs 58 Kgs.\nSolving mathematically, let's assume that her weight is A Kgs.\nA = 29 + A/2\n2 × A = 58 + A\nA = 58 Kgs.\nAnswer:D", "answer": "D", "textual_logical_units": {"1": "Silu and Meenu were walking on the road.\nSilu said, \"I weigh 51 Kgs.", "2": "How much do you weigh?\"\nMeenu replied that she wouldn't reveal her weight directly as she is overweight.\nBut she said,", "3": "\"I weigh 29 Kgs plus half of my weight.", "4": "\"How much does Meenu weigh?", "5": "A)12", "6": "B)28", "7": "C)27", "8": "D)58", "9": "E)91", "10": "It is given that Meenu weighs 29 Kgs plus half of her own weight.", "11": "It means that 29 Kgs is the other half. So she weighs 58 Kgs.", "12": "Solving mathematically, let's assume that her weight is A Kgs.", "13": "A = 29 + A/2", "14": "2 × A = 58 + A", "15": "A = 58 Kgs.", "16": "Answer:D", "17": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 8, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'Silu and Meenu were walking on the road.\\nSilu said, \"I weigh 51 Kgs.',\n  'How much do you weigh?\"\\nMeenu replied that she wouldn\\'t reveal her weight directly as she is overweight.\\nBut she said,',\n  '\"I weigh 29 Kgs plus half of my weight.']\nquestion = '\"How much does Meenu weigh?'\nchoices = {'A': '12', 'B': '28', 'C': '27', 'D': '58', 'E': '91'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['\"I weigh 29 Kgs plus half of my weight.', '\"How much does Meenu weigh?']\nnew_fact = infer_new_fact(selected) # 'It is given that Meenu weighs 29 Kgs plus half of her own weight.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['\"How much does Meenu weigh?', 'It is given that Meenu weighs 29 Kgs plus half of her own weight.']\nnew_fact = infer_new_fact(selected) # 'It means that 29 Kgs is the other half. So she weighs 58 Kgs.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # \"Solving mathematically, let's assume that her weight is A Kgs.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It is given that Meenu weighs 29 Kgs plus half of her own weight.', \"Solving mathematically, let's assume that her weight is A Kgs.\"]\nnew_fact = infer_new_fact(selected) # 'A = 29 + A/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A = 29 + A/2']\nnew_fact = infer_new_fact(selected) # '2 × A = 58 + A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 × A = 58 + A']\nnew_fact = infer_new_fact(selected) # 'A = 58 Kgs.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['\"How much does Meenu weigh?', 'D)58', '2 × A = 58 + A', 'A = 58 Kgs.']\nnew_fact = infer_new_fact(selected) # 'Answer:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_99_2ad5437064", "context": "", "question": "Roy was suffering from severe headaches. He went to see his doctor and the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\nHow much time will it take Roy to consume all the 5 tablets?", "options": ["A)45 Min", "B)75 Min", "C)90 Min", "D)120 Min", "E)60 Min"], "rationale": "Tablet 1 will be taken in 0 min.\nTablet 2 will be taken in 15 min.\nTablet 3 will be taken in 30 min.\nTablet 4 will be taken in 45 min.\nTablet 5 will be taken in 60 min.", "answer": "E", "textual_logical_units": {"1": "Roy was suffering from severe headaches.", "2": "He went to see his doctor and", "3": "the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\nHow much time will it take Roy to consume all the 5 tablets?", "4": "A)45 Min", "5": "B)75 Min", "6": "C)90 Min", "7": "D)120 Min", "8": "E)60 Min", "9": "Tablet 1 will be taken in 0 min.", "10": "Tablet 2 will be taken in 15 min.", "11": "Tablet 3 will be taken in 30 min.", "12": "Tablet 4 will be taken in 45 min.", "13": "Tablet 5 will be taken in 60 min.", "14": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [2, 3, 9, 10], "consequent": 11}, {"antecedents": [2, 3, 9, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Roy was suffering from severe headaches.', 'He went to see his doctor and']\nquestion = 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?'\nchoices = {'A': '45 Min', 'B': '75 Min', 'C': '90 Min', 'D': '120 Min', 'E': '60 Min'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['He went to see his doctor and', 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?']\nnew_fact = infer_new_fact(selected) # 'Tablet 1 will be taken in 0 min.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He went to see his doctor and', 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?', 'Tablet 1 will be taken in 0 min.']\nnew_fact = infer_new_fact(selected) # 'Tablet 2 will be taken in 15 min.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He went to see his doctor and', 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?', 'Tablet 1 will be taken in 0 min.', 'Tablet 2 will be taken in 15 min.']\nnew_fact = infer_new_fact(selected) # 'Tablet 3 will be taken in 30 min.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He went to see his doctor and', 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?', 'Tablet 1 will be taken in 0 min.', 'Tablet 2 will be taken in 15 min.', 'Tablet 3 will be taken in 30 min.']\nnew_fact = infer_new_fact(selected) # 'Tablet 4 will be taken in 45 min.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He went to see his doctor and', 'the doctor gave him 5 tablets asking him to take one tablet every 15 minutes.\\nHow much time will it take Roy to consume all the 5 tablets?', 'Tablet 1 will be taken in 0 min.', 'Tablet 2 will be taken in 15 min.', 'Tablet 3 will be taken in 30 min.', 'Tablet 4 will be taken in 45 min.']\nnew_fact = infer_new_fact(selected) # 'Tablet 5 will be taken in 60 min.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Tablet 5 will be taken in 60 min.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_100_8700749dd1", "context": "", "question": "In a bag of red and green sweets, the ratio of red sweets to green sweets is 3:4. If the bag contains 120 green sweets, how many red sweets are there?", "options": ["A)90", "B)80", "C)95", "D)100", "E)85"], "rationale": "Let x = red sweets\nWrite the items in the ratio as a fraction.\nred/green=3/4=x/120\n3 × 120 = 4 × x\n360 = 4x\nx=360/4=90\nAnswer:A", "answer": "A", "textual_logical_units": {"1": "In a bag of red and green sweets,", "2": "the ratio of red sweets to green sweets is 3:4.", "3": "If the bag contains 120 green sweets,", "4": "how many red sweets are there?", "5": "A)90", "6": "B)80", "7": "C)95", "8": "D)100", "9": "E)85", "10": "Let x = red sweets", "11": "Write the items in the ratio as a fraction.", "12": "red/green=3/4=x/120", "13": "3 × 120 = 4 × x", "14": "360 = 4x", "15": "x=360/4=90", "16": "Answer:A", "17": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [1, 2, 3, 4, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 10, 12], "consequent": 13}, {"antecedents": [1, 2, 10, 12, 13], "consequent": 14}, {"antecedents": [10, 12, 13, 14], "consequent": 15}, {"antecedents": [3, 4, 5, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'If the bag contains 120 green sweets,']\nquestion = 'how many red sweets are there?'\nchoices = {'A': '90', 'B': '80', 'C': '95', 'D': '100', 'E': '85'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'If the bag contains 120 green sweets,', 'how many red sweets are there?']\nnew_fact = infer_new_fact(selected) # 'Let x = red sweets'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'If the bag contains 120 green sweets,', 'how many red sweets are there?', 'Let x = red sweets']\nnew_fact = infer_new_fact(selected) # 'Write the items in the ratio as a fraction.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'If the bag contains 120 green sweets,', 'how many red sweets are there?', 'Let x = red sweets', 'Write the items in the ratio as a fraction.']\nnew_fact = infer_new_fact(selected) # 'red/green=3/4=x/120'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'Let x = red sweets', 'red/green=3/4=x/120']\nnew_fact = infer_new_fact(selected) # '3 × 120 = 4 × x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In a bag of red and green sweets,', 'the ratio of red sweets to green sweets is 3:4.', 'Let x = red sweets', 'red/green=3/4=x/120', '3 × 120 = 4 × x']\nnew_fact = infer_new_fact(selected) # '360 = 4x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let x = red sweets', 'red/green=3/4=x/120', '3 × 120 = 4 × x', '360 = 4x']\nnew_fact = infer_new_fact(selected) # 'x=360/4=90'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the bag contains 120 green sweets,', 'how many red sweets are there?', 'A)90', 'x=360/4=90']\nnew_fact = infer_new_fact(selected) # 'Answer:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_101_c41bf0a767", "context": "", "question": "A club consists of members whose ages are in A.P. The common difference being 3 months. If the youngest member of the club is just 7 years old and the sum of the ages of all the members is 250, then number of members in the club are :", "options": ["A)18", "B)20", "C)25", "D)26", "E)27"], "rationale": "Let, n be the number of members in the club.Then,\n250 =(n x [2×7+(n+1)×3/12]) / 2.\nn =25.\nHence, the number of members in the club is 25.\nAnswer : C", "answer": "C", "textual_logical_units": {"1": "A club consists of members whose ages are in A.P.", "2": "The common difference being 3 months.", "3": "If the youngest member of the club is just 7 years old and", "4": "the sum of the ages of all the members is 250,", "5": "then number of members in the club are :", "6": "A)18", "7": "B)20", "8": "C)25", "9": "D)26", "10": "E)27", "11": "Let, n be the number of members in the club.Then,", "12": "250 =(n x [2×7+(n+1)×3/12]) / 2.", "13": "n =25.", "14": "Hence, the number of members in the club is 25.", "15": "Answer : C", "16": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 3, 5], "consequent": 11}, {"antecedents": [3, 4, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 5, 8, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'A club consists of members whose ages are in A.P.',\n  'The common difference being 3 months.',\n  'If the youngest member of the club is just 7 years old and',\n  'the sum of the ages of all the members is 250,']\nquestion = 'then number of members in the club are :'\nchoices = {'A': '18', 'B': '20', 'C': '25', 'D': '26', 'E': '27'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A club consists of members whose ages are in A.P.', 'If the youngest member of the club is just 7 years old and', 'then number of members in the club are :']\nnew_fact = infer_new_fact(selected) # 'Let, n be the number of members in the club.Then,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the youngest member of the club is just 7 years old and', 'the sum of the ages of all the members is 250,', 'Let, n be the number of members in the club.Then,']\nnew_fact = infer_new_fact(selected) # '250 =(n x [2×7+(n+1)×3/12]) / 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let, n be the number of members in the club.Then,', '250 =(n x [2×7+(n+1)×3/12]) / 2.']\nnew_fact = infer_new_fact(selected) # 'n =25.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let, n be the number of members in the club.Then,', '250 =(n x [2×7+(n+1)×3/12]) / 2.', 'n =25.']\nnew_fact = infer_new_fact(selected) # 'Hence, the number of members in the club is 25.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the youngest member of the club is just 7 years old and', 'the sum of the ages of all the members is 250,', 'then number of members in the club are :', 'C)25', 'n =25.', 'Hence, the number of members in the club is 25.']\nnew_fact = infer_new_fact(selected) # 'Answer : C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_102_8603d39a76", "context": "", "question": "M men agree to purchase a gift for Rs. D. If 3 men drop out how much more will each have to contribute towards the purchase of the gift?", "options": ["A)D/(M-3)", "B)MD/3", "C)M/(D-3)", "D)3D/(M2-3M)", "E)None of these"], "rationale": "Initial contribution = D/m\nAfter 3 men drop out, then the contribution = D/M-3\nthe extra amount to pay = (D/m-3)-D/m\n=D(m-m+3)/)(m^2-3*m)\n= 3D/(m^2-3*m)\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "M men agree to purchase a gift for Rs.", "2": "D.", "3": "If 3 men drop out how much more will each have to contribute towards the purchase of the gift?", "4": "A)D/(M-3)", "5": "B)MD/3", "6": "C)M/(D-3)", "7": "D)3D/(M2-3M)", "8": "E)None of these", "9": "Initial contribution = D/m", "10": "After 3 men drop out, then the contribution = D/M-3", "11": "the extra amount to pay = (D/m-3)-D/m", "12": "=D(m-m+3)/)(m^2-3*m)", "13": "= 3D/(m^2-3*m)", "14": "ANSWER:D", "15": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [1, 2, 9, 10, 11], "consequent": 12}, {"antecedents": [1, 2, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['M men agree to purchase a gift for Rs.', 'D.']\nquestion = 'If 3 men drop out how much more will each have to contribute towards the purchase of the gift?'\nchoices = {'A': 'D/(M-3)', 'B': 'MD/3', 'C': 'M/(D-3)', 'D': '3D/(M2-3M)', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['M men agree to purchase a gift for Rs.', 'D.']\nnew_fact = infer_new_fact(selected) # 'Initial contribution = D/m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M men agree to purchase a gift for Rs.', 'D.', 'If 3 men drop out how much more will each have to contribute towards the purchase of the gift?', 'Initial contribution = D/m']\nnew_fact = infer_new_fact(selected) # 'After 3 men drop out, then the contribution = D/M-3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M men agree to purchase a gift for Rs.', 'D.', 'Initial contribution = D/m', 'After 3 men drop out, then the contribution = D/M-3']\nnew_fact = infer_new_fact(selected) # 'the extra amount to pay = (D/m-3)-D/m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M men agree to purchase a gift for Rs.', 'D.', 'Initial contribution = D/m', 'After 3 men drop out, then the contribution = D/M-3', 'the extra amount to pay = (D/m-3)-D/m']\nnew_fact = infer_new_fact(selected) # '=D(m-m+3)/)(m^2-3*m)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M men agree to purchase a gift for Rs.', 'D.', 'Initial contribution = D/m', 'After 3 men drop out, then the contribution = D/M-3', 'the extra amount to pay = (D/m-3)-D/m', '=D(m-m+3)/)(m^2-3*m)']\nnew_fact = infer_new_fact(selected) # '= 3D/(m^2-3*m)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 3 men drop out how much more will each have to contribute towards the purchase of the gift?', 'D)3D/(M2-3M)', '= 3D/(m^2-3*m)']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_103_35a7e9bf75", "context": "", "question": "At what price should the Karan mark a sewing machine that costs him Rs. 1200/- so that even after offering a 20% discount, he makes 20% profit?", "options": ["A)1,879", "B)1,875", "C)1,876", "D)1,872", "E)1,800"], "rationale": "Cost of a sewing machine = Rs. 1200/-\nBy giving 20% discount on the marked price of a sewing machine, the cost price is :\n100/80 * 1200 = Rs. 1500/- By making a profit of 20% on the cost price of a sewing machine, the marked price of the sewing machine is:\n120/100 Ã— 1500 = Rs. 1,800/-\nANSWER: 3", "answer": "E", "textual_logical_units": {"1": "At what price should the Karan mark a sewing machine that costs him Rs.", "2": "1200/- so that even after offering a 20% discount, he makes 20% profit?", "3": "A)1,879", "4": "B)1,875", "5": "C)1,876", "6": "D)1,872", "7": "E)1,800", "8": "Cost of a sewing machine = Rs. 1200/-", "9": "By giving 20% discount on the marked price of a sewing machine, the cost price is :", "10": "100/80 * 1200 = Rs. 1500/- By making a profit of 20% on the cost price of a sewing machine, the marked price of the sewing machine is:", "11": "120/100 Ã— 1500 = Rs. 1,800/-", "12": "ANSWER: 3", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['At what price should the Karan mark a sewing machine that costs him Rs.']\nquestion = '1200/- so that even after offering a 20% discount, he makes 20% profit?'\nchoices = {'A': '1,879', 'B': '1,875', 'C': '1,876', 'D': '1,872', 'E': '1,800'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At what price should the Karan mark a sewing machine that costs him Rs.', '1200/- so that even after offering a 20% discount, he makes 20% profit?']\nnew_fact = infer_new_fact(selected) # 'Cost of a sewing machine = Rs. 1200/-'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At what price should the Karan mark a sewing machine that costs him Rs.', '1200/- so that even after offering a 20% discount, he makes 20% profit?', 'Cost of a sewing machine = Rs. 1200/-']\nnew_fact = infer_new_fact(selected) # 'By giving 20% discount on the marked price of a sewing machine, the cost price is :'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1200/- so that even after offering a 20% discount, he makes 20% profit?', 'Cost of a sewing machine = Rs. 1200/-', 'By giving 20% discount on the marked price of a sewing machine, the cost price is :']\nnew_fact = infer_new_fact(selected) # '100/80 * 1200 = Rs. 1500/- By making a profit of 20% on the cost price of a sewing machine, the marked price of the sewing machine is:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '120/100 Ã— 1500 = Rs. 1,800/-'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'ANSWER: 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER: 3']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_104_0271cab0f4", "context": "", "question": "Train ‘A’ leaves Mumbai Central for Lucknow at 11 am, running at the speed of 40 kmph. Train ‘B’ leaves Mumbai Central for Lucknow by the same route at 2 pm on the same day, running at the speed of 72 kmph. At what time will the two trains meet each other?", "options": ["A)12 am on the next day", "B)5 am on the next day", "C)5 pm on the next day", "D)2 pm on the next day", "E)None of these"], "rationale": "Distance covered by train A before the train B leaves\nMumbai Central = 40 × 3 = 120 km\nTime taken to cross each other = 120⁄12 = 10 hours\nRequired time = 2pm + 10 = 12 am on the next day\nAnswer A", "answer": "A", "textual_logical_units": {"1": "Train ‘A’ leaves Mumbai Central for Lucknow at 11 am,", "2": "running at the speed of 40 kmph.", "3": "Train ‘B’ leaves Mumbai Central for Lucknow by the same route at 2 pm on the same day,", "4": "running at the speed of 72 kmph.", "5": "At what time will the two trains meet each other?", "6": "A)12 am on the next day", "7": "B)5 am on the next day", "8": "C)5 pm on the next day", "9": "D)2 pm on the next day", "10": "E)None of these", "11": "Distance covered by train A before the train B leaves", "12": "Mumbai Central = 40 × 3 = 120 km", "13": "Time taken to cross each other = 120⁄12 = 10 hours", "14": "Required time = 2pm + 10 = 12 am on the next day", "15": "Answer A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [1, 2, 3, 4], "consequent": 12}, {"antecedents": [5], "consequent": 13}, {"antecedents": [1, 3, 13], "consequent": 14}, {"antecedents": [5, 6, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Train ‘A’ leaves Mumbai Central for Lucknow at 11 am,',\n  'running at the speed of 40 kmph.',\n  'Train ‘B’ leaves Mumbai Central for Lucknow by the same route at 2 pm on the same day,',\n  'running at the speed of 72 kmph.']\nquestion = 'At what time will the two trains meet each other?'\nchoices = {'A': '12 am on the next day', 'B': '5 am on the next day', 'C': '5 pm on the next day', 'D': '2 pm on the next day', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Train ‘A’ leaves Mumbai Central for Lucknow at 11 am,']\nnew_fact = infer_new_fact(selected) # 'Distance covered by train A before the train B leaves'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Train ‘A’ leaves Mumbai Central for Lucknow at 11 am,', 'running at the speed of 40 kmph.', 'Train ‘B’ leaves Mumbai Central for Lucknow by the same route at 2 pm on the same day,', 'running at the speed of 72 kmph.']\nnew_fact = infer_new_fact(selected) # 'Mumbai Central = 40 × 3 = 120 km'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At what time will the two trains meet each other?']\nnew_fact = infer_new_fact(selected) # 'Time taken to cross each other = 120⁄12 = 10 hours'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Train ‘A’ leaves Mumbai Central for Lucknow at 11 am,', 'Train ‘B’ leaves Mumbai Central for Lucknow by the same route at 2 pm on the same day,', 'Time taken to cross each other = 120⁄12 = 10 hours']\nnew_fact = infer_new_fact(selected) # 'Required time = 2pm + 10 = 12 am on the next day'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At what time will the two trains meet each other?', 'A)12 am on the next day', 'Required time = 2pm + 10 = 12 am on the next day']\nnew_fact = infer_new_fact(selected) # 'Answer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_105_9335efdd30", "context": "", "question": "Mark told John \"If you give me half your money I will have Rs.75. John said, \"if you give me one third of your money, I will have Rs.75/-. How much money did John have ?", "options": ["A)22", "B)60", "C)28", "D)26", "E)18"], "rationale": "Let the money with Mark and John are M and J, respectively.\nNow\nM + J/2 = 75\nM/3 + J = 75\nSolving we get M = 45, and J = 60.\nAnswer:B", "answer": "B", "textual_logical_units": {"1": "Mark told John \"If you give me half your money I will have Rs.75.", "2": "John said, \"if you give me one third of your money, I will have Rs.75/-.", "3": "How much money did John have ?", "4": "A)22", "5": "B)60", "6": "C)28", "7": "D)26", "8": "E)18", "9": "Let the money with Mark and John are M and J, respectively.", "10": "M + J/2 = 75", "11": "M/3 + J = 75", "12": "Solving we get M = 45, and J = 60.", "13": "Answer:B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [3, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Mark told John \"If you give me half your money I will have Rs.75.', 'John said, \"if you give me one third of your money, I will have Rs.75/-.']\nquestion = 'How much money did John have ?'\nchoices = {'A': '22', 'B': '60', 'C': '28', 'D': '26', 'E': '18'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Mark told John \"If you give me half your money I will have Rs.75.', 'John said, \"if you give me one third of your money, I will have Rs.75/-.']\nnew_fact = infer_new_fact(selected) # 'Let the money with Mark and John are M and J, respectively.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Mark told John \"If you give me half your money I will have Rs.75.', 'John said, \"if you give me one third of your money, I will have Rs.75/-.', 'Let the money with Mark and John are M and J, respectively.']\nnew_fact = infer_new_fact(selected) # 'M + J/2 = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Mark told John \"If you give me half your money I will have Rs.75.', 'John said, \"if you give me one third of your money, I will have Rs.75/-.', 'Let the money with Mark and John are M and J, respectively.', 'M + J/2 = 75']\nnew_fact = infer_new_fact(selected) # 'M/3 + J = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the money with Mark and John are M and J, respectively.', 'M + J/2 = 75', 'M/3 + J = 75']\nnew_fact = infer_new_fact(selected) # 'Solving we get M = 45, and J = 60.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much money did John have ?', 'B)60', 'Solving we get M = 45, and J = 60.']\nnew_fact = infer_new_fact(selected) # 'Answer:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_106_67f21dcbe7", "context": "", "question": "The number of water lilies on a certain lake doubles every two days. If there is exactly one water lily on the lake, it takes 60 days for the lake to be fully covered with water lilies. In how many days will the lake be fully covered with lilies, if initially there were 64 water lilies on it?", "options": ["A)15", "B)28", "C)30", "D)53", "E)59"], "rationale": "Starting from 1 Water Lilly it takes 60 days.\nIf there are already two present, it can be taken as the first day is over.\nIt will take 59 more days.\nNotice that we are told thatthe number of water lilies on a certain lake doubles every two days, thus if initially there were 64 water lilies instead of one, we can consider that 7 days are over and therefore only 53 days are left.\nAnswer: D.", "answer": "D", "textual_logical_units": {"1": "The number of water lilies on a certain lake doubles every two days.", "2": "If there is exactly one water lily on the lake,", "3": "it takes 60 days for the lake to be fully covered with water lilies.", "4": "In how many days will the lake be fully covered with lilies,", "5": "if initially there were 64 water lilies on it?", "6": "A)15", "7": "B)28", "8": "C)30", "9": "D)53", "10": "E)59", "11": "Starting from 1 Water Lilly it takes 60 days.", "12": "If there are already two present, it can be taken as the first day is over.", "13": "It will take 59 more days.", "14": "Notice that we are told thatthe number of water lilies on a certain lake doubles every two days, thus if initially there were 64 water lilies instead of one, we can consider that 7 days are over and therefore only 53 days are left.", "15": "Answer: D.", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 5, 11], "consequent": 12}, {"antecedents": [1, 2, 3, 4, 5, 11, 12], "consequent": 13}, {"antecedents": [1, 3, 12, 13], "consequent": 14}, {"antecedents": [4, 5, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'The number of water lilies on a certain lake doubles every two days.',\n  'If there is exactly one water lily on the lake,',\n  'it takes 60 days for the lake to be fully covered with water lilies.',\n  'In how many days will the lake be fully covered with lilies,']\nquestion = 'if initially there were 64 water lilies on it?'\nchoices = {'A': '15', 'B': '28', 'C': '30', 'D': '53', 'E': '59'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The number of water lilies on a certain lake doubles every two days.', 'If there is exactly one water lily on the lake,', 'it takes 60 days for the lake to be fully covered with water lilies.', 'In how many days will the lake be fully covered with lilies,', 'if initially there were 64 water lilies on it?']\nnew_fact = infer_new_fact(selected) # 'Starting from 1 Water Lilly it takes 60 days.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of water lilies on a certain lake doubles every two days.', 'If there is exactly one water lily on the lake,', 'it takes 60 days for the lake to be fully covered with water lilies.', 'In how many days will the lake be fully covered with lilies,', 'if initially there were 64 water lilies on it?', 'Starting from 1 Water Lilly it takes 60 days.']\nnew_fact = infer_new_fact(selected) # 'If there are already two present, it can be taken as the first day is over.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of water lilies on a certain lake doubles every two days.', 'If there is exactly one water lily on the lake,', 'it takes 60 days for the lake to be fully covered with water lilies.', 'In how many days will the lake be fully covered with lilies,', 'if initially there were 64 water lilies on it?', 'Starting from 1 Water Lilly it takes 60 days.', 'If there are already two present, it can be taken as the first day is over.']\nnew_fact = infer_new_fact(selected) # 'It will take 59 more days.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of water lilies on a certain lake doubles every two days.', 'it takes 60 days for the lake to be fully covered with water lilies.', 'If there are already two present, it can be taken as the first day is over.', 'It will take 59 more days.']\nnew_fact = infer_new_fact(selected) # 'Notice that we are told thatthe number of water lilies on a certain lake doubles every two days, thus if initially there were 64 water lilies instead of one, we can consider that 7 days are over and therefore only 53 days are left.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many days will the lake be fully covered with lilies,', 'if initially there were 64 water lilies on it?', 'D)53', 'Notice that we are told thatthe number of water lilies on a certain lake doubles every two days, thus if initially there were 64 water lilies instead of one, we can consider that 7 days are over and therefore only 53 days are left.']\nnew_fact = infer_new_fact(selected) # 'Answer: D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_107_e14ffba4c7", "context": "", "question": "x men working x hours per day can do x units of a work in x days. How much work can be completed by y men working y hours per day in y days?", "options": ["A)x2/y2 units", "B)y3/x2 units", "C)x3/y2 units", "D)y2/x2 units", "E)None of these"], "rationale": "Amount of work completed by 1 man in 1 day, working 1 hours a day = x/x3=1/x2\nAmount of work y men in y days, working y hours a day = y3 × (1/x2) = y3/x2 . Answer : Option B", "answer": "B", "textual_logical_units": {"1": "x men working x hours per day can do x units of a work in x days.", "2": "How much work can be completed by y men working y hours per day in y days?", "3": "A)x2/y2 units", "4": "B)y3/x2 units", "5": "C)x3/y2 units", "6": "D)y2/x2 units", "7": "E)None of these", "8": "Amount of work completed by 1 man in 1 day, working 1 hours a day = x/x3=1/x2", "9": "Amount of work y men in y days, working y hours a day = y3 × (1/x2) = y3/x2 . Answer : Option B", "10": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['x men working x hours per day can do x units of a work in x days.']\nquestion = 'How much work can be completed by y men working y hours per day in y days?'\nchoices = {'A': 'x2/y2 units', 'B': 'y3/x2 units', 'C': 'x3/y2 units', 'D': 'y2/x2 units', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['x men working x hours per day can do x units of a work in x days.', 'How much work can be completed by y men working y hours per day in y days?']\nnew_fact = infer_new_fact(selected) # 'Amount of work completed by 1 man in 1 day, working 1 hours a day = x/x3=1/x2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x men working x hours per day can do x units of a work in x days.', 'How much work can be completed by y men working y hours per day in y days?', 'Amount of work completed by 1 man in 1 day, working 1 hours a day = x/x3=1/x2']\nnew_fact = infer_new_fact(selected) # 'Amount of work y men in y days, working y hours a day = y3 × (1/x2) = y3/x2 . Answer : Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Amount of work y men in y days, working y hours a day = y3 × (1/x2) = y3/x2 . Answer : Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_108_14b8d3e1b9", "context": "", "question": "ABCDE is a regular pentagon with F at its center. How many different quadrilaterals can be formed by joining 4 of the points A,B,C,D,E and F?", "options": ["A)12", "B)10", "C)5", "D)15", "E)20"], "rationale": "The number of polygons with k sides that can be formed by joining them is nCk\nfor quadrilaterals k=4\nit has 6 sides n=6\n6C4=15\nAnswer is D", "answer": "D", "textual_logical_units": {"1": "ABCDE is a regular pentagon with F at its center.", "2": "How many different quadrilaterals can be formed by joining 4 of the points A,B,C,D,E and F?", "3": "A)12", "4": "B)10", "5": "C)5", "6": "D)15", "7": "E)20", "8": "The number of polygons with k sides that can be formed by joining them is nCk", "9": "for quadrilaterals k=4", "10": "it has 6 sides n=6", "11": "6C4=15", "12": "Answer is D", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [2, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['ABCDE is a regular pentagon with F at its center.']\nquestion = 'How many different quadrilaterals can be formed by joining 4 of the points A,B,C,D,E and F?'\nchoices = {'A': '12', 'B': '10', 'C': '5', 'D': '15', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['ABCDE is a regular pentagon with F at its center.']\nnew_fact = infer_new_fact(selected) # 'The number of polygons with k sides that can be formed by joining them is nCk'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many different quadrilaterals can be formed by joining 4 of the points A,B,C,D,E and F?', 'The number of polygons with k sides that can be formed by joining them is nCk']\nnew_fact = infer_new_fact(selected) # 'for quadrilaterals k=4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of polygons with k sides that can be formed by joining them is nCk', 'for quadrilaterals k=4']\nnew_fact = infer_new_fact(selected) # 'it has 6 sides n=6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['for quadrilaterals k=4', 'it has 6 sides n=6']\nnew_fact = infer_new_fact(selected) # '6C4=15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many different quadrilaterals can be formed by joining 4 of the points A,B,C,D,E and F?', 'D)15', '6C4=15']\nnew_fact = infer_new_fact(selected) # 'Answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_109_7e01a4ab20", "context": "", "question": "Points A, B, C, D lie in this order on the circumference of a circle. Minor arc AC is 160°, and minor arc BD is 150°. If B bisects minor arc AC, then what is the measure of minor arc AD?", "options": ["A)80°", "B)130°", "C)140°", "D)160°", "E)220°"], "rationale": "B bisects minor arc AC means Arc BC is 80 degrees. Now , we have arc BD = 150, therefore CD = 70.\nNow, Arc AC = 160 , CD = 70 => Arc AD = 360-230 = 130\nAnswer B", "answer": "B", "textual_logical_units": {"1": "Points A, B, C, D lie in this order on the circumference of a circle.", "2": "Minor arc AC is 160°,", "3": "and minor arc BD is 150°.", "4": "If B bisects minor arc AC,", "5": "then what is the measure of minor arc AD?", "6": "A)80°", "7": "B)130°", "8": "C)140°", "9": "D)160°", "10": "E)220°", "11": "B bisects minor arc AC means Arc BC is 80 degrees. Now , we have arc BD = 150, therefore CD = 70.", "12": "Now, Arc AC = 160 , CD = 70 => Arc AD = 360-230 = 130", "13": "Answer B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [2, 3, 4, 5, 11], "consequent": 12}, {"antecedents": [4, 5, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Points A, B, C, D lie in this order on the circumference of a circle.', 'Minor arc AC is 160°,', 'and minor arc BD is 150°.', 'If B bisects minor arc AC,']\nquestion = 'then what is the measure of minor arc AD?'\nchoices = {'A': '80°', 'B': '130°', 'C': '140°', 'D': '160°', 'E': '220°'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Points A, B, C, D lie in this order on the circumference of a circle.', 'Minor arc AC is 160°,', 'and minor arc BD is 150°.', 'If B bisects minor arc AC,', 'then what is the measure of minor arc AD?']\nnew_fact = infer_new_fact(selected) # 'B bisects minor arc AC means Arc BC is 80 degrees. Now , we have arc BD = 150, therefore CD = 70.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Minor arc AC is 160°,', 'and minor arc BD is 150°.', 'If B bisects minor arc AC,', 'then what is the measure of minor arc AD?', 'B bisects minor arc AC means Arc BC is 80 degrees. Now , we have arc BD = 150, therefore CD = 70.']\nnew_fact = infer_new_fact(selected) # 'Now, Arc AC = 160 , CD = 70 => Arc AD = 360-230 = 130'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If B bisects minor arc AC,', 'then what is the measure of minor arc AD?', 'B)130°', 'Now, Arc AC = 160 , CD = 70 => Arc AD = 360-230 = 130']\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_110_2505e806e0", "context": "", "question": "If 75 percent of the employees of a certain company take a winter vacation, 40 percent take a winter and a summer vacation, and 20 percent take neither a winter nor a summer vacation, what Q percent of the employees take a summer vacation but not a winter vacation?", "options": ["A)5%", "B)15%", "C)25%", "D)35%", "E)45%"], "rationale": "Winter = 75\nBoth = 40\nNeither = 20\nWinter + Summer - Both + Neither = 100\n75 + Summer - 40 + 20 = 100\nSummer = 45\nSummer but not winter Q= Summer only = Summer - Both(i.e. summer overlap with winter) = 45 - 40 = 5\nAnswer: A", "answer": "A", "textual_logical_units": {"1": "If 75 percent of the employees of a certain company take a winter vacation,", "2": "40 percent take a winter and a summer vacation,", "3": "and 20 percent take neither a winter nor a summer vacation,", "4": "what Q percent of the employees take a summer vacation but not a winter vacation?", "5": "A)5%", "6": "B)15%", "7": "C)25%", "8": "D)35%", "9": "E)45%", "10": "Winter = 75", "11": "Both = 40", "12": "Neither = 20", "13": "Winter + Summer - Both + Neither = 100", "14": "75 + Summer - 40 + 20 = 100", "15": "Summer = 45", "16": "Summer but not winter Q= Summer only = Summer - Both(i.e. summer overlap with winter) = 45 - 40 = 5", "17": "Answer: A", "18": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [10, 11, 12, 13], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [10, 15], "consequent": 16}, {"antecedents": [4, 5, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'If 75 percent of the employees of a certain company take a winter vacation,',\n  '40 percent take a winter and a summer vacation,',\n  'and 20 percent take neither a winter nor a summer vacation,']\nquestion = 'what Q percent of the employees take a summer vacation but not a winter vacation?'\nchoices = {'A': '5%', 'B': '15%', 'C': '25%', 'D': '35%', 'E': '45%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If 75 percent of the employees of a certain company take a winter vacation,']\nnew_fact = infer_new_fact(selected) # 'Winter = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40 percent take a winter and a summer vacation,']\nnew_fact = infer_new_fact(selected) # 'Both = 40'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['and 20 percent take neither a winter nor a summer vacation,']\nnew_fact = infer_new_fact(selected) # 'Neither = 20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Winter = 75', 'Both = 40', 'Neither = 20']\nnew_fact = infer_new_fact(selected) # 'Winter + Summer - Both + Neither = 100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Winter = 75', 'Both = 40', 'Neither = 20', 'Winter + Summer - Both + Neither = 100']\nnew_fact = infer_new_fact(selected) # '75 + Summer - 40 + 20 = 100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Winter + Summer - Both + Neither = 100', '75 + Summer - 40 + 20 = 100']\nnew_fact = infer_new_fact(selected) # 'Summer = 45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Winter = 75', 'Summer = 45']\nnew_fact = infer_new_fact(selected) # 'Summer but not winter Q= Summer only = Summer - Both(i.e. summer overlap with winter) = 45 - 40 = 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what Q percent of the employees take a summer vacation but not a winter vacation?', 'A)5%', 'Summer but not winter Q= Summer only = Summer - Both(i.e. summer overlap with winter) = 45 - 40 = 5']\nnew_fact = infer_new_fact(selected) # 'Answer: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_111_a71b307547", "context": "", "question": "The cross-section of a canal is shaped like a trapezium. If the canal is 10 m wide at the top and 6 m wide at the bottom and the area of cross-section is 640 square meters, the depth of cannel is?", "options": ["A)26", "B)28", "C)21", "D)80", "E)23"], "rationale": "1/2 * d (10 + 6)\n= 640\nd = 80\nAnswer: D", "answer": "D", "textual_logical_units": {"1": "The cross-section of a canal is shaped like a trapezium.", "2": "If the canal is 10 m wide at the top and", "3": "6 m wide at the bottom and", "4": "the area of cross-section is 640 square meters,", "5": "the depth of cannel is?", "6": "A)26", "7": "B)28", "8": "C)21", "9": "D)80", "10": "E)23", "11": "1/2 * d (10 + 6)", "12": "= 640", "13": "d = 80", "14": "Answer: D", "15": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'The cross-section of a canal is shaped like a trapezium.',\n  'If the canal is 10 m wide at the top and',\n  '6 m wide at the bottom and',\n  'the area of cross-section is 640 square meters,']\nquestion = 'the depth of cannel is?'\nchoices = {'A': '26', 'B': '28', 'C': '21', 'D': '80', 'E': '23'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If the canal is 10 m wide at the top and', '6 m wide at the bottom and']\nnew_fact = infer_new_fact(selected) # '1/2 * d (10 + 6)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the area of cross-section is 640 square meters,']\nnew_fact = infer_new_fact(selected) # '= 640'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1/2 * d (10 + 6)', '= 640']\nnew_fact = infer_new_fact(selected) # 'd = 80'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the area of cross-section is 640 square meters,', 'the depth of cannel is?', 'd = 80']\nnew_fact = infer_new_fact(selected) # 'Answer: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_112_e3844729e9", "context": "", "question": "During one season, a tennis team won 20 matches and lost 30% of their matches. What was the number of matches that the team lost?", "options": ["A)70", "B)30", "C)3", "D)7", "E)5"], "rationale": "Knowing that the team lost 30 % of their matches, it has won 70 % of their matches\nTotal matches = 20 / (70/ 100) = 14\nHence number of matches that the team lost = 20 x 14/100 = 3=C", "answer": "C", "textual_logical_units": {"1": "During one season, a tennis team won 20 matches and", "2": "lost 30% of their matches.", "3": "What was the number of matches that the team lost?", "4": "A)70", "5": "B)30", "6": "C)3", "7": "D)7", "8": "E)5", "9": "Knowing that the team lost 30 % of their matches, it has won 70 % of their matches", "10": "Total matches = 20 / (70/ 100) = 14", "11": "Hence number of matches that the team lost = 20 x 14/100 = 3=C", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['During one season, a tennis team won 20 matches and', 'lost 30% of their matches.']\nquestion = 'What was the number of matches that the team lost?'\nchoices = {'A': '70', 'B': '30', 'C': '3', 'D': '7', 'E': '5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['During one season, a tennis team won 20 matches and', 'lost 30% of their matches.']\nnew_fact = infer_new_fact(selected) # 'Knowing that the team lost 30 % of their matches, it has won 70 % of their matches'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['During one season, a tennis team won 20 matches and', 'lost 30% of their matches.', 'Knowing that the team lost 30 % of their matches, it has won 70 % of their matches']\nnew_fact = infer_new_fact(selected) # 'Total matches = 20 / (70/ 100) = 14'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['During one season, a tennis team won 20 matches and', 'lost 30% of their matches.', 'Total matches = 20 / (70/ 100) = 14']\nnew_fact = infer_new_fact(selected) # 'Hence number of matches that the team lost = 20 x 14/100 = 3=C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence number of matches that the team lost = 20 x 14/100 = 3=C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_113_00ef258c1a", "context": "", "question": "A point on the edge of a fan blade that is rotating in a plane 10 centimeters from the center of the fan. What is the distance traveled, in centimeters, by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?", "options": ["A)750pi", "B)1500pi", "C)1875pi", "D)3000pi", "E)7500pi"], "rationale": "60 seconds - 300 revolutions\n30 seconds - 150 revolutions\ndistance travelled in 1 revolution = 2*pi*r\ndistance travelled in 150 revolutions = 300*pi*r\n= 3000pi\nAnswer is D.", "answer": "D", "textual_logical_units": {"1": "A point on the edge of a fan blade that is rotating in a plane 10 centimeters from the center of the fan.", "2": "What is the distance traveled, in centimeters,", "3": "by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?", "4": "A)750pi", "5": "B)1500pi", "6": "C)1875pi", "7": "D)3000pi", "8": "E)7500pi", "9": "60 seconds - 300 revolutions", "10": "30 seconds - 150 revolutions", "11": "distance travelled in 1 revolution = 2*pi*r", "12": "distance travelled in 150 revolutions = 300*pi*r", "13": "= 3000pi", "14": "Answer is D.", "15": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [2, 3, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [2, 3, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A point on the edge of a fan blade that is rotating in a plane 10 centimeters from the center of the fan.', 'What is the distance traveled, in centimeters,']\nquestion = 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?'\nchoices = {'A': '750pi', 'B': '1500pi', 'C': '1875pi', 'D': '3000pi', 'E': '7500pi'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What is the distance traveled, in centimeters,', 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?']\nnew_fact = infer_new_fact(selected) # '60 seconds - 300 revolutions'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance traveled, in centimeters,', 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?', '60 seconds - 300 revolutions']\nnew_fact = infer_new_fact(selected) # '30 seconds - 150 revolutions'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance traveled, in centimeters,', 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?', '30 seconds - 150 revolutions']\nnew_fact = infer_new_fact(selected) # 'distance travelled in 1 revolution = 2*pi*r'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance traveled, in centimeters,', 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?', 'distance travelled in 1 revolution = 2*pi*r']\nnew_fact = infer_new_fact(selected) # 'distance travelled in 150 revolutions = 300*pi*r'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['distance travelled in 1 revolution = 2*pi*r', 'distance travelled in 150 revolutions = 300*pi*r']\nnew_fact = infer_new_fact(selected) # '= 3000pi'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance traveled, in centimeters,', 'by this point after 30 seconds when the fan runs at the rate of 300 revolutions per minutes?', 'D)3000pi', '= 3000pi']\nnew_fact = infer_new_fact(selected) # 'Answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_114_a7176c44de", "context": "", "question": "If n is such that 36 ≤ n ≤ 72, then x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4) satisfies", "options": ["A)20 < x < 54", "B)23 < x < 58", "C)25 < x < 64", "D)28 < x < 60", "E)None of these"], "rationale": "36 ≤ n ≤ 72\nx = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4)\nPut x = 36,\nx = (362 + 2√36(36 + 4) + 16) / (36+ 4√36+ 4)\ni.e which is least value for n = 28.\nAnswer : D", "answer": "D", "textual_logical_units": {"1": "If n is such that 36 ≤ n ≤ 72,", "2": "then x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4) satisfies", "3": "A)20 < x < 54", "4": "B)23 < x < 58", "5": "C)25 < x < 64", "6": "D)28 < x < 60", "7": "E)None of these", "8": "36 ≤ n ≤ 72", "9": "x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4)", "10": "Put x = 36,", "11": "x = (362 + 2√36(36 + 4) + 16) / (36+ 4√36+ 4)", "12": "i.e which is least value for n = 28.", "13": "Answer : D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [1, 2, 6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['If n is such that 36 ≤ n ≤ 72,']\nquestion = 'then x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4) satisfies'\nchoices = {'A': '20 < x < 54', 'B': '23 < x < 58', 'C': '25 < x < 64', 'D': '28 < x < 60', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If n is such that 36 ≤ n ≤ 72,']\nnew_fact = infer_new_fact(selected) # '36 ≤ n ≤ 72'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4) satisfies']\nnew_fact = infer_new_fact(selected) # 'x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4)']\nnew_fact = infer_new_fact(selected) # 'Put x = 36,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['36 ≤ n ≤ 72', 'x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4)', 'Put x = 36,']\nnew_fact = infer_new_fact(selected) # 'x = (362 + 2√36(36 + 4) + 16) / (36+ 4√36+ 4)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x = (362 + 2√36(36 + 4) + 16) / (36+ 4√36+ 4)']\nnew_fact = infer_new_fact(selected) # 'i.e which is least value for n = 28.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If n is such that 36 ≤ n ≤ 72,', 'then x = (n2 + 2√n(n + 4) + 16) / (n+ 4√n+ 4) satisfies', 'D)28 < x < 60', 'i.e which is least value for n = 28.']\nnew_fact = infer_new_fact(selected) # 'Answer : D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_115_eaab3cf399", "context": "", "question": "At its maximum speed, a space shuttle can travel 700m high in 40 seconds. It will also take 5 seconds to pass a point. What then is the length of the space shuttle?", "options": ["A)50 m", "B)75 m", "C)100 m", "D)125 m", "E)150 m"], "rationale": "Let the length of the space shuttle be x metres and its speed be y m/sec. Then, x / y = 1 ⇒ y = x / 5\n∴ (x + 700) / 40 = x / 5 ⇔ x = 100 m. Answer C", "answer": "C", "textual_logical_units": {"1": "At its maximum speed, a space shuttle can travel 700m high in 40 seconds.", "2": "It will also take 5 seconds to pass a point.", "3": "What then is the length of the space shuttle?", "4": "A)50 m", "5": "B)75 m", "6": "C)100 m", "7": "D)125 m", "8": "E)150 m", "9": "Let the length of the space shuttle be x metres and its speed be y m/sec. Then, x / y = 1 ⇒ y = x / 5", "10": "∴ (x + 700) / 40 = x / 5 ⇔ x = 100 m. Answer C", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['At its maximum speed, a space shuttle can travel 700m high in 40 seconds.', 'It will also take 5 seconds to pass a point.']\nquestion = 'What then is the length of the space shuttle?'\nchoices = {'A': '50 m', 'B': '75 m', 'C': '100 m', 'D': '125 m', 'E': '150 m'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At its maximum speed, a space shuttle can travel 700m high in 40 seconds.', 'It will also take 5 seconds to pass a point.', 'What then is the length of the space shuttle?']\nnew_fact = infer_new_fact(selected) # 'Let the length of the space shuttle be x metres and its speed be y m/sec. Then, x / y = 1 ⇒ y = x / 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At its maximum speed, a space shuttle can travel 700m high in 40 seconds.', 'It will also take 5 seconds to pass a point.', 'What then is the length of the space shuttle?', 'Let the length of the space shuttle be x metres and its speed be y m/sec. Then, x / y = 1 ⇒ y = x / 5']\nnew_fact = infer_new_fact(selected) # '∴ (x + 700) / 40 = x / 5 ⇔ x = 100 m. Answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ (x + 700) / 40 = x / 5 ⇔ x = 100 m. Answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_116_5bdcb9fb9f", "context": "", "question": "A starts a business with Rs.40,000. After 2 months, B joined him with Rs.60,000. C joined them after some more time with Rs.120,000. At the end of the year, out of a total profit of Rs.375,000, C gets Rs.150,000 as his share. How many months after B joined the business, did C join?", "options": ["A)2 months", "B)4 months", "C)23 months", "D)24 months", "E)84 months"], "rationale": "Assume that C was there in the business for x months\nA:B:C = 40000*12 : 60000*10 : 120000*x\n= 40*12 : 60*10 : 120x = 40 : 5*10 : 10x\n=8 : 10 : 2x\n= 4 : 5 : x\nC's share = 375000*x/(9+x) = 150000\n=> 375x/(9+x) = 150\n=> 15x = 6(9+x)\n=> 5x = 18 + 2x\n=> 3x = 18\n=> x = 18/3 = 6\nIt means C was there in the business for 6 months. Given that B joined the business\nafter 2 months. Hence C joined after 4 months after B joined\nAnswer is B", "answer": "B", "textual_logical_units": {"1": "A starts a business with Rs.40,000.", "2": "After 2 months, B joined him with Rs.60,000.", "3": "C joined them after some more time with Rs.120,000.", "4": "At the end of the year,", "5": "out of a total profit of Rs.375,000,", "6": "C gets Rs.150,000 as his share.", "7": "How many months after B joined the business, did C join?", "8": "A)2 months", "9": "B)4 months", "10": "C)23 months", "11": "D)24 months", "12": "E)84 months", "13": "Assume that C was there in the business for x months", "14": "A:B:C = 40000*12 : 60000*10 : 120000*x", "15": "= 40*12 : 60*10 : 120x = 40 : 5*10 : 10x", "16": "=8 : 10 : 2x", "17": "= 4 : 5 : x", "18": "C's share = 375000*x/(9+x) = 150000", "19": "=> 375x/(9+x) = 150", "20": "=> 15x = 6(9+x)", "21": "=> 5x = 18 + 2x", "22": "=> 3x = 18", "23": "=> x = 18/3 = 6", "24": "It means C was there in the business for 6 months. Given that B joined the business", "25": "after 2 months. Hence C joined after 4 months after B joined", "26": "Answer is B", "27": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [3, 6, 7], "consequent": 13}, {"antecedents": [1, 2, 3, 4, 13], "consequent": 14}, {"antecedents": [1, 2, 3, 4, 13, 14], "consequent": 15}, {"antecedents": [13, 14, 15], "consequent": 16}, {"antecedents": [13, 14, 15, 16], "consequent": 17}, {"antecedents": [5, 6], "consequent": 18}, {"antecedents": [5, 6, 18], "consequent": 19}, {"antecedents": [5, 6, 18, 19], "consequent": 20}, {"antecedents": [5, 6, 18, 19, 20], "consequent": 21}, {"antecedents": [5, 6, 18, 19, 20, 21], "consequent": 22}, {"antecedents": [5, 6, 18, 19, 20, 21, 22], "consequent": 23}, {"antecedents": [3, 4, 5, 6, 13, 14, 18], "consequent": 24}, {"antecedents": [2, 3, 4, 5, 6, 7, 13, 14, 18], "consequent": 25}, {"antecedents": [7, 9, 24, 25], "consequent": 26}, {"antecedents": [26], "consequent": 27}], "metadata": [], "code_input": "####\nfacts = [ 'A starts a business with Rs.40,000.',\n  'After 2 months, B joined him with Rs.60,000.',\n  'C joined them after some more time with Rs.120,000.',\n  'At the end of the year,',\n  'out of a total profit of Rs.375,000,',\n  'C gets Rs.150,000 as his share.']\nquestion = 'How many months after B joined the business, did C join?'\nchoices = {'A': '2 months', 'B': '4 months', 'C': '23 months', 'D': '24 months', 'E': '84 months'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['C joined them after some more time with Rs.120,000.', 'C gets Rs.150,000 as his share.', 'How many months after B joined the business, did C join?']\nnew_fact = infer_new_fact(selected) # 'Assume that C was there in the business for x months'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A starts a business with Rs.40,000.', 'After 2 months, B joined him with Rs.60,000.', 'C joined them after some more time with Rs.120,000.', 'At the end of the year,', 'Assume that C was there in the business for x months']\nnew_fact = infer_new_fact(selected) # 'A:B:C = 40000*12 : 60000*10 : 120000*x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A starts a business with Rs.40,000.', 'After 2 months, B joined him with Rs.60,000.', 'C joined them after some more time with Rs.120,000.', 'At the end of the year,', 'Assume that C was there in the business for x months', 'A:B:C = 40000*12 : 60000*10 : 120000*x']\nnew_fact = infer_new_fact(selected) # '= 40*12 : 60*10 : 120x = 40 : 5*10 : 10x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Assume that C was there in the business for x months', 'A:B:C = 40000*12 : 60000*10 : 120000*x', '= 40*12 : 60*10 : 120x = 40 : 5*10 : 10x']\nnew_fact = infer_new_fact(selected) # '=8 : 10 : 2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Assume that C was there in the business for x months', 'A:B:C = 40000*12 : 60000*10 : 120000*x', '= 40*12 : 60*10 : 120x = 40 : 5*10 : 10x', '=8 : 10 : 2x']\nnew_fact = infer_new_fact(selected) # '= 4 : 5 : x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.']\nnew_fact = infer_new_fact(selected) # \"C's share = 375000*x/(9+x) = 150000\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', \"C's share = 375000*x/(9+x) = 150000\"]\nnew_fact = infer_new_fact(selected) # '=> 375x/(9+x) = 150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', \"C's share = 375000*x/(9+x) = 150000\", '=> 375x/(9+x) = 150']\nnew_fact = infer_new_fact(selected) # '=> 15x = 6(9+x)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', \"C's share = 375000*x/(9+x) = 150000\", '=> 375x/(9+x) = 150', '=> 15x = 6(9+x)']\nnew_fact = infer_new_fact(selected) # '=> 5x = 18 + 2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', \"C's share = 375000*x/(9+x) = 150000\", '=> 375x/(9+x) = 150', '=> 15x = 6(9+x)', '=> 5x = 18 + 2x']\nnew_fact = infer_new_fact(selected) # '=> 3x = 18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', \"C's share = 375000*x/(9+x) = 150000\", '=> 375x/(9+x) = 150', '=> 15x = 6(9+x)', '=> 5x = 18 + 2x', '=> 3x = 18']\nnew_fact = infer_new_fact(selected) # '=> x = 18/3 = 6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['C joined them after some more time with Rs.120,000.', 'At the end of the year,', 'out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', 'Assume that C was there in the business for x months', 'A:B:C = 40000*12 : 60000*10 : 120000*x', \"C's share = 375000*x/(9+x) = 150000\"]\nnew_fact = infer_new_fact(selected) # 'It means C was there in the business for 6 months. Given that B joined the business'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After 2 months, B joined him with Rs.60,000.', 'C joined them after some more time with Rs.120,000.', 'At the end of the year,', 'out of a total profit of Rs.375,000,', 'C gets Rs.150,000 as his share.', 'How many months after B joined the business, did C join?', 'Assume that C was there in the business for x months', 'A:B:C = 40000*12 : 60000*10 : 120000*x', \"C's share = 375000*x/(9+x) = 150000\"]\nnew_fact = infer_new_fact(selected) # 'after 2 months. Hence C joined after 4 months after B joined'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many months after B joined the business, did C join?', 'B)4 months', 'It means C was there in the business for 6 months. Given that B joined the business', 'after 2 months. Hence C joined after 4 months after B joined']\nnew_fact = infer_new_fact(selected) # 'Answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_117_5741683b93", "context": "", "question": "A paper is in a square form whose one side is 20 cm. Two semi circles are drawn on its opposites as diameters. If these semi circles are cut down what is the area of the remaining paper?", "options": ["A)8.75", "B)8.79", "C)8.75", "D)8.71", "E)8.72"], "rationale": "(5 * 3.5)/2 = 8.75\nAnswer:C", "answer": "C", "textual_logical_units": {"1": "A paper is in a square form whose one side is 20 cm.", "2": "Two semi circles are drawn on its opposites as diameters.", "3": "If these semi circles are cut down what is the area of the remaining paper?", "4": "A)8.75", "5": "B)8.79", "6": "C)8.75", "7": "D)8.71", "8": "E)8.72", "9": "(5 * 3.5)/2 = 8.75", "10": "Answer:C", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [3, 6, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['A paper is in a square form whose one side is 20 cm.', 'Two semi circles are drawn on its opposites as diameters.']\nquestion = 'If these semi circles are cut down what is the area of the remaining paper?'\nchoices = {'A': '8.75', 'B': '8.79', 'C': '8.75', 'D': '8.71', 'E': '8.72'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A paper is in a square form whose one side is 20 cm.', 'Two semi circles are drawn on its opposites as diameters.', 'If these semi circles are cut down what is the area of the remaining paper?']\nnew_fact = infer_new_fact(selected) # '(5 * 3.5)/2 = 8.75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If these semi circles are cut down what is the area of the remaining paper?', 'C)8.75', '(5 * 3.5)/2 = 8.75']\nnew_fact = infer_new_fact(selected) # 'Answer:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_118_2e4000bace", "context": "", "question": "An athlete runs M miles in 4 hours, then rides a bike N miles in the same number of hours. Which of the following represents the average speed, in miles per hour, for these two activities combined?", "options": ["A)M + N / 8", "B)2M + N / 8", "C)M + N / 4", "D)M + 3N / 8", "E)M + N / 5"], "rationale": "M + N / 8\nformular for avg speed is total distance / total time\nTime spent running = 4 and the time spent biking = 4\ntotal time is 4 + 4 = 8\nTotal distance is M+ N\nThus A", "answer": "A", "textual_logical_units": {"1": "An athlete runs M miles in 4 hours,", "2": "then rides a bike N miles in the same number of hours.", "3": "Which of the following represents the average speed, in miles per hour,", "4": "for these two activities combined?", "5": "A)M + N / 8", "6": "B)2M + N / 8", "7": "C)M + N / 4", "8": "D)M + 3N / 8", "9": "E)M + N / 5", "10": "M + N / 8", "11": "formular for avg speed is total distance / total time", "12": "Time spent running = 4 and the time spent biking = 4", "13": "total time is 4 + 4 = 8", "14": "Total distance is M+ N", "15": "Thus A", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [1, 2], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [10, 13], "consequent": 14}, {"antecedents": [3, 4, 5, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'An athlete runs M miles in 4 hours,',\n  'then rides a bike N miles in the same number of hours.',\n  'Which of the following represents the average speed, in miles per hour,']\nquestion = 'for these two activities combined?'\nchoices = {'A': 'M + N / 8', 'B': '2M + N / 8', 'C': 'M + N / 4', 'D': 'M + 3N / 8', 'E': 'M + N / 5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['An athlete runs M miles in 4 hours,', 'then rides a bike N miles in the same number of hours.']\nnew_fact = infer_new_fact(selected) # 'M + N / 8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which of the following represents the average speed, in miles per hour,']\nnew_fact = infer_new_fact(selected) # 'formular for avg speed is total distance / total time'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['An athlete runs M miles in 4 hours,', 'then rides a bike N miles in the same number of hours.']\nnew_fact = infer_new_fact(selected) # 'Time spent running = 4 and the time spent biking = 4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Time spent running = 4 and the time spent biking = 4']\nnew_fact = infer_new_fact(selected) # 'total time is 4 + 4 = 8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['M + N / 8', 'total time is 4 + 4 = 8']\nnew_fact = infer_new_fact(selected) # 'Total distance is M+ N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Which of the following represents the average speed, in miles per hour,', 'for these two activities combined?', 'A)M + N / 8', 'Total distance is M+ N']\nnew_fact = infer_new_fact(selected) # 'Thus A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Thus A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_119_27c4a76619", "context": "", "question": "8 man work for 6 days to complete a work. How many men are required to complete same work in 1/2 day.", "options": ["A)93 men", "B)94 men", "C)95 men", "D)96 men", "E)97 men"], "rationale": "To complete a work for 6 days, 8 men are required.\nFor completing a work in 1 day = 6*8\n= 48 men\nFor completing a work in half a day (1/2) = 48*2\n= 96 men\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "8 man work for 6 days to complete a work.", "2": "How many men are required to complete same work in 1/2 day.", "3": "A)93 men", "4": "B)94 men", "5": "C)95 men", "6": "D)96 men", "7": "E)97 men", "8": "To complete a work for 6 days, 8 men are required.", "9": "For completing a work in 1 day = 6*8", "10": "= 48 men", "11": "For completing a work in half a day (1/2) = 48*2", "12": "= 96 men", "13": "ANSWER:D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [8, 9], "consequent": 10}, {"antecedents": [2, 8, 9, 10], "consequent": 11}, {"antecedents": [8, 9, 10, 11], "consequent": 12}, {"antecedents": [2, 6, 8, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['8 man work for 6 days to complete a work.']\nquestion = 'How many men are required to complete same work in 1/2 day.'\nchoices = {'A': '93 men', 'B': '94 men', 'C': '95 men', 'D': '96 men', 'E': '97 men'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['8 man work for 6 days to complete a work.']\nnew_fact = infer_new_fact(selected) # 'To complete a work for 6 days, 8 men are required.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8 man work for 6 days to complete a work.', 'To complete a work for 6 days, 8 men are required.']\nnew_fact = infer_new_fact(selected) # 'For completing a work in 1 day = 6*8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['To complete a work for 6 days, 8 men are required.', 'For completing a work in 1 day = 6*8']\nnew_fact = infer_new_fact(selected) # '= 48 men'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many men are required to complete same work in 1/2 day.', 'To complete a work for 6 days, 8 men are required.', 'For completing a work in 1 day = 6*8', '= 48 men']\nnew_fact = infer_new_fact(selected) # 'For completing a work in half a day (1/2) = 48*2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['To complete a work for 6 days, 8 men are required.', 'For completing a work in 1 day = 6*8', '= 48 men', 'For completing a work in half a day (1/2) = 48*2']\nnew_fact = infer_new_fact(selected) # '= 96 men'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many men are required to complete same work in 1/2 day.', 'D)96 men', 'To complete a work for 6 days, 8 men are required.', 'For completing a work in 1 day = 6*8', '= 48 men', 'For completing a work in half a day (1/2) = 48*2', '= 96 men']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_120_8806663244", "context": "", "question": "64 boys and 40 girls form a group for social work. During their membership drive, the same number of boys and girls joined the group. How many members does the group have now, if the ratio of boys to girls is 4:3?", "options": ["A)277", "B)288", "C)200", "D)277", "E)168"], "rationale": "Let us say x boys and x girls joined the group.\n(64 + x)/(40 + x) = 4/3\n192 + 3x = 160 + 4x => x = 32\nNumber of members in the group = 64 + x + 40 + x\n= 104 + 2x = 168.\nAnswer:E", "answer": "E", "textual_logical_units": {"1": "64 boys and 40 girls form a group for social work.", "2": "During their membership drive, the same number of boys and girls joined the group.", "3": "How many members does the group have now,", "4": "if the ratio of boys to girls is 4:3?", "5": "A)277", "6": "B)288", "7": "C)200", "8": "D)277", "9": "E)168", "10": "Let us say x boys and x girls joined the group.", "11": "(64 + x)/(40 + x) = 4/3", "12": "192 + 3x = 160 + 4x => x = 32", "13": "Number of members in the group = 64 + x + 40 + x", "14": "= 104 + 2x = 168.", "15": "Answer:E", "16": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 10}, {"antecedents": [1, 2, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [3, 4, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ '64 boys and 40 girls form a group for social work.',\n  'During their membership drive, the same number of boys and girls joined the group.',\n  'How many members does the group have now,']\nquestion = 'if the ratio of boys to girls is 4:3?'\nchoices = {'A': '277', 'B': '288', 'C': '200', 'D': '277', 'E': '168'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['During their membership drive, the same number of boys and girls joined the group.']\nnew_fact = infer_new_fact(selected) # 'Let us say x boys and x girls joined the group.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['64 boys and 40 girls form a group for social work.', 'During their membership drive, the same number of boys and girls joined the group.', 'if the ratio of boys to girls is 4:3?', 'Let us say x boys and x girls joined the group.']\nnew_fact = infer_new_fact(selected) # '(64 + x)/(40 + x) = 4/3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64 + x)/(40 + x) = 4/3']\nnew_fact = infer_new_fact(selected) # '192 + 3x = 160 + 4x => x = 32'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64 + x)/(40 + x) = 4/3', '192 + 3x = 160 + 4x => x = 32']\nnew_fact = infer_new_fact(selected) # 'Number of members in the group = 64 + x + 40 + x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(64 + x)/(40 + x) = 4/3', '192 + 3x = 160 + 4x => x = 32', 'Number of members in the group = 64 + x + 40 + x']\nnew_fact = infer_new_fact(selected) # '= 104 + 2x = 168.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many members does the group have now,', 'if the ratio of boys to girls is 4:3?', 'E)168', '= 104 + 2x = 168.']\nnew_fact = infer_new_fact(selected) # 'Answer:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_121_02b3feffab", "context": "", "question": "A cyclist travels at 12 miles per hour. How many minutes will it take to travel 48 miles?", "options": ["A)1", "B)240", "C)30", "D)60", "E)120"], "rationale": "At 12 miles per hour, to cover 48 miles the cyclist will need 4 hours or 240 minutes.\nAnswer: B.", "answer": "B", "textual_logical_units": {"1": "A cyclist travels at 12 miles per hour.", "2": "How many minutes will it take to travel 48 miles?", "3": "A)1", "4": "B)240", "5": "C)30", "6": "D)60", "7": "E)120", "8": "At 12 miles per hour, to cover 48 miles the cyclist will need 4 hours or 240 minutes.", "9": "Answer: B.", "10": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 4, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['A cyclist travels at 12 miles per hour.']\nquestion = 'How many minutes will it take to travel 48 miles?'\nchoices = {'A': '1', 'B': '240', 'C': '30', 'D': '60', 'E': '120'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A cyclist travels at 12 miles per hour.', 'How many minutes will it take to travel 48 miles?']\nnew_fact = infer_new_fact(selected) # 'At 12 miles per hour, to cover 48 miles the cyclist will need 4 hours or 240 minutes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many minutes will it take to travel 48 miles?', 'B)240', 'At 12 miles per hour, to cover 48 miles the cyclist will need 4 hours or 240 minutes.']\nnew_fact = infer_new_fact(selected) # 'Answer: B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_122_085bceded4", "context": "", "question": "Kevin drove from A to B at a constant speed of 70 mph. Once he reached B, he turned right around with pause, and returned to A at a constant speed of 90 mph. Exactly 3 hours before the end of his trip, he was still approaching B, only 70 miles away from it. What is the distance between A and B?", "options": ["A)180", "B)90", "C)270", "D)360", "E)None of the above"], "rationale": "In the last 70 miles of his approach to B, Kevin was traveling at 70 mph, so he traveled that distance in 1 hr, or 60 minutes. That means, when he arrived at B, 60 minutes had elapsed, and he took (3 hr) – (1 hr) = 2 hr to drive the distance D at 90 mph.\nD = RT = (90 mph)[ (2 hr] = 180 mi\nAnswer = (A)", "answer": "A", "textual_logical_units": {"1": "Kevin drove from A to B at a constant speed of 70 mph.", "2": "Once he reached B, he turned right around with pause,", "3": "and returned to A at a constant speed of 90 mph.", "4": "Exactly 3 hours before the end of his trip,", "5": "he was still approaching B,", "6": "only 70 miles away from it.", "7": "What is the distance between A and B?", "8": "A)180", "9": "B)90", "10": "C)270", "11": "D)360", "12": "E)None of the above", "13": "In the last 70 miles of his approach to B, Kevin was traveling at 70 mph, so he traveled that distance in 1 hr, or 60 minutes. That means, when he arrived at B, 60 minutes had elapsed, and he took (3 hr) – (1 hr) = 2 hr to drive the distance D at 90 mph.", "14": "D = RT = (90 mph)[ (2 hr] = 180 mi", "15": "Answer = (A)", "16": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 3, 4, 6], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [7, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Kevin drove from A to B at a constant speed of 70 mph.',\n  'Once he reached B, he turned right around with pause,',\n  'and returned to A at a constant speed of 90 mph.',\n  'Exactly 3 hours before the end of his trip,',\n  'he was still approaching B,',\n  'only 70 miles away from it.']\nquestion = 'What is the distance between A and B?'\nchoices = {'A': '180', 'B': '90', 'C': '270', 'D': '360', 'E': 'None of the above'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Kevin drove from A to B at a constant speed of 70 mph.', 'and returned to A at a constant speed of 90 mph.', 'Exactly 3 hours before the end of his trip,', 'only 70 miles away from it.']\nnew_fact = infer_new_fact(selected) # 'In the last 70 miles of his approach to B, Kevin was traveling at 70 mph, so he traveled that distance in 1 hr, or 60 minutes. That means, when he arrived at B, 60 minutes had elapsed, and he took (3 hr) – (1 hr) = 2 hr to drive the distance D at 90 mph.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In the last 70 miles of his approach to B, Kevin was traveling at 70 mph, so he traveled that distance in 1 hr, or 60 minutes. That means, when he arrived at B, 60 minutes had elapsed, and he took (3 hr) – (1 hr) = 2 hr to drive the distance D at 90 mph.']\nnew_fact = infer_new_fact(selected) # 'D = RT = (90 mph)[ (2 hr] = 180 mi'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the distance between A and B?', 'A)180', 'D = RT = (90 mph)[ (2 hr] = 180 mi']\nnew_fact = infer_new_fact(selected) # 'Answer = (A)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer = (A)']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_123_949ba93b1d", "context": "", "question": "30 is subtracted from a number, it is reduced to its one third. What is the value of 50% of that number?", "options": ["A)22.5", "B)84", "C)21", "D)24", "E)25"], "rationale": "2/3 x = 30 => x = 45\n45 * 1/2 = 22.5\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "30 is subtracted from a number,", "2": "it is reduced to its one third.", "3": "What is the value of 50% of that number?", "4": "A)22.5", "5": "B)84", "6": "C)21", "7": "D)24", "8": "E)25", "9": "2/3 x = 30 => x = 45", "10": "45 * 1/2 = 22.5", "11": "ANSWER:A", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['30 is subtracted from a number,', 'it is reduced to its one third.']\nquestion = 'What is the value of 50% of that number?'\nchoices = {'A': '22.5', 'B': '84', 'C': '21', 'D': '24', 'E': '25'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['30 is subtracted from a number,', 'it is reduced to its one third.']\nnew_fact = infer_new_fact(selected) # '2/3 x = 30 => x = 45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the value of 50% of that number?', '2/3 x = 30 => x = 45']\nnew_fact = infer_new_fact(selected) # '45 * 1/2 = 22.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the value of 50% of that number?', 'A)22.5', '45 * 1/2 = 22.5']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_124_6014d8a626", "context": "", "question": "If a man rows at the rate of 4 kmph in still water and his rate against the current is 2 kmph, then the man's rate along the current is:", "options": ["A)15 kmph", "B)6 kmph", "C)12 kmph", "D)14 kmph", "E)6 kmph"], "rationale": "The speed of the current is 4-2=2 kmph. Thus, if the man navigates along the current his speed is 6kmph. Answer: E", "answer": "E", "textual_logical_units": {"1": "If a man rows at the rate of 4 kmph in still water and", "2": "his rate against the current is 2 kmph,", "3": "then the man's rate along the current is:", "4": "A)15 kmph", "5": "B)6 kmph", "6": "C)12 kmph", "7": "D)14 kmph", "8": "E)6 kmph", "9": "The speed of the current is 4-2=2 kmph. Thus, if the man navigates along the current his speed is 6kmph. Answer: E", "10": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['If a man rows at the rate of 4 kmph in still water and', 'his rate against the current is 2 kmph,']\nquestion = \"then the man's rate along the current is:\"\nchoices = {'A': '15 kmph', 'B': '6 kmph', 'C': '12 kmph', 'D': '14 kmph', 'E': '6 kmph'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If a man rows at the rate of 4 kmph in still water and', 'his rate against the current is 2 kmph,', \"then the man's rate along the current is:\", 'E)6 kmph']\nnew_fact = infer_new_fact(selected) # 'The speed of the current is 4-2=2 kmph. Thus, if the man navigates along the current his speed is 6kmph. Answer: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The speed of the current is 4-2=2 kmph. Thus, if the man navigates along the current his speed is 6kmph. Answer: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_125_5cbaa446b8", "context": "", "question": "The sum of the digits of a three digit number is 17, and the sum of the squares of its digits is 109. If we subtract 495 from the number, we shall get a number consisting of the same digits written in the reverse order. Find the number.", "options": ["A)368", "B)377", "C)288", "D)997", "E)112"], "rationale": "Sum of the squares should be equal to 109. Only Options B and D satisfying. When we subtract 495, only 863 becomes 368\nAnswer:A", "answer": "A", "textual_logical_units": {"1": "The sum of the digits of a three digit number is 17,", "2": "and the sum of the squares of its digits is 109.", "3": "If we subtract 495 from the number,", "4": "we shall get a number consisting of the same digits written in the reverse order.", "5": "Find the number.", "6": "A)368", "7": "B)377", "8": "C)288", "9": "D)997", "10": "E)112", "11": "Sum of the squares should be equal to 109. Only Options B and D satisfying. When we subtract 495, only 863 becomes 368", "12": "Answer:A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5, 7, 9], "consequent": 11}, {"antecedents": [5, 6, 9], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'The sum of the digits of a three digit number is 17,',\n  'and the sum of the squares of its digits is 109.',\n  'If we subtract 495 from the number,',\n  'we shall get a number consisting of the same digits written in the reverse order.']\nquestion = 'Find the number.'\nchoices = {'A': '368', 'B': '377', 'C': '288', 'D': '997', 'E': '112'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['and the sum of the squares of its digits is 109.', 'If we subtract 495 from the number,', 'we shall get a number consisting of the same digits written in the reverse order.', 'Find the number.', 'B)377', 'D)997']\nnew_fact = infer_new_fact(selected) # 'Sum of the squares should be equal to 109. Only Options B and D satisfying. When we subtract 495, only 863 becomes 368'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the number.', 'A)368', 'D)997']\nnew_fact = infer_new_fact(selected) # 'Answer:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_126_a5b5f4a0dc", "context": "", "question": "X and Y are two alloys which were made by mixing zinc and copper in the ratio 6:9 and 7:11, respectively. If 40 grams of alloy X and 60 grams of alloy Y are melted and mixed to form alloy Z, what is the ratio of zinc and copper in the alloy Z ?", "options": ["A)69:91", "B)59:91", "C)59:90", "D)59:91", "E)69:101"], "rationale": "The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.\n40 grams of mixture 1 contains 6*40/15=16 grams of zinc and 24 grams of copper\n60 grams of mixture 2 contains 7*60/18=77/3 grams of zinc and 110/3 grams of copper\nThus, ratio =(16+77/3)/(24+110/3) =59/91\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "X and Y are two alloys which were made by mixing zinc and", "2": "copper in the ratio 6:9 and 7:11, respectively.", "3": "If 40 grams of alloy X and", "4": "60 grams of alloy Y are melted and", "5": "mixed to form alloy Z,", "6": "what is the ratio of zinc and", "7": "copper in the alloy Z ?", "8": "A)69:91", "9": "B)59:91", "10": "C)59:90", "11": "D)59:91", "12": "E)69:101", "13": "The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.", "14": "40 grams of mixture 1 contains 6*40/15=16 grams of zinc and 24 grams of copper", "15": "60 grams of mixture 2 contains 7*60/18=77/3 grams of zinc and 110/3 grams of copper", "16": "Thus, ratio =(16+77/3)/(24+110/3) =59/91", "17": "ANSWER:B", "18": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 13}, {"antecedents": [3, 13], "consequent": 14}, {"antecedents": [4, 13], "consequent": 15}, {"antecedents": [14, 15], "consequent": 16}, {"antecedents": [6, 7, 9, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'X and Y are two alloys which were made by mixing zinc and',\n  'copper in the ratio 6:9 and 7:11, respectively.',\n  'If 40 grams of alloy X and',\n  '60 grams of alloy Y are melted and',\n  'mixed to form alloy Z,',\n  'what is the ratio of zinc and']\nquestion = 'copper in the alloy Z ?'\nchoices = {'A': '69:91', 'B': '59:91', 'C': '59:90', 'D': '59:91', 'E': '69:101'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['X and Y are two alloys which were made by mixing zinc and', 'copper in the ratio 6:9 and 7:11, respectively.']\nnew_fact = infer_new_fact(selected) # 'The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 40 grams of alloy X and', 'The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.']\nnew_fact = infer_new_fact(selected) # '40 grams of mixture 1 contains 6*40/15=16 grams of zinc and 24 grams of copper'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['60 grams of alloy Y are melted and', 'The ratio of zinc and copper in mixture 1 is 6/9 and in mixture 2 is 7/11.']\nnew_fact = infer_new_fact(selected) # '60 grams of mixture 2 contains 7*60/18=77/3 grams of zinc and 110/3 grams of copper'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40 grams of mixture 1 contains 6*40/15=16 grams of zinc and 24 grams of copper', '60 grams of mixture 2 contains 7*60/18=77/3 grams of zinc and 110/3 grams of copper']\nnew_fact = infer_new_fact(selected) # 'Thus, ratio =(16+77/3)/(24+110/3) =59/91'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the ratio of zinc and', 'copper in the alloy Z ?', 'B)59:91', 'Thus, ratio =(16+77/3)/(24+110/3) =59/91']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_127_b70098332e", "context": "", "question": "The nefarious bandit Hoopsmot decides to go in with his criminal partner Smolapon to purchase a number of senators. Hoopsmot contributes $16,000 to their bribery pool, and Smolapon contributes just $4,000. Their total allows them to influence 30 senators. How many senators of these can be considered Hoopsmot's?", "options": ["A)18", "B)20", "C)22", "D)24", "E)26"], "rationale": "A = 16000\nB = 4000\nA share 16 parts & B share 4 parts\nTotal 20 parts -----> 30\n----> 1 part -------> 1.5\nA share = 16 parts -----> 24\nD", "answer": "D", "textual_logical_units": {"1": "The nefarious bandit Hoopsmot decides to go in with his criminal partner Smolapon to purchase a number of senators.", "2": "Hoopsmot contributes $16,000 to their bribery pool,", "3": "and Smolapon contributes just $4,000.", "4": "Their total allows them to influence 30 senators.", "5": "How many senators of these can be considered Hoopsmot's?", "6": "A)18", "7": "B)20", "8": "C)22", "9": "D)24", "10": "E)26", "11": "A = 16000", "12": "B = 4000", "13": "A share 16 parts & B share 4 parts", "14": "Total 20 parts -----> 30", "15": "----> 1 part -------> 1.5", "16": "A share = 16 parts -----> 24", "17": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [5, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'The nefarious bandit Hoopsmot decides to go in with his criminal partner Smolapon to purchase a number of senators.',\n  'Hoopsmot contributes $16,000 to their bribery pool,',\n  'and Smolapon contributes just $4,000.',\n  'Their total allows them to influence 30 senators.']\nquestion = \"How many senators of these can be considered Hoopsmot's?\"\nchoices = {'A': '18', 'B': '20', 'C': '22', 'D': '24', 'E': '26'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Hoopsmot contributes $16,000 to their bribery pool,']\nnew_fact = infer_new_fact(selected) # 'A = 16000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['and Smolapon contributes just $4,000.']\nnew_fact = infer_new_fact(selected) # 'B = 4000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A = 16000', 'B = 4000']\nnew_fact = infer_new_fact(selected) # 'A share 16 parts & B share 4 parts'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Their total allows them to influence 30 senators.', 'A share 16 parts & B share 4 parts']\nnew_fact = infer_new_fact(selected) # 'Total 20 parts -----> 30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total 20 parts -----> 30']\nnew_fact = infer_new_fact(selected) # '----> 1 part -------> 1.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"How many senators of these can be considered Hoopsmot's?\", '----> 1 part -------> 1.5']\nnew_fact = infer_new_fact(selected) # 'A share = 16 parts -----> 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A share = 16 parts -----> 24']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_128_3f14983bae", "context": "", "question": "The difference between the squares of two numbers is 256000 and the sum of the numbers is 1000. The numbers are", "options": ["A)600, 400", "B)628, 372", "C)640, 360", "D)None of these", "E)Cannot be determined"], "rationale": "Let the numbers be x and y.\nThen, x^2 - y^2 = 256000 and x + y = 1000.\nOn dividing we get : x - y = 256.\n‹=›Solving x + y = 1000 and x - y = 256,\n‹=›we get : x = 628 and y = 372.\nAnswer B", "answer": "B", "textual_logical_units": {"1": "The difference between the squares of two numbers is 256000 and", "2": "the sum of the numbers is 1000.", "3": "The numbers are", "4": "A)600, 400", "5": "B)628, 372", "6": "C)640, 360", "7": "D)None of these", "8": "E)Cannot be determined", "9": "Let the numbers be x and y.", "10": "Then, x^2 - y^2 = 256000 and x + y = 1000.", "11": "On dividing we get : x - y = 256.", "12": "‹=›Solving x + y = 1000 and x - y = 256,", "13": "‹=›we get : x = 628 and y = 372.", "14": "Answer B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 5, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['The difference between the squares of two numbers is 256000 and', 'the sum of the numbers is 1000.']\nquestion = 'The numbers are'\nchoices = {'A': '600, 400', 'B': '628, 372', 'C': '640, 360', 'D': 'None of these', 'E': 'Cannot be determined'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let the numbers be x and y.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The difference between the squares of two numbers is 256000 and', 'the sum of the numbers is 1000.', 'Let the numbers be x and y.']\nnew_fact = infer_new_fact(selected) # 'Then, x^2 - y^2 = 256000 and x + y = 1000.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, x^2 - y^2 = 256000 and x + y = 1000.']\nnew_fact = infer_new_fact(selected) # 'On dividing we get : x - y = 256.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, x^2 - y^2 = 256000 and x + y = 1000.', 'On dividing we get : x - y = 256.']\nnew_fact = infer_new_fact(selected) # '‹=›Solving x + y = 1000 and x - y = 256,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['‹=›Solving x + y = 1000 and x - y = 256,']\nnew_fact = infer_new_fact(selected) # '‹=›we get : x = 628 and y = 372.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The numbers are', 'B)628, 372', '‹=›we get : x = 628 and y = 372.']\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_129_6ac95d9a9f", "context": "", "question": "An astronaut weighing 211 pounds on Earth would weigh 182 pounds on Venus. The weight of the astronaut on Venus would be approximately what percent of the astronaut’s weight on Earth?", "options": ["A)50%", "B)60%", "C)70%", "D)86%", "E)90%"], "rationale": "Weight of astronaut on Earth = 211 pounds\nWeight of astronaut on Venus = 182 pounds\nWeight of astronaut on Venus as a percentage of Weight of astronaut on Earth = (182/211)*100 = 86%\nAnswer D", "answer": "D", "textual_logical_units": {"1": "An astronaut weighing 211 pounds on Earth would weigh 182 pounds on Venus.", "2": "The weight of the astronaut on Venus would be approximately what percent of the astronaut’s weight on Earth?", "3": "A)50%", "4": "B)60%", "5": "C)70%", "6": "D)86%", "7": "E)90%", "8": "Weight of astronaut on Earth = 211 pounds", "9": "Weight of astronaut on Venus = 182 pounds", "10": "Weight of astronaut on Venus as a percentage of Weight of astronaut on Earth = (182/211)*100 = 86%", "11": "Answer D", "12": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [2, 8, 9], "consequent": 10}, {"antecedents": [2, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['An astronaut weighing 211 pounds on Earth would weigh 182 pounds on Venus.']\nquestion = 'The weight of the astronaut on Venus would be approximately what percent of the astronaut’s weight on Earth?'\nchoices = {'A': '50%', 'B': '60%', 'C': '70%', 'D': '86%', 'E': '90%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['An astronaut weighing 211 pounds on Earth would weigh 182 pounds on Venus.']\nnew_fact = infer_new_fact(selected) # 'Weight of astronaut on Earth = 211 pounds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['An astronaut weighing 211 pounds on Earth would weigh 182 pounds on Venus.']\nnew_fact = infer_new_fact(selected) # 'Weight of astronaut on Venus = 182 pounds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The weight of the astronaut on Venus would be approximately what percent of the astronaut’s weight on Earth?', 'Weight of astronaut on Earth = 211 pounds', 'Weight of astronaut on Venus = 182 pounds']\nnew_fact = infer_new_fact(selected) # 'Weight of astronaut on Venus as a percentage of Weight of astronaut on Earth = (182/211)*100 = 86%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The weight of the astronaut on Venus would be approximately what percent of the astronaut’s weight on Earth?', 'D)86%', 'Weight of astronaut on Venus as a percentage of Weight of astronaut on Earth = (182/211)*100 = 86%']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_130_c6678ac1c1", "context": "", "question": "A man walks at 5 kmph for 6 hrs and at 4 kmph for 12 hrs. His average speed is", "options": ["A)4 1/3 km/h", "B)7 2/3 km/h", "C)9 ½ km/h", "D)8 km/h", "E)81 km/h"], "rationale": "Avg speed = total distance/total time\n= 5*6 + 4*12 / 18\n=4 1/3 km/h", "answer": "A", "textual_logical_units": {"1": "A man walks at 5 kmph for 6 hrs and", "2": "at 4 kmph for 12 hrs.", "3": "His average speed is", "4": "A)4 1/3 km/h", "5": "B)7 2/3 km/h", "6": "C)9 ½ km/h", "7": "D)8 km/h", "8": "E)81 km/h", "9": "Avg speed = total distance/total time", "10": "= 5*6 + 4*12 / 18", "11": "=4 1/3 km/h", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['A man walks at 5 kmph for 6 hrs and', 'at 4 kmph for 12 hrs.']\nquestion = 'His average speed is'\nchoices = {'A': '4 1/3 km/h', 'B': '7 2/3 km/h', 'C': '9 ½ km/h', 'D': '8 km/h', 'E': '81 km/h'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['His average speed is']\nnew_fact = infer_new_fact(selected) # 'Avg speed = total distance/total time'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A man walks at 5 kmph for 6 hrs and', 'at 4 kmph for 12 hrs.', 'Avg speed = total distance/total time']\nnew_fact = infer_new_fact(selected) # '= 5*6 + 4*12 / 18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 5*6 + 4*12 / 18']\nnew_fact = infer_new_fact(selected) # '=4 1/3 km/h'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=4 1/3 km/h']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_131_e46a7b9ddb", "context": "", "question": "[(272 - 32) (124 + 176)] / (17 x 15 - 15) = ?", "options": ["A)0", "B)2.25", "C)300", "D)400", "E)None of these"], "rationale": "Given expression = [(272 - 32) (124 + 176)] / (17 x 15 - 15)\n= (240 x 300 ) / 240\n= 300\nCorrect Option: C", "answer": "C", "textual_logical_units": {"1": "[(272 - 32) (124 + 176)] / (17 x 15 - 15) = ?", "2": "A)0", "3": "B)2.25", "4": "C)300", "5": "D)400", "6": "E)None of these", "7": "Given expression = [(272 - 32) (124 + 176)] / (17 x 15 - 15)", "8": "= (240 x 300 ) / 240", "9": "= 300", "10": "Correct Option: C", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [1, 4, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = []\nquestion = '[(272 - 32) (124 + 176)] / (17 x 15 - 15) = ?'\nchoices = {'A': '0', 'B': '2.25', 'C': '300', 'D': '400', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['[(272 - 32) (124 + 176)] / (17 x 15 - 15) = ?']\nnew_fact = infer_new_fact(selected) # 'Given expression = [(272 - 32) (124 + 176)] / (17 x 15 - 15)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Given expression = [(272 - 32) (124 + 176)] / (17 x 15 - 15)']\nnew_fact = infer_new_fact(selected) # '= (240 x 300 ) / 240'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= (240 x 300 ) / 240']\nnew_fact = infer_new_fact(selected) # '= 300'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['[(272 - 32) (124 + 176)] / (17 x 15 - 15) = ?', 'C)300', '= 300']\nnew_fact = infer_new_fact(selected) # 'Correct Option: C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct Option: C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_132_ab50c61510", "context": "", "question": "Everyone in the family earns money each month. If the total income of a family per month is $9000 and the median income is $3000, how many members are there in the family?", "options": ["A)2", "B)3", "C)4", "D)5", "E)6"], "rationale": "There must be more than two members.\nIf there are four members, then the middle two average $3000 for a total of $6000, and the highest earner must earn at least $3000 which puts the total at $9000 minimum. The lowest earner pushes the total past $9000 so there can not be four family members.\nThere must be three family members.\nThe answer is B.", "answer": "B", "textual_logical_units": {"1": "Everyone in the family earns money each month.", "2": "If the total income of a family per month is $9000 and", "3": "the median income is $3000,", "4": "how many members are there in the family?", "5": "A)2", "6": "B)3", "7": "C)4", "8": "D)5", "9": "E)6", "10": "There must be more than two members.", "11": "If there are four members, then the middle two average $3000 for a total of $6000, and the highest earner must earn at least $3000 which puts the total at $9000 minimum. The lowest earner pushes the total past $9000 so there can not be four family members.", "12": "There must be three family members.", "13": "The answer is B.", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [4, 6, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Everyone in the family earns money each month.', 'If the total income of a family per month is $9000 and', 'the median income is $3000,']\nquestion = 'how many members are there in the family?'\nchoices = {'A': '2', 'B': '3', 'C': '4', 'D': '5', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'There must be more than two members.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the total income of a family per month is $9000 and', 'the median income is $3000,', 'how many members are there in the family?']\nnew_fact = infer_new_fact(selected) # 'If there are four members, then the middle two average $3000 for a total of $6000, and the highest earner must earn at least $3000 which puts the total at $9000 minimum. The lowest earner pushes the total past $9000 so there can not be four family members.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there are four members, then the middle two average $3000 for a total of $6000, and the highest earner must earn at least $3000 which puts the total at $9000 minimum. The lowest earner pushes the total past $9000 so there can not be four family members.']\nnew_fact = infer_new_fact(selected) # 'There must be three family members.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many members are there in the family?', 'B)3', 'There must be three family members.']\nnew_fact = infer_new_fact(selected) # 'The answer is B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_133_6b6168730c", "context": "", "question": "The bus fare of one adult is Rs. 140 from Ranchi to Patna and bus fare of a child is half the fare of one adult between the same places. What is the total bus fare of 4 adults and 3 children between same places?", "options": ["A)Rs. 666", "B)Rs. 670", "C)Rs. 700", "D)Rs. 570", "E)Rs. 770"], "rationale": "Fare for Adult = Rs. 140.\nFare of Child = Half of the Adult = Rs. 70.\nSo,\nTotal fare = 4 *140 + 3 *70 = 560 +210 = Rs. 770.\nANSWER : E", "answer": "E", "textual_logical_units": {"1": "The bus fare of one adult is Rs.", "2": "140 from Ranchi to Patna and", "3": "bus fare of a child is half the fare of one adult between the same places.", "4": "What is the total bus fare of 4 adults and", "5": "3 children between same places?", "6": "A)Rs. 666", "7": "B)Rs. 670", "8": "C)Rs. 700", "9": "D)Rs. 570", "10": "E)Rs. 770", "11": "Fare for Adult = Rs. 140.", "12": "Fare of Child = Half of the Adult = Rs. 70.", "13": "Total fare = 4 *140 + 3 *70 = 560 +210 = Rs. 770.", "14": "ANSWER : E", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [3], "consequent": 12}, {"antecedents": [4, 5, 11, 12], "consequent": 13}, {"antecedents": [4, 5, 10, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'The bus fare of one adult is Rs.',\n  '140 from Ranchi to Patna and',\n  'bus fare of a child is half the fare of one adult between the same places.',\n  'What is the total bus fare of 4 adults and']\nquestion = '3 children between same places?'\nchoices = {'A': 'Rs. 666', 'B': 'Rs. 670', 'C': 'Rs. 700', 'D': 'Rs. 570', 'E': 'Rs. 770'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The bus fare of one adult is Rs.', '140 from Ranchi to Patna and']\nnew_fact = infer_new_fact(selected) # 'Fare for Adult = Rs. 140.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['bus fare of a child is half the fare of one adult between the same places.']\nnew_fact = infer_new_fact(selected) # 'Fare of Child = Half of the Adult = Rs. 70.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the total bus fare of 4 adults and', '3 children between same places?', 'Fare for Adult = Rs. 140.', 'Fare of Child = Half of the Adult = Rs. 70.']\nnew_fact = infer_new_fact(selected) # 'Total fare = 4 *140 + 3 *70 = 560 +210 = Rs. 770.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the total bus fare of 4 adults and', '3 children between same places?', 'E)Rs. 770', 'Total fare = 4 *140 + 3 *70 = 560 +210 = Rs. 770.']\nnew_fact = infer_new_fact(selected) # 'ANSWER : E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER : E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_134_ac62d390e6", "context": "", "question": "An organization decided to raise Rs. 6 lakh by collecting equal contribution from each of its employees. If each of them had contributed Rs. 60 extra, the contribution would have been Rs. 6.24 lakh. How many employees are there in that organization?", "options": ["A)300", "B)200", "C)400", "D)100", "E)500"], "rationale": "Required number of employees = (624000 - 600000)/60=24000/60=400\nAnswer is C.", "answer": "C", "textual_logical_units": {"1": "An organization decided to raise Rs.", "2": "6 lakh by collecting equal contribution from each of its employees.", "3": "If each of them had contributed Rs.", "4": "60 extra, the contribution would have been Rs.", "5": "6.24 lakh.", "6": "How many employees are there in that organization?", "7": "A)300", "8": "B)200", "9": "C)400", "10": "D)100", "11": "E)500", "12": "Required number of employees = (624000 - 600000)/60=24000/60=400", "13": "Answer is C.", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4, 5, 6], "consequent": 12}, {"antecedents": [6, 9, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'An organization decided to raise Rs.',\n  '6 lakh by collecting equal contribution from each of its employees.',\n  'If each of them had contributed Rs.',\n  '60 extra, the contribution would have been Rs.',\n  '6.24 lakh.']\nquestion = 'How many employees are there in that organization?'\nchoices = {'A': '300', 'B': '200', 'C': '400', 'D': '100', 'E': '500'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['6 lakh by collecting equal contribution from each of its employees.', 'If each of them had contributed Rs.', '60 extra, the contribution would have been Rs.', '6.24 lakh.', 'How many employees are there in that organization?']\nnew_fact = infer_new_fact(selected) # 'Required number of employees = (624000 - 600000)/60=24000/60=400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many employees are there in that organization?', 'C)400', 'Required number of employees = (624000 - 600000)/60=24000/60=400']\nnew_fact = infer_new_fact(selected) # 'Answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_135_ba882db21b", "context": "", "question": "If there are 5,000 voters out of which 20% are not eligible to vote and there are two candidates contesting. The winning candidate won by 15% of the votes. What is the total number of votes he got ?", "options": ["A)3267", "B)2678", "C)2797", "D)2300", "E)2781"], "rationale": "Number of voters eligible for voting = 5000 × 0.8 = 4000\nNumber of extra votes gotten by the winning candidate = 4000 × 0.15 = 600\nLet the number of votes won by winning candidate = x.\n⇒ x – (4000 – x) = 600\n⇒ x = 2300\nAnswer: D", "answer": "D", "textual_logical_units": {"1": "If there are 5,000 voters out of which 20% are not eligible to vote and", "2": "there are two candidates contesting.", "3": "The winning candidate won by 15% of the votes.", "4": "What is the total number of votes he got ?", "5": "A)3267", "6": "B)2678", "7": "C)2797", "8": "D)2300", "9": "E)2781", "10": "Number of voters eligible for voting = 5000 × 0.8 = 4000", "11": "Number of extra votes gotten by the winning candidate = 4000 × 0.15 = 600", "12": "Let the number of votes won by winning candidate = x.", "13": "⇒ x – (4000 – x) = 600", "14": "⇒ x = 2300", "15": "Answer: D", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'If there are 5,000 voters out of which 20% are not eligible to vote and',\n  'there are two candidates contesting.',\n  'The winning candidate won by 15% of the votes.']\nquestion = 'What is the total number of votes he got ?'\nchoices = {'A': '3267', 'B': '2678', 'C': '2797', 'D': '2300', 'E': '2781'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If there are 5,000 voters out of which 20% are not eligible to vote and']\nnew_fact = infer_new_fact(selected) # 'Number of voters eligible for voting = 5000 × 0.8 = 4000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The winning candidate won by 15% of the votes.', 'Number of voters eligible for voting = 5000 × 0.8 = 4000']\nnew_fact = infer_new_fact(selected) # 'Number of extra votes gotten by the winning candidate = 4000 × 0.15 = 600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Let the number of votes won by winning candidate = x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Number of voters eligible for voting = 5000 × 0.8 = 4000', 'Number of extra votes gotten by the winning candidate = 4000 × 0.15 = 600', 'Let the number of votes won by winning candidate = x.']\nnew_fact = infer_new_fact(selected) # '⇒ x – (4000 – x) = 600'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒ x – (4000 – x) = 600']\nnew_fact = infer_new_fact(selected) # '⇒ x = 2300'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the total number of votes he got ?', 'D)2300', '⇒ x = 2300']\nnew_fact = infer_new_fact(selected) # 'Answer: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_136_784e77c1a5", "context": "", "question": "For bringing each copper coin from the bottom of a river, a coin-diver gets 20 cents, and for each brass coin she gets 25 cents. If after one dive, she got $3.40. What is the minimum number of copper coins that she brought?", "options": ["A)4", "B)3", "C)2", "D)1", "E)0"], "rationale": "Let's subtract $0.20 until we find a multiple of $0.25.\n$3.40 - $0.20*2 = $3.00, which is a multiple of $0.25.\nThe answer is C.", "answer": "C", "textual_logical_units": {"1": "For bringing each copper coin from the bottom of a river,", "2": "a coin-diver gets 20 cents,", "3": "and for each brass coin she gets 25 cents.", "4": "If after one dive, she got $3.40.", "5": "What is the minimum number of copper coins that she brought?", "6": "A)4", "7": "B)3", "8": "C)2", "9": "D)1", "10": "E)0", "11": "Let's subtract $0.20 until we find a multiple of $0.25.", "12": "$3.40 - $0.20*2 = $3.00, which is a multiple of $0.25.", "13": "The answer is C.", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [5, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'For bringing each copper coin from the bottom of a river,',\n  'a coin-diver gets 20 cents,',\n  'and for each brass coin she gets 25 cents.',\n  'If after one dive, she got $3.40.']\nquestion = 'What is the minimum number of copper coins that she brought?'\nchoices = {'A': '4', 'B': '3', 'C': '2', 'D': '1', 'E': '0'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['a coin-diver gets 20 cents,', 'and for each brass coin she gets 25 cents.']\nnew_fact = infer_new_fact(selected) # \"Let's subtract $0.20 until we find a multiple of $0.25.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If after one dive, she got $3.40.', \"Let's subtract $0.20 until we find a multiple of $0.25.\"]\nnew_fact = infer_new_fact(selected) # '$3.40 - $0.20*2 = $3.00, which is a multiple of $0.25.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the minimum number of copper coins that she brought?', 'C)2', '$3.40 - $0.20*2 = $3.00, which is a multiple of $0.25.']\nnew_fact = infer_new_fact(selected) # 'The answer is C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_137_919c700e08", "context": "", "question": "Ram and Krishna start from A and B, respectively, at the same time and travel towards each other at constant speeds of 20m/s and 40m/s, respectively, along the same route. Ram meets Krishna at point C on the road after 10 seconds. Find the total distance between A to B.", "options": ["A)700 meters", "B)1000 meters", "C)700 kilometers", "D)555 meters", "E)600 meters"], "rationale": "Vr=20m/s, Vk=40m/s\ndistance A-C = 20*10=200m\ndistance B-C = 40*10=400m\nTherefore, distance A-C = 200+400=600m.\noption E", "answer": "E", "textual_logical_units": {"1": "Ram and Krishna start from A and B, respectively,", "2": "at the same time and", "3": "travel towards each other at constant speeds of 20m/s and 40m/s, respectively, along the same route.", "4": "Ram meets Krishna at point C on the road after 10 seconds.", "5": "Find the total distance between A to B.", "6": "A)700 meters", "7": "B)1000 meters", "8": "C)700 kilometers", "9": "D)555 meters", "10": "E)600 meters", "11": "Vr=20m/s, Vk=40m/s", "12": "distance A-C = 20*10=200m", "13": "distance B-C = 40*10=400m", "14": "Therefore, distance A-C = 200+400=600m.", "15": "option E", "16": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 11}, {"antecedents": [1, 4, 11], "consequent": 12}, {"antecedents": [1, 4, 11], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [5, 10, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Ram and Krishna start from A and B, respectively,',\n  'at the same time and',\n  'travel towards each other at constant speeds of 20m/s and 40m/s, respectively, along the same route.',\n  'Ram meets Krishna at point C on the road after 10 seconds.']\nquestion = 'Find the total distance between A to B.'\nchoices = {'A': '700 meters', 'B': '1000 meters', 'C': '700 kilometers', 'D': '555 meters', 'E': '600 meters'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['travel towards each other at constant speeds of 20m/s and 40m/s, respectively, along the same route.']\nnew_fact = infer_new_fact(selected) # 'Vr=20m/s, Vk=40m/s'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ram and Krishna start from A and B, respectively,', 'Ram meets Krishna at point C on the road after 10 seconds.', 'Vr=20m/s, Vk=40m/s']\nnew_fact = infer_new_fact(selected) # 'distance A-C = 20*10=200m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ram and Krishna start from A and B, respectively,', 'Ram meets Krishna at point C on the road after 10 seconds.', 'Vr=20m/s, Vk=40m/s']\nnew_fact = infer_new_fact(selected) # 'distance B-C = 40*10=400m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['distance A-C = 20*10=200m', 'distance B-C = 40*10=400m']\nnew_fact = infer_new_fact(selected) # 'Therefore, distance A-C = 200+400=600m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the total distance between A to B.', 'E)600 meters', 'Therefore, distance A-C = 200+400=600m.']\nnew_fact = infer_new_fact(selected) # 'option E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['option E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_138_00e6b9ed1d", "context": "", "question": "Car ‘X’ covers a distance of 320 kms in 8 hours and car ‘Y’ covers a distance of 415 kms in 5 hrs. What is the difference in the speed of the two cars?", "options": ["A)42kms/hr", "B)41km/hr", "C)43kms/hr", "D)45kms/hr", "E)None of these"], "rationale": "The speed of Car ’X’=320kms/8hr=40kms/hr\nThe speed of car ’Y’=415kms/5hr=83kms/hr\nthe difference is 43km/hr\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "Car ‘X’ covers a distance of 320 kms in 8 hours and", "2": "car ‘Y’ covers a distance of 415 kms in 5 hrs.", "3": "What is the difference in the speed of the two cars?", "4": "A)42kms/hr", "5": "B)41km/hr", "6": "C)43kms/hr", "7": "D)45kms/hr", "8": "E)None of these", "9": "The speed of Car ’X’=320kms/8hr=40kms/hr", "10": "The speed of car ’Y’=415kms/5hr=83kms/hr", "11": "the difference is 43km/hr", "12": "ANSWER:C", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [3, 9, 10], "consequent": 11}, {"antecedents": [3, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Car ‘X’ covers a distance of 320 kms in 8 hours and', 'car ‘Y’ covers a distance of 415 kms in 5 hrs.']\nquestion = 'What is the difference in the speed of the two cars?'\nchoices = {'A': '42kms/hr', 'B': '41km/hr', 'C': '43kms/hr', 'D': '45kms/hr', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Car ‘X’ covers a distance of 320 kms in 8 hours and']\nnew_fact = infer_new_fact(selected) # 'The speed of Car ’X’=320kms/8hr=40kms/hr'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['car ‘Y’ covers a distance of 415 kms in 5 hrs.']\nnew_fact = infer_new_fact(selected) # 'The speed of car ’Y’=415kms/5hr=83kms/hr'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the difference in the speed of the two cars?', 'The speed of Car ’X’=320kms/8hr=40kms/hr', 'The speed of car ’Y’=415kms/5hr=83kms/hr']\nnew_fact = infer_new_fact(selected) # 'the difference is 43km/hr'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the difference in the speed of the two cars?', 'C)43kms/hr', 'the difference is 43km/hr']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_139_2bbfe16913", "context": "", "question": "Winson runs from his home to his school at an average speed of 10 miles/hr, and then walks home along the same route at an average speed of 5 miles/hr. If the whole journey took one hour, how many miles is his home from his school?", "options": ["A)9", "B)6", "C)4", "D)3", "E)2"], "rationale": "Suppose x is the distance then\ngoing time + coming time = total time = 1 hour\nx/10 + x/5 = 1\nx = 1.5=2 miles\nAnswer E.", "answer": "E", "textual_logical_units": {"1": "Winson runs from his home to his school at an average speed of 10 miles/hr, and then", "2": "walks home along the same route at an average speed of 5 miles/hr.", "3": "If the whole journey took one hour,", "4": "how many miles is his home from his school?", "5": "A)9", "6": "B)6", "7": "C)4", "8": "D)3", "9": "E)2", "10": "Suppose x is the distance then", "11": "going time + coming time = total time = 1 hour", "12": "x/10 + x/5 = 1", "13": "x = 1.5=2 miles", "14": "Answer E.", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [4, 9, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'Winson runs from his home to his school at an average speed of 10 miles/hr, and then',\n  'walks home along the same route at an average speed of 5 miles/hr.',\n  'If the whole journey took one hour,']\nquestion = 'how many miles is his home from his school?'\nchoices = {'A': '9', 'B': '6', 'C': '4', 'D': '3', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Suppose x is the distance then'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the whole journey took one hour,']\nnew_fact = infer_new_fact(selected) # 'going time + coming time = total time = 1 hour'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Winson runs from his home to his school at an average speed of 10 miles/hr, and then', 'walks home along the same route at an average speed of 5 miles/hr.', 'Suppose x is the distance then', 'going time + coming time = total time = 1 hour']\nnew_fact = infer_new_fact(selected) # 'x/10 + x/5 = 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x/10 + x/5 = 1']\nnew_fact = infer_new_fact(selected) # 'x = 1.5=2 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many miles is his home from his school?', 'E)2', 'x = 1.5=2 miles']\nnew_fact = infer_new_fact(selected) # 'Answer E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_140_d2bdcc0d20", "context": "", "question": "A sporting goods store carries only yellow and white golf balls. At the beginning of the day it had 600 golf balls in stock, and by the end of the day it had sold 80% of its inventory of golf balls. If the store sold an equal number of yellow and white golf balls, and in doing so sold all of its white golf balls, how many yellow golf balls did the store have to begin the day?", "options": ["A)80", "B)120", "C)240", "D)320", "E)360"], "rationale": "Since the store sold an equal number of white and yellow balls, 80%/2 = 40% of the inventory at the start of the day was white balls. Then 60% of the inventory consisted of yellow balls.\n0.6(600) = 360\nThe answer is E.", "answer": "E", "textual_logical_units": {"1": "A sporting goods store carries only yellow and white golf balls.", "2": "At the beginning of the day it had 600 golf balls in stock,", "3": "and by the end of the day it had sold 80% of its inventory of golf balls.", "4": "If the store sold an equal number of yellow and white golf balls,", "5": "and in doing so sold all of its white golf balls,", "6": "how many yellow golf balls did the store have to begin the day?", "7": "A)80", "8": "B)120", "9": "C)240", "10": "D)320", "11": "E)360", "12": "Since the store sold an equal number of white and yellow balls, 80%/2 = 40% of the inventory at the start of the day was white balls. Then 60% of the inventory consisted of yellow balls.", "13": "0.6(600) = 360", "14": "The answer is E.", "15": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [6, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'A sporting goods store carries only yellow and white golf balls.',\n  'At the beginning of the day it had 600 golf balls in stock,',\n  'and by the end of the day it had sold 80% of its inventory of golf balls.',\n  'If the store sold an equal number of yellow and white golf balls,',\n  'and in doing so sold all of its white golf balls,']\nquestion = 'how many yellow golf balls did the store have to begin the day?'\nchoices = {'A': '80', 'B': '120', 'C': '240', 'D': '320', 'E': '360'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['and by the end of the day it had sold 80% of its inventory of golf balls.', 'If the store sold an equal number of yellow and white golf balls,']\nnew_fact = infer_new_fact(selected) # 'Since the store sold an equal number of white and yellow balls, 80%/2 = 40% of the inventory at the start of the day was white balls. Then 60% of the inventory consisted of yellow balls.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At the beginning of the day it had 600 golf balls in stock,', 'Since the store sold an equal number of white and yellow balls, 80%/2 = 40% of the inventory at the start of the day was white balls. Then 60% of the inventory consisted of yellow balls.']\nnew_fact = infer_new_fact(selected) # '0.6(600) = 360'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many yellow golf balls did the store have to begin the day?', 'E)360', '0.6(600) = 360']\nnew_fact = infer_new_fact(selected) # 'The answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_141_f335efe611", "context": "", "question": "A flagstaff 17.5 metre high casts a shadow of length 40.25 metre. The height of building, which casts a shadow of length 28.75 metre under similar conditions will be :", "options": ["A)12 metre", "B)12.5 metre", "C)13.5 metre", "D)14 metre", "E)15 metre"], "rationale": "Less shadow, Less Height (Direct Proportion)\nSo, let height of building be x metre\nthen,\n40.25:17.5::28.75:x\n=>x=17.5∗28.75/ 40.25\n=>x=12.5\nOption B", "answer": "B", "textual_logical_units": {"1": "A flagstaff 17.5 metre high casts a shadow of length 40.25 metre.", "2": "The height of building, which casts a shadow of length 28.75 metre under similar conditions will be :", "3": "A)12 metre", "4": "B)12.5 metre", "5": "C)13.5 metre", "6": "D)14 metre", "7": "E)15 metre", "8": "Less shadow, Less Height (Direct Proportion)", "9": "So, let height of building be x metre", "10": "then,", "11": "40.25:17.5::28.75:x", "12": "=>x=17.5∗28.75/ 40.25", "13": "=>x=12.5", "14": "Option B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [1, 2, 8, 9], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [2, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A flagstaff 17.5 metre high casts a shadow of length 40.25 metre.']\nquestion = 'The height of building, which casts a shadow of length 28.75 metre under similar conditions will be :'\nchoices = {'A': '12 metre', 'B': '12.5 metre', 'C': '13.5 metre', 'D': '14 metre', 'E': '15 metre'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Less shadow, Less Height (Direct Proportion)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'So, let height of building be x metre'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'then,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A flagstaff 17.5 metre high casts a shadow of length 40.25 metre.', 'The height of building, which casts a shadow of length 28.75 metre under similar conditions will be :', 'Less shadow, Less Height (Direct Proportion)', 'So, let height of building be x metre']\nnew_fact = infer_new_fact(selected) # '40.25:17.5::28.75:x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40.25:17.5::28.75:x']\nnew_fact = infer_new_fact(selected) # '=>x=17.5∗28.75/ 40.25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=>x=17.5∗28.75/ 40.25']\nnew_fact = infer_new_fact(selected) # '=>x=12.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The height of building, which casts a shadow of length 28.75 metre under similar conditions will be :', 'B)12.5 metre', '=>x=12.5']\nnew_fact = infer_new_fact(selected) # 'Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_142_46e5ea2012", "context": "", "question": "Two cars are travelling from the same starting point in the same direction, having started their commute at the same time. The first car travels at a steady rate of 55 mph, while the second travels at a steady rate of 52 mph. How much time will pass before the cars are 15 miles away from each other?", "options": ["A)3 hours", "B)5 hours", "C)6 hours", "D)4 hours", "E)7 hours"], "rationale": "Relative Speed: 55-52=3 mph\nDistance:15 miles\nTime: distance/speed=15/3= 5 hours\nCorrect answer is B", "answer": "B", "textual_logical_units": {"1": "Two cars are travelling from the same starting point in the same direction,", "2": "having started their commute at the same time.", "3": "The first car travels at a steady rate of 55 mph,", "4": "while the second travels at a steady rate of 52 mph.", "5": "How much time will pass before the cars are 15 miles away from each other?", "6": "A)3 hours", "7": "B)5 hours", "8": "C)6 hours", "9": "D)4 hours", "10": "E)7 hours", "11": "Relative Speed: 55-52=3 mph", "12": "Distance:15 miles", "13": "Time: distance/speed=15/3= 5 hours", "14": "Correct answer is B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 11}, {"antecedents": [5], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [5, 7, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'Two cars are travelling from the same starting point in the same direction,',\n  'having started their commute at the same time.',\n  'The first car travels at a steady rate of 55 mph,',\n  'while the second travels at a steady rate of 52 mph.']\nquestion = 'How much time will pass before the cars are 15 miles away from each other?'\nchoices = {'A': '3 hours', 'B': '5 hours', 'C': '6 hours', 'D': '4 hours', 'E': '7 hours'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The first car travels at a steady rate of 55 mph,', 'while the second travels at a steady rate of 52 mph.']\nnew_fact = infer_new_fact(selected) # 'Relative Speed: 55-52=3 mph'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much time will pass before the cars are 15 miles away from each other?']\nnew_fact = infer_new_fact(selected) # 'Distance:15 miles'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Relative Speed: 55-52=3 mph', 'Distance:15 miles']\nnew_fact = infer_new_fact(selected) # 'Time: distance/speed=15/3= 5 hours'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much time will pass before the cars are 15 miles away from each other?', 'B)5 hours', 'Time: distance/speed=15/3= 5 hours']\nnew_fact = infer_new_fact(selected) # 'Correct answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_143_76188d77db", "context": "", "question": "The events A and B are independent. The probability that event A occurs is 0.6, and the probability that at least one of the events A or B occurs is 0.96. What is the probability that event B occurs?", "options": ["A)0.5", "B)0.6", "C)0.7", "D)0.8", "E)0.9"], "rationale": "Let x be the probability that B does not occur.\nP(A and B do not occur) = 1 - 0.96 = 0.04\n0.4x = 0.04\nx=0.1\nP(B occurs) = 1 - x = 0.9\nThe answer is E.", "answer": "E", "textual_logical_units": {"1": "The events A and B are independent.", "2": "The probability that event A occurs is 0.6,", "3": "and the probability that at least one of the events A or B occurs is 0.96.", "4": "What is the probability that event B occurs?", "5": "A)0.5", "6": "B)0.6", "7": "C)0.7", "8": "D)0.8", "9": "E)0.9", "10": "Let x be the probability that B does not occur.", "11": "P(A and B do not occur) = 1 - 0.96 = 0.04", "12": "0.4x = 0.04", "13": "x=0.1", "14": "P(B occurs) = 1 - x = 0.9", "15": "The answer is E.", "16": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 10}, {"antecedents": [3, 4], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [11, 13], "consequent": 14}, {"antecedents": [4, 9, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'The events A and B are independent.',\n  'The probability that event A occurs is 0.6,',\n  'and the probability that at least one of the events A or B occurs is 0.96.']\nquestion = 'What is the probability that event B occurs?'\nchoices = {'A': '0.5', 'B': '0.6', 'C': '0.7', 'D': '0.8', 'E': '0.9'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let x be the probability that B does not occur.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['and the probability that at least one of the events A or B occurs is 0.96.', 'What is the probability that event B occurs?']\nnew_fact = infer_new_fact(selected) # 'P(A and B do not occur) = 1 - 0.96 = 0.04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let x be the probability that B does not occur.', 'P(A and B do not occur) = 1 - 0.96 = 0.04']\nnew_fact = infer_new_fact(selected) # '0.4x = 0.04'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['0.4x = 0.04']\nnew_fact = infer_new_fact(selected) # 'x=0.1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['P(A and B do not occur) = 1 - 0.96 = 0.04', 'x=0.1']\nnew_fact = infer_new_fact(selected) # 'P(B occurs) = 1 - x = 0.9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the probability that event B occurs?', 'E)0.9', 'P(B occurs) = 1 - x = 0.9']\nnew_fact = infer_new_fact(selected) # 'The answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_144_fe1606bd09", "context": "", "question": "The ratio of the volumes of a cube to that of the sphere which will fit inside the cube is?", "options": ["A)2: π", "B)7:2", "C)8:2", "D)6: π", "E)8:3"], "rationale": "a3 : a3/8 * 4/3 π => 6: π\nAnswer: Option D", "answer": "D", "textual_logical_units": {"1": "The ratio of the volumes of a cube to that of the sphere which will fit inside the cube is?", "2": "A)2: π", "3": "B)7:2", "4": "C)8:2", "5": "D)6: π", "6": "E)8:3", "7": "a3 : a3/8 * 4/3 π => 6: π", "8": "Answer: Option D", "9": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 5, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'The ratio of the volumes of a cube to that of the sphere which will fit inside the cube is?'\nchoices = {'A': '2: π', 'B': '7:2', 'C': '8:2', 'D': '6: π', 'E': '8:3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The ratio of the volumes of a cube to that of the sphere which will fit inside the cube is?']\nnew_fact = infer_new_fact(selected) # 'a3 : a3/8 * 4/3 π => 6: π'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The ratio of the volumes of a cube to that of the sphere which will fit inside the cube is?', 'D)6: π', 'a3 : a3/8 * 4/3 π => 6: π']\nnew_fact = infer_new_fact(selected) # 'Answer: Option D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_145_28743a039e", "context": "", "question": "My wall contains 8 red colour ties, 13 violet colour ties,10 blue colour ties, 5 pink colour ties, 4 green colour ties. If electricity is gone and I want at least two ties of same colour then how many ties I should take out from my rack?", "options": ["A)2", "B)3", "C)4", "D)5", "E)6"], "rationale": "5 ties will get you one of different colored ties in the worst case. Thus, one more tie and you will have at least one pair. Thus, 6 is the correct answer.\nANSWER:E", "answer": "E", "textual_logical_units": {"1": "My wall contains 8 red colour ties,", "2": "13 violet colour ties,10 blue colour ties, 5 pink colour ties, 4 green colour ties.", "3": "If electricity is gone and", "4": "I want at least two ties of same colour then", "5": "how many ties I should take out from my rack?", "6": "A)2", "7": "B)3", "8": "C)4", "9": "D)5", "10": "E)6", "11": "5 ties will get you one of different colored ties in the worst case. Thus, one more tie and you will have at least one pair. Thus, 6 is the correct answer.", "12": "ANSWER:E", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4, 5], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'My wall contains 8 red colour ties,',\n  '13 violet colour ties,10 blue colour ties, 5 pink colour ties, 4 green colour ties.',\n  'If electricity is gone and',\n  'I want at least two ties of same colour then']\nquestion = 'how many ties I should take out from my rack?'\nchoices = {'A': '2', 'B': '3', 'C': '4', 'D': '5', 'E': '6'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['My wall contains 8 red colour ties,', '13 violet colour ties,10 blue colour ties, 5 pink colour ties, 4 green colour ties.', 'If electricity is gone and', 'I want at least two ties of same colour then', 'how many ties I should take out from my rack?']\nnew_fact = infer_new_fact(selected) # '5 ties will get you one of different colored ties in the worst case. Thus, one more tie and you will have at least one pair. Thus, 6 is the correct answer.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many ties I should take out from my rack?', 'E)6', '5 ties will get you one of different colored ties in the worst case. Thus, one more tie and you will have at least one pair. Thus, 6 is the correct answer.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_146_a82d761623", "context": "", "question": "Find 25/12*5", "options": ["A)2.5498", "B)0.4167", "C)3.3987", "D)8.5497", "E)5.6312"], "rationale": "Answer=25/12*5\n=25/60=0.4167\nOption B is correct", "answer": "B", "textual_logical_units": {"1": "Find 25/12*5", "2": "A)2.5498", "3": "B)0.4167", "4": "C)3.3987", "5": "D)8.5497", "6": "E)5.6312", "7": "Answer=25/12*5", "8": "=25/60=0.4167", "9": "Option B is correct", "10": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'Find 25/12*5'\nchoices = {'A': '2.5498', 'B': '0.4167', 'C': '3.3987', 'D': '8.5497', 'E': '5.6312'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Find 25/12*5']\nnew_fact = infer_new_fact(selected) # 'Answer=25/12*5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer=25/12*5']\nnew_fact = infer_new_fact(selected) # '=25/60=0.4167'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find 25/12*5', 'B)0.4167', '=25/60=0.4167']\nnew_fact = infer_new_fact(selected) # 'Option B is correct'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Option B is correct']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_147_97922f0976", "context": "", "question": "The value of log2 4 is:", "options": ["A)2", "B)4", "C)6", "D)8", "E)12"], "rationale": "Let log2 4 = n.\nlog2 4 = 2.\nAnswer: Option A", "answer": "A", "textual_logical_units": {"1": "The value of log2 4 is:", "2": "A)2", "3": "B)4", "4": "C)6", "5": "D)8", "6": "E)12", "7": "Let log2 4 = n.", "8": "log2 4 = 2.", "9": "Answer: Option A", "10": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 7}, {"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'The value of log2 4 is:'\nchoices = {'A': '2', 'B': '4', 'C': '6', 'D': '8', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let log2 4 = n.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The value of log2 4 is:']\nnew_fact = infer_new_fact(selected) # 'log2 4 = 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The value of log2 4 is:', 'A)2', 'log2 4 = 2.']\nnew_fact = infer_new_fact(selected) # 'Answer: Option A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_148_4d7d0d861d", "context": "", "question": "Calculate the percentage gain of a merchant who purchased 90 kg of oranges for Rs. 450 and sold the whole lot at the rate of Rs. 7.50 per kg.", "options": ["A)50 %", "B)60 %", "C)55 %", "D)70 %", "E)58%"], "rationale": "C.P. of 1 kg = 450/90 = Rs. 5\nS.P. of 1 kg = Rs. 7.50\nGain = 7.50-5 = 2.50\nGain % = 2.50/5 * 100 = 50%. Answer: A", "answer": "A", "textual_logical_units": {"1": "Calculate the percentage gain of a merchant who purchased 90 kg of oranges for Rs.", "2": "450 and sold the whole lot at the rate of Rs.", "3": "7.50 per kg.", "4": "A)50 %", "5": "B)60 %", "6": "C)55 %", "7": "D)70 %", "8": "E)58%", "9": "C.P. of 1 kg = 450/90 = Rs. 5", "10": "S.P. of 1 kg = Rs. 7.50", "11": "Gain = 7.50-5 = 2.50", "12": "Gain % = 2.50/5 * 100 = 50%. Answer: A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [2, 3], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [1, 4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Calculate the percentage gain of a merchant who purchased 90 kg of oranges for Rs.', '450 and sold the whole lot at the rate of Rs.']\nquestion = '7.50 per kg.'\nchoices = {'A': '50 %', 'B': '60 %', 'C': '55 %', 'D': '70 %', 'E': '58%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Calculate the percentage gain of a merchant who purchased 90 kg of oranges for Rs.', '450 and sold the whole lot at the rate of Rs.']\nnew_fact = infer_new_fact(selected) # 'C.P. of 1 kg = 450/90 = Rs. 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['450 and sold the whole lot at the rate of Rs.', '7.50 per kg.']\nnew_fact = infer_new_fact(selected) # 'S.P. of 1 kg = Rs. 7.50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['C.P. of 1 kg = 450/90 = Rs. 5', 'S.P. of 1 kg = Rs. 7.50']\nnew_fact = infer_new_fact(selected) # 'Gain = 7.50-5 = 2.50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Calculate the percentage gain of a merchant who purchased 90 kg of oranges for Rs.', 'A)50 %', 'Gain = 7.50-5 = 2.50']\nnew_fact = infer_new_fact(selected) # 'Gain % = 2.50/5 * 100 = 50%. Answer: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Gain % = 2.50/5 * 100 = 50%. Answer: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_149_d57ace8501", "context": "", "question": "A train M leaves City A at 5 am and reaches City B at 9am. Another train N leaves City B at 7am and reaches City A at 1030am. At what time do the 2 trains cross one another?", "options": ["A)1 hr 23 min", "B)1 hr 15 min", "C)1 hr 8 min", "D)56 min", "E)55 min"], "rationale": "Let the distance between the cities be x\nThey meet after y hrs after 7am\nM covers x in 4hrs\nN covers x in 3 1/2 i.e 7/2 hrs\nspeed of M =x/4\nspeed of N = 2x/7\nDistance covered by M in y+2 hrs + Distance covered by N in\ny hrs is x\nx/4 (y+2) +2x/7(y)=x\ny=14/15hr or 56 min\nAnswer : D.", "answer": "D", "textual_logical_units": {"1": "A train M leaves City A at 5 am and", "2": "reaches City B at 9am.", "3": "Another train N leaves City B at 7am and", "4": "reaches City A at 1030am.", "5": "At what time do the 2 trains cross one another?", "6": "A)1 hr 23 min", "7": "B)1 hr 15 min", "8": "C)1 hr 8 min", "9": "D)56 min", "10": "E)55 min", "11": "Let the distance between the cities be x", "12": "They meet after y hrs after 7am", "13": "M covers x in 4hrs", "14": "N covers x in 3 1/2 i.e 7/2 hrs", "15": "speed of M =x/4", "16": "speed of N = 2x/7", "17": "Distance covered by M in y+2 hrs + Distance covered by N in", "18": "y hrs is x", "19": "x/4 (y+2) +2x/7(y)=x", "20": "y=14/15hr or 56 min", "21": "Answer : D.", "22": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 3, 5], "consequent": 12}, {"antecedents": [1, 2, 11], "consequent": 13}, {"antecedents": [3, 4, 11], "consequent": 14}, {"antecedents": [11, 13], "consequent": 15}, {"antecedents": [11, 14], "consequent": 16}, {"antecedents": [12, 13, 14], "consequent": 17}, {"antecedents": [11, 12, 13, 14, 17], "consequent": 18}, {"antecedents": [15, 16, 17, 18], "consequent": 19}, {"antecedents": [15, 16, 17, 18, 19], "consequent": 20}, {"antecedents": [5, 9, 13, 14, 17, 18, 19, 20], "consequent": 21}, {"antecedents": [21], "consequent": 22}], "metadata": [], "code_input": "####\nfacts = ['A train M leaves City A at 5 am and', 'reaches City B at 9am.', 'Another train N leaves City B at 7am and', 'reaches City A at 1030am.']\nquestion = 'At what time do the 2 trains cross one another?'\nchoices = {'A': '1 hr 23 min', 'B': '1 hr 15 min', 'C': '1 hr 8 min', 'D': '56 min', 'E': '55 min'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A train M leaves City A at 5 am and', 'reaches City B at 9am.']\nnew_fact = infer_new_fact(selected) # 'Let the distance between the cities be x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A train M leaves City A at 5 am and', 'Another train N leaves City B at 7am and', 'At what time do the 2 trains cross one another?']\nnew_fact = infer_new_fact(selected) # 'They meet after y hrs after 7am'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A train M leaves City A at 5 am and', 'reaches City B at 9am.', 'Let the distance between the cities be x']\nnew_fact = infer_new_fact(selected) # 'M covers x in 4hrs'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Another train N leaves City B at 7am and', 'reaches City A at 1030am.', 'Let the distance between the cities be x']\nnew_fact = infer_new_fact(selected) # 'N covers x in 3 1/2 i.e 7/2 hrs'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the distance between the cities be x', 'M covers x in 4hrs']\nnew_fact = infer_new_fact(selected) # 'speed of M =x/4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the distance between the cities be x', 'N covers x in 3 1/2 i.e 7/2 hrs']\nnew_fact = infer_new_fact(selected) # 'speed of N = 2x/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['They meet after y hrs after 7am', 'M covers x in 4hrs', 'N covers x in 3 1/2 i.e 7/2 hrs']\nnew_fact = infer_new_fact(selected) # 'Distance covered by M in y+2 hrs + Distance covered by N in'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the distance between the cities be x', 'They meet after y hrs after 7am', 'M covers x in 4hrs', 'N covers x in 3 1/2 i.e 7/2 hrs', 'Distance covered by M in y+2 hrs + Distance covered by N in']\nnew_fact = infer_new_fact(selected) # 'y hrs is x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['speed of M =x/4', 'speed of N = 2x/7', 'Distance covered by M in y+2 hrs + Distance covered by N in', 'y hrs is x']\nnew_fact = infer_new_fact(selected) # 'x/4 (y+2) +2x/7(y)=x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['speed of M =x/4', 'speed of N = 2x/7', 'Distance covered by M in y+2 hrs + Distance covered by N in', 'y hrs is x', 'x/4 (y+2) +2x/7(y)=x']\nnew_fact = infer_new_fact(selected) # 'y=14/15hr or 56 min'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At what time do the 2 trains cross one another?', 'D)56 min', 'M covers x in 4hrs', 'N covers x in 3 1/2 i.e 7/2 hrs', 'Distance covered by M in y+2 hrs + Distance covered by N in', 'y hrs is x', 'x/4 (y+2) +2x/7(y)=x', 'y=14/15hr or 56 min']\nnew_fact = infer_new_fact(selected) # 'Answer : D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_150_f63aa5bbd1", "context": "", "question": "Janice bikes at 10 miles per hour, while Jennie bikes at 20. How long until they have collectively biked 1 mile?", "options": ["A)1 minute", "B)2 minutes", "C)3 minutes", "D)4 minutes", "E)5 minutes"], "rationale": "Janice's speed = 1/6 miles per minute\nJennie's speed = 1/3 miles per minute\nJanice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute\nBoth together will finish the mile in 2 minutes\ncorrect option is B", "answer": "B", "textual_logical_units": {"1": "Janice bikes at 10 miles per hour,", "2": "while Jennie bikes at 20.", "3": "How long until they have collectively biked 1 mile?", "4": "A)1 minute", "5": "B)2 minutes", "6": "C)3 minutes", "7": "D)4 minutes", "8": "E)5 minutes", "9": "Janice's speed = 1/6 miles per minute", "10": "Jennie's speed = 1/3 miles per minute", "11": "Janice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute", "12": "Both together will finish the mile in 2 minutes", "13": "correct option is B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 5, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Janice bikes at 10 miles per hour,', 'while Jennie bikes at 20.']\nquestion = 'How long until they have collectively biked 1 mile?'\nchoices = {'A': '1 minute', 'B': '2 minutes', 'C': '3 minutes', 'D': '4 minutes', 'E': '5 minutes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Janice bikes at 10 miles per hour,']\nnew_fact = infer_new_fact(selected) # \"Janice's speed = 1/6 miles per minute\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['while Jennie bikes at 20.']\nnew_fact = infer_new_fact(selected) # \"Jennie's speed = 1/3 miles per minute\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Janice's speed = 1/6 miles per minute\", \"Jennie's speed = 1/3 miles per minute\"]\nnew_fact = infer_new_fact(selected) # \"Janice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How long until they have collectively biked 1 mile?', \"Janice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute\"]\nnew_fact = infer_new_fact(selected) # 'Both together will finish the mile in 2 minutes'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How long until they have collectively biked 1 mile?', 'B)2 minutes', \"Janice + Jennie's speed= (1/6 + 1/3) = 1/2 miles per minute\", 'Both together will finish the mile in 2 minutes']\nnew_fact = infer_new_fact(selected) # 'correct option is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct option is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_151_88c80087dc", "context": "", "question": "In an exam, a candidate secured 504 marks of the maximum mark of M. If the maximum mark M is converted into 800 marks, he would have secured 420 marks. What is the value of M?", "options": ["A)278", "B)2890", "C)270", "D)2702", "E)960"], "rationale": "504/M = 420/800\n(504 * 800) / 420 = M\nM = 960\nAnswer:E", "answer": "E", "textual_logical_units": {"1": "In an exam, a candidate secured 504 marks of the maximum mark of M.", "2": "If the maximum mark M is converted into 800 marks,", "3": "he would have secured 420 marks.", "4": "What is the value of M?", "5": "A)278", "6": "B)2890", "7": "C)270", "8": "D)2702", "9": "E)960", "10": "504/M = 420/800", "11": "(504 * 800) / 420 = M", "12": "M = 960", "13": "Answer:E", "14": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 9, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'In an exam, a candidate secured 504 marks of the maximum mark of M.',\n  'If the maximum mark M is converted into 800 marks,',\n  'he would have secured 420 marks.']\nquestion = 'What is the value of M?'\nchoices = {'A': '278', 'B': '2890', 'C': '270', 'D': '2702', 'E': '960'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In an exam, a candidate secured 504 marks of the maximum mark of M.', 'If the maximum mark M is converted into 800 marks,', 'he would have secured 420 marks.']\nnew_fact = infer_new_fact(selected) # '504/M = 420/800'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In an exam, a candidate secured 504 marks of the maximum mark of M.', 'If the maximum mark M is converted into 800 marks,', 'he would have secured 420 marks.']\nnew_fact = infer_new_fact(selected) # '(504 * 800) / 420 = M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the value of M?', '504/M = 420/800', '(504 * 800) / 420 = M']\nnew_fact = infer_new_fact(selected) # 'M = 960'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the value of M?', 'E)960', '504/M = 420/800', 'M = 960']\nnew_fact = infer_new_fact(selected) # 'Answer:E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_152_39b1ea03ba", "context": "", "question": "If Jill needed to buy 10 bottles of soda for a party in which 8 people attended, how many bottles of soda will she need to buy for a party in which 12 people are attending?", "options": ["A)6", "B)8", "C)10", "D)12", "E)14"], "rationale": "We can set up a proportion to solve:\n10 bottles / 8 people = x bottles / 12 people.\nCross-multiply to solve a proportion:\n(10)(12) = (8)(x)\n120 = 8x\n10 = x\nAnswer :C.", "answer": "C", "textual_logical_units": {"1": "If Jill needed to buy 10 bottles of soda for a party in which 8 people attended,", "2": "how many bottles of soda will she need to buy for a party in which 12 people are attending?", "3": "A)6", "4": "B)8", "5": "C)10", "6": "D)12", "7": "E)14", "8": "We can set up a proportion to solve:", "9": "10 bottles / 8 people = x bottles / 12 people.", "10": "Cross-multiply to solve a proportion:", "11": "(10)(12) = (8)(x)", "12": "120 = 8x", "13": "10 = x", "14": "Answer :C.", "15": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [1, 2, 5, 9, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['If Jill needed to buy 10 bottles of soda for a party in which 8 people attended,']\nquestion = 'how many bottles of soda will she need to buy for a party in which 12 people are attending?'\nchoices = {'A': '6', 'B': '8', 'C': '10', 'D': '12', 'E': '14'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'We can set up a proportion to solve:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Jill needed to buy 10 bottles of soda for a party in which 8 people attended,', 'how many bottles of soda will she need to buy for a party in which 12 people are attending?']\nnew_fact = infer_new_fact(selected) # '10 bottles / 8 people = x bottles / 12 people.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Cross-multiply to solve a proportion:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['10 bottles / 8 people = x bottles / 12 people.', 'Cross-multiply to solve a proportion:']\nnew_fact = infer_new_fact(selected) # '(10)(12) = (8)(x)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(10)(12) = (8)(x)']\nnew_fact = infer_new_fact(selected) # '120 = 8x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['120 = 8x']\nnew_fact = infer_new_fact(selected) # '10 = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Jill needed to buy 10 bottles of soda for a party in which 8 people attended,', 'how many bottles of soda will she need to buy for a party in which 12 people are attending?', 'C)10', '10 bottles / 8 people = x bottles / 12 people.', '(10)(12) = (8)(x)', '10 = x']\nnew_fact = infer_new_fact(selected) # 'Answer :C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer :C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_153_7853377744", "context": "", "question": "Two ants are standing side-by-side. One ant, which is 4 inches tall, casts a shadow that is 10 inches long. The other ant is 6 inches tall. Compute, in inches, the length of the shadow that the taller ant casts.", "options": ["A)36", "B)28", "C)42", "D)15", "E)20"], "rationale": "The ratio of shadow to height is constant, so if x is the length of the shadow, then\n4/10 = 6/x and x = 15 .\ncorrect answer D", "answer": "D", "textual_logical_units": {"1": "Two ants are standing side-by-side.", "2": "One ant, which is 4 inches tall,", "3": "casts a shadow that is 10 inches long.", "4": "The other ant is 6 inches tall.", "5": "Compute, in inches, the length of the shadow that the taller ant casts.", "6": "A)36", "7": "B)28", "8": "C)42", "9": "D)15", "10": "E)20", "11": "The ratio of shadow to height is constant, so if x is the length of the shadow, then", "12": "4/10 = 6/x and x = 15 .", "13": "correct answer D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 11}, {"antecedents": [2, 3, 4, 11], "consequent": 12}, {"antecedents": [2, 3, 4, 5, 9, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Two ants are standing side-by-side.', 'One ant, which is 4 inches tall,', 'casts a shadow that is 10 inches long.', 'The other ant is 6 inches tall.']\nquestion = 'Compute, in inches, the length of the shadow that the taller ant casts.'\nchoices = {'A': '36', 'B': '28', 'C': '42', 'D': '15', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'The ratio of shadow to height is constant, so if x is the length of the shadow, then'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['One ant, which is 4 inches tall,', 'casts a shadow that is 10 inches long.', 'The other ant is 6 inches tall.', 'The ratio of shadow to height is constant, so if x is the length of the shadow, then']\nnew_fact = infer_new_fact(selected) # '4/10 = 6/x and x = 15 .'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['One ant, which is 4 inches tall,', 'casts a shadow that is 10 inches long.', 'The other ant is 6 inches tall.', 'Compute, in inches, the length of the shadow that the taller ant casts.', 'D)15', '4/10 = 6/x and x = 15 .']\nnew_fact = infer_new_fact(selected) # 'correct answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_154_cf6450e24a", "context": "", "question": "The height of a room to its semi-perimeter is 2:5. It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows. The height of the room is:", "options": ["A)2.6m", "B)3.9m", "C)4m", "D)4.2m", "E)4.4m"], "rationale": "Let, height= 2x metres & (length+ breadth)= 5x metres.\nLength of paper= (260/2)m= 130m.\nTherefore, area of paper= (130*50/100)= 65m2\nArea of 4 walls= (65+15)=80m2\n2(length+breadth)*height=80.\nTherefore, 2*5x*2x=80 or x2=4 or x=2\nTherefore, height of the room= 4m\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "The height of a room to its semi-perimeter is 2:5.", "2": "It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows.", "3": "The height of the room is:", "4": "A)2.6m", "5": "B)3.9m", "6": "C)4m", "7": "D)4.2m", "8": "E)4.4m", "9": "Let, height= 2x metres & (length+ breadth)= 5x metres.", "10": "Length of paper= (260/2)m= 130m.", "11": "Therefore, area of paper= (130*50/100)= 65m2", "12": "Area of 4 walls= (65+15)=80m2", "13": "2(length+breadth)*height=80.", "14": "Therefore, 2*5x*2x=80 or x2=4 or x=2", "15": "Therefore, height of the room= 4m", "16": "ANSWER:C", "17": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [2, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [9, 10, 11, 12, 14], "consequent": 15}, {"antecedents": [3, 6, 9, 10, 11, 12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'The height of a room to its semi-perimeter is 2:5.',\n  'It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows.']\nquestion = 'The height of the room is:'\nchoices = {'A': '2.6m', 'B': '3.9m', 'C': '4m', 'D': '4.2m', 'E': '4.4m'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The height of a room to its semi-perimeter is 2:5.']\nnew_fact = infer_new_fact(selected) # 'Let, height= 2x metres & (length+ breadth)= 5x metres.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows.']\nnew_fact = infer_new_fact(selected) # 'Length of paper= (260/2)m= 130m.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows.', 'Length of paper= (260/2)m= 130m.']\nnew_fact = infer_new_fact(selected) # 'Therefore, area of paper= (130*50/100)= 65m2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It costs Rs.260 to paper the walls of the room with paper 50cm wide at Rs.2 per meter allowing an area of 15 sq.m for doors and windows.', 'Length of paper= (260/2)m= 130m.', 'Therefore, area of paper= (130*50/100)= 65m2']\nnew_fact = infer_new_fact(selected) # 'Area of 4 walls= (65+15)=80m2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Area of 4 walls= (65+15)=80m2']\nnew_fact = infer_new_fact(selected) # '2(length+breadth)*height=80.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let, height= 2x metres & (length+ breadth)= 5x metres.', 'Length of paper= (260/2)m= 130m.', 'Therefore, area of paper= (130*50/100)= 65m2', 'Area of 4 walls= (65+15)=80m2', '2(length+breadth)*height=80.']\nnew_fact = infer_new_fact(selected) # 'Therefore, 2*5x*2x=80 or x2=4 or x=2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let, height= 2x metres & (length+ breadth)= 5x metres.', 'Length of paper= (260/2)m= 130m.', 'Therefore, area of paper= (130*50/100)= 65m2', 'Area of 4 walls= (65+15)=80m2', 'Therefore, 2*5x*2x=80 or x2=4 or x=2']\nnew_fact = infer_new_fact(selected) # 'Therefore, height of the room= 4m'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The height of the room is:', 'C)4m', 'Let, height= 2x metres & (length+ breadth)= 5x metres.', 'Length of paper= (260/2)m= 130m.', 'Therefore, area of paper= (130*50/100)= 65m2', 'Area of 4 walls= (65+15)=80m2', 'Therefore, 2*5x*2x=80 or x2=4 or x=2', 'Therefore, height of the room= 4m']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_155_3e236e5884", "context": "", "question": "The sum of k consecutive integers is 51. If the least integer is -50, then k =", "options": ["A)40", "B)62", "C)82", "D)92", "E)102"], "rationale": "The difference is consistent with each integers , therefore the series can be A.P.\nSum of A.P. = A + (N-1) D\nA=First term\nD=Difference between each integer\nN=number of terms\nSum = A + (N - 1 ) D\n51= -50 + N - 1\nN = 102\nAnswer = E", "answer": "E", "textual_logical_units": {"1": "The sum of k consecutive integers is 51.", "2": "If the least integer is -50, then k =", "3": "A)40", "4": "B)62", "5": "C)82", "6": "D)92", "7": "E)102", "8": "The difference is consistent with each integers , therefore the series can be A.P.", "9": "Sum of A.P. = A + (N-1) D", "10": "A=First term", "11": "D=Difference between each integer", "12": "N=number of terms", "13": "Sum = A + (N - 1 ) D", "14": "51= -50 + N - 1", "15": "N = 102", "16": "Answer = E", "17": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [0], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [1, 2, 7, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['The sum of k consecutive integers is 51.']\nquestion = 'If the least integer is -50, then k ='\nchoices = {'A': '40', 'B': '62', 'C': '82', 'D': '92', 'E': '102'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'The difference is consistent with each integers , therefore the series can be A.P.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Sum of A.P. = A + (N-1) D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'A=First term'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'D=Difference between each integer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'N=number of terms'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A=First term', 'D=Difference between each integer', 'N=number of terms']\nnew_fact = infer_new_fact(selected) # 'Sum = A + (N - 1 ) D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of k consecutive integers is 51.', 'If the least integer is -50, then k =']\nnew_fact = infer_new_fact(selected) # '51= -50 + N - 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['51= -50 + N - 1']\nnew_fact = infer_new_fact(selected) # 'N = 102'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of k consecutive integers is 51.', 'If the least integer is -50, then k =', 'E)102', '51= -50 + N - 1', 'N = 102']\nnew_fact = infer_new_fact(selected) # 'Answer = E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer = E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_156_cc132203b2", "context": "", "question": "In a survey of students, each student selected from a list of 10 songs the 2 songs that the student liked best. If each song was selected 5 times, how many students were surveyed?", "options": ["A)96", "B)48", "C)32", "D)25", "E)18"], "rationale": "Each out of 10 songs was selected 5 times --> the total number of selections = 10*5 = 50.\nEach student selected 2 songs --> the total number of students = 50/2 = 25.\nAnswer: D.", "answer": "D", "textual_logical_units": {"1": "In a survey of students,", "2": "each student selected from a list of 10 songs the 2 songs that the student liked best.", "3": "If each song was selected 5 times,", "4": "how many students were surveyed?", "5": "A)96", "6": "B)48", "7": "C)32", "8": "D)25", "9": "E)18", "10": "Each out of 10 songs was selected 5 times --> the total number of selections = 10*5 = 50.", "11": "Each student selected 2 songs --> the total number of students = 50/2 = 25.", "12": "Answer: D.", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [4, 8, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['In a survey of students,', 'each student selected from a list of 10 songs the 2 songs that the student liked best.', 'If each song was selected 5 times,']\nquestion = 'how many students were surveyed?'\nchoices = {'A': '96', 'B': '48', 'C': '32', 'D': '25', 'E': '18'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['each student selected from a list of 10 songs the 2 songs that the student liked best.', 'If each song was selected 5 times,']\nnew_fact = infer_new_fact(selected) # 'Each out of 10 songs was selected 5 times --> the total number of selections = 10*5 = 50.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['each student selected from a list of 10 songs the 2 songs that the student liked best.', 'Each out of 10 songs was selected 5 times --> the total number of selections = 10*5 = 50.']\nnew_fact = infer_new_fact(selected) # 'Each student selected 2 songs --> the total number of students = 50/2 = 25.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many students were surveyed?', 'D)25', 'Each out of 10 songs was selected 5 times --> the total number of selections = 10*5 = 50.', 'Each student selected 2 songs --> the total number of students = 50/2 = 25.']\nnew_fact = infer_new_fact(selected) # 'Answer: D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_157_f68ab2a12c", "context": "", "question": "If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5, then what is the value of m?", "options": ["A)-23.5", "B)-17.5", "C)-10.5", "D)-16.2", "E)Cannot be determined"], "rationale": "Here x=1.5 must satisfy the equation\n=> 1.5^2 + 1.5m + 22 = 0\n=> m=-16.2\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,", "2": "then what is the value of m?", "3": "A)-23.5", "4": "B)-17.5", "5": "C)-10.5", "6": "D)-16.2", "7": "E)Cannot be determined", "8": "Here x=1.5 must satisfy the equation", "9": "=> 1.5^2 + 1.5m + 22 = 0", "10": "=> m=-16.2", "11": "ANSWER:D", "12": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 2, 6, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,']\nquestion = 'then what is the value of m?'\nchoices = {'A': '-23.5', 'B': '-17.5', 'C': '-10.5', 'D': '-16.2', 'E': 'Cannot be determined'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,']\nnew_fact = infer_new_fact(selected) # 'Here x=1.5 must satisfy the equation'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,']\nnew_fact = infer_new_fact(selected) # '=> 1.5^2 + 1.5m + 22 = 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,', '=> 1.5^2 + 1.5m + 22 = 0']\nnew_fact = infer_new_fact(selected) # '=> m=-16.2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If one of the roots of the quadratic equation x^2 + mx + 22 = 0 is 1.5,', 'then what is the value of m?', 'D)-16.2', '=> 1.5^2 + 1.5m + 22 = 0', '=> m=-16.2']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_158_c100238934", "context": "", "question": "At an election meeting 10 speakers are to address the meeting. The only protocol to be observed is that whenever they speak the pm should speak before the mp and the mp should speak before the mla. In how many ways can the meeting be held?", "options": ["A)10!/3", "B)10!/6", "C)10!/2", "D)10!/4", "E)10!/5"], "rationale": "10 speakers can be arranged in 10! ways. Protocol to be observed only one possibility from 3! is appropriate. So, total number of ways=10!/3!=10!/6\nANS:B", "answer": "B", "textual_logical_units": {"1": "At an election meeting 10 speakers are to address the meeting.", "2": "The only protocol to be observed is that whenever they speak the pm should speak before the mp and", "3": "the mp should speak before the mla.", "4": "In how many ways can the meeting be held?", "5": "A)10!/3", "6": "B)10!/6", "7": "C)10!/2", "8": "D)10!/4", "9": "E)10!/5", "10": "10 speakers can be arranged in 10! ways. Protocol to be observed only one possibility from 3! is appropriate. So, total number of ways=10!/3!=10!/6", "11": "ANS:B", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [4, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'At an election meeting 10 speakers are to address the meeting.',\n  'The only protocol to be observed is that whenever they speak the pm should speak before the mp and',\n  'the mp should speak before the mla.']\nquestion = 'In how many ways can the meeting be held?'\nchoices = {'A': '10!/3', 'B': '10!/6', 'C': '10!/2', 'D': '10!/4', 'E': '10!/5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At an election meeting 10 speakers are to address the meeting.', 'The only protocol to be observed is that whenever they speak the pm should speak before the mp and', 'the mp should speak before the mla.']\nnew_fact = infer_new_fact(selected) # '10 speakers can be arranged in 10! ways. Protocol to be observed only one possibility from 3! is appropriate. So, total number of ways=10!/3!=10!/6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can the meeting be held?', 'B)10!/6', '10 speakers can be arranged in 10! ways. Protocol to be observed only one possibility from 3! is appropriate. So, total number of ways=10!/3!=10!/6']\nnew_fact = infer_new_fact(selected) # 'ANS:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANS:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_159_6286059c70", "context": "", "question": "Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%. What is the new selling price of each article?", "options": ["A)$8", "B)$10", "C)$13.6", "D)$22.9", "E)$40"], "rationale": "p = old price.\nn = the number of items for $300 for p.\npn = (0.85p)(n + 5) --> n = 0.85(n + 5) --> n = 17.\nNew price = 300/(n + 5) = 13.6.\nAnswer: C.", "answer": "C", "textual_logical_units": {"1": "Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%.", "2": "What is the new selling price of each article?", "3": "A)$8", "4": "B)$10", "5": "C)$13.6", "6": "D)$22.9", "7": "E)$40", "8": "p = old price.", "9": "n = the number of items for $300 for p.", "10": "pn = (0.85p)(n + 5) --> n = 0.85(n + 5) --> n = 17.", "11": "New price = 300/(n + 5) = 13.6.", "12": "Answer: C.", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 8, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [2, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%.']\nquestion = 'What is the new selling price of each article?'\nchoices = {'A': '$8', 'B': '$10', 'C': '$13.6', 'D': '$22.9', 'E': '$40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'p = old price.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%.', 'p = old price.']\nnew_fact = infer_new_fact(selected) # 'n = the number of items for $300 for p.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%.', 'p = old price.', 'n = the number of items for $300 for p.']\nnew_fact = infer_new_fact(selected) # 'pn = (0.85p)(n + 5) --> n = 0.85(n + 5) --> n = 17.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Anna is able to buy 5 more articles for $300 after the price of each article decreased by 15%.', 'pn = (0.85p)(n + 5) --> n = 0.85(n + 5) --> n = 17.']\nnew_fact = infer_new_fact(selected) # 'New price = 300/(n + 5) = 13.6.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the new selling price of each article?', 'C)$13.6', 'New price = 300/(n + 5) = 13.6.']\nnew_fact = infer_new_fact(selected) # 'Answer: C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_160_e80bfc801a", "context": "", "question": "In a row of children Neha is 12th from left end and Radha is 6th from right end. When Radha is shifted to left by 2 places and Neha is shifted to right by 2 places there 6 children between Radha and Neha. How many children are there in the row?", "options": ["A)23", "B)27", "C)26", "D)28", "E)29"], "rationale": "After moving 2 positions to the right Neha is 14 positions from the left, and after moving 2 positions to the left, Radha is on the 8th position from the right. If there are 6 children between them, the total number of children is  14+6+8 = 28\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "In a row of children Neha is 12th from left end and", "2": "Radha is 6th from right end.", "3": "When Radha is shifted to left by 2 places and", "4": "Neha is shifted to right by 2 places there 6 children between Radha and Neha.", "5": "How many children are there in the row?", "6": "A)23", "7": "B)27", "8": "C)26", "9": "D)28", "10": "E)29", "11": "After moving 2 positions to the right Neha is 14 positions from the left, and after moving 2 positions to the left, Radha is on the 8th position from the right. If there are 6 children between them, the total number of children is  14+6+8 = 28", "12": "ANSWER:D", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 11}, {"antecedents": [5, 9, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'In a row of children Neha is 12th from left end and',\n  'Radha is 6th from right end.',\n  'When Radha is shifted to left by 2 places and',\n  'Neha is shifted to right by 2 places there 6 children between Radha and Neha.']\nquestion = 'How many children are there in the row?'\nchoices = {'A': '23', 'B': '27', 'C': '26', 'D': '28', 'E': '29'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a row of children Neha is 12th from left end and', 'Radha is 6th from right end.', 'When Radha is shifted to left by 2 places and', 'Neha is shifted to right by 2 places there 6 children between Radha and Neha.']\nnew_fact = infer_new_fact(selected) # 'After moving 2 positions to the right Neha is 14 positions from the left, and after moving 2 positions to the left, Radha is on the 8th position from the right. If there are 6 children between them, the total number of children is  14+6+8 = 28'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many children are there in the row?', 'D)28', 'After moving 2 positions to the right Neha is 14 positions from the left, and after moving 2 positions to the left, Radha is on the 8th position from the right. If there are 6 children between them, the total number of children is  14+6+8 = 28']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_161_15f6245b88", "context": "", "question": "10kg of a mixture contains 30% sand and 70% clay. In order to make the mixture contain equal quantities of clay and sand how much of the mixture is to be removed and replaced with pure sand?", "options": ["A)10/7", "B)20/7", "C)30/7", "D)40/7", "E)50/7"], "rationale": "The mixture contains 3kg sand and 7 kg clay.\nFor the mixture to be in equal quantities, there should be 2 kg of clay removed.\nClay and sand are in the ratio 7:3\nSo part of sand to be removed = 2*3/7 = 6/7\nSo total mixture to be removed = 2 + 6/7 = 20/7\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "10kg of a mixture contains 30% sand and 70% clay.", "2": "In order to make the mixture contain equal quantities of clay and", "3": "sand how much of the mixture is to be removed and replaced with pure sand?", "4": "A)10/7", "5": "B)20/7", "6": "C)30/7", "7": "D)40/7", "8": "E)50/7", "9": "The mixture contains 3kg sand and 7 kg clay.", "10": "For the mixture to be in equal quantities, there should be 2 kg of clay removed.", "11": "Clay and sand are in the ratio 7:3", "12": "So part of sand to be removed = 2*3/7 = 6/7", "13": "So total mixture to be removed = 2 + 6/7 = 20/7", "14": "ANSWER:B", "15": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [9], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 12], "consequent": 13}, {"antecedents": [3, 5, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['10kg of a mixture contains 30% sand and 70% clay.', 'In order to make the mixture contain equal quantities of clay and']\nquestion = 'sand how much of the mixture is to be removed and replaced with pure sand?'\nchoices = {'A': '10/7', 'B': '20/7', 'C': '30/7', 'D': '40/7', 'E': '50/7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['10kg of a mixture contains 30% sand and 70% clay.']\nnew_fact = infer_new_fact(selected) # 'The mixture contains 3kg sand and 7 kg clay.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In order to make the mixture contain equal quantities of clay and', 'sand how much of the mixture is to be removed and replaced with pure sand?', 'The mixture contains 3kg sand and 7 kg clay.']\nnew_fact = infer_new_fact(selected) # 'For the mixture to be in equal quantities, there should be 2 kg of clay removed.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The mixture contains 3kg sand and 7 kg clay.']\nnew_fact = infer_new_fact(selected) # 'Clay and sand are in the ratio 7:3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['For the mixture to be in equal quantities, there should be 2 kg of clay removed.', 'Clay and sand are in the ratio 7:3']\nnew_fact = infer_new_fact(selected) # 'So part of sand to be removed = 2*3/7 = 6/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['For the mixture to be in equal quantities, there should be 2 kg of clay removed.', 'So part of sand to be removed = 2*3/7 = 6/7']\nnew_fact = infer_new_fact(selected) # 'So total mixture to be removed = 2 + 6/7 = 20/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['sand how much of the mixture is to be removed and replaced with pure sand?', 'B)20/7', 'So part of sand to be removed = 2*3/7 = 6/7', 'So total mixture to be removed = 2 + 6/7 = 20/7']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_162_e29e6dfbd6", "context": "", "question": "A man spends 70% of his income. If his income increases by 20%, then what will be his new expenditure?", "options": ["A)58.3%", "B)62.5%", "C)63.5%", "D)64.5%", "E)65.5%"], "rationale": "Let Rs 100 be the income\nExpenditure=Rs70\nIncreased income=Rs120\nExpenditure in amount is same.\nSo, expenditure % =70/120 *100=58.3%\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "A man spends 70% of his income.", "2": "If his income increases by 20%,", "3": "then what will be his new expenditure?", "4": "A)58.3%", "5": "B)62.5%", "6": "C)63.5%", "7": "D)64.5%", "8": "E)65.5%", "9": "Let Rs 100 be the income", "10": "Expenditure=Rs70", "11": "Increased income=Rs120", "12": "Expenditure in amount is same.", "13": "So, expenditure % =70/120 *100=58.3%", "14": "ANSWER:A", "15": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1], "consequent": 10}, {"antecedents": [2, 9], "consequent": 11}, {"antecedents": [1], "consequent": 12}, {"antecedents": [9, 10, 11], "consequent": 13}, {"antecedents": [3, 4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A man spends 70% of his income.', 'If his income increases by 20%,']\nquestion = 'then what will be his new expenditure?'\nchoices = {'A': '58.3%', 'B': '62.5%', 'C': '63.5%', 'D': '64.5%', 'E': '65.5%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let Rs 100 be the income'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A man spends 70% of his income.']\nnew_fact = infer_new_fact(selected) # 'Expenditure=Rs70'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If his income increases by 20%,', 'Let Rs 100 be the income']\nnew_fact = infer_new_fact(selected) # 'Increased income=Rs120'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A man spends 70% of his income.']\nnew_fact = infer_new_fact(selected) # 'Expenditure in amount is same.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let Rs 100 be the income', 'Expenditure=Rs70', 'Increased income=Rs120']\nnew_fact = infer_new_fact(selected) # 'So, expenditure % =70/120 *100=58.3%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then what will be his new expenditure?', 'A)58.3%', 'So, expenditure % =70/120 *100=58.3%']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_163_d35748a0ee", "context": "", "question": "What is the greatest number of identical bouquets that can be made out of 28 white and 98 red tulips if no flowers are to be left out? (Two bouquets are identical whenever the number of red tulips in the two bouquets is equal and the number of white tulips in the two bouquets is equal.)", "options": ["A)4", "B)7", "C)10", "D)14", "E)21"], "rationale": "The greatest common divisor of 28 and 98 is 14.\nWe can make 14 identical bouquets with 2 white tulips and 7 red tulips in each bouquet.\nThe answer is D.", "answer": "D", "textual_logical_units": {"1": "What is the greatest number of identical bouquets that can be made out of 28 white and", "2": "98 red tulips if no flowers are to be left out?", "3": "(Two bouquets are identical whenever the number of red tulips in the two bouquets is equal and", "4": "the number of white tulips in the two bouquets is equal.)", "5": "A)4", "6": "B)7", "7": "C)10", "8": "D)14", "9": "E)21", "10": "The greatest common divisor of 28 and 98 is 14.", "11": "We can make 14 identical bouquets with 2 white tulips and 7 red tulips in each bouquet.", "12": "The answer is D.", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [1, 2, 3, 4, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'What is the greatest number of identical bouquets that can be made out of 28 white and',\n  '98 red tulips if no flowers are to be left out?',\n  '(Two bouquets are identical whenever the number of red tulips in the two bouquets is equal and']\nquestion = 'the number of white tulips in the two bouquets is equal.)'\nchoices = {'A': '4', 'B': '7', 'C': '10', 'D': '14', 'E': '21'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What is the greatest number of identical bouquets that can be made out of 28 white and', '98 red tulips if no flowers are to be left out?']\nnew_fact = infer_new_fact(selected) # 'The greatest common divisor of 28 and 98 is 14.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(Two bouquets are identical whenever the number of red tulips in the two bouquets is equal and', 'the number of white tulips in the two bouquets is equal.)', 'The greatest common divisor of 28 and 98 is 14.']\nnew_fact = infer_new_fact(selected) # 'We can make 14 identical bouquets with 2 white tulips and 7 red tulips in each bouquet.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the greatest number of identical bouquets that can be made out of 28 white and', '98 red tulips if no flowers are to be left out?', '(Two bouquets are identical whenever the number of red tulips in the two bouquets is equal and', 'the number of white tulips in the two bouquets is equal.)', 'D)14', 'We can make 14 identical bouquets with 2 white tulips and 7 red tulips in each bouquet.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_164_0b8d579706", "context": "", "question": "Sharon works for 5 hours to earn enough tips to buy an ice cream cake, while Karen works for 4. After how many hours will they be able to buy the cake together?", "options": ["A)1 hour", "B)2 hours", "C)3 hours", "D)4 hours", "E)5 hours"], "rationale": "Sharon's earnings = 1/5 cake per hour\nKaren's earnings = 1/4 cake per hour\nSharon + Karen's earnings= 9/20\nThey will be able to buy the cake in just over 2 hours\ncorrect option is C", "answer": "C", "textual_logical_units": {"1": "Sharon works for 5 hours to earn enough tips to buy an ice cream cake,", "2": "while Karen works for 4.", "3": "After how many hours will they be able to buy the cake together?", "4": "A)1 hour", "5": "B)2 hours", "6": "C)3 hours", "7": "D)4 hours", "8": "E)5 hours", "9": "Sharon's earnings = 1/5 cake per hour", "10": "Karen's earnings = 1/4 cake per hour", "11": "Sharon + Karen's earnings= 9/20", "12": "They will be able to buy the cake in just over 2 hours", "13": "correct option is C", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [3, 6, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Sharon works for 5 hours to earn enough tips to buy an ice cream cake,', 'while Karen works for 4.']\nquestion = 'After how many hours will they be able to buy the cake together?'\nchoices = {'A': '1 hour', 'B': '2 hours', 'C': '3 hours', 'D': '4 hours', 'E': '5 hours'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Sharon works for 5 hours to earn enough tips to buy an ice cream cake,']\nnew_fact = infer_new_fact(selected) # \"Sharon's earnings = 1/5 cake per hour\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['while Karen works for 4.']\nnew_fact = infer_new_fact(selected) # \"Karen's earnings = 1/4 cake per hour\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Sharon's earnings = 1/5 cake per hour\", \"Karen's earnings = 1/4 cake per hour\"]\nnew_fact = infer_new_fact(selected) # \"Sharon + Karen's earnings= 9/20\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how many hours will they be able to buy the cake together?', \"Sharon + Karen's earnings= 9/20\"]\nnew_fact = infer_new_fact(selected) # 'They will be able to buy the cake in just over 2 hours'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After how many hours will they be able to buy the cake together?', 'C)3 hours', \"Sharon + Karen's earnings= 9/20\", 'They will be able to buy the cake in just over 2 hours']\nnew_fact = infer_new_fact(selected) # 'correct option is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct option is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_165_8b70dcb2e6", "context": "", "question": "If x<0, y>0, and |x^3| > |y^2|, which of the following must be true?", "options": ["A)x > y", "B)y^2 > x^2", "C)-x^3 < y^2", "D)–x < y", "E)x < –y"], "rationale": "Let’s go through each answer choice: (A) can never be true, since no negative is greater than a positive. (B) doesn’t have to be true – consider what would happen if x = -2 and y = 1. (C) can never be true, as x^3 must be negative, and y^2 must be positive. (D) can never be true, since if x < 0, -x is the same thing as |x|, and |x| > y. (E) can be manipulated by multiplying both sides by -1, which gives us –x > y. Remember that x < 0, so –x = |x|, and y is positive, so |y| = y. Thus –x^3 > y^2 is the same statement as |x^3| > |y^2|, and (B) must be true.", "answer": "B", "textual_logical_units": {"1": "If x<0, y>0, and |x^3| > |y^2|,", "2": "which of the following must be true?", "3": "A)x > y", "4": "B)y^2 > x^2", "5": "C)-x^3 < y^2", "6": "D)–x < y", "7": "E)x < –y", "8": "Let’s go through each answer choice: (A) can never be true, since no negative is greater than a positive. (B) doesn’t have to be true – consider what would happen if x = -2 and y = 1. (C) can never be true, as x^3 must be negative, and y^2 must be positive. (D) can never be true, since if x < 0, -x is the same thing as |x|, and |x| > y. (E) can be manipulated by multiplying both sides by -1, which gives us –x > y. Remember that x < 0, so –x = |x|, and y is positive, so |y| = y. Thus –x^3 > y^2 is the same statement as |x^3| > |y^2|, and (B) must be true.", "9": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = ['If x<0, y>0, and |x^3| > |y^2|,']\nquestion = 'which of the following must be true?'\nchoices = {'A': 'x > y', 'B': 'y^2 > x^2', 'C': '-x^3 < y^2', 'D': '–x < y', 'E': 'x < –y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If x<0, y>0, and |x^3| > |y^2|,', 'which of the following must be true?', 'B)y^2 > x^2']\nnew_fact = infer_new_fact(selected) # 'Let’s go through each answer choice: (A) can never be true, since no negative is greater than a positive. (B) doesn’t have to be true – consider what would happen if x = -2 and y = 1. (C) can never be true, as x^3 must be negative, and y^2 must be positive. (D) can never be true, since if x < 0, -x is the same thing as |x|, and |x| > y. (E) can be manipulated by multiplying both sides by -1, which gives us –x > y. Remember that x < 0, so –x = |x|, and y is positive, so |y| = y. Thus –x^3 > y^2 is the same statement as |x^3| > |y^2|, and (B) must be true.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let’s go through each answer choice: (A) can never be true, since no negative is greater than a positive. (B) doesn’t have to be true – consider what would happen if x = -2 and y = 1. (C) can never be true, as x^3 must be negative, and y^2 must be positive. (D) can never be true, since if x < 0, -x is the same thing as |x|, and |x| > y. (E) can be manipulated by multiplying both sides by -1, which gives us –x > y. Remember that x < 0, so –x = |x|, and y is positive, so |y| = y. Thus –x^3 > y^2 is the same statement as |x^3| > |y^2|, and (B) must be true.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_166_2e2aed2da2", "context": "", "question": "Printer A and Printer B can each print 1⁄2 page per second. How long will it take both printers working together to print 100 pages?", "options": ["A)25 seconds", "B)50 seconds", "C)100 seconds", "D)200 seconds", "E)400 seconds"], "rationale": "Total work = Printer A + Printer B = 2 Printer A\n100= 2 * 1/2 * T => T=100 seconds\nAnswer: C", "answer": "C", "textual_logical_units": {"1": "Printer A and Printer B can each print 1⁄2 page per second.", "2": "How long will it take both printers working together to print 100 pages?", "3": "A)25 seconds", "4": "B)50 seconds", "5": "C)100 seconds", "6": "D)200 seconds", "7": "E)400 seconds", "8": "Total work = Printer A + Printer B = 2 Printer A", "9": "100= 2 * 1/2 * T => T=100 seconds", "10": "Answer: C", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['Printer A and Printer B can each print 1⁄2 page per second.']\nquestion = 'How long will it take both printers working together to print 100 pages?'\nchoices = {'A': '25 seconds', 'B': '50 seconds', 'C': '100 seconds', 'D': '200 seconds', 'E': '400 seconds'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Printer A and Printer B can each print 1⁄2 page per second.']\nnew_fact = infer_new_fact(selected) # 'Total work = Printer A + Printer B = 2 Printer A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Printer A and Printer B can each print 1⁄2 page per second.', 'How long will it take both printers working together to print 100 pages?', 'Total work = Printer A + Printer B = 2 Printer A']\nnew_fact = infer_new_fact(selected) # '100= 2 * 1/2 * T => T=100 seconds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How long will it take both printers working together to print 100 pages?', 'C)100 seconds', '100= 2 * 1/2 * T => T=100 seconds']\nnew_fact = infer_new_fact(selected) # 'Answer: C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_167_1e44acd399", "context": "", "question": "Two ants are moving from their farms towards each other. Ant A is moving at a speed of 9 cm per hour and ant B is moving at a speed of 6 cm per hour. If the farms are 75 cm away from each other, what will be the distance (in cm) that ant A travels until meeting ant B?", "options": ["A)45", "B)48", "C)51", "D)54", "E)57"], "rationale": "The two ants move a total of 15 cm per hour.\nThe time it takes until they meet is 75/15=5 hours.\nIn that time, the distance that ant A travels is 5*9=45 cm.\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "Two ants are moving from their farms towards each other.", "2": "Ant A is moving at a speed of 9 cm per hour and", "3": "ant B is moving at a speed of 6 cm per hour.", "4": "If the farms are 75 cm away from each other,", "5": "what will be the distance (in cm) that ant A travels until meeting ant B?", "6": "A)45", "7": "B)48", "8": "C)51", "9": "D)54", "10": "E)57", "11": "The two ants move a total of 15 cm per hour.", "12": "The time it takes until they meet is 75/15=5 hours.", "13": "In that time, the distance that ant A travels is 5*9=45 cm.", "14": "The answer is A.", "15": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [2, 12], "consequent": 13}, {"antecedents": [5, 6, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'Two ants are moving from their farms towards each other.',\n  'Ant A is moving at a speed of 9 cm per hour and',\n  'ant B is moving at a speed of 6 cm per hour.',\n  'If the farms are 75 cm away from each other,']\nquestion = 'what will be the distance (in cm) that ant A travels until meeting ant B?'\nchoices = {'A': '45', 'B': '48', 'C': '51', 'D': '54', 'E': '57'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Two ants are moving from their farms towards each other.', 'Ant A is moving at a speed of 9 cm per hour and', 'ant B is moving at a speed of 6 cm per hour.']\nnew_fact = infer_new_fact(selected) # 'The two ants move a total of 15 cm per hour.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the farms are 75 cm away from each other,', 'The two ants move a total of 15 cm per hour.']\nnew_fact = infer_new_fact(selected) # 'The time it takes until they meet is 75/15=5 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ant A is moving at a speed of 9 cm per hour and', 'The time it takes until they meet is 75/15=5 hours.']\nnew_fact = infer_new_fact(selected) # 'In that time, the distance that ant A travels is 5*9=45 cm.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the distance (in cm) that ant A travels until meeting ant B?', 'A)45', 'In that time, the distance that ant A travels is 5*9=45 cm.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_168_25e755cb75", "context": "", "question": "Roberts has a property worth of $1023.65. But in a record his property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100. Find the difference between actual property and recorded property worth?", "options": ["A)23.65", "B)1000", "C)35.62", "D)2.65", "E)1023.65"], "rationale": "Since Robert property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100 then it is =1000 (greatest positive even integer less than or equal to his property worth and it is divisible by 100 is 1000).\nHence the difference = 1023.65 - 1000 = 23.65\nAnswer: A.", "answer": "A", "textual_logical_units": {"1": "Roberts has a property worth of $1023.65.", "2": "But in a record his property worth is written as greatest positive even integer less than or equal to his property worth and", "3": "it is divisible by 100.", "4": "Find the difference between actual property and recorded property worth?", "5": "A)23.65", "6": "B)1000", "7": "C)35.62", "8": "D)2.65", "9": "E)1023.65", "10": "Since Robert property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100 then it is =1000 (greatest positive even integer less than or equal to his property worth and it is divisible by 100 is 1000).", "11": "Hence the difference = 1023.65 - 1000 = 23.65", "12": "Answer: A.", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [4, 5, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'Roberts has a property worth of $1023.65.',\n  'But in a record his property worth is written as greatest positive even integer less than or equal to his property worth and',\n  'it is divisible by 100.']\nquestion = 'Find the difference between actual property and recorded property worth?'\nchoices = {'A': '23.65', 'B': '1000', 'C': '35.62', 'D': '2.65', 'E': '1023.65'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['But in a record his property worth is written as greatest positive even integer less than or equal to his property worth and', 'it is divisible by 100.']\nnew_fact = infer_new_fact(selected) # 'Since Robert property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100 then it is =1000 (greatest positive even integer less than or equal to his property worth and it is divisible by 100 is 1000).'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Roberts has a property worth of $1023.65.', 'Since Robert property worth is written as greatest positive even integer less than or equal to his property worth and it is divisible by 100 then it is =1000 (greatest positive even integer less than or equal to his property worth and it is divisible by 100 is 1000).']\nnew_fact = infer_new_fact(selected) # 'Hence the difference = 1023.65 - 1000 = 23.65'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the difference between actual property and recorded property worth?', 'A)23.65', 'Hence the difference = 1023.65 - 1000 = 23.65']\nnew_fact = infer_new_fact(selected) # 'Answer: A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_169_644f3a1993", "context": "", "question": "A man spend 810 in buying trouser at Rs 70 each and shirt at 30 each. What will be the ratio of trouser and shirt when the maximum number of trouser is purchased?", "options": ["A)9 Trousers", "B)8 Trousers", "C)10 Trousers", "D)7 Trousers", "E)11 Trousers"], "rationale": "Lets assume S as price of shirt and T as price of trousers, we have bellow equation:\n70 T + 30 S = 810\nSimplifying we get : 7T + 3S = 81\nT = ( 81 - 3*S )/7\nWe need to find the least value of S which will make (81 - 3*S) divisible by 7\nSimplifying by taking 3 as common factor 3*(27-S) / 7\nLooking at the above equation its not difficult to find out least value of S is 6 so that 27- 3S becomes divisible by S\nHence, T = (81-3*S)/7 = (81-3*6)/7 = 63/7 = 9\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "A man spend 810 in buying trouser at Rs 70 each and shirt at 30 each.", "2": "What will be the ratio of trouser and", "3": "shirt when the maximum number of trouser is purchased?", "4": "A)9 Trousers", "5": "B)8 Trousers", "6": "C)10 Trousers", "7": "D)7 Trousers", "8": "E)11 Trousers", "9": "Lets assume S as price of shirt and T as price of trousers, we have bellow equation:", "10": "70 T + 30 S = 810", "11": "Simplifying we get : 7T + 3S = 81", "12": "T = ( 81 - 3*S )/7", "13": "We need to find the least value of S which will make (81 - 3*S) divisible by 7", "14": "Simplifying by taking 3 as common factor 3*(27-S) / 7", "15": "Looking at the above equation its not difficult to find out least value of S is 6 so that 27- 3S becomes divisible by S", "16": "Hence, T = (81-3*S)/7 = (81-3*6)/7 = 63/7 = 9", "17": "ANSWER:A", "18": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [2, 3, 4, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = ['A man spend 810 in buying trouser at Rs 70 each and shirt at 30 each.', 'What will be the ratio of trouser and']\nquestion = 'shirt when the maximum number of trouser is purchased?'\nchoices = {'A': '9 Trousers', 'B': '8 Trousers', 'C': '10 Trousers', 'D': '7 Trousers', 'E': '11 Trousers'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A man spend 810 in buying trouser at Rs 70 each and shirt at 30 each.']\nnew_fact = infer_new_fact(selected) # 'Lets assume S as price of shirt and T as price of trousers, we have bellow equation:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A man spend 810 in buying trouser at Rs 70 each and shirt at 30 each.', 'Lets assume S as price of shirt and T as price of trousers, we have bellow equation:']\nnew_fact = infer_new_fact(selected) # '70 T + 30 S = 810'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['70 T + 30 S = 810']\nnew_fact = infer_new_fact(selected) # 'Simplifying we get : 7T + 3S = 81'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Simplifying we get : 7T + 3S = 81']\nnew_fact = infer_new_fact(selected) # 'T = ( 81 - 3*S )/7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T = ( 81 - 3*S )/7']\nnew_fact = infer_new_fact(selected) # 'We need to find the least value of S which will make (81 - 3*S) divisible by 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We need to find the least value of S which will make (81 - 3*S) divisible by 7']\nnew_fact = infer_new_fact(selected) # 'Simplifying by taking 3 as common factor 3*(27-S) / 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Simplifying by taking 3 as common factor 3*(27-S) / 7']\nnew_fact = infer_new_fact(selected) # 'Looking at the above equation its not difficult to find out least value of S is 6 so that 27- 3S becomes divisible by S'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Looking at the above equation its not difficult to find out least value of S is 6 so that 27- 3S becomes divisible by S']\nnew_fact = infer_new_fact(selected) # 'Hence, T = (81-3*S)/7 = (81-3*6)/7 = 63/7 = 9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the ratio of trouser and', 'shirt when the maximum number of trouser is purchased?', 'A)9 Trousers', 'Hence, T = (81-3*S)/7 = (81-3*6)/7 = 63/7 = 9']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_170_7dd8087b3c", "context": "", "question": "If a subscription for 15 issues of a magazine costs $42.00 and represents a saving of 25 percent of the cover prices, what is the cover price per issue?", "options": ["A)$7.73", "B)$6.73", "C)$5.73", "D)$4.73", "E)$3.73"], "rationale": "Let subscription per magazine = x\n15x = 42\n=> x= 2.8\nLet cover price per magazine = c\nSince there is a 25% saving on cover prices\n0.75c=x\n=> 0.75c = 2.8\n=>c= 3.73\nAnswer E", "answer": "E", "textual_logical_units": {"1": "If a subscription for 15 issues of a magazine costs $42.00 and", "2": "represents a saving of 25 percent of the cover prices,", "3": "what is the cover price per issue?", "4": "A)$7.73", "5": "B)$6.73", "6": "C)$5.73", "7": "D)$4.73", "8": "E)$3.73", "9": "Let subscription per magazine = x", "10": "15x = 42", "11": "=> x= 2.8", "12": "Let cover price per magazine = c", "13": "Since there is a 25% saving on cover prices", "14": "0.75c=x", "15": "=> 0.75c = 2.8", "16": "=>c= 3.73", "17": "Answer E", "18": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [0], "consequent": 12}, {"antecedents": [2], "consequent": 13}, {"antecedents": [9, 12, 13], "consequent": 14}, {"antecedents": [11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [3, 8, 14, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = ['If a subscription for 15 issues of a magazine costs $42.00 and', 'represents a saving of 25 percent of the cover prices,']\nquestion = 'what is the cover price per issue?'\nchoices = {'A': '$7.73', 'B': '$6.73', 'C': '$5.73', 'D': '$4.73', 'E': '$3.73'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Let subscription per magazine = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If a subscription for 15 issues of a magazine costs $42.00 and', 'Let subscription per magazine = x']\nnew_fact = infer_new_fact(selected) # '15x = 42'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['15x = 42']\nnew_fact = infer_new_fact(selected) # '=> x= 2.8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Let cover price per magazine = c'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['represents a saving of 25 percent of the cover prices,']\nnew_fact = infer_new_fact(selected) # 'Since there is a 25% saving on cover prices'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let subscription per magazine = x', 'Let cover price per magazine = c', 'Since there is a 25% saving on cover prices']\nnew_fact = infer_new_fact(selected) # '0.75c=x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> x= 2.8', '0.75c=x']\nnew_fact = infer_new_fact(selected) # '=> 0.75c = 2.8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 0.75c = 2.8']\nnew_fact = infer_new_fact(selected) # '=>c= 3.73'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the cover price per issue?', 'E)$3.73', '0.75c=x', '=>c= 3.73']\nnew_fact = infer_new_fact(selected) # 'Answer E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_171_5c5ffacd4a", "context": "", "question": "Christopher and Jonathan were having bets. They decide that a coin will be flipped twenty times and each time it turns heads, Christopher will give $2 to Jonathan and each time it turns out to be Tails, Jonathan will give 3$ to Christopher. After flipping for twenty times none of the both won or lost any amount.\nHow many times did the coin landed on Heads ?", "options": ["A)10", "B)23", "C)16", "D)18", "E)12"], "rationale": "The amount won and lost by both is equal.\nThus 2x = 3(20-x) --- x in the number of times heads came\nX = 12", "answer": "E", "textual_logical_units": {"1": "Christopher and Jonathan were having bets.", "2": "They decide that a coin will be flipped twenty times and", "3": "each time it turns heads,", "4": "Christopher will give $2 to Jonathan and", "5": "each time it turns out to be Tails,", "6": "Jonathan will give 3$ to Christopher.", "7": "After flipping for twenty times none of the both won or lost any amount.\nHow many times did the coin landed on Heads ?", "8": "A)10", "9": "B)23", "10": "C)16", "11": "D)18", "12": "E)12", "13": "The amount won and lost by both is equal.", "14": "Thus 2x = 3(20-x) --- x in the number of times heads came", "15": "X = 12", "16": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [7], "consequent": 13}, {"antecedents": [2, 3, 4, 6, 13], "consequent": 14}, {"antecedents": [7, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Christopher and Jonathan were having bets.',\n  'They decide that a coin will be flipped twenty times and',\n  'each time it turns heads,',\n  'Christopher will give $2 to Jonathan and',\n  'each time it turns out to be Tails,',\n  'Jonathan will give 3$ to Christopher.']\nquestion = 'After flipping for twenty times none of the both won or lost any amount.\\nHow many times did the coin landed on Heads ?'\nchoices = {'A': '10', 'B': '23', 'C': '16', 'D': '18', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['After flipping for twenty times none of the both won or lost any amount.\\nHow many times did the coin landed on Heads ?']\nnew_fact = infer_new_fact(selected) # 'The amount won and lost by both is equal.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['They decide that a coin will be flipped twenty times and', 'each time it turns heads,', 'Christopher will give $2 to Jonathan and', 'Jonathan will give 3$ to Christopher.', 'The amount won and lost by both is equal.']\nnew_fact = infer_new_fact(selected) # 'Thus 2x = 3(20-x) --- x in the number of times heads came'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After flipping for twenty times none of the both won or lost any amount.\\nHow many times did the coin landed on Heads ?', 'E)12', 'Thus 2x = 3(20-x) --- x in the number of times heads came']\nnew_fact = infer_new_fact(selected) # 'X = 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['X = 12']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_172_6551907122", "context": "", "question": "Allen starts from X, goes to Y. At the same time Bob starts from Y and goes towards X. Once Allen reaches Y he changes his direction and returns to X. Once Bob reaches X, he changes his direction and returns to Y. Throughout Allen travels at 54 kmph and Bob travels at 78kmph. By the time they meet for the second time, Bob covers 48 km more than Allen. Find the distance between X and Y.", "options": ["A)144km", "B)72 km", "C)126km", "D)84 km", "E)48km"], "rationale": "Total distance 126km\nin an hour both Allen and Bob covered 126km\nthat is 54+78=132\nthey meet for the first time Bob covered more KM than Allen. 78-54=24.\nso when they meet for the second time Bob covered 24*2= 48 more km (ANSWER E)", "answer": "E", "textual_logical_units": {"1": "Allen starts from X, goes to Y.", "2": "At the same time Bob starts from Y and goes towards X.", "3": "Once Allen reaches Y he changes his direction and returns to X.", "4": "Once Bob reaches X, he changes his direction and returns to Y.", "5": "Throughout Allen travels at 54 kmph and Bob travels at 78kmph.", "6": "By the time they meet for the second time,", "7": "Bob covers 48 km more than Allen.", "8": "Find the distance between X and Y.", "9": "A)144km", "10": "B)72 km", "11": "C)126km", "12": "D)84 km", "13": "E)48km", "14": "Total distance 126km", "15": "in an hour both Allen and Bob covered 126km", "16": "that is 54+78=132", "17": "they meet for the first time Bob covered more KM than Allen. 78-54=24.", "18": "so when they meet for the second time Bob covered 24*2= 48 more km (ANSWER E)", "19": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 14}, {"antecedents": [5, 14], "consequent": 15}, {"antecedents": [5], "consequent": 16}, {"antecedents": [5], "consequent": 17}, {"antecedents": [8, 13, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "code_input": "####\nfacts = [ 'Allen starts from X, goes to Y.',\n  'At the same time Bob starts from Y and goes towards X.',\n  'Once Allen reaches Y he changes his direction and returns to X.',\n  'Once Bob reaches X, he changes his direction and returns to Y.',\n  'Throughout Allen travels at 54 kmph and Bob travels at 78kmph.',\n  'By the time they meet for the second time,',\n  'Bob covers 48 km more than Allen.']\nquestion = 'Find the distance between X and Y.'\nchoices = {'A': '144km', 'B': '72 km', 'C': '126km', 'D': '84 km', 'E': '48km'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Total distance 126km'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Throughout Allen travels at 54 kmph and Bob travels at 78kmph.', 'Total distance 126km']\nnew_fact = infer_new_fact(selected) # 'in an hour both Allen and Bob covered 126km'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Throughout Allen travels at 54 kmph and Bob travels at 78kmph.']\nnew_fact = infer_new_fact(selected) # 'that is 54+78=132'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Throughout Allen travels at 54 kmph and Bob travels at 78kmph.']\nnew_fact = infer_new_fact(selected) # 'they meet for the first time Bob covered more KM than Allen. 78-54=24.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the distance between X and Y.', 'E)48km', 'they meet for the first time Bob covered more KM than Allen. 78-54=24.']\nnew_fact = infer_new_fact(selected) # 'so when they meet for the second time Bob covered 24*2= 48 more km (ANSWER E)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['so when they meet for the second time Bob covered 24*2= 48 more km (ANSWER E)']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_173_8aadd8f25b", "context": "", "question": "Tires of a certain brand, when purchased new, last for four years. A customer can choose to purchase the new tires at a cost of $180 per tire or can have his current tires repaired at a cost of $40 per tire, a repair that will make the current tires last for one additional year. The average cost per year of the new tires is what percent greater than the cost of repairing the current tires?", "options": ["A)8%", "B)10%", "C)12.5%", "D)16.7%", "E)25%"], "rationale": "Average cost of new tire = $45/tire\ncost of repairing the current tire = $40/tire\nnew tire is $5 more per tire.\ni e. 5/40=1/8=12.5%\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "Tires of a certain brand, when purchased new, last for four years.", "2": "A customer can choose to purchase the new tires at a cost of $180 per tire or can have his current tires repaired at a cost of $40 per tire,", "3": "a repair that will make the current tires last for one additional year.", "4": "The average cost per year of the new tires is what percent greater than the cost of repairing the current tires?", "5": "A)8%", "6": "B)10%", "7": "C)12.5%", "8": "D)16.7%", "9": "E)25%", "10": "Average cost of new tire = $45/tire", "11": "cost of repairing the current tire = $40/tire", "12": "new tire is $5 more per tire.", "13": "i e. 5/40=1/8=12.5%", "14": "ANSWER:C", "15": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [10, 11, 12], "consequent": 13}, {"antecedents": [4, 7, 10, 11, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'Tires of a certain brand, when purchased new, last for four years.',\n  'A customer can choose to purchase the new tires at a cost of $180 per tire or can have his current tires repaired at a cost of $40 per tire,',\n  'a repair that will make the current tires last for one additional year.']\nquestion = 'The average cost per year of the new tires is what percent greater than the cost of repairing the current tires?'\nchoices = {'A': '8%', 'B': '10%', 'C': '12.5%', 'D': '16.7%', 'E': '25%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Tires of a certain brand, when purchased new, last for four years.', 'A customer can choose to purchase the new tires at a cost of $180 per tire or can have his current tires repaired at a cost of $40 per tire,']\nnew_fact = infer_new_fact(selected) # 'Average cost of new tire = $45/tire'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A customer can choose to purchase the new tires at a cost of $180 per tire or can have his current tires repaired at a cost of $40 per tire,']\nnew_fact = infer_new_fact(selected) # 'cost of repairing the current tire = $40/tire'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Average cost of new tire = $45/tire', 'cost of repairing the current tire = $40/tire']\nnew_fact = infer_new_fact(selected) # 'new tire is $5 more per tire.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Average cost of new tire = $45/tire', 'cost of repairing the current tire = $40/tire', 'new tire is $5 more per tire.']\nnew_fact = infer_new_fact(selected) # 'i e. 5/40=1/8=12.5%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The average cost per year of the new tires is what percent greater than the cost of repairing the current tires?', 'C)12.5%', 'Average cost of new tire = $45/tire', 'cost of repairing the current tire = $40/tire', 'i e. 5/40=1/8=12.5%']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_174_ed08b71420", "context": "", "question": "A rope 20 meters long is cut into two pieces. If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters, of the longer piece of rope?", "options": ["A)7.5", "B)8.9", "C)9.9", "D)11.5", "E)11.7"], "rationale": "Length of the rope = 20 meters.\nAssume length of longer piece = x meters.\nLength of shorter piece = x - 3\nWe know that x + x - 3 = 20\n2x = 23\nLength of the longer piece = x = 11.5 meters\nCorrect Option: D", "answer": "D", "textual_logical_units": {"1": "A rope 20 meters long is cut into two pieces.", "2": "If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters,", "3": "of the longer piece of rope?", "4": "A)7.5", "5": "B)8.9", "6": "C)9.9", "7": "D)11.5", "8": "E)11.7", "9": "Length of the rope = 20 meters.", "10": "Assume length of longer piece = x meters.", "11": "Length of shorter piece = x - 3", "12": "We know that x + x - 3 = 20", "13": "2x = 23", "14": "Length of the longer piece = x = 11.5 meters", "15": "Correct Option: D", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [2], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [3, 11], "consequent": 14}, {"antecedents": [2, 3, 7, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'A rope 20 meters long is cut into two pieces.',\n  'If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters,']\nquestion = 'of the longer piece of rope?'\nchoices = {'A': '7.5', 'B': '8.9', 'C': '9.9', 'D': '11.5', 'E': '11.7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A rope 20 meters long is cut into two pieces.']\nnew_fact = infer_new_fact(selected) # 'Length of the rope = 20 meters.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters,']\nnew_fact = infer_new_fact(selected) # 'Assume length of longer piece = x meters.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters,']\nnew_fact = infer_new_fact(selected) # 'Length of shorter piece = x - 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Length of the rope = 20 meters.', 'Assume length of longer piece = x meters.', 'Length of shorter piece = x - 3']\nnew_fact = infer_new_fact(selected) # 'We know that x + x - 3 = 20'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We know that x + x - 3 = 20']\nnew_fact = infer_new_fact(selected) # '2x = 23'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['of the longer piece of rope?', 'Length of shorter piece = x - 3']\nnew_fact = infer_new_fact(selected) # 'Length of the longer piece = x = 11.5 meters'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the length of one piece of rope is 3 meters shorter than the length of the other, what is the length, in meters,', 'of the longer piece of rope?', 'D)11.5', 'Length of the longer piece = x = 11.5 meters']\nnew_fact = infer_new_fact(selected) # 'Correct Option: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct Option: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_175_d803d8f629", "context": "", "question": "Jerry purchased a 1-year $5,000 bond that paid an annual interest rate of 12% compounded every six months. How much interest had this bond accrued at maturity?", "options": ["A)$5102", "B)$618", "C)$216", "D)$202", "E)$200"], "rationale": "A=P(1+r/q)nq .Here q is no of times interest is compounded in a yr so it is = 2. Amount comes out to be 5618 .Hence interest is 5618-5000=618. >>B", "answer": "B", "textual_logical_units": {"1": "Jerry purchased a 1-year $5,000 bond that paid an annual interest rate of 12% compounded every six months.", "2": "How much interest had this bond accrued at maturity?", "3": "A)$5102", "4": "B)$618", "5": "C)$216", "6": "D)$202", "7": "E)$200", "8": "A=P(1+r/q)nq .Here q is no of times interest is compounded in a yr so it is = 2. Amount comes out to be 5618 .Hence interest is 5618-5000=618. >>B", "9": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 4], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = ['Jerry purchased a 1-year $5,000 bond that paid an annual interest rate of 12% compounded every six months.']\nquestion = 'How much interest had this bond accrued at maturity?'\nchoices = {'A': '$5102', 'B': '$618', 'C': '$216', 'D': '$202', 'E': '$200'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Jerry purchased a 1-year $5,000 bond that paid an annual interest rate of 12% compounded every six months.', 'How much interest had this bond accrued at maturity?', 'B)$618']\nnew_fact = infer_new_fact(selected) # 'A=P(1+r/q)nq .Here q is no of times interest is compounded in a yr so it is = 2. Amount comes out to be 5618 .Hence interest is 5618-5000=618. >>B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A=P(1+r/q)nq .Here q is no of times interest is compounded in a yr so it is = 2. Amount comes out to be 5618 .Hence interest is 5618-5000=618. >>B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_176_9d04ac14e3", "context": "", "question": "Decipher the following multiplication table:\nM A D\nB E\n-------------\nM A D\nR A E\n-------------\nA M I D", "options": ["A)9 2 0 0", "B)9 2 0 9", "C)9 2 0 1", "D)9 2 0 7", "E)9 2 2 2"], "rationale": "It is clear that E = 1 as MAD×E=MAD\nFrom the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M\nAs A = 10 not possible, A = 9\nSo I = 0.\nand From the thousand's line R + 1 = A. So R = 8.\nM 9 D\nB 1\n-------------\nM 9 D\n8 9 1\n-------------\n9 M 0 D\n-------------\nAs B×D = 1, B and D takes 3, 7 in some order.\nIf B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.\n2 9 7\n3 1\n-------------\n2 9 7\n8 9 1\n-------------\n9 2 0 7\n-------------\nAnswer:D", "answer": "D", "textual_logical_units": {"1": "Decipher the following multiplication table:\nM A D\nB E\n-------------\nM A D\nR A E\n-------------\nA M I D", "2": "A)9 2 0 0", "3": "B)9 2 0 9", "4": "C)9 2 0 1", "5": "D)9 2 0 7", "6": "E)9 2 2 2", "7": "It is clear that E = 1 as MAD×E=MAD", "8": "From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M", "9": "As A = 10 not possible, A = 9", "10": "So I = 0.", "11": "and From the thousand's line R + 1 = A. So R = 8.", "12": "M 9 D", "13": "-------------", "14": "M 9 D", "15": "8 9 1", "16": "-------------", "17": "9 M 0 D", "18": "-------------", "19": "As B×D = 1, B and D takes 3, 7 in some order.", "20": "If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.", "21": "2 9 7", "22": "-------------", "23": "2 9 7", "24": "8 9 1", "25": "-------------", "26": "9 2 0 7", "27": "-------------", "28": "Answer:D", "29": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9], "consequent": 11}, {"antecedents": [1, 9], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [1, 9], "consequent": 14}, {"antecedents": [7, 9, 11], "consequent": 15}, {"antecedents": [0], "consequent": 16}, {"antecedents": [1, 9, 10], "consequent": 17}, {"antecedents": [0], "consequent": 18}, {"antecedents": [1], "consequent": 19}, {"antecedents": [1, 19], "consequent": 20}, {"antecedents": [1, 8, 9, 20], "consequent": 21}, {"antecedents": [0], "consequent": 22}, {"antecedents": [1, 8, 9, 20], "consequent": 23}, {"antecedents": [1, 9, 11, 20], "consequent": 24}, {"antecedents": [0], "consequent": 25}, {"antecedents": [23, 24], "consequent": 26}, {"antecedents": [0], "consequent": 27}, {"antecedents": [1, 5, 20, 26], "consequent": 28}, {"antecedents": [28], "consequent": 29}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D'\nchoices = {'A': '9 2 0 0', 'B': '9 2 0 9', 'C': '9 2 0 1', 'D': '9 2 0 7', 'E': '9 2 2 2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D']\nnew_fact = infer_new_fact(selected) # 'It is clear that E = 1 as MAD×E=MAD'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'It is clear that E = 1 as MAD×E=MAD']\nnew_fact = infer_new_fact(selected) # \"From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M\"]\nnew_fact = infer_new_fact(selected) # 'As A = 10 not possible, A = 9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9']\nnew_fact = infer_new_fact(selected) # 'So I = 0.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9']\nnew_fact = infer_new_fact(selected) # \"and From the thousand's line R + 1 = A. So R = 8.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9']\nnew_fact = infer_new_fact(selected) # 'M 9 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9']\nnew_fact = infer_new_fact(selected) # 'M 9 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['It is clear that E = 1 as MAD×E=MAD', 'As A = 10 not possible, A = 9', \"and From the thousand's line R + 1 = A. So R = 8.\"]\nnew_fact = infer_new_fact(selected) # '8 9 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9', 'So I = 0.']\nnew_fact = infer_new_fact(selected) # '9 M 0 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D']\nnew_fact = infer_new_fact(selected) # 'As B×D = 1, B and D takes 3, 7 in some order.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As B×D = 1, B and D takes 3, 7 in some order.']\nnew_fact = infer_new_fact(selected) # 'If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', \"From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M\", 'As A = 10 not possible, A = 9', 'If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.']\nnew_fact = infer_new_fact(selected) # '2 9 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', \"From the hundred's line, M + A = 10 + M or 1 + M + A = 10 + M\", 'As A = 10 not possible, A = 9', 'If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.']\nnew_fact = infer_new_fact(selected) # '2 9 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'As A = 10 not possible, A = 9', \"and From the thousand's line R + 1 = A. So R = 8.\", 'If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.']\nnew_fact = infer_new_fact(selected) # '8 9 1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 9 7', '8 9 1']\nnew_fact = infer_new_fact(selected) # '9 2 0 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '-------------'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Decipher the following multiplication table:\\nM A D\\nB E\\n-------------\\nM A D\\nR A E\\n-------------\\nA M I D', 'D)9 2 0 7', 'If B = 7 and D = 3, then M93×7 = _51 is not satisfied. So B = 3 and D = 7.', '9 2 0 7']\nnew_fact = infer_new_fact(selected) # 'Answer:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_177_d0c419d67d", "context": "", "question": "Sachin was twice as old as Ajay 10 years back. How old is Ajay today if Sachin will be 40 years old in 10 years", "options": ["A)18", "B)25", "C)15", "D)20", "E)21"], "rationale": "Explanation:\nSachin's age today = 30 years.\nSachin's age 10 years back = 20 years.\nAjay's age 10 years back = 10 years.\nAjay's age today = 20 years\nAnswer: Option D", "answer": "D", "textual_logical_units": {"1": "Sachin was twice as old as Ajay 10 years back.", "2": "How old is Ajay today if Sachin will be 40 years old in 10 years", "3": "A)18", "4": "B)25", "5": "C)15", "6": "D)20", "7": "E)21", "8": "Explanation:", "9": "Sachin's age today = 30 years.", "10": "Sachin's age 10 years back = 20 years.", "11": "Ajay's age 10 years back = 10 years.", "12": "Ajay's age today = 20 years", "13": "Answer: Option D", "14": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [1, 2, 10], "consequent": 11}, {"antecedents": [1, 2, 10, 11], "consequent": 12}, {"antecedents": [2, 6, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Sachin was twice as old as Ajay 10 years back.']\nquestion = 'How old is Ajay today if Sachin will be 40 years old in 10 years'\nchoices = {'A': '18', 'B': '25', 'C': '15', 'D': '20', 'E': '21'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Explanation:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How old is Ajay today if Sachin will be 40 years old in 10 years']\nnew_fact = infer_new_fact(selected) # \"Sachin's age today = 30 years.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How old is Ajay today if Sachin will be 40 years old in 10 years']\nnew_fact = infer_new_fact(selected) # \"Sachin's age 10 years back = 20 years.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sachin was twice as old as Ajay 10 years back.', 'How old is Ajay today if Sachin will be 40 years old in 10 years', \"Sachin's age 10 years back = 20 years.\"]\nnew_fact = infer_new_fact(selected) # \"Ajay's age 10 years back = 10 years.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Sachin was twice as old as Ajay 10 years back.', 'How old is Ajay today if Sachin will be 40 years old in 10 years', \"Sachin's age 10 years back = 20 years.\", \"Ajay's age 10 years back = 10 years.\"]\nnew_fact = infer_new_fact(selected) # \"Ajay's age today = 20 years\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How old is Ajay today if Sachin will be 40 years old in 10 years', 'D)20', \"Sachin's age 10 years back = 20 years.\", \"Ajay's age 10 years back = 10 years.\", \"Ajay's age today = 20 years\"]\nnew_fact = infer_new_fact(selected) # 'Answer: Option D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_178_0bff461faf", "context": "", "question": "What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?", "options": ["A)3400", "B)1700", "C)3440", "D)Cannot be determined", "E)None of these"], "rationale": "Let l and b be the length and breadth of rectangular plot respectively.\n∴ According to the question,we have\n2(l + b) = 340 ⇒ l + b = 170\nNow, (l + 2) and (b + 2) be the length and breadth of plot with boundary.\n∴ Required area = (l + 2) (b + 2) – lb\n= lb + 2l + 2b + 4 – lb\n= 2(l + b) + 4 = 344\n∴ Required cost = 344 × 10 = 3440\nAnswer C", "answer": "C", "textual_logical_units": {"1": "What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?", "2": "A)3400", "3": "B)1700", "4": "C)3440", "5": "D)Cannot be determined", "6": "E)None of these", "7": "Let l and b be the length and breadth of rectangular plot respectively.", "8": "∴ According to the question,we have", "9": "2(l + b) = 340 ⇒ l + b = 170", "10": "Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.", "11": "∴ Required area = (l + 2) (b + 2) – lb", "12": "= lb + 2l + 2b + 4 – lb", "13": "= 2(l + b) + 4 = 344", "14": "∴ Required cost = 344 × 10 = 3440", "15": "Answer C", "16": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [0], "consequent": 8}, {"antecedents": [1], "consequent": 9}, {"antecedents": [1, 9], "consequent": 10}, {"antecedents": [1, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [1, 9, 10, 11, 13], "consequent": 14}, {"antecedents": [1, 4, 9, 10, 11, 13, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?'\nchoices = {'A': '3400', 'B': '1700', 'C': '3440', 'D': 'Cannot be determined', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?']\nnew_fact = infer_new_fact(selected) # 'Let l and b be the length and breadth of rectangular plot respectively.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '∴ According to the question,we have'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?']\nnew_fact = infer_new_fact(selected) # '2(l + b) = 340 ⇒ l + b = 170'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?', '2(l + b) = 340 ⇒ l + b = 170']\nnew_fact = infer_new_fact(selected) # 'Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?', '2(l + b) = 340 ⇒ l + b = 170', 'Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.']\nnew_fact = infer_new_fact(selected) # '∴ Required area = (l + 2) (b + 2) – lb'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ Required area = (l + 2) (b + 2) – lb']\nnew_fact = infer_new_fact(selected) # '= lb + 2l + 2b + 4 – lb'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['∴ Required area = (l + 2) (b + 2) – lb', '= lb + 2l + 2b + 4 – lb']\nnew_fact = infer_new_fact(selected) # '= 2(l + b) + 4 = 344'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?', '2(l + b) = 340 ⇒ l + b = 170', 'Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.', '∴ Required area = (l + 2) (b + 2) – lb', '= 2(l + b) + 4 = 344']\nnew_fact = infer_new_fact(selected) # '∴ Required cost = 344 × 10 = 3440'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What will be the cost of gardening 1-metre – broad boundary around a rectangular plot having perimeter of 340 metres at the rate of 10 per square metre?', 'C)3440', '2(l + b) = 340 ⇒ l + b = 170', 'Now, (l + 2) and (b + 2) be the length and breadth of plot with boundary.', '∴ Required area = (l + 2) (b + 2) – lb', '= 2(l + b) + 4 = 344', '∴ Required cost = 344 × 10 = 3440']\nnew_fact = infer_new_fact(selected) # 'Answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_179_08d5159be9", "context": "", "question": "Last year, 34 percent of Ace Book Company's sales revenue came from the sale of novels. Of the remaining revenue, 1/3 was from the sale of biographies. The company's revenue from the sale of novels was approximately, how many times its revenue from the sale of biographies?", "options": ["A)1.3", "B)1.5", "C)2.1", "D)2.5", "E)3.1"], "rationale": "Percentage of revenue from novels = 34%\nRemaining revenue = 66%\nSale of biographies = 1/3 of 66% = 22%\nSale of novels / sale of biographies\n= 34/22\napprox 1.5\nAnswer B", "answer": "B", "textual_logical_units": {"1": "Last year, 34 percent of Ace Book Company's sales revenue came from the sale of novels.", "2": "Of the remaining revenue, 1/3 was from the sale of biographies.", "3": "The company's revenue from the sale of novels was approximately,", "4": "how many times its revenue from the sale of biographies?", "5": "A)1.3", "6": "B)1.5", "7": "C)2.1", "8": "D)2.5", "9": "E)3.1", "10": "Percentage of revenue from novels = 34%", "11": "Remaining revenue = 66%", "12": "Sale of biographies = 1/3 of 66% = 22%", "13": "Sale of novels / sale of biographies", "14": "= 34/22", "15": "approx 1.5", "16": "Answer B", "17": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [1], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [2, 11, 12], "consequent": 13}, {"antecedents": [10, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 6, 10, 12, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ \"Last year, 34 percent of Ace Book Company's sales revenue came from the sale of novels.\",\n  'Of the remaining revenue, 1/3 was from the sale of biographies.',\n  \"The company's revenue from the sale of novels was approximately,\"]\nquestion = 'how many times its revenue from the sale of biographies?'\nchoices = {'A': '1.3', 'B': '1.5', 'C': '2.1', 'D': '2.5', 'E': '3.1'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Last year, 34 percent of Ace Book Company's sales revenue came from the sale of novels.\"]\nnew_fact = infer_new_fact(selected) # 'Percentage of revenue from novels = 34%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Last year, 34 percent of Ace Book Company's sales revenue came from the sale of novels.\"]\nnew_fact = infer_new_fact(selected) # 'Remaining revenue = 66%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Of the remaining revenue, 1/3 was from the sale of biographies.', 'Remaining revenue = 66%']\nnew_fact = infer_new_fact(selected) # 'Sale of biographies = 1/3 of 66% = 22%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Of the remaining revenue, 1/3 was from the sale of biographies.', 'Remaining revenue = 66%', 'Sale of biographies = 1/3 of 66% = 22%']\nnew_fact = infer_new_fact(selected) # 'Sale of novels / sale of biographies'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Percentage of revenue from novels = 34%', 'Sale of biographies = 1/3 of 66% = 22%', 'Sale of novels / sale of biographies']\nnew_fact = infer_new_fact(selected) # '= 34/22'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 34/22']\nnew_fact = infer_new_fact(selected) # 'approx 1.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many times its revenue from the sale of biographies?', 'B)1.5', 'Percentage of revenue from novels = 34%', 'Sale of biographies = 1/3 of 66% = 22%', 'Sale of novels / sale of biographies', '= 34/22', 'approx 1.5']\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_180_a36c2339d1", "context": "", "question": "A bee bypasses 0.05% of flowers it flies by because it can sense they don't have any nectar in them. How many flowers will the bee fly by to bypass 8 flowers?", "options": ["A)2000", "B)4000", "C)8000", "D)16000", "E)32000"], "rationale": "Let the number of flowers to be flown by be x.\nThen, .05% of x=8\n(5/100)*(1/100)*x=8\nx=16000\nAnswer is D", "answer": "D", "textual_logical_units": {"1": "A bee bypasses 0.05% of flowers it flies by because it can sense they don't have any nectar in them.", "2": "How many flowers will the bee fly by to bypass 8 flowers?", "3": "A)2000", "4": "B)4000", "5": "C)8000", "6": "D)16000", "7": "E)32000", "8": "Let the number of flowers to be flown by be x.", "9": "Then, .05% of x=8", "10": "(5/100)*(1/100)*x=8", "11": "x=16000", "12": "Answer is D", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 6, 8, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [\"A bee bypasses 0.05% of flowers it flies by because it can sense they don't have any nectar in them.\"]\nquestion = 'How many flowers will the bee fly by to bypass 8 flowers?'\nchoices = {'A': '2000', 'B': '4000', 'C': '8000', 'D': '16000', 'E': '32000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['How many flowers will the bee fly by to bypass 8 flowers?']\nnew_fact = infer_new_fact(selected) # 'Let the number of flowers to be flown by be x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A bee bypasses 0.05% of flowers it flies by because it can sense they don't have any nectar in them.\", 'How many flowers will the bee fly by to bypass 8 flowers?', 'Let the number of flowers to be flown by be x.']\nnew_fact = infer_new_fact(selected) # 'Then, .05% of x=8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A bee bypasses 0.05% of flowers it flies by because it can sense they don't have any nectar in them.\", 'How many flowers will the bee fly by to bypass 8 flowers?', 'Then, .05% of x=8']\nnew_fact = infer_new_fact(selected) # '(5/100)*(1/100)*x=8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(5/100)*(1/100)*x=8']\nnew_fact = infer_new_fact(selected) # 'x=16000'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many flowers will the bee fly by to bypass 8 flowers?', 'D)16000', 'Let the number of flowers to be flown by be x.', '(5/100)*(1/100)*x=8', 'x=16000']\nnew_fact = infer_new_fact(selected) # 'Answer is D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_181_f6f9311f03", "context": "", "question": "Fernando purchased a university meal plan that allows him to have a total of 3 lunches and 3 dinners per week. If the cafeteria is closed on weekends and Fernando always goes home for a dinner on Friday nights, how many options does he have to allocate his meals?", "options": ["A)5C3*4C3", "B)5C4*4C2", "C)5C2*4C4", "D)5C6*4C5", "E)4C3*4C3"], "rationale": "He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.\nHe can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.\nTotal = 5C3*4C3 ways\nANS:A", "answer": "A", "textual_logical_units": {"1": "Fernando purchased a university meal plan that allows him to have a total of 3 lunches and 3 dinners per week.", "2": "If the cafeteria is closed on weekends and", "3": "Fernando always goes home for a dinner on Friday nights,", "4": "how many options does he have to allocate his meals?", "5": "A)5C3*4C3", "6": "B)5C4*4C2", "7": "C)5C2*4C4", "8": "D)5C6*4C5", "9": "E)4C3*4C3", "10": "He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.", "11": "He can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.", "12": "Total = 5C3*4C3 ways", "13": "ANS:A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [4, 5, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'Fernando purchased a university meal plan that allows him to have a total of 3 lunches and 3 dinners per week.',\n  'If the cafeteria is closed on weekends and',\n  'Fernando always goes home for a dinner on Friday nights,']\nquestion = 'how many options does he have to allocate his meals?'\nchoices = {'A': '5C3*4C3', 'B': '5C4*4C2', 'C': '5C2*4C4', 'D': '5C6*4C5', 'E': '4C3*4C3'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Fernando purchased a university meal plan that allows him to have a total of 3 lunches and 3 dinners per week.', 'If the cafeteria is closed on weekends and']\nnew_fact = infer_new_fact(selected) # 'He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Fernando purchased a university meal plan that allows him to have a total of 3 lunches and 3 dinners per week.', 'If the cafeteria is closed on weekends and', 'Fernando always goes home for a dinner on Friday nights,']\nnew_fact = infer_new_fact(selected) # 'He can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.', 'He can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.']\nnew_fact = infer_new_fact(selected) # 'Total = 5C3*4C3 ways'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many options does he have to allocate his meals?', 'A)5C3*4C3', 'He can allocate his 3 free lunches on any 3 days from 5 (excluding weekends), so in 5C3 ways.', 'He can allocate his 3 free dinners on any 3 days from 4 (excluding weekends and Friday), so in 4C3 ways.', 'Total = 5C3*4C3 ways']\nnew_fact = infer_new_fact(selected) # 'ANS:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANS:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_182_3abe4662a5", "context": "", "question": "What should come in place of the question mark(?) in each of the following questions ?\na2 - b2/(a + b)2 (?)=(a - b)2", "options": ["A)(a + b)(a - b)", "B)(a - b)2", "C)(a + b)2", "D)a3 + b3", "E)None of these"], "rationale": "(a - b)2 x (a + b)2 / a2 - b2 = (a - b)2 x (a + b)2 / (a + b)(a - b) = (a + b) (a - b)\nAnswer : Option A", "answer": "A", "textual_logical_units": {"1": "What should come in place of the question mark(?) in each of the following questions ?\na2 - b2/(a + b)2 (?)=(a - b)2", "2": "A)(a + b)(a - b)", "3": "B)(a - b)2", "4": "C)(a + b)2", "5": "D)a3 + b3", "6": "E)None of these", "7": "(a - b)2 x (a + b)2 / a2 - b2 = (a - b)2 x (a + b)2 / (a + b)(a - b) = (a + b) (a - b)", "8": "Answer : Option A", "9": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 2, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'What should come in place of the question mark(?) in each of the following questions ?\\na2 - b2/(a + b)2 (?)=(a - b)2'\nchoices = {'A': '(a + b)(a - b)', 'B': '(a - b)2', 'C': '(a + b)2', 'D': 'a3 + b3', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What should come in place of the question mark(?) in each of the following questions ?\\na2 - b2/(a + b)2 (?)=(a - b)2']\nnew_fact = infer_new_fact(selected) # '(a - b)2 x (a + b)2 / a2 - b2 = (a - b)2 x (a + b)2 / (a + b)(a - b) = (a + b) (a - b)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What should come in place of the question mark(?) in each of the following questions ?\\na2 - b2/(a + b)2 (?)=(a - b)2', 'A)(a + b)(a - b)', '(a - b)2 x (a + b)2 / a2 - b2 = (a - b)2 x (a + b)2 / (a + b)(a - b) = (a + b) (a - b)']\nnew_fact = infer_new_fact(selected) # 'Answer : Option A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : Option A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_183_3476c980db", "context": "", "question": "A number is as much greater than 36 as is less than 86. Find the Number.", "options": ["A)60", "B)56", "C)51", "D)61", "E)41"], "rationale": "Let the number be x. Then, X-36 = 86-X\n2X = 86+36 = 122, x = 61.\nThe answer is option D) 61.", "answer": "D", "textual_logical_units": {"1": "A number is as much greater than 36 as is less than 86.", "2": "Find the Number.", "3": "A)60", "4": "B)56", "5": "C)51", "6": "D)61", "7": "E)41", "8": "Let the number be x. Then, X-36 = 86-X", "9": "2X = 86+36 = 122, x = 61.", "10": "The answer is option D) 61.", "11": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [1, 6, 8, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['A number is as much greater than 36 as is less than 86.']\nquestion = 'Find the Number.'\nchoices = {'A': '60', 'B': '56', 'C': '51', 'D': '61', 'E': '41'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A number is as much greater than 36 as is less than 86.']\nnew_fact = infer_new_fact(selected) # 'Let the number be x. Then, X-36 = 86-X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A number is as much greater than 36 as is less than 86.', 'Let the number be x. Then, X-36 = 86-X']\nnew_fact = infer_new_fact(selected) # '2X = 86+36 = 122, x = 61.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A number is as much greater than 36 as is less than 86.', 'D)61', 'Let the number be x. Then, X-36 = 86-X', '2X = 86+36 = 122, x = 61.']\nnew_fact = infer_new_fact(selected) # 'The answer is option D) 61.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is option D) 61.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_184_5a17a88d6c", "context": "", "question": "A certain phone manufacturer ships its products in crates. A crate consists of p pallets, and each pallet holds 1250 phones. If the manufacturer ships 4 crates, how many phones are shipped?", "options": ["A)1000p", "B)1500p", "C)2000p", "D)2500p", "E)30000"], "rationale": "1 pallet has 1250 phones, so p pallets hold 1250p phones\n1 crate has 1250p phones, so 4 will have 1250p * 3 = 2500p", "answer": "D", "textual_logical_units": {"1": "A certain phone manufacturer ships its products in crates.", "2": "A crate consists of p pallets,", "3": "and each pallet holds 1250 phones.", "4": "If the manufacturer ships 4 crates,", "5": "how many phones are shipped?", "6": "A)1000p", "7": "B)1500p", "8": "C)2000p", "9": "D)2500p", "10": "E)30000", "11": "1 pallet has 1250 phones, so p pallets hold 1250p phones", "12": "1 crate has 1250p phones, so 4 will have 1250p * 3 = 2500p", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'A certain phone manufacturer ships its products in crates.',\n  'A crate consists of p pallets,',\n  'and each pallet holds 1250 phones.',\n  'If the manufacturer ships 4 crates,']\nquestion = 'how many phones are shipped?'\nchoices = {'A': '1000p', 'B': '1500p', 'C': '2000p', 'D': '2500p', 'E': '30000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A crate consists of p pallets,', 'and each pallet holds 1250 phones.']\nnew_fact = infer_new_fact(selected) # '1 pallet has 1250 phones, so p pallets hold 1250p phones'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the manufacturer ships 4 crates,', '1 pallet has 1250 phones, so p pallets hold 1250p phones']\nnew_fact = infer_new_fact(selected) # '1 crate has 1250p phones, so 4 will have 1250p * 3 = 2500p'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['1 crate has 1250p phones, so 4 will have 1250p * 3 = 2500p']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_185_3677bae69c", "context": "", "question": "A can construct a wall in 40 min and B can construct the wall in 45 min. How many hours is needed to contruct a wall if both the person working together.", "options": ["A)20 min", "B)22 min", "C)23 min", "D)21 min", "E)20 min"], "rationale": "A's one minute work = 1/40\nB's one minute work = 1/45\n(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360\nso, (A+B)will do work together in 360/17 min = 21 3/17 minutes\n21 min approximately\nANSWER:D", "answer": "D", "textual_logical_units": {"1": "A can construct a wall in 40 min and", "2": "B can construct the wall in 45 min.", "3": "How many hours is needed to contruct a wall if both the person working together.", "4": "A)20 min", "5": "B)22 min", "6": "C)23 min", "7": "D)21 min", "8": "E)20 min", "9": "A's one minute work = 1/40", "10": "B's one minute work = 1/45", "11": "(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360", "12": "so, (A+B)will do work together in 360/17 min = 21 3/17 minutes", "13": "21 min approximately", "14": "ANSWER:D", "15": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [9, 10, 11, 12], "consequent": 13}, {"antecedents": [3, 8, 11, 12], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = ['A can construct a wall in 40 min and', 'B can construct the wall in 45 min.']\nquestion = 'How many hours is needed to contruct a wall if both the person working together.'\nchoices = {'A': '20 min', 'B': '22 min', 'C': '23 min', 'D': '21 min', 'E': '20 min'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A can construct a wall in 40 min and']\nnew_fact = infer_new_fact(selected) # \"A's one minute work = 1/40\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['B can construct the wall in 45 min.']\nnew_fact = infer_new_fact(selected) # \"B's one minute work = 1/45\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A's one minute work = 1/40\", \"B's one minute work = 1/45\"]\nnew_fact = infer_new_fact(selected) # \"(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A's one minute work = 1/40\", \"B's one minute work = 1/45\", \"(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360\"]\nnew_fact = infer_new_fact(selected) # 'so, (A+B)will do work together in 360/17 min = 21 3/17 minutes'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"A's one minute work = 1/40\", \"B's one minute work = 1/45\", \"(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360\", 'so, (A+B)will do work together in 360/17 min = 21 3/17 minutes']\nnew_fact = infer_new_fact(selected) # '21 min approximately'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many hours is needed to contruct a wall if both the person working together.', 'E)20 min', \"(A+B)'s one minute work = 1/40 + 1/45 = 85/40*45 = 17/360\", 'so, (A+B)will do work together in 360/17 min = 21 3/17 minutes']\nnew_fact = infer_new_fact(selected) # 'ANSWER:D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_186_8d53b419be", "context": "", "question": "An express electric train takes exact three seconds to enter tunnel which is 1 mile long.\nIf train is traveling at 120 mile an hour, how long will it take to pass completely through the tunnel ?", "options": ["A)43 seconds", "B)39 seconds", "C)20 seconds", "D)33 seconds", "E)55 seconds"], "rationale": "The train takes 30 seconds to travel 1 mile, plus 3 seconds for the complete train to pass any point, making a total of 33 seconds.", "answer": "D", "textual_logical_units": {"1": "An express electric train takes exact three seconds to enter tunnel which is 1 mile long.\nIf train is traveling at 120 mile an hour,", "2": "how long will it take to pass completely through the tunnel ?", "3": "A)43 seconds", "4": "B)39 seconds", "5": "C)20 seconds", "6": "D)33 seconds", "7": "E)55 seconds", "8": "The train takes 30 seconds to travel 1 mile, plus 3 seconds for the complete train to pass any point, making a total of 33 seconds.", "9": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = ['An express electric train takes exact three seconds to enter tunnel which is 1 mile long.\\nIf train is traveling at 120 mile an hour,']\nquestion = 'how long will it take to pass completely through the tunnel ?'\nchoices = {'A': '43 seconds', 'B': '39 seconds', 'C': '20 seconds', 'D': '33 seconds', 'E': '55 seconds'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['An express electric train takes exact three seconds to enter tunnel which is 1 mile long.\\nIf train is traveling at 120 mile an hour,', 'how long will it take to pass completely through the tunnel ?']\nnew_fact = infer_new_fact(selected) # 'The train takes 30 seconds to travel 1 mile, plus 3 seconds for the complete train to pass any point, making a total of 33 seconds.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The train takes 30 seconds to travel 1 mile, plus 3 seconds for the complete train to pass any point, making a total of 33 seconds.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_187_0cf4d408f8", "context": "", "question": "A merchant receives an invoice for a motor boat for $20 000 with terms 4/30, n/100. What is the highest simple interest rate at which he can afford to borrow money in order to take advantage of the discount?", "options": ["A)247.67", "B)237.67", "C)227.67", "D)215.67", "E)None of these"], "rationale": "Explanation:\nSuppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.\nr=I/pt=21.73%\nThe highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33\nsavings would be $20 000 − $19 752.33 = $247.67\nAnswer: A", "answer": "A", "textual_logical_units": {"1": "A merchant receives an invoice for a motor boat for $20 000 with terms 4/30, n/100.", "2": "What is the highest simple interest rate at which he can afford to borrow money in order to take advantage of the discount?", "3": "A)247.67", "4": "B)237.67", "5": "C)227.67", "6": "D)215.67", "7": "E)None of these", "8": "Explanation:", "9": "Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.", "10": "r=I/pt=21.73%", "11": "The highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33", "12": "savings would be $20 000 − $19 752.33 = $247.67", "13": "Answer: A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [2, 3, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['A merchant receives an invoice for a motor boat for $20 000 with terms 4/30, n/100.']\nquestion = 'What is the highest simple interest rate at which he can afford to borrow money in order to take advantage of the discount?'\nchoices = {'A': '247.67', 'B': '237.67', 'C': '227.67', 'D': '215.67', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Explanation:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A merchant receives an invoice for a motor boat for $20 000 with terms 4/30, n/100.', 'What is the highest simple interest rate at which he can afford to borrow money in order to take advantage of the discount?']\nnew_fact = infer_new_fact(selected) # 'Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.']\nnew_fact = infer_new_fact(selected) # 'r=I/pt=21.73%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.', 'r=I/pt=21.73%']\nnew_fact = infer_new_fact(selected) # 'The highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.', 'r=I/pt=21.73%', 'The highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33']\nnew_fact = infer_new_fact(selected) # 'savings would be $20 000 − $19 752.33 = $247.67'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the highest simple interest rate at which he can afford to borrow money in order to take advantage of the discount?', 'A)247.67', 'Suppose the merchant will take advantage of the cash discount of 4% of $20 000 = $800 by paying the bill within 30 days from the date of invoice. He needs to borrow $20 000 = $800 = $19 200. He would borrow this money on day 30 and repay it on day 100 (the day the original invoice is due) resulting in a 70-day loan. The interest he should be willing to pay on borrowed money should not exceed the cash discount $800.', 'r=I/pt=21.73%', 'The highest simple interest rate at which the merchant can afford to borrow money is 21.73%. This is a break-even rate. If he can borrow money, say at a rate of 15%, he should do so. He would borrow $19 200 for 70 days at 15%. Maturity value of the loan is $19 200(1+0.15(70/365))=$19 752.33', 'savings would be $20 000 − $19 752.33 = $247.67']\nnew_fact = infer_new_fact(selected) # 'Answer: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_188_ab11c58c23", "context": "", "question": "There are ten lime soda bottles on a table in a restaurant. They are to be served among two different groups of customers consisting of 5 members each. How many ways are there to create these 2 groups?", "options": ["A)90", "B)105", "C)126", "D)252", "E)525"], "rationale": "Number of ways to select 5 bottles out of 10= 10!/5!5!= 252\nD is the answer", "answer": "D", "textual_logical_units": {"1": "There are ten lime soda bottles on a table in a restaurant.", "2": "They are to be served among two different groups of customers consisting of 5 members each.", "3": "How many ways are there to create these 2 groups?", "4": "A)90", "5": "B)105", "6": "C)126", "7": "D)252", "8": "E)525", "9": "Number of ways to select 5 bottles out of 10= 10!/5!5!= 252", "10": "D is the answer", "11": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 7, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['There are ten lime soda bottles on a table in a restaurant.', 'They are to be served among two different groups of customers consisting of 5 members each.']\nquestion = 'How many ways are there to create these 2 groups?'\nchoices = {'A': '90', 'B': '105', 'C': '126', 'D': '252', 'E': '525'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['There are ten lime soda bottles on a table in a restaurant.', 'They are to be served among two different groups of customers consisting of 5 members each.']\nnew_fact = infer_new_fact(selected) # 'Number of ways to select 5 bottles out of 10= 10!/5!5!= 252'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many ways are there to create these 2 groups?', 'D)252', 'Number of ways to select 5 bottles out of 10= 10!/5!5!= 252']\nnew_fact = infer_new_fact(selected) # 'D is the answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['D is the answer']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_189_3aef585190", "context": "", "question": "A special cereal mixture contains rice, wheat and corn in the ratio of 2:3:5. If a bag of the mixture contains 3 pounds of rice, how much corn does it contain?", "options": ["A)6.5", "B)7.5", "C)7", "D)6", "E)None of the above"], "rationale": "Let x = amount of corn\nrice/corn=2/5=3/x\n2 × x = 3 × 5\n2x = 15\nx=7.5\nAnswer:B", "answer": "B", "textual_logical_units": {"1": "A special cereal mixture contains rice, wheat and", "2": "corn in the ratio of 2:3:5.", "3": "If a bag of the mixture contains 3 pounds of rice,", "4": "how much corn does it contain?", "5": "A)6.5", "6": "B)7.5", "7": "C)7", "8": "D)6", "9": "E)None of the above", "10": "Let x = amount of corn", "11": "rice/corn=2/5=3/x", "12": "2 × x = 3 × 5", "13": "2x = 15", "14": "x=7.5", "15": "Answer:B", "16": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [1, 2, 3], "consequent": 11}, {"antecedents": [1, 2, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 6, 11, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['A special cereal mixture contains rice, wheat and', 'corn in the ratio of 2:3:5.', 'If a bag of the mixture contains 3 pounds of rice,']\nquestion = 'how much corn does it contain?'\nchoices = {'A': '6.5', 'B': '7.5', 'C': '7', 'D': '6', 'E': 'None of the above'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['how much corn does it contain?']\nnew_fact = infer_new_fact(selected) # 'Let x = amount of corn'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A special cereal mixture contains rice, wheat and', 'corn in the ratio of 2:3:5.', 'If a bag of the mixture contains 3 pounds of rice,']\nnew_fact = infer_new_fact(selected) # 'rice/corn=2/5=3/x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A special cereal mixture contains rice, wheat and', 'corn in the ratio of 2:3:5.', 'rice/corn=2/5=3/x']\nnew_fact = infer_new_fact(selected) # '2 × x = 3 × 5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 × x = 3 × 5']\nnew_fact = infer_new_fact(selected) # '2x = 15'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x = 15']\nnew_fact = infer_new_fact(selected) # 'x=7.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how much corn does it contain?', 'B)7.5', 'rice/corn=2/5=3/x', 'x=7.5']\nnew_fact = infer_new_fact(selected) # 'Answer:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_190_e947705578", "context": "", "question": "You can purchase one soda and two energy bars for 150 cents, or two sodas and three energy bars for 300\ncents. If the costs of the items do not change, compute the cost in cents of six sodas and seven bars.", "options": ["A)500", "B)600", "C)750", "D)800", "E)900"], "rationale": "The cost of adding one soda and one energy bar is 150 cents. We need to purchase six sodas and seven bars. We know two sodas and three bars costs 300 cents, so to that purchase, we'd need to add four sodas and four bars - or four sets of items. So, we take the initial 300 + (4 * 150) = 300+600 = 900.\nAnswer - E.", "answer": "E", "textual_logical_units": {"1": "You can purchase one soda and", "2": "two energy bars for 150 cents, or two sodas and", "3": "three energy bars for 300\ncents.", "4": "If the costs of the items do not change,", "5": "compute the cost in cents of six sodas and seven bars.", "6": "A)500", "7": "B)600", "8": "C)750", "9": "D)800", "10": "E)900", "11": "The cost of adding one soda and one energy bar is 150 cents. We need to purchase six sodas and seven bars. We know two sodas and three bars costs 300 cents, so to that purchase, we'd need to add four sodas and four bars - or four sets of items. So, we take the initial 300 + (4 * 150) = 300+600 = 900.", "12": "Answer - E.", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 5], "consequent": 11}, {"antecedents": [5, 10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = [ 'You can purchase one soda and',\n  'two energy bars for 150 cents, or two sodas and',\n  'three energy bars for 300\\ncents.',\n  'If the costs of the items do not change,']\nquestion = 'compute the cost in cents of six sodas and seven bars.'\nchoices = {'A': '500', 'B': '600', 'C': '750', 'D': '800', 'E': '900'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['You can purchase one soda and', 'two energy bars for 150 cents, or two sodas and', 'three energy bars for 300\\ncents.', 'compute the cost in cents of six sodas and seven bars.']\nnew_fact = infer_new_fact(selected) # \"The cost of adding one soda and one energy bar is 150 cents. We need to purchase six sodas and seven bars. We know two sodas and three bars costs 300 cents, so to that purchase, we'd need to add four sodas and four bars - or four sets of items. So, we take the initial 300 + (4 * 150) = 300+600 = 900.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['compute the cost in cents of six sodas and seven bars.', 'E)900', \"The cost of adding one soda and one energy bar is 150 cents. We need to purchase six sodas and seven bars. We know two sodas and three bars costs 300 cents, so to that purchase, we'd need to add four sodas and four bars - or four sets of items. So, we take the initial 300 + (4 * 150) = 300+600 = 900.\"]\nnew_fact = infer_new_fact(selected) # 'Answer - E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer - E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_191_6dcf2b0289", "context": "", "question": "A pen company produces very fine quality of writing pens. Company knows that on average 10% of the produced pens are always defective so are rejected before packing. Company promises to deliver 7200 pens to its wholesaler at Rs. 10 each. It estimates the overall profit on all the manufactured pens to be 25%. What is the manufactured cost of each pen?", "options": ["A)Rs. 6", "B)Rs. 7.2", "C)Rs. 5.6", "D)Rs. 8", "E)None of these"], "rationale": "The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.\nTotal income (including 25% profit) = 8000 *K *1.25\nThis same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.\nThus,\n8000 *K *1.25 = 7200 *10\nK = Rs. 7.2. [90% of 8000 = 7200]\nAnswer: Option B", "answer": "B", "textual_logical_units": {"1": "A pen company produces very fine quality of writing pens.", "2": "Company knows that on average 10% of the produced pens are always defective so are rejected before packing.", "3": "Company promises to deliver 7200 pens to its wholesaler at Rs.", "4": "10 each.", "5": "It estimates the overall profit on all the manufactured pens to be 25%.", "6": "What is the manufactured cost of each pen?", "7": "A)Rs. 6", "8": "B)Rs. 7.2", "9": "C)Rs. 5.6", "10": "D)Rs. 8", "11": "E)None of these", "12": "The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.", "13": "Total income (including 25% profit) = 8000 *K *1.25", "14": "This same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.", "15": "Thus,", "16": "8000 *K *1.25 = 7200 *10", "17": "K = Rs. 7.2. [90% of 8000 = 7200]", "18": "Answer: Option B", "19": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 6], "consequent": 12}, {"antecedents": [2, 3, 5, 12], "consequent": 13}, {"antecedents": [2, 3, 4, 13], "consequent": 14}, {"antecedents": [0], "consequent": 15}, {"antecedents": [13, 14], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [6, 8, 12, 13, 14, 16, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "code_input": "####\nfacts = [ 'A pen company produces very fine quality of writing pens.',\n  'Company knows that on average 10% of the produced pens are always defective so are rejected before packing.',\n  'Company promises to deliver 7200 pens to its wholesaler at Rs.',\n  '10 each.',\n  'It estimates the overall profit on all the manufactured pens to be 25%.']\nquestion = 'What is the manufactured cost of each pen?'\nchoices = {'A': 'Rs. 6', 'B': 'Rs. 7.2', 'C': 'Rs. 5.6', 'D': 'Rs. 8', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Company knows that on average 10% of the produced pens are always defective so are rejected before packing.', 'Company promises to deliver 7200 pens to its wholesaler at Rs.', 'What is the manufactured cost of each pen?']\nnew_fact = infer_new_fact(selected) # 'The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Company knows that on average 10% of the produced pens are always defective so are rejected before packing.', 'Company promises to deliver 7200 pens to its wholesaler at Rs.', 'It estimates the overall profit on all the manufactured pens to be 25%.', 'The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.']\nnew_fact = infer_new_fact(selected) # 'Total income (including 25% profit) = 8000 *K *1.25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Company knows that on average 10% of the produced pens are always defective so are rejected before packing.', 'Company promises to deliver 7200 pens to its wholesaler at Rs.', '10 each.', 'Total income (including 25% profit) = 8000 *K *1.25']\nnew_fact = infer_new_fact(selected) # 'This same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Thus,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total income (including 25% profit) = 8000 *K *1.25', 'This same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.']\nnew_fact = infer_new_fact(selected) # '8000 *K *1.25 = 7200 *10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['8000 *K *1.25 = 7200 *10']\nnew_fact = infer_new_fact(selected) # 'K = Rs. 7.2. [90% of 8000 = 7200]'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the manufactured cost of each pen?', 'B)Rs. 7.2', 'The company is able to deliver 90% of the manufactured pens. Means to produce 7200 pens they must have to produce 8000 pens as 10% are defectives. So, let K be the manufacturing price of each pen.', 'Total income (including 25% profit) = 8000 *K *1.25', 'This same income is obtained by selling 90% manufactured pens at Rs. 10 which is equal to 7200 *10.', '8000 *K *1.25 = 7200 *10', 'K = Rs. 7.2. [90% of 8000 = 7200]']\nnew_fact = infer_new_fact(selected) # 'Answer: Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_192_1b11c4ec53", "context": "", "question": "A two digit number exceeds the sum of the digits of that number by 18. If the digit at the unit's place is double the digit in the ten's place, what is the number?", "options": ["A)12", "B)24", "C)42", "D)48", "E)49"], "rationale": "Let the ten's digit be x.\nThen, unit's digit = 2x.\nNumber = 10x + 2x = 12x;\nSum of digits = x + 2x = 3x.\nTherefore,  12x - 3x = 18\n‹=› 9x = 18\n‹=› x = 2.\nHence, required number = 12x = 24.\nAnswer B", "answer": "B", "textual_logical_units": {"1": "A two digit number exceeds the sum of the digits of that number by 18.", "2": "If the digit at the unit's place is double the digit in the ten's place, what is the number?", "3": "A)12", "4": "B)24", "5": "C)42", "6": "D)48", "7": "E)49", "8": "Let the ten's digit be x.", "9": "Then, unit's digit = 2x.", "10": "Number = 10x + 2x = 12x;", "11": "Sum of digits = x + 2x = 3x.", "12": "Therefore,  12x - 3x = 18", "13": "‹=› 9x = 18", "14": "‹=› x = 2.", "15": "Hence, required number = 12x = 24.", "16": "Answer B", "17": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [2], "consequent": 9}, {"antecedents": [1, 2, 9], "consequent": 10}, {"antecedents": [8, 9, 10], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [8, 9, 10, 11, 14], "consequent": 15}, {"antecedents": [2, 4, 9, 10, 11, 12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['A two digit number exceeds the sum of the digits of that number by 18.']\nquestion = \"If the digit at the unit's place is double the digit in the ten's place, what is the number?\"\nchoices = {'A': '12', 'B': '24', 'C': '42', 'D': '48', 'E': '49'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"If the digit at the unit's place is double the digit in the ten's place, what is the number?\"]\nnew_fact = infer_new_fact(selected) # \"Let the ten's digit be x.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"If the digit at the unit's place is double the digit in the ten's place, what is the number?\"]\nnew_fact = infer_new_fact(selected) # \"Then, unit's digit = 2x.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A two digit number exceeds the sum of the digits of that number by 18.', \"If the digit at the unit's place is double the digit in the ten's place, what is the number?\", \"Then, unit's digit = 2x.\"]\nnew_fact = infer_new_fact(selected) # 'Number = 10x + 2x = 12x;'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Let the ten's digit be x.\", \"Then, unit's digit = 2x.\", 'Number = 10x + 2x = 12x;']\nnew_fact = infer_new_fact(selected) # 'Sum of digits = x + 2x = 3x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Number = 10x + 2x = 12x;', 'Sum of digits = x + 2x = 3x.']\nnew_fact = infer_new_fact(selected) # 'Therefore,  12x - 3x = 18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore,  12x - 3x = 18']\nnew_fact = infer_new_fact(selected) # '‹=› 9x = 18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['‹=› 9x = 18']\nnew_fact = infer_new_fact(selected) # '‹=› x = 2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Let the ten's digit be x.\", \"Then, unit's digit = 2x.\", 'Number = 10x + 2x = 12x;', 'Sum of digits = x + 2x = 3x.', '‹=› x = 2.']\nnew_fact = infer_new_fact(selected) # 'Hence, required number = 12x = 24.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"If the digit at the unit's place is double the digit in the ten's place, what is the number?\", 'B)24', \"Then, unit's digit = 2x.\", 'Number = 10x + 2x = 12x;', 'Sum of digits = x + 2x = 3x.', 'Therefore,  12x - 3x = 18', '‹=› x = 2.', 'Hence, required number = 12x = 24.']\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_193_95b715d8c5", "context": "", "question": "Suppose for any real number x, [x] denotes the greatest integer less than or equal to x. Let L(x,y) = [x] + [y] + [x + y] and R(x,y) = [2x] + [2y]. Then it is impossible to find any two positive real numbers x and y for which", "options": ["A)L(x,y) = R(x,y)", "B)L(x,y) ≠ R(x,y)", "C)L(x,y) < R(x,y)", "D)L(x,y) < R(x,y)", "E)None"], "rationale": "x – 1≤ [x] ≤ x\n2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y\n=> a – 3 ≤ L ≤ a\n2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y\n=> a – 2 ≤ R ≤ a\nTherefore, L ≤ R.\nAnswer : D", "answer": "D", "textual_logical_units": {"1": "Suppose for any real number x,", "2": "[x] denotes the greatest integer less than or equal to x.", "3": "Let L(x,y) = [x] + [y] + [x + y] and", "4": "R(x,y) = [2x] + [2y].", "5": "Then it is impossible to find any two positive real numbers x and y for which", "6": "A)L(x,y) = R(x,y)", "7": "B)L(x,y) ≠ R(x,y)", "8": "C)L(x,y) < R(x,y)", "9": "D)L(x,y) < R(x,y)", "10": "E)None", "11": "x – 1≤ [x] ≤ x", "12": "2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y", "13": "=> a – 3 ≤ L ≤ a", "14": "2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y", "15": "=> a – 2 ≤ R ≤ a", "16": "Therefore, L ≤ R.", "17": "Answer : D", "18": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 11}, {"antecedents": [1, 2, 3, 4], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [12, 13, 14], "consequent": 15}, {"antecedents": [12, 13, 14, 15], "consequent": 16}, {"antecedents": [5, 9, 12, 13, 14, 15, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = ['Suppose for any real number x,', '[x] denotes the greatest integer less than or equal to x.', 'Let L(x,y) = [x] + [y] + [x + y] and', 'R(x,y) = [2x] + [2y].']\nquestion = 'Then it is impossible to find any two positive real numbers x and y for which'\nchoices = {'A': 'L(x,y) = R(x,y)', 'B': 'L(x,y) ≠ R(x,y)', 'C': 'L(x,y) < R(x,y)', 'D': 'L(x,y) < R(x,y)', 'E': 'None'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Suppose for any real number x,', '[x] denotes the greatest integer less than or equal to x.']\nnew_fact = infer_new_fact(selected) # 'x – 1≤ [x] ≤ x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Suppose for any real number x,', '[x] denotes the greatest integer less than or equal to x.', 'Let L(x,y) = [x] + [y] + [x + y] and', 'R(x,y) = [2x] + [2y].']\nnew_fact = infer_new_fact(selected) # '2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y']\nnew_fact = infer_new_fact(selected) # '=> a – 3 ≤ L ≤ a'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y', '=> a – 3 ≤ L ≤ a']\nnew_fact = infer_new_fact(selected) # '2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y', '=> a – 3 ≤ L ≤ a', '2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y']\nnew_fact = infer_new_fact(selected) # '=> a – 2 ≤ R ≤ a'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y', '=> a – 3 ≤ L ≤ a', '2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y', '=> a – 2 ≤ R ≤ a']\nnew_fact = infer_new_fact(selected) # 'Therefore, L ≤ R.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then it is impossible to find any two positive real numbers x and y for which', 'D)L(x,y) < R(x,y)', '2x + 2y - 3 ≤ L(x,y) ≤ 2x + 2y', '=> a – 3 ≤ L ≤ a', '2x + 2y -2 ≤ L(x,y) ≤ 2x + 2y', '=> a – 2 ≤ R ≤ a', 'Therefore, L ≤ R.']\nnew_fact = infer_new_fact(selected) # 'Answer : D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_194_4208ded603", "context": "", "question": "Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively. They start ringing together at a particular time. When they will ring together again?", "options": ["A)After 6 minutes", "B)After 12 minutes", "C)After 18 minutes", "D)After 24 minutes", "E)none"], "rationale": "LCM of 36,40,48 is 720\n720/60=12\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively.", "2": "They start ringing together at a particular time.", "3": "When they will ring together again?", "4": "A)After 6 minutes", "5": "B)After 12 minutes", "6": "C)After 18 minutes", "7": "D)After 24 minutes", "8": "E)none", "9": "LCM of 36,40,48 is 720", "10": "720/60=12", "11": "ANSWER:B", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 9}, {"antecedents": [1, 3, 9], "consequent": 10}, {"antecedents": [1, 3, 5, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively.', 'They start ringing together at a particular time.']\nquestion = 'When they will ring together again?'\nchoices = {'A': 'After 6 minutes', 'B': 'After 12 minutes', 'C': 'After 18 minutes', 'D': 'After 24 minutes', 'E': 'none'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively.', 'When they will ring together again?']\nnew_fact = infer_new_fact(selected) # 'LCM of 36,40,48 is 720'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively.', 'When they will ring together again?', 'LCM of 36,40,48 is 720']\nnew_fact = infer_new_fact(selected) # '720/60=12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Three bells ring at intervals of 36 seconds, 40 seconds and 48 seconds, respectively.', 'When they will ring together again?', 'B)After 12 minutes', 'LCM of 36,40,48 is 720', '720/60=12']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_195_cd8c633858", "context": "", "question": "An electric pole, 14 metres high, casts a shadow of 10 metres. Find the height of a tree that casts a shadow of 15 metres under similar conditions.", "options": ["A)21", "B)22", "C)20", "D)23", "E)24"], "rationale": "direct proportion x1/y1=x2/y2\n14/10=15/x\n(14/10) 15=x\n21 = x\nAnswer:A", "answer": "A", "textual_logical_units": {"1": "An electric pole, 14 metres high,", "2": "casts a shadow of 10 metres.", "3": "Find the height of a tree that casts a shadow of 15 metres under similar conditions.", "4": "A)21", "5": "B)22", "6": "C)20", "7": "D)23", "8": "E)24", "9": "direct proportion x1/y1=x2/y2", "10": "14/10=15/x", "11": "(14/10) 15=x", "12": "21 = x", "13": "Answer:A", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 9}, {"antecedents": [1, 2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 4, 9, 10, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['An electric pole, 14 metres high,', 'casts a shadow of 10 metres.']\nquestion = 'Find the height of a tree that casts a shadow of 15 metres under similar conditions.'\nchoices = {'A': '21', 'B': '22', 'C': '20', 'D': '23', 'E': '24'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Find the height of a tree that casts a shadow of 15 metres under similar conditions.']\nnew_fact = infer_new_fact(selected) # 'direct proportion x1/y1=x2/y2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['An electric pole, 14 metres high,', 'casts a shadow of 10 metres.', 'Find the height of a tree that casts a shadow of 15 metres under similar conditions.', 'direct proportion x1/y1=x2/y2']\nnew_fact = infer_new_fact(selected) # '14/10=15/x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['14/10=15/x']\nnew_fact = infer_new_fact(selected) # '(14/10) 15=x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(14/10) 15=x']\nnew_fact = infer_new_fact(selected) # '21 = x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the height of a tree that casts a shadow of 15 metres under similar conditions.', 'A)21', 'direct proportion x1/y1=x2/y2', '14/10=15/x', '21 = x']\nnew_fact = infer_new_fact(selected) # 'Answer:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_196_ac0aa42409", "context": "", "question": "At my favorite fruit stand, an orange costs 18 dollars, a pineapple costs 27 dollars, and a grape costs 15 dollars. Using the same logic, can you tell how much a mango costs?", "options": ["A)22 dollars", "B)15 dollars", "C)20 dollars", "D)18 dollars", "E)10 dollars"], "rationale": "He cost is equal to 3 dollars for each letter in the fruits name.", "answer": "B", "textual_logical_units": {"1": "At my favorite fruit stand,", "2": "an orange costs 18 dollars,", "3": "a pineapple costs 27 dollars,", "4": "and a grape costs 15 dollars.", "5": "Using the same logic, can you tell how much a mango costs?", "6": "A)22 dollars", "7": "B)15 dollars", "8": "C)20 dollars", "9": "D)18 dollars", "10": "E)10 dollars", "11": "He cost is equal to 3 dollars for each letter in the fruits name.", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['At my favorite fruit stand,', 'an orange costs 18 dollars,', 'a pineapple costs 27 dollars,', 'and a grape costs 15 dollars.']\nquestion = 'Using the same logic, can you tell how much a mango costs?'\nchoices = {'A': '22 dollars', 'B': '15 dollars', 'C': '20 dollars', 'D': '18 dollars', 'E': '10 dollars'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['an orange costs 18 dollars,', 'a pineapple costs 27 dollars,', 'and a grape costs 15 dollars.']\nnew_fact = infer_new_fact(selected) # 'He cost is equal to 3 dollars for each letter in the fruits name.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He cost is equal to 3 dollars for each letter in the fruits name.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_197_a3a54022e0", "context": "", "question": "In the coordinate plane, a triangle has vertices at (a,0), (b,0), and (x,y). If a>x>b>0>y, which of the following represents the area of that triangle?", "options": ["A)(ay−by)/2", "B)(ab−ay)/2", "C)(by−ay)/2", "D)(ay+by)/x", "E)(a−b)/2y"], "rationale": "We must plug in the three points that satisfy y<0<b<x<a.\nOnly C satisfies the area of a triangle.\nAnswer:\nC. (by−ay)/2", "answer": "C", "textual_logical_units": {"1": "In the coordinate plane, a triangle has vertices at (a,0), (b,0), and (x,y).", "2": "If a>x>b>0>y, which of the following represents the area of that triangle?", "3": "A)(ay−by)/2", "4": "B)(ab−ay)/2", "5": "C)(by−ay)/2", "6": "D)(ay+by)/x", "7": "E)(a−b)/2y", "8": "We must plug in the three points that satisfy y<0<b<x<a.", "9": "Only C satisfies the area of a triangle.", "10": "Answer:", "11": "C. (by−ay)/2", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [2, 5, 8, 9], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['In the coordinate plane, a triangle has vertices at (a,0), (b,0), and (x,y).']\nquestion = 'If a>x>b>0>y, which of the following represents the area of that triangle?'\nchoices = {'A': '(ay−by)/2', 'B': '(ab−ay)/2', 'C': '(by−ay)/2', 'D': '(ay+by)/x', 'E': '(a−b)/2y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If a>x>b>0>y, which of the following represents the area of that triangle?']\nnew_fact = infer_new_fact(selected) # 'We must plug in the three points that satisfy y<0<b<x<a.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In the coordinate plane, a triangle has vertices at (a,0), (b,0), and (x,y).', 'If a>x>b>0>y, which of the following represents the area of that triangle?', 'We must plug in the three points that satisfy y<0<b<x<a.']\nnew_fact = infer_new_fact(selected) # 'Only C satisfies the area of a triangle.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Answer:'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If a>x>b>0>y, which of the following represents the area of that triangle?', 'C)(by−ay)/2', 'We must plug in the three points that satisfy y<0<b<x<a.', 'Only C satisfies the area of a triangle.']\nnew_fact = infer_new_fact(selected) # 'C. (by−ay)/2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['C. (by−ay)/2']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_198_6d706b8a47", "context": "", "question": "A car finishes a journey in 20 hours at the speed of 60 km/hr. If the same distance is to be covered in 10 hours, how much speed does the car gain?", "options": ["A)80 kmph", "B)50 kmph", "C)120 kmph", "D)70 kmph", "E)80 kmph"], "rationale": "20 x 60 = 10 x S2\nS2 = 120 kmph\nAnswer: Option C", "answer": "C", "textual_logical_units": {"1": "A car finishes a journey in 20 hours at the speed of 60 km/hr.", "2": "If the same distance is to be covered in 10 hours,", "3": "how much speed does the car gain?", "4": "A)80 kmph", "5": "B)50 kmph", "6": "C)120 kmph", "7": "D)70 kmph", "8": "E)80 kmph", "9": "20 x 60 = 10 x S2", "10": "S2 = 120 kmph", "11": "Answer: Option C", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['A car finishes a journey in 20 hours at the speed of 60 km/hr.', 'If the same distance is to be covered in 10 hours,']\nquestion = 'how much speed does the car gain?'\nchoices = {'A': '80 kmph', 'B': '50 kmph', 'C': '120 kmph', 'D': '70 kmph', 'E': '80 kmph'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A car finishes a journey in 20 hours at the speed of 60 km/hr.', 'If the same distance is to be covered in 10 hours,']\nnew_fact = infer_new_fact(selected) # '20 x 60 = 10 x S2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['20 x 60 = 10 x S2']\nnew_fact = infer_new_fact(selected) # 'S2 = 120 kmph'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how much speed does the car gain?', 'C)120 kmph', 'S2 = 120 kmph']\nnew_fact = infer_new_fact(selected) # 'Answer: Option C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_199_eccd8bdd22", "context": "", "question": "Three friends Alan, Roger and Peter attempt to answer a question on an exam. Alan randomly guesses the answer, giving him a 1/5 probability of guessing correctly. Roger cheats by looking at the paper of the student in front of him, giving him a 2/3 probability of answering correctly. And Peter dutifully performs the calculations, then marks the answer, giving him a 5/6 probability of a correct answer. What is the probability that the question is answered correctly, but not via cheating?", "options": ["A)1/18", "B)1/9", "C)23/90", "D)5/18", "E)13/45"], "rationale": "Prob(Alan) = 1/5\nProb(Roger) without cheating = 2/3-1 = 1/3\nProb(Peter) = 5/6\nTotal Probability = 1/5*1/3*/5/6 = 1/18\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "Three friends Alan, Roger and", "2": "Peter attempt to answer a question on an exam.", "3": "Alan randomly guesses the answer,", "4": "giving him a 1/5 probability of guessing correctly.", "5": "Roger cheats by looking at the paper of the student in front of him,", "6": "giving him a 2/3 probability of answering correctly.", "7": "And Peter dutifully performs the calculations, then marks the answer,", "8": "giving him a 5/6 probability of a correct answer.", "9": "What is the probability that the question is answered correctly, but not via cheating?", "10": "A)1/18", "11": "B)1/9", "12": "C)23/90", "13": "D)5/18", "14": "E)13/45", "15": "Prob(Alan) = 1/5", "16": "Prob(Roger) without cheating = 2/3-1 = 1/3", "17": "Prob(Peter) = 5/6", "18": "Total Probability = 1/5*1/3*/5/6 = 1/18", "19": "Answer is A", "20": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [3, 4], "consequent": 15}, {"antecedents": [5, 6], "consequent": 16}, {"antecedents": [7, 8], "consequent": 17}, {"antecedents": [15, 16, 17], "consequent": 18}, {"antecedents": [9, 10, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'Three friends Alan, Roger and',\n  'Peter attempt to answer a question on an exam.',\n  'Alan randomly guesses the answer,',\n  'giving him a 1/5 probability of guessing correctly.',\n  'Roger cheats by looking at the paper of the student in front of him,',\n  'giving him a 2/3 probability of answering correctly.',\n  'And Peter dutifully performs the calculations, then marks the answer,',\n  'giving him a 5/6 probability of a correct answer.']\nquestion = 'What is the probability that the question is answered correctly, but not via cheating?'\nchoices = {'A': '1/18', 'B': '1/9', 'C': '23/90', 'D': '5/18', 'E': '13/45'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Alan randomly guesses the answer,', 'giving him a 1/5 probability of guessing correctly.']\nnew_fact = infer_new_fact(selected) # 'Prob(Alan) = 1/5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Roger cheats by looking at the paper of the student in front of him,', 'giving him a 2/3 probability of answering correctly.']\nnew_fact = infer_new_fact(selected) # 'Prob(Roger) without cheating = 2/3-1 = 1/3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['And Peter dutifully performs the calculations, then marks the answer,', 'giving him a 5/6 probability of a correct answer.']\nnew_fact = infer_new_fact(selected) # 'Prob(Peter) = 5/6'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Prob(Alan) = 1/5', 'Prob(Roger) without cheating = 2/3-1 = 1/3', 'Prob(Peter) = 5/6']\nnew_fact = infer_new_fact(selected) # 'Total Probability = 1/5*1/3*/5/6 = 1/18'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the probability that the question is answered correctly, but not via cheating?', 'A)1/18', 'Total Probability = 1/5*1/3*/5/6 = 1/18']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_200_a3f637cf54", "context": "", "question": "The difference between simple interest and C.I. at the same rate for Rs.5000 for 2 years in Rs.72. The rate of interest is?", "options": ["A)10%", "B)12%", "C)6%", "D)8%", "E)4%"], "rationale": "5000 = 72(100/R)2\n5 R2 = 720 => R = 12\nAnswer: Option B", "answer": "B", "textual_logical_units": {"1": "The difference between simple interest and C.I.", "2": "at the same rate for Rs.5000 for 2 years in Rs.72.", "3": "The rate of interest is?", "4": "A)10%", "5": "B)12%", "6": "C)6%", "7": "D)8%", "8": "E)4%", "9": "5000 = 72(100/R)2", "10": "5 R2 = 720 => R = 12", "11": "Answer: Option B", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 5, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['The difference between simple interest and C.I.', 'at the same rate for Rs.5000 for 2 years in Rs.72.']\nquestion = 'The rate of interest is?'\nchoices = {'A': '10%', 'B': '12%', 'C': '6%', 'D': '8%', 'E': '4%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['at the same rate for Rs.5000 for 2 years in Rs.72.']\nnew_fact = infer_new_fact(selected) # '5000 = 72(100/R)2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5000 = 72(100/R)2']\nnew_fact = infer_new_fact(selected) # '5 R2 = 720 => R = 12'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The rate of interest is?', 'B)12%', '5000 = 72(100/R)2', '5 R2 = 720 => R = 12']\nnew_fact = infer_new_fact(selected) # 'Answer: Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_201_419c3aa516", "context": "", "question": "All 250 files on Sam's hard drive are infected by either a virus or a worm or both. The number of files that are infected only by a worm is 2.5 times the number of files that are infected by both a virus and a worm. If 50% of the files were not infected by a virus, how many of Sam's files were NOT infected by a worm?", "options": ["A)50", "B)70", "C)75", "D)100", "E)125"], "rationale": "n(Total) = 250\nn(only worm) = 125(50% of total)\nn(only worm ) = 2.5 * n(both worm and virus)\nSo,\nn(both worn and virus) = 125/2.5 = 50\nn(Total) = n(only worm) + n(both worm and virus) + n(only virus)\nn(only virus) = 250-125-50 = 75\nHence, the files not infected by worm is n(Only virus) = 75\nANSWER :(Option C)", "answer": "C", "textual_logical_units": {"1": "All 250 files on Sam's hard drive are infected by either a virus or a worm or both.", "2": "The number of files that are infected only by a worm is 2.5 times the number of files that are infected by both a virus and a worm.", "3": "If 50% of the files were not infected by a virus,", "4": "how many of Sam's files were NOT infected by a worm?", "5": "A)50", "6": "B)70", "7": "C)75", "8": "D)100", "9": "E)125", "10": "n(Total) = 250", "11": "n(only worm) = 125(50% of total)", "12": "n(only worm ) = 2.5 * n(both worm and virus)", "13": "n(both worn and virus) = 125/2.5 = 50", "14": "n(Total) = n(only worm) + n(both worm and virus) + n(only virus)", "15": "n(only virus) = 250-125-50 = 75", "16": "Hence, the files not infected by worm is n(Only virus) = 75", "17": "ANSWER :(Option C)", "18": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [2], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [10, 11, 12, 13], "consequent": 14}, {"antecedents": [10, 11, 13], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [4, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ \"All 250 files on Sam's hard drive are infected by either a virus or a worm or both.\",\n  'The number of files that are infected only by a worm is 2.5 times the number of files that are infected by both a virus and a worm.',\n  'If 50% of the files were not infected by a virus,']\nquestion = \"how many of Sam's files were NOT infected by a worm?\"\nchoices = {'A': '50', 'B': '70', 'C': '75', 'D': '100', 'E': '125'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"All 250 files on Sam's hard drive are infected by either a virus or a worm or both.\"]\nnew_fact = infer_new_fact(selected) # 'n(Total) = 250'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 50% of the files were not infected by a virus,', 'n(Total) = 250']\nnew_fact = infer_new_fact(selected) # 'n(only worm) = 125(50% of total)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The number of files that are infected only by a worm is 2.5 times the number of files that are infected by both a virus and a worm.']\nnew_fact = infer_new_fact(selected) # 'n(only worm ) = 2.5 * n(both worm and virus)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(only worm) = 125(50% of total)', 'n(only worm ) = 2.5 * n(both worm and virus)']\nnew_fact = infer_new_fact(selected) # 'n(both worn and virus) = 125/2.5 = 50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(Total) = 250', 'n(only worm) = 125(50% of total)', 'n(only worm ) = 2.5 * n(both worm and virus)', 'n(both worn and virus) = 125/2.5 = 50']\nnew_fact = infer_new_fact(selected) # 'n(Total) = n(only worm) + n(both worm and virus) + n(only virus)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(Total) = 250', 'n(only worm) = 125(50% of total)', 'n(both worn and virus) = 125/2.5 = 50']\nnew_fact = infer_new_fact(selected) # 'n(only virus) = 250-125-50 = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n(only virus) = 250-125-50 = 75']\nnew_fact = infer_new_fact(selected) # 'Hence, the files not infected by worm is n(Only virus) = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"how many of Sam's files were NOT infected by a worm?\", 'Hence, the files not infected by worm is n(Only virus) = 75']\nnew_fact = infer_new_fact(selected) # 'ANSWER :(Option C)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER :(Option C)']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_202_d7704fb981", "context": "", "question": "A father wants to divide Rs. 5100 between his two sons, Mohan and Sohan who are 23 and 24 at present. He divides the amount in such a way that if their shares are invested at compound interest at 4% p.a. they will receive equal amount on attaining the age of 26 years. Find Mohan's share.", "options": ["A)2400", "B)2500", "C)2600", "D)2700", "E)None of these"], "rationale": "Let, the amount Mohan and Sohan receive be Rs. m and Rs. n, respectively. The amount that they receive 3 years and 2 years after should be equal.\n⇒m(1+4/100)3=n(1+4/100)2\n⇒m(1+4/100)=n\n⇒m(26/25)=n\n⇒m/n=25/26\nTherefore, Rs.5100 must be distribued in the ratio 25 : 26\nSo Mohan's share = 5100×25/(25+26)=2500\nAnswer B", "answer": "B", "textual_logical_units": {"1": "A father wants to divide Rs.", "2": "5100 between his two sons, Mohan and", "3": "Sohan who are 23 and 24 at present.", "4": "He divides the amount in such a way that if their shares are invested at compound interest at 4% p.a.", "5": "they will receive equal amount on attaining the age of 26 years.", "6": "Find Mohan's share.", "7": "A)2400", "8": "B)2500", "9": "C)2600", "10": "D)2700", "11": "E)None of these", "12": "Let, the amount Mohan and Sohan receive be Rs. m and Rs. n, respectively. The amount that they receive 3 years and 2 years after should be equal.", "13": "⇒m(1+4/100)3=n(1+4/100)2", "14": "⇒m(1+4/100)=n", "15": "⇒m(26/25)=n", "16": "⇒m/n=25/26", "17": "Therefore, Rs.5100 must be distribued in the ratio 25 : 26", "18": "So Mohan's share = 5100×25/(25+26)=2500", "19": "Answer B", "20": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 5], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [1, 2, 16], "consequent": 17}, {"antecedents": [2, 17], "consequent": 18}, {"antecedents": [6, 18], "consequent": 19}, {"antecedents": [19], "consequent": 20}], "metadata": [], "code_input": "####\nfacts = [ 'A father wants to divide Rs.',\n  '5100 between his two sons, Mohan and',\n  'Sohan who are 23 and 24 at present.',\n  'He divides the amount in such a way that if their shares are invested at compound interest at 4% p.a.',\n  'they will receive equal amount on attaining the age of 26 years.']\nquestion = \"Find Mohan's share.\"\nchoices = {'A': '2400', 'B': '2500', 'C': '2600', 'D': '2700', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5100 between his two sons, Mohan and', 'Sohan who are 23 and 24 at present.', 'they will receive equal amount on attaining the age of 26 years.']\nnew_fact = infer_new_fact(selected) # 'Let, the amount Mohan and Sohan receive be Rs. m and Rs. n, respectively. The amount that they receive 3 years and 2 years after should be equal.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He divides the amount in such a way that if their shares are invested at compound interest at 4% p.a.', 'Let, the amount Mohan and Sohan receive be Rs. m and Rs. n, respectively. The amount that they receive 3 years and 2 years after should be equal.']\nnew_fact = infer_new_fact(selected) # '⇒m(1+4/100)3=n(1+4/100)2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒m(1+4/100)3=n(1+4/100)2']\nnew_fact = infer_new_fact(selected) # '⇒m(1+4/100)=n'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒m(1+4/100)=n']\nnew_fact = infer_new_fact(selected) # '⇒m(26/25)=n'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['⇒m(26/25)=n']\nnew_fact = infer_new_fact(selected) # '⇒m/n=25/26'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A father wants to divide Rs.', '5100 between his two sons, Mohan and', '⇒m/n=25/26']\nnew_fact = infer_new_fact(selected) # 'Therefore, Rs.5100 must be distribued in the ratio 25 : 26'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['5100 between his two sons, Mohan and', 'Therefore, Rs.5100 must be distribued in the ratio 25 : 26']\nnew_fact = infer_new_fact(selected) # \"So Mohan's share = 5100×25/(25+26)=2500\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Find Mohan's share.\", \"So Mohan's share = 5100×25/(25+26)=2500\"]\nnew_fact = infer_new_fact(selected) # 'Answer B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_203_ba49452b0b", "context": "", "question": "What is 60% of 30% of 1400 grams?", "options": ["A)450 gms", "B)100 gms", "C)252 gms", "D)240 gms", "E)None of these"], "rationale": "60/100 * 30/100 * 1400= 252\nAnswer: C", "answer": "C", "textual_logical_units": {"1": "What is 60% of 30% of 1400 grams?", "2": "A)450 gms", "3": "B)100 gms", "4": "C)252 gms", "5": "D)240 gms", "6": "E)None of these", "7": "60/100 * 30/100 * 1400= 252", "8": "Answer: C", "9": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'What is 60% of 30% of 1400 grams?'\nchoices = {'A': '450 gms', 'B': '100 gms', 'C': '252 gms', 'D': '240 gms', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What is 60% of 30% of 1400 grams?']\nnew_fact = infer_new_fact(selected) # '60/100 * 30/100 * 1400= 252'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is 60% of 30% of 1400 grams?', '60/100 * 30/100 * 1400= 252']\nnew_fact = infer_new_fact(selected) # 'Answer: C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_204_375f96a556", "context": "", "question": "A certain liquid passes through a drain at a rate of w/25 gallons every x seconds. At that rate, how many minutes will it take y gallons to pass through the drain?", "options": ["A)y/(1200xy)", "B)20xy/w", "C)5xy/(12w)", "D)w/(3xy)", "E)3y/(wx)"], "rationale": "Time needed for w/25 gallons of liquid to pass through a drain = x seconds\nTime needed for w gallons of liquid to pass through a drain = 25x seconds\nTime needed for y gallons of liquid to pass through a drain = (25x/w)*y = 25xy/w seconds\n= (25xy/w )/60 = 5xy/(12w) mins\nAnswer C", "answer": "C", "textual_logical_units": {"1": "A certain liquid passes through a drain at a rate of w/25 gallons every x seconds.", "2": "At that rate, how many minutes will it take y gallons to pass through the drain?", "3": "A)y/(1200xy)", "4": "B)20xy/w", "5": "C)5xy/(12w)", "6": "D)w/(3xy)", "7": "E)3y/(wx)", "8": "Time needed for w/25 gallons of liquid to pass through a drain = x seconds", "9": "Time needed for w gallons of liquid to pass through a drain = 25x seconds", "10": "Time needed for y gallons of liquid to pass through a drain = (25x/w)*y = 25xy/w seconds", "11": "= (25xy/w )/60 = 5xy/(12w) mins", "12": "Answer C", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [2, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['A certain liquid passes through a drain at a rate of w/25 gallons every x seconds.']\nquestion = 'At that rate, how many minutes will it take y gallons to pass through the drain?'\nchoices = {'A': 'y/(1200xy)', 'B': '20xy/w', 'C': '5xy/(12w)', 'D': 'w/(3xy)', 'E': '3y/(wx)'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A certain liquid passes through a drain at a rate of w/25 gallons every x seconds.']\nnew_fact = infer_new_fact(selected) # 'Time needed for w/25 gallons of liquid to pass through a drain = x seconds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Time needed for w/25 gallons of liquid to pass through a drain = x seconds']\nnew_fact = infer_new_fact(selected) # 'Time needed for w gallons of liquid to pass through a drain = 25x seconds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At that rate, how many minutes will it take y gallons to pass through the drain?', 'Time needed for w gallons of liquid to pass through a drain = 25x seconds']\nnew_fact = infer_new_fact(selected) # 'Time needed for y gallons of liquid to pass through a drain = (25x/w)*y = 25xy/w seconds'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Time needed for y gallons of liquid to pass through a drain = (25x/w)*y = 25xy/w seconds']\nnew_fact = infer_new_fact(selected) # '= (25xy/w )/60 = 5xy/(12w) mins'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At that rate, how many minutes will it take y gallons to pass through the drain?', '= (25xy/w )/60 = 5xy/(12w) mins']\nnew_fact = infer_new_fact(selected) # 'Answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_205_86b6ab1f8f", "context": "", "question": "A coin made of alloy of aluminum and silver measures 2 x 15 mm (it is 2 mm thick and its diameter is 15 mm). If the weight of the coin is 30 grams and the volume of aluminum in the alloy equals that of silver, what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?", "options": ["A)36 grams", "B)40 grams", "C)42 grams", "D)48 grams", "E)50 grams"], "rationale": "Coin is basically a cylinder.\nSo volume of coin T= pi r^2 h = pi (7.5)^2 * 2\nCoin=Silver+Aluminum\nNow total volume of coin(T) = volume of silver + volume of aluminum\nAlso, volume of silver(Vs)= volume of aluminum(Va)\nT= Va+Vb\nT=2Va\nVa=T/2= pi (7.5)^2 * 2 /2 = pi (7.5)^2\nSilver is twice as heavy as aluminum.\nLet the weight of aluminum in coin be x\nWeight of Silver = 2x\nTotal weight of coin = 30\nx+2x=30\nx=10\nWeight of Aluminum in coin is 10gm\nWright of Silver in coin is 20gm.\nWeight of Aluminum in coin is 10gm and volume is pi (7.5)^2\nNow new Aluminum coin is made with dimension 1x30mm.\nVolume of this new coin = pi (15)^2*1.\nVolume of pi (7.5)^2 contains weight of 10 gm of aluminum\nVolume of pi (15)^2*1 will contain = 10/ pi(7.5)^ * pi (15)^2 * 1= 40gm\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "A coin made of alloy of aluminum and", "2": "silver measures 2 x 15 mm (it is 2 mm thick and", "3": "its diameter is 15 mm).", "4": "If the weight of the coin is 30 grams and", "5": "the volume of aluminum in the alloy equals that of silver,", "6": "what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?", "7": "A)36 grams", "8": "B)40 grams", "9": "C)42 grams", "10": "D)48 grams", "11": "E)50 grams", "12": "Coin is basically a cylinder.", "13": "So volume of coin T= pi r^2 h = pi (7.5)^2 * 2", "14": "Coin=Silver+Aluminum", "15": "Now total volume of coin(T) = volume of silver + volume of aluminum", "16": "Also, volume of silver(Vs)= volume of aluminum(Va)", "17": "T= Va+Vb", "18": "T=2Va", "19": "Va=T/2= pi (7.5)^2 * 2 /2 = pi (7.5)^2", "20": "Silver is twice as heavy as aluminum.", "21": "Let the weight of aluminum in coin be x", "22": "Weight of Silver = 2x", "23": "Total weight of coin = 30", "24": "x+2x=30", "25": "x=10", "26": "Weight of Aluminum in coin is 10gm", "27": "Wright of Silver in coin is 20gm.", "28": "Weight of Aluminum in coin is 10gm and volume is pi (7.5)^2", "29": "Now new Aluminum coin is made with dimension 1x30mm.", "30": "Volume of this new coin = pi (15)^2*1.", "31": "Volume of pi (7.5)^2 contains weight of 10 gm of aluminum", "32": "Volume of pi (15)^2*1 will contain = 10/ pi(7.5)^ * pi (15)^2 * 1= 40gm", "33": "ANSWER:B", "34": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 12}, {"antecedents": [1, 3, 12], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [13, 14], "consequent": 15}, {"antecedents": [5], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [17], "consequent": 18}, {"antecedents": [18], "consequent": 19}, {"antecedents": [6], "consequent": 20}, {"antecedents": [1], "consequent": 21}, {"antecedents": [20, 21], "consequent": 22}, {"antecedents": [4], "consequent": 23}, {"antecedents": [21, 22, 23], "consequent": 24}, {"antecedents": [24], "consequent": 25}, {"antecedents": [6, 25], "consequent": 26}, {"antecedents": [6, 26], "consequent": 27}, {"antecedents": [19, 25], "consequent": 28}, {"antecedents": [6], "consequent": 29}, {"antecedents": [28], "consequent": 30}, {"antecedents": [26, 28], "consequent": 31}, {"antecedents": [13, 31], "consequent": 32}, {"antecedents": [6, 32], "consequent": 33}, {"antecedents": [33], "consequent": 34}], "metadata": [], "code_input": "####\nfacts = [ 'A coin made of alloy of aluminum and',\n  'silver measures 2 x 15 mm (it is 2 mm thick and',\n  'its diameter is 15 mm).',\n  'If the weight of the coin is 30 grams and',\n  'the volume of aluminum in the alloy equals that of silver,']\nquestion = 'what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?'\nchoices = {'A': '36 grams', 'B': '40 grams', 'C': '42 grams', 'D': '48 grams', 'E': '50 grams'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'Coin is basically a cylinder.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A coin made of alloy of aluminum and', 'its diameter is 15 mm).', 'Coin is basically a cylinder.']\nnew_fact = infer_new_fact(selected) # 'So volume of coin T= pi r^2 h = pi (7.5)^2 * 2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A coin made of alloy of aluminum and', 'silver measures 2 x 15 mm (it is 2 mm thick and']\nnew_fact = infer_new_fact(selected) # 'Coin=Silver+Aluminum'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So volume of coin T= pi r^2 h = pi (7.5)^2 * 2', 'Coin=Silver+Aluminum']\nnew_fact = infer_new_fact(selected) # 'Now total volume of coin(T) = volume of silver + volume of aluminum'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the volume of aluminum in the alloy equals that of silver,']\nnew_fact = infer_new_fact(selected) # 'Also, volume of silver(Vs)= volume of aluminum(Va)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Also, volume of silver(Vs)= volume of aluminum(Va)']\nnew_fact = infer_new_fact(selected) # 'T= Va+Vb'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T= Va+Vb']\nnew_fact = infer_new_fact(selected) # 'T=2Va'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['T=2Va']\nnew_fact = infer_new_fact(selected) # 'Va=T/2= pi (7.5)^2 * 2 /2 = pi (7.5)^2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?']\nnew_fact = infer_new_fact(selected) # 'Silver is twice as heavy as aluminum.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A coin made of alloy of aluminum and']\nnew_fact = infer_new_fact(selected) # 'Let the weight of aluminum in coin be x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Silver is twice as heavy as aluminum.', 'Let the weight of aluminum in coin be x']\nnew_fact = infer_new_fact(selected) # 'Weight of Silver = 2x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the weight of the coin is 30 grams and']\nnew_fact = infer_new_fact(selected) # 'Total weight of coin = 30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let the weight of aluminum in coin be x', 'Weight of Silver = 2x', 'Total weight of coin = 30']\nnew_fact = infer_new_fact(selected) # 'x+2x=30'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x+2x=30']\nnew_fact = infer_new_fact(selected) # 'x=10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?', 'x=10']\nnew_fact = infer_new_fact(selected) # 'Weight of Aluminum in coin is 10gm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?', 'Weight of Aluminum in coin is 10gm']\nnew_fact = infer_new_fact(selected) # 'Wright of Silver in coin is 20gm.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Va=T/2= pi (7.5)^2 * 2 /2 = pi (7.5)^2', 'x=10']\nnew_fact = infer_new_fact(selected) # 'Weight of Aluminum in coin is 10gm and volume is pi (7.5)^2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?']\nnew_fact = infer_new_fact(selected) # 'Now new Aluminum coin is made with dimension 1x30mm.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Weight of Aluminum in coin is 10gm and volume is pi (7.5)^2']\nnew_fact = infer_new_fact(selected) # 'Volume of this new coin = pi (15)^2*1.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Weight of Aluminum in coin is 10gm', 'Weight of Aluminum in coin is 10gm and volume is pi (7.5)^2']\nnew_fact = infer_new_fact(selected) # 'Volume of pi (7.5)^2 contains weight of 10 gm of aluminum'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['So volume of coin T= pi r^2 h = pi (7.5)^2 * 2', 'Volume of pi (7.5)^2 contains weight of 10 gm of aluminum']\nnew_fact = infer_new_fact(selected) # 'Volume of pi (15)^2*1 will contain = 10/ pi(7.5)^ * pi (15)^2 * 1= 40gm'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what will be the weight of a coin measuring 1 x 30 mm made of pure aluminum if silver is twice as heavy as aluminum?', 'Volume of pi (15)^2*1 will contain = 10/ pi(7.5)^ * pi (15)^2 * 1= 40gm']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_206_6ade51e26d", "context": "", "question": "If 10 is subtracted from 2/3 of a number the result is equal to sum of 40 and 1/3 of the number. Find the number", "options": ["A)100", "B)160", "C)150", "D)210", "E)220"], "rationale": "Let the number be x. Then,\n2x/3 - 10 = x/3 + 40\n=> x/3 = 50 => x = 150\nAnswer: Option C", "answer": "C", "textual_logical_units": {"1": "If 10 is subtracted from 2/3 of a number the result is equal to sum of 40 and 1/3 of the number.", "2": "Find the number", "3": "A)100", "4": "B)160", "5": "C)150", "6": "D)210", "7": "E)220", "8": "Let the number be x. Then,", "9": "2x/3 - 10 = x/3 + 40", "10": "=> x/3 = 50 => x = 150", "11": "Answer: Option C", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['If 10 is subtracted from 2/3 of a number the result is equal to sum of 40 and 1/3 of the number.']\nquestion = 'Find the number'\nchoices = {'A': '100', 'B': '160', 'C': '150', 'D': '210', 'E': '220'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Find the number']\nnew_fact = infer_new_fact(selected) # 'Let the number be x. Then,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 10 is subtracted from 2/3 of a number the result is equal to sum of 40 and 1/3 of the number.', 'Let the number be x. Then,']\nnew_fact = infer_new_fact(selected) # '2x/3 - 10 = x/3 + 40'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x/3 - 10 = x/3 + 40']\nnew_fact = infer_new_fact(selected) # '=> x/3 = 50 => x = 150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the number', '=> x/3 = 50 => x = 150']\nnew_fact = infer_new_fact(selected) # 'Answer: Option C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_207_25ae028cd9", "context": "", "question": "What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?", "options": ["A)9", "B)7", "C)3", "D)8", "E)12"], "rationale": "Any quadratic equation will have real and distinct roots if the discriminant D > 0\nThe discriminant 'D' of a quadratic equation ax2 + bx + c = 0 is given by b2 - 4ac\nIn this question, the value of D = 52 - 4 * 1 * k\nIf D > 0, then 25 > 4k or k < 6.2.\nTherefore, the highest integral value that k can take is 3.\ncorrect choice is (C)", "answer": "C", "textual_logical_units": {"1": "What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?", "2": "A)9", "3": "B)7", "4": "C)3", "5": "D)8", "6": "E)12", "7": "Any quadratic equation will have real and distinct roots if the discriminant D > 0", "8": "The discriminant 'D' of a quadratic equation ax2 + bx + c = 0 is given by b2 - 4ac", "9": "In this question, the value of D = 52 - 4 * 1 * k", "10": "If D > 0, then 25 > 4k or k < 6.2.", "11": "Therefore, the highest integral value that k can take is 3.", "12": "correct choice is (C)", "13": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = []\nquestion = \"What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?\"\nchoices = {'A': '9', 'B': '7', 'C': '3', 'D': '8', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?\"]\nnew_fact = infer_new_fact(selected) # 'Any quadratic equation will have real and distinct roots if the discriminant D > 0'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Any quadratic equation will have real and distinct roots if the discriminant D > 0']\nnew_fact = infer_new_fact(selected) # \"The discriminant 'D' of a quadratic equation ax2 + bx + c = 0 is given by b2 - 4ac\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?\", \"The discriminant 'D' of a quadratic equation ax2 + bx + c = 0 is given by b2 - 4ac\"]\nnew_fact = infer_new_fact(selected) # 'In this question, the value of D = 52 - 4 * 1 * k'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In this question, the value of D = 52 - 4 * 1 * k']\nnew_fact = infer_new_fact(selected) # 'If D > 0, then 25 > 4k or k < 6.2.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If D > 0, then 25 > 4k or k < 6.2.']\nnew_fact = infer_new_fact(selected) # 'Therefore, the highest integral value that k can take is 3.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"What is the largest integral value of 'k' for which the quadratic equation x2 - 5x + k = 0 will have two real and distinct roots?\", 'Therefore, the highest integral value that k can take is 3.']\nnew_fact = infer_new_fact(selected) # 'correct choice is (C)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct choice is (C)']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_208_543e147cbc", "context": "", "question": "900 + 5 × 12 = ?", "options": ["A)820", "B)202", "C)420", "D)209", "E)960"], "rationale": "900 + 5 × 12 = ?\nor, ? = 900 + 60 = 960\nAnswer E", "answer": "E", "textual_logical_units": {"1": "900 + 5 × 12 = ?", "2": "A)820", "3": "B)202", "4": "C)420", "5": "D)209", "6": "E)960", "7": "900 + 5 × 12 = ?", "8": "or, ? = 900 + 60 = 960", "9": "Answer E", "10": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 6, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = []\nquestion = '900 + 5 × 12 = ?'\nchoices = {'A': '820', 'B': '202', 'C': '420', 'D': '209', 'E': '960'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['900 + 5 × 12 = ?']\nnew_fact = infer_new_fact(selected) # '900 + 5 × 12 = ?'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['900 + 5 × 12 = ?']\nnew_fact = infer_new_fact(selected) # 'or, ? = 900 + 60 = 960'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['900 + 5 × 12 = ?', 'E)960', 'or, ? = 900 + 60 = 960']\nnew_fact = infer_new_fact(selected) # 'Answer E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_209_49bf9c4d23", "context": "", "question": "Shweta rides at the rate of 10 km per hour but stops for 10 minutes to take rest at the end of every 15 km. How many hours will she take to cover 100 km", "options": ["A)9 hours.", "B)10 hours.", "C)11 hours.", "D)12 hours.", "E)13 hours."], "rationale": "After every 15 km she will take a rest of 10 minutes so after every 90 minutes she will 10 min break.\nshe will 10 hours to cover 90 km distance and 1 hour to cover remaining 10km.\nSo the answer is 11 hours.\nANSWER:C", "answer": "C", "textual_logical_units": {"1": "Shweta rides at the rate of 10 km per hour but stops for 10 minutes to take rest at the end of every 15 km.", "2": "How many hours will she take to cover 100 km", "3": "A)9 hours.", "4": "B)10 hours.", "5": "C)11 hours.", "6": "D)12 hours.", "7": "E)13 hours.", "8": "After every 15 km she will take a rest of 10 minutes so after every 90 minutes she will 10 min break.", "9": "she will 10 hours to cover 90 km distance and 1 hour to cover remaining 10km.", "10": "So the answer is 11 hours.", "11": "ANSWER:C", "12": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['Shweta rides at the rate of 10 km per hour but stops for 10 minutes to take rest at the end of every 15 km.']\nquestion = 'How many hours will she take to cover 100 km'\nchoices = {'A': '9 hours.', 'B': '10 hours.', 'C': '11 hours.', 'D': '12 hours.', 'E': '13 hours.'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Shweta rides at the rate of 10 km per hour but stops for 10 minutes to take rest at the end of every 15 km.']\nnew_fact = infer_new_fact(selected) # 'After every 15 km she will take a rest of 10 minutes so after every 90 minutes she will 10 min break.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many hours will she take to cover 100 km', 'After every 15 km she will take a rest of 10 minutes so after every 90 minutes she will 10 min break.']\nnew_fact = infer_new_fact(selected) # 'she will 10 hours to cover 90 km distance and 1 hour to cover remaining 10km.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['she will 10 hours to cover 90 km distance and 1 hour to cover remaining 10km.']\nnew_fact = infer_new_fact(selected) # 'So the answer is 11 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many hours will she take to cover 100 km', 'So the answer is 11 hours.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_210_3527f971a6", "context": "", "question": "Mr.Sam takes 17 hours to go by train to a certain city and return by car. He loses 4 hours if he goes both ways by train. How long would he have taken if he had traveled by car in both ways?", "options": ["A)22 hrs", "B)18 hrs", "C)16 hrs", "D)20 hrs", "E)13 hrs"], "rationale": "Going one way by train and one way by car, he takes 17 hours.\nGoing both ways by train, he takes 4 hours more => The train takes 4 hours more one way\nTherefore travelling both ways by car, he takes 4 hours less than 17\n=> He takes 17-4 = 13 hours.\nE)", "answer": "E", "textual_logical_units": {"1": "Mr.Sam takes 17 hours to go by train to a certain city and return by car.", "2": "He loses 4 hours if he goes both ways by train.", "3": "How long would he have taken if he had traveled by car in both ways?", "4": "A)22 hrs", "5": "B)18 hrs", "6": "C)16 hrs", "7": "D)20 hrs", "8": "E)13 hrs", "9": "Going one way by train and one way by car, he takes 17 hours.", "10": "Going both ways by train, he takes 4 hours more => The train takes 4 hours more one way", "11": "Therefore travelling both ways by car, he takes 4 hours less than 17", "12": "=> He takes 17-4 = 13 hours.", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Mr.Sam takes 17 hours to go by train to a certain city and return by car.', 'He loses 4 hours if he goes both ways by train.']\nquestion = 'How long would he have taken if he had traveled by car in both ways?'\nchoices = {'A': '22 hrs', 'B': '18 hrs', 'C': '16 hrs', 'D': '20 hrs', 'E': '13 hrs'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Mr.Sam takes 17 hours to go by train to a certain city and return by car.']\nnew_fact = infer_new_fact(selected) # 'Going one way by train and one way by car, he takes 17 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['He loses 4 hours if he goes both ways by train.']\nnew_fact = infer_new_fact(selected) # 'Going both ways by train, he takes 4 hours more => The train takes 4 hours more one way'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Going one way by train and one way by car, he takes 17 hours.', 'Going both ways by train, he takes 4 hours more => The train takes 4 hours more one way']\nnew_fact = infer_new_fact(selected) # 'Therefore travelling both ways by car, he takes 4 hours less than 17'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore travelling both ways by car, he takes 4 hours less than 17']\nnew_fact = infer_new_fact(selected) # '=> He takes 17-4 = 13 hours.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> He takes 17-4 = 13 hours.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_211_ab21c60208", "context": "", "question": "Jim filled his dog's bowl with dog food. Starting at 8:00 am, Jim's dog ate exactly once an hour, consuming exactly 1/3 of the dog food remaining in the bowl at each feeding session. Approximately, what percent of the original food was in the dog's bowl right before the dog began to eat at noon of the same day?", "options": ["A)20%", "B)25%", "C)30%", "D)35%", "E)40%"], "rationale": "The amount remaining after each feeding session is 2/3 of what was in the bowl.\nThere were four feeding sessions.\nThe amount remaining just before noon was (2/3)^4 = 16/81, which is about 20%.\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "Jim filled his dog's bowl with dog food.", "2": "Starting at 8:00 am, Jim's dog ate exactly once an hour,", "3": "consuming exactly 1/3 of the dog food remaining in the bowl at each feeding session.", "4": "Approximately, what percent of the original food was in the dog's bowl right before the dog began to eat at noon of the same day?", "5": "A)20%", "6": "B)25%", "7": "C)30%", "8": "D)35%", "9": "E)40%", "10": "The amount remaining after each feeding session is 2/3 of what was in the bowl.", "11": "There were four feeding sessions.", "12": "The amount remaining just before noon was (2/3)^4 = 16/81, which is about 20%.", "13": "The answer is A.", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [3], "consequent": 10}, {"antecedents": [2, 3], "consequent": 11}, {"antecedents": [4, 10, 11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ \"Jim filled his dog's bowl with dog food.\",\n  \"Starting at 8:00 am, Jim's dog ate exactly once an hour,\",\n  'consuming exactly 1/3 of the dog food remaining in the bowl at each feeding session.']\nquestion = \"Approximately, what percent of the original food was in the dog's bowl right before the dog began to eat at noon of the same day?\"\nchoices = {'A': '20%', 'B': '25%', 'C': '30%', 'D': '35%', 'E': '40%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['consuming exactly 1/3 of the dog food remaining in the bowl at each feeding session.']\nnew_fact = infer_new_fact(selected) # 'The amount remaining after each feeding session is 2/3 of what was in the bowl.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Starting at 8:00 am, Jim's dog ate exactly once an hour,\", 'consuming exactly 1/3 of the dog food remaining in the bowl at each feeding session.']\nnew_fact = infer_new_fact(selected) # 'There were four feeding sessions.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Approximately, what percent of the original food was in the dog's bowl right before the dog began to eat at noon of the same day?\", 'The amount remaining after each feeding session is 2/3 of what was in the bowl.', 'There were four feeding sessions.']\nnew_fact = infer_new_fact(selected) # 'The amount remaining just before noon was (2/3)^4 = 16/81, which is about 20%.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Approximately, what percent of the original food was in the dog's bowl right before the dog began to eat at noon of the same day?\", 'The amount remaining just before noon was (2/3)^4 = 16/81, which is about 20%.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_212_06f8ceb80b", "context": "", "question": "John conducted a survey about car color. 60% of the people who took the survey were women. Of the men who were surveyed, 75% preferred red cars over green cars. If 10 men liked green cars more than red, how many people took the survey?", "options": ["A)100", "B)120", "C)50", "D)200", "E)80"], "rationale": "Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.\nThe number of men G who liked green cars more than red cars is given by\nG = M - 25%M\nGiven that G = 10, solve for N\n40 = (N - 60%N) - 25%(N - 60%N)\nN = 100\nCorrect answer is A.", "answer": "A", "textual_logical_units": {"1": "John conducted a survey about car color.", "2": "60% of the people who took the survey were women.", "3": "Of the men who were surveyed,", "4": "75% preferred red cars over green cars.", "5": "If 10 men liked green cars more than red,", "6": "how many people took the survey?", "7": "A)100", "8": "B)120", "9": "C)50", "10": "D)200", "11": "E)80", "12": "Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.", "13": "The number of men G who liked green cars more than red cars is given by", "14": "G = M - 25%M", "15": "Given that G = 10, solve for N", "16": "40 = (N - 60%N) - 25%(N - 60%N)", "17": "N = 100", "18": "Correct answer is A.", "19": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [4], "consequent": 14}, {"antecedents": [5, 12], "consequent": 15}, {"antecedents": [12, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [6, 17], "consequent": 18}, {"antecedents": [18], "consequent": 19}], "metadata": [], "code_input": "####\nfacts = [ 'John conducted a survey about car color.',\n  '60% of the people who took the survey were women.',\n  'Of the men who were surveyed,',\n  '75% preferred red cars over green cars.',\n  'If 10 men liked green cars more than red,']\nquestion = 'how many people took the survey?'\nchoices = {'A': '100', 'B': '120', 'C': '50', 'D': '200', 'E': '80'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['60% of the people who took the survey were women.']\nnew_fact = infer_new_fact(selected) # 'Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['75% preferred red cars over green cars.']\nnew_fact = infer_new_fact(selected) # 'The number of men G who liked green cars more than red cars is given by'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['75% preferred red cars over green cars.']\nnew_fact = infer_new_fact(selected) # 'G = M - 25%M'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 10 men liked green cars more than red,', 'Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.']\nnew_fact = infer_new_fact(selected) # 'Given that G = 10, solve for N'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Let N be the number of people who took the survey. The number of men M is given by M = N - 60%N.', 'G = M - 25%M', 'Given that G = 10, solve for N']\nnew_fact = infer_new_fact(selected) # '40 = (N - 60%N) - 25%(N - 60%N)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['40 = (N - 60%N) - 25%(N - 60%N)']\nnew_fact = infer_new_fact(selected) # 'N = 100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many people took the survey?', 'N = 100']\nnew_fact = infer_new_fact(selected) # 'Correct answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Correct answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_213_86d0dea32c", "context": "", "question": "How many ways A boy can reach the top of stairs which contain 10 steps, when he can take either one or two steps every time?", "options": ["A)88", "B)89", "C)90", "D)91", "E)92"], "rationale": "case 1:1 1 1 1 1 1 1 1 1 1 > 1!\ncase 2:1 1 1 1 1 1 1 1 2 > 9!/8!\ncase 3:1 1 1 1 1 1 2 2 > 8!/6!*2!\ncase 4:1 1 1 1 2 2 2 > 7!/4!*3!\ncase 5:1 1 2 2 2 2 > 6!/4!*2!\ncase 6:2 2 2 2 2 > 1!\nadd answers of all cases => 1+9+28+35+15+1= 89\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "How many ways A boy can reach the top of stairs which contain 10 steps,", "2": "when he can take either one or two steps every time?", "3": "A)88", "4": "B)89", "5": "C)90", "6": "D)91", "7": "E)92", "8": "case 1:1 1 1 1 1 1 1 1 1 1 > 1!", "9": "case 2:1 1 1 1 1 1 1 1 2 > 9!/8!", "10": "case 3:1 1 1 1 1 1 2 2 > 8!/6!*2!", "11": "case 4:1 1 1 1 2 2 2 > 7!/4!*3!", "12": "case 5:1 1 2 2 2 2 > 6!/4!*2!", "13": "case 6:2 2 2 2 2 > 1!", "14": "add answers of all cases => 1+9+28+35+15+1= 89", "15": "ANSWER:B", "16": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [8, 9, 10, 11, 12, 13], "consequent": 14}, {"antecedents": [2, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['How many ways A boy can reach the top of stairs which contain 10 steps,']\nquestion = 'when he can take either one or two steps every time?'\nchoices = {'A': '88', 'B': '89', 'C': '90', 'D': '91', 'E': '92'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['How many ways A boy can reach the top of stairs which contain 10 steps,', 'when he can take either one or two steps every time?']\nnew_fact = infer_new_fact(selected) # 'case 1:1 1 1 1 1 1 1 1 1 1 > 1!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 1:1 1 1 1 1 1 1 1 1 1 > 1!']\nnew_fact = infer_new_fact(selected) # 'case 2:1 1 1 1 1 1 1 1 2 > 9!/8!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 2:1 1 1 1 1 1 1 1 2 > 9!/8!']\nnew_fact = infer_new_fact(selected) # 'case 3:1 1 1 1 1 1 2 2 > 8!/6!*2!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 3:1 1 1 1 1 1 2 2 > 8!/6!*2!']\nnew_fact = infer_new_fact(selected) # 'case 4:1 1 1 1 2 2 2 > 7!/4!*3!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 4:1 1 1 1 2 2 2 > 7!/4!*3!']\nnew_fact = infer_new_fact(selected) # 'case 5:1 1 2 2 2 2 > 6!/4!*2!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 5:1 1 2 2 2 2 > 6!/4!*2!']\nnew_fact = infer_new_fact(selected) # 'case 6:2 2 2 2 2 > 1!'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['case 1:1 1 1 1 1 1 1 1 1 1 > 1!', 'case 2:1 1 1 1 1 1 1 1 2 > 9!/8!', 'case 3:1 1 1 1 1 1 2 2 > 8!/6!*2!', 'case 4:1 1 1 1 2 2 2 > 7!/4!*3!', 'case 5:1 1 2 2 2 2 > 6!/4!*2!', 'case 6:2 2 2 2 2 > 1!']\nnew_fact = infer_new_fact(selected) # 'add answers of all cases => 1+9+28+35+15+1= 89'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['when he can take either one or two steps every time?', 'add answers of all cases => 1+9+28+35+15+1= 89']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_214_6a48e431cd", "context": "", "question": "IF one gallon of soft drink is made of 40% orange juice and 60% water, how many additional gallons of orange juice must be mixed in order to make the orange juice 60% of the soft drink?", "options": ["A)0.5", "B)1", "C)1.25", "D)1.5", "E)2"], "rationale": "Let x be the quantity to be added\n(0.4+y) / 1+y = 60/100\n=> 4+10y = 6+6y\n=> y = 2/4 = 0.5\nAnswer is A", "answer": "A", "textual_logical_units": {"1": "IF one gallon of soft drink is made of 40% orange juice and 60% water,", "2": "how many additional gallons of orange juice must be mixed in order to make the orange juice 60% of the soft drink?", "3": "A)0.5", "4": "B)1", "5": "C)1.25", "6": "D)1.5", "7": "E)2", "8": "Let x be the quantity to be added", "9": "(0.4+y) / 1+y = 60/100", "10": "=> 4+10y = 6+6y", "11": "=> y = 2/4 = 0.5", "12": "Answer is A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 8}, {"antecedents": [1, 2, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['IF one gallon of soft drink is made of 40% orange juice and 60% water,']\nquestion = 'how many additional gallons of orange juice must be mixed in order to make the orange juice 60% of the soft drink?'\nchoices = {'A': '0.5', 'B': '1', 'C': '1.25', 'D': '1.5', 'E': '2'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['how many additional gallons of orange juice must be mixed in order to make the orange juice 60% of the soft drink?']\nnew_fact = infer_new_fact(selected) # 'Let x be the quantity to be added'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['IF one gallon of soft drink is made of 40% orange juice and 60% water,', 'how many additional gallons of orange juice must be mixed in order to make the orange juice 60% of the soft drink?', 'Let x be the quantity to be added']\nnew_fact = infer_new_fact(selected) # '(0.4+y) / 1+y = 60/100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(0.4+y) / 1+y = 60/100']\nnew_fact = infer_new_fact(selected) # '=> 4+10y = 6+6y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 4+10y = 6+6y']\nnew_fact = infer_new_fact(selected) # '=> y = 2/4 = 0.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A)0.5', '=> y = 2/4 = 0.5']\nnew_fact = infer_new_fact(selected) # 'Answer is A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_215_39d0945982", "context": "", "question": "What is the units digit of 9^3-7?", "options": ["A)1", "B)3", "C)5", "D)2", "E)4"], "rationale": "The unit's digit of 9^3 = 9\n9-7=2\nAnswer D", "answer": "D", "textual_logical_units": {"1": "What is the units digit of 9^3-7?", "2": "A)1", "3": "B)3", "4": "C)5", "5": "D)2", "6": "E)4", "7": "The unit's digit of 9^3 = 9", "8": "9-7=2", "9": "Answer D", "10": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [7], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'What is the units digit of 9^3-7?'\nchoices = {'A': '1', 'B': '3', 'C': '5', 'D': '2', 'E': '4'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What is the units digit of 9^3-7?']\nnew_fact = infer_new_fact(selected) # \"The unit's digit of 9^3 = 9\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"The unit's digit of 9^3 = 9\"]\nnew_fact = infer_new_fact(selected) # '9-7=2'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the units digit of 9^3-7?', '9-7=2']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_216_dcff786936", "context": "", "question": "5 horses are in a race. Mr.Jain selects two of horses at random and bets on them. The probability that he selected the winning horse is", "options": ["A)1/5", "B)2/5", "C)3/5", "D)4/5", "E)6/5"], "rationale": "There are 5 horses.\nProbability of winning for each horse = 1/5.\nProbability of winning with 2 selected horses= (1/5)+(1/5)= 2/5.\nAnswer is 2/5.\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "5 horses are in a race.", "2": "Mr.Jain selects two of horses at random and bets on them.", "3": "The probability that he selected the winning horse is", "4": "A)1/5", "5": "B)2/5", "6": "C)3/5", "7": "D)4/5", "8": "E)6/5", "9": "There are 5 horses.", "10": "Probability of winning for each horse = 1/5.", "11": "Probability of winning with 2 selected horses= (1/5)+(1/5)= 2/5.", "12": "Answer is 2/5.", "13": "ANSWER:B", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['5 horses are in a race.', 'Mr.Jain selects two of horses at random and bets on them.']\nquestion = 'The probability that he selected the winning horse is'\nchoices = {'A': '1/5', 'B': '2/5', 'C': '3/5', 'D': '4/5', 'E': '6/5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5 horses are in a race.']\nnew_fact = infer_new_fact(selected) # 'There are 5 horses.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There are 5 horses.']\nnew_fact = infer_new_fact(selected) # 'Probability of winning for each horse = 1/5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Mr.Jain selects two of horses at random and bets on them.', 'Probability of winning for each horse = 1/5.']\nnew_fact = infer_new_fact(selected) # 'Probability of winning with 2 selected horses= (1/5)+(1/5)= 2/5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Probability of winning with 2 selected horses= (1/5)+(1/5)= 2/5.']\nnew_fact = infer_new_fact(selected) # 'Answer is 2/5.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The probability that he selected the winning horse is', 'Answer is 2/5.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_217_39b5e97d31", "context": "", "question": "On dividing 2272 and 875 by a 3-digit number N, we get the same remainder. The sum of the digits of N is:", "options": ["A)10", "B)11", "C)12", "D)13", "E)14"], "rationale": "(2272 - 875) = 1397, is exactly divisible by N.\nNow, 1397 = 11 * 127\nThe required 3-digit number is 127, the sum of whose digit is 10.\nANSWER:A", "answer": "A", "textual_logical_units": {"1": "On dividing 2272 and 875 by a 3-digit number N,", "2": "we get the same remainder.", "3": "The sum of the digits of N is:", "4": "A)10", "5": "B)11", "6": "C)12", "7": "D)13", "8": "E)14", "9": "(2272 - 875) = 1397, is exactly divisible by N.", "10": "Now, 1397 = 11 * 127", "11": "The required 3-digit number is 127, the sum of whose digit is 10.", "12": "ANSWER:A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [3, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['On dividing 2272 and 875 by a 3-digit number N,', 'we get the same remainder.']\nquestion = 'The sum of the digits of N is:'\nchoices = {'A': '10', 'B': '11', 'C': '12', 'D': '13', 'E': '14'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['On dividing 2272 and 875 by a 3-digit number N,']\nnew_fact = infer_new_fact(selected) # '(2272 - 875) = 1397, is exactly divisible by N.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(2272 - 875) = 1397, is exactly divisible by N.']\nnew_fact = infer_new_fact(selected) # 'Now, 1397 = 11 * 127'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Now, 1397 = 11 * 127']\nnew_fact = infer_new_fact(selected) # 'The required 3-digit number is 127, the sum of whose digit is 10.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The sum of the digits of N is:', 'The required 3-digit number is 127, the sum of whose digit is 10.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_218_eb01145589", "context": "", "question": "On a test the passing students had an average of 83, while the failing students had an average\nof 55. If the overall class average was 76, what percent of the class passed?", "options": ["A)44%", "B)66%", "C)68%", "D)72%", "E)75%"], "rationale": "Let p = proportion that passed. Then 83p + 55(1- p) = 76, so p = 21/28 = 75\ncorrect answer E", "answer": "E", "textual_logical_units": {"1": "On a test the passing students had an average of 83,", "2": "while the failing students had an average\nof 55.", "3": "If the overall class average was 76,", "4": "what percent of the class passed?", "5": "A)44%", "6": "B)66%", "7": "C)68%", "8": "D)72%", "9": "E)75%", "10": "Let p = proportion that passed. Then 83p + 55(1- p) = 76, so p = 21/28 = 75", "11": "correct answer E", "12": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['On a test the passing students had an average of 83,', 'while the failing students had an average\\nof 55.', 'If the overall class average was 76,']\nquestion = 'what percent of the class passed?'\nchoices = {'A': '44%', 'B': '66%', 'C': '68%', 'D': '72%', 'E': '75%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['On a test the passing students had an average of 83,', 'while the failing students had an average\\nof 55.', 'If the overall class average was 76,', 'what percent of the class passed?']\nnew_fact = infer_new_fact(selected) # 'Let p = proportion that passed. Then 83p + 55(1- p) = 76, so p = 21/28 = 75'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what percent of the class passed?', 'Let p = proportion that passed. Then 83p + 55(1- p) = 76, so p = 21/28 = 75']\nnew_fact = infer_new_fact(selected) # 'correct answer E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct answer E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_219_cb12350316", "context": "", "question": "The average wages of a worker during a fortnight comprising of 15 consecutive working days was $90 per day. During the first 7 days, his average wage was $87 per day and the average wage during the last 7 days was $92 per day. What was his wage on the 8th day?", "options": ["A)$83", "B)$92", "C)$90", "D)$97", "E)$104"], "rationale": "The total wage earned during the 15 days that the worker worked = 15 * 90 = $ 1350.\nThe total wage earned during the first 7 days = 7 * 87 = $ 609.\nThe total wage earned during the last 7 days = 7 * 92 = $ 644.\nTotal wage earned during the 15 days = wage during first 7 days + wage on 8th day + wage during the last 7 days.\nOr 1350 = 609 + wage on 8th day + 644\nWage on 8th day = 1350 - 609 - 644 = $ 97.\nAnswer D", "answer": "D", "textual_logical_units": {"1": "The average wages of a worker during a fortnight comprising of 15 consecutive working days was $90 per day.", "2": "During the first 7 days,", "3": "his average wage was $87 per day and", "4": "the average wage during the last 7 days was $92 per day.", "5": "What was his wage on the 8th day?", "6": "A)$83", "7": "B)$92", "8": "C)$90", "9": "D)$97", "10": "E)$104", "11": "The total wage earned during the 15 days that the worker worked = 15 * 90 = $ 1350.", "12": "The total wage earned during the first 7 days = 7 * 87 = $ 609.", "13": "The total wage earned during the last 7 days = 7 * 92 = $ 644.", "14": "Total wage earned during the 15 days = wage during first 7 days + wage on 8th day + wage during the last 7 days.", "15": "Or 1350 = 609 + wage on 8th day + 644", "16": "Wage on 8th day = 1350 - 609 - 644 = $ 97.", "17": "Answer D", "18": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 11}, {"antecedents": [2, 3], "consequent": 12}, {"antecedents": [4], "consequent": 13}, {"antecedents": [11, 12, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [15], "consequent": 16}, {"antecedents": [5, 16], "consequent": 17}, {"antecedents": [17], "consequent": 18}], "metadata": [], "code_input": "####\nfacts = [ 'The average wages of a worker during a fortnight comprising of 15 consecutive working days was $90 per day.',\n  'During the first 7 days,',\n  'his average wage was $87 per day and',\n  'the average wage during the last 7 days was $92 per day.']\nquestion = 'What was his wage on the 8th day?'\nchoices = {'A': '$83', 'B': '$92', 'C': '$90', 'D': '$97', 'E': '$104'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The average wages of a worker during a fortnight comprising of 15 consecutive working days was $90 per day.']\nnew_fact = infer_new_fact(selected) # 'The total wage earned during the 15 days that the worker worked = 15 * 90 = $ 1350.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['During the first 7 days,', 'his average wage was $87 per day and']\nnew_fact = infer_new_fact(selected) # 'The total wage earned during the first 7 days = 7 * 87 = $ 609.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['the average wage during the last 7 days was $92 per day.']\nnew_fact = infer_new_fact(selected) # 'The total wage earned during the last 7 days = 7 * 92 = $ 644.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The total wage earned during the 15 days that the worker worked = 15 * 90 = $ 1350.', 'The total wage earned during the first 7 days = 7 * 87 = $ 609.', 'The total wage earned during the last 7 days = 7 * 92 = $ 644.']\nnew_fact = infer_new_fact(selected) # 'Total wage earned during the 15 days = wage during first 7 days + wage on 8th day + wage during the last 7 days.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Total wage earned during the 15 days = wage during first 7 days + wage on 8th day + wage during the last 7 days.']\nnew_fact = infer_new_fact(selected) # 'Or 1350 = 609 + wage on 8th day + 644'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Or 1350 = 609 + wage on 8th day + 644']\nnew_fact = infer_new_fact(selected) # 'Wage on 8th day = 1350 - 609 - 644 = $ 97.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What was his wage on the 8th day?', 'Wage on 8th day = 1350 - 609 - 644 = $ 97.']\nnew_fact = infer_new_fact(selected) # 'Answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_220_adbcc6148c", "context": "", "question": "Two numbers are in the ratio 3:5. If 9 is subtracted from each, the new numbers are in the ratio 12:23. The smaller number is?", "options": ["A)21", "B)33", "C)35", "D)42", "E)58"], "rationale": "Let the numbers be 3x and 5x\n3x-9 / 5x-9 = 12/23\n23(3x-9) = 12(5x-9)\n9x = 99\nx = 11\nThe smaller number is = 3*11 = 33\nAnswer is B", "answer": "B", "textual_logical_units": {"1": "Two numbers are in the ratio 3:5.", "2": "If 9 is subtracted from each,", "3": "the new numbers are in the ratio 12:23.", "4": "The smaller number is?", "5": "A)21", "6": "B)33", "7": "C)35", "8": "D)42", "9": "E)58", "10": "Let the numbers be 3x and 5x", "11": "3x-9 / 5x-9 = 12/23", "12": "23(3x-9) = 12(5x-9)", "13": "9x = 99", "14": "x = 11", "15": "The smaller number is = 3*11 = 33", "16": "Answer is B", "17": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [4, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = ['Two numbers are in the ratio 3:5.', 'If 9 is subtracted from each,', 'the new numbers are in the ratio 12:23.']\nquestion = 'The smaller number is?'\nchoices = {'A': '21', 'B': '33', 'C': '35', 'D': '42', 'E': '58'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Two numbers are in the ratio 3:5.']\nnew_fact = infer_new_fact(selected) # 'Let the numbers be 3x and 5x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 9 is subtracted from each,', 'the new numbers are in the ratio 12:23.', 'Let the numbers be 3x and 5x']\nnew_fact = infer_new_fact(selected) # '3x-9 / 5x-9 = 12/23'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x-9 / 5x-9 = 12/23']\nnew_fact = infer_new_fact(selected) # '23(3x-9) = 12(5x-9)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['23(3x-9) = 12(5x-9)']\nnew_fact = infer_new_fact(selected) # '9x = 99'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['9x = 99']\nnew_fact = infer_new_fact(selected) # 'x = 11'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The smaller number is?', 'x = 11']\nnew_fact = infer_new_fact(selected) # 'The smaller number is = 3*11 = 33'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The smaller number is?', 'The smaller number is = 3*11 = 33']\nnew_fact = infer_new_fact(selected) # 'Answer is B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_221_29f1770752", "context": "", "question": "If 6 yrs are subtracted from the present age of Ajay and the remainder is divided by 18, then the present age of Rahul is obtained. If Rahul is 2 yrs younger to Denis whose age is 5 yrs, then what is Ajay's present age?", "options": ["A)40", "B)60", "C)70", "D)80", "E)90"], "rationale": "Present age of Denis =5 years\nPresent age of Rahul =5−2=3\nLet present age of Ajay =x\nThen, present age of Rahul =x−618\nx−618=3⇒x−6=3×18=54⇒x=54+6=60\nB", "answer": "B", "textual_logical_units": {"1": "If 6 yrs are subtracted from the present age of Ajay and", "2": "the remainder is divided by 18,", "3": "then the present age of Rahul is obtained.", "4": "If Rahul is 2 yrs younger to Denis whose age is 5 yrs,", "5": "then what is Ajay's present age?", "6": "A)40", "7": "B)60", "8": "C)70", "9": "D)80", "10": "E)90", "11": "Present age of Denis =5 years", "12": "Present age of Rahul =5−2=3", "13": "Let present age of Ajay =x", "14": "Then, present age of Rahul =x−618", "15": "x−618=3⇒x−6=3×18=54⇒x=54+6=60", "16": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [4], "consequent": 11}, {"antecedents": [4], "consequent": 12}, {"antecedents": [5], "consequent": 13}, {"antecedents": [1, 2], "consequent": 14}, {"antecedents": [12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'If 6 yrs are subtracted from the present age of Ajay and',\n  'the remainder is divided by 18,',\n  'then the present age of Rahul is obtained.',\n  'If Rahul is 2 yrs younger to Denis whose age is 5 yrs,']\nquestion = \"then what is Ajay's present age?\"\nchoices = {'A': '40', 'B': '60', 'C': '70', 'D': '80', 'E': '90'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Rahul is 2 yrs younger to Denis whose age is 5 yrs,']\nnew_fact = infer_new_fact(selected) # 'Present age of Denis =5 years'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Rahul is 2 yrs younger to Denis whose age is 5 yrs,']\nnew_fact = infer_new_fact(selected) # 'Present age of Rahul =5−2=3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"then what is Ajay's present age?\"]\nnew_fact = infer_new_fact(selected) # 'Let present age of Ajay =x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If 6 yrs are subtracted from the present age of Ajay and', 'the remainder is divided by 18,']\nnew_fact = infer_new_fact(selected) # 'Then, present age of Rahul =x−618'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Present age of Rahul =5−2=3', 'Then, present age of Rahul =x−618']\nnew_fact = infer_new_fact(selected) # 'x−618=3⇒x−6=3×18=54⇒x=54+6=60'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x−618=3⇒x−6=3×18=54⇒x=54+6=60']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_222_bd6d496908", "context": "", "question": "Anna has 4 books. If she decide to arrange the 4 books in every possible combination and moved just one book every minute, how long would it taken by her ?", "options": ["A)22 minutes", "B)30 minutes", "C)15 minutes", "D)24 minutes", "E)35 minutes"], "rationale": "Number of ways of arranging 4 books = 4 ! = 4 x 3 x 2 x 1 = 24.\nSo, total time taken = 24 minutes\nAnswer: D", "answer": "D", "textual_logical_units": {"1": "Anna has 4 books.", "2": "If she decide to arrange the 4 books in every possible combination and", "3": "moved just one book every minute,", "4": "how long would it taken by her ?", "5": "A)22 minutes", "6": "B)30 minutes", "7": "C)15 minutes", "8": "D)24 minutes", "9": "E)35 minutes", "10": "Number of ways of arranging 4 books = 4 ! = 4 x 3 x 2 x 1 = 24.", "11": "So, total time taken = 24 minutes", "12": "Answer: D", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Anna has 4 books.', 'If she decide to arrange the 4 books in every possible combination and', 'moved just one book every minute,']\nquestion = 'how long would it taken by her ?'\nchoices = {'A': '22 minutes', 'B': '30 minutes', 'C': '15 minutes', 'D': '24 minutes', 'E': '35 minutes'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Anna has 4 books.', 'If she decide to arrange the 4 books in every possible combination and', 'moved just one book every minute,', 'how long would it taken by her ?']\nnew_fact = infer_new_fact(selected) # 'Number of ways of arranging 4 books = 4 ! = 4 x 3 x 2 x 1 = 24.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how long would it taken by her ?', 'Number of ways of arranging 4 books = 4 ! = 4 x 3 x 2 x 1 = 24.']\nnew_fact = infer_new_fact(selected) # 'So, total time taken = 24 minutes'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how long would it taken by her ?', 'So, total time taken = 24 minutes']\nnew_fact = infer_new_fact(selected) # 'Answer: D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_223_b5c7d29dd8", "context": "", "question": "The manufacturer of tyres is offering a 20% discount on the price of its tubeless tyres. Some retailers are offering additional discounts. If a retailer offers an additional 20% discount, then what is the total discount available at that retailer?", "options": ["A)10%", "B)25%", "C)28%", "D)30%", "E)36%"], "rationale": "Discount = 1-0.8*0.8=1-0.64=0.36=36%\nAnswer choice E", "answer": "E", "textual_logical_units": {"1": "The manufacturer of tyres is offering a 20% discount on the price of its tubeless tyres.", "2": "Some retailers are offering additional discounts.", "3": "If a retailer offers an additional 20% discount,", "4": "then what is the total discount available at that retailer?", "5": "A)10%", "6": "B)25%", "7": "C)28%", "8": "D)30%", "9": "E)36%", "10": "Discount = 1-0.8*0.8=1-0.64=0.36=36%", "11": "Answer choice E", "12": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 3], "consequent": 10}, {"antecedents": [4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'The manufacturer of tyres is offering a 20% discount on the price of its tubeless tyres.',\n  'Some retailers are offering additional discounts.',\n  'If a retailer offers an additional 20% discount,']\nquestion = 'then what is the total discount available at that retailer?'\nchoices = {'A': '10%', 'B': '25%', 'C': '28%', 'D': '30%', 'E': '36%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The manufacturer of tyres is offering a 20% discount on the price of its tubeless tyres.', 'If a retailer offers an additional 20% discount,']\nnew_fact = infer_new_fact(selected) # 'Discount = 1-0.8*0.8=1-0.64=0.36=36%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then what is the total discount available at that retailer?', 'Discount = 1-0.8*0.8=1-0.64=0.36=36%']\nnew_fact = infer_new_fact(selected) # 'Answer choice E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer choice E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_224_3d4b8e1e59", "context": "", "question": "A rectangular parking space is marked out by painting three of its sides. If the length of the unpainted side is 9 feet, and the sum of the lengths of the painted sides is 37 feet, then what is the area of the parking space in square feet?", "options": ["A)46", "B)81", "C)126", "D)252", "E)None"], "rationale": "We have l=9 and l+2b=37\nArea = (l x b)\n=(9 x 14) sq.ft\n= 126 sq.ft.\nAnswer C", "answer": "C", "textual_logical_units": {"1": "A rectangular parking space is marked out by painting three of its sides.", "2": "If the length of the unpainted side is 9 feet,", "3": "and the sum of the lengths of the painted sides is 37 feet,", "4": "then what is the area of the parking space in square feet?", "5": "A)46", "6": "B)81", "7": "C)126", "8": "D)252", "9": "E)None", "10": "We have l=9 and l+2b=37", "11": "Area = (l x b)", "12": "=(9 x 14) sq.ft", "13": "= 126 sq.ft.", "14": "Answer C", "15": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 10}, {"antecedents": [4], "consequent": 11}, {"antecedents": [10, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [4, 13], "consequent": 14}, {"antecedents": [14], "consequent": 15}], "metadata": [], "code_input": "####\nfacts = [ 'A rectangular parking space is marked out by painting three of its sides.',\n  'If the length of the unpainted side is 9 feet,',\n  'and the sum of the lengths of the painted sides is 37 feet,']\nquestion = 'then what is the area of the parking space in square feet?'\nchoices = {'A': '46', 'B': '81', 'C': '126', 'D': '252', 'E': 'None'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If the length of the unpainted side is 9 feet,', 'and the sum of the lengths of the painted sides is 37 feet,']\nnew_fact = infer_new_fact(selected) # 'We have l=9 and l+2b=37'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then what is the area of the parking space in square feet?']\nnew_fact = infer_new_fact(selected) # 'Area = (l x b)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We have l=9 and l+2b=37', 'Area = (l x b)']\nnew_fact = infer_new_fact(selected) # '=(9 x 14) sq.ft'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=(9 x 14) sq.ft']\nnew_fact = infer_new_fact(selected) # '= 126 sq.ft.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then what is the area of the parking space in square feet?', '= 126 sq.ft.']\nnew_fact = infer_new_fact(selected) # 'Answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_225_b36b3a70cb", "context": "", "question": "Peter wants to find 10 additional people to form a scavenger hunt team with him. If he has 10 friends who would like to participate, how many choices does he have for forming his team?", "options": ["A)0", "B)1", "C)2", "D)3", "E)4"], "rationale": "Peter has 10 friends out of which he has to select 10 so 10C10= 1 Choice.\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "Peter wants to find 10 additional people to form a scavenger hunt team with him.", "2": "If he has 10 friends who would like to participate,", "3": "how many choices does he have for forming his team?", "4": "A)0", "5": "B)1", "6": "C)2", "7": "D)3", "8": "E)4", "9": "Peter has 10 friends out of which he has to select 10 so 10C10= 1 Choice.", "10": "ANSWER:B", "11": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['Peter wants to find 10 additional people to form a scavenger hunt team with him.', 'If he has 10 friends who would like to participate,']\nquestion = 'how many choices does he have for forming his team?'\nchoices = {'A': '0', 'B': '1', 'C': '2', 'D': '3', 'E': '4'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Peter wants to find 10 additional people to form a scavenger hunt team with him.', 'If he has 10 friends who would like to participate,']\nnew_fact = infer_new_fact(selected) # 'Peter has 10 friends out of which he has to select 10 so 10C10= 1 Choice.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many choices does he have for forming his team?', 'Peter has 10 friends out of which he has to select 10 so 10C10= 1 Choice.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_226_19fb9b2546", "context": "", "question": "The average weight of 10 oarsmen in a boat is increased by 1.8 kg when one of the crew, who weighs 53 kg is replaced by a new man. Find the weight of the new man.", "options": ["A)71", "B)62", "C)43", "D)67", "E)40"], "rationale": "Total weight increased = (1.8 x 10) kg =18 kg.\nWeight of the new man = (53 + 18) kg =71 kg.\nANSWER A", "answer": "A", "textual_logical_units": {"1": "The average weight of 10 oarsmen in a boat is increased by 1.8 kg when one of the crew,", "2": "who weighs 53 kg is replaced by a new man.", "3": "Find the weight of the new man.", "4": "A)71", "5": "B)62", "6": "C)43", "7": "D)67", "8": "E)40", "9": "Total weight increased = (1.8 x 10) kg =18 kg.", "10": "Weight of the new man = (53 + 18) kg =71 kg.", "11": "ANSWER A", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['The average weight of 10 oarsmen in a boat is increased by 1.8 kg when one of the crew,', 'who weighs 53 kg is replaced by a new man.']\nquestion = 'Find the weight of the new man.'\nchoices = {'A': '71', 'B': '62', 'C': '43', 'D': '67', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The average weight of 10 oarsmen in a boat is increased by 1.8 kg when one of the crew,']\nnew_fact = infer_new_fact(selected) # 'Total weight increased = (1.8 x 10) kg =18 kg.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['who weighs 53 kg is replaced by a new man.', 'Find the weight of the new man.', 'Total weight increased = (1.8 x 10) kg =18 kg.']\nnew_fact = infer_new_fact(selected) # 'Weight of the new man = (53 + 18) kg =71 kg.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Find the weight of the new man.', 'Weight of the new man = (53 + 18) kg =71 kg.']\nnew_fact = infer_new_fact(selected) # 'ANSWER A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_227_3f7ef3960e", "context": "", "question": "A box contains a certain number of balls, marked successively from 1 to n. If there are 45 different ways that two balls can be selected from the box such that the ball with number 3 marked on it is not selected, then what is the value of n?", "options": ["A)11", "B)10", "C)9", "D)8", "E)7"], "rationale": "(n-1)C2=45\nn-1=10\nn=11\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "A box contains a certain number of balls,", "2": "marked successively from 1 to n.", "3": "If there are 45 different ways that two balls can be selected from the box such that the ball with number 3 marked on it is not selected,", "4": "then what is the value of n?", "5": "A)11", "6": "B)10", "7": "C)9", "8": "D)8", "9": "E)7", "10": "(n-1)C2=45", "11": "n-1=10", "12": "n=11", "13": "The answer is A.", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [4, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'A box contains a certain number of balls,',\n  'marked successively from 1 to n.',\n  'If there are 45 different ways that two balls can be selected from the box such that the ball with number 3 marked on it is not selected,']\nquestion = 'then what is the value of n?'\nchoices = {'A': '11', 'B': '10', 'C': '9', 'D': '8', 'E': '7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['marked successively from 1 to n.', 'If there are 45 different ways that two balls can be selected from the box such that the ball with number 3 marked on it is not selected,', 'then what is the value of n?']\nnew_fact = infer_new_fact(selected) # '(n-1)C2=45'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(n-1)C2=45']\nnew_fact = infer_new_fact(selected) # 'n-1=10'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['n-1=10']\nnew_fact = infer_new_fact(selected) # 'n=11'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['then what is the value of n?', 'n=11']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_228_9a9fd7abf9", "context": "", "question": "If Q, a positive integer, has 5 factors, which of the following must be true about Q?\nI. Q is the square of a prime number.\nII. Q is the fourth power of a prime number.\nIII. Q is the product of two prime numbers.", "options": ["A)I only", "B)III only", "C)II only", "D)I and II only", "E)I and III only"], "rationale": "If Q has 5 factors, we can represent Q = a^4, where a is positive integer more than 1.Let's assume that \"a\" is not a prime number. Let a = kp, where both k and p are positive integers.\nThus, Q = (kp)4=k4∗p4(kp)4=k4∗p4. Now the number of factors of Q = (4+1)*(4+1) = 25. But as the given condition states that Q has ONLY 5 factors, thus \"a\" can't have any other factor except 1 and itself. Thus, a = prime number.\nStatement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can't answer a \"MUST be true question\"\nStatement II : Always true as proved above.\nStatement III : Again take a =2. Thus, Q = 64. We don't have this as product of 2 primes.\nThe Answer is, B.", "answer": "B", "textual_logical_units": {"1": "If Q, a positive integer, has 5 factors,", "2": "which of the following must be true about Q?\nI.", "3": "Q is the square of a prime number.\nII.", "4": "Q is the fourth power of a prime number.\nIII.", "5": "Q is the product of two prime numbers.", "6": "A)I only", "7": "B)III only", "8": "C)II only", "9": "D)I and II only", "10": "E)I and III only", "11": "If Q has 5 factors, we can represent Q = a^4, where a is positive integer more than 1.Let's assume that \"a\" is not a prime number. Let a = kp, where both k and p are positive integers.", "12": "Thus, Q = (kp)4=k4∗p4(kp)4=k4∗p4. Now the number of factors of Q = (4+1)*(4+1) = 25. But as the given condition states that Q has ONLY 5 factors, thus \"a\" can't have any other factor except 1 and itself. Thus, a = prime number.", "13": "Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can't answer a \"MUST be true question\"", "14": "Statement II : Always true as proved above.", "15": "Statement III : Again take a =2. Thus, Q = 64. We don't have this as product of 2 primes.", "16": "The Answer is, B.", "17": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 4], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [13], "consequent": 15}, {"antecedents": [2, 3, 4, 5, 7, 13, 14, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}], "metadata": [], "code_input": "####\nfacts = [ 'If Q, a positive integer, has 5 factors,',\n  'which of the following must be true about Q?\\nI.',\n  'Q is the square of a prime number.\\nII.',\n  'Q is the fourth power of a prime number.\\nIII.']\nquestion = 'Q is the product of two prime numbers.'\nchoices = {'A': 'I only', 'B': 'III only', 'C': 'II only', 'D': 'I and II only', 'E': 'I and III only'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If Q, a positive integer, has 5 factors,', 'Q is the fourth power of a prime number.\\nIII.']\nnew_fact = infer_new_fact(selected) # 'If Q has 5 factors, we can represent Q = a^4, where a is positive integer more than 1.Let\\'s assume that \"a\" is not a prime number. Let a = kp, where both k and p are positive integers.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If Q has 5 factors, we can represent Q = a^4, where a is positive integer more than 1.Let\\'s assume that \"a\" is not a prime number. Let a = kp, where both k and p are positive integers.']\nnew_fact = infer_new_fact(selected) # 'Thus, Q = (kp)4=k4∗p4(kp)4=k4∗p4. Now the number of factors of Q = (4+1)*(4+1) = 25. But as the given condition states that Q has ONLY 5 factors, thus \"a\" can\\'t have any other factor except 1 and itself. Thus, a = prime number.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Thus, Q = (kp)4=k4∗p4(kp)4=k4∗p4. Now the number of factors of Q = (4+1)*(4+1) = 25. But as the given condition states that Q has ONLY 5 factors, thus \"a\" can\\'t have any other factor except 1 and itself. Thus, a = prime number.']\nnew_fact = infer_new_fact(selected) # 'Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can\\'t answer a \"MUST be true question\"'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can\\'t answer a \"MUST be true question\"']\nnew_fact = infer_new_fact(selected) # 'Statement II : Always true as proved above.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can\\'t answer a \"MUST be true question\"']\nnew_fact = infer_new_fact(selected) # \"Statement III : Again take a =2. Thus, Q = 64. We don't have this as product of 2 primes.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which of the following must be true about Q?\\nI.', 'Q is the square of a prime number.\\nII.', 'Q is the fourth power of a prime number.\\nIII.', 'Q is the product of two prime numbers.', 'B)III only', 'Statement I :We can represent Q = (a^2)^2. Thus, we have to prove whether a^2 is a prime number. Take a=2. We can see that it is not a prime number. Thus, this option can\\'t answer a \"MUST be true question\"', 'Statement II : Always true as proved above.', \"Statement III : Again take a =2. Thus, Q = 64. We don't have this as product of 2 primes.\"]\nnew_fact = infer_new_fact(selected) # 'The Answer is, B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The Answer is, B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_229_f3ff901d5a", "context": "", "question": "If 6x - y = 24 and y = 3x, what is the value of x?", "options": ["A)8", "B)9", "C)10", "D)11", "E)12"], "rationale": "6x - 3x = 24\n3x = 24\nx = 8\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "If 6x - y = 24 and y = 3x,", "2": "what is the value of x?", "3": "A)8", "4": "B)9", "5": "C)10", "6": "D)11", "7": "E)12", "8": "6x - 3x = 24", "9": "3x = 24", "10": "x = 8", "11": "The answer is A.", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['If 6x - y = 24 and y = 3x,']\nquestion = 'what is the value of x?'\nchoices = {'A': '8', 'B': '9', 'C': '10', 'D': '11', 'E': '12'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If 6x - y = 24 and y = 3x,']\nnew_fact = infer_new_fact(selected) # '6x - 3x = 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['6x - 3x = 24']\nnew_fact = infer_new_fact(selected) # '3x = 24'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3x = 24']\nnew_fact = infer_new_fact(selected) # 'x = 8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the value of x?', 'A)8', 'x = 8']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_230_2c474f955a", "context": "", "question": "You can rent DVDs at a local video store for $4.00 per movie without a membership. However, if you purchase a membership for $7.00 per month, you can rent DVDs for $2.00 each. What is the minimum amount of DVDs you would have to rent to make it worth it to purchase the membership?", "options": ["A)1", "B)2", "C)3", "D)4", "E)5"], "rationale": "Let's compare the cost to rent x CDs.\n4x > 2x+7\n2x > 7\nx > 3.5\nThe minimum number of CDs you would need to rent is 4.\nThe answer is D.", "answer": "D", "textual_logical_units": {"1": "You can rent DVDs at a local video store for $4.00 per movie without a membership.", "2": "However, if you purchase a membership for $7.00 per month,", "3": "you can rent DVDs for $2.00 each.", "4": "What is the minimum amount of DVDs you would have to rent to make it worth it to purchase the membership?", "5": "A)1", "6": "B)2", "7": "C)3", "8": "D)4", "9": "E)5", "10": "Let's compare the cost to rent x CDs.", "11": "4x > 2x+7", "12": "2x > 7", "13": "x > 3.5", "14": "The minimum number of CDs you would need to rent is 4.", "15": "The answer is D.", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [4], "consequent": 10}, {"antecedents": [1, 2, 3, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [12], "consequent": 13}, {"antecedents": [13], "consequent": 14}, {"antecedents": [4, 8, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'You can rent DVDs at a local video store for $4.00 per movie without a membership.',\n  'However, if you purchase a membership for $7.00 per month,',\n  'you can rent DVDs for $2.00 each.']\nquestion = 'What is the minimum amount of DVDs you would have to rent to make it worth it to purchase the membership?'\nchoices = {'A': '1', 'B': '2', 'C': '3', 'D': '4', 'E': '5'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['What is the minimum amount of DVDs you would have to rent to make it worth it to purchase the membership?']\nnew_fact = infer_new_fact(selected) # \"Let's compare the cost to rent x CDs.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['You can rent DVDs at a local video store for $4.00 per movie without a membership.', 'However, if you purchase a membership for $7.00 per month,', 'you can rent DVDs for $2.00 each.', \"Let's compare the cost to rent x CDs.\"]\nnew_fact = infer_new_fact(selected) # '4x > 2x+7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['4x > 2x+7']\nnew_fact = infer_new_fact(selected) # '2x > 7'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x > 7']\nnew_fact = infer_new_fact(selected) # 'x > 3.5'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x > 3.5']\nnew_fact = infer_new_fact(selected) # 'The minimum number of CDs you would need to rent is 4.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the minimum amount of DVDs you would have to rent to make it worth it to purchase the membership?', 'D)4', 'The minimum number of CDs you would need to rent is 4.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_231_1779eac373", "context": "", "question": "A bag of cat food weighs 7 pounds and 4 ounces. How much does the bag weigh in ounces?", "options": ["A) 108", "B) 112", "C) 116", "D) 120", "E) 124"], "rationale": "1 pound = 16 ounces.\n7 pounds and 4 ounces = (7 x 16) + 4 = 116 ounces.\nAnswer: C.", "answer": "C", "textual_logical_units": {"1": "A bag of cat food weighs 7 pounds and 4 ounces.", "2": "How much does the bag weigh in ounces?", "3": "A) 108", "4": "B) 112", "5": "C) 116", "6": "D) 120", "7": "E) 124", "8": "1 pound = 16 ounces.", "9": "7 pounds and 4 ounces = (7 x 16) + 4 = 116 ounces.", "10": "Answer: C.", "11": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 8}, {"antecedents": [1, 8], "consequent": 9}, {"antecedents": [2, 5, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['A bag of cat food weighs 7 pounds and 4 ounces.']\nquestion = 'How much does the bag weigh in ounces?'\nchoices = {'A': '108', 'B': '112', 'C': '116', 'D': '120', 'E': '124'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # '1 pound = 16 ounces.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A bag of cat food weighs 7 pounds and 4 ounces.', '1 pound = 16 ounces.']\nnew_fact = infer_new_fact(selected) # '7 pounds and 4 ounces = (7 x 16) + 4 = 116 ounces.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How much does the bag weigh in ounces?', 'C) 116', '7 pounds and 4 ounces = (7 x 16) + 4 = 116 ounces.']\nnew_fact = infer_new_fact(selected) # 'Answer: C.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: C.']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_232_3d865eccd7", "context": "", "question": "By himself, Jack can clean a yacht in 12 hours. On a particular day, he happens to finish two-thirds of the work. The remaining portion of the work is done by Jill, whose rate of cleaning is just 5% of what Jack can do. How long does it take Jill to finish the remaining work?", "options": ["A)4", "B)8", "C)22", "D)50", "E)20"], "rationale": "Jack did 2/3 of the work, which is 8 hours. So if Jack would finish the job this would take him 4 extra hours. Jill's rate is 5% of what Jack would do in those 4 hours. That means it would take her ten times as much time as Jack put into the job. 5*4 equals 20, answer E.", "answer": "E", "textual_logical_units": {"1": "By himself, Jack can clean a yacht in 12 hours.", "2": "On a particular day, he happens to finish two-thirds of the work.", "3": "The remaining portion of the work is done by Jill,", "4": "whose rate of cleaning is just 5% of what Jack can do.", "5": "How long does it take Jill to finish the remaining work?", "6": "A)4", "7": "B)8", "8": "C)22", "9": "D)50", "10": "E)20", "11": "Jack did 2/3 of the work, which is 8 hours. So if Jack would finish the job this would take him 4 extra hours. Jill's rate is 5% of what Jack would do in those 4 hours. That means it would take her ten times as much time as Jack put into the job. 5*4 equals 20, answer E.", "12": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [5, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'By himself, Jack can clean a yacht in 12 hours.',\n  'On a particular day, he happens to finish two-thirds of the work.',\n  'The remaining portion of the work is done by Jill,',\n  'whose rate of cleaning is just 5% of what Jack can do.']\nquestion = 'How long does it take Jill to finish the remaining work?'\nchoices = {'A': '4', 'B': '8', 'C': '22', 'D': '50', 'E': '20'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['How long does it take Jill to finish the remaining work?', 'E)20']\nnew_fact = infer_new_fact(selected) # \"Jack did 2/3 of the work, which is 8 hours. So if Jack would finish the job this would take him 4 extra hours. Jill's rate is 5% of what Jack would do in those 4 hours. That means it would take her ten times as much time as Jack put into the job. 5*4 equals 20, answer E.\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Jack did 2/3 of the work, which is 8 hours. So if Jack would finish the job this would take him 4 extra hours. Jill's rate is 5% of what Jack would do in those 4 hours. That means it would take her ten times as much time as Jack put into the job. 5*4 equals 20, answer E.\"]\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_233_9b3d637ef1", "context": "", "question": "Professors borrowed Rs. 5000 from the university at simple interest. After 3 years, the university got Rs. 300 on interest. What was the rate of interest per annum?", "options": ["A)2%", "B)8%", "C)5%", "D)10%", "E)None of these"], "rationale": "(100 * 300 )/(5000*3) = 2%\nAnswer : A", "answer": "A", "textual_logical_units": {"1": "Professors borrowed Rs.", "2": "5000 from the university at simple interest.", "3": "After 3 years, the university got Rs.", "4": "300 on interest.", "5": "What was the rate of interest per annum?", "6": "A)2%", "7": "B)8%", "8": "C)5%", "9": "D)10%", "10": "E)None of these", "11": "(100 * 300 )/(5000*3) = 2%", "12": "Answer : A", "13": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 4], "consequent": 11}, {"antecedents": [4, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['Professors borrowed Rs.', '5000 from the university at simple interest.', 'After 3 years, the university got Rs.', '300 on interest.']\nquestion = 'What was the rate of interest per annum?'\nchoices = {'A': '2%', 'B': '8%', 'C': '5%', 'D': '10%', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['5000 from the university at simple interest.', 'After 3 years, the university got Rs.', '300 on interest.']\nnew_fact = infer_new_fact(selected) # '(100 * 300 )/(5000*3) = 2%'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['300 on interest.', 'A)2%', '(100 * 300 )/(5000*3) = 2%']\nnew_fact = infer_new_fact(selected) # 'Answer : A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer : A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_234_4687e1e56c", "context": "", "question": "In a sale, a discount of 20% was available on all the articles. If Vinit purchased an article for Rs.4578 in the sale. What was the actual selling price of the article?", "options": ["A)s.5050", "B)s.5723", "C)s.5040", "D)s.4950", "E)s.4870"], "rationale": "Rs.4578 = 20% of SP\n:. SP = 4578 x 100/80 = Rs.5723\nAnswer: Option B", "answer": "B", "textual_logical_units": {"1": "In a sale, a discount of 20% was available on all the articles.", "2": "If Vinit purchased an article for Rs.4578 in the sale.", "3": "What was the actual selling price of the article?", "4": "A)s.5050", "5": "B)s.5723", "6": "C)s.5040", "7": "D)s.4950", "8": "E)s.4870", "9": "Rs.4578 = 20% of SP", "10": ":. SP = 4578 x 100/80 = Rs.5723", "11": "Answer: Option B", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 5, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['In a sale, a discount of 20% was available on all the articles.', 'If Vinit purchased an article for Rs.4578 in the sale.']\nquestion = 'What was the actual selling price of the article?'\nchoices = {'A': 's.5050', 'B': 's.5723', 'C': 's.5040', 'D': 's.4950', 'E': 's.4870'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['In a sale, a discount of 20% was available on all the articles.', 'If Vinit purchased an article for Rs.4578 in the sale.']\nnew_fact = infer_new_fact(selected) # 'Rs.4578 = 20% of SP'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Rs.4578 = 20% of SP']\nnew_fact = infer_new_fact(selected) # ':. SP = 4578 x 100/80 = Rs.5723'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What was the actual selling price of the article?', 'B)s.5723', ':. SP = 4578 x 100/80 = Rs.5723']\nnew_fact = infer_new_fact(selected) # 'Answer: Option B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: Option B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_235_8182b5622b", "context": "", "question": "If 27 bottles of soda cost A cents, how much will B bottles cost in dollars?", "options": ["A)AB/2700", "B)27/AB", "C)AB/270", "D)2700/AB", "E)100AB/27"], "rationale": "27 bottles cost A cents or A/100 dollars\n1 bottle will cost = A/100/27 = A/2700\nB bottles in dollars = B*A/2700 = AB/2700\nHence, answer will be A.", "answer": "A", "textual_logical_units": {"1": "If 27 bottles of soda cost A cents,", "2": "how much will B bottles cost in dollars?", "3": "A)AB/2700", "4": "B)27/AB", "5": "C)AB/270", "6": "D)2700/AB", "7": "E)100AB/27", "8": "27 bottles cost A cents or A/100 dollars", "9": "1 bottle will cost = A/100/27 = A/2700", "10": "B bottles in dollars = B*A/2700 = AB/2700", "11": "Hence, answer will be A.", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [2, 3, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['If 27 bottles of soda cost A cents,']\nquestion = 'how much will B bottles cost in dollars?'\nchoices = {'A': 'AB/2700', 'B': '27/AB', 'C': 'AB/270', 'D': '2700/AB', 'E': '100AB/27'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If 27 bottles of soda cost A cents,']\nnew_fact = infer_new_fact(selected) # '27 bottles cost A cents or A/100 dollars'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['27 bottles cost A cents or A/100 dollars']\nnew_fact = infer_new_fact(selected) # '1 bottle will cost = A/100/27 = A/2700'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how much will B bottles cost in dollars?', '1 bottle will cost = A/100/27 = A/2700']\nnew_fact = infer_new_fact(selected) # 'B bottles in dollars = B*A/2700 = AB/2700'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how much will B bottles cost in dollars?', 'A)AB/2700', '1 bottle will cost = A/100/27 = A/2700', 'B bottles in dollars = B*A/2700 = AB/2700']\nnew_fact = infer_new_fact(selected) # 'Hence, answer will be A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence, answer will be A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_236_6710a9d676", "context": "", "question": "A bag contains 11 candy bars: three cost 50 cents each, four cost $1 each and four cost $2\neach. How many ways can 3 candy bars be selected from the 11 candy bars so that the total cost is more than $4?", "options": ["A)8", "B)28", "C)46", "D)66", "E)70"], "rationale": "The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4\n3 + (7 C4\n2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11\n3 = 165. So the probability of them costing more than $4 if they are randomly chosen is\nC4\n3 + (7 C4\n2 )\nC11\n3\n=\n46/165\ncorrect answer C", "answer": "C", "textual_logical_units": {"1": "A bag contains 11 candy bars: three cost 50 cents each,", "2": "four cost $1 each and four cost $2\neach.", "3": "How many ways can 3 candy bars be selected from the 11 candy bars so that the total cost is more than $4?", "4": "A)8", "5": "B)28", "6": "C)46", "7": "D)66", "8": "E)70", "9": "The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4", "10": "3 + (7 C4", "11": "2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11", "12": "3 = 165. So the probability of them costing more than $4 if they are randomly chosen is", "13": "3 + (7 C4", "14": "46/165", "15": "correct answer C", "16": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [9, 10, 11], "consequent": 12}, {"antecedents": [11, 12], "consequent": 13}, {"antecedents": [12, 13], "consequent": 14}, {"antecedents": [3, 6, 11, 12, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = ['A bag contains 11 candy bars: three cost 50 cents each,', 'four cost $1 each and four cost $2\\neach.']\nquestion = 'How many ways can 3 candy bars be selected from the 11 candy bars so that the total cost is more than $4?'\nchoices = {'A': '8', 'B': '28', 'C': '46', 'D': '66', 'E': '70'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A bag contains 11 candy bars: three cost 50 cents each,', 'four cost $1 each and four cost $2\\neach.', 'How many ways can 3 candy bars be selected from the 11 candy bars so that the total cost is more than $4?']\nnew_fact = infer_new_fact(selected) # 'The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4']\nnew_fact = infer_new_fact(selected) # '3 + (7 C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4', '3 + (7 C4']\nnew_fact = infer_new_fact(selected) # '2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The ways of choosing 3 candy bars with a total cost over $4 include: choose 3 out of 4 (2 dollars each); choose 2 out of 4 (2 dollars each) and 1 from the other 7. So, the total number of ways is C4', '3 + (7 C4', '2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11']\nnew_fact = infer_new_fact(selected) # '3 = 165. So the probability of them costing more than $4 if they are randomly chosen is'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11', '3 = 165. So the probability of them costing more than $4 if they are randomly chosen is']\nnew_fact = infer_new_fact(selected) # '3 + (7 C4'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['3 = 165. So the probability of them costing more than $4 if they are randomly chosen is', '3 + (7 C4']\nnew_fact = infer_new_fact(selected) # '46/165'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many ways can 3 candy bars be selected from the 11 candy bars so that the total cost is more than $4?', 'C)46', '2 ) = 46. Incidentally, the total number ways of choosing 3 candy bars out of 11 is C11', '3 = 165. So the probability of them costing more than $4 if they are randomly chosen is', '46/165']\nnew_fact = infer_new_fact(selected) # 'correct answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['correct answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_237_3b603322dd", "context": "", "question": "At a conference, one team is made up of 4 men and 4 women. Four presenters are chosen to present the team's findings in front of the entire conference. How many different groups of presenters can be chosen from the team if a team cannot be composed of men only or women only? (Two groups of presenters are considered different if at least one presenter is different.)", "options": ["A)120", "B)19", "C)180", "D)420", "E)460"], "rationale": "No of ways = All ways to choose - ways using just men - ways using just women = C(8,4)-C(4,4)-C(4,4) = 21 - 1 - 1 = 19\nAnswer is (B)", "answer": "B", "textual_logical_units": {"1": "At a conference, one team is made up of 4 men and 4 women.", "2": "Four presenters are chosen to present the team's findings in front of the entire conference.", "3": "How many different groups of presenters can be chosen from the team if a team cannot be composed of men only or women only?", "4": "(Two groups of presenters are considered different if at least one presenter is different.)", "5": "A)120", "6": "B)19", "7": "C)180", "8": "D)420", "9": "E)460", "10": "No of ways = All ways to choose - ways using just men - ways using just women = C(8,4)-C(4,4)-C(4,4) = 21 - 1 - 1 = 19", "11": "Answer is (B)", "12": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3], "consequent": 10}, {"antecedents": [4, 6, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'At a conference, one team is made up of 4 men and 4 women.',\n  \"Four presenters are chosen to present the team's findings in front of the entire conference.\",\n  'How many different groups of presenters can be chosen from the team if a team cannot be composed of men only or women only?']\nquestion = '(Two groups of presenters are considered different if at least one presenter is different.)'\nchoices = {'A': '120', 'B': '19', 'C': '180', 'D': '420', 'E': '460'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At a conference, one team is made up of 4 men and 4 women.', \"Four presenters are chosen to present the team's findings in front of the entire conference.\", 'How many different groups of presenters can be chosen from the team if a team cannot be composed of men only or women only?']\nnew_fact = infer_new_fact(selected) # 'No of ways = All ways to choose - ways using just men - ways using just women = C(8,4)-C(4,4)-C(4,4) = 21 - 1 - 1 = 19'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['(Two groups of presenters are considered different if at least one presenter is different.)', 'B)19', 'No of ways = All ways to choose - ways using just men - ways using just women = C(8,4)-C(4,4)-C(4,4) = 21 - 1 - 1 = 19']\nnew_fact = infer_new_fact(selected) # 'Answer is (B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is (B)']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_238_8bb7e9571b", "context": "", "question": "Exactly 2/5th of the children in a certain class are girls. If there are 100 boys in the class, how many girls are in the class?", "options": ["A)50", "B)100", "C)150", "D)200", "E)70"], "rationale": "This means 2/5 of the class are boys\n2x/5=100\nx=250\ntherefore, girls = 150\nAnswer is C", "answer": "C", "textual_logical_units": {"1": "Exactly 2/5th of the children in a certain class are girls.", "2": "If there are 100 boys in the class,", "3": "how many girls are in the class?", "4": "A)50", "5": "B)100", "6": "C)150", "7": "D)200", "8": "E)70", "9": "This means 2/5 of the class are boys", "10": "2x/5=100", "11": "x=250", "12": "therefore, girls = 150", "13": "Answer is C", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}, {"antecedents": [1, 9, 10, 11], "consequent": 12}, {"antecedents": [3, 6, 9, 10, 11, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['Exactly 2/5th of the children in a certain class are girls.', 'If there are 100 boys in the class,']\nquestion = 'how many girls are in the class?'\nchoices = {'A': '50', 'B': '100', 'C': '150', 'D': '200', 'E': '70'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Exactly 2/5th of the children in a certain class are girls.']\nnew_fact = infer_new_fact(selected) # 'This means 2/5 of the class are boys'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there are 100 boys in the class,', 'This means 2/5 of the class are boys']\nnew_fact = infer_new_fact(selected) # '2x/5=100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['2x/5=100']\nnew_fact = infer_new_fact(selected) # 'x=250'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Exactly 2/5th of the children in a certain class are girls.', 'This means 2/5 of the class are boys', '2x/5=100', 'x=250']\nnew_fact = infer_new_fact(selected) # 'therefore, girls = 150'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many girls are in the class?', 'C)150', 'This means 2/5 of the class are boys', '2x/5=100', 'x=250', 'therefore, girls = 150']\nnew_fact = infer_new_fact(selected) # 'Answer is C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_239_b6c4ad306a", "context": "", "question": "Two numbers are said to be relatively prime if they share no common positive factors other than 1. Set S contains the set of integers from 1 to 1,000, inclusive. What is the probability that a number chosen from S is relatively prime to 1,000?", "options": ["A)5/7", "B)3/5", "C)4/7", "D)2/5", "E)2/7"], "rationale": "We need all numbers between 1 and 1000 that are co-prime.\nBetween 1 to 10 there are 4 : 1,3,7,9\nTake the period of 10's , we have 100 periods of 10's between 1 to 1000\nSo the total number of co-primes = 400\nNow, the simple part ...\nProbability = 400/1000 (i.e picking a co-prime from the first 1000 numbers )\nAns: 2/5 D", "answer": "D", "textual_logical_units": {"1": "Two numbers are said to be relatively prime if they share no common positive factors other than 1.", "2": "Set S contains the set of integers from 1 to 1,000, inclusive.", "3": "What is the probability that a number chosen from S is relatively prime to 1,000?", "4": "A)5/7", "5": "B)3/5", "6": "C)4/7", "7": "D)2/5", "8": "E)2/7", "9": "We need all numbers between 1 and 1000 that are co-prime.", "10": "Between 1 to 10 there are 4 : 1,3,7,9", "11": "Take the period of 10's , we have 100 periods of 10's between 1 to 1000", "12": "So the total number of co-primes = 400", "13": "Now, the simple part ...", "14": "Probability = 400/1000 (i.e picking a co-prime from the first 1000 numbers )", "15": "Ans: 2/5 D", "16": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [2, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [0], "consequent": 13}, {"antecedents": [3, 12], "consequent": 14}, {"antecedents": [3, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'Two numbers are said to be relatively prime if they share no common positive factors other than 1.',\n  'Set S contains the set of integers from 1 to 1,000, inclusive.']\nquestion = 'What is the probability that a number chosen from S is relatively prime to 1,000?'\nchoices = {'A': '5/7', 'B': '3/5', 'C': '4/7', 'D': '2/5', 'E': '2/7'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Set S contains the set of integers from 1 to 1,000, inclusive.', 'What is the probability that a number chosen from S is relatively prime to 1,000?']\nnew_fact = infer_new_fact(selected) # 'We need all numbers between 1 and 1000 that are co-prime.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['We need all numbers between 1 and 1000 that are co-prime.']\nnew_fact = infer_new_fact(selected) # 'Between 1 to 10 there are 4 : 1,3,7,9'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Set S contains the set of integers from 1 to 1,000, inclusive.', 'Between 1 to 10 there are 4 : 1,3,7,9']\nnew_fact = infer_new_fact(selected) # \"Take the period of 10's , we have 100 periods of 10's between 1 to 1000\"\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Take the period of 10's , we have 100 periods of 10's between 1 to 1000\"]\nnew_fact = infer_new_fact(selected) # 'So the total number of co-primes = 400'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Now, the simple part ...'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the probability that a number chosen from S is relatively prime to 1,000?', 'So the total number of co-primes = 400']\nnew_fact = infer_new_fact(selected) # 'Probability = 400/1000 (i.e picking a co-prime from the first 1000 numbers )'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the probability that a number chosen from S is relatively prime to 1,000?', 'Probability = 400/1000 (i.e picking a co-prime from the first 1000 numbers )']\nnew_fact = infer_new_fact(selected) # 'Ans: 2/5 D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Ans: 2/5 D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_240_0a91ae4120", "context": "", "question": "At the of his one-year investment, Charles received $54,080, including interest and principal from a certain investment. If the investment paid an annual interest of 8 percent compounded semi-annually, which of the following is the amount of money that Charles originally invested?", "options": ["A)$45,000", "B)$50,000", "C)$54,000", "D)$59,000", "E)$62,000"], "rationale": "You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X\nThus you can rule out options D-E as these options will make the original amount > the interest+principle amount\nOption C is very close to the amount after 1st year and 4% will definitely give you >80$ in interests.\nNow you only have 2 options left (A and B)\nPer the question, let x be the original amount invested ---> x(1.04)^2 = 54080 .@NL This clearly shows that answer must be B.\nANSWER:B", "answer": "B", "textual_logical_units": {"1": "At the of his one-year investment, Charles received $54,080, including interest and", "2": "principal from a certain investment.", "3": "If the investment paid an annual interest of 8 percent compounded semi-annually,", "4": "which of the following is the amount of money that Charles originally invested?", "5": "A)$45,000", "6": "B)$50,000", "7": "C)$54,000", "8": "D)$59,000", "9": "E)$62,000", "10": "You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X", "11": "Thus you can rule out options D-E as these options will make the original amount > the interest+principle amount", "12": "Option C is very close to the amount after 1st year and 4% will definitely give you >80$ in interests.", "13": "Now you only have 2 options left (A and B)", "14": "Per the question, let x be the original amount invested ---> x(1.04)^2 = 54080 .@NL This clearly shows that answer must be B.", "15": "ANSWER:B", "16": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 10}, {"antecedents": [1, 2, 8, 9, 10], "consequent": 11}, {"antecedents": [1, 3, 7, 10], "consequent": 12}, {"antecedents": [5, 6, 11, 12], "consequent": 13}, {"antecedents": [1, 3, 6, 10], "consequent": 14}, {"antecedents": [4, 14], "consequent": 15}, {"antecedents": [15], "consequent": 16}], "metadata": [], "code_input": "####\nfacts = [ 'At the of his one-year investment, Charles received $54,080, including interest and',\n  'principal from a certain investment.',\n  'If the investment paid an annual interest of 8 percent compounded semi-annually,']\nquestion = 'which of the following is the amount of money that Charles originally invested?'\nchoices = {'A': '$45,000', 'B': '$50,000', 'C': '$54,000', 'D': '$59,000', 'E': '$62,000'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['At the of his one-year investment, Charles received $54,080, including interest and']\nnew_fact = infer_new_fact(selected) # 'You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At the of his one-year investment, Charles received $54,080, including interest and', 'principal from a certain investment.', 'D)$59,000', 'E)$62,000', 'You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X']\nnew_fact = infer_new_fact(selected) # 'Thus you can rule out options D-E as these options will make the original amount > the interest+principle amount'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At the of his one-year investment, Charles received $54,080, including interest and', 'If the investment paid an annual interest of 8 percent compounded semi-annually,', 'C)$54,000', 'You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X']\nnew_fact = infer_new_fact(selected) # 'Option C is very close to the amount after 1st year and 4% will definitely give you >80$ in interests.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A)$45,000', 'B)$50,000', 'Thus you can rule out options D-E as these options will make the original amount > the interest+principle amount', 'Option C is very close to the amount after 1st year and 4% will definitely give you >80$ in interests.']\nnew_fact = infer_new_fact(selected) # 'Now you only have 2 options left (A and B)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['At the of his one-year investment, Charles received $54,080, including interest and', 'If the investment paid an annual interest of 8 percent compounded semi-annually,', 'B)$50,000', 'You are given that a certain investment gave you X $ after 1 year. So the original investment must be <X']\nnew_fact = infer_new_fact(selected) # 'Per the question, let x be the original amount invested ---> x(1.04)^2 = 54080 .@NL This clearly shows that answer must be B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['which of the following is the amount of money that Charles originally invested?', 'Per the question, let x be the original amount invested ---> x(1.04)^2 = 54080 .@NL This clearly shows that answer must be B.']\nnew_fact = infer_new_fact(selected) # 'ANSWER:B'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER:B']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_241_6b607f861d", "context": "", "question": "Joe's age, Joe's sister's age and Joe’s fathers age sums up to 100. When Joe is as old as his father, Joe's sister will be twice as old as now. When Joe is as old as his father then his father is twice as old as when his sister was as old as her father. Find the age of Joe's father?", "options": ["A)45", "B)48", "C)50", "D)55", "E)58"], "rationale": "Joe+Sister+Father=100\nAfter x years joe age is equal to his father\nJoe+x = father\nTherefore, Sister+x = 2 * Sister\n=> Sister=x\nJoe+Sister=Father\nTherefore,\n=> 2*Father = 100\n=> Father= 50\nHence (C) is the correct answer", "answer": "C", "textual_logical_units": {"1": "Joe's age, Joe's sister's age and", "2": "Joe’s fathers age sums up to 100.", "3": "When Joe is as old as his father,", "4": "Joe's sister will be twice as old as now.", "5": "When Joe is as old as his father then", "6": "his father is twice as old as when his sister was as old as her father.", "7": "Find the age of Joe's father?", "8": "A)45", "9": "B)48", "10": "C)50", "11": "D)55", "12": "E)58", "13": "Joe+Sister+Father=100", "14": "After x years joe age is equal to his father", "15": "Joe+x = father", "16": "Therefore, Sister+x = 2 * Sister", "17": "=> Sister=x", "18": "Joe+Sister=Father", "19": "Therefore,", "20": "=> 2*Father = 100", "21": "=> Father= 50", "22": "Hence (C) is the correct answer", "23": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 13}, {"antecedents": [5], "consequent": 14}, {"antecedents": [14], "consequent": 15}, {"antecedents": [4, 15], "consequent": 16}, {"antecedents": [16], "consequent": 17}, {"antecedents": [13, 15, 17], "consequent": 18}, {"antecedents": [0], "consequent": 19}, {"antecedents": [18], "consequent": 20}, {"antecedents": [20], "consequent": 21}, {"antecedents": [7, 21], "consequent": 22}, {"antecedents": [22], "consequent": 23}], "metadata": [], "code_input": "####\nfacts = [ \"Joe's age, Joe's sister's age and\",\n  'Joe’s fathers age sums up to 100.',\n  'When Joe is as old as his father,',\n  \"Joe's sister will be twice as old as now.\",\n  'When Joe is as old as his father then',\n  'his father is twice as old as when his sister was as old as her father.']\nquestion = \"Find the age of Joe's father?\"\nchoices = {'A': '45', 'B': '48', 'C': '50', 'D': '55', 'E': '58'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[\"Joe's age, Joe's sister's age and\", 'Joe’s fathers age sums up to 100.']\nnew_fact = infer_new_fact(selected) # 'Joe+Sister+Father=100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['When Joe is as old as his father then']\nnew_fact = infer_new_fact(selected) # 'After x years joe age is equal to his father'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['After x years joe age is equal to his father']\nnew_fact = infer_new_fact(selected) # 'Joe+x = father'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Joe's sister will be twice as old as now.\", 'Joe+x = father']\nnew_fact = infer_new_fact(selected) # 'Therefore, Sister+x = 2 * Sister'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, Sister+x = 2 * Sister']\nnew_fact = infer_new_fact(selected) # '=> Sister=x'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Joe+Sister+Father=100', 'Joe+x = father', '=> Sister=x']\nnew_fact = infer_new_fact(selected) # 'Joe+Sister=Father'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'Therefore,'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Joe+Sister=Father']\nnew_fact = infer_new_fact(selected) # '=> 2*Father = 100'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['=> 2*Father = 100']\nnew_fact = infer_new_fact(selected) # '=> Father= 50'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # [\"Find the age of Joe's father?\", '=> Father= 50']\nnew_fact = infer_new_fact(selected) # 'Hence (C) is the correct answer'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Hence (C) is the correct answer']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_242_c0fdbee38c", "context": "", "question": "If one third of 3/4 of a number is 21. Then, find the number?", "options": ["A)84", "B)66", "C)28", "D)19", "E)11"], "rationale": "x * 1/3 * 3/4 =21 => x = 84\nAnswer: A", "answer": "A", "textual_logical_units": {"1": "If one third of 3/4 of a number is 21.", "2": "Then, find the number?", "3": "A)84", "4": "B)66", "5": "C)28", "6": "D)19", "7": "E)11", "8": "x * 1/3 * 3/4 =21 => x = 84", "9": "Answer: A", "10": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 8}, {"antecedents": [2, 3, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = ['If one third of 3/4 of a number is 21.']\nquestion = 'Then, find the number?'\nchoices = {'A': '84', 'B': '66', 'C': '28', 'D': '19', 'E': '11'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['If one third of 3/4 of a number is 21.', 'Then, find the number?']\nnew_fact = infer_new_fact(selected) # 'x * 1/3 * 3/4 =21 => x = 84'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Then, find the number?', 'A)84', 'x * 1/3 * 3/4 =21 => x = 84']\nnew_fact = infer_new_fact(selected) # 'Answer: A'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer: A']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_243_3ea8e092c9", "context": "", "question": "If m > 0, y > 0, and x is m percent of 4y, then, in terms of y, m is what percentage of x?", "options": ["A)y/400", "B)4y", "C)50y", "D)2500/y", "E)5000/y"], "rationale": "x = (m/100)*4y\nm = 100x/4y = 25x/y\nm is (2500/y)% of x.\nThe answer is D.", "answer": "D", "textual_logical_units": {"1": "If m > 0, y > 0,", "2": "and x is m percent of 4y, then, in terms of y,", "3": "m is what percentage of x?", "4": "A)y/400", "5": "B)4y", "6": "C)50y", "7": "D)2500/y", "8": "E)5000/y", "9": "x = (m/100)*4y", "10": "m = 100x/4y = 25x/y", "11": "m is (2500/y)% of x.", "12": "The answer is D.", "13": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [2], "consequent": 9}, {"antecedents": [9], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [3, 7, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['If m > 0, y > 0,', 'and x is m percent of 4y, then, in terms of y,']\nquestion = 'm is what percentage of x?'\nchoices = {'A': 'y/400', 'B': '4y', 'C': '50y', 'D': '2500/y', 'E': '5000/y'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['and x is m percent of 4y, then, in terms of y,']\nnew_fact = infer_new_fact(selected) # 'x = (m/100)*4y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['x = (m/100)*4y']\nnew_fact = infer_new_fact(selected) # 'm = 100x/4y = 25x/y'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['m is what percentage of x?', 'm = 100x/4y = 25x/y']\nnew_fact = infer_new_fact(selected) # 'm is (2500/y)% of x.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['m is what percentage of x?', 'D)2500/y', 'm is (2500/y)% of x.']\nnew_fact = infer_new_fact(selected) # 'The answer is D.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is D.']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_244_cbbc026fa2", "context": "", "question": "A man wants to eat fruit for breakfast and vegetable for dinner. He has 6 different types of fruit and 8 different types of vegetables. He can only eat one type at a time. In how many ways can he eat breakfast and dinner.", "options": ["A)54", "B)24", "C)48", "D)20", "E)36"], "rationale": "Number of choices for fruit=6, number of choices for vegetable=8\nThe total number of combinations =8*6=48\nAnswer C", "answer": "C", "textual_logical_units": {"1": "A man wants to eat fruit for breakfast and vegetable for dinner.", "2": "He has 6 different types of fruit and", "3": "8 different types of vegetables.", "4": "He can only eat one type at a time.", "5": "In how many ways can he eat breakfast and dinner.", "6": "A)54", "7": "B)24", "8": "C)48", "9": "D)20", "10": "E)36", "11": "Number of choices for fruit=6, number of choices for vegetable=8", "12": "The total number of combinations =8*6=48", "13": "Answer C", "14": "The answer is C"}, "reasoning_graph_edges": [{"antecedents": [2, 3, 5], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [5, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'A man wants to eat fruit for breakfast and vegetable for dinner.',\n  'He has 6 different types of fruit and',\n  '8 different types of vegetables.',\n  'He can only eat one type at a time.']\nquestion = 'In how many ways can he eat breakfast and dinner.'\nchoices = {'A': '54', 'B': '24', 'C': '48', 'D': '20', 'E': '36'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['He has 6 different types of fruit and', '8 different types of vegetables.', 'In how many ways can he eat breakfast and dinner.']\nnew_fact = infer_new_fact(selected) # 'Number of choices for fruit=6, number of choices for vegetable=8'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Number of choices for fruit=6, number of choices for vegetable=8']\nnew_fact = infer_new_fact(selected) # 'The total number of combinations =8*6=48'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['In how many ways can he eat breakfast and dinner.', 'C)48', 'The total number of combinations =8*6=48']\nnew_fact = infer_new_fact(selected) # 'Answer C'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer C']\nnew_fact = infer_new_fact(selected) # 'The answer is C'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'C'"}
{"id": "AQUA-RAT_245_ae01b8d997", "context": "", "question": "There is a 90% chance that a registered voter in Burghtown voted in the last election. If five registered voters are chosen at random, what is the approximate likelihood that exactly four of them voted in the last election?", "options": ["A)26.2%", "B)32.8%", "C)43.7%", "D)59.0%", "E)65.6%"], "rationale": "The probability that four of five voted is :\nP(1st one voted) X ... X P(4th one voted) X (5th one NOT voted)\n= 0.9 x 0.9 x 0.9 x 0.9 x 0.1\n= 0.81 x 0.81 x 0.1 = 0.6561\nANSWER: E", "answer": "E", "textual_logical_units": {"1": "There is a 90% chance that a registered voter in Burghtown voted in the last election.", "2": "If five registered voters are chosen at random,", "3": "what is the approximate likelihood that exactly four of them voted in the last election?", "4": "A)26.2%", "5": "B)32.8%", "6": "C)43.7%", "7": "D)59.0%", "8": "E)65.6%", "9": "The probability that four of five voted is :", "10": "P(1st one voted) X ... X P(4th one voted) X (5th one NOT voted)", "11": "= 0.9 x 0.9 x 0.9 x 0.9 x 0.1", "12": "= 0.81 x 0.81 x 0.1 = 0.6561", "13": "ANSWER: E", "14": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [1, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [3, 8, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = ['There is a 90% chance that a registered voter in Burghtown voted in the last election.', 'If five registered voters are chosen at random,']\nquestion = 'what is the approximate likelihood that exactly four of them voted in the last election?'\nchoices = {'A': '26.2%', 'B': '32.8%', 'C': '43.7%', 'D': '59.0%', 'E': '65.6%'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'The probability that four of five voted is :'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If five registered voters are chosen at random,', 'what is the approximate likelihood that exactly four of them voted in the last election?', 'The probability that four of five voted is :']\nnew_fact = infer_new_fact(selected) # 'P(1st one voted) X ... X P(4th one voted) X (5th one NOT voted)'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['There is a 90% chance that a registered voter in Burghtown voted in the last election.', 'P(1st one voted) X ... X P(4th one voted) X (5th one NOT voted)']\nnew_fact = infer_new_fact(selected) # '= 0.9 x 0.9 x 0.9 x 0.9 x 0.1'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['= 0.9 x 0.9 x 0.9 x 0.9 x 0.1']\nnew_fact = infer_new_fact(selected) # '= 0.81 x 0.81 x 0.1 = 0.6561'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['what is the approximate likelihood that exactly four of them voted in the last election?', 'E)65.6%', '= 0.81 x 0.81 x 0.1 = 0.6561']\nnew_fact = infer_new_fact(selected) # 'ANSWER: E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['ANSWER: E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_246_db482d8c50", "context": "", "question": "Alice wants to put up fencing around three sides of her rectangular yard and leave one side of 10 meters unfenced. If the yard has an area of 240 square meters, how many meters of fencing does she need?", "options": ["A)58", "B)62", "C)66", "D)70", "E)74"], "rationale": "The sides of the rectangle have a length of 10 and L.\nThe area is 10*L=240 so L=24.\nShe needs fencing with a length of 10+2*24=58 meters.\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "Alice wants to put up fencing around three sides of her rectangular yard and", "2": "leave one side of 10 meters unfenced.", "3": "If the yard has an area of 240 square meters,", "4": "how many meters of fencing does she need?", "5": "A)58", "6": "B)62", "7": "C)66", "8": "D)70", "9": "E)74", "10": "The sides of the rectangle have a length of 10 and L.", "11": "The area is 10*L=240 so L=24.", "12": "She needs fencing with a length of 10+2*24=58 meters.", "13": "The answer is A.", "14": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1, 2], "consequent": 10}, {"antecedents": [3, 10], "consequent": 11}, {"antecedents": [4, 11], "consequent": 12}, {"antecedents": [4, 5, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'Alice wants to put up fencing around three sides of her rectangular yard and',\n  'leave one side of 10 meters unfenced.',\n  'If the yard has an area of 240 square meters,']\nquestion = 'how many meters of fencing does she need?'\nchoices = {'A': '58', 'B': '62', 'C': '66', 'D': '70', 'E': '74'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Alice wants to put up fencing around three sides of her rectangular yard and', 'leave one side of 10 meters unfenced.']\nnew_fact = infer_new_fact(selected) # 'The sides of the rectangle have a length of 10 and L.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If the yard has an area of 240 square meters,', 'The sides of the rectangle have a length of 10 and L.']\nnew_fact = infer_new_fact(selected) # 'The area is 10*L=240 so L=24.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many meters of fencing does she need?', 'The area is 10*L=240 so L=24.']\nnew_fact = infer_new_fact(selected) # 'She needs fencing with a length of 10+2*24=58 meters.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many meters of fencing does she need?', 'A)58', 'She needs fencing with a length of 10+2*24=58 meters.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_247_6434dd9a98", "context": "", "question": "John would make the 3-letter codes with diffenrent 5 vowels and 20 consonants with the condition that the middle letter must be vowel and the first letter and the third letter must be different from each other and are both consonant. How many different codes can be made?", "options": ["A)1,980", "B)2,020", "C)2,100", "D)2,200", "E)1,900"], "rationale": "There should be a vowel in the middle of the 3-letter code, which means that 5 letters can be in the middle. Then, 20 letters can be placed in the first letter and 19 letters can be placed in the last letter as they should be different letters. Thus, 20*5*19=1,900.\nTherefore, the answer is E.", "answer": "E", "textual_logical_units": {"1": "John would make the 3-letter codes with diffenrent 5 vowels and", "2": "20 consonants with the condition that the middle letter must be vowel and the first letter and", "3": "the third letter must be different from each other and are both consonant.", "4": "How many different codes can be made?", "5": "A)1,980", "6": "B)2,020", "7": "C)2,100", "8": "D)2,200", "9": "E)1,900", "10": "There should be a vowel in the middle of the 3-letter code, which means that 5 letters can be in the middle. Then, 20 letters can be placed in the first letter and 19 letters can be placed in the last letter as they should be different letters. Thus, 20*5*19=1,900.", "11": "Therefore, the answer is E.", "12": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1, 2, 3, 4], "consequent": 10}, {"antecedents": [4, 9, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = [ 'John would make the 3-letter codes with diffenrent 5 vowels and',\n  '20 consonants with the condition that the middle letter must be vowel and the first letter and',\n  'the third letter must be different from each other and are both consonant.']\nquestion = 'How many different codes can be made?'\nchoices = {'A': '1,980', 'B': '2,020', 'C': '2,100', 'D': '2,200', 'E': '1,900'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['John would make the 3-letter codes with diffenrent 5 vowels and', '20 consonants with the condition that the middle letter must be vowel and the first letter and', 'the third letter must be different from each other and are both consonant.', 'How many different codes can be made?']\nnew_fact = infer_new_fact(selected) # 'There should be a vowel in the middle of the 3-letter code, which means that 5 letters can be in the middle. Then, 20 letters can be placed in the first letter and 19 letters can be placed in the last letter as they should be different letters. Thus, 20*5*19=1,900.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many different codes can be made?', 'E)1,900', 'There should be a vowel in the middle of the 3-letter code, which means that 5 letters can be in the middle. Then, 20 letters can be placed in the first letter and 19 letters can be placed in the last letter as they should be different letters. Thus, 20*5*19=1,900.']\nnew_fact = infer_new_fact(selected) # 'Therefore, the answer is E.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Therefore, the answer is E.']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_248_78eeb17492", "context": "", "question": "What is the sum of three consecutive integers whose product can be expressed as 727+728+729.", "options": ["A)37", "B)38", "C)36", "D)30", "E)39"], "rationale": "The addition of any 3 consecutive numbers is always divisible by 3\nthat rules out options a,b,c\nNow focus on options 30 and 39\nIf we consider\n12, 13, 14 the sum is 39\nAnswer = E", "answer": "E", "textual_logical_units": {"1": "What is the sum of three consecutive integers whose product can be expressed as 727+728+729.", "2": "A)37", "3": "B)38", "4": "C)36", "5": "D)30", "6": "E)39", "7": "The addition of any 3 consecutive numbers is always divisible by 3", "8": "that rules out options a,b,c", "9": "Now focus on options 30 and 39", "10": "If we consider", "11": "12, 13, 14 the sum is 39", "12": "Answer = E", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [0], "consequent": 7}, {"antecedents": [2, 3, 4, 7], "consequent": 8}, {"antecedents": [8], "consequent": 9}, {"antecedents": [0], "consequent": 10}, {"antecedents": [0], "consequent": 11}, {"antecedents": [1, 6, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'What is the sum of three consecutive integers whose product can be expressed as 727+728+729.'\nchoices = {'A': '37', 'B': '38', 'C': '36', 'D': '30', 'E': '39'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "[]\nnew_fact = infer_new_fact(selected) # 'The addition of any 3 consecutive numbers is always divisible by 3'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['A)37', 'B)38', 'C)36', 'The addition of any 3 consecutive numbers is always divisible by 3']\nnew_fact = infer_new_fact(selected) # 'that rules out options a,b,c'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['that rules out options a,b,c']\nnew_fact = infer_new_fact(selected) # 'Now focus on options 30 and 39'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # 'If we consider'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # []\nnew_fact = infer_new_fact(selected) # '12, 13, 14 the sum is 39'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['What is the sum of three consecutive integers whose product can be expressed as 727+728+729.', 'E)39', '12, 13, 14 the sum is 39']\nnew_fact = infer_new_fact(selected) # 'Answer = E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer = E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_249_6df8b20143", "context": "", "question": "The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is", "options": ["A)120 litres", "B)1200 litres", "C)12000 litres", "D)120000 litres", "E)None of these"], "rationale": "Capacity of the bank = Volume of the bank\n= (8x100x6x100x2.5x100/1000) =\nanswer D", "answer": "D", "textual_logical_units": {"1": "The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is", "2": "A)120 litres", "3": "B)1200 litres", "4": "C)12000 litres", "5": "D)120000 litres", "6": "E)None of these", "7": "Capacity of the bank = Volume of the bank", "8": "= (8x100x6x100x2.5x100/1000) =", "9": "answer D", "10": "The answer is D"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 7}, {"antecedents": [1, 7], "consequent": 8}, {"antecedents": [1, 5, 8], "consequent": 9}, {"antecedents": [9], "consequent": 10}], "metadata": [], "code_input": "####\nfacts = []\nquestion = 'The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is'\nchoices = {'A': '120 litres', 'B': '1200 litres', 'C': '12000 litres', 'D': '120000 litres', 'E': 'None of these'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is']\nnew_fact = infer_new_fact(selected) # 'Capacity of the bank = Volume of the bank'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is', 'Capacity of the bank = Volume of the bank']\nnew_fact = infer_new_fact(selected) # '= (8x100x6x100x2.5x100/1000) ='\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The capacity of a tank of dimensions (8 m × 6 m × 2.5 m) is', 'D)120000 litres', '= (8x100x6x100x2.5x100/1000) =']\nnew_fact = infer_new_fact(selected) # 'answer D'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['answer D']\nnew_fact = infer_new_fact(selected) # 'The answer is D'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'D'"}
{"id": "AQUA-RAT_250_8bf8f1fcb9", "context": "", "question": "The population of a city is 5265526. If there are 4169516 adults in the city, how many children are there in the city?", "options": ["A)1095961", "B)1065961", "C)1085961", "D)1097961", "E)1096061"], "rationale": "Population of the city = 5265526\nNumber of adults = 4169516\nNumber of children = 5265526-4169516 = 1096061\nAnswer :E", "answer": "E", "textual_logical_units": {"1": "The population of a city is 5265526.", "2": "If there are 4169516 adults in the city,", "3": "how many children are there in the city?", "4": "A)1095961", "5": "B)1065961", "6": "C)1085961", "7": "D)1097961", "8": "E)1096061", "9": "Population of the city = 5265526", "10": "Number of adults = 4169516", "11": "Number of children = 5265526-4169516 = 1096061", "12": "Answer :E", "13": "The answer is E"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2], "consequent": 10}, {"antecedents": [9, 10], "consequent": 11}, {"antecedents": [3, 8, 11], "consequent": 12}, {"antecedents": [12], "consequent": 13}], "metadata": [], "code_input": "####\nfacts = ['The population of a city is 5265526.', 'If there are 4169516 adults in the city,']\nquestion = 'how many children are there in the city?'\nchoices = {'A': '1095961', 'B': '1065961', 'C': '1085961', 'D': '1097961', 'E': '1096061'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['The population of a city is 5265526.']\nnew_fact = infer_new_fact(selected) # 'Population of the city = 5265526'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If there are 4169516 adults in the city,']\nnew_fact = infer_new_fact(selected) # 'Number of adults = 4169516'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Population of the city = 5265526', 'Number of adults = 4169516']\nnew_fact = infer_new_fact(selected) # 'Number of children = 5265526-4169516 = 1096061'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many children are there in the city?', 'E)1096061', 'Number of children = 5265526-4169516 = 1096061']\nnew_fact = infer_new_fact(selected) # 'Answer :E'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer :E']\nnew_fact = infer_new_fact(selected) # 'The answer is E'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'E'"}
{"id": "AQUA-RAT_251_9ef8f91593", "context": "", "question": "It takes a worker 9 minutes to drive from home to work at an average rate of 20 kilometers per hour. How many minutes will it take the worker to cycle from home to work along the same route at an average rate of 6 kilometers per hour?", "options": ["A)30", "B)32", "C)35", "D)36", "E)40"], "rationale": "distance = time*speed = (9/60)(20) kilometers\ntime to bike = distance/speed = (9*20)/(60*6) = 30/60 hours = 30 minutes.\nThe answer is A.", "answer": "A", "textual_logical_units": {"1": "It takes a worker 9 minutes to drive from home to work at an average rate of 20 kilometers per hour.", "2": "How many minutes will it take the worker to cycle from home to work along the same route at an average rate of 6 kilometers per hour?", "3": "A)30", "4": "B)32", "5": "C)35", "6": "D)36", "7": "E)40", "8": "distance = time*speed = (9/60)(20) kilometers", "9": "time to bike = distance/speed = (9*20)/(60*6) = 30/60 hours = 30 minutes.", "10": "The answer is A.", "11": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 8}, {"antecedents": [2, 8], "consequent": 9}, {"antecedents": [2, 3, 9], "consequent": 10}, {"antecedents": [10], "consequent": 11}], "metadata": [], "code_input": "####\nfacts = ['It takes a worker 9 minutes to drive from home to work at an average rate of 20 kilometers per hour.']\nquestion = 'How many minutes will it take the worker to cycle from home to work along the same route at an average rate of 6 kilometers per hour?'\nchoices = {'A': '30', 'B': '32', 'C': '35', 'D': '36', 'E': '40'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['It takes a worker 9 minutes to drive from home to work at an average rate of 20 kilometers per hour.']\nnew_fact = infer_new_fact(selected) # 'distance = time*speed = (9/60)(20) kilometers'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many minutes will it take the worker to cycle from home to work along the same route at an average rate of 6 kilometers per hour?', 'distance = time*speed = (9/60)(20) kilometers']\nnew_fact = infer_new_fact(selected) # 'time to bike = distance/speed = (9*20)/(60*6) = 30/60 hours = 30 minutes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['How many minutes will it take the worker to cycle from home to work along the same route at an average rate of 6 kilometers per hour?', 'A)30', 'time to bike = distance/speed = (9*20)/(60*6) = 30/60 hours = 30 minutes.']\nnew_fact = infer_new_fact(selected) # 'The answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
{"id": "AQUA-RAT_252_d3cd73be7b", "context": "", "question": "Two friends are eating a jar full of candies. Had P eaten alone, it would have taken him 10 minutes to finish the candies in the jar. Had Q eaten alone, it would have taken her 5 minutes to finish half the jar. Since both of them are eating simultaneously, how many minutes would it take them to empty the jar?", "options": ["A)4", "B)5", "C)6", "D)7", "E)8"], "rationale": "Together they eat 1/10 + 1/10 = 1/5 of the jar per minute.\nThe time to finish the jar is 5 minutes.\nThe answer is B.", "answer": "B", "textual_logical_units": {"1": "Two friends are eating a jar full of candies.", "2": "Had P eaten alone, it would have taken him 10 minutes to finish the candies in the jar.", "3": "Had Q eaten alone, it would have taken her 5 minutes to finish half the jar.", "4": "Since both of them are eating simultaneously,", "5": "how many minutes would it take them to empty the jar?", "6": "A)4", "7": "B)5", "8": "C)6", "9": "D)7", "10": "E)8", "11": "Together they eat 1/10 + 1/10 = 1/5 of the jar per minute.", "12": "The time to finish the jar is 5 minutes.", "13": "The answer is B.", "14": "The answer is B"}, "reasoning_graph_edges": [{"antecedents": [2, 3], "consequent": 11}, {"antecedents": [11], "consequent": 12}, {"antecedents": [5, 7, 12], "consequent": 13}, {"antecedents": [13], "consequent": 14}], "metadata": [], "code_input": "####\nfacts = [ 'Two friends are eating a jar full of candies.',\n  'Had P eaten alone, it would have taken him 10 minutes to finish the candies in the jar.',\n  'Had Q eaten alone, it would have taken her 5 minutes to finish half the jar.',\n  'Since both of them are eating simultaneously,']\nquestion = 'how many minutes would it take them to empty the jar?'\nchoices = {'A': '4', 'B': '5', 'C': '6', 'D': '7', 'E': '8'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['Had P eaten alone, it would have taken him 10 minutes to finish the candies in the jar.', 'Had Q eaten alone, it would have taken her 5 minutes to finish half the jar.']\nnew_fact = infer_new_fact(selected) # 'Together they eat 1/10 + 1/10 = 1/5 of the jar per minute.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Together they eat 1/10 + 1/10 = 1/5 of the jar per minute.']\nnew_fact = infer_new_fact(selected) # 'The time to finish the jar is 5 minutes.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how many minutes would it take them to empty the jar?', 'B)5', 'The time to finish the jar is 5 minutes.']\nnew_fact = infer_new_fact(selected) # 'The answer is B.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['The answer is B.']\nnew_fact = infer_new_fact(selected) # 'The answer is B'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'B'"}
{"id": "AQUA-RAT_253_3840d7a107", "context": "", "question": "A grocery sells a bag of ice for $1.25, and makes 20% profit. If it sells 500 bags of ice, how much total profit does it make?", "options": ["A)125", "B)150", "C)225", "D)250", "E)275"], "rationale": "Profit per bag = 1.25 * 0.20 = 0.25\nTotal profit = 500 * 0.25 = 125\nAnswer is A.", "answer": "A", "textual_logical_units": {"1": "A grocery sells a bag of ice for $1.25, and makes 20% profit.", "2": "If it sells 500 bags of ice,", "3": "how much total profit does it make?", "4": "A)125", "5": "B)150", "6": "C)225", "7": "D)250", "8": "E)275", "9": "Profit per bag = 1.25 * 0.20 = 0.25", "10": "Total profit = 500 * 0.25 = 125", "11": "Answer is A.", "12": "The answer is A"}, "reasoning_graph_edges": [{"antecedents": [1], "consequent": 9}, {"antecedents": [2, 9], "consequent": 10}, {"antecedents": [3, 4, 10], "consequent": 11}, {"antecedents": [11], "consequent": 12}], "metadata": [], "code_input": "####\nfacts = ['A grocery sells a bag of ice for $1.25, and makes 20% profit.', 'If it sells 500 bags of ice,']\nquestion = 'how much total profit does it make?'\nchoices = {'A': '125', 'B': '150', 'C': '225', 'D': '250', 'E': '275'}\nanswer = None\n# call select_facts and infer_new_fact until answer is set\nselected = select_facts(facts) # ", "code_output": "['A grocery sells a bag of ice for $1.25, and makes 20% profit.']\nnew_fact = infer_new_fact(selected) # 'Profit per bag = 1.25 * 0.20 = 0.25'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['If it sells 500 bags of ice,', 'Profit per bag = 1.25 * 0.20 = 0.25']\nnew_fact = infer_new_fact(selected) # 'Total profit = 500 * 0.25 = 125'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['how much total profit does it make?', 'A)125', 'Total profit = 500 * 0.25 = 125']\nnew_fact = infer_new_fact(selected) # 'Answer is A.'\nis_solved(new_fact, choices) # False\nfacts.append(new_fact)\n\nselected = select_facts(facts) # ['Answer is A.']\nnew_fact = infer_new_fact(selected) # 'The answer is A'\nis_solved(new_fact, choices) # True\nanswer = make_choice(new_fact, choices) # 'A'"}
